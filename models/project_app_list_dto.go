// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProjectAppListDto project app list dto
//
// swagger:model ProjectAppListDto
type ProjectAppListDto struct {

	// app repo name
	AppRepoName string `json:"appRepoName,omitempty"`

	// auto sync
	AutoSync bool `json:"autoSync"`

	// catalog app name
	CatalogAppName string `json:"catalogAppName,omitempty"`

	// catalog Id
	CatalogID int32 `json:"catalogId,omitempty"`

	// catalog name
	CatalogName string `json:"catalogName,omitempty"`

	// created
	Created string `json:"created,omitempty"`

	// created by
	CreatedBy string `json:"createdBy,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// last modified
	LastModified string `json:"lastModified,omitempty"`

	// last modified by
	LastModifiedBy string `json:"lastModifiedBy,omitempty"`

	// logo
	Logo string `json:"logo,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// project Id
	ProjectID int32 `json:"projectId,omitempty"`

	// project name
	ProjectName string `json:"projectName,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// version
	Version string `json:"version,omitempty"`
}

// Validate validates this project app list dto
func (m *ProjectAppListDto) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project app list dto based on context it is used
func (m *ProjectAppListDto) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProjectAppListDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProjectAppListDto) UnmarshalBinary(b []byte) error {
	var res ProjectAppListDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
