// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ProjectStatus project status
//
// swagger:model ProjectStatus
type ProjectStatus int32

// for schema
var projectStatusEnum []interface{}

func init() {
	var res []ProjectStatus
	if err := json.Unmarshal([]byte(`[50,100,150,154,155,156,160,200,250,300,400,500,550,600,700,800,900,1000,1100]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		projectStatusEnum = append(projectStatusEnum, v)
	}
}

func (m ProjectStatus) validateProjectStatusEnum(path, location string, value ProjectStatus) error {
	if err := validate.EnumCase(path, location, value, projectStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this project status
func (m ProjectStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateProjectStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this project status based on context it is used
func (m ProjectStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
