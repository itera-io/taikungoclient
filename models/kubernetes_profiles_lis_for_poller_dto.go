// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// KubernetesProfilesLisForPollerDto kubernetes profiles lis for poller dto
//
// swagger:model KubernetesProfilesLisForPollerDto
type KubernetesProfilesLisForPollerDto struct {

	// allow scheduling on master
	AllowSchedulingOnMaster bool `json:"allowSchedulingOnMaster"`

	// cni
	Cni string `json:"cni,omitempty"`

	// expose node port on bastion
	ExposeNodePortOnBastion bool `json:"exposeNodePortOnBastion"`

	// id
	ID int32 `json:"id,omitempty"`

	// is locked
	IsLocked bool `json:"isLocked"`

	// name
	Name string `json:"name,omitempty"`

	// octavia enabled
	OctaviaEnabled bool `json:"octaviaEnabled"`

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// organization name
	OrganizationName string `json:"organizationName,omitempty"`

	// proxmox storage
	ProxmoxStorage string `json:"proxmoxStorage,omitempty"`

	// taikun l b enabled
	TaikunLBEnabled bool `json:"taikunLBEnabled"`

	// unique cluster name
	UniqueClusterName bool `json:"uniqueClusterName"`
}

// Validate validates this kubernetes profiles lis for poller dto
func (m *KubernetesProfilesLisForPollerDto) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes profiles lis for poller dto based on context it is used
func (m *KubernetesProfilesLisForPollerDto) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *KubernetesProfilesLisForPollerDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *KubernetesProfilesLisForPollerDto) UnmarshalBinary(b []byte) error {
	var res KubernetesProfilesLisForPollerDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
