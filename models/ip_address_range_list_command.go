// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IPAddressRangeListCommand Ip address range list command
//
// swagger:model IpAddressRangeListCommand
type IPAddressRangeListCommand struct {

	// gateway
	Gateway string `json:"gateway,omitempty"`

	// ip address
	IPAddress string `json:"ipAddress,omitempty"`

	// net mask
	// Maximum: 28
	// Minimum: 16
	NetMask int32 `json:"netMask,omitempty"`
}

// Validate validates this Ip address range list command
func (m *IPAddressRangeListCommand) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNetMask(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IPAddressRangeListCommand) validateNetMask(formats strfmt.Registry) error {
	if swag.IsZero(m.NetMask) { // not required
		return nil
	}

	if err := validate.MinimumInt("netMask", "body", int64(m.NetMask), 16, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("netMask", "body", int64(m.NetMask), 28, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this Ip address range list command based on context it is used
func (m *IPAddressRangeListCommand) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IPAddressRangeListCommand) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IPAddressRangeListCommand) UnmarshalBinary(b []byte) error {
	var res IPAddressRangeListCommand
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
