// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OrganizationCreateCommand organization create command
//
// swagger:model OrganizationCreateCommand
type OrganizationCreateCommand struct {

	// address
	Address string `json:"address,omitempty"`

	// admin cloud credential Id
	AdminCloudCredentialID int32 `json:"adminCloudCredentialId,omitempty"`

	// billing email
	BillingEmail string `json:"billingEmail,omitempty"`

	// city
	City string `json:"city,omitempty"`

	// country
	Country string `json:"country,omitempty"`

	// discount rate
	DiscountRate float64 `json:"discountRate"`

	// email
	Email string `json:"email,omitempty"`

	// full name
	// Required: true
	// Max Length: 200
	// Min Length: 3
	FullName *string `json:"fullName"`

	// is eligible update subscription
	IsEligibleUpdateSubscription bool `json:"isEligibleUpdateSubscription"`

	// name
	// Required: true
	// Max Length: 30
	// Min Length: 3
	Name *string `json:"name"`

	// phone
	Phone string `json:"phone,omitempty"`

	// vat number
	VatNumber string `json:"vatNumber,omitempty"`
}

// Validate validates this organization create command
func (m *OrganizationCreateCommand) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFullName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OrganizationCreateCommand) validateFullName(formats strfmt.Registry) error {

	if err := validate.Required("fullName", "body", m.FullName); err != nil {
		return err
	}

	if err := validate.MinLength("fullName", "body", *m.FullName, 3); err != nil {
		return err
	}

	if err := validate.MaxLength("fullName", "body", *m.FullName, 200); err != nil {
		return err
	}

	return nil
}

func (m *OrganizationCreateCommand) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	if err := validate.MinLength("name", "body", *m.Name, 3); err != nil {
		return err
	}

	if err := validate.MaxLength("name", "body", *m.Name, 30); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this organization create command based on context it is used
func (m *OrganizationCreateCommand) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OrganizationCreateCommand) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OrganizationCreateCommand) UnmarshalBinary(b []byte) error {
	var res OrganizationCreateCommand
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
