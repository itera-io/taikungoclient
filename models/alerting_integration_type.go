// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AlertingIntegrationType alerting integration type
//
// swagger:model AlertingIntegrationType
type AlertingIntegrationType int32

// for schema
var alertingIntegrationTypeEnum []interface{}

func init() {
	var res []AlertingIntegrationType
	if err := json.Unmarshal([]byte(`[100,200,300,400]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		alertingIntegrationTypeEnum = append(alertingIntegrationTypeEnum, v)
	}
}

func (m AlertingIntegrationType) validateAlertingIntegrationTypeEnum(path, location string, value AlertingIntegrationType) error {
	if err := validate.EnumCase(path, location, value, alertingIntegrationTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this alerting integration type
func (m AlertingIntegrationType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAlertingIntegrationTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this alerting integration type based on context it is used
func (m AlertingIntegrationType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
