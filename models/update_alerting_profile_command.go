// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateAlertingProfileCommand update alerting profile command
//
// swagger:model UpdateAlertingProfileCommand
type UpdateAlertingProfileCommand struct {

	// id
	// Required: true
	// Minimum: > 0
	ID *int32 `json:"id"`

	// name
	Name string `json:"name,omitempty"`

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// reminder
	Reminder AlertingReminder `json:"reminder,omitempty"`

	// slack configuration Id
	SlackConfigurationID int32 `json:"slackConfigurationId,omitempty"`
}

// Validate validates this update alerting profile command
func (m *UpdateAlertingProfileCommand) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReminder(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdateAlertingProfileCommand) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	if err := validate.MinimumInt("id", "body", int64(*m.ID), 0, true); err != nil {
		return err
	}

	return nil
}

func (m *UpdateAlertingProfileCommand) validateReminder(formats strfmt.Registry) error {
	if swag.IsZero(m.Reminder) { // not required
		return nil
	}

	if err := m.Reminder.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("reminder")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("reminder")
		}
		return err
	}

	return nil
}

// ContextValidate validate this update alerting profile command based on the context it is used
func (m *UpdateAlertingProfileCommand) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateReminder(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdateAlertingProfileCommand) contextValidateReminder(ctx context.Context, formats strfmt.Registry) error {

	if err := m.Reminder.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("reminder")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("reminder")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UpdateAlertingProfileCommand) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateAlertingProfileCommand) UnmarshalBinary(b []byte) error {
	var res UpdateAlertingProfileCommand
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
