// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AllowedHostCreateDto allowed host create dto
//
// swagger:model AllowedHostCreateDto
type AllowedHostCreateDto struct {

	// description
	Description string `json:"description,omitempty"`

	// ip address
	// Required: true
	// Min Length: 1
	IPAddress *string `json:"ipAddress"`

	// mask bits
	// Maximum: 32
	// Minimum: 0
	MaskBits *int32 `json:"maskBits,omitempty"`
}

// Validate validates this allowed host create dto
func (m *AllowedHostCreateDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIPAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMaskBits(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AllowedHostCreateDto) validateIPAddress(formats strfmt.Registry) error {

	if err := validate.Required("ipAddress", "body", m.IPAddress); err != nil {
		return err
	}

	if err := validate.MinLength("ipAddress", "body", *m.IPAddress, 1); err != nil {
		return err
	}

	return nil
}

func (m *AllowedHostCreateDto) validateMaskBits(formats strfmt.Registry) error {
	if swag.IsZero(m.MaskBits) { // not required
		return nil
	}

	if err := validate.MinimumInt("maskBits", "body", int64(*m.MaskBits), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("maskBits", "body", int64(*m.MaskBits), 32, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this allowed host create dto based on context it is used
func (m *AllowedHostCreateDto) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AllowedHostCreateDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AllowedHostCreateDto) UnmarshalBinary(b []byte) error {
	var res AllowedHostCreateDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
