// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// PrometheusType prometheus type
//
// swagger:model PrometheusType
type PrometheusType int32

// for schema
var prometheusTypeEnum []interface{}

func init() {
	var res []PrometheusType
	if err := json.Unmarshal([]byte(`[100,200]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		prometheusTypeEnum = append(prometheusTypeEnum, v)
	}
}

func (m PrometheusType) validatePrometheusTypeEnum(path, location string, value PrometheusType) error {
	if err := validate.EnumCase(path, location, value, prometheusTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this prometheus type
func (m PrometheusType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePrometheusTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this prometheus type based on context it is used
func (m PrometheusType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
