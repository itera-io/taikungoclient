// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// BoundImagesForProjectsListDto bound images for projects list dto
//
// swagger:model BoundImagesForProjectsListDto
type BoundImagesForProjectsListDto struct {

	// cloud Id
	CloudID int32 `json:"cloudId,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// image Id
	ImageID string `json:"imageId,omitempty"`

	// is aws
	IsAws bool `json:"isAws"`

	// is azure
	IsAzure bool `json:"isAzure"`

	// is openstack
	IsOpenstack bool `json:"isOpenstack"`

	// is windows
	IsWindows bool `json:"isWindows"`

	// name
	Name string `json:"name,omitempty"`

	// project Id
	ProjectID int32 `json:"projectId,omitempty"`

	// project name
	ProjectName string `json:"projectName,omitempty"`

	// size
	Size float64 `json:"size,omitempty"`
}

// Validate validates this bound images for projects list dto
func (m *BoundImagesForProjectsListDto) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this bound images for projects list dto based on context it is used
func (m *BoundImagesForProjectsListDto) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *BoundImagesForProjectsListDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BoundImagesForProjectsListDto) UnmarshalBinary(b []byte) error {
	var res BoundImagesForProjectsListDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
