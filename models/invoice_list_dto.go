// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// InvoiceListDto invoice list dto
//
// swagger:model InvoiceListDto
type InvoiceListDto struct {

	// end date
	EndDate string `json:"endDate,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// invoice Id
	InvoiceID string `json:"invoiceId,omitempty"`

	// invoice number
	InvoiceNumber string `json:"invoiceNumber,omitempty"`

	// is paid
	IsPaid bool `json:"isPaid"`

	// name
	Name string `json:"name,omitempty"`

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// organization name
	OrganizationName string `json:"organizationName,omitempty"`

	// organization subscription Id
	OrganizationSubscriptionID int32 `json:"organizationSubscriptionId,omitempty"`

	// price
	Price float64 `json:"price,omitempty"`

	// required payment action
	RequiredPaymentAction bool `json:"requiredPaymentAction"`

	// start date
	StartDate string `json:"startDate,omitempty"`

	// subscription name
	SubscriptionName string `json:"subscriptionName,omitempty"`

	// subscription type
	SubscriptionType string `json:"subscriptionType,omitempty"`
}

// Validate validates this invoice list dto
func (m *InvoiceListDto) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this invoice list dto based on context it is used
func (m *InvoiceListDto) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *InvoiceListDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InvoiceListDto) UnmarshalBinary(b []byte) error {
	var res InvoiceListDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
