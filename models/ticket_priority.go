// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// TicketPriority ticket priority
//
// swagger:model TicketPriority
type TicketPriority int32

// for schema
var ticketPriorityEnum []interface{}

func init() {
	var res []TicketPriority
	if err := json.Unmarshal([]byte(`[100,200,300]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		ticketPriorityEnum = append(ticketPriorityEnum, v)
	}
}

func (m TicketPriority) validateTicketPriorityEnum(path, location string, value TicketPriority) error {
	if err := validate.EnumCase(path, location, value, ticketPriorityEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this ticket priority
func (m TicketPriority) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTicketPriorityEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this ticket priority based on context it is used
func (m TicketPriority) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
