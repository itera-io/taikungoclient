// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// OpenstackNetworkDto openstack network dto
//
// swagger:model OpenstackNetworkDto
type OpenstackNetworkDto struct {

	// floating Ip limit
	FloatingIPLimit int64 `json:"floatingIpLimit,omitempty"`

	// floating Ip used
	FloatingIPUsed int64 `json:"floatingIpUsed,omitempty"`

	// network limit
	NetworkLimit int64 `json:"networkLimit,omitempty"`

	// network used
	NetworkUsed int64 `json:"networkUsed,omitempty"`

	// port limit
	PortLimit int64 `json:"portLimit,omitempty"`

	// port used
	PortUsed int64 `json:"portUsed,omitempty"`

	// router limit
	RouterLimit int64 `json:"routerLimit,omitempty"`

	// router used
	RouterUsed int64 `json:"routerUsed,omitempty"`

	// security group limit
	SecurityGroupLimit int64 `json:"securityGroupLimit,omitempty"`

	// security group rule limit
	SecurityGroupRuleLimit int64 `json:"securityGroupRuleLimit,omitempty"`

	// security group rule used
	SecurityGroupRuleUsed int64 `json:"securityGroupRuleUsed,omitempty"`

	// security group used
	SecurityGroupUsed int64 `json:"securityGroupUsed,omitempty"`

	// subnet limit
	SubnetLimit int64 `json:"subnetLimit,omitempty"`

	// subnet used
	SubnetUsed int64 `json:"subnetUsed,omitempty"`
}

// Validate validates this openstack network dto
func (m *OpenstackNetworkDto) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this openstack network dto based on context it is used
func (m *OpenstackNetworkDto) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OpenstackNetworkDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OpenstackNetworkDto) UnmarshalBinary(b []byte) error {
	var res OpenstackNetworkDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
