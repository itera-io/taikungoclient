{
  "swagger": "2.0",
  "info": {
    "title": "Taikun - WebApi",
    "description": "This Api will be responsible for overall data distribution and authorization.",
    "contact": {
      "name": "taikun cloud",
      "url": "http://taikun.cloud/",
      "email": "noreply@itera.io"
    },
    "version": "v1"
  },
  "paths": {
    "/api/v{v}/AccessProfiles/create": {
      "post": {
        "tags": [
          "AccessProfiles"
        ],
        "summary": "Create access profile",
        "operationId": "AccessProfiles_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateAccessProfileCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AccessProfiles/update/{id}": {
      "put": {
        "tags": [
          "AccessProfiles"
        ],
        "summary": "Update access profile",
        "operationId": "AccessProfiles_Update",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateAccessProfileDto"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AccessProfiles/lockmanager": {
      "post": {
        "tags": [
          "AccessProfiles"
        ],
        "summary": "Lock/unlock access profiles",
        "operationId": "AccessProfiles_LockManager",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccessProfilesLockManagementCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AccessProfiles/list": {
      "get": {
        "tags": [
          "AccessProfiles"
        ],
        "summary": "Retrieve access profiles by organization Id",
        "operationId": "AccessProfiles_AccessProfilesForOrganizationList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommonDropdownDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AccessProfiles": {
      "get": {
        "tags": [
          "AccessProfiles"
        ],
        "summary": "Retrieve all access profiles",
        "operationId": "AccessProfiles_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccessProfilesList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AccessProfiles/{id}": {
      "delete": {
        "tags": [
          "AccessProfiles"
        ],
        "summary": "Delete access profile by Id",
        "operationId": "AccessProfiles_Delete",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/Admin/projects/list": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Projects for admin",
        "operationId": "Admin_ProjectsList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limits projects size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "Keyword for searching",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AdminProjectsList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Admin/keycloak/list": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Keycloak list for admin",
        "operationId": "Admin_KeycloakList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limits projects size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AdminKeycloakList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Admin/projects/update/version": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Projects update for admin",
        "operationId": "Admin_UpdateProjectVersion",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminProjectUpdateCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Admin/projects/update/kubeconfig": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Projects update for admin",
        "operationId": "Admin_UpdateProjectKubeConfig",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUpdateProjectKubeConfigCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Admin/projects/update/userkube": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Projects update for admin",
        "operationId": "Admin_UpdateUserKubeConfig",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUpdateUserKubeConfigCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Admin/users/list": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Users for admin",
        "operationId": "Admin_UsersList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "Keyword for searching",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AdminUsersList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Admin/users/update/password": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "User password update for admin",
        "operationId": "Admin_UpdateUserPassword",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUsersUpdatePasswordCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Admin/users/make/csm": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "User csm update for admin",
        "operationId": "Admin_MakeCsmUser",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/MakeCsmCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Admin/users/make/owner": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "User choose owner for admin",
        "operationId": "Admin_MakeOwner",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/MakeOwnerCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Admin/users/update/email": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "User email update for admin",
        "operationId": "Admin_UpdateUserEmail",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUsersUpdateEmailCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Admin/users/create": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "User creation for admin",
        "operationId": "Admin_CreateUser",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminUserCreateCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Admin/organizations/add/balance": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Add balance for organization",
        "operationId": "Admin_AddBalance",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAddBalanceCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Admin/organizations/delete": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Delete organization",
        "operationId": "Admin_DeleteOrganization",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminOrganizationsDeleteCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Admin/cloudcredentials/billing": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Billing operations: enable/disable billing",
        "operationId": "Admin_BillingOperations",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminBillingOperationCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Admin/organizations/list": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Organizations for admin",
        "operationId": "Admin_Organizations",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "partnerId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AdminOrganizationsList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AlertingIntegrations/{alertingProfileId}": {
      "get": {
        "tags": [
          "AlertingIntegrations"
        ],
        "summary": "List alerting integrations by profile id",
        "operationId": "AlertingIntegrations_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "alertingProfileId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AlertingIntegrationsListDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AlertingIntegrations/create": {
      "post": {
        "tags": [
          "AlertingIntegrations"
        ],
        "summary": "Create alerting profile alerting integration",
        "operationId": "AlertingIntegrations_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateAlertingIntegrationCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AlertingIntegrations/edit": {
      "put": {
        "tags": [
          "AlertingIntegrations"
        ],
        "summary": "Edit alerting profile alerting integration",
        "operationId": "AlertingIntegrations_Edit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/EditAlertingIntegrationCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AlertingIntegrations/{id}": {
      "delete": {
        "tags": [
          "AlertingIntegrations"
        ],
        "summary": "Delete alerting profile alerting integration",
        "operationId": "AlertingIntegrations_Delete",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/AlertingProfiles/list": {
      "get": {
        "tags": [
          "AlertingProfiles"
        ],
        "summary": "Retrieve all Alerting profiles for organization",
        "operationId": "AlertingProfiles_AlertingProfilesForOrganizationList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommonDropdownDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AlertingProfiles": {
      "get": {
        "tags": [
          "AlertingProfiles"
        ],
        "summary": "Retrieve all Alerting profiles",
        "operationId": "AlertingProfiles_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AlertingProfilesList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AlertingProfiles/create": {
      "post": {
        "tags": [
          "AlertingProfiles"
        ],
        "summary": "Add Alerting profiles",
        "operationId": "AlertingProfiles_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateAlertingProfileCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AlertingProfiles/edit": {
      "post": {
        "tags": [
          "AlertingProfiles"
        ],
        "summary": "Update Alerting profiles",
        "operationId": "AlertingProfiles_Edit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateAlertingProfileCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AlertingProfiles/assignemails/{id}": {
      "put": {
        "tags": [
          "AlertingProfiles"
        ],
        "summary": "Assign Alerting emails",
        "operationId": "AlertingProfiles_AssignEmails",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AlertingEmailDto"
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AlertingProfiles/assignwebhooks/{id}": {
      "put": {
        "tags": [
          "AlertingProfiles"
        ],
        "summary": "Assign Alerting webhooks",
        "operationId": "AlertingProfiles_AssignWebhooks",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AlertingWebhookDto"
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AlertingProfiles/delete": {
      "post": {
        "tags": [
          "AlertingProfiles"
        ],
        "summary": "Remove Alerting profiles by Id",
        "operationId": "AlertingProfiles_Delete",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteAlertingProfilesCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/AlertingProfiles/lockmanager": {
      "post": {
        "tags": [
          "AlertingProfiles"
        ],
        "summary": "Lock/Unlock Alerting profiles",
        "operationId": "AlertingProfiles_LockManager",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AlertingProfilesLockManagerCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AlertingProfiles/attach": {
      "post": {
        "tags": [
          "AlertingProfiles"
        ],
        "summary": "Attach alerting profile to project.",
        "operationId": "AlertingProfiles_Attach",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Attach command",
            "schema": {
              "$ref": "#/definitions/AttachDetachAlertingProfileCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AlertingProfiles/detach": {
      "post": {
        "tags": [
          "AlertingProfiles"
        ],
        "summary": "Detach alerting profile from project.",
        "operationId": "AlertingProfiles_Detach",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Detach command",
            "schema": {
              "$ref": "#/definitions/AttachDetachAlertingProfileCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AlertingProfiles/verifywebhook": {
      "post": {
        "tags": [
          "AlertingProfiles"
        ],
        "summary": "Verify webhook endpoint",
        "operationId": "AlertingProfiles_VerifyWebhook",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/VerifyWebhookCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AllowedHost/list/{accessProfileId}": {
      "get": {
        "tags": [
          "AllowedHost"
        ],
        "summary": "List allowed hosts by access profile id",
        "operationId": "AllowedHost_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accessProfileId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AllowedHostList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AllowedHost/create": {
      "post": {
        "tags": [
          "AllowedHost"
        ],
        "summary": "Create access profile allowed host",
        "operationId": "AllowedHost_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateAllowedHostCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AllowedHost/edit/{id}": {
      "put": {
        "tags": [
          "AllowedHost"
        ],
        "summary": "Edit access profile allowed host",
        "operationId": "AllowedHost_Edit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/EditAllowedHostDto"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/AllowedHost/{id}": {
      "delete": {
        "tags": [
          "AllowedHost"
        ],
        "summary": "Delete access profile allowed host",
        "operationId": "AllowedHost_Delete",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login to API by email and password",
        "operationId": "Auth_Login",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/LoginCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetToken"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh bearer token that generated automatically by API",
        "operationId": "Auth_RefreshToken",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RefreshTokenCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetToken"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Auth/forgotpassword": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Generate reset password token if you forgot password",
        "operationId": "Auth_ForgotPassword",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ForgotPasswordCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Auth/resetpassword": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset password",
        "operationId": "Auth_ResetPassword",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ResetPasswordCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Auth/trial": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Try free",
        "operationId": "Auth_TryFree",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/TryForFreeCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Autoscaling/enable": {
      "post": {
        "tags": [
          "Autoscaling"
        ],
        "summary": "Enable autoscaling",
        "operationId": "Autoscaling_EnableAutoscaling",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/EnableAutoscalingCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Autoscaling/edit": {
      "post": {
        "tags": [
          "Autoscaling"
        ],
        "summary": "Edit autoscaling",
        "operationId": "Autoscaling_EditAutoscaling",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/EditAutoscalingCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Autoscaling/disable": {
      "post": {
        "tags": [
          "Autoscaling"
        ],
        "summary": "Disable autoscaling",
        "operationId": "Autoscaling_DisableAutoscaling",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DisableAutoscalingCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Autoscaling/sync": {
      "post": {
        "tags": [
          "Autoscaling"
        ],
        "summary": "Sync autoscaling",
        "operationId": "Autoscaling_SyncAutoscaling",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AutoscalingSyncCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Aws/create": {
      "post": {
        "tags": [
          "Aws"
        ],
        "summary": "Add Aws credentials",
        "operationId": "Aws_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateAwsCloudCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Aws/device-names": {
      "post": {
        "tags": [
          "Aws"
        ],
        "summary": "Aws device name list",
        "operationId": "Aws_DeviceNames",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AwsBlockDeviceMappingsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Aws/update": {
      "post": {
        "tags": [
          "Aws"
        ],
        "summary": "Update AWS credentials",
        "operationId": "Aws_Update",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateAwsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Aws/regions": {
      "post": {
        "tags": [
          "Aws"
        ],
        "summary": "Retrieve aws regions list",
        "operationId": "Aws_RegionList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RegionListCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AwsRegionDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Aws/zones": {
      "post": {
        "tags": [
          "Aws"
        ],
        "summary": "Fetch Aws zones",
        "operationId": "Aws_AwsZoneList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AmazonAvailabilityZonesCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzResult"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Aws/owners": {
      "get": {
        "tags": [
          "Aws"
        ],
        "summary": "Retrieve aws verified owner list",
        "operationId": "Aws_AwsOwners",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommonStringBasedDropdownDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Aws/list": {
      "get": {
        "tags": [
          "Aws"
        ],
        "summary": "Retrieve list of aws cloud credentials",
        "operationId": "Aws_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AwsCredentialList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Azure/create": {
      "post": {
        "tags": [
          "Azure"
        ],
        "summary": "Add Azure credentials",
        "operationId": "Azure_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateAzureCloudCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Azure/publishers/{cloudId}": {
      "get": {
        "tags": [
          "Azure"
        ],
        "summary": "List Azure publishers list",
        "operationId": "Azure_Publishers",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzurePublishersList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Azure/offers/{cloudId}/{publisher}": {
      "get": {
        "tags": [
          "Azure"
        ],
        "summary": "List Azure offer list by publisher",
        "operationId": "Azure_Offers",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "publisher",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureOffersList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Azure/skus/{cloudId}/{publisher}/{offer}": {
      "get": {
        "tags": [
          "Azure"
        ],
        "summary": "List Azure skus list by publisher and offer",
        "operationId": "Azure_Skus",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "publisher",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "offer",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureSkusList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Azure/update": {
      "post": {
        "tags": [
          "Azure"
        ],
        "summary": "Update Azure credentials",
        "operationId": "Azure_Update",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateAzureCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Azure/subscriptions": {
      "post": {
        "tags": [
          "Azure"
        ],
        "summary": "Azure subscriptions list",
        "operationId": "Azure_Subscriptions",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AzureSubscriptionListCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommonStringBasedDropdownDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Azure/zones": {
      "post": {
        "tags": [
          "Azure"
        ],
        "summary": "Fetch Azure zone list",
        "operationId": "Azure_Zones",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AzureZonesCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzResult"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Azure/locations": {
      "post": {
        "tags": [
          "Azure"
        ],
        "summary": "Fetch Azure location list",
        "operationId": "Azure_Locations",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AzureLocationsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Azure/quota/list": {
      "post": {
        "tags": [
          "Azure"
        ],
        "summary": "Fetch Azure quota list",
        "operationId": "Azure_Dashboard",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AzureDashboardCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AzureQuotaListRecordDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Azure/list": {
      "get": {
        "tags": [
          "Azure"
        ],
        "summary": "Retrieve list of azure cloud credentials",
        "operationId": "Azure_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureCredentialList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Backup/create": {
      "post": {
        "tags": [
          "Backup"
        ],
        "summary": "Add backup policy",
        "operationId": "Backup_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateBackupPolicyCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Backup/clear/project": {
      "post": {
        "tags": [
          "Backup"
        ],
        "summary": "Delete unfinished backup for project",
        "operationId": "Backup_ClearProject",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClearProjectBackupCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Backup/schedules/{projectId}": {
      "get": {
        "tags": [
          "Backup"
        ],
        "summary": "List all schedules",
        "operationId": "Backup_ListAllSchedules",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAllSchedules"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Backup/{projectId}/{name}": {
      "get": {
        "tags": [
          "Backup"
        ],
        "summary": "Get backup info by name",
        "operationId": "Backup_BackupByName",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "name",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BackupDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Backup/describe/schedule/{projectId}/{name}": {
      "get": {
        "tags": [
          "Backup"
        ],
        "summary": "Get schedule info by name",
        "operationId": "Backup_DescribeSchedule",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "name",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Backup/describe/backup/{projectId}/{name}": {
      "get": {
        "tags": [
          "Backup"
        ],
        "summary": "Get backup info by name",
        "operationId": "Backup_DescribeBackup",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "name",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Backup/describe/restore/{projectId}/{name}": {
      "get": {
        "tags": [
          "Backup"
        ],
        "summary": "Get restore info by name",
        "operationId": "Backup_DescribeRestore",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "name",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Backup/backups/{projectId}": {
      "get": {
        "tags": [
          "Backup"
        ],
        "summary": "List all backups",
        "operationId": "Backup_ListAllBackups",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAllBackups"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Backup/restores/{projectId}": {
      "get": {
        "tags": [
          "Backup"
        ],
        "summary": "List all restores",
        "operationId": "Backup_ListAllRestores",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAllRestores"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Backup/delelete-requests/{projectId}": {
      "get": {
        "tags": [
          "Backup"
        ],
        "summary": "List all delete backup requests",
        "operationId": "Backup_ListAllDeleteBackupRequests",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAllDeleteBackupRequests"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Backup/delete/schedule": {
      "post": {
        "tags": [
          "Backup"
        ],
        "summary": "Remove policy schedule",
        "operationId": "Backup_DeleteSchedule",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteScheduleCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Backup/delete/restore": {
      "post": {
        "tags": [
          "Backup"
        ],
        "summary": "Remove policy restore",
        "operationId": "Backup_DeleteRestore",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteRestoreCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Backup/delete/backup": {
      "post": {
        "tags": [
          "Backup"
        ],
        "summary": "Remove policy backup",
        "operationId": "Backup_DeleteBackup",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteBackupCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Backup/delete/location": {
      "post": {
        "tags": [
          "Backup"
        ],
        "summary": "Remove backup location from project",
        "operationId": "Backup_DeleteBackupLocation",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteBackupStorageLocationCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Backup/restore": {
      "post": {
        "tags": [
          "Backup"
        ],
        "summary": "Restore backup",
        "operationId": "Backup_RestoreBackup",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestoreBackupCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Backup/location": {
      "post": {
        "tags": [
          "Backup"
        ],
        "summary": "Import backup storage from source project to target project",
        "operationId": "Backup_ImportBackupStorage",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImportBackupStorageLocationCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Backup/location/{projectId}": {
      "get": {
        "tags": [
          "Backup"
        ],
        "summary": "List all backup locations",
        "operationId": "Backup_ListAllBackupStorages",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAllBackupStorageLocations"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Backup/enablebackup": {
      "post": {
        "tags": [
          "Backup"
        ],
        "summary": "Enable backup by the projectId",
        "operationId": "Backup_EnableBackup",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/EnableBackupCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Backup/disablebackup": {
      "post": {
        "tags": [
          "Backup"
        ],
        "summary": "Disable backup by the projectId",
        "operationId": "Backup_DisableBackup",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DisableBackupCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Billing": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Retrieve billing info",
        "operationId": "Billing_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "startDate",
            "description": "",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "endDate",
            "description": "",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "isDeleted",
            "description": "",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "projectId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BillingInfo"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Billing/grouped": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Retrieve a grouped list of billing summaries",
        "operationId": "Billing_GroupedList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "periodDuration",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "isDeleted",
            "description": "",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GroupedBillingInfo"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Billing/export": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Export Csv",
        "operationId": "Billing_ExportCsv",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startDate",
            "description": "",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "endDate",
            "description": "",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "isDeleted",
            "description": "",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "isEmailEnabled",
            "description": "",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Billing/add": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Add billing summary",
        "operationId": "Billing_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateBillingSummaryCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Catalog/available/packages": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "Retrieve all available packages",
        "operationId": "Catalog_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "catalogId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AvailablePackagesList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Catalog/app-to-catalog": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "Add application to catalog",
        "operationId": "Catalog_CreateCatalogApp",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateCatalogAppCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Catalog/create-catalog": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "Create catalog for organization",
        "operationId": "Catalog_CreateCatalog",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateCatalogCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Catalog/edit-catalog": {
      "put": {
        "tags": [
          "Catalog"
        ],
        "summary": "Edit catalog for organization",
        "operationId": "Catalog_EditCatalog",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/EditCatalogCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Catalog/edit-catalogapp-version": {
      "put": {
        "tags": [
          "Catalog"
        ],
        "summary": "Edit catalog app version",
        "operationId": "Catalog_EditCatalogAppVersion",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/EditCatalogAppVersionCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Catalog/edit-catalogapp-params": {
      "put": {
        "tags": [
          "Catalog"
        ],
        "summary": "Edit catalog app params",
        "operationId": "Catalog_EditCatalogAppParams",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/EditCatalogAppParamCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Catalog/dropdown-list": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "Catalog dropdown list for organization",
        "operationId": "Catalog_CatalogDropdown",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CatalogDropdownDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Catalog/list": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "Catalog list for organization",
        "operationId": "Catalog_CatalogList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CatalogList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Catalog/catalog-app/{id}": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "Catalog App details",
        "operationId": "Catalog_CatalogAppDetails",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "catalog app id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CatalogAppDetailsDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Catalog/catalog-app-params/{id}": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "Catalog App Params details",
        "operationId": "Catalog_CatalogAppParamsDetails",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "catalog app id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CatalogAppParamsDetailsDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Catalog/available/{repoName}/{packageName}": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "Available helm package details",
        "operationId": "Catalog_AvailablePackageDetails",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "repoName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "packageName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AvailablePackageDetailsDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Catalog/available/versions": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "Get available versions for catalog app",
        "operationId": "Catalog_AvailableVersions",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ListCatalogAppAvailableVersionsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Catalog/package-value": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "Get catalog app yaml value",
        "operationId": "Catalog_CatalogAppValue",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetCatalogAppValueCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Catalog/package-value-autocomplete": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "Get autocomplete dictionary for catalog app value",
        "operationId": "Catalog_CatalogAppValueAutocomplete",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetCatalogAppValueAutocompleteCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PackageAutocompleteDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Catalog/lockmanager": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "Lock/Unlock catalog",
        "operationId": "Catalog_LockManager",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CatalogLockManagementCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Catalog/app-lockmanager": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "Lock/Unlock catalog app",
        "operationId": "Catalog_AppLockManager",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CatalogAppLockManagement"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Catalog/delete/{id}": {
      "delete": {
        "tags": [
          "Catalog"
        ],
        "summary": "Delete catalog",
        "operationId": "Catalog_DeleteCatalog",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Catalog/delete-app/{id}": {
      "delete": {
        "tags": [
          "Catalog"
        ],
        "summary": "Delete catalog app by catalog app Id",
        "operationId": "Catalog_DeleteCatalogApp",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Catalog/bind-project": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "Bind/Unbind Projects to Catalog",
        "operationId": "Catalog_BindProjects",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/BindProjectsToCatalogCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/organization": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check duplicate org name",
        "operationId": "Checker_Organization",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrganizationNameCheckerCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/aws": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check aws credentials",
        "operationId": "Checker_Aws",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CheckAwsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/tanzu": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check tanzu credentials",
        "operationId": "Checker_Tanzu",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CheckTanzuCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/proxmox": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check proxmox credentials",
        "operationId": "Checker_Proxmox",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProxmoxCheckerCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/duplicate": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Duplicate name",
        "operationId": "Checker_Duplicate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DuplicateNameCheckerCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/keycloak": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check keycloak credentials",
        "operationId": "Checker_Keycloak",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/KeycloakCheckerCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/artifact": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check artifact url",
        "operationId": "Checker_Artifact",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArtifactUrlCheckerCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/yaml": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check yaml file",
        "operationId": "Checker_Yaml",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/YamlValidatorCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/google": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check aws credentials",
        "operationId": "Checker_Google",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Config",
            "type": "file"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/node": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Duplicate server name checker",
        "operationId": "Checker_Node",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/NodeCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/cron": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check valid cron job format",
        "operationId": "Checker_Cron",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CronJobCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/user": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check duplicate username",
        "operationId": "Checker_UserChecker",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserExistCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/ssh": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check valid ssh key format",
        "operationId": "Checker_Ssh",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/SshKeyCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/cidr": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check valid cidr format",
        "operationId": "Checker_Cidr",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CidrCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/dns": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check valid dns format",
        "operationId": "Checker_Dns",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DnsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/ntp": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check valid ntp format",
        "operationId": "Checker_Ntp",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/NtpCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/s3": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check s3 credentials",
        "operationId": "Checker_S3",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CheckS3Command"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/openstack": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check openstack credentials",
        "operationId": "Checker_Openstack",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CheckOpenstackCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/openstack-image/{id}": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check openstack Taikun image",
        "operationId": "Checker_OpenstackImage",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/taikun-lb-image/{id}": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check openstack Taikun lb image",
        "operationId": "Checker_OpenstackTaikunLbImage",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/prometheus": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check prometheus credentials",
        "operationId": "Checker_Prometheus",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CheckPrometheusCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/azure": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check valid azure credentials",
        "operationId": "Checker_Azure",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CheckAzureCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Checker/azure/quota/cpu": {
      "post": {
        "tags": [
          "Checker"
        ],
        "summary": "Check azure cpu quota limit",
        "operationId": "Checker_AzureCpuQuota",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CheckAzureCpuQuotaCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CloudCredentials/lockmanager": {
      "post": {
        "tags": [
          "CloudCredentials"
        ],
        "summary": "Lock/Unlock cloud credential",
        "operationId": "CloudCredentials_LockManager",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CloudLockManagerCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CloudCredentials/details": {
      "get": {
        "tags": [
          "CloudCredentials"
        ],
        "summary": "Retrieve cloud credential details by cloud Id",
        "operationId": "CloudCredentials_ForProject",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cloudId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CredentialsForProjectList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CloudCredentials/exceeded-quotas": {
      "get": {
        "tags": [
          "CloudCredentials"
        ],
        "summary": "Retrieve cloud credentials exceeded quotas",
        "operationId": "CloudCredentials_ExceededQuotas",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExceededQuotaList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CloudCredentials/cli": {
      "get": {
        "tags": [
          "CloudCredentials"
        ],
        "summary": "Retrieve cloud credentials for CLI",
        "operationId": "CloudCredentials_ForCli",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CredentialsForCli"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CloudCredentials/flavors/{cloudId}": {
      "get": {
        "tags": [
          "CloudCredentials"
        ],
        "summary": "Retrieve all flavors",
        "operationId": "CloudCredentials_AllFlavors",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startRam",
            "description": "",
            "type": "number",
            "format": "double"
          },
          {
            "in": "query",
            "name": "endRam",
            "description": "",
            "type": "number",
            "format": "double"
          },
          {
            "in": "query",
            "name": "startCpu",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "endCpu",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AllFlavorsList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CloudCredentials/list": {
      "get": {
        "tags": [
          "CloudCredentials"
        ],
        "summary": "Retrieve all cloud credentials",
        "operationId": "CloudCredentials_DashboardList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CredentialsChart"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CloudCredentials/makedefault": {
      "post": {
        "tags": [
          "CloudCredentials"
        ],
        "summary": "Make cloud credentials default",
        "operationId": "CloudCredentials_MakeDefault",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CredentialMakeDefaultCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CloudCredentials/{cloudId}": {
      "delete": {
        "tags": [
          "CloudCredentials"
        ],
        "summary": "Remove cloud credential by cloud Id",
        "operationId": "CloudCredentials_Delete",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/CloudCredentials": {
      "get": {
        "tags": [
          "CloudCredentials"
        ],
        "summary": "Retrieve a list of cloud credentials by organization Id",
        "operationId": "CloudCredentials_CloudCredentialsForOrganizationList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "isAdmin",
            "description": "",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CloudCredentialsForOrganizationEntity"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Common/enumvalues": {
      "get": {
        "tags": [
          "Common"
        ],
        "summary": "Retrieve enum values",
        "operationId": "Common_GetEnumValues",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnumList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Common/ip-range-list": {
      "post": {
        "tags": [
          "Common"
        ],
        "summary": "Retrieve ip address range list",
        "operationId": "Common_IpRangeList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IpAddressRangeListCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Common/ip-range-count": {
      "post": {
        "tags": [
          "Common"
        ],
        "summary": "Retrieve ip address range count",
        "operationId": "Common_IpRangeCount",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IpAddressRangeCountCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Common/countries": {
      "get": {
        "tags": [
          "Common"
        ],
        "summary": "Retrieve country list",
        "operationId": "Common_GetCountryList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CountryListDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Common/sorting-elements/{type}": {
      "get": {
        "tags": [
          "Common"
        ],
        "summary": "Retrieve country list",
        "operationId": "Common_GetSortingElements",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/alerts": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Delete expired alerts",
        "operationId": "CronJob_DeleteExpiredAlerts",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteExpiredAlertsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/block-organization": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Block organization",
        "operationId": "CronJob_BlockOrganization",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/BlockOrganizationCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/trigger-templates": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Trigger scheduled templates",
        "operationId": "CronJob_TriggerTemplates",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/TriggerTemplateCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/sync-app-proxy": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Sync app proxy command",
        "operationId": "CronJob_SyncAppProxy",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncAppProxyCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/fetch-artifact-organizations": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Fetch artifact hub organizations",
        "operationId": "CronJob_FetchArtifactHubOrganizations",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/FillArtifacthubOrganizationCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/sync-project-apps": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Sync project apps",
        "operationId": "CronJob_SyncProjectApps",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncProjectAppsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/sync-projects": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Sync projects",
        "operationId": "CronJob_SyncProjects",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncProjectsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/sync-organizations": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Sync organizations",
        "operationId": "CronJob_SyncOrganizations",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncOrganizationsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/taikun-requests": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Delete expired requests",
        "operationId": "CronJob_DeleteExpiredRequests",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteRequestsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/create-key-pool": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Create key pool",
        "operationId": "CronJob_CreateKeyPool",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateKeyPoolCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/sync-backup-credentials": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Sync backup credentials",
        "operationId": "CronJob_SyncBackupCredentials",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncBackupCredentialsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/project-actions": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Delete useless project actions",
        "operationId": "CronJob_DeleteRedundantProjectActions",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteRedundantProjectActionsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/project-expiration": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Send email to the users about project expiration",
        "operationId": "CronJob_SendEmailAboutProjectExpiration",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/SendEmailAboutProjectExpirationCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/events": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Delete expired events",
        "operationId": "CronJob_DeleteExpiredEvents",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteExpiredEventsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/auto-upgrade-projects": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Upgrade projects that auto-upgrade option enabled",
        "operationId": "CronJob_AutoUpgradeProjects",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AutoUpgradeProjectsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/history-logs": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Delete expired history logs",
        "operationId": "CronJob_DeleteExpiredHistoryLogs",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteExpiredHistoryLogsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/refresh-tokens": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Delete expired refresh tokens",
        "operationId": "CronJob_DeleteExpiredRefreshTokens",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteExpiredRefreshTokensCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/delete-kube-configs": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Remove deleted user's kube configs",
        "operationId": "CronJob_DeleteKubeConfigs",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteRemovedUsersKubeConfigCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/delete-aws-spot-instances": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Delete removed aws spot instances",
        "operationId": "CronJob_DeleteAwsSpotInstances",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteRemovedSpotInstancesCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/servers": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Delete expired servers",
        "operationId": "CronJob_DeleteExpiredServers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteExpiredServersCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/projects": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Purge expired projects",
        "operationId": "CronJob_PurgeExpiredProjects",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PurgeExpiredProjectsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/organizations": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Delete pending organizations",
        "operationId": "CronJob_DeletePendingOrganizations",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteRegisterExpiredOrganizationCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/project-quota-message": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Update project quota message",
        "operationId": "CronJob_UpdateProjectQuotaMessage",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateProjectQuotaMessageCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/fetch-kubernetes-alerts": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Fetch kubernetes alerts for organization",
        "operationId": "CronJob_FetchKubernetesAlerts",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/FetchKubernetesAlertDataCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/fetch-kubernetes-overview": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Fetch kubernetes overview for organization",
        "operationId": "CronJob_FetchKubernetesOverview",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/FetchKubernetesOverviewDataCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/fetch-organization-details": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Fetch details of organizations",
        "operationId": "CronJob_FetchOrganizationDetails",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/FetchOrganizationDetailsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/fetch-azure-prices": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Fetch azure prices",
        "operationId": "CronJob_FetchAzurePrices",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/FetchAzureFlavorPricesCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/fetch-azure-euro-prices": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Fetch azure euro prices",
        "operationId": "CronJob_FetchAzureEuroPrices",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/FetchAzureFlavorEuroPricesCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/remind-alerts": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Remind alerts",
        "operationId": "CronJob_RemindAlerts",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RemindUsersByAlertingProfileCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/sync-opa-profiles": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Sync opa profiles",
        "operationId": "CronJob_SyncOpaProfiles",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncOpaProfilesCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/CronJob/project-app-status": {
      "post": {
        "tags": [
          "CronJob"
        ],
        "summary": "Update project app status",
        "operationId": "CronJob_UpdateProjectAppStatus",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateProjectAppStatusCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/DnsServers/list/{accessProfileId}": {
      "get": {
        "tags": [
          "DnsServers"
        ],
        "summary": "List dns servers by profile id",
        "operationId": "DnsServers_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accessProfileId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DnsServersListDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/DnsServers/create": {
      "post": {
        "tags": [
          "DnsServers"
        ],
        "summary": "Create access profile dns server",
        "operationId": "DnsServers_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateDnsServerCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/DnsServers/edit/{id}": {
      "put": {
        "tags": [
          "DnsServers"
        ],
        "summary": "Edit access profile dns server",
        "operationId": "DnsServers_Edit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DnsNtpAddressEditDto"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/DnsServers/{id}": {
      "delete": {
        "tags": [
          "DnsServers"
        ],
        "summary": "Delete access profile dns server",
        "operationId": "DnsServers_Delete",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/Documentation": {
      "get": {
        "tags": [
          "Documentation"
        ],
        "summary": "Retrieve all documentation links. Available only for admins",
        "operationId": "Documentation_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "key",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentationsList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Flavors/openstack/{cloudId}": {
      "get": {
        "tags": [
          "Flavors"
        ],
        "summary": "Retrieve openstack flavors",
        "operationId": "Flavors_OpenstackFlavors",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startRam",
            "description": "",
            "type": "number",
            "format": "double"
          },
          {
            "in": "query",
            "name": "endRam",
            "description": "",
            "type": "number",
            "format": "double"
          },
          {
            "in": "query",
            "name": "startCpu",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "endCpu",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OpenstackFlavorList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Flavors/google/{cloudId}": {
      "get": {
        "tags": [
          "Flavors"
        ],
        "summary": "Retrieve google flavors",
        "operationId": "Flavors_GoogleFlavors",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startRam",
            "description": "",
            "type": "number",
            "format": "double"
          },
          {
            "in": "query",
            "name": "endRam",
            "description": "",
            "type": "number",
            "format": "double"
          },
          {
            "in": "query",
            "name": "startCpu",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "endCpu",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GoogleFlavorList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Flavors/aws/{cloudId}": {
      "get": {
        "tags": [
          "Flavors"
        ],
        "summary": "Retrieve aws flavors",
        "operationId": "Flavors_AwsFlavors",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startRam",
            "description": "",
            "type": "number",
            "format": "double"
          },
          {
            "in": "query",
            "name": "endRam",
            "description": "",
            "type": "number",
            "format": "double"
          },
          {
            "in": "query",
            "name": "startCpu",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "endCpu",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AwsFlavorList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Flavors/azure/{cloudId}": {
      "get": {
        "tags": [
          "Flavors"
        ],
        "summary": "Retrieve azure flavors",
        "operationId": "Flavors_AzureFlavors",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startRam",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "endRam",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startCpu",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "endCpu",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureFlavorList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Flavors/tanzu/{cloudId}": {
      "get": {
        "tags": [
          "Flavors"
        ],
        "summary": "Retrieve tanzu flavors",
        "operationId": "Flavors_TanzuFlavors",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startRam",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "endRam",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startCpu",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "endCpu",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TanzuFlavorList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Flavors/proxmox/{cloudId}": {
      "get": {
        "tags": [
          "Flavors"
        ],
        "summary": "Retrieve proxmox flavors",
        "operationId": "Flavors_PromoxFlavors",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startRam",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "endRam",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startCpu",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "endCpu",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProxmoxFlavorList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Flavors/credentials/dropdown/list": {
      "get": {
        "tags": [
          "Flavors"
        ],
        "summary": "Retrieve cloud credentials dropdown list",
        "operationId": "Flavors_DropdownRecordDtos",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CloudCredentialsDropdownRecordDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Flavors/bind": {
      "post": {
        "tags": [
          "Flavors"
        ],
        "summary": "Bind flavors to project",
        "operationId": "Flavors_BindToProject",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/BindFlavorToProjectCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Flavors/unbind": {
      "post": {
        "tags": [
          "Flavors"
        ],
        "summary": "Unbind flavors from project",
        "operationId": "Flavors_UnbindFromProject",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UnbindFlavorFromProjectCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Flavors/projects/list": {
      "get": {
        "tags": [
          "Flavors"
        ],
        "summary": "Retrieve selected flavors for projects",
        "operationId": "Flavors_GetSelectedFlavorsForProject",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "projectId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "flavorName",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "withPrice",
            "description": "",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BoundFlavorsForProjectsList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/GoogleCloud/billing-accounts": {
      "post": {
        "tags": [
          "GoogleCloud"
        ],
        "summary": "Retrieve google billing accounts list",
        "operationId": "GoogleCloud_BillingAccountList",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Config",
            "type": "file"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommonStringBasedDropdownDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/GoogleCloud/zones": {
      "post": {
        "tags": [
          "GoogleCloud"
        ],
        "summary": "Retrieve google zone list",
        "operationId": "GoogleCloud_ZoneList",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Config",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "Region",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "CloudId",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzResult"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/GoogleCloud/regions": {
      "post": {
        "tags": [
          "GoogleCloud"
        ],
        "summary": "Retrieve google region list",
        "operationId": "GoogleCloud_RegionList",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Config",
            "type": "file"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/GoogleCloud/create": {
      "post": {
        "tags": [
          "GoogleCloud"
        ],
        "summary": "Create google cloud credential",
        "operationId": "GoogleCloud_Create",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Config",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "ImportProject",
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "FolderId",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "BillingAccountId",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "AzCount",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Region",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "OrganizationId",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/GoogleCloud/list": {
      "get": {
        "tags": [
          "GoogleCloud"
        ],
        "summary": "Retrieve list of google cloud credentials",
        "operationId": "GoogleCloud_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GoogleCredentialList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Images/azure/{cloudId}/{publisherName}/{offer}/{sku}": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Retrieve azure images",
        "operationId": "Images_AzureImages",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "publisherName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "offer",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sku",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "latest",
            "description": "",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureImageList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Images/openstack/{cloudId}": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Retrieve openstack images",
        "operationId": "Images_OpenstackImages",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "personal",
            "description": "",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OpenstackImageList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Images/tanzu/{cloudId}": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Retrieve tanzu images",
        "operationId": "Images_TanzuImages",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TanzuImageList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Images/google/{cloudId}/{type}": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Retrieve google images",
        "operationId": "Images_GoogleImages",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "type",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "latest",
            "description": "",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GoogleImageList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Images/aws": {
      "post": {
        "tags": [
          "Images"
        ],
        "summary": "Retrieve aws images",
        "operationId": "Images_AwsImagesAsPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AwsImagesPostListCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AwsImagesPostList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Images/bind": {
      "post": {
        "tags": [
          "Images"
        ],
        "summary": "Bind images to project",
        "operationId": "Images_BindImagesToProject",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/BindImageToProjectCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Images/unbind": {
      "post": {
        "tags": [
          "Images"
        ],
        "summary": "Unbind images from project",
        "operationId": "Images_UnbindImagesFromProject",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteImageFromProjectCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Images/aws/common/{cloudId}": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Commonly used aws images",
        "operationId": "Images_CommonAwsImages",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AwsOwnerDetails"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Images/google/common/{cloudId}": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Commonly used google images",
        "operationId": "Images_CommonGoogleImages",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GoogleOwnerDetails"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Images/aws/personal/{cloudId}": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Personal aws images",
        "operationId": "Images_PersonalAwsImages",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommonStringBasedDropdownDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Images/azure/personal/{cloudId}": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Personal azure images",
        "operationId": "Images_PersonalAzureImages",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommonStringBasedDropdownDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Images/azure/common/{cloudId}": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Commonly used azure images",
        "operationId": "Images_CommonAzureImages",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AzurePublisherDetails"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Images/details": {
      "post": {
        "tags": [
          "Images"
        ],
        "summary": "Get image details",
        "operationId": "Images_GetImageDetailsById",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImageByIdCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Images/projects/list": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Retrieve selected images for projects",
        "operationId": "Images_GetSelectedImagesForProject",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "projectId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BoundImagesForProjectsList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Invoices/create": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Create invoice",
        "operationId": "Invoices_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateInvoiceCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Invoices/update/{invoiceId}": {
      "put": {
        "tags": [
          "Invoices"
        ],
        "summary": "Update invoice",
        "operationId": "Invoices_Edit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "invoiceId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateInvoiceDto"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Invoices/download": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Download invoice",
        "operationId": "Invoices_Download",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DownloadInvoiceCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Invoices/list": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Get invoices list",
        "operationId": "Invoices_Invoices",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startDate",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "endDate",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "search",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filterBy",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortBy",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "type": "string"
          },
          {
            "in": "query",
            "name": "organizationId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "partnerId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Invoices"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Keycloak/create": {
      "post": {
        "tags": [
          "Keycloak"
        ],
        "summary": "Create keycloak configuration for organization",
        "operationId": "Keycloak_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/KeycloakCreateCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Keycloak/edit": {
      "put": {
        "tags": [
          "Keycloak"
        ],
        "summary": "Edit keycloak configuration for organization",
        "operationId": "Keycloak_Edit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/KeycloakEditCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Keycloak/delete": {
      "post": {
        "tags": [
          "Keycloak"
        ],
        "summary": "Delete keycloak configuration",
        "operationId": "Keycloak_Delete",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/KeycloakDeleteCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Keycloak": {
      "get": {
        "tags": [
          "Keycloak"
        ],
        "summary": "Get keycloak configuration",
        "operationId": "Keycloak_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KeycloakListDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/KubeConfig": {
      "post": {
        "tags": [
          "KubeConfig"
        ],
        "summary": "Create kube config",
        "operationId": "KubeConfig_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateKubeConfigCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "get": {
        "tags": [
          "KubeConfig"
        ],
        "summary": "Retrieve a list of kube configs for project. It's possible to filter and select kube configs by project",
        "operationId": "KubeConfig_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "Only for admin sort by org id",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "projectId",
            "description": "Get kube configs by projectId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "Keyword for searching",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KubeConfigForUserList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/KubeConfig/delete": {
      "post": {
        "tags": [
          "KubeConfig"
        ],
        "summary": "Delete kube config",
        "operationId": "KubeConfig_Delete",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteKubeConfigCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/KubeConfig/delete-by-project-id": {
      "post": {
        "tags": [
          "KubeConfig"
        ],
        "summary": "Delete kube config by project id",
        "operationId": "KubeConfig_DeleteByProjectId",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteKubeConfigByProjectIdCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/KubeConfig/download": {
      "post": {
        "tags": [
          "KubeConfig"
        ],
        "summary": "Download kube config file for user by project Id",
        "operationId": "KubeConfig_Download",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DownloadKubeConfigCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/KubeConfig/interactive-shell": {
      "post": {
        "tags": [
          "KubeConfig"
        ],
        "summary": "Interactive shell for user kube config",
        "operationId": "KubeConfig_InteractiveShell",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/KubeConfigInteractiveShellCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/KubeConfigRole": {
      "get": {
        "tags": [
          "KubeConfigRole"
        ],
        "summary": "Retrieve list of kubeconfig role",
        "operationId": "KubeConfigRole_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KubeConfigRoleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/supported/list": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve Taikun supported kubernetes version",
        "operationId": "Kubernetes_GetSupportedList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KubernetesVersionListDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/node": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve a list of k8s node",
        "operationId": "Kubernetes_GetNodeList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/podlogs": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve k8s pod logs",
        "operationId": "Kubernetes_GetPodLogsList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/KubernetesPodLogsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/interactive-shell": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Produce interactive shell command",
        "operationId": "Kubernetes_InteractiveShell",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/InteractiveShellSendCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/event/{projectId}": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Add k8s event - opsgenie",
        "operationId": "Kubernetes_CreateKubernetesEvent",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/KubernetesEventCreateDto"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/alert/{projectId}": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Add k8s alert",
        "operationId": "Kubernetes_CreateKubernetesAlert",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateAlertDto"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/updatealert/{alertId}": {
      "put": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Update k8s alert",
        "operationId": "Kubernetes_UpdateKubernetesAlert",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "alertId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateKubernetesAlertDto"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/crd": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve a list of k8s custom resource definition",
        "operationId": "Kubernetes_GetCrdList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/cli": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Execute k8s web socket namespaced pod",
        "operationId": "Kubernetes_ExecCli",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/KubernetesCliCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/silencemanager": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Silence management for k8s alerts",
        "operationId": "Kubernetes_SilenceManager",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/SilenceOperationsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/restart/deployment": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Restart deployment",
        "operationId": "Kubernetes_RestartDeployment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestartDeploymentCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/restart/sts": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Restart stateful set",
        "operationId": "Kubernetes_RestartSts",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestartStsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/restart/daemonset": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Restart daemon set",
        "operationId": "Kubernetes_RestartDaemonSet",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RestartDaemonSetCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/dashboard": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve all data of the k8s by project Id",
        "operationId": "Kubernetes_GetDashboard",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/describe/pvc": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Describe pvc",
        "operationId": "Kubernetes_DescribePvc",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DescribePvcCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/describe/network-policy": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Describe network policy",
        "operationId": "Kubernetes_DescribeNetworkPolicy",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DescribeNetworkPolicyCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/describe/storageclass": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Describe storage class",
        "operationId": "Kubernetes_DescribeStorageClass",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DescribeStorageClassCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/describe/node": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Describe node",
        "operationId": "Kubernetes_DescribeNode",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DescribeNodeCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/describe/job": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Describe job",
        "operationId": "Kubernetes_DescribeJob",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DescribeJobCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/describe/pdb": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Describe pdb",
        "operationId": "Kubernetes_DescribePdb",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DescribePodDisruptionCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/describe/daemonset": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Describe daemonset",
        "operationId": "Kubernetes_DescribeDaemonSet",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DescribeDaemonSetCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/describe/deployment": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Describe deployment",
        "operationId": "Kubernetes_DescribeDeployment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DescribeDeploymentCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/describe/configmap": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Describe config map",
        "operationId": "Kubernetes_DescribeConfigMap",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DescribeConfigMapCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/describe/secret": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Describe secret",
        "operationId": "Kubernetes_DescribeSecret",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DescribeSecretCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/describe/sts": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Describe stateful set",
        "operationId": "Kubernetes_DescribeSts",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DescribeStsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/describe/service": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Describe service",
        "operationId": "Kubernetes_DescribeService",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DescribeServiceCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/describe/pod": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Describe pod",
        "operationId": "Kubernetes_DescribePod",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DescribePodCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/describe/ingress": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Describe ingress",
        "operationId": "Kubernetes_DescribeIngress",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DescribeIngressCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/describe/crd": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Describe crd",
        "operationId": "Kubernetes_DescribeCrd",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DescribeCrdCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/describe/cronjob": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Describe cronjob",
        "operationId": "Kubernetes_DescribeCronJob",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DescribeCronJobCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/overview": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Overview kubernetes nodes and pods by organization id",
        "operationId": "Kubernetes_Overview",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/pod": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve a list of k8s pod for all namespaces",
        "operationId": "Kubernetes_GetPodList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Pods"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/cronjobs": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve a list of k8s cron jobs for all namespaces",
        "operationId": "Kubernetes_GetCronJobsList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KubernetesCronJobsList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/jobs": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve a list of k8s jobs for all namespaces",
        "operationId": "Kubernetes_GetJobsList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KubernetesJobList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/pdb": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve a list of k8s pdb for all namespaces",
        "operationId": "Kubernetes_GetPdbList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PodDisruptions"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/alerts": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve all k8s alerts by project Id",
        "operationId": "Kubernetes_GetKubernetesAlertsList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "type",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "startDate",
            "description": "",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "endDate",
            "description": "",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KubernetesAlertList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/kubeconfig": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve kube config file",
        "operationId": "Kubernetes_GetKubeConfigFile",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KubeConfigResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/namespaces": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve kube config file",
        "operationId": "Kubernetes_GetNamespacesList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/download": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Download kube config file bu project Id",
        "operationId": "Kubernetes_Download",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/daemonset": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve a list of k8s daemon set for all namespaces",
        "operationId": "Kubernetes_GetDaemonSet",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DaemonSets"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/helmreleases": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve a list of k8s helm releases for all namespaces",
        "operationId": "Kubernetes_GetHelmReleaseList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HelmReleasesList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/ingress": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve a list of k8s ingresses for all namespaces",
        "operationId": "Kubernetes_GetIngresses",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Ingresses"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/network-policies": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve a list of k8s network-policies for all namespaces",
        "operationId": "Kubernetes_GetNetworkPolicies",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkPolicies"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/pvc": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve a list of k8s persistent volume claim for all namespaces",
        "operationId": "Kubernetes_GetPersistentVolumeClaim",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Pvcs"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/deployment": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve a list of k8s deployment for all namespaces",
        "operationId": "Kubernetes_GetDeploymentList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Deployments"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/configmap": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve a list of k8s config map for all namespaces",
        "operationId": "Kubernetes_GetConfigMap",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConfigMaps"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/storageclass": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve a list of k8s storage classes",
        "operationId": "Kubernetes_GetStorageClasses",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StorageClasses"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/secret": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve a list of k8s secret for all namespaces",
        "operationId": "Kubernetes_GetSecret",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Secrets"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/sts": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve a list of k8s stateful set for all namespaces",
        "operationId": "Kubernetes_GetSts",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StsList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/service": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve a list of k8s service for all namespaces",
        "operationId": "Kubernetes_GetService",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Services"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/{projectId}/deletepod/{metadataName}/{podNamespace}": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Remove k8s namespaced pod",
        "operationId": "Kubernetes_DeletePod",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "metadataName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "podNamespace",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/removealerts": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Remove k8s alerts",
        "operationId": "Kubernetes_DeleteAlerts",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteAlertCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/patch/configmap": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Patch config map",
        "operationId": "Kubernetes_PatchConfigMap",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatchConfigMapCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/patch/deployment": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Patch deployment",
        "operationId": "Kubernetes_PatchDeployment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatchDeploymentCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/patch/ingress": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Patch ingress",
        "operationId": "Kubernetes_PatchIngress",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatchIngressCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/patch/pvc": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Patch pvc",
        "operationId": "Kubernetes_PatchPvc",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatchPvcCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/patch/pdb": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Patch pdb",
        "operationId": "Kubernetes_PatchPdb",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatchPdbCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/patch/secret": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Patch secret",
        "operationId": "Kubernetes_PatchSecret",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatchSecretCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/patch/sts": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Patch sts",
        "operationId": "Kubernetes_PatchSts",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatchStsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/patch/crd": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Patch crd",
        "operationId": "Kubernetes_PatchCrd",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatchCrdCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/patch/cronjob": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Patch cronjob",
        "operationId": "Kubernetes_PatchCronJob",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatchCronJobCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/patch/node": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Patch node",
        "operationId": "Kubernetes_PatchNode",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatchNodeCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/patch/job": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Patch job",
        "operationId": "Kubernetes_PatchJob",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatchJobCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubernetes/patch/pod": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Patch pod",
        "operationId": "Kubernetes_PatchPod",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatchPodCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/KubernetesProfiles": {
      "get": {
        "tags": [
          "KubernetesProfiles"
        ],
        "summary": "Retrieve all kubernetes profiles for organization",
        "operationId": "KubernetesProfiles_KubernetesProfilesForOrganizationList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KubernetesProfilesEntity"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "KubernetesProfiles"
        ],
        "summary": "Add kubernetes profiles",
        "operationId": "KubernetesProfiles_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateKubernetesProfileCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/KubernetesProfiles/list": {
      "get": {
        "tags": [
          "KubernetesProfiles"
        ],
        "summary": "Retrieve all kubernetes profiles",
        "operationId": "KubernetesProfiles_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KubernetesProfilesList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/KubernetesProfiles/lockmanager": {
      "post": {
        "tags": [
          "KubernetesProfiles"
        ],
        "summary": "Lock/Unlock kubernetes profiles",
        "operationId": "KubernetesProfiles_LockManager",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/KubernetesProfilesLockManagerCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/KubernetesProfiles/{id}": {
      "delete": {
        "tags": [
          "KubernetesProfiles"
        ],
        "summary": "Remove kubernetes profiles by Id",
        "operationId": "KubernetesProfiles_Delete",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/Kubespray": {
      "get": {
        "tags": [
          "Kubespray"
        ],
        "operationId": "Kubespray_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Kubesprays"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Kubespray"
        ],
        "operationId": "Kubespray_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/KubesprayCreateCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Kubespray/{id}": {
      "delete": {
        "tags": [
          "Kubespray"
        ],
        "operationId": "Kubespray_Delete",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/Notifications/add": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Send notification to signalR",
        "operationId": "Notifications_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/NotificationSendCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Notifications/operations": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get project operations",
        "operationId": "Notifications_GetProjectOperationMessages",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetProjectOperationCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Retrieve all notifications",
        "operationId": "Notifications_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "startDate",
            "description": "",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "endDate",
            "description": "",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "projectId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "userId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "isDeleted",
            "description": "",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NotificationHistory"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Notifications/download": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Export Csv",
        "operationId": "Notifications_ExportCsv",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sortBy",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "type": "string"
          },
          {
            "in": "query",
            "name": "startDate",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "endDate",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "organizationId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "filterBy",
            "type": "string"
          },
          {
            "in": "query",
            "name": "projectId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "userId",
            "type": "string"
          },
          {
            "in": "query",
            "name": "isDeleted",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "isEmailEnabled",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Notifications/notifyowner": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Notify owner",
        "operationId": "Notifications_NotifyOwner",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/NotifyOwnersCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/NtpServers/list/{accessProfileId}": {
      "get": {
        "tags": [
          "NtpServers"
        ],
        "summary": "List ntp servers by profile id",
        "operationId": "NtpServers_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accessProfileId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NtpServersListDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/NtpServers/create": {
      "post": {
        "tags": [
          "NtpServers"
        ],
        "summary": "Create access profile ntp server",
        "operationId": "NtpServers_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateNtpServerCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/NtpServers/edit/{id}": {
      "put": {
        "tags": [
          "NtpServers"
        ],
        "summary": "Edit access profile ntp server",
        "operationId": "NtpServers_Edit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DnsNtpAddressEditDto"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/NtpServers/{id}": {
      "delete": {
        "tags": [
          "NtpServers"
        ],
        "summary": "Delete access profile ntp server",
        "operationId": "NtpServers_Delete",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/OpaProfiles": {
      "post": {
        "tags": [
          "OpaProfiles"
        ],
        "summary": "Create policy profile",
        "operationId": "OpaProfiles_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateOpaProfileCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "OpaProfiles"
        ],
        "summary": "Update policy profile",
        "operationId": "OpaProfiles_Update",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/OpaProfileUpdateCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "get": {
        "tags": [
          "OpaProfiles"
        ],
        "summary": "Retrieve a list of policy profile for project.",
        "operationId": "OpaProfiles_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "org id",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "Keyword for searching",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OpaProfileList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/OpaProfiles/sync": {
      "post": {
        "tags": [
          "OpaProfiles"
        ],
        "summary": "Sync policy profile",
        "operationId": "OpaProfiles_Sync",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/OpaProfileSyncCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/OpaProfiles/delete": {
      "post": {
        "tags": [
          "OpaProfiles"
        ],
        "summary": "Delete policy profile",
        "operationId": "OpaProfiles_Delete",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteOpaProfileCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/OpaProfiles/list": {
      "get": {
        "tags": [
          "OpaProfiles"
        ],
        "summary": "Retrieve policy profiles by organization Id",
        "operationId": "OpaProfiles_OpaProfilesForOrganizationList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommonExtendedDropdownDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/OpaProfiles/lockmanager": {
      "post": {
        "tags": [
          "OpaProfiles"
        ],
        "summary": "Lock/Unlock policy profile",
        "operationId": "OpaProfiles_LockManager",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OpaProfileLockManagerCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/OpaProfiles/enablegatekeeper": {
      "post": {
        "tags": [
          "OpaProfiles"
        ],
        "summary": "Enable Gatekeeper by the projectId",
        "operationId": "OpaProfiles_EnableGatekeeper",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/EnableGatekeeperCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/OpaProfiles/disablegatekeeper": {
      "post": {
        "tags": [
          "OpaProfiles"
        ],
        "summary": "Disable Gatekeeper by the projectId",
        "operationId": "OpaProfiles_DisableGatekeeper",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DisableGatekeeperCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/OpaProfiles/make-default": {
      "post": {
        "tags": [
          "OpaProfiles"
        ],
        "summary": "Choose default policy profile",
        "operationId": "OpaProfiles_MakeDefault",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/OpaMakeDefaultCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Openstack/update": {
      "post": {
        "tags": [
          "Openstack"
        ],
        "summary": "Update Openstack credentials",
        "operationId": "Openstack_Update",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateOpenStackCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Openstack/create": {
      "post": {
        "tags": [
          "Openstack"
        ],
        "summary": "Add Openstack credentials",
        "operationId": "Openstack_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateOpenstackCloudCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Openstack/zones": {
      "post": {
        "tags": [
          "Openstack"
        ],
        "summary": "Fetch Openstack zone list",
        "operationId": "Openstack_ZoneList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/OpenStackZoneListQuery"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Openstack/regions": {
      "post": {
        "tags": [
          "Openstack"
        ],
        "summary": "Retrieve Openstack regions",
        "operationId": "Openstack_Regions",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/OpenStackRegionListQuery"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Openstack/networks": {
      "post": {
        "tags": [
          "Openstack"
        ],
        "summary": "Retrieve a list of Openstack network",
        "operationId": "Openstack_Networks",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/OpenStackNetworkListQuery"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommonStringBasedDropdownDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Openstack/quotas": {
      "post": {
        "tags": [
          "Openstack"
        ],
        "summary": "Retrieve a list of Openstack quotas",
        "operationId": "Openstack_Quotas",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/OpenstackQuotasCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OpenstackQuotaList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Openstack/projects": {
      "post": {
        "tags": [
          "Openstack"
        ],
        "summary": "Retrieve a list of Openstack project",
        "operationId": "Openstack_Projects",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/OpenStackProjectListQuery"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommonStringBasedDropdownDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Openstack/subnets": {
      "post": {
        "tags": [
          "Openstack"
        ],
        "summary": "Retrieve a list of Openstack subnet",
        "operationId": "Openstack_Subnets",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/OpenstackSubnetListQuery"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Subnet"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Openstack/volumes": {
      "post": {
        "tags": [
          "Openstack"
        ],
        "summary": "Retrieve a list of Openstack volume type",
        "operationId": "Openstack_VolumeTypes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/OpenstackVolumeTypeListQuery"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Openstack/list": {
      "get": {
        "tags": [
          "Openstack"
        ],
        "summary": "Retrieve list of openstack cloud credentials",
        "operationId": "Openstack_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OpenstackCredentialList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/OpsCredentials": {
      "get": {
        "tags": [
          "OpsCredentials"
        ],
        "summary": "Retrieve operation credentials by organization Id",
        "operationId": "OpsCredentials_OperationCredentialsForOrganizationList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OperationCredentialsForOrganizationEntity"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "OpsCredentials"
        ],
        "summary": "Add operation credential",
        "operationId": "OpsCredentials_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/OperationCredentialsCreateCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/OpsCredentials/list": {
      "get": {
        "tags": [
          "OpsCredentials"
        ],
        "summary": "Retrieve all operation credentials",
        "operationId": "OpsCredentials_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationCredentials"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/OpsCredentials/lockmanager": {
      "post": {
        "tags": [
          "OpsCredentials"
        ],
        "summary": "Lock/unlock operation credential",
        "operationId": "OpsCredentials_LockManager",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/OperationCredentialLockManagerCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/OpsCredentials/makedefault": {
      "post": {
        "tags": [
          "OpsCredentials"
        ],
        "summary": "Make ops credentials default",
        "operationId": "OpsCredentials_MakeDefault",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OperationCredentialsMakeDefaultCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/OpsCredentials/{id}": {
      "delete": {
        "tags": [
          "OpsCredentials"
        ],
        "summary": "Remove operation credential",
        "operationId": "OpsCredentials_Delete",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/Organizations": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Retrieve all organizations",
        "operationId": "Organizations_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrganizationsList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Create a new organization. Only available for admins.",
        "operationId": "Organizations_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Create command",
            "schema": {
              "$ref": "#/definitions/OrganizationCreateCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Organizations/updatepaymentmethod": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Update organization payment Id",
        "operationId": "Organizations_UpdatePaymentMethod",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdatePaymentIdCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Organizations/export": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Export Csv file",
        "operationId": "Organizations_ExportCsv",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Organizations/update": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Update organization by Id",
        "operationId": "Organizations_Update",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateOrganizationCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Organizations/updatesubscription": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Update subscription",
        "operationId": "Organizations_UpdateSubscription",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateOrganizationSubscriptionCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Organizations/toggle/keycloak": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Toggle keycloak login option",
        "operationId": "Organizations_ToggleKeycloak",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ToggleKeycloakCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Organizations/details": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Retrieve all data about current organization by Id",
        "operationId": "Organizations_Details",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DashboardChart"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Organizations/delete/{organizationId}": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Delete the specified organization.Only available for admins.",
        "operationId": "Organizations_Delete",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organizationId",
            "description": "Id of the organization to delete",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/Organizations/list": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Retrieve organizations",
        "operationId": "Organizations_OrganizationList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "partnerId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommonDropdownDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Organizations/leave": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Leave taikun",
        "operationId": "Organizations_LeaveTaikun",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LeaveTaikunCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LeaveTaikunDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Organizations/accept-offer": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Accept discount offer",
        "operationId": "Organizations_AcceptOffer",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AcceptOfferCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/OrganizationSubscriptions": {
      "get": {
        "tags": [
          "OrganizationSubscriptions"
        ],
        "summary": "Retrieve all org subscriptions",
        "operationId": "OrganizationSubscriptions_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrganizationSubscriptionList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Partner/create": {
      "post": {
        "tags": [
          "Partner"
        ],
        "summary": "Add partner",
        "operationId": "Partner_Create",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Domain",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Link",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Phone",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Email",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Country",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "City",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "VatNumber",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Address",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Logo",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "BackgroundImage",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "AllowRegistration",
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "RequiredUserApproval",
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "PaymentEnabled",
            "type": "boolean"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Partner/update/{id}": {
      "put": {
        "tags": [
          "Partner"
        ],
        "summary": "Edit partner data by Id",
        "operationId": "Partner_Update",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Domain",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Link",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Phone",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Email",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Country",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "City",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "VatNumber",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Address",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Logo",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "BackgroundImage",
            "type": "file"
          },
          {
            "in": "formData",
            "name": "AllowRegistration",
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "RequiredUserApproval",
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "PaymentEnabled",
            "type": "boolean"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Partner": {
      "get": {
        "tags": [
          "Partner"
        ],
        "summary": "Get partners",
        "operationId": "Partner_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PartnersList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Partner/details": {
      "get": {
        "tags": [
          "Partner"
        ],
        "summary": "Details of partners",
        "operationId": "Partner_Details",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PartnerDetailsDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Partner/list": {
      "get": {
        "tags": [
          "Partner"
        ],
        "summary": "Get partners dropdown",
        "operationId": "Partner_PartnerList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PartnerEntity"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Partner/info": {
      "get": {
        "tags": [
          "Partner"
        ],
        "operationId": "Partner_PartnerInfoRegistration",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "domain",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PartnerRecordDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Partner/bindorganizations": {
      "post": {
        "tags": [
          "Partner"
        ],
        "operationId": "Partner_BindOrganizations",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BindOrganizationsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Partner/become-a-partner": {
      "post": {
        "tags": [
          "Partner"
        ],
        "operationId": "Partner_BecomePartner",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BecomePartnerCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Partner/contact-us": {
      "post": {
        "tags": [
          "Partner"
        ],
        "operationId": "Partner_ContactUs",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ContactUsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Partner/add/whitelist/domain": {
      "post": {
        "tags": [
          "Partner"
        ],
        "operationId": "Partner_AddWhiteListDomain",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WhiteListDomainCreateCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Partner/delete/whitelist/domain": {
      "post": {
        "tags": [
          "Partner"
        ],
        "operationId": "Partner_DeleteWhiteListDomain",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WhiteListDomainDeleteCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Payment/createcustomer": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Create customer",
        "operationId": "Payment_CreateCustomer",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateStripeCustomerCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Payment/clear": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Clear payment",
        "operationId": "Payment_ClearPayment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClearCanceledPaymentMethodCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Payment/updatecard": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Update your card",
        "operationId": "Payment_UpdateCard",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ChangeCardCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Payment/finalprice": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Update your card",
        "operationId": "Payment_GetFinalPrice",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/FinalPriceCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FinalPriceDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Payment/pay": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Pay invoice",
        "operationId": "Payment_PayInvoice",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PayInvoiceCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Payment/webhook": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Listen to payment webhook",
        "operationId": "Payment_Webhook",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Payment/stripeinvoices/{subscriptionId}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get required stripe invoices by stripe subscription id",
        "operationId": "Payment_GetStripeInvoices",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StripeInvoices"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Payment/billing-info": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get billing info for organization",
        "operationId": "Payment_GetBillingInfo",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BillingInfoDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Payment/cardinfo": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get card information",
        "operationId": "Payment_GetCardInfo",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CardInformationDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/PreDefinedQueries/prometheus/dashboard/list/{projectId}": {
      "get": {
        "tags": [
          "PreDefinedQueries"
        ],
        "summary": "Get list of pre defined organization prometheus dashboard elements",
        "operationId": "PreDefinedQueries_GetPrometheusDashboardList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PrometheusDashboardListDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/PreDefinedQueries/prometheus/dashboard/common/{projectId}": {
      "get": {
        "tags": [
          "PreDefinedQueries"
        ],
        "summary": "Get list of pre defined common prometheus dashboard elements",
        "operationId": "PreDefinedQueries_GetPrometheusCommonDashboardList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PrometheusDashboardListDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/PreDefinedQueries/prometheus/dashboard/create": {
      "post": {
        "tags": [
          "PreDefinedQueries"
        ],
        "summary": "Create prometheus dashboard pre defined query",
        "operationId": "PreDefinedQueries_CreatePrometheusDashboard",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PrometheusDashboardCreateCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/PreDefinedQueries/prometheus/dashboard/delete/{id}": {
      "delete": {
        "tags": [
          "PreDefinedQueries"
        ],
        "summary": "Delete prometheus dashboard pre defined query",
        "operationId": "PreDefinedQueries_DeletePrometheusDashboard",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/PreDefinedQueries/prometheus/dashboard/update": {
      "post": {
        "tags": [
          "PreDefinedQueries"
        ],
        "summary": "Update prometheus dashboard pre defined query",
        "operationId": "PreDefinedQueries_UpdatePrometheusDashboard",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PrometheusDashboardUpdateCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectActions/update/{projectId}": {
      "post": {
        "tags": [
          "ProjectActions"
        ],
        "summary": "Update project action by ProjectId for poller",
        "operationId": "ProjectActions_Edit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProjectActionUpdateDto"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectActions/delete": {
      "post": {
        "tags": [
          "ProjectActions"
        ],
        "summary": "Delete the project action.",
        "operationId": "ProjectActions_Delete",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteProjectActionCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/ProjectApp/install": {
      "post": {
        "tags": [
          "ProjectApp"
        ],
        "summary": "Install application",
        "operationId": "ProjectApp_Install",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateProjectAppCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectApp/sync": {
      "post": {
        "tags": [
          "ProjectApp"
        ],
        "summary": "Sync application",
        "operationId": "ProjectApp_Sync",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/SyncProjectAppCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectApp/edit-params": {
      "post": {
        "tags": [
          "ProjectApp"
        ],
        "summary": "Edit project app params",
        "operationId": "ProjectApp_EditParams",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/EditProjectAppParamCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectApp/autosync": {
      "post": {
        "tags": [
          "ProjectApp"
        ],
        "summary": "AutoSync management",
        "operationId": "ProjectApp_AutoSync",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/AutoSyncManagementCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectApp/uninstall/{projectAppId}": {
      "delete": {
        "tags": [
          "ProjectApp"
        ],
        "summary": "Uninstall application",
        "operationId": "ProjectApp_Uninstall",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectAppId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectApp/lockmanager": {
      "post": {
        "tags": [
          "ProjectApp"
        ],
        "summary": "Lock/Unlock project app",
        "operationId": "ProjectApp_LockManager",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/LockProjectAppCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectApp/list": {
      "get": {
        "tags": [
          "ProjectApp"
        ],
        "summary": "Project app list for organization",
        "operationId": "ProjectApp_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProjectAppList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectApp/{id}": {
      "get": {
        "tags": [
          "ProjectApp"
        ],
        "summary": "Project App details",
        "operationId": "ProjectApp_Details",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProjectAppDetailsDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectGroups/create": {
      "post": {
        "tags": [
          "ProjectGroups"
        ],
        "summary": "Add Project groups",
        "operationId": "ProjectGroups_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateProjectGroupCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectGroups/update": {
      "put": {
        "tags": [
          "ProjectGroups"
        ],
        "summary": "Update Project groups",
        "operationId": "ProjectGroups_Update",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "projectGroupId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateProjectGroupDto"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectGroups/bind-user-groups": {
      "post": {
        "tags": [
          "ProjectGroups"
        ],
        "summary": "Bind User groups",
        "operationId": "ProjectGroups_BindUserGroups",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/BindUserGroupsToProjectGroupCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectGroups/list": {
      "get": {
        "tags": [
          "ProjectGroups"
        ],
        "summary": "Retrieve list of Project groups",
        "operationId": "ProjectGroups_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProjectGroupList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectGroups/list-by-user-group-id": {
      "get": {
        "tags": [
          "ProjectGroups"
        ],
        "summary": "Retrieve list of Project groups by user group id for dropdown",
        "operationId": "ProjectGroups_ListByUserGroupId",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userGroupId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommonDropdownDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectGroups": {
      "delete": {
        "tags": [
          "ProjectGroups"
        ],
        "summary": "Remove Project group(s)",
        "operationId": "ProjectGroups_Delete",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/ProjectGroups/{projectGroupId}/projects": {
      "get": {
        "tags": [
          "ProjectGroups"
        ],
        "summary": "Retrieve list of projects by project group id",
        "operationId": "ProjectGroups_ProjectListByProjectGroupId",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectGroupId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectListForProjectGroupDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectInfracosts/upsert/{projectId}": {
      "post": {
        "tags": [
          "ProjectInfracosts"
        ],
        "summary": "Upsert project infracost by ProjectId",
        "operationId": "ProjectInfracosts_Edit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProjectInfracostUpsertDto"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectInfracosts/delete": {
      "post": {
        "tags": [
          "ProjectInfracosts"
        ],
        "summary": "Delete the project infracost.",
        "operationId": "ProjectInfracosts_Delete",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteProjectInfracostCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/ProjectInfracosts/{projectId}": {
      "get": {
        "tags": [
          "ProjectInfracosts"
        ],
        "summary": "Project Infracost details",
        "operationId": "ProjectInfracosts_Details",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "Project Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EstimatedInfracost"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectQuotas": {
      "get": {
        "tags": [
          "ProjectQuotas"
        ],
        "summary": "Retrieve all project quotas",
        "operationId": "ProjectQuotas_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "startRam",
            "description": "",
            "type": "number",
            "format": "double"
          },
          {
            "in": "query",
            "name": "endRam",
            "description": "",
            "type": "number",
            "format": "double"
          },
          {
            "in": "query",
            "name": "startDiskSize",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "endDiskSize",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "startCpu",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "endCpu",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProjectQuotaList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectQuotas/update": {
      "post": {
        "tags": [
          "ProjectQuotas"
        ],
        "summary": "Edit project quota",
        "operationId": "ProjectQuotas_Edit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateQuotaCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectRevisions/update/{projectId}": {
      "post": {
        "tags": [
          "ProjectRevisions"
        ],
        "summary": "Update project revision by ProjectId for poller",
        "operationId": "ProjectRevisions_Edit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProjectRevisionUpdateDto"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Retrieve a list of projects.",
        "operationId": "Projects_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "Keyword for searching",
            "type": "string"
          },
          {
            "in": "query",
            "name": "updatedAt",
            "description": "",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "backupCredentialId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "healthy",
            "description": "",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProjectsList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Create a new project",
        "operationId": "Projects_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Create command",
            "schema": {
              "$ref": "#/definitions/CreateProjectCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/forpoller": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Retrieve a list of projects for poller. Only available for admins.",
        "operationId": "Projects_ListForPoller",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "Keyword for searching",
            "type": "string"
          },
          {
            "in": "query",
            "name": "updatedAt",
            "description": "",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProjectListForPoller"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/foralerting": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Retrieve a list of projects for alert poller. Only available for admins.",
        "operationId": "Projects_ListWithAlerts",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "status",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "projectId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectListForAlert"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/forbilling": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Retrieve projects for billing",
        "operationId": "Projects_ListForBilling",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectsForBillingDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/extend/lifetime": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Extend life time of project",
        "operationId": "Projects_ExtendLifeTime",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Command",
            "schema": {
              "$ref": "#/definitions/ProjectExtendLifeTimeCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/lokilogs": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Retrieve loki logs",
        "operationId": "Projects_LokiLogs",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/LokiResponseDto"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/commit/{projectId}": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Commit changes for the given project. The changes will then be applied and the project will be updated. The project must be in the READY state.",
        "operationId": "Projects_Commit",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/repair/{projectId}": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Repair project by Id",
        "operationId": "Projects_Repair",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/lockmanager": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Lock/Unlock project",
        "operationId": "Projects_LockManager",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "mode",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/{projectId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Retrieve details of the project by Id",
        "operationId": "Projects_Details",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProjectForListDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/describe/{projectId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Describe project by Id",
        "operationId": "Projects_Describe",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "isYaml",
            "description": "",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/upgrade/{projectId}": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Upgrade the project's Kubernetes to the next available version. Project must be READY.",
        "operationId": "Projects_Upgrade",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/delete": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Delete the project. The project must be empty (no server) and in READY state",
        "operationId": "Projects_Delete",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteProjectCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/Projects/deletewholeproject": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Delete whole project by project Id",
        "operationId": "Projects_DeleteWholeProject",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteWholeProjectCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/Projects/purge": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Purge a list of servers from project by project Id",
        "operationId": "Projects_Purge",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PurgeCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/purgewholeproject": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Purge a whole project by project Id",
        "operationId": "Projects_PurgeWholeProject",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PurgeWholeProjectCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/update/{projectId}": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Update project by Id for poller",
        "operationId": "Projects_Edit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProjectForUpdateDto"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/updatehealth/{projectId}": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Update health status of the project by Id",
        "operationId": "Projects_EditHealthStatus",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProjectHealth"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/reset": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Change the project status for the given project. Only available for admin.",
        "operationId": "Projects_ResetProjectStatus",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResetProjectStatusCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/list": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "List of projects with dropdown",
        "operationId": "Projects_ListSelector",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "type": "string"
          },
          {
            "in": "query",
            "name": "catalogId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "healthy",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "userId",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommonDropdownIsBoundDtoForProject"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/monitoring": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Monitoring operations enable/disable",
        "operationId": "Projects_MonitoringOperations",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/MonitoringOperationsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/toggle-spot-vms": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Spot vm(s) operations enable/disable",
        "operationId": "Projects_SpotVmsOperations",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/SpotVmOperationCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/toggle-spot-workers": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Spot worker(s) operations enable/disable",
        "operationId": "Projects_SpotWorkersOperations",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/SpotWorkerOperationCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/toggle-full-spot": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Full spot operations enable/disable",
        "operationId": "Projects_FullSpotWorkersOperations",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/FullSpotOperationCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/visibility/{projectId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Visibility of project actions",
        "operationId": "Projects_ProjectActionButtonVisibility",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProjectActionVisibilityDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/monitoringalerts": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Monitoring alerts for project",
        "operationId": "Projects_ProjectMonitoringAlerts",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ProjectsMonitoringAlertsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Projects/prometheusmetrics": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Prometheus metrics data project",
        "operationId": "Projects_PrometheusMetrics",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PrometheusMetricsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectTemplate/list": {
      "get": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Retrieve project template by organization Id",
        "operationId": "ProjectTemplate_ProjectTemplateForOrganizationList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectTemplateDropdownListDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectTemplate": {
      "get": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Retrieve all project templates",
        "operationId": "ProjectTemplate_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProjectTemplateList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/ProjectTemplate/{id}": {
      "delete": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Delete project template by Id",
        "operationId": "ProjectTemplate_Delete",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/ProjectTemplate/create-project": {
      "post": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Create project from template",
        "operationId": "ProjectTemplate_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateProjectFromTemplateCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Prometheus": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "Retrieve a list of prometheus rules",
        "operationId": "Prometheus_ListOfRules",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "partnerId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PrometheusRulesList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Prometheus"
        ],
        "summary": "Add prometheus rule",
        "operationId": "Prometheus_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RuleCreateCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Prometheus/export": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "Export Csv file",
        "operationId": "Prometheus_ExportCsv",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "startDate",
            "description": "",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "endDate",
            "description": "",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "isEmailEnabled",
            "description": "",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Prometheus/grouped": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "Retrieve a list of grouped prometheus billing",
        "operationId": "Prometheus_GroupedList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "periodDuration",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Prometheus/billing": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "Retrieve all prometheus billing",
        "operationId": "Prometheus_BillingList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "startDate",
            "description": "",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "endDate",
            "description": "",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PrometheusBillingInfo"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Prometheus"
        ],
        "summary": "Add prometheus billing",
        "operationId": "Prometheus_CreateBilling",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PrometheusBillingCreateCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Prometheus/bindorganizations": {
      "post": {
        "tags": [
          "Prometheus"
        ],
        "summary": "Bind organizations to prometheus rule",
        "operationId": "Prometheus_BindOrganizations",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/BindPrometheusOrganizationsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Prometheus/bindrules": {
      "post": {
        "tags": [
          "Prometheus"
        ],
        "summary": "Bind rules to organizations",
        "operationId": "Prometheus_BindRules",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/BindRulesCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Prometheus/metricname": {
      "post": {
        "tags": [
          "Prometheus"
        ],
        "summary": "Fetch prometheus metric names",
        "operationId": "Prometheus_MetricName",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/MetricNameCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Prometheus/{id}": {
      "delete": {
        "tags": [
          "Prometheus"
        ],
        "summary": "Remove prometheus rule",
        "operationId": "Prometheus_Delete",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Prometheus/update/{id}": {
      "post": {
        "tags": [
          "Prometheus"
        ],
        "summary": "Edit prometheus rule",
        "operationId": "Prometheus_Update",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RuleForUpdateDto"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Prometheus/details": {
      "get": {
        "tags": [
          "Prometheus"
        ],
        "summary": "Retrieve all prometheus rules with detailed info",
        "operationId": "Prometheus_Details",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommonDropdownIsBoundDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Proxmox/create": {
      "post": {
        "tags": [
          "Proxmox"
        ],
        "summary": "Add Proxmox credentials",
        "operationId": "Proxmox_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateProxmoxCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Proxmox/hypervisor-list": {
      "post": {
        "tags": [
          "Proxmox"
        ],
        "summary": "Fetch proxmox hypervisor list",
        "operationId": "Proxmox_HypervisorList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/HypervisorListCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Proxmox/bridge-list": {
      "post": {
        "tags": [
          "Proxmox"
        ],
        "summary": "Fetch proxmox bridge list",
        "operationId": "Proxmox_BridgeList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/BridgeListCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Proxmox/storage-list": {
      "post": {
        "tags": [
          "Proxmox"
        ],
        "summary": "Fetch proxmox storage list",
        "operationId": "Proxmox_StorageList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/StorageListCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Proxmox/vm-template-list": {
      "post": {
        "tags": [
          "Proxmox"
        ],
        "summary": "Fetch proxmox vm tempalte list",
        "operationId": "Proxmox_VmTemplateList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/VmTemplateListCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Proxmox/list": {
      "get": {
        "tags": [
          "Proxmox"
        ],
        "summary": "Retrieve list of proxmox cloud credentials",
        "operationId": "Proxmox_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProxmoxList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Repository/recommended": {
      "get": {
        "tags": [
          "Repository"
        ],
        "summary": "Retrieve taikun recommended repository list",
        "operationId": "Repository_TaikunRecommendedRepositoryList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArtifactRepositoryDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Repository/available": {
      "get": {
        "tags": [
          "Repository"
        ],
        "summary": "Retrieve available repository list",
        "operationId": "Repository_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "isPrivate",
            "description": "",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppRepositoryList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Repository/bind": {
      "post": {
        "tags": [
          "Repository"
        ],
        "summary": "Bind repo to organization",
        "operationId": "Repository_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/BindAppRepositoryCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Repository/unbind": {
      "post": {
        "tags": [
          "Repository"
        ],
        "summary": "Unbind repo from organization",
        "operationId": "Repository_Unbind",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UnbindAppRepositoryCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Repository/import": {
      "post": {
        "tags": [
          "Repository"
        ],
        "summary": "Import repo to artifact",
        "operationId": "Repository_Import",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImportRepoCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Repository/disable": {
      "post": {
        "tags": [
          "Repository"
        ],
        "summary": "Disable repo from organization",
        "operationId": "Repository_Disable",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DisableRepoCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Repository/delete": {
      "post": {
        "tags": [
          "Repository"
        ],
        "summary": "Delete repo from organization",
        "operationId": "Repository_Delete",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteRepositoryCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/S3Credentials": {
      "get": {
        "tags": [
          "S3Credentials"
        ],
        "summary": "Retrieve all S3 credentials for organization",
        "operationId": "S3Credentials_BackupCredentialsForOrganizationList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BackupCredentialsForOrganizationEntity"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "S3Credentials"
        ],
        "summary": "Add S3 credential",
        "operationId": "S3Credentials_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackupCredentialsCreateCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "S3Credentials"
        ],
        "summary": "Update S3 credential",
        "operationId": "S3Credentials_Update",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackupCredentialsUpdateCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/S3Credentials/list": {
      "get": {
        "tags": [
          "S3Credentials"
        ],
        "summary": "Retrieve all S3 credentials",
        "operationId": "S3Credentials_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BackupCredentials"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/S3Credentials/lockmanager": {
      "post": {
        "tags": [
          "S3Credentials"
        ],
        "summary": "Lock/Unlock S3 credentials",
        "operationId": "S3Credentials_LockManager",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BackupLockManagerCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/S3Credentials/makedefault": {
      "post": {
        "tags": [
          "S3Credentials"
        ],
        "summary": "Make backup credentials default",
        "operationId": "S3Credentials_MakeDefault",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BackupMakeDefaultCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/S3Credentials/{id}": {
      "delete": {
        "tags": [
          "S3Credentials"
        ],
        "summary": "Remove S3 credentials by Id",
        "operationId": "S3Credentials_Delete",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/Search/partners": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for partners",
        "operationId": "Search_PartnersList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PartnersSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PartnersSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/users": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for users",
        "operationId": "Search_UsersList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UsersSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UsersSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/backup-credentials": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for backup credentials",
        "operationId": "Search_BackupCredentialsList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BackupCredentialsSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BackupCredentialsSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/cloud-credentials": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for cloud credentials",
        "operationId": "Search_CloudCredentialsList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CloudCredentialsSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CloudCredentialsSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/access-profiles": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for access profiles",
        "operationId": "Search_AccessProfilesList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AccessProfilesSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccessProfilesSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/stand-alone-profiles": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for stand alone profiles",
        "operationId": "Search_StandAloneProfilesList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/StandAloneProfilesSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StandAloneProfilesSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/kubernetes-profiles": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for kubernetes profiles",
        "operationId": "Search_KubernetesProfilesList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/KubernetesProfilesSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KubernetesProfilesSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/billing-credentials": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for billing credentials",
        "operationId": "Search_BillingCredentialsList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BillingCredentialsSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BillingCredentialsSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/organizations": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for organizations",
        "operationId": "Search_OrganizationsList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OrganizationSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrganizationSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/projects": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for projects",
        "operationId": "Search_ProjectsList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ProjectsSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProjectsSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/prometheus-rules": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for prometheus rules",
        "operationId": "Search_PrometheusRulesList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PrometheusRulesSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PrometheusRulesSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/servers": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for servers",
        "operationId": "Search_ServersList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ServersSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ServersSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/pods": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for kubernetes pods",
        "operationId": "Search_PodsList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PodsSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PodsSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/nodes": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for kubernetes nodes",
        "operationId": "Search_NodesList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NodesSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NodesSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/config-maps": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for kubernetes config maps",
        "operationId": "Search_ConfigMapList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ConfigMapSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConfigMapSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/deployments": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for kubernetes deployments",
        "operationId": "Search_DeploymentList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DeploymentSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeploymentSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/pvcs": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for kubernetes persistent volume claims",
        "operationId": "Search_PersistenceVolumeClaimList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PvcSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PvcSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/secrets": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for kubernetes secrets",
        "operationId": "Search_SecretList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SecretSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SecretSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/sts": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for kubernetes stateful sets",
        "operationId": "Search_StsList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/StsSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StsSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/services": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for kubernetes services",
        "operationId": "Search_ServiceList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ServiceSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ServiceSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/ingress": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for kubernetes ingress",
        "operationId": "Search_IngressList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IngressSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IngressSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Search/daemon-sets": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Global search for kubernetes daemon sets",
        "operationId": "Search_DaemonSetList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DaemonSetSearchCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DaemonSetSearchList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/SecurityGroup/list/{standAloneProfileId}": {
      "post": {
        "tags": [
          "SecurityGroup"
        ],
        "summary": "List stand alone security group by profile id",
        "operationId": "SecurityGroup_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "standAloneProfileId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecurityGroupListDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/SecurityGroup/create": {
      "post": {
        "tags": [
          "SecurityGroup"
        ],
        "summary": "Create standalone profile security group",
        "operationId": "SecurityGroup_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateSecurityGroupCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/SecurityGroup/edit": {
      "post": {
        "tags": [
          "SecurityGroup"
        ],
        "summary": "EDit standalone profile security group",
        "operationId": "SecurityGroup_Edit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/EditSecurityGroupCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/SecurityGroup/delete": {
      "post": {
        "tags": [
          "SecurityGroup"
        ],
        "summary": "Delete standalone profile security group",
        "operationId": "SecurityGroup_Delete",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteSecurityGroupCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Servers": {
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Create a new server in the given project.",
        "operationId": "Servers_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServerForCreateDto"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Servers"
        ],
        "summary": "List all servers according to roles",
        "operationId": "Servers_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "projectId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "startRam",
            "description": "",
            "type": "number",
            "format": "double"
          },
          {
            "in": "query",
            "name": "endRam",
            "description": "",
            "type": "number",
            "format": "double"
          },
          {
            "in": "query",
            "name": "startDiskSize",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "endDiskSize",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "startCpu",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "endCpu",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "autoscalingGroup",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ServersList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Servers/reboot": {
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Reboot servers",
        "operationId": "Servers_Reboot",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RebootServerCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Servers/console": {
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Console servers",
        "operationId": "Servers_Console",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsoleScreenshotCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Servers/status/{serverId}": {
      "get": {
        "tags": [
          "Servers"
        ],
        "summary": "Show server status",
        "operationId": "Servers_ShowServerStatus",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serverId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Servers/update": {
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Update server",
        "operationId": "Servers_Update",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateServerCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Servers/update/{projectId}": {
      "put": {
        "tags": [
          "Servers"
        ],
        "summary": "Update server by projectId",
        "operationId": "Servers_UpdateByProjectId",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpdateServerHealthDto"
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Servers/{projectId}": {
      "get": {
        "tags": [
          "Servers"
        ],
        "summary": "Retrieve a list of servers with detailed info",
        "operationId": "Servers_Details",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "withAutoscalingGroup",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ServersListForDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Servers/reset": {
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Update statuses of servers by project Id",
        "operationId": "Servers_Reset",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResetServerStatusCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Servers/delete": {
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Delete servers by project Id",
        "operationId": "Servers_Delete",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteServerCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/Slack/create": {
      "post": {
        "tags": [
          "Slack"
        ],
        "summary": "Create slack configuration",
        "operationId": "Slack_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateSlackConfigurationCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Slack/update/{id}": {
      "put": {
        "tags": [
          "Slack"
        ],
        "summary": "Update slack configuration",
        "operationId": "Slack_Update",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateSlackConfigurationDto"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Slack/delete-multiple": {
      "post": {
        "tags": [
          "Slack"
        ],
        "summary": "Delete slack configurations (s)",
        "operationId": "Slack_DeleteMultiple",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteSlackConfigCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Slack": {
      "get": {
        "tags": [
          "Slack"
        ],
        "summary": "Retrieve a list of slack configs.",
        "operationId": "Slack_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "Only for admin sort by org id",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "Keyword for searching",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SlackConfigurationList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Slack/list": {
      "get": {
        "tags": [
          "Slack"
        ],
        "summary": "Retrieve all slack configs for organization",
        "operationId": "Slack_SlackConfigurationForOrganizationList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommonDropdownDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Slack/verify": {
      "post": {
        "tags": [
          "Slack"
        ],
        "summary": "Verify slack credentials",
        "operationId": "Slack_VerifySlackCredentials",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/VerifySlackCredentialsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/SshUsers/list/{accessProfileId}": {
      "get": {
        "tags": [
          "SshUsers"
        ],
        "summary": "List ssh users by profile id",
        "operationId": "SshUsers_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accessProfileId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SshUsersListDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/SshUsers/create": {
      "post": {
        "tags": [
          "SshUsers"
        ],
        "summary": "Create access profile ssh user",
        "operationId": "SshUsers_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateSshUserCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/SshUsers/edit": {
      "post": {
        "tags": [
          "SshUsers"
        ],
        "summary": "Edit access profile ssh user",
        "operationId": "SshUsers_Edit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/EditSshUserCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/SshUsers/delete": {
      "post": {
        "tags": [
          "SshUsers"
        ],
        "summary": "Delete access profile ssh user",
        "operationId": "SshUsers_Delete",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteSshUserCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAlone": {
      "get": {
        "tags": [
          "StandAlone"
        ],
        "summary": "List all StandaloneVms according to roles",
        "operationId": "StandAlone_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "projectId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "startRam",
            "description": "",
            "type": "number",
            "format": "double"
          },
          {
            "in": "query",
            "name": "endRam",
            "description": "",
            "type": "number",
            "format": "double"
          },
          {
            "in": "query",
            "name": "startDiskSize",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "endDiskSize",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "startCpu",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "endCpu",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filterBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StandaloneVmsList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAlone/forpoller": {
      "get": {
        "tags": [
          "StandAlone"
        ],
        "summary": "List all StandaloneVms for poller",
        "operationId": "StandAlone_ListForPoller",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "projectId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StandaloneVmsListForPoller"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAlone/create": {
      "post": {
        "tags": [
          "StandAlone"
        ],
        "summary": "Create stand alone vm",
        "operationId": "StandAlone_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateStandAloneVmCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAlone/update/flavor": {
      "post": {
        "tags": [
          "StandAlone"
        ],
        "summary": "Update stand alone vm flavor",
        "operationId": "StandAlone_UpdateFlavor",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateStandAloneVmFlavorCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAlone/update": {
      "post": {
        "tags": [
          "StandAlone"
        ],
        "summary": "Update stand alone vm",
        "operationId": "StandAlone_Update",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateStandAloneVmCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAlone/delete": {
      "post": {
        "tags": [
          "StandAlone"
        ],
        "summary": "Delete/purge stand alone vm",
        "operationId": "StandAlone_Delete",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteStandAloneVmCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAlone/purge": {
      "post": {
        "tags": [
          "StandAlone"
        ],
        "summary": "Purge stand alone based project",
        "operationId": "StandAlone_Purge",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PurgeStandAloneCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAlone/reset": {
      "post": {
        "tags": [
          "StandAlone"
        ],
        "summary": "Reset stand alone vm status",
        "operationId": "StandAlone_Reset",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResetStandAloneVmStatusCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAlone/commit": {
      "post": {
        "tags": [
          "StandAlone"
        ],
        "summary": "Commit stand alone vm",
        "operationId": "StandAlone_Commit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CommitStandAloneVmCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAlone/repair": {
      "post": {
        "tags": [
          "StandAlone"
        ],
        "summary": "Repair stand alone vm",
        "operationId": "StandAlone_Repair",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RepairStandAloneVmCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAlone/ip/management": {
      "post": {
        "tags": [
          "StandAlone"
        ],
        "summary": "Enable/Disable stand alone public ip",
        "operationId": "StandAlone_IpManagement",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/StandAloneVmIpManagementCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAlone/project/{projectId}": {
      "get": {
        "tags": [
          "StandAlone"
        ],
        "summary": "Retrieve details of the project by Id",
        "operationId": "StandAlone_ProjectDetails",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProjectFullListDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAlone/{projectId}": {
      "get": {
        "tags": [
          "StandAlone"
        ],
        "summary": "Retrieve a list of standalone vm with detailed info",
        "operationId": "StandAlone_Details",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StandAloneVmListForDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneActions/password": {
      "post": {
        "tags": [
          "StandAloneActions"
        ],
        "summary": "Retrieve aws windows admin instance password",
        "operationId": "StandAloneActions_InstancePassword",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Id",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Key",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Config",
            "type": "file"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneActions/reboot": {
      "post": {
        "tags": [
          "StandAloneActions"
        ],
        "summary": "Reboot standalone vm instance",
        "operationId": "StandAloneActions_Reboot",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RebootStandAloneVmCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneActions/download/rdp/{id}": {
      "get": {
        "tags": [
          "StandAloneActions"
        ],
        "summary": "Download RDP file",
        "operationId": "StandAloneActions_ExportCsv",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneActions/console": {
      "post": {
        "tags": [
          "StandAloneActions"
        ],
        "summary": "Console info standalone vm instance",
        "operationId": "StandAloneActions_Console",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/VmConsoleScreenshotCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneActions/stop": {
      "post": {
        "tags": [
          "StandAloneActions"
        ],
        "summary": "Stop standalone vm instance",
        "operationId": "StandAloneActions_Stop",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/StopStandaloneVmCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneActions/start": {
      "post": {
        "tags": [
          "StandAloneActions"
        ],
        "summary": "Start standalone vm instance",
        "operationId": "StandAloneActions_Start",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/StartStandaloneVmCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneActions/shelve": {
      "post": {
        "tags": [
          "StandAloneActions"
        ],
        "summary": "Shelve standalone vm instance",
        "operationId": "StandAloneActions_Shelve",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ShelveStandAloneVmCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneActions/unshelve": {
      "post": {
        "tags": [
          "StandAloneActions"
        ],
        "summary": "Unshelve standalone vm instance",
        "operationId": "StandAloneActions_Unshelve",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UnshelveStandaloneVmCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneActions/status/{id}": {
      "get": {
        "tags": [
          "StandAloneActions"
        ],
        "summary": "Show standalone vm status",
        "operationId": "StandAloneActions_ShowStandaloneVmStatus",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneProfile": {
      "get": {
        "tags": [
          "StandAloneProfile"
        ],
        "summary": "Retrieve a list of stand alone profiles",
        "operationId": "StandAloneProfile_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "Keyword for searching",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StandAloneProfiles"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneProfile/list": {
      "get": {
        "tags": [
          "StandAloneProfile"
        ],
        "summary": "Retrieve dropdown list of stand alone profiles",
        "operationId": "StandAloneProfile_DropdownList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommonDropdownDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneProfile/create": {
      "post": {
        "tags": [
          "StandAloneProfile"
        ],
        "summary": "Create standalone profile",
        "operationId": "StandAloneProfile_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/StandAloneProfileCreateCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneProfile/delete": {
      "post": {
        "tags": [
          "StandAloneProfile"
        ],
        "summary": "Delete standalone profile",
        "operationId": "StandAloneProfile_Delete",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteStandAloneProfileCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneProfile/edit": {
      "post": {
        "tags": [
          "StandAloneProfile"
        ],
        "summary": "Update standalone profile",
        "operationId": "StandAloneProfile_Edit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/StandAloneProfileUpdateCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneProfile/lockmanager": {
      "post": {
        "tags": [
          "StandAloneProfile"
        ],
        "summary": "Lock/unlock standalone profile",
        "operationId": "StandAloneProfile_LockManagement",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/StandAloneProfileLockManagementCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneVmDisks/create": {
      "post": {
        "tags": [
          "StandAloneVmDisks"
        ],
        "summary": "Add disk for stand alone vm",
        "operationId": "StandAloneVmDisks_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateStandAloneDiskCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneVmDisks/delete": {
      "post": {
        "tags": [
          "StandAloneVmDisks"
        ],
        "summary": "Delete disk by id",
        "operationId": "StandAloneVmDisks_Delete",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteStandAloneVmDiskCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneVmDisks/purge": {
      "post": {
        "tags": [
          "StandAloneVmDisks"
        ],
        "summary": "Purge disks by id",
        "operationId": "StandAloneVmDisks_Purge",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PurgeStandAloneVmDiskCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneVmDisks/update-size": {
      "post": {
        "tags": [
          "StandAloneVmDisks"
        ],
        "summary": "Update disk size by id",
        "operationId": "StandAloneVmDisks_UpdateDiskSize",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateStandaloneVmDiskSizeCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneVmDisks/update": {
      "post": {
        "tags": [
          "StandAloneVmDisks"
        ],
        "summary": "Update disk by id",
        "operationId": "StandAloneVmDisks_Update",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateStandaloneVmDiskCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/StandAloneVmDisks/reset": {
      "post": {
        "tags": [
          "StandAloneVmDisks"
        ],
        "summary": "Update statuses of disks by vm Id",
        "operationId": "StandAloneVmDisks_Reset",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResetStandAloneVmDiskStatusCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Subscription/create": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Add new subscription package",
        "operationId": "Subscription_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateSubscriptionCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Subscription/bind": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Bind subscription",
        "operationId": "Subscription_Bind",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/BindSubscriptionCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BindSubscriptionResponseDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Subscription/delete": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Delete subscription package",
        "operationId": "Subscription_Delete",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteSubscriptionCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/Subscription/update": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Add new subscription package",
        "operationId": "Subscription_Update",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateSubscriptionCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Subscription/boundlist": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Retrieve subscription for organization bound",
        "operationId": "Subscription_SubscriptionForOrganizationList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListForOrganizationEditDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Subscription/public": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Retrieve public subscription list for landing page",
        "operationId": "Subscription_SubscriptionForLandingPage",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListForLandingPageDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Subscription": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Retrieve private subscription list for partners",
        "operationId": "Subscription_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PrivateSubscriptionList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Tanzu/create": {
      "post": {
        "tags": [
          "Tanzu"
        ],
        "summary": "Add Tanzu credentials",
        "operationId": "Tanzu_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateTanzuCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Tanzu/storage-list": {
      "post": {
        "tags": [
          "Tanzu"
        ],
        "summary": "Tanzu storage list",
        "operationId": "Tanzu_StorageList",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/TanzuStorageListCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Tanzu/update": {
      "post": {
        "tags": [
          "Tanzu"
        ],
        "summary": "Update Tanzu credentials",
        "operationId": "Tanzu_Update",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateTanzuCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Tanzu/kubernetes-versions/{cloudId}": {
      "get": {
        "tags": [
          "Tanzu"
        ],
        "summary": "Tanzu available k8s version list",
        "operationId": "Tanzu_KubernetesVersions",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cloudId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Tanzu/list": {
      "get": {
        "tags": [
          "Tanzu"
        ],
        "summary": "Retrieve list of tanzu cloud credentials",
        "operationId": "Tanzu_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TanzuCredentialsList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Ticket/create": {
      "post": {
        "tags": [
          "Ticket"
        ],
        "summary": "Create ticket",
        "operationId": "Ticket_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateTicketCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Ticket/set-priority": {
      "post": {
        "tags": [
          "Ticket"
        ],
        "summary": "Set priority",
        "operationId": "Ticket_SetPriority",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/SetTicketPriorityCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Ticket/edit": {
      "post": {
        "tags": [
          "Ticket"
        ],
        "summary": "Edit ticket",
        "operationId": "Ticket_Edit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/EditTicketCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Ticket/transfer": {
      "post": {
        "tags": [
          "Ticket"
        ],
        "summary": "Transfer ticket",
        "operationId": "Ticket_Transfer",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/TransferTicketCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Ticket/edit/message": {
      "post": {
        "tags": [
          "Ticket"
        ],
        "summary": "Edit ticket message",
        "operationId": "Ticket_UpdateMessage",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/EditArticleCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Ticket/delete/message/{messageId}": {
      "delete": {
        "tags": [
          "Ticket"
        ],
        "summary": "Delete ticket message",
        "operationId": "Ticket_DeleteMessage",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "messageId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Ticket/delete/{ticketId}": {
      "delete": {
        "tags": [
          "Ticket"
        ],
        "summary": "Delete ticket",
        "operationId": "Ticket_Delete",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Ticket/open": {
      "post": {
        "tags": [
          "Ticket"
        ],
        "summary": "Open ticket",
        "operationId": "Ticket_Open",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/OpenTicketCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Ticket/reply": {
      "post": {
        "tags": [
          "Ticket"
        ],
        "summary": "Reply message",
        "operationId": "Ticket_Reply",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReplyTicketCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Ticket/close": {
      "post": {
        "tags": [
          "Ticket"
        ],
        "summary": "Close ticket",
        "operationId": "Ticket_Close",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CloseTicketCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Ticket/archive": {
      "post": {
        "tags": [
          "Ticket"
        ],
        "summary": "Archive ticket",
        "operationId": "Ticket_Archive",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArchiveTicketCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Ticket/list": {
      "get": {
        "tags": [
          "Ticket"
        ],
        "summary": "Retrieve a list of tickets.",
        "operationId": "Ticket_TicketList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "Keyword for searching",
            "type": "string"
          },
          {
            "in": "query",
            "name": "startDate",
            "description": "",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "endDate",
            "description": "",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "ticketId",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AllTicketsList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Ticket/{ticketId}/messages": {
      "get": {
        "tags": [
          "Ticket"
        ],
        "summary": "Retrieve articles of ticket.",
        "operationId": "Ticket_ArticleList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ticketId",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ArticleList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Ticket/transfer/list": {
      "get": {
        "tags": [
          "Ticket"
        ],
        "summary": "Retrieve organization managers.",
        "operationId": "Ticket_TransferList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransferList"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/UserGroups/create": {
      "post": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Add User groups",
        "operationId": "UserGroups_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateUserGroupCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/UserGroups/update": {
      "put": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Update User groups",
        "operationId": "UserGroups_Update",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userGroupId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateUserGroupDto"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/UserGroups/bind-project-groups": {
      "post": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Bind Project groups",
        "operationId": "UserGroups_BindProjectGroups",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/BindProjectGroupsToUserGroupCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/UserGroups/list": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Retrieve list of User groups",
        "operationId": "UserGroups_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserGroupList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/UserGroups/list-by-project-group-id": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Retrieve list of User groups by project group id for dropdown",
        "operationId": "UserGroups_ListByProjectGroupId",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "projectGroupId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommonDropdownDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/UserGroups": {
      "delete": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Remove User group(s)",
        "operationId": "UserGroups_Delete",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/UserGroups/{userGroupId}/users": {
      "get": {
        "tags": [
          "UserGroups"
        ],
        "summary": "Retrieve list of users by user group id",
        "operationId": "UserGroups_UserListByProjectGroupId",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectListForProjectGroupDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/UserProjects/bindprojects": {
      "post": {
        "tags": [
          "UserProjects"
        ],
        "summary": "Bind projects to users",
        "operationId": "UserProjects_BindProjects",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/BindProjectsCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/UserProjects/bindusers": {
      "post": {
        "tags": [
          "UserProjects"
        ],
        "summary": "Bind users to projects",
        "operationId": "UserProjects_BindUsers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/BindUsersCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/UserProjects/users/list/{projectId}": {
      "get": {
        "tags": [
          "UserProjects"
        ],
        "summary": "Users list by project id",
        "operationId": "UserProjects_UsersListByProject",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommonStringBasedDropdownDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/UserProjects/projects/list": {
      "get": {
        "tags": [
          "UserProjects"
        ],
        "summary": "Projects list for user",
        "operationId": "UserProjects_ProjectsListByUser",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommonDropdownDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieve all users (only valid for admin).",
        "operationId": "Users_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Skip elements",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits user size (by default 50)",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "organizationId",
            "description": "Retrieve only members of organizationId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchId",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UsersList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user",
        "operationId": "Users_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Create command",
            "schema": {
              "$ref": "#/definitions/CreateUserCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Users/force-to-reset": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Force to reset password",
        "operationId": "Users_ForceToResetPassword",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Command",
            "schema": {
              "$ref": "#/definitions/ForceToResetPasswordCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Users/toggle-demo-mode": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Toggle demo mode",
        "operationId": "Users_ToggleDemoMode",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Command",
            "schema": {
              "$ref": "#/definitions/ToggleDemoModeCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Users/disable": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Disable user",
        "operationId": "Users_DisableUser",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Command",
            "schema": {
              "$ref": "#/definitions/DisableUserCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Users/togglemaintenancemode": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_ToggleMaintenanceMode",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "mode",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Users/export": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Export Csv file",
        "operationId": "Users_ExportCsv",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Users/togglenotificationmode": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_ToggleNotificationMode",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "mode",
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Users/userinfo": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_Details",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Users/{id}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user (only valid for admin, moderators and partner).Reminder : moderators can delete users from their organization only.",
        "operationId": "Users_Delete",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the user to delete",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v{v}/Users/delete": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Delete my account",
        "operationId": "Users_DeleteMyAccount",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Users/changepassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Change user password",
        "operationId": "Users_ChangePassword",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ChangePasswordCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Users/verifyemail": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Verify user email",
        "operationId": "Users_VerifyEmail",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/VerifyEmailCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Users/confirmemail": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Confirm user email",
        "operationId": "Users_ConfirmEmail",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ConfirmEmailCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Users/update": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Update user credential",
        "operationId": "Users_UpdateUser",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateUserCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/Users/list": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieve projects according to user role",
        "operationId": "Users_ListSelector",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "search",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "projectId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommonStringDropdownIsBoundDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/UserToken/list": {
      "get": {
        "tags": [
          "UserToken"
        ],
        "summary": "Get user token list",
        "operationId": "UserToken_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserTokensListDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/UserToken/available-endpoints": {
      "get": {
        "tags": [
          "UserToken"
        ],
        "summary": "Get available endpoints list",
        "operationId": "UserToken_AvailableEndpointList",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sortBy",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sortDirection",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "isAdd",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "isReadonly",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AvailableEndpointsList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/UserToken/create": {
      "post": {
        "tags": [
          "UserToken"
        ],
        "summary": "Create a new user token",
        "operationId": "UserToken_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Create command",
            "schema": {
              "$ref": "#/definitions/UserTokenCreateCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserTokenCreateDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/UserToken/bind-unbind": {
      "post": {
        "tags": [
          "UserToken"
        ],
        "summary": "Bind and unbind endpoints",
        "operationId": "UserToken_BindUnbind",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Create command",
            "schema": {
              "$ref": "#/definitions/BindUnbindEndpointToTokenCommand"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/api/v{v}/UserToken/delete/{id}": {
      "delete": {
        "tags": [
          "UserToken"
        ],
        "summary": "Delete token",
        "operationId": "UserToken_Delete",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Delete command",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "v",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AcceptOfferCommand": {
      "type": "object"
    },
    "AccessProfilesForProjectListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "httpProxy": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "revision": {
          "format": "int32",
          "type": "integer"
        },
        "sshUsers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SshUserListDto"
          }
        },
        "dnsServers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DnsServerListDto"
          }
        },
        "ntpServers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NtpServerListDto"
          }
        },
        "allowedHosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllowedHostListDto"
          }
        }
      }
    },
    "AccessProfilesList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessProfilesListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AccessProfilesListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "httpProxy": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "isLocked": {
          "type": "boolean"
        },
        "dnsServers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DnsServerListDto"
          }
        },
        "ntpServers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NtpServerListDto"
          }
        },
        "allowedHosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllowedHostListDto"
          }
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        }
      }
    },
    "AccessProfilesLockManagementCommand": {
      "required": [
        "id",
        "mode"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "mode": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "AccessProfilesSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "AccessProfilesSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonSearchResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ActionStatus": {
      "format": "int32",
      "enum": [
        0,
        1,
        2
      ],
      "type": "integer"
    },
    "ActionType": {
      "format": "int32",
      "enum": [
        10,
        20,
        30,
        32,
        34,
        36,
        38,
        40,
        42,
        44,
        50,
        60,
        70,
        80,
        90,
        100,
        105,
        106,
        107,
        108,
        109,
        110,
        120,
        130,
        140,
        150,
        155,
        156,
        160,
        165,
        170,
        175,
        176,
        177,
        180,
        190,
        200,
        210,
        220,
        230,
        240,
        250,
        260,
        270,
        280,
        290,
        300,
        310,
        320,
        330,
        340,
        350,
        360,
        370,
        380,
        390,
        400,
        410
      ],
      "type": "integer"
    },
    "AdminAddBalanceCommand": {
      "required": [
        "customerId"
      ],
      "type": "object",
      "properties": {
        "customerId": {
          "minLength": 1,
          "type": "string"
        },
        "balance": {
          "format": "int64",
          "maximum": 100000,
          "minimum": 1,
          "type": "integer"
        }
      }
    },
    "AdminBillingOperationCommand": {
      "required": [
        "cloudCredentialId"
      ],
      "type": "object",
      "properties": {
        "cloudCredentialId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        }
      }
    },
    "AdminKeycloakList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeycloakListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AdminOrganizationsDeleteCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AdminOrganizationsList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminOrganizationsListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AdminOrganizationsListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "partnerName": {
          "type": "string"
        },
        "partnerLogo": {
          "type": "string"
        }
      }
    },
    "AdminProjectUpdateCommand": {
      "required": [
        "id",
        "kubernetesCurrentVersion",
        "kubesprayCurrentVersion"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "kubernetesCurrentVersion": {
          "maxLength": 15,
          "minLength": 3,
          "type": "string"
        },
        "kubesprayCurrentVersion": {
          "maxLength": 15,
          "minLength": 3,
          "type": "string"
        }
      }
    },
    "AdminProjectsList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminProjectsResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AdminProjectsResponseData": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "organizationName": {
          "type": "string"
        },
        "isLocked": {
          "type": "boolean"
        },
        "kubernetesCurrentVersion": {
          "type": "string"
        },
        "kubesprayCurrentVersion": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "serversCount": {
          "format": "int32",
          "type": "integer"
        },
        "tcu": {
          "format": "int32",
          "type": "integer"
        },
        "createdAt": {
          "type": "string"
        }
      }
    },
    "AdminUpdateProjectKubeConfigCommand": {
      "required": [
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        }
      }
    },
    "AdminUpdateUserKubeConfigCommand": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        }
      }
    },
    "AdminUserCreateCommand": {
      "required": [
        "email",
        "password",
        "username"
      ],
      "type": "object",
      "properties": {
        "email": {
          "format": "email",
          "maxLength": 2000,
          "minLength": 3,
          "type": "string"
        },
        "username": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "password": {
          "maxLength": 200,
          "minLength": 6,
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/UserRole"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AdminUsersList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminUsersResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AdminUsersResponseData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "organizationName": {
          "type": "string"
        },
        "owner": {
          "type": "boolean"
        },
        "csm": {
          "type": "boolean"
        }
      }
    },
    "AdminUsersUpdateEmailCommand": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "minLength": 1,
          "type": "string"
        },
        "email": {
          "format": "email",
          "type": "string"
        }
      }
    },
    "AdminUsersUpdatePasswordCommand": {
      "required": [
        "id",
        "password"
      ],
      "type": "object",
      "properties": {
        "id": {
          "minLength": 1,
          "type": "string"
        },
        "password": {
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "AlertingEmailDto": {
      "required": [
        "email"
      ],
      "type": "object",
      "properties": {
        "email": {
          "format": "email",
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "AlertingIntegrationDto": {
      "required": [
        "alertingIntegrationType",
        "url"
      ],
      "type": "object",
      "properties": {
        "url": {
          "minLength": 1,
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "alertingIntegrationType": {
          "$ref": "#/definitions/AlertingIntegrationType"
        }
      }
    },
    "AlertingIntegrationType": {
      "format": "int32",
      "enum": [
        100,
        200,
        300,
        400
      ],
      "type": "integer"
    },
    "AlertingIntegrationsListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "url": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "alertingIntegrationType": {
          "type": "string"
        },
        "alertingProfileName": {
          "type": "string"
        }
      }
    },
    "AlertingProfilesList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertingProfilesListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AlertingProfilesListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "slackConfigurationId": {
          "format": "int32",
          "type": "integer"
        },
        "slackConfigurationName": {
          "type": "string"
        },
        "isLocked": {
          "type": "boolean"
        },
        "emails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertingEmailDto"
          }
        },
        "webhooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertingWebhookDto"
          }
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "reminder": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        }
      }
    },
    "AlertingProfilesLockManagerCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "AlertingReminder": {
      "format": "int32",
      "enum": [
        100,
        200,
        300,
        -1
      ],
      "type": "integer"
    },
    "AlertingWebhookDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "url": {
          "type": "string"
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebhookHeaderDto"
          }
        }
      }
    },
    "AllFlavorsList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FlavorsListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        },
        "cloudType": {
          "type": "string"
        }
      }
    },
    "AllTicketsDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "currentStatusDate": {
          "type": "string"
        },
        "lastModifier": {
          "type": "string"
        },
        "number": {
          "format": "int32",
          "type": "integer"
        },
        "partnerLogo": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "partnerName": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "AllTicketsList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllTicketsDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AllowedHostCreateDto": {
      "required": [
        "ipAddress"
      ],
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "ipAddress": {
          "minLength": 1,
          "type": "string"
        },
        "maskBits": {
          "format": "int32",
          "maximum": 32,
          "minimum": 0,
          "type": "integer"
        }
      }
    },
    "AllowedHostList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllowedHostListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AllowedHostListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "maskBits": {
          "format": "int32",
          "type": "integer"
        },
        "accessProfileId": {
          "format": "int32",
          "type": "integer"
        },
        "accessProfileName": {
          "type": "string"
        }
      }
    },
    "AmazonAvailabilityZonesCommand": {
      "type": "object",
      "properties": {
        "region": {
          "type": "string"
        },
        "awsAccessKeyId": {
          "type": "string"
        },
        "awsSecretAccessKey": {
          "type": "string"
        },
        "cloudId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AmazonCredentialsListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "projectCount": {
          "format": "int32",
          "type": "integer"
        },
        "isLocked": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "availabilityZones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "continentName": {
          "type": "string"
        }
      }
    },
    "Annotations": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "isError": {
          "type": "boolean"
        },
        "result": {}
      }
    },
    "AppRepositoryList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactRepositoryDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ArchiveTicketCommand": {
      "required": [
        "ticketId"
      ],
      "type": "object",
      "properties": {
        "ticketId": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "ArticleList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArticlesListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ArticlesListDto": {
      "type": "object",
      "properties": {
        "senderName": {
          "type": "string"
        },
        "isCsm": {
          "type": "boolean"
        },
        "createAt": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "messageId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "ArtifactRepositoryDto": {
      "type": "object",
      "properties": {
        "repositoryId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "organizationName": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "verifiedPublisher": {
          "type": "boolean"
        },
        "official": {
          "type": "boolean"
        },
        "isBound": {
          "type": "boolean"
        },
        "hasCatalogApp": {
          "type": "boolean"
        },
        "trueUrl": {
          "type": "string"
        }
      }
    },
    "ArtifactUrlCheckerCommand": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "AttachDetachAlertingProfileCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "alertingProfileId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AutoSyncManagementCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "AutoUpgradeProjectsCommand": {
      "type": "object"
    },
    "AutoscalingSyncCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AvailableEndpointData": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "path": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "controller": {
          "type": "string"
        }
      }
    },
    "AvailableEndpointsList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointElements"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AvailablePackageDetailsDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "appRepoName": {
          "type": "string"
        },
        "appRepoOrganizationName": {
          "type": "string"
        },
        "appRepoId": {
          "type": "string"
        },
        "packageId": {
          "type": "string"
        },
        "logoId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "readme": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "securityReport": {
          "$ref": "#/definitions/SecurityReportSummaryDto"
        },
        "appVersion": {
          "type": "string"
        },
        "stars": {
          "format": "int32",
          "type": "integer"
        },
        "verifiedPublisher": {
          "type": "boolean"
        },
        "official": {
          "type": "boolean"
        },
        "boundCatalogs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "hasJsonSchema": {
          "type": "boolean"
        }
      }
    },
    "AvailablePackagesDto": {
      "type": "object",
      "properties": {
        "packageId": {
          "type": "string"
        },
        "catalogAppId": {
          "format": "int32",
          "type": "integer"
        },
        "installedInstanceCount": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "normalizedName": {
          "type": "string"
        },
        "logoImageId": {
          "type": "string"
        },
        "stars": {
          "format": "int64",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "appVersion": {
          "type": "string"
        },
        "deprecated": {
          "type": "boolean"
        },
        "signed": {
          "type": "boolean"
        },
        "isLocked": {
          "type": "boolean"
        },
        "securityReportSummary": {
          "$ref": "#/definitions/SecurityReportSummary"
        },
        "ts": {
          "type": "string"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        }
      }
    },
    "AvailablePackagesList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailablePackagesDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AwsBlockDeviceMappingsCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "imageId": {
          "type": "string"
        }
      }
    },
    "AwsCommonImages": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "AwsCredentialList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AmazonCredentialsListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AwsCredentialsForProjectDto": {
      "type": "object",
      "properties": {
        "awsAccessKeyId": {
          "type": "string"
        },
        "awsSecretAccessKey": {
          "type": "string"
        },
        "awsRegion": {
          "type": "string"
        }
      }
    },
    "AwsExtendedImagesListDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "platformDetails": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "ownerAlias": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        }
      }
    },
    "AwsFlavorList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AwsFlavorListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AwsFlavorListDto": {
      "type": "object",
      "properties": {
        "ram": {
          "format": "int64",
          "type": "integer"
        },
        "cpu": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {},
        "linuxPrice": {
          "type": "string"
        },
        "windowsPrice": {
          "type": "string"
        },
        "windowsSpotPrice": {
          "type": "string"
        },
        "linuxSpotPrice": {
          "type": "string"
        }
      }
    },
    "AwsImagesPostList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AwsExtendedImagesListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AwsImagesPostListCommand": {
      "type": "object",
      "properties": {
        "cloudId": {
          "format": "int32",
          "type": "integer"
        },
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "sortBy": {
          "type": "string"
        },
        "sortDirection": {
          "type": "string"
        },
        "search": {
          "type": "string"
        },
        "latest": {
          "type": "boolean"
        },
        "owners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AwsOwnerDetails": {
      "type": "object",
      "properties": {
        "ownerId": {
          "type": "string"
        },
        "ownerName": {
          "type": "string"
        },
        "image": {
          "$ref": "#/definitions/AwsCommonImages"
        }
      }
    },
    "AwsProjectAZSubnetDto": {
      "type": "object",
      "properties": {
        "zone": {
          "type": "string"
        },
        "publicIp": {
          "type": "string"
        },
        "privateIp": {
          "type": "string"
        }
      }
    },
    "AwsRegionDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      }
    },
    "AzResult": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AzureCommonImages": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "AzureCredentialList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureCredentialsListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AzureCredentialsForProjectDto": {
      "type": "object",
      "properties": {
        "azureClientId": {
          "type": "string"
        },
        "azureClientSecret": {
          "type": "string"
        },
        "azureSubscriptionId": {
          "type": "string"
        },
        "azureTenantId": {
          "type": "string"
        },
        "azureLocation": {
          "type": "string"
        }
      }
    },
    "AzureCredentialsListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "projectCount": {
          "format": "int32",
          "type": "integer"
        },
        "isLocked": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "availabilityZones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "continentName": {
          "type": "string"
        }
      }
    },
    "AzureDashboardCommand": {
      "type": "object",
      "properties": {
        "cloudId": {
          "format": "int32",
          "type": "integer"
        },
        "filterBy": {
          "type": "string"
        }
      }
    },
    "AzureFlavorList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureFlavorsWithPriceDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AzureFlavorsWithPriceDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "windowsPrice": {
          "type": "string"
        },
        "linuxPrice": {
          "type": "string"
        },
        "windowsSpotPrice": {
          "type": "string"
        },
        "linuxSpotPrice": {
          "type": "string"
        },
        "cpu": {
          "format": "int32",
          "type": "integer"
        },
        "ram": {
          "format": "int64",
          "type": "integer"
        },
        "description": {},
        "maxDataDiskCount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "AzureImageList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonStringBasedDropdownDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AzureLocationsCommand": {
      "type": "object",
      "properties": {
        "azureSubscriptionId": {
          "type": "string"
        },
        "azureClientId": {
          "type": "string"
        },
        "azureClientSecret": {
          "type": "string"
        },
        "azureTenantId": {
          "type": "string"
        }
      }
    },
    "AzureOffersList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AzurePublisherDetails": {
      "type": "object",
      "properties": {
        "publisher": {
          "type": "string"
        },
        "image": {
          "$ref": "#/definitions/AzureCommonImages"
        }
      }
    },
    "AzurePublishersList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AzureQuotaListRecordDto": {
      "type": "object",
      "properties": {
        "totalCores": {
          "format": "int64",
          "type": "integer"
        },
        "currentUsage": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "AzureSkusList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AzureSubscriptionListCommand": {
      "required": [
        "clientId",
        "clientSecret",
        "tenantId"
      ],
      "type": "object",
      "properties": {
        "clientId": {
          "minLength": 1,
          "type": "string"
        },
        "clientSecret": {
          "minLength": 1,
          "type": "string"
        },
        "tenantId": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "AzureZonesCommand": {
      "type": "object",
      "properties": {
        "azureSubscriptionId": {
          "type": "string"
        },
        "azureClientId": {
          "type": "string"
        },
        "azureClientSecret": {
          "type": "string"
        },
        "azureTenantId": {
          "type": "string"
        },
        "azureLocation": {
          "type": "string"
        },
        "cloudId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BackupCredentials": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupCredentialsListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BackupCredentialsCreateCommand": {
      "required": [
        "s3AccessKeyId",
        "s3Endpoint",
        "s3Name",
        "s3SecretKey"
      ],
      "type": "object",
      "properties": {
        "s3Name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "s3AccessKeyId": {
          "minLength": 1,
          "type": "string"
        },
        "s3SecretKey": {
          "minLength": 1,
          "type": "string"
        },
        "s3Endpoint": {
          "minLength": 1,
          "type": "string"
        },
        "s3Region": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BackupCredentialsForOrganizationEntity": {
      "type": "object",
      "properties": {
        "backupCredentialId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        }
      }
    },
    "BackupCredentialsListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "s3Name": {
          "type": "string"
        },
        "s3AccessKeyId": {
          "type": "string"
        },
        "s3Endpoint": {
          "type": "string"
        },
        "s3Region": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "isLocked": {
          "type": "boolean"
        },
        "createdBy": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        }
      }
    },
    "BackupCredentialsSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "BackupCredentialsSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonSearchResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BackupCredentialsUpdateCommand": {
      "required": [
        "id",
        "s3AccessKeyId",
        "s3Name",
        "s3SecretKey"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "s3Name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "s3AccessKeyId": {
          "minLength": 1,
          "type": "string"
        },
        "s3SecretKey": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "BackupDto": {
      "type": "object",
      "properties": {
        "includedNamespace": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludedNamespace": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BackupLockManagerCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "BackupMakeDefaultCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BackupStorageLocationDto": {
      "type": "object",
      "properties": {
        "metadataName": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "lastValidated": {
          "format": "date-time",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "accessMode": {
          "type": "string"
        },
        "phase": {
          "type": "string"
        },
        "backupCredentialId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BecomePartnerCommand": {
      "required": [
        "email",
        "fullName"
      ],
      "type": "object",
      "properties": {
        "fullName": {
          "maxLength": 100,
          "minLength": 3,
          "type": "string"
        },
        "email": {
          "format": "email",
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "BillingCredentialsSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "BillingCredentialsSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonSearchResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BillingInfo": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillingSummaryDto"
          }
        },
        "totalTcu": {
          "format": "double",
          "type": "number"
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BillingInfoDto": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string"
        },
        "vatNumber": {
          "type": "string"
        },
        "legalName": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "billingEmail": {
          "type": "string"
        },
        "address": {
          "type": "string"
        }
      }
    },
    "BillingSummaryDto": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "projectName": {
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "tcu": {
          "format": "double",
          "type": "number"
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "BindAppRepositoryCommand": {
      "type": "object",
      "properties": {
        "filteringElements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilteringElementDto"
          }
        }
      }
    },
    "BindFlavorToProjectCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "flavors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BindImageToProjectCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BindOrganizationsCommand": {
      "required": [
        "partnerId"
      ],
      "type": "object",
      "properties": {
        "organizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrganizationDto"
          }
        },
        "partnerId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BindOrganizationsToRuleDto": {
      "type": "object",
      "properties": {
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "ruleDiscountRate": {
          "format": "double",
          "type": "number"
        },
        "isBound": {
          "type": "boolean"
        }
      }
    },
    "BindProjectGroupsToUserGroupCommand": {
      "type": "object",
      "properties": {
        "projectGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateUserProjectGroupDto"
          }
        },
        "userGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "userGroupName": {
          "type": "string"
        }
      }
    },
    "BindProjectsCommand": {
      "type": "object",
      "properties": {
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateUserProjectDto"
          }
        },
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      }
    },
    "BindProjectsToCatalogCommand": {
      "required": [
        "catalogId",
        "projects"
      ],
      "type": "object",
      "properties": {
        "projects": {
          "minItems": 1,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateCatalogDto"
          }
        },
        "catalogId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        }
      }
    },
    "BindPrometheusOrganizationsCommand": {
      "type": "object",
      "properties": {
        "organizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BindOrganizationsToRuleDto"
          }
        },
        "prometheusRuleId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BindRulesCommand": {
      "required": [
        "organizationId"
      ],
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BindRulesToOrganizationDto"
          }
        },
        "organizationId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        }
      }
    },
    "BindRulesToOrganizationDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "discountRate": {
          "format": "double",
          "type": "number"
        },
        "isBound": {
          "type": "boolean"
        }
      }
    },
    "BindSubscriptionCommand": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "yearly": {
          "type": "boolean"
        }
      }
    },
    "BindSubscriptionResponseDto": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "paymentIntentClientSecret": {
          "type": "string"
        },
        "invoiceFailureCode": {
          "type": "string"
        },
        "invoiceFailureMessage": {
          "type": "string"
        },
        "invoiceFailureReason": {
          "type": "string"
        }
      }
    },
    "BindUnbindEndpointToTokenCommand": {
      "type": "object",
      "properties": {
        "tokenId": {
          "type": "string"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableEndpointData"
          }
        },
        "bindAll": {
          "type": "boolean"
        }
      }
    },
    "BindUserGroupsToProjectGroupCommand": {
      "required": [
        "projectGroupId"
      ],
      "type": "object",
      "properties": {
        "userGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateProjectUserGroupDto"
          }
        },
        "projectGroupId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "projectGroupName": {
          "type": "string"
        }
      }
    },
    "BindUsersCommand": {
      "required": [
        "projectId"
      ],
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateProjectUserDto"
          }
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BlockOrganizationCommand": {
      "type": "object"
    },
    "BoundFlavorsForProjectsList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoundFlavorsForProjectsListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BoundFlavorsForProjectsListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "cpu": {
          "format": "int32",
          "type": "integer"
        },
        "ram": {
          "format": "int64",
          "type": "integer"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "isAzure": {
          "type": "boolean"
        },
        "isAws": {
          "type": "boolean"
        },
        "isOpenstack": {
          "type": "boolean"
        },
        "isGoogle": {
          "type": "boolean"
        },
        "projectName": {
          "type": "string"
        },
        "maxDataDiskCount": {
          "format": "int32",
          "type": "integer"
        },
        "hasLinuxSpotPrice": {
          "type": "boolean"
        },
        "hasWindowsSpotPrice": {
          "type": "boolean"
        },
        "linuxSpotPrice": {
          "type": "string"
        },
        "linuxPrice": {
          "type": "string"
        },
        "windowsSpotPrice": {
          "type": "string"
        },
        "windowsPrice": {
          "type": "string"
        }
      }
    },
    "BoundImagesForProjectsList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoundImagesForProjectsListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BoundImagesForProjectsListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "isAzure": {
          "type": "boolean"
        },
        "isAws": {
          "type": "boolean"
        },
        "isOpenstack": {
          "type": "boolean"
        },
        "projectName": {
          "type": "string"
        },
        "size": {
          "format": "double",
          "type": "number"
        },
        "imageId": {
          "type": "string"
        },
        "cloudId": {
          "format": "int32",
          "type": "integer"
        },
        "isWindows": {
          "type": "boolean"
        }
      }
    },
    "BridgeListCommand": {
      "required": [
        "hypervisor",
        "password",
        "url",
        "username"
      ],
      "type": "object",
      "properties": {
        "url": {
          "minLength": 1,
          "type": "string"
        },
        "username": {
          "minLength": 1,
          "type": "string"
        },
        "password": {
          "minLength": 1,
          "type": "string"
        },
        "hypervisor": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "CBackupDto": {
      "type": "object",
      "properties": {
        "metadataName": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "expiration": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "phase": {
          "type": "string"
        }
      }
    },
    "CDeleteBackupRequestDto": {
      "type": "object",
      "properties": {
        "metadataName": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "backupName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "phase": {
          "type": "string"
        }
      }
    },
    "CRestoreDto": {
      "type": "object",
      "properties": {
        "metadataName": {
          "type": "string"
        },
        "backupName": {
          "type": "string"
        },
        "scheduleName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "excludeNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includeNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "completionDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "startTimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "warnings": {
          "format": "int64",
          "type": "integer"
        },
        "phase": {
          "type": "string"
        }
      }
    },
    "CScheduleDto": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status"
        },
        "metadataName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "schedule": {
          "type": "string"
        },
        "ttl": {
          "type": "string"
        },
        "lastBackup": {
          "format": "date-time",
          "type": "string"
        },
        "phase": {
          "type": "string"
        },
        "excludedNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includedNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CardInformationDto": {
      "type": "object",
      "properties": {
        "expirationMonth": {
          "type": "string"
        },
        "expirationYear": {
          "type": "string"
        },
        "last4": {
          "type": "string"
        },
        "brand": {
          "type": "string"
        },
        "holderName": {
          "type": "string"
        },
        "balance": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "CatalogAppDetailsDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "appRepoName": {
          "type": "string"
        },
        "appRepoOrganizationName": {
          "type": "string"
        },
        "appRepoId": {
          "format": "int32",
          "type": "integer"
        },
        "catalogName": {
          "type": "string"
        },
        "catalogId": {
          "format": "int32",
          "type": "integer"
        },
        "packageId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "logoId": {
          "type": "string"
        },
        "projectApps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectAppDto"
          }
        },
        "description": {
          "type": "string"
        },
        "readme": {
          "type": "string"
        },
        "securityReport": {
          "$ref": "#/definitions/SecurityReportSummaryDto"
        },
        "appVersion": {
          "type": "string"
        },
        "stars": {
          "format": "int32",
          "type": "integer"
        },
        "verifiedPublisher": {
          "type": "boolean"
        },
        "official": {
          "type": "boolean"
        },
        "hasJsonSchema": {
          "type": "boolean"
        }
      }
    },
    "CatalogAppLockManagement": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "CatalogAppParamsDetailsDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "catalogAppName": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "isEditableWhenInstalling": {
          "type": "boolean"
        },
        "isEditableAfterInstallation": {
          "type": "boolean"
        },
        "isMandatory": {
          "type": "boolean"
        },
        "hasJsonSchema": {
          "type": "boolean"
        }
      }
    },
    "CatalogAppParamsDto": {
      "required": [
        "key"
      ],
      "type": "object",
      "properties": {
        "key": {
          "minLength": 1,
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "isEditableWhenInstalling": {
          "type": "boolean"
        },
        "isEditableAfterInstallation": {
          "type": "boolean"
        },
        "isMandatory": {
          "type": "boolean"
        }
      }
    },
    "CatalogDropdownDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "packageIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CatalogList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CatalogListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isLocked": {
          "type": "boolean"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "packageIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "boundProjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "boundApplications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailablePackagesDto"
          }
        }
      }
    },
    "CatalogLockManagementCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "ChangeCardCommand": {
      "required": [
        "paymentMethodId"
      ],
      "type": "object",
      "properties": {
        "paymentMethodId": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "ChangePasswordCommand": {
      "required": [
        "newPassword",
        "password"
      ],
      "type": "object",
      "properties": {
        "password": {
          "minLength": 6,
          "type": "string"
        },
        "newPassword": {
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "Chart": {
      "type": "object",
      "properties": {
        "spec": {
          "$ref": "#/definitions/ChartSpec"
        }
      }
    },
    "ChartSpec": {
      "type": "object",
      "properties": {
        "chart": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "sourceRef": {
          "$ref": "#/definitions/SourceRef"
        },
        "interval": {
          "type": "string"
        }
      }
    },
    "CheckAwsCommand": {
      "required": [
        "awsAccessKeyId",
        "awsSecretAccessKey",
        "region"
      ],
      "type": "object",
      "properties": {
        "awsAccessKeyId": {
          "minLength": 1,
          "type": "string"
        },
        "awsSecretAccessKey": {
          "minLength": 1,
          "type": "string"
        },
        "region": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "CheckAzureCommand": {
      "required": [
        "azureClientId",
        "azureClientSecret",
        "azureTenantId"
      ],
      "type": "object",
      "properties": {
        "azureClientId": {
          "minLength": 1,
          "type": "string"
        },
        "azureClientSecret": {
          "minLength": 1,
          "type": "string"
        },
        "azureTenantId": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "CheckAzureCpuQuotaCommand": {
      "required": [
        "cloudId"
      ],
      "type": "object",
      "properties": {
        "cloudId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        }
      }
    },
    "CheckOpenstackCommand": {
      "required": [
        "openStackDomain",
        "openStackPassword",
        "openStackUrl",
        "openStackUser"
      ],
      "type": "object",
      "properties": {
        "openStackUser": {
          "minLength": 1,
          "type": "string"
        },
        "openStackPassword": {
          "minLength": 1,
          "type": "string"
        },
        "openStackUrl": {
          "minLength": 1,
          "type": "string"
        },
        "openStackDomain": {
          "minLength": 1,
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        }
      }
    },
    "CheckPrometheusCommand": {
      "required": [
        "password",
        "url",
        "userName"
      ],
      "type": "object",
      "properties": {
        "password": {
          "minLength": 1,
          "type": "string"
        },
        "userName": {
          "minLength": 1,
          "type": "string"
        },
        "url": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "CheckS3Command": {
      "required": [
        "s3AccessKeyId",
        "s3Endpoint",
        "s3Region",
        "s3SecretKey"
      ],
      "type": "object",
      "properties": {
        "s3AccessKeyId": {
          "minLength": 1,
          "type": "string"
        },
        "s3SecretKey": {
          "minLength": 1,
          "type": "string"
        },
        "s3Endpoint": {
          "minLength": 1,
          "type": "string"
        },
        "s3Region": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "CheckTanzuCommand": {
      "required": [
        "namespace",
        "password",
        "url",
        "username",
        "volumeType"
      ],
      "type": "object",
      "properties": {
        "username": {
          "maxLength": 100,
          "minLength": 3,
          "type": "string"
        },
        "url": {
          "maxLength": 150,
          "minLength": 3,
          "type": "string"
        },
        "password": {
          "maxLength": 100,
          "minLength": 3,
          "type": "string"
        },
        "namespace": {
          "maxLength": 63,
          "minLength": 3,
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "volumeType": {
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "CidrCommand": {
      "required": [
        "cidr"
      ],
      "type": "object",
      "properties": {
        "cidr": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "ClearCanceledPaymentMethodCommand": {
      "type": "object"
    },
    "ClearProjectBackupCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CloseTicketCommand": {
      "required": [
        "ticketId"
      ],
      "type": "object",
      "properties": {
        "ticketId": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "CloudCredentialsDropdownRecordDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "cloudType": {
          "type": "string"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectWithFlavorsAndImagesDto"
          }
        }
      }
    },
    "CloudCredentialsForOrganizationEntity": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "fullName": {
          "type": "string"
        },
        "cloudType": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        }
      }
    },
    "CloudCredentialsResponseData": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "cloudType": {
          "type": "string"
        }
      }
    },
    "CloudCredentialsSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "CloudCredentialsSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudCredentialsResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CloudLockManagerCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "CloudRole": {
      "format": "int32",
      "enum": [
        100,
        200,
        300,
        400
      ],
      "type": "integer"
    },
    "CloudStatus": {
      "format": "int32",
      "enum": [
        100,
        200,
        250,
        300,
        400,
        500,
        600,
        700,
        800
      ],
      "type": "integer"
    },
    "CloudType": {
      "format": "int32",
      "enum": [
        100,
        200,
        300,
        400,
        500,
        600
      ],
      "type": "integer"
    },
    "CommitStandAloneVmCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CommonAvailabilityDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CommonDropdownDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CommonDropdownIsBoundDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "isBound": {
          "type": "boolean"
        }
      }
    },
    "CommonDropdownIsBoundDtoForProject": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "isBound": {
          "type": "boolean"
        },
        "hasKubeConfigFile": {
          "type": "boolean"
        }
      }
    },
    "CommonExtendedDropdownDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        }
      }
    },
    "CommonSearchKubernetesResponseData": {
      "type": "object",
      "properties": {
        "metadataName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "projectName": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        }
      }
    },
    "CommonSearchResponseData": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        }
      }
    },
    "CommonStringBasedDropdownDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CommonStringDropdownIsBoundDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isBound": {
          "type": "boolean"
        }
      }
    },
    "Condition": {
      "type": "object",
      "properties": {
        "lastTransitionTime": {
          "format": "date-time",
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ConfigMapDto": {
      "type": "object",
      "properties": {
        "metadataName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "age": {
          "type": "string"
        }
      }
    },
    "ConfigMapSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "ConfigMapSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonSearchKubernetesResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ConfigMaps": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigMapDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ConfirmEmailCommand": {
      "required": [
        "mode",
        "newEmail"
      ],
      "type": "object",
      "properties": {
        "newEmail": {
          "format": "email",
          "minLength": 1,
          "type": "string"
        },
        "mode": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "ConsoleScreenshotCommand": {
      "type": "object",
      "properties": {
        "serverId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ContactUsCommand": {
      "required": [
        "businessEmail",
        "companyName",
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 200,
          "minLength": 3,
          "type": "string"
        },
        "businessEmail": {
          "format": "email",
          "minLength": 1,
          "type": "string"
        },
        "companyName": {
          "maxLength": 200,
          "minLength": 3,
          "type": "string"
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "CostComponent": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "hourlyQuantity": {
          "type": "string"
        },
        "monthlyQuantity": {
          "type": "string"
        },
        "price": {
          "type": "string"
        },
        "hourlyCost": {
          "type": "string"
        },
        "monthlyCost": {
          "type": "string"
        }
      }
    },
    "CountryListDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "isEu": {
          "type": "boolean"
        }
      }
    },
    "CreateAccessProfileCommand": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "httpProxy": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "sshUsers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SshUserCreateDto"
          }
        },
        "dnsServers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DnsServerCreateDto"
          }
        },
        "ntpServers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NtpServerCreateDto"
          }
        },
        "allowedHosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllowedHostCreateDto"
          }
        }
      }
    },
    "CreateAlertDto": {
      "type": "object",
      "properties": {
        "alerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KubernetesAlertCreateDto"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "CreateAlertingIntegrationCommand": {
      "required": [
        "alertingIntegrationType",
        "alertingProfileId",
        "url"
      ],
      "type": "object",
      "properties": {
        "url": {
          "minLength": 1,
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "alertingIntegrationType": {
          "$ref": "#/definitions/AlertingIntegrationType"
        },
        "alertingProfileId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        }
      }
    },
    "CreateAlertingProfileCommand": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "slackConfigurationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "emails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertingEmailDto"
          }
        },
        "webhooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertingWebhookDto"
          }
        },
        "alertingIntegrations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertingIntegrationDto"
          }
        },
        "reminder": {
          "$ref": "#/definitions/AlertingReminder"
        }
      }
    },
    "CreateAllowedHostCommand": {
      "required": [
        "accessProfileId",
        "ipAddress"
      ],
      "type": "object",
      "properties": {
        "accessProfileId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "ipAddress": {
          "minLength": 1,
          "type": "string"
        },
        "maskBits": {
          "format": "int32",
          "maximum": 32,
          "minimum": 0,
          "type": "integer"
        }
      }
    },
    "CreateAwsCloudCommand": {
      "required": [
        "awsAccessKeyId",
        "awsRegion",
        "awsSecretAccessKey",
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "awsSecretAccessKey": {
          "minLength": 1,
          "type": "string"
        },
        "awsAccessKeyId": {
          "minLength": 1,
          "type": "string"
        },
        "azCount": {
          "format": "int32",
          "type": "integer"
        },
        "awsRegion": {
          "minLength": 1,
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CreateAzureCloudCommand": {
      "required": [
        "azureClientId",
        "azureClientSecret",
        "azureLocation",
        "azureSubscriptionId",
        "azureTenantId",
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "azureSubscriptionId": {
          "minLength": 1,
          "type": "string"
        },
        "azureClientId": {
          "minLength": 1,
          "type": "string"
        },
        "azureClientSecret": {
          "minLength": 1,
          "type": "string"
        },
        "azureTenantId": {
          "minLength": 1,
          "type": "string"
        },
        "azureLocation": {
          "minLength": 1,
          "type": "string"
        },
        "azCount": {
          "format": "int32",
          "type": "integer"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CreateBackupPolicyCommand": {
      "required": [
        "cronPeriod",
        "name",
        "projectId",
        "retentionPeriod"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "includeNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cronPeriod": {
          "minLength": 1,
          "type": "string"
        },
        "retentionPeriod": {
          "minLength": 1,
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        }
      }
    },
    "CreateBillingSummaryCommand": {
      "required": [
        "beginApply",
        "icu",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "icu": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "beginApply": {
          "format": "date-time",
          "minLength": 1,
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        }
      }
    },
    "CreateCatalogAppCommand": {
      "required": [
        "catalogId",
        "packageName",
        "repoName"
      ],
      "type": "object",
      "properties": {
        "repoName": {
          "minLength": 1,
          "type": "string"
        },
        "packageName": {
          "minLength": 1,
          "type": "string"
        },
        "catalogId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "version": {
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogAppParamsDto"
          }
        }
      }
    },
    "CreateCatalogCommand": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "CreateDnsServerCommand": {
      "required": [
        "accessProfileId",
        "address"
      ],
      "type": "object",
      "properties": {
        "address": {
          "minLength": 1,
          "type": "string"
        },
        "accessProfileId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        }
      }
    },
    "CreateInvoiceCommand": {
      "required": [
        "name",
        "organizationSubscriptionId"
      ],
      "type": "object",
      "properties": {
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "organizationSubscriptionId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "isPaid": {
          "type": "boolean"
        },
        "requiredPaymentAction": {
          "type": "boolean"
        },
        "stripeInvoiceId": {
          "type": "string"
        },
        "price": {
          "format": "double",
          "maximum": 30000000,
          "minimum": 1,
          "type": "number"
        }
      }
    },
    "CreateKeyPoolCommand": {
      "type": "object"
    },
    "CreateKubeConfigCommand": {
      "required": [
        "name",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 230,
          "minLength": 3,
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "isAccessibleForAll": {
          "type": "boolean"
        },
        "isAccessibleForManager": {
          "type": "boolean"
        },
        "kubeConfigRoleId": {
          "format": "int32",
          "type": "integer"
        },
        "userId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "ttl": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CreateKubernetesProfileCommand": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "octaviaEnabled": {
          "type": "boolean"
        },
        "exposeNodePortOnBastion": {
          "type": "boolean"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "taikunLBEnabled": {
          "type": "boolean"
        },
        "allowSchedulingOnMaster": {
          "type": "boolean"
        },
        "uniqueClusterName": {
          "type": "boolean"
        }
      }
    },
    "CreateNtpServerCommand": {
      "required": [
        "accessProfileId",
        "address"
      ],
      "type": "object",
      "properties": {
        "address": {
          "minLength": 1,
          "type": "string"
        },
        "accessProfileId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        }
      }
    },
    "CreateOpaProfileCommand": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 50,
          "minLength": 2,
          "type": "string"
        },
        "forbidNodePort": {
          "type": "boolean"
        },
        "forbidHttpIngress": {
          "type": "boolean"
        },
        "requireProbe": {
          "type": "boolean"
        },
        "uniqueIngresses": {
          "type": "boolean"
        },
        "uniqueServiceSelector": {
          "type": "boolean"
        },
        "allowedRepo": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "forbidSpecificTags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ingressWhitelist": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CreateOpenstackCloudCommand": {
      "required": [
        "name",
        "openStackPassword",
        "openStackPublicNetwork",
        "openStackRegion",
        "openStackUrl",
        "openStackUser"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "openStackUser": {
          "minLength": 1,
          "type": "string"
        },
        "openStackPassword": {
          "minLength": 1,
          "type": "string"
        },
        "openStackUrl": {
          "minLength": 1,
          "type": "string"
        },
        "openStackProject": {
          "type": "string"
        },
        "openStackPublicNetwork": {
          "minLength": 1,
          "type": "string"
        },
        "openStackAvailabilityZone": {
          "type": "string"
        },
        "openStackDomain": {
          "type": "string"
        },
        "openStackRegion": {
          "minLength": 1,
          "type": "string"
        },
        "openStackContinent": {
          "type": "string"
        },
        "openStackVolumeType": {
          "type": "string"
        },
        "openStackImportNetwork": {
          "type": "boolean"
        },
        "openStackInternalSubnetId": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "applicationCredEnabled": {
          "type": "boolean"
        },
        "isAdmin": {
          "type": "boolean"
        }
      }
    },
    "CreateProjectAppCommand": {
      "required": [
        "catalogAppId",
        "name",
        "namespace",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 63,
          "minLength": 3,
          "type": "string"
        },
        "namespace": {
          "maxLength": 63,
          "minLength": 1,
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "catalogAppId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "extraValues": {
          "type": "string"
        },
        "autoSync": {
          "type": "boolean"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectAppParamsDto"
          }
        }
      }
    },
    "CreateProjectCommand": {
      "required": [
        "cloudCredentialId",
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "kubernetesVersion": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "cloudCredentialId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "s3CredentialId": {
          "format": "int32",
          "type": "integer"
        },
        "accessProfileId": {
          "format": "int32",
          "type": "integer"
        },
        "opaProfileId": {
          "format": "int32",
          "type": "integer"
        },
        "kubernetesProfileId": {
          "format": "int32",
          "type": "integer"
        },
        "isKubernetes": {
          "type": "boolean"
        },
        "isAutoUpgrade": {
          "type": "boolean"
        },
        "isBackupEnabled": {
          "type": "boolean"
        },
        "isMonitoringEnabled": {
          "type": "boolean"
        },
        "flavors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "users": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "alertingProfileId": {
          "format": "int32",
          "type": "integer"
        },
        "taikunLBFlavor": {
          "type": "string"
        },
        "routerIdStartRange": {
          "format": "int32",
          "type": "integer"
        },
        "routerIdEndRange": {
          "format": "int32",
          "type": "integer"
        },
        "expiredAt": {
          "format": "date-time",
          "type": "string"
        },
        "deleteOnExpiration": {
          "type": "boolean"
        },
        "allowFullSpotKubernetes": {
          "type": "boolean"
        },
        "allowSpotWorkers": {
          "type": "boolean"
        },
        "allowSpotVMs": {
          "type": "boolean"
        },
        "maxSpotPrice": {
          "format": "double",
          "type": "number"
        },
        "autoscalingEnabled": {
          "type": "boolean"
        },
        "autoscalingGroupName": {
          "type": "string"
        },
        "minSize": {
          "format": "int32",
          "type": "integer"
        },
        "maxSize": {
          "format": "int32",
          "type": "integer"
        },
        "diskSize": {
          "format": "double",
          "type": "number"
        },
        "autoscalingFlavor": {
          "type": "string"
        },
        "autoscalingSpotEnabled": {
          "type": "boolean"
        },
        "cidr": {
          "type": "string"
        },
        "netMask": {
          "format": "int32",
          "type": "integer"
        },
        "saveAsTemplate": {
          "type": "boolean"
        },
        "templateName": {
          "type": "string"
        },
        "fromTemplate": {
          "$ref": "#/definitions/FromTemplateDto"
        },
        "serverTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerTemplateDto"
          }
        }
      }
    },
    "CreateProjectFromTemplateCommand": {
      "required": [
        "id",
        "projectName"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "projectName": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "canCommit": {
          "type": "boolean"
        }
      }
    },
    "CreateProjectGroupCommand": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "projectIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "CreateProxmoxCommand": {
      "required": [
        "name",
        "password",
        "storage",
        "url",
        "username",
        "vmTemplateName"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "username": {
          "minLength": 1,
          "type": "string"
        },
        "url": {
          "minLength": 1,
          "type": "string"
        },
        "password": {
          "minLength": 1,
          "type": "string"
        },
        "storage": {
          "minLength": 1,
          "type": "string"
        },
        "vmTemplateName": {
          "minLength": 1,
          "type": "string"
        },
        "continent": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "hypervisors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "publicNetwork": {
          "$ref": "#/definitions/CreateProxmoxNetworkDto"
        },
        "privateNetwork": {
          "$ref": "#/definitions/CreateProxmoxNetworkDto"
        }
      }
    },
    "CreateProxmoxNetworkDto": {
      "required": [
        "bridge"
      ],
      "type": "object",
      "properties": {
        "bridge": {
          "minLength": 1,
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "netMask": {
          "format": "int32",
          "maximum": 28,
          "minimum": 16,
          "type": "integer"
        },
        "beginAllocationRange": {
          "type": "string"
        },
        "endAllocationRange": {
          "type": "string"
        }
      }
    },
    "CreateSecurityGroupCommand": {
      "required": [
        "name",
        "remoteIpPrefix",
        "standAloneProfileId"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "protocol": {
          "$ref": "#/definitions/SecurityGroupProtocol"
        },
        "portMinRange": {
          "format": "int32",
          "type": "integer"
        },
        "portMaxRange": {
          "format": "int32",
          "type": "integer"
        },
        "remoteIpPrefix": {
          "minLength": 1,
          "type": "string"
        },
        "standAloneProfileId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        }
      }
    },
    "CreateSlackConfigurationCommand": {
      "required": [
        "channel",
        "name",
        "url"
      ],
      "type": "object",
      "properties": {
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "maxLength": 40,
          "minLength": 3,
          "type": "string"
        },
        "url": {
          "minLength": 1,
          "type": "string"
        },
        "channel": {
          "maxLength": 500,
          "minLength": 3,
          "type": "string"
        },
        "slackType": {
          "$ref": "#/definitions/SlackType"
        }
      }
    },
    "CreateSshUserCommand": {
      "required": [
        "accessProfileId",
        "name",
        "sshPublicKey"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "sshPublicKey": {
          "minLength": 1,
          "type": "string"
        },
        "accessProfileId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        }
      }
    },
    "CreateStandAloneDiskCommand": {
      "required": [
        "name",
        "standaloneVmId"
      ],
      "type": "object",
      "properties": {
        "standaloneVmId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "size": {
          "format": "int64",
          "maximum": 10000,
          "minimum": 1,
          "type": "integer"
        },
        "volumeType": {
          "type": "string"
        },
        "deviceName": {
          "type": "string"
        },
        "lunId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CreateStandAloneVmCommand": {
      "required": [
        "flavorName",
        "image",
        "name",
        "projectId",
        "standAloneProfileId"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 52,
          "minLength": 1,
          "type": "string"
        },
        "flavorName": {
          "minLength": 1,
          "type": "string"
        },
        "volumeSize": {
          "format": "int64",
          "maximum": 8192,
          "minimum": 1,
          "type": "integer"
        },
        "volumeType": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "publicIpEnabled": {
          "type": "boolean"
        },
        "image": {
          "minLength": 1,
          "type": "string"
        },
        "cloudInit": {
          "type": "string"
        },
        "standAloneProfileId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "count": {
          "format": "int32",
          "maximum": 50,
          "minimum": 1,
          "type": "integer"
        },
        "spotPrice": {
          "format": "double",
          "type": "number"
        },
        "spotInstance": {
          "type": "boolean"
        },
        "availabilityZone": {
          "type": "string"
        },
        "hypervisor": {
          "type": "string"
        },
        "standAloneVmDisks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandAloneVmDiskDto"
          }
        },
        "standAloneMetaDatas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandAloneMetaDataDto"
          }
        }
      }
    },
    "CreateStripeCustomerCommand": {
      "required": [
        "country"
      ],
      "type": "object",
      "properties": {
        "legalName": {
          "type": "string"
        },
        "billingEmail": {
          "type": "string"
        },
        "country": {
          "maxLength": 90,
          "minLength": 3,
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "vatNumber": {
          "type": "string"
        }
      }
    },
    "CreateSubscriptionCommand": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "projectLimit": {
          "format": "int32",
          "maximum": 10000,
          "minimum": -1,
          "type": "integer"
        },
        "serverLimit": {
          "format": "int32",
          "maximum": 10000,
          "minimum": -1,
          "type": "integer"
        },
        "userLimit": {
          "format": "int32",
          "maximum": 10000,
          "minimum": -1,
          "type": "integer"
        },
        "cloudCredentialLimit": {
          "format": "int32",
          "maximum": 10000,
          "minimum": -1,
          "type": "integer"
        },
        "trialDays": {
          "format": "int32",
          "type": "integer"
        },
        "monthlyPrice": {
          "format": "double",
          "type": "number"
        },
        "tcuPrice": {
          "format": "double",
          "type": "number"
        },
        "yearlyPrice": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "CreateTanzuCommand": {
      "required": [
        "name",
        "namespace",
        "password",
        "url",
        "username",
        "volumeType"
      ],
      "type": "object",
      "properties": {
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "username": {
          "maxLength": 100,
          "minLength": 3,
          "type": "string"
        },
        "url": {
          "maxLength": 150,
          "minLength": 3,
          "type": "string"
        },
        "password": {
          "maxLength": 100,
          "minLength": 3,
          "type": "string"
        },
        "volumeType": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "namespace": {
          "maxLength": 63,
          "minLength": 3,
          "type": "string"
        },
        "tanzuContinent": {
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CreateTicketCommand": {
      "required": [
        "description",
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 200,
          "minLength": 3,
          "type": "string"
        },
        "description": {
          "maxLength": 2000,
          "minLength": 3,
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "priority": {
          "$ref": "#/definitions/TicketPriority"
        }
      }
    },
    "CreateUserCommand": {
      "required": [
        "email",
        "username"
      ],
      "type": "object",
      "properties": {
        "username": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "email": {
          "format": "email",
          "maxLength": 200,
          "minLength": 3,
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "role": {
          "$ref": "#/definitions/UserRole"
        }
      }
    },
    "CreateUserGroupCommand": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "userIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CredentialChartDto": {
      "type": "object",
      "properties": {
        "aws": {
          "format": "int32",
          "type": "integer"
        },
        "azure": {
          "format": "int32",
          "type": "integer"
        },
        "openstack": {
          "format": "int32",
          "type": "integer"
        },
        "google": {
          "format": "int32",
          "type": "integer"
        },
        "tanzu": {
          "format": "int32",
          "type": "integer"
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CredentialMakeDefaultCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CredentialsChart": {
      "type": "object",
      "properties": {
        "amazon": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AmazonCredentialsListDto"
          }
        },
        "openstack": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenstackCredentialsListDto"
          }
        },
        "azure": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureCredentialsListDto"
          }
        },
        "google": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoogleCredentialsListDto"
          }
        },
        "tanzu": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TanzuCredentialsListDto"
          }
        },
        "totalCountOpenstack": {
          "format": "int32",
          "type": "integer"
        },
        "totalCountAws": {
          "format": "int32",
          "type": "integer"
        },
        "totalCountAzure": {
          "format": "int32",
          "type": "integer"
        },
        "totalCountGoogle": {
          "format": "int32",
          "type": "integer"
        },
        "totalCountTanzu": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CredentialsForCli": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CredentialsForCliDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CredentialsForCliDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "cloudCredentialName": {
          "type": "string"
        },
        "cloudType": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "partnerName": {
          "type": "string"
        }
      }
    },
    "CredentialsForProjectList": {
      "type": "object",
      "properties": {
        "cloudType": {
          "$ref": "#/definitions/CloudType"
        },
        "cloudCredentialRevision": {
          "format": "int32",
          "type": "integer"
        },
        "billingEnabled": {
          "type": "boolean"
        },
        "continentName": {
          "type": "string"
        },
        "requiresVPN": {
          "type": "boolean"
        },
        "openstack": {
          "$ref": "#/definitions/OpenstackCredentialsForProjectDto"
        },
        "azure": {
          "$ref": "#/definitions/AzureCredentialsForProjectDto"
        },
        "aws": {
          "$ref": "#/definitions/AwsCredentialsForProjectDto"
        },
        "google": {
          "$ref": "#/definitions/GoogleCredentialForProjectDto"
        },
        "tanzu": {
          "$ref": "#/definitions/TanzuCredentialsForProjectDto"
        },
        "proxmox": {
          "$ref": "#/definitions/ProxmoxCredentialsForProjectDto"
        }
      }
    },
    "CronJobCommand": {
      "required": [
        "cronPeriod"
      ],
      "type": "object",
      "properties": {
        "cronPeriod": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "DaemonSetDto": {
      "type": "object",
      "properties": {
        "metadataName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "age": {
          "type": "string"
        }
      }
    },
    "DaemonSetSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "DaemonSetSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonSearchKubernetesResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DaemonSets": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DaemonSetDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DashboardChart": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/OrganizationEntityForDashboard"
        },
        "projects": {
          "$ref": "#/definitions/ProjectChartDto"
        },
        "cloudCredentials": {
          "$ref": "#/definitions/CredentialChartDto"
        },
        "servers": {
          "$ref": "#/definitions/ServerChartDto"
        },
        "standAloneVms": {
          "$ref": "#/definitions/ServerChartDto"
        }
      }
    },
    "DeleteAlertCommand": {
      "required": [
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        }
      }
    },
    "DeleteAlertingProfilesCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeleteBackupCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "DeleteBackupStorageLocationCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "storageLocation": {
          "type": "string"
        }
      }
    },
    "DeleteExpiredAlertsCommand": {
      "type": "object"
    },
    "DeleteExpiredEventsCommand": {
      "type": "object"
    },
    "DeleteExpiredHistoryLogsCommand": {
      "type": "object"
    },
    "DeleteExpiredRefreshTokensCommand": {
      "type": "object"
    },
    "DeleteExpiredServersCommand": {
      "type": "object"
    },
    "DeleteImageFromProjectCommand": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "DeleteKubeConfigByProjectIdCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeleteKubeConfigCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeleteOpaProfileCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeleteProjectActionCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeleteProjectCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "isForceDelete": {
          "type": "boolean"
        }
      }
    },
    "DeleteProjectInfracostCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeleteRedundantProjectActionsCommand": {
      "type": "object"
    },
    "DeleteRegisterExpiredOrganizationCommand": {
      "type": "object"
    },
    "DeleteRemovedSpotInstancesCommand": {
      "type": "object"
    },
    "DeleteRemovedUsersKubeConfigCommand": {
      "type": "object"
    },
    "DeleteRepositoryCommand": {
      "type": "object",
      "properties": {
        "repoName": {
          "type": "string"
        }
      }
    },
    "DeleteRequestsCommand": {
      "type": "object"
    },
    "DeleteRestoreCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "DeleteScheduleCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "DeleteSecurityGroupCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeleteServerCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "serverIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "deleteAutoscalingServers": {
          "type": "boolean"
        }
      }
    },
    "DeleteSlackConfigCommand": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "DeleteSshUserCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeleteStandAloneProfileCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeleteStandAloneVmCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "vmIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "DeleteStandAloneVmDiskCommand": {
      "type": "object",
      "properties": {
        "standaloneVmId": {
          "format": "int32",
          "type": "integer"
        },
        "vmDiskIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "DeleteSubscriptionCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeleteWholeProjectCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeploymentDto": {
      "type": "object",
      "properties": {
        "metadataName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "age": {
          "type": "string"
        }
      }
    },
    "DeploymentSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "DeploymentSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonSearchKubernetesResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Deployments": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DescribeConfigMapCommand": {
      "required": [
        "name",
        "namespace",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "DescribeCrdCommand": {
      "required": [
        "name",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "DescribeCronJobCommand": {
      "required": [
        "name",
        "namespace",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "DescribeDaemonSetCommand": {
      "required": [
        "name",
        "namespace",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "DescribeDeploymentCommand": {
      "required": [
        "name",
        "namespace",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "DescribeIngressCommand": {
      "required": [
        "name",
        "namespace",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "DescribeJobCommand": {
      "required": [
        "name",
        "namespace",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "DescribeNetworkPolicyCommand": {
      "required": [
        "name",
        "namespace",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "DescribeNodeCommand": {
      "required": [
        "name",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "DescribePodCommand": {
      "required": [
        "name",
        "namespace",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "DescribePodDisruptionCommand": {
      "required": [
        "name",
        "namespace",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "DescribePvcCommand": {
      "required": [
        "name",
        "namespace",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "DescribeSecretCommand": {
      "required": [
        "name",
        "namespace",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "DescribeServiceCommand": {
      "required": [
        "name",
        "namespace",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "DescribeStorageClassCommand": {
      "required": [
        "name",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "DescribeStsCommand": {
      "required": [
        "name",
        "namespace",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "DisableAutoscalingCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DisableBackupCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DisableGatekeeperCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DisableRepoCommand": {
      "required": [
        "repoName"
      ],
      "type": "object",
      "properties": {
        "repoName": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "DisableUserCommand": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "disable": {
          "type": "boolean"
        }
      }
    },
    "DnsCommand": {
      "required": [
        "address"
      ],
      "type": "object",
      "properties": {
        "address": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "DnsNtpAddressEditDto": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        }
      }
    },
    "DnsServerCreateDto": {
      "required": [
        "address"
      ],
      "type": "object",
      "properties": {
        "address": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "DnsServerListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "address": {
          "type": "string"
        }
      }
    },
    "DnsServersListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "address": {
          "type": "string"
        },
        "accessProfileName": {
          "type": "string"
        }
      }
    },
    "DocumentationData": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "key": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "DocumentationsList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentationData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DownloadInvoiceCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "DownloadKubeConfigCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DuplicateNameCheckerCommand": {
      "required": [
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "EditAlertingIntegrationCommand": {
      "required": [
        "alertingIntegrationType",
        "alertingProfileId",
        "id",
        "url"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "url": {
          "minLength": 1,
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "alertingIntegrationType": {
          "$ref": "#/definitions/AlertingIntegrationType"
        },
        "alertingProfileId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        }
      }
    },
    "EditAllowedHostDto": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "maskBits": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "EditArticleCommand": {
      "required": [
        "body",
        "messageId"
      ],
      "type": "object",
      "properties": {
        "messageId": {
          "minLength": 1,
          "type": "string"
        },
        "body": {
          "maxLength": 2000,
          "minLength": 3,
          "type": "string"
        }
      }
    },
    "EditAutoscalingCommand": {
      "required": [
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "minSize": {
          "format": "int32",
          "maximum": 100,
          "minimum": 0,
          "type": "integer"
        },
        "maxSize": {
          "format": "int32",
          "maximum": 100,
          "minimum": 0,
          "type": "integer"
        }
      }
    },
    "EditCatalogAppParamCommand": {
      "required": [
        "catalogAppId"
      ],
      "type": "object",
      "properties": {
        "catalogAppId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogAppParamsDto"
          }
        }
      }
    },
    "EditCatalogAppVersionCommand": {
      "required": [
        "catalogAppId",
        "version"
      ],
      "type": "object",
      "properties": {
        "catalogAppId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "version": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "EditCatalogCommand": {
      "required": [
        "id",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "EditProjectAppParamCommand": {
      "required": [
        "projectAppId"
      ],
      "type": "object",
      "properties": {
        "projectAppId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EditProjectAppParamsDto"
          }
        }
      }
    },
    "EditProjectAppParamsDto": {
      "required": [
        "key"
      ],
      "type": "object",
      "properties": {
        "key": {
          "minLength": 1,
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "EditSecurityGroupCommand": {
      "required": [
        "id",
        "name",
        "remoteIpPrefix"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "protocol": {
          "$ref": "#/definitions/SecurityGroupProtocol"
        },
        "portMinRange": {
          "format": "int32",
          "type": "integer"
        },
        "portMaxRange": {
          "format": "int32",
          "type": "integer"
        },
        "remoteIpPrefix": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "EditSshUserCommand": {
      "required": [
        "accessProfileId",
        "id",
        "name",
        "sshPublicKey"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "sshPublicKey": {
          "minLength": 1,
          "type": "string"
        },
        "accessProfileId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        }
      }
    },
    "EditTicketCommand": {
      "required": [
        "description",
        "name",
        "ticketId"
      ],
      "type": "object",
      "properties": {
        "ticketId": {
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "maxLength": 200,
          "minLength": 3,
          "type": "string"
        },
        "description": {
          "maxLength": 2000,
          "minLength": 3,
          "type": "string"
        }
      }
    },
    "EnableAutoscalingCommand": {
      "required": [
        "autoscalingGroupName",
        "flavor",
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "autoscalingGroupName": {
          "minLength": 1,
          "type": "string"
        },
        "minSize": {
          "format": "int32",
          "maximum": 100,
          "minimum": 0,
          "type": "integer"
        },
        "maxSize": {
          "format": "int32",
          "maximum": 100,
          "minimum": 0,
          "type": "integer"
        },
        "diskSize": {
          "format": "double",
          "maximum": 8796093022209,
          "minimum": 32212254719,
          "type": "number"
        },
        "flavor": {
          "minLength": 1,
          "type": "string"
        },
        "spotEnabled": {
          "type": "boolean"
        }
      }
    },
    "EnableBackupCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "s3CredentialId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "EnableGatekeeperCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "opaProfileId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "EndpointElements": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "controller": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "EnumList": {
      "type": "object",
      "properties": {
        "cloudTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "projectStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "serverRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "serverStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "userRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "securityGroupRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "prometheusTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "auditLogs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "rebootOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "availability": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonAvailabilityDto"
          }
        },
        "slackTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "requestLogs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "azureQuotas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "showbackKinds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "alertTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "reminderTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "awsPlatforms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonStringBasedDropdownDto"
          }
        },
        "cronPeriods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonStringBasedDropdownDto"
          }
        },
        "validityPeriods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "alertingIntegrationTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "googleImageTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "standaloneVmStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "openstackContinents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonStringBasedDropdownDto"
          }
        },
        "retentionPeriods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonStringBasedDropdownDto"
          }
        },
        "ticketPriorities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "proxmoxRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        }
      }
    },
    "EstimatedInfracost": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "totalHourlyCost": {
          "type": "string"
        },
        "totalMonthlyCost": {
          "type": "string"
        }
      }
    },
    "ExceededQuotaList": {
      "type": "object",
      "properties": {
        "data": {},
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "FetchAzureFlavorEuroPricesCommand": {
      "type": "object"
    },
    "FetchAzureFlavorPricesCommand": {
      "type": "object"
    },
    "FetchKubernetesAlertDataCommand": {
      "type": "object"
    },
    "FetchKubernetesOverviewDataCommand": {
      "type": "object"
    },
    "FetchOrganizationDetailsCommand": {
      "type": "object"
    },
    "FillArtifacthubOrganizationCommand": {
      "type": "object"
    },
    "Filter": {
      "type": "object",
      "properties": {
        "operator": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "FilteringElementDto": {
      "required": [
        "name",
        "organizationName"
      ],
      "type": "object",
      "properties": {
        "organizationName": {
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "FinalPriceCommand": {
      "type": "object",
      "properties": {
        "subscriptionId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "FinalPriceDto": {
      "type": "object",
      "properties": {
        "yearlyFinalPrice": {
          "format": "double",
          "type": "number"
        },
        "monthlyFinalPrice": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "FlavorsListDto": {
      "type": "object",
      "properties": {
        "ram": {
          "format": "int64",
          "type": "integer"
        },
        "cpu": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {},
        "maxDataDiskCount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "ForceToResetPasswordCommand": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "ForgotPasswordCommand": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "FromTemplateDto": {
      "type": "object",
      "properties": {
        "autoTrigger": {
          "type": "boolean"
        },
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      }
    },
    "FullSpotOperationCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "GetCatalogAppValueAutocompleteCommand": {
      "required": [
        "packageId",
        "version"
      ],
      "type": "object",
      "properties": {
        "packageId": {
          "minLength": 1,
          "type": "string"
        },
        "version": {
          "minLength": 1,
          "type": "string"
        },
        "catalogAppId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetCatalogAppValueCommand": {
      "required": [
        "packageId",
        "version"
      ],
      "type": "object",
      "properties": {
        "packageId": {
          "minLength": 1,
          "type": "string"
        },
        "version": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "GetProjectOperationCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetToken": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "refreshTokenExpireTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "GoogleCommonImages": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "GoogleCredentialForProjectDto": {
      "type": "object",
      "properties": {
        "config": {
          "type": "string"
        },
        "folderId": {
          "type": "string"
        },
        "billingAccountId": {
          "type": "string"
        },
        "zone": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      }
    },
    "GoogleCredentialList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoogleCredentialsListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCredentialsListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "partnerLogo": {
          "type": "string"
        },
        "partnerName": {
          "type": "string"
        },
        "folderId": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "billingAccountId": {
          "type": "string"
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "region": {
          "type": "string"
        },
        "isLocked": {
          "type": "boolean"
        },
        "isDefault": {
          "type": "boolean"
        },
        "billingAccountName": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "continentName": {
          "type": "string"
        }
      }
    },
    "GoogleFlavorDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "cpu": {
          "format": "int32",
          "type": "integer"
        },
        "ram": {
          "format": "int64",
          "type": "integer"
        },
        "description": {},
        "linuxPrice": {
          "type": "string"
        },
        "windowsPrice": {
          "type": "string"
        },
        "linuxSpotPrice": {
          "type": "string"
        },
        "windowsSpotPrice": {
          "type": "string"
        }
      }
    },
    "GoogleFlavorList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoogleFlavorDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleImageList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonStringBasedDropdownDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleOwnerDetails": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string"
        },
        "image": {
          "$ref": "#/definitions/GoogleCommonImages"
        }
      }
    },
    "GroupedBillingInfo": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupedBillings"
          }
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "projectName": {
          "type": "string"
        }
      }
    },
    "GroupedBillings": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string"
        },
        "tcu": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "HelmMetadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "creationTimestamp": {
          "type": "string"
        }
      }
    },
    "HelmReleaseDto": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/HelmMetadata"
        },
        "spec": {
          "$ref": "#/definitions/HelmSpec"
        },
        "status": {
          "$ref": "#/definitions/HelmStatus"
        }
      }
    },
    "HelmReleasesList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HelmReleaseDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "HelmSpec": {
      "type": "object",
      "properties": {
        "interval": {
          "type": "string"
        },
        "releaseName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "targetNamespace": {
          "type": "string"
        },
        "storageNamespace": {
          "type": "string"
        },
        "chart": {
          "$ref": "#/definitions/Chart"
        },
        "values": {
          "$ref": "#/definitions/JsonNode"
        }
      }
    },
    "HelmStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Condition"
          }
        },
        "failures": {
          "format": "int64",
          "type": "integer"
        },
        "helmChart": {
          "type": "string"
        },
        "observedGeneration": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "HypervisorListCommand": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "cloudId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ImageByIdCommand": {
      "type": "object",
      "properties": {
        "cloudId": {
          "format": "int32",
          "type": "integer"
        },
        "imageId": {
          "type": "string"
        }
      }
    },
    "ImportBackupStorageLocationCommand": {
      "type": "object",
      "properties": {
        "targetProjectId": {
          "format": "int32",
          "type": "integer"
        },
        "sourceProjectId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ImportRepoCommand": {
      "required": [
        "displayName",
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 200,
          "minLength": 3,
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "displayName": {
          "maxLength": 200,
          "minLength": 3,
          "type": "string"
        }
      }
    },
    "IngressDto": {
      "type": "object",
      "properties": {
        "metadataName": {
          "type": "string"
        },
        "hosts": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "age": {
          "type": "string"
        }
      }
    },
    "IngressSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "IngressSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonSearchKubernetesResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Ingresses": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IngressDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "InteractiveShellSendCommand": {
      "required": [
        "projectId",
        "token"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "token": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "InvoiceDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "documentNumber": {
          "type": "string"
        },
        "organizationSubscriptionId": {
          "format": "int32",
          "type": "integer"
        },
        "isPaid": {
          "type": "boolean"
        },
        "requiredPaymentAction": {
          "type": "boolean"
        },
        "stripeInvoiceId": {
          "type": "string"
        },
        "price": {
          "format": "double",
          "type": "number"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "InvoiceListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "requiredPaymentAction": {
          "type": "boolean"
        },
        "isPaid": {
          "type": "boolean"
        },
        "invoiceId": {
          "type": "string"
        },
        "subscriptionType": {
          "type": "string"
        },
        "subscriptionName": {
          "type": "string"
        },
        "price": {
          "format": "double",
          "type": "number"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "invoiceNumber": {
          "type": "string"
        },
        "organizationSubscriptionId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Invoices": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "IpAddressRangeCountCommand": {
      "type": "object",
      "properties": {
        "begin": {
          "type": "string"
        },
        "end": {
          "type": "string"
        }
      }
    },
    "IpAddressRangeListCommand": {
      "type": "object",
      "properties": {
        "ipAddress": {
          "type": "string"
        },
        "netMask": {
          "format": "int32",
          "maximum": 28,
          "minimum": 16,
          "type": "integer"
        },
        "gateway": {
          "type": "string"
        }
      }
    },
    "JsonNode": {
      "type": "object",
      "properties": {
        "options": {
          "$ref": "#/definitions/JsonNodeOptions"
        },
        "parent": {
          "$ref": "#/definitions/JsonNode"
        },
        "root": {
          "$ref": "#/definitions/JsonNode"
        }
      }
    },
    "JsonNodeOptions": {
      "type": "object",
      "properties": {
        "propertyNameCaseInsensitive": {
          "type": "boolean"
        }
      }
    },
    "KeycloakCheckerCommand": {
      "required": [
        "clientId",
        "clientSecret",
        "name",
        "realmsName",
        "url"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "url": {
          "minLength": 1,
          "type": "string"
        },
        "realmsName": {
          "minLength": 1,
          "type": "string"
        },
        "clientId": {
          "minLength": 1,
          "type": "string"
        },
        "clientSecret": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "KeycloakCreateCommand": {
      "required": [
        "clientId",
        "clientSecret",
        "name",
        "realmsName",
        "url"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "url": {
          "minLength": 1,
          "type": "string"
        },
        "realmsName": {
          "minLength": 1,
          "type": "string"
        },
        "clientId": {
          "minLength": 1,
          "type": "string"
        },
        "clientSecret": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "KeycloakDeleteCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "KeycloakEditCommand": {
      "required": [
        "clientId",
        "clientSecret",
        "id",
        "name",
        "realmsName",
        "url"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "url": {
          "minLength": 1,
          "type": "string"
        },
        "realmsName": {
          "minLength": 1,
          "type": "string"
        },
        "clientId": {
          "minLength": 1,
          "type": "string"
        },
        "clientSecret": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "KeycloakListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "realmsName": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "partnerLogo": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "KubeConfigForUserDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "userId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "projectName": {
          "type": "string"
        },
        "isAccessibleForAll": {
          "type": "boolean"
        },
        "isAccessibleForManager": {
          "type": "boolean"
        },
        "kubeConfigRoleName": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "expirationDate": {
          "type": "string"
        }
      }
    },
    "KubeConfigForUserList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KubeConfigForUserDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "KubeConfigInteractiveShellCommand": {
      "required": [
        "kubeConfigId",
        "projectId",
        "token"
      ],
      "type": "object",
      "properties": {
        "kubeConfigId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "token": {
          "minLength": 1,
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        }
      }
    },
    "KubeConfigResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "KubeConfigRoleDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "KubeConfigRoleResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KubeConfigRoleDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "KubernetesAlertCreateDto": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "labels": {},
        "annotations": {
          "$ref": "#/definitions/Annotations"
        },
        "startsAt": {
          "format": "date-time",
          "type": "string"
        },
        "endsAt": {
          "format": "date-time",
          "type": "string"
        },
        "fingerprint": {
          "type": "string"
        }
      }
    },
    "KubernetesAlertDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "labels": {},
        "description": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        },
        "fingerprint": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "startsAt": {
          "type": "string"
        },
        "endAt": {
          "type": "string"
        },
        "isSolved": {
          "type": "boolean"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "projectName": {
          "type": "string"
        },
        "isSilenced": {
          "type": "boolean"
        },
        "silenceReason": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        }
      }
    },
    "KubernetesAlertList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KubernetesAlertDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "KubernetesCliCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "KubernetesCronJobDto": {
      "type": "object",
      "properties": {
        "metadataName": {
          "type": "string"
        },
        "lastSchedule": {
          "type": "string"
        },
        "suspend": {
          "type": "boolean"
        },
        "schedule": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "age": {
          "type": "string"
        }
      }
    },
    "KubernetesCronJobsList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KubernetesCronJobDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "KubernetesEventCreateDto": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "metadata": {},
        "source": {},
        "involvedObject": {},
        "firstTimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "lastTimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "KubernetesJobDto": {
      "type": "object",
      "properties": {
        "metadataName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "age": {
          "type": "string"
        },
        "completions": {
          "format": "int32",
          "type": "integer"
        },
        "conditions": {
          "type": "string"
        }
      }
    },
    "KubernetesJobList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KubernetesJobDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "KubernetesNodeLabelsDto": {
      "required": [
        "key"
      ],
      "type": "object",
      "properties": {
        "key": {
          "maxLength": 63,
          "minLength": 1,
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "KubernetesPodLogsCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "container": {
          "type": "string"
        }
      }
    },
    "KubernetesProfilesEntity": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "taikunLBEnabled": {
          "type": "boolean"
        }
      }
    },
    "KubernetesProfilesLisForPollerDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "cni": {
          "type": "string"
        },
        "octaviaEnabled": {
          "type": "boolean"
        },
        "exposeNodePortOnBastion": {
          "type": "boolean"
        },
        "isLocked": {
          "type": "boolean"
        },
        "taikunLBEnabled": {
          "type": "boolean"
        },
        "allowSchedulingOnMaster": {
          "type": "boolean"
        },
        "uniqueClusterName": {
          "type": "boolean"
        },
        "proxmoxStorage": {
          "type": "string"
        }
      }
    },
    "KubernetesProfilesList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KubernetesProfilesListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "KubernetesProfilesListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "cni": {
          "type": "string"
        },
        "octaviaEnabled": {
          "type": "boolean"
        },
        "exposeNodePortOnBastion": {
          "type": "boolean"
        },
        "isLocked": {
          "type": "boolean"
        },
        "taikunLBEnabled": {
          "type": "boolean"
        },
        "allowSchedulingOnMaster": {
          "type": "boolean"
        },
        "uniqueClusterName": {
          "type": "boolean"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "proxmoxStorage": {
          "type": "string"
        }
      }
    },
    "KubernetesProfilesLockManagerCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "KubernetesProfilesSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "KubernetesProfilesSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonSearchResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "KubernetesVersionListDto": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "isKubevapEnabled": {
          "type": "boolean"
        }
      }
    },
    "KubesprayCreateCommand": {
      "required": [
        "kubernetesVersion",
        "version"
      ],
      "type": "object",
      "properties": {
        "version": {
          "maxLength": 15,
          "minLength": 3,
          "type": "string"
        },
        "kubernetesVersion": {
          "maxLength": 15,
          "minLength": 3,
          "type": "string"
        }
      }
    },
    "KubesprayListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "version": {
          "type": "string"
        },
        "kubernetesVersion": {
          "type": "string"
        },
        "isDeprecated": {
          "type": "boolean"
        }
      }
    },
    "Kubesprays": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KubesprayListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "LeaveTaikunCommand": {
      "required": [
        "reason"
      ],
      "type": "object",
      "properties": {
        "reason": {
          "minLength": 1,
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "LeaveTaikunDto": {
      "type": "object",
      "properties": {
        "paymentIntentId": {
          "type": "string"
        },
        "paymentClientSecret": {
          "type": "string"
        }
      }
    },
    "ListAllBackupStorageLocations": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupStorageLocationDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ListAllBackups": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CBackupDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ListAllDeleteBackupRequests": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CDeleteBackupRequestDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ListAllRestores": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CRestoreDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ListAllSchedules": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CScheduleDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ListCatalogAppAvailableVersionsCommand": {
      "type": "object",
      "properties": {
        "repoName": {
          "type": "string"
        },
        "packageName": {
          "type": "string"
        },
        "currentVersion": {
          "type": "string"
        }
      }
    },
    "ListForLandingPageDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "projectLimit": {
          "format": "int32",
          "type": "integer"
        },
        "serverLimit": {
          "format": "int32",
          "type": "integer"
        },
        "userLimit": {
          "format": "int32",
          "type": "integer"
        },
        "cloudCredentialLimit": {
          "format": "int32",
          "type": "integer"
        },
        "monthlyPrice": {
          "format": "double",
          "type": "number"
        },
        "yearlyPrice": {
          "format": "double",
          "type": "number"
        },
        "tcuPrice": {
          "format": "double",
          "type": "number"
        },
        "isDeprecated": {
          "type": "boolean"
        },
        "currency": {
          "type": "string"
        },
        "partnerId": {
          "format": "int32",
          "type": "integer"
        },
        "trialDays": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "isFree": {
          "type": "boolean"
        },
        "isEnterprise": {
          "type": "boolean"
        }
      }
    },
    "ListForOrganizationEditDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ListForPartnersDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "projectLimit": {
          "format": "int32",
          "type": "integer"
        },
        "serverLimit": {
          "format": "int32",
          "type": "integer"
        },
        "userLimit": {
          "format": "int32",
          "type": "integer"
        },
        "cloudCredentialLimit": {
          "format": "int32",
          "type": "integer"
        },
        "monthlyPrice": {
          "format": "double",
          "type": "number"
        },
        "yearlyPrice": {
          "format": "double",
          "type": "number"
        },
        "tcuPrice": {
          "format": "double",
          "type": "number"
        },
        "isDeprecated": {
          "type": "boolean"
        },
        "currency": {
          "type": "string"
        },
        "isEnterprise": {
          "type": "boolean"
        },
        "partner": {
          "$ref": "#/definitions/PartnerDetailsForSubscription"
        },
        "exceededUser": {
          "type": "boolean"
        },
        "exceededProject": {
          "type": "boolean"
        },
        "exceededCloudCredential": {
          "type": "boolean"
        },
        "exceededServers": {
          "type": "boolean"
        },
        "isActive": {
          "type": "boolean"
        },
        "isYearly": {
          "type": "boolean"
        },
        "trialDays": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "isDemo": {
          "type": "boolean"
        }
      }
    },
    "LockProjectAppCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "LoginCommand": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "mode": {
          "type": "string"
        },
        "accessKey": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        }
      }
    },
    "LokiResponseDto": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Parameter"
          }
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filter"
          }
        },
        "start": {
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "direction": {
          "type": "string"
        },
        "canDownload": {
          "type": "boolean"
        }
      }
    },
    "MakeCsmCommand": {
      "required": [
        "mode",
        "userId"
      ],
      "type": "object",
      "properties": {
        "userId": {
          "minLength": 1,
          "type": "string"
        },
        "mode": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "MakeOwnerCommand": {
      "required": [
        "userId"
      ],
      "type": "object",
      "properties": {
        "userId": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "Metadata": {
      "type": "object",
      "properties": {
        "infracostCommand": {
          "type": "string"
        },
        "vcsBranch": {
          "type": "string"
        },
        "vcsCommitSha": {
          "type": "string"
        },
        "vcsCommitAuthorName": {
          "type": "string"
        },
        "vcsCommitAuthorEmail": {
          "type": "string"
        },
        "vcsCommitTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "vcsCommitMessage": {
          "type": "string"
        },
        "vcsRepositoryUrl": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "vcsSubPath": {
          "type": "string"
        }
      }
    },
    "MetricNameCommand": {
      "type": "object",
      "properties": {
        "operationCredentialId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "MonitoringCredentialsListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "prometheusUrl": {
          "type": "string"
        },
        "lokiUrl": {
          "type": "string"
        },
        "alertManagerUrl": {
          "type": "string"
        }
      }
    },
    "MonitoringOperationsCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "NetworkPolicies": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkPolicyDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "NetworkPolicyDto": {
      "type": "object",
      "properties": {
        "metadataName": {
          "type": "string"
        },
        "podSelector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "namespace": {
          "type": "string"
        },
        "age": {
          "type": "string"
        }
      }
    },
    "NodeCommand": {
      "required": [
        "name",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "NodeSearchResponseData": {
      "type": "object",
      "properties": {
        "metadataName": {
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "projectName": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        }
      }
    },
    "NodesSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "NodesSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeSearchResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "NotificationHistory": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "NotificationListDto": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string"
        },
        "actionMessage": {
          "type": "string"
        },
        "actionStatus": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "NotificationSendCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "actionType": {
          "$ref": "#/definitions/ActionType"
        },
        "actionStatus": {
          "$ref": "#/definitions/ActionStatus"
        },
        "projectType": {
          "$ref": "#/definitions/ProjectType"
        }
      }
    },
    "NotifyOwnersCommand": {
      "type": "object",
      "properties": {
        "organizationId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "NtpCommand": {
      "required": [
        "address"
      ],
      "type": "object",
      "properties": {
        "address": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "NtpServerCreateDto": {
      "required": [
        "address"
      ],
      "type": "object",
      "properties": {
        "address": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "NtpServerListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "address": {
          "type": "string"
        }
      }
    },
    "NtpServersListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "address": {
          "type": "string"
        },
        "accessProfileName": {
          "type": "string"
        }
      }
    },
    "OpaMakeDefaultCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "OpaProfileList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpaProfileListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "OpaProfileListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "forbidNodePort": {
          "type": "boolean"
        },
        "forbidHttpIngress": {
          "type": "boolean"
        },
        "requireProbe": {
          "type": "boolean"
        },
        "uniqueIngresses": {
          "type": "boolean"
        },
        "uniqueServiceSelector": {
          "type": "boolean"
        },
        "allowedRepo": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "forbidSpecificTags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ingressWhitelist": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isLocked": {
          "type": "boolean"
        },
        "revision": {
          "format": "int32",
          "type": "integer"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        }
      }
    },
    "OpaProfileLockManagerCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "OpaProfileSyncCommand": {
      "required": [
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        }
      }
    },
    "OpaProfileUpdateCommand": {
      "required": [
        "id",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "maxLength": 50,
          "minLength": 2,
          "type": "string"
        },
        "forbidNodePort": {
          "type": "boolean"
        },
        "forbidHttpIngress": {
          "type": "boolean"
        },
        "requireProbe": {
          "type": "boolean"
        },
        "uniqueIngresses": {
          "type": "boolean"
        },
        "uniqueServiceSelector": {
          "type": "boolean"
        },
        "allowedRepo": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "forbidSpecificTags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ingressWhitelist": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OpenStackNetworkListQuery": {
      "type": "object",
      "properties": {
        "openStackUser": {
          "type": "string"
        },
        "openStackPassword": {
          "type": "string"
        },
        "openStackUrl": {
          "type": "string"
        },
        "openStackProjectId": {
          "type": "string"
        },
        "openStackDomain": {
          "type": "string"
        },
        "openStackRegion": {
          "type": "string"
        },
        "applicationCredEnabled": {
          "type": "boolean"
        },
        "isAdmin": {
          "type": "boolean"
        }
      }
    },
    "OpenStackProjectListQuery": {
      "type": "object",
      "properties": {
        "openStackUser": {
          "type": "string"
        },
        "openStackPassword": {
          "type": "string"
        },
        "openStackUrl": {
          "type": "string"
        },
        "openStackDomain": {
          "type": "string"
        },
        "applicationCredEnabled": {
          "type": "boolean"
        },
        "isAdmin": {
          "type": "boolean"
        }
      }
    },
    "OpenStackRegionListQuery": {
      "type": "object",
      "properties": {
        "openStackUser": {
          "type": "string"
        },
        "openStackPassword": {
          "type": "string"
        },
        "openStackUrl": {
          "type": "string"
        },
        "openStackDomain": {
          "type": "string"
        },
        "applicationCredEnabled": {
          "type": "boolean"
        },
        "isAdmin": {
          "type": "boolean"
        }
      }
    },
    "OpenStackZoneListQuery": {
      "type": "object",
      "properties": {
        "openStackUser": {
          "type": "string"
        },
        "openStackPassword": {
          "type": "string"
        },
        "openStackUrl": {
          "type": "string"
        },
        "openStackDomain": {
          "type": "string"
        },
        "openStackRegion": {
          "type": "string"
        },
        "applicationCredEnabled": {
          "type": "boolean"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "openstackProject": {
          "type": "string"
        }
      }
    },
    "OpenTicketCommand": {
      "required": [
        "ticketId"
      ],
      "type": "object",
      "properties": {
        "ticketId": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "OpenstackComputeQuotaDto": {
      "type": "object",
      "properties": {
        "maxTotalRamSize": {
          "format": "int64",
          "type": "integer"
        },
        "maxServerGroups": {
          "format": "int64",
          "type": "integer"
        },
        "maxTotalInstances": {
          "format": "int64",
          "type": "integer"
        },
        "maxTotalCores": {
          "format": "int64",
          "type": "integer"
        },
        "usedRamSize": {
          "format": "int64",
          "type": "integer"
        },
        "usedCpuSize": {
          "format": "int64",
          "type": "integer"
        },
        "usedInstanceSize": {
          "format": "int64",
          "type": "integer"
        },
        "usedServerGroups": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "OpenstackCredentialList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenstackCredentialsListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "OpenstackCredentialsForProjectDto": {
      "type": "object",
      "properties": {
        "openStackUser": {
          "type": "string"
        },
        "openStackDomain": {
          "type": "string"
        },
        "openStackPassword": {
          "type": "string"
        },
        "openStackProject": {
          "type": "string"
        },
        "openStackRegion": {
          "type": "string"
        },
        "openStackUrl": {
          "type": "string"
        },
        "openStackPublicNetwork": {
          "type": "string"
        },
        "openStackAvailabilityZone": {
          "type": "string"
        },
        "openStackVolumeType": {
          "type": "string"
        },
        "openStackTenantId": {
          "type": "string"
        },
        "openStackImportNetwork": {
          "type": "boolean"
        },
        "openStackInternalSubnetId": {
          "type": "string"
        }
      }
    },
    "OpenstackCredentialsListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "projectCount": {
          "format": "int32",
          "type": "integer"
        },
        "isLocked": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "publicNetwork": {
          "type": "string"
        },
        "importNetwork": {
          "type": "boolean"
        },
        "tenantId": {
          "type": "string"
        },
        "availabilityZone": {
          "type": "string"
        },
        "volumeType": {
          "type": "string"
        },
        "internalSubnetId": {
          "type": "string"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "continentName": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        }
      }
    },
    "OpenstackFlavorList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenstackFlavorListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "OpenstackFlavorListDto": {
      "type": "object",
      "properties": {
        "ram": {
          "format": "int64",
          "type": "integer"
        },
        "cpu": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "OpenstackImageList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonStringBasedDropdownDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "OpenstackNetworkDto": {
      "type": "object",
      "properties": {
        "networkLimit": {
          "format": "int64",
          "type": "integer"
        },
        "subnetLimit": {
          "format": "int64",
          "type": "integer"
        },
        "floatingIpLimit": {
          "format": "int64",
          "type": "integer"
        },
        "routerLimit": {
          "format": "int64",
          "type": "integer"
        },
        "securityGroupLimit": {
          "format": "int64",
          "type": "integer"
        },
        "securityGroupRuleLimit": {
          "format": "int64",
          "type": "integer"
        },
        "portLimit": {
          "format": "int64",
          "type": "integer"
        },
        "networkUsed": {
          "format": "int64",
          "type": "integer"
        },
        "subnetUsed": {
          "format": "int64",
          "type": "integer"
        },
        "floatingIpUsed": {
          "format": "int64",
          "type": "integer"
        },
        "routerUsed": {
          "format": "int64",
          "type": "integer"
        },
        "securityGroupUsed": {
          "format": "int64",
          "type": "integer"
        },
        "portUsed": {
          "format": "int64",
          "type": "integer"
        },
        "securityGroupRuleUsed": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "OpenstackQuotaList": {
      "type": "object",
      "properties": {
        "compute": {
          "$ref": "#/definitions/OpenstackComputeQuotaDto"
        },
        "volume": {
          "$ref": "#/definitions/OpenstackVolumeQuotaDto"
        },
        "network": {
          "$ref": "#/definitions/OpenstackNetworkDto"
        }
      }
    },
    "OpenstackQuotasCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "OpenstackSubnetListQuery": {
      "type": "object",
      "properties": {
        "openStackUser": {
          "type": "string"
        },
        "openStackPassword": {
          "type": "string"
        },
        "openStackUrl": {
          "type": "string"
        },
        "openStackProject": {
          "type": "string"
        },
        "openStackProjectId": {
          "type": "string"
        },
        "openStackDomain": {
          "type": "string"
        },
        "openStackRegion": {
          "type": "string"
        },
        "applicationCredEnabled": {
          "type": "boolean"
        }
      }
    },
    "OpenstackVolumeQuotaDto": {
      "type": "object",
      "properties": {
        "maxTotalVolumeSize": {
          "format": "int64",
          "type": "integer"
        },
        "usedVolumeSize": {
          "format": "int64",
          "type": "integer"
        },
        "maxCountVolumeSize": {
          "format": "int64",
          "type": "integer"
        },
        "countVolumeSize": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "OpenstackVolumeTypeListQuery": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "openStackUser": {
          "type": "string"
        },
        "openStackPassword": {
          "type": "string"
        },
        "openStackUrl": {
          "type": "string"
        },
        "openStackDomain": {
          "type": "string"
        },
        "openStackRegion": {
          "type": "string"
        },
        "applicationCredEnabled": {
          "type": "boolean"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "openstackProject": {
          "type": "string"
        }
      }
    },
    "OperationCredentialLockManagerCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "OperationCredentials": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationCredentialsListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "OperationCredentialsCreateCommand": {
      "required": [
        "name",
        "prometheusPassword",
        "prometheusUrl",
        "prometheusUsername"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "prometheusUsername": {
          "minLength": 1,
          "type": "string"
        },
        "prometheusPassword": {
          "minLength": 1,
          "type": "string"
        },
        "prometheusUrl": {
          "minLength": 1,
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "OperationCredentialsForOrganizationEntity": {
      "type": "object",
      "properties": {
        "operationCredentialId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        }
      }
    },
    "OperationCredentialsListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "prometheusUsername": {
          "type": "string"
        },
        "prometheusPassword": {
          "type": "string"
        },
        "prometheusUrl": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "isLocked": {
          "type": "boolean"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimplePrometheusEntity"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        }
      }
    },
    "OperationCredentialsMakeDefaultCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "OrganizationCreateCommand": {
      "required": [
        "fullName",
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "fullName": {
          "maxLength": 200,
          "minLength": 3,
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "billingEmail": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "vatNumber": {
          "type": "string"
        },
        "discountRate": {
          "format": "double",
          "type": "number"
        },
        "isEligibleUpdateSubscription": {
          "type": "boolean"
        },
        "adminCloudCredentialId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "OrganizationDetailsDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "billingEmail": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "vatNumber": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "isEligibleUpdateSubscription": {
          "type": "boolean"
        },
        "isLocked": {
          "type": "boolean"
        },
        "isReadOnly": {
          "type": "boolean"
        },
        "users": {
          "format": "int32",
          "type": "integer"
        },
        "projects": {
          "format": "int32",
          "type": "integer"
        },
        "servers": {
          "format": "int32",
          "type": "integer"
        },
        "cloudCredentials": {
          "format": "int32",
          "type": "integer"
        },
        "createdAt": {
          "type": "string"
        },
        "partnerId": {
          "format": "int32",
          "type": "integer"
        },
        "partnerName": {
          "type": "string"
        },
        "partner": {
          "$ref": "#/definitions/PartnerDetailsForOrganizationsDto"
        },
        "discountRate": {
          "format": "double",
          "type": "number"
        },
        "boundRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrometheusEntity"
          }
        }
      }
    },
    "OrganizationDto": {
      "type": "object",
      "properties": {
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "isBound": {
          "type": "boolean"
        }
      }
    },
    "OrganizationEntityForDashboard": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "users": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "OrganizationForPrometheus": {
      "type": "object",
      "properties": {
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "ruleDiscountRate": {
          "format": "double",
          "type": "number"
        },
        "globalDiscountRate": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "OrganizationNameCheckerCommand": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "OrganizationSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "OrganizationSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonSearchResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "OrganizationSubscriptionDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "subscriptionId": {
          "format": "int32",
          "type": "integer"
        },
        "stripeSubscriptionId": {
          "type": "string"
        },
        "subscriptionType": {
          "type": "string"
        },
        "subscriptionName": {
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "invoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceDto"
          }
        }
      }
    },
    "OrganizationSubscriptionList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrganizationSubscriptionDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "OrganizationsList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrganizationDetailsDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PackageAutocompleteDto": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Parameter": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "PartnerDetailsDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "vatNumber": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "paymentEnabled": {
          "type": "boolean"
        },
        "allowRegistration": {
          "type": "boolean"
        },
        "requiredUserApproval": {
          "type": "boolean"
        },
        "organizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "whiteListDomains": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhiteListDomainDto"
          }
        }
      }
    },
    "PartnerDetailsForOrganizationsDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        }
      }
    },
    "PartnerDetailsForSubscription": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PartnerDetailsForUserDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PartnerEntity": {
      "type": "object",
      "properties": {
        "partnerId": {
          "format": "int32",
          "type": "integer"
        },
        "partnerName": {
          "type": "string"
        }
      }
    },
    "PartnerRecordDto": {
      "type": "object",
      "properties": {
        "imageUrl": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "paymentEnabled": {
          "type": "boolean"
        },
        "allowRegistration": {
          "type": "boolean"
        }
      }
    },
    "PartnersList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartnerDetailsDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PartnersSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "PartnersSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartnersSearchResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PartnersSearchResponseData": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        }
      }
    },
    "PatchConfigMapCommand": {
      "required": [
        "name",
        "namespace",
        "projectId",
        "yaml"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "yaml": {
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "PatchCrdCommand": {
      "required": [
        "name",
        "projectId",
        "yaml"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "yaml": {
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "PatchCronJobCommand": {
      "required": [
        "name",
        "namespace",
        "projectId",
        "yaml"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "yaml": {
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "PatchDeploymentCommand": {
      "required": [
        "name",
        "namespace",
        "projectId",
        "yaml"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "yaml": {
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "PatchIngressCommand": {
      "required": [
        "name",
        "namespace",
        "projectId",
        "yaml"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "yaml": {
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "PatchJobCommand": {
      "required": [
        "name",
        "namespace",
        "projectId",
        "yaml"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "yaml": {
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "PatchNodeCommand": {
      "required": [
        "name",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatchNodeLabelsDto"
          }
        }
      }
    },
    "PatchNodeLabelsDto": {
      "required": [
        "key",
        "mode"
      ],
      "type": "object",
      "properties": {
        "key": {
          "maxLength": 63,
          "minLength": 1,
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "mode": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "PatchPdbCommand": {
      "required": [
        "name",
        "namespace",
        "projectId",
        "yaml"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "yaml": {
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "PatchPodCommand": {
      "required": [
        "name",
        "namespace",
        "projectId",
        "yaml"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "yaml": {
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "PatchPvcCommand": {
      "required": [
        "name",
        "namespace",
        "projectId",
        "yaml"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "yaml": {
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "PatchSecretCommand": {
      "required": [
        "name",
        "namespace",
        "projectId",
        "yaml"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "yaml": {
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "PatchStsCommand": {
      "required": [
        "name",
        "namespace",
        "projectId",
        "yaml"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "yaml": {
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "PayInvoiceCommand": {
      "type": "object",
      "properties": {
        "invoiceId": {
          "type": "string"
        }
      }
    },
    "PodDisruptionDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "minAvailable": {},
        "maxAvailable": {},
        "allowedDisruptions": {},
        "createdAt": {
          "type": "string"
        }
      }
    },
    "PodDisruptions": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodDisruptionDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PodListDto": {
      "type": "object",
      "properties": {
        "metadataName": {
          "type": "string"
        },
        "restartCount": {
          "format": "int32",
          "type": "integer"
        },
        "namespace": {
          "type": "string"
        },
        "node": {
          "type": "string"
        },
        "age": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "phase": {
          "type": "string"
        },
        "container": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Pods": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PodsSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "PodsSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonSearchKubernetesResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PrivateSubscriptionList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListForPartnersDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        },
        "isEligibleToSwitch": {
          "type": "boolean"
        },
        "activeSubscriptionStatus": {
          "type": "string"
        }
      }
    },
    "ProblemDetails": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "ProjectActionUpdateDto": {
      "type": "object",
      "properties": {
        "operation": {
          "type": "string"
        },
        "jobUrl": {
          "type": "string"
        },
        "estimatedTime": {
          "type": "string"
        }
      }
    },
    "ProjectActionVisibilityDto": {
      "type": "object",
      "properties": {
        "commit": {
          "$ref": "#/definitions/ProjectButtonStatusDto"
        },
        "repair": {
          "$ref": "#/definitions/ProjectButtonStatusDto"
        },
        "upgrade": {
          "$ref": "#/definitions/ProjectButtonStatusDto"
        },
        "monitoring": {
          "$ref": "#/definitions/ProjectButtonStatusDto"
        },
        "enableBackup": {
          "$ref": "#/definitions/ProjectButtonStatusDto"
        },
        "disableBackup": {
          "$ref": "#/definitions/ProjectButtonStatusDto"
        },
        "enableOpa": {
          "$ref": "#/definitions/ProjectButtonStatusDto"
        },
        "disableOpa": {
          "$ref": "#/definitions/ProjectButtonStatusDto"
        },
        "enableAutoscaler": {
          "$ref": "#/definitions/ProjectButtonStatusDto"
        },
        "disableAutoscaler": {
          "$ref": "#/definitions/ProjectButtonStatusDto"
        },
        "vmRepair": {
          "$ref": "#/definitions/ProjectButtonStatusDto"
        },
        "vmCommit": {
          "$ref": "#/definitions/ProjectButtonStatusDto"
        },
        "lock": {
          "$ref": "#/definitions/ProjectButtonStatusDto"
        },
        "unlock": {
          "$ref": "#/definitions/ProjectButtonStatusDto"
        },
        "enableSpotWorker": {
          "$ref": "#/definitions/ProjectButtonStatusDto"
        },
        "disableSpotWorker": {
          "$ref": "#/definitions/ProjectButtonStatusDto"
        },
        "enableFullSpot": {
          "$ref": "#/definitions/ProjectButtonStatusDto"
        },
        "disableFullSpot": {
          "$ref": "#/definitions/ProjectButtonStatusDto"
        },
        "enableSpotVm": {
          "$ref": "#/definitions/ProjectButtonStatusDto"
        },
        "disableSpotVm": {
          "$ref": "#/definitions/ProjectButtonStatusDto"
        }
      }
    },
    "ProjectAppDetailsDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "catalogId": {
          "format": "int32",
          "type": "integer"
        },
        "catalogName": {
          "type": "string"
        },
        "catalogAppName": {
          "type": "string"
        },
        "appRepoName": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "values": {
          "type": "string"
        },
        "autoSync": {
          "type": "boolean"
        },
        "releaseNotes": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "helmResult": {
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "hasJsonSchema": {
          "type": "boolean"
        },
        "projectAppParams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectAppParamDto"
          }
        }
      }
    },
    "ProjectAppDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "version": {
          "type": "string"
        },
        "isLocked": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "ProjectAppList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectAppListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ProjectAppListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "catalogId": {
          "format": "int32",
          "type": "integer"
        },
        "catalogName": {
          "type": "string"
        },
        "catalogAppName": {
          "type": "string"
        },
        "catalogAppId": {
          "format": "int32",
          "type": "integer"
        },
        "appRepoName": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "autoSync": {
          "type": "boolean"
        },
        "created": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "projectName": {
          "type": "string"
        }
      }
    },
    "ProjectAppParamDto": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "isEditableWhenInstalling": {
          "type": "boolean"
        },
        "isEditableAfterInstallation": {
          "type": "boolean"
        },
        "isMandatory": {
          "type": "boolean"
        }
      }
    },
    "ProjectAppParamsDto": {
      "required": [
        "key"
      ],
      "type": "object",
      "properties": {
        "key": {
          "minLength": 1,
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ProjectButtonStatusDto": {
      "type": "object",
      "properties": {
        "enable": {
          "type": "boolean"
        },
        "reasons": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProjectChartDto": {
      "type": "object",
      "properties": {
        "succeeded": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectCommonRecordDto"
          }
        },
        "pending": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectCommonRecordDto"
          }
        },
        "updating": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectCommonRecordDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        },
        "failed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectCommonRecordDto"
          }
        }
      }
    },
    "ProjectCommonRecordDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "expiredAt": {
          "type": "string"
        }
      }
    },
    "ProjectDetailsForServersDto": {
      "type": "object",
      "properties": {
        "isAllReady": {
          "type": "boolean"
        },
        "isAllFailedUpgrade": {
          "type": "boolean"
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        },
        "alertsTotalCount": {
          "format": "int32",
          "type": "integer"
        },
        "master": {
          "format": "int32",
          "type": "integer"
        },
        "worker": {
          "format": "int32",
          "type": "integer"
        },
        "bastion": {
          "format": "int32",
          "type": "integer"
        },
        "projectStatus": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "accessIp": {
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "masterReady": {
          "format": "int32",
          "type": "integer"
        },
        "cloudType": {
          "type": "string"
        },
        "cloudName": {
          "type": "string"
        },
        "cloudId": {
          "format": "int32",
          "type": "integer"
        },
        "quotaId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "kubeCurrentVersion": {
          "type": "string"
        },
        "kubernetesCurrentVersion": {
          "type": "string"
        },
        "hasNextVersion": {
          "type": "boolean"
        },
        "isKubernetes": {
          "type": "boolean"
        },
        "isBackupEnabled": {
          "type": "boolean"
        },
        "isLocked": {
          "type": "boolean"
        },
        "isAutoUpgrade": {
          "type": "boolean"
        },
        "isMonitoringEnabled": {
          "type": "boolean"
        },
        "isOpaEnabled": {
          "type": "boolean"
        },
        "hasKubeConfigFile": {
          "type": "boolean"
        },
        "hasSelectedFlavors": {
          "type": "boolean"
        },
        "hasAlertingProfile": {
          "type": "boolean"
        },
        "isMaintenanceModeEnabled": {
          "type": "boolean"
        },
        "isDeprecated": {
          "type": "boolean"
        },
        "cpuLimit": {
          "format": "int64",
          "type": "integer"
        },
        "ramLimit": {
          "format": "int64",
          "type": "integer"
        },
        "diskSizeLimit": {
          "format": "int64",
          "type": "integer"
        },
        "usedCpu": {
          "format": "int64",
          "type": "integer"
        },
        "usedRam": {
          "format": "int64",
          "type": "integer"
        },
        "usedDiskSize": {
          "format": "int64",
          "type": "integer"
        },
        "vmCpuLimit": {
          "format": "int64",
          "type": "integer"
        },
        "vmRamLimit": {
          "format": "int64",
          "type": "integer"
        },
        "vmVolumeSizeLimit": {
          "format": "int64",
          "type": "integer"
        },
        "vmUsedCpu": {
          "format": "int64",
          "type": "integer"
        },
        "vmUsedRam": {
          "format": "int64",
          "type": "integer"
        },
        "vmUsedVolumeSize": {
          "format": "int64",
          "type": "integer"
        },
        "projectRevision": {
          "format": "int32",
          "type": "integer"
        },
        "accessProfileRevision": {
          "format": "int32",
          "type": "integer"
        },
        "projectCloudRevision": {
          "format": "int32",
          "type": "integer"
        },
        "cloudCredentialRevision": {
          "format": "int32",
          "type": "integer"
        },
        "accessProfileName": {
          "type": "string"
        },
        "accessProfileId": {
          "format": "int32",
          "type": "integer"
        },
        "kubernetesProfileName": {
          "type": "string"
        },
        "kubernetesProfileId": {
          "format": "int32",
          "type": "integer"
        },
        "alertingProfileName": {
          "type": "string"
        },
        "projectHealth": {
          "type": "string"
        },
        "alertingProfileId": {
          "format": "int32",
          "type": "integer"
        },
        "s3CredentialId": {
          "format": "int32",
          "type": "integer"
        },
        "quotaMessage": {
          "type": "string"
        },
        "cloudProviderMessage": {
          "type": "string"
        },
        "expiredAt": {
          "type": "string"
        },
        "deleteOnExpiration": {
          "type": "boolean"
        },
        "certificationExpiredAt": {
          "type": "string"
        },
        "opaProfileId": {
          "format": "int32",
          "type": "integer"
        },
        "opaProfileName": {
          "type": "string"
        },
        "allowFullSpotKubernetes": {
          "type": "boolean"
        },
        "allowSpotWorkers": {
          "type": "boolean"
        },
        "allowSpotVMs": {
          "type": "boolean"
        },
        "maxSpotPrice": {
          "format": "double",
          "type": "number"
        },
        "isKubevapEnabled": {
          "type": "boolean"
        },
        "isKubernetesCurrentVersionKubevapEnabled": {
          "type": "boolean"
        },
        "failureReason": {
          "type": "string"
        },
        "warningMessage": {
          "type": "string"
        },
        "totalHourlyCost": {
          "format": "double",
          "type": "number"
        },
        "autoscalingGroupName": {
          "type": "string"
        },
        "minSize": {
          "format": "int32",
          "type": "integer"
        },
        "maxSize": {
          "format": "int32",
          "type": "integer"
        },
        "diskSize": {
          "format": "double",
          "type": "number"
        },
        "flavor": {
          "type": "string"
        },
        "spotEnabled": {
          "type": "boolean"
        },
        "isAutoscalingEnabled": {
          "type": "boolean"
        },
        "hasExpirationWarning": {
          "type": "boolean"
        }
      }
    },
    "ProjectDetailsForVmsDto": {
      "type": "object",
      "properties": {
        "projectStatus": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "cloudType": {
          "type": "string"
        },
        "cloudName": {
          "type": "string"
        },
        "cloudId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "isLocked": {
          "type": "boolean"
        },
        "hasSelectedFlavors": {
          "type": "boolean"
        },
        "isMaintenanceModeEnabled": {
          "type": "boolean"
        },
        "projectCloudRevision": {
          "format": "int32",
          "type": "integer"
        },
        "cloudCredentialRevision": {
          "format": "int32",
          "type": "integer"
        },
        "allowFullSpotKubernetes": {
          "type": "boolean"
        },
        "allowSpotWorkers": {
          "type": "boolean"
        },
        "allowSpotVMs": {
          "type": "boolean"
        },
        "maxSpotPrice": {
          "format": "double",
          "type": "number"
        },
        "totalHourlyCost": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "ProjectDto": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "projectName": {
          "type": "string"
        }
      }
    },
    "ProjectExtendLifeTimeCommand": {
      "required": [
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "expireAt": {
          "format": "date-time",
          "type": "string"
        },
        "deleteOnExpiration": {
          "type": "boolean"
        }
      }
    },
    "ProjectForListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "jobUrl": {
          "type": "string"
        },
        "topicName": {
          "type": "string"
        },
        "imageName": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "isKubernetes": {
          "type": "boolean"
        },
        "isLocked": {
          "type": "boolean"
        },
        "isBackupEnabled": {
          "type": "boolean"
        },
        "isMonitoringEnabled": {
          "type": "boolean"
        },
        "isOpaEnabled": {
          "type": "boolean"
        },
        "isAutoUpgrade": {
          "type": "boolean"
        },
        "hasKubeConfigFile": {
          "type": "boolean"
        },
        "hasSelectedFlavors": {
          "type": "boolean"
        },
        "master": {
          "format": "int32",
          "type": "integer"
        },
        "masterReady": {
          "format": "int32",
          "type": "integer"
        },
        "quotaId": {
          "format": "int32",
          "type": "integer"
        },
        "bastion": {
          "format": "int32",
          "type": "integer"
        },
        "accessProfileRevision": {
          "format": "int32",
          "type": "integer"
        },
        "opaProfileRevision": {
          "format": "int32",
          "type": "integer"
        },
        "cloudCredentialName": {
          "type": "string"
        },
        "cloudCredentialId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "partnerId": {
          "format": "int32",
          "type": "integer"
        },
        "status": {
          "type": "string"
        },
        "health": {
          "type": "string"
        },
        "accessIp": {
          "type": "string"
        },
        "totalServersCount": {
          "format": "int32",
          "type": "integer"
        },
        "cloudType": {
          "type": "string"
        },
        "kubesprayCurrentVersion": {
          "type": "string"
        },
        "kubesprayTargetVersion": {
          "type": "string"
        },
        "kubernetesCurrentVersion": {
          "type": "string"
        },
        "kubernetesTargetVersion": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "boundUsers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserDto"
          }
        },
        "monitoringCredential": {
          "$ref": "#/definitions/MonitoringCredentialsListDto"
        },
        "isAutoscalingEnabled": {
          "type": "boolean"
        },
        "flavors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accessProfile": {
          "$ref": "#/definitions/AccessProfilesForProjectListDto"
        },
        "kubernetesProfiles": {
          "$ref": "#/definitions/KubernetesProfilesLisForPollerDto"
        },
        "opaProfile": {
          "$ref": "#/definitions/OpaProfileListDto"
        },
        "kubernetesAlerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KubernetesAlertDto"
          }
        },
        "s3BucketName": {
          "type": "string"
        },
        "s3AccessKeyId": {
          "type": "string"
        },
        "s3SecretKey": {
          "type": "string"
        },
        "s3Endpoint": {
          "type": "string"
        },
        "s3Region": {
          "type": "string"
        },
        "isDeleteCluster": {
          "type": "boolean"
        },
        "taikunLBFlavor": {
          "type": "string"
        },
        "taikunLBPrivateKey": {
          "type": "string"
        },
        "taikunLBPublicKey": {
          "type": "string"
        },
        "routerIdStartRange": {
          "format": "int32",
          "type": "integer"
        },
        "routerIdEndRange": {
          "format": "int32",
          "type": "integer"
        },
        "taikunPrivateSSHKey": {
          "type": "string"
        },
        "taikunPublicSSHKey": {
          "type": "string"
        },
        "googleProjectId": {
          "type": "string"
        },
        "cidr": {
          "type": "string"
        },
        "netMask": {
          "format": "int32",
          "type": "integer"
        },
        "privateIp": {
          "type": "string"
        },
        "publicIp": {
          "type": "string"
        },
        "isKubevapEnabled": {
          "type": "boolean"
        },
        "tanzuReleaseVersion": {
          "type": "string"
        },
        "nfsDiskSize": {
          "format": "int32",
          "type": "integer"
        },
        "kubevapEnabeledKubernetesVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "awsProjectAZSubnets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AwsProjectAZSubnetDto"
          }
        },
        "availabilityZones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProjectForUpdateDto": {
      "type": "object",
      "properties": {
        "kubeConfig": {
          "type": "string"
        },
        "kubesprayCurrentVersion": {
          "type": "string"
        },
        "accessIp": {
          "type": "string"
        },
        "imageName": {
          "type": "string"
        },
        "tanzuReleaseCurrentVersion": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/ProjectStatus"
        },
        "health": {
          "$ref": "#/definitions/ProjectHealth"
        },
        "isBackupEnabled": {
          "type": "boolean"
        },
        "isMonitoringEnabled": {
          "type": "boolean"
        },
        "isOpaEnabled": {
          "type": "boolean"
        },
        "isAutoUpgrade": {
          "type": "boolean"
        },
        "appEnabled": {
          "type": "boolean"
        },
        "isKubevapEnabled": {
          "type": "boolean"
        },
        "kubernetesCurrentVersion": {
          "type": "string"
        },
        "failureReason": {
          "type": "string"
        }
      }
    },
    "ProjectFullListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "jobUrl": {
          "type": "string"
        },
        "imageName": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "isKubernetes": {
          "type": "boolean"
        },
        "isLocked": {
          "type": "boolean"
        },
        "isBackupEnabled": {
          "type": "boolean"
        },
        "isMonitoringEnabled": {
          "type": "boolean"
        },
        "isAutoUpgrade": {
          "type": "boolean"
        },
        "accessProfileRevision": {
          "format": "int32",
          "type": "integer"
        },
        "cloudCredentialName": {
          "type": "string"
        },
        "organizationName": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "status": {
          "type": "string"
        },
        "health": {
          "type": "string"
        },
        "accessIp": {
          "type": "string"
        },
        "cloudType": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "accessProfiles": {
          "$ref": "#/definitions/AccessProfilesForProjectListDto"
        },
        "isDeleteCluster": {
          "type": "boolean"
        },
        "taikunPrivateSSHKey": {
          "type": "string"
        },
        "taikunPublicSSHKey": {
          "type": "string"
        },
        "standaloneVms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandAloneVmFullDto"
          }
        },
        "cidr": {
          "type": "string"
        },
        "netMask": {
          "format": "int32",
          "type": "integer"
        },
        "privateIp": {
          "type": "string"
        },
        "publicIp": {
          "type": "string"
        },
        "isKubevapEnabled": {
          "type": "boolean"
        },
        "tanzuReleaseVersion": {
          "type": "string"
        }
      }
    },
    "ProjectGroupDetailsListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectListDto"
          }
        },
        "userGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserGroupEntityListDto"
          }
        }
      }
    },
    "ProjectGroupEntityListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ProjectGroupList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectGroupDetailsListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ProjectHealth": {
      "format": "int32",
      "enum": [
        100,
        150,
        200,
        300,
        400
      ],
      "type": "integer"
    },
    "ProjectInfracostUpsertDto": {
      "type": "object",
      "properties": {
        "details": {
          "type": "string"
        }
      }
    },
    "ProjectListDetailDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "isKubernetes": {
          "type": "boolean"
        },
        "isLocked": {
          "type": "boolean"
        },
        "hasKubeConfigFile": {
          "type": "boolean"
        },
        "cloudCredentialName": {
          "type": "string"
        },
        "organizationName": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "status": {
          "type": "string"
        },
        "health": {
          "type": "string"
        },
        "cloudType": {
          "type": "string"
        },
        "kubesprayCurrentVersion": {
          "type": "string"
        },
        "kubesprayTargetVersion": {
          "type": "string"
        },
        "kubernetesCurrentVersion": {
          "type": "string"
        },
        "kubernetesTargetVersion": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "alertsCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalServersCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalStandaloneVmsCount": {
          "format": "int32",
          "type": "integer"
        },
        "boundUsers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserDto"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "expiredAt": {
          "type": "string"
        },
        "deleteOnExpiration": {
          "type": "boolean"
        },
        "certificateExpiredAt": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "quotaId": {
          "format": "int32",
          "type": "integer"
        },
        "allowFullSpotKubernetes": {
          "type": "boolean"
        },
        "allowSpotWorkers": {
          "type": "boolean"
        },
        "allowSpotVMs": {
          "type": "boolean"
        },
        "maxSpotPrice": {
          "format": "double",
          "type": "number"
        },
        "projectAction": {
          "type": "boolean"
        },
        "hasExpirationWarning": {
          "type": "boolean"
        },
        "totalHourlyCost": {
          "format": "double",
          "type": "number"
        },
        "isAutoscalingEnabled": {
          "type": "boolean"
        }
      }
    },
    "ProjectListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ProjectListForAlert": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "health": {
          "type": "string"
        },
        "isKubernetes": {
          "type": "boolean"
        },
        "isLocked": {
          "type": "boolean"
        },
        "isMonitoringEnabled": {
          "type": "boolean"
        },
        "hasKubeConfigFile": {
          "type": "boolean"
        },
        "monitoringCredential": {
          "$ref": "#/definitions/MonitoringCredentialsListDto"
        },
        "kubernetesAlerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KubernetesAlertDto"
          }
        }
      }
    },
    "ProjectListForPoller": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectForListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ProjectListForProjectGroupDto": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "projectName": {
          "type": "string"
        },
        "isSelected": {
          "type": "boolean"
        }
      }
    },
    "ProjectQuotaList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectQuotaListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ProjectQuotaListDto": {
      "type": "object",
      "properties": {
        "serverCpu": {
          "format": "int64",
          "type": "integer"
        },
        "serverRam": {
          "format": "int64",
          "type": "integer"
        },
        "serverDiskSize": {
          "format": "int64",
          "type": "integer"
        },
        "vmCpu": {
          "format": "int64",
          "type": "integer"
        },
        "vmRam": {
          "format": "int64",
          "type": "integer"
        },
        "vmVolumeSize": {
          "format": "int64",
          "type": "integer"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "projectName": {
          "type": "string"
        }
      }
    },
    "ProjectRevisionUpdateDto": {
      "type": "object",
      "properties": {
        "cloudCredentialRevision": {
          "format": "int32",
          "type": "integer"
        },
        "opaProfileRevision": {
          "format": "int32",
          "type": "integer"
        },
        "accessProfileRevision": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ProjectStatus": {
      "format": "int32",
      "enum": [
        100,
        145,
        150,
        154,
        155,
        156,
        160,
        165,
        200,
        250,
        300,
        400,
        500,
        550,
        600,
        700,
        800,
        900,
        1000,
        1100
      ],
      "type": "integer"
    },
    "ProjectTemplateDropdownListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "canCommit": {
          "type": "boolean"
        }
      }
    },
    "ProjectTemplateList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectTemplateListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ProjectTemplateListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "monitoringEnabled": {
          "type": "boolean"
        },
        "backupEnabled": {
          "type": "boolean"
        },
        "allowFullSpotKubernetes": {
          "type": "boolean"
        },
        "allowSpotVms": {
          "type": "boolean"
        },
        "allowSpotWorkers": {
          "type": "boolean"
        },
        "kubernetesVersion": {
          "type": "string"
        },
        "organizationName": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ProjectType": {
      "format": "int32",
      "enum": [
        100,
        200
      ],
      "type": "integer"
    },
    "ProjectWithFlavorsAndImagesDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "flavors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "imageNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isReady": {
          "type": "boolean"
        }
      }
    },
    "ProjectsForBillingDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "billingStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "organizationName": {
          "type": "string"
        },
        "price": {
          "format": "double",
          "type": "number"
        },
        "servers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServersForBillingDto"
          }
        },
        "standaloneVms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandaloneVmsForBillingDto"
          }
        },
        "billingEnabled": {
          "type": "boolean"
        }
      }
    },
    "ProjectsList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectListDetailDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ProjectsMonitoringAlertsCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ProjectsSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "ProjectsSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonSearchResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PrometheusBillingCreateCommand": {
      "required": [
        "organizationId",
        "prometheusRuleId"
      ],
      "type": "object",
      "properties": {
        "organizationId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "prometheusRuleId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "price": {
          "format": "double",
          "maximum": 3000000000,
          "minimum": 1e-12,
          "type": "number"
        }
      }
    },
    "PrometheusBillingInfo": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrometheusBillingSummaryDto"
          }
        },
        "totalPrice": {
          "format": "double",
          "type": "number"
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PrometheusBillingSummaryDto": {
      "type": "object",
      "properties": {
        "price": {
          "format": "double",
          "type": "number"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "prometheusRuleId": {
          "format": "int32",
          "type": "integer"
        },
        "ruleName": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        }
      }
    },
    "PrometheusDashboardCreateCommand": {
      "required": [
        "categoryName",
        "description",
        "expression",
        "name"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "maxLength": 100,
          "minLength": 3,
          "type": "string"
        },
        "expression": {
          "maxLength": 200,
          "minLength": 3,
          "type": "string"
        },
        "description": {
          "maxLength": 100,
          "minLength": 3,
          "type": "string"
        },
        "categoryName": {
          "maxLength": 100,
          "minLength": 3,
          "type": "string"
        }
      }
    },
    "PrometheusDashboardDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "expressionDecoded": {
          "type": "string"
        },
        "expressionEncoded": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isReadonly": {
          "type": "boolean"
        }
      }
    },
    "PrometheusDashboardListDto": {
      "type": "object",
      "properties": {
        "categoryName": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrometheusDashboardDto"
          }
        }
      }
    },
    "PrometheusDashboardUpdateCommand": {
      "required": [
        "categoryName",
        "description",
        "expression",
        "id",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "maxLength": 100,
          "minLength": 3,
          "type": "string"
        },
        "expression": {
          "maxLength": 200,
          "minLength": 3,
          "type": "string"
        },
        "description": {
          "maxLength": 100,
          "minLength": 3,
          "type": "string"
        },
        "categoryName": {
          "maxLength": 100,
          "minLength": 3,
          "type": "string"
        }
      }
    },
    "PrometheusEntity": {
      "type": "object",
      "properties": {
        "prometheusRuleId": {
          "format": "int32",
          "type": "integer"
        },
        "prometheusRuleName": {
          "type": "string"
        },
        "ruleDiscountRate": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "PrometheusLabelDeleteDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PrometheusLabelListDto": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "value": {
          "maxLength": 300,
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "PrometheusLabelUpdateDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "label": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "PrometheusMetricsCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "parameters": {
          "type": "string"
        },
        "time": {
          "format": "date-time",
          "type": "string"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "isGraphEnabled": {
          "type": "boolean"
        },
        "isAutoComplete": {
          "type": "boolean"
        },
        "step": {
          "type": "string"
        }
      }
    },
    "PrometheusRuleListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrometheusLabelUpdateDto"
          }
        },
        "type": {
          "type": "string"
        },
        "price": {
          "format": "double",
          "type": "number"
        },
        "isAll": {
          "type": "boolean"
        },
        "billingStartDate": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "partner": {
          "$ref": "#/definitions/PartnerDetailsDto"
        },
        "boundOrganizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrganizationForPrometheus"
          }
        },
        "operationCredential": {
          "$ref": "#/definitions/OperationCredentialsForOrganizationEntity"
        },
        "createdBy": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        }
      }
    },
    "PrometheusRulesList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrometheusRuleListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PrometheusRulesSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "PrometheusRulesSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrometheusRulesSearchResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PrometheusRulesSearchResponseData": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "partner": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PrometheusType": {
      "format": "int32",
      "enum": [
        100,
        200
      ],
      "type": "integer"
    },
    "ProxmoxCheckerCommand": {
      "required": [
        "password",
        "url",
        "username"
      ],
      "type": "object",
      "properties": {
        "url": {
          "minLength": 1,
          "type": "string"
        },
        "username": {
          "minLength": 1,
          "type": "string"
        },
        "password": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "ProxmoxCredentialsForProjectDto": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "storage": {
          "type": "string"
        },
        "vmTemplateName": {
          "type": "string"
        },
        "proxmoxNetworks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProxmoxNetworkListDto"
          }
        }
      }
    },
    "ProxmoxFlavorData": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "cpu": {
          "format": "int32",
          "type": "integer"
        },
        "ram": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ProxmoxFlavorList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProxmoxFlavorData"
          }
        },
        "count": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ProxmoxList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProxmoxListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ProxmoxListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "projectCount": {
          "format": "int32",
          "type": "integer"
        },
        "isLocked": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "continentName": {
          "type": "string"
        },
        "hypervisors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "username": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "storage": {
          "type": "string"
        },
        "vmTemplateName": {
          "type": "string"
        },
        "proxmoxNetworks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProxmoxNetworkListDto"
          }
        }
      }
    },
    "ProxmoxNetworkListDto": {
      "type": "object",
      "properties": {
        "bridge": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "netMask": {
          "format": "int32",
          "type": "integer"
        },
        "isPrivate": {
          "type": "boolean"
        }
      }
    },
    "ProxmoxRole": {
      "format": "int32",
      "enum": [
        0,
        100
      ],
      "type": "integer"
    },
    "PurgeCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "serverIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "PurgeExpiredProjectsCommand": {
      "type": "object"
    },
    "PurgeStandAloneCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "vmIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "PurgeStandAloneVmDiskCommand": {
      "type": "object",
      "properties": {
        "standaloneVmId": {
          "format": "int32",
          "type": "integer"
        },
        "vmDiskIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "PurgeWholeProjectCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PvcDto": {
      "type": "object",
      "properties": {
        "metadataName": {
          "type": "string"
        },
        "phase": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "storageClassName": {
          "type": "string"
        },
        "age": {
          "type": "string"
        }
      }
    },
    "PvcSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "PvcSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonSearchKubernetesResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Pvcs": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PvcDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "RebootServerCommand": {
      "type": "object",
      "properties": {
        "serverId": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "RebootStandAloneVmCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "RefreshTokenCommand": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "RegionListCommand": {
      "type": "object",
      "properties": {
        "awsAccessKeyId": {
          "type": "string"
        },
        "awsSecretAccessKey": {
          "type": "string"
        }
      }
    },
    "RemindUsersByAlertingProfileCommand": {
      "type": "object",
      "properties": {
        "reminder": {
          "$ref": "#/definitions/AlertingReminder"
        }
      }
    },
    "RepairStandAloneVmCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ReplyTicketCommand": {
      "required": [
        "body",
        "ticketId"
      ],
      "type": "object",
      "properties": {
        "ticketId": {
          "minLength": 1,
          "type": "string"
        },
        "body": {
          "maxLength": 2000,
          "minLength": 3,
          "type": "string"
        }
      }
    },
    "Repository": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "kind": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "official": {
          "type": "boolean"
        },
        "repositoryId": {
          "type": "string"
        },
        "scannerDisabled": {
          "type": "boolean"
        },
        "organizationName": {
          "type": "string"
        },
        "verifiedPublisher": {
          "type": "boolean"
        },
        "organizationDisplayName": {
          "type": "string"
        }
      }
    },
    "ResetPasswordCommand": {
      "required": [
        "newPassword",
        "token"
      ],
      "type": "object",
      "properties": {
        "token": {
          "minLength": 1,
          "type": "string"
        },
        "email": {
          "format": "email",
          "type": "string"
        },
        "newPassword": {
          "minLength": 6,
          "type": "string"
        }
      }
    },
    "ResetProjectStatusCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "status": {
          "$ref": "#/definitions/ProjectStatus"
        }
      }
    },
    "ResetServerStatusCommand": {
      "required": [
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "serverIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "status": {
          "$ref": "#/definitions/CloudStatus"
        }
      }
    },
    "ResetStandAloneVmDiskStatusCommand": {
      "required": [
        "standAloneVmId"
      ],
      "type": "object",
      "properties": {
        "standAloneVmId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "diskIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "status": {
          "$ref": "#/definitions/StandAloneVmDiskStatus"
        }
      }
    },
    "ResetStandAloneVmStatusCommand": {
      "required": [
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "vmIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "status": {
          "$ref": "#/definitions/StandAloneVmStatus"
        }
      }
    },
    "Resource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/Metadata"
        },
        "hourlyCost": {
          "type": "string"
        },
        "monthlyCost": {
          "type": "string"
        },
        "costComponents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CostComponent"
          }
        },
        "subresources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subresource"
          }
        }
      }
    },
    "RestartDaemonSetCommand": {
      "required": [
        "name",
        "namespace",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "RestartDeploymentCommand": {
      "required": [
        "name",
        "namespace",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "RestartStsCommand": {
      "required": [
        "name",
        "namespace",
        "projectId"
      ],
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "namespace": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "RestoreBackupCommand": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "backupName": {
          "type": "string"
        },
        "restoreName": {
          "type": "string"
        },
        "includeNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludeNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RuleCreateCommand": {
      "required": [
        "labels",
        "metricName",
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "metricName": {
          "maxLength": 256,
          "minLength": 3,
          "type": "string"
        },
        "labels": {
          "minItems": 1,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrometheusLabelListDto"
          }
        },
        "type": {
          "$ref": "#/definitions/PrometheusType"
        },
        "price": {
          "format": "double",
          "maximum": 300000000,
          "minimum": 1e-12,
          "type": "number"
        },
        "partnerId": {
          "format": "int32",
          "type": "integer"
        },
        "operationCredentialId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationId": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "ruleDiscountRate": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "RuleForUpdateDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/PrometheusType"
        },
        "price": {
          "format": "double",
          "type": "number"
        },
        "labelsToAdd": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrometheusLabelListDto"
          }
        },
        "labelsToDelete": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrometheusLabelDeleteDto"
          }
        },
        "labelsToUpdate": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrometheusLabelUpdateDto"
          }
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "ruleDiscountRate": {
          "format": "int32",
          "type": "integer"
        },
        "operationCredentialId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SecretDto": {
      "type": "object",
      "properties": {
        "metadataName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "age": {
          "type": "string"
        }
      }
    },
    "SecretSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "SecretSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonSearchKubernetesResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Secrets": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecretDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SecurityGroupListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "portMinRange": {
          "format": "int32",
          "type": "integer"
        },
        "portMaxRange": {
          "format": "int32",
          "type": "integer"
        },
        "remoteIpPrefix": {
          "type": "string"
        },
        "profileName": {
          "type": "string"
        }
      }
    },
    "SecurityGroupProtocol": {
      "format": "int32",
      "enum": [
        100,
        200,
        300
      ],
      "type": "integer"
    },
    "SecurityReportSummary": {
      "type": "object",
      "properties": {
        "low": {
          "format": "int64",
          "type": "integer"
        },
        "high": {
          "format": "int64",
          "type": "integer"
        },
        "medium": {
          "format": "int64",
          "type": "integer"
        },
        "unknown": {
          "format": "int64",
          "type": "integer"
        },
        "critical": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "SecurityReportSummaryDto": {
      "type": "object",
      "properties": {
        "low": {
          "format": "int64",
          "type": "integer"
        },
        "high": {
          "format": "int64",
          "type": "integer"
        },
        "medium": {
          "format": "int64",
          "type": "integer"
        },
        "unknown": {
          "format": "int64",
          "type": "integer"
        },
        "critical": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "SendEmailAboutProjectExpirationCommand": {
      "type": "object"
    },
    "ServerActionButtonVisibilityDto": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        },
        "reboot": {
          "type": "boolean"
        }
      }
    },
    "ServerChartDto": {
      "type": "object",
      "properties": {
        "aws": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerCommonRecordDto"
          }
        },
        "azure": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerCommonRecordDto"
          }
        },
        "openstack": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerCommonRecordDto"
          }
        },
        "google": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerCommonRecordDto"
          }
        },
        "tanzu": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerCommonRecordDto"
          }
        },
        "failed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerCommonRecordDto"
          }
        },
        "succeeded": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerCommonRecordDto"
          }
        },
        "waiting": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerCommonRecordDto"
          }
        },
        "updating": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerCommonRecordDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalCpu": {
          "format": "int32",
          "type": "integer"
        },
        "totalRam": {
          "format": "int64",
          "type": "integer"
        },
        "totalDiskSize": {
          "format": "int64",
          "type": "integer"
        },
        "totalFailedCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalSucceededCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalUpdatingCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalPendingCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalAwsCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalAzureCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalOpenstackCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalGoogleCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalTanzuCount": {
          "format": "int32",
          "type": "integer"
        },
        "usedResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserResourceChartDto"
          }
        }
      }
    },
    "ServerCommonRecordDto": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "projectName": {
          "type": "string"
        },
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ServerForCreateDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/CloudRole"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "diskSize": {
          "format": "int64",
          "type": "integer"
        },
        "flavor": {
          "type": "string"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "spotPrice": {
          "format": "double",
          "type": "number"
        },
        "spotInstance": {
          "type": "boolean"
        },
        "autoscalingGroup": {
          "type": "string"
        },
        "availabilityZone": {
          "type": "string"
        },
        "proxmoxNFSDiskSize": {
          "format": "int32",
          "type": "integer"
        },
        "proxmoxRole": {
          "$ref": "#/definitions/ProxmoxRole"
        },
        "hypervisor": {
          "type": "string"
        },
        "kubernetesNodeLabels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KubernetesNodeLabelsDto"
          }
        }
      }
    },
    "ServerListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "organizationName": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "ipAddress": {
          "type": "string"
        },
        "diskSize": {
          "format": "int64",
          "type": "integer"
        },
        "kubernetesHealth": {
          "type": "string"
        },
        "googleMachineType": {
          "type": "string"
        },
        "tanzuFlavor": {
          "type": "string"
        },
        "proxmoxFlavor": {
          "type": "string"
        },
        "cpu": {
          "format": "int32",
          "type": "integer"
        },
        "ram": {
          "format": "int64",
          "type": "integer"
        },
        "role": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "openstackFlavor": {
          "type": "string"
        },
        "awsInstanceType": {
          "type": "string"
        },
        "azureVmSize": {
          "type": "string"
        },
        "cloudType": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "spotPrice": {
          "type": "string"
        },
        "spotInstance": {
          "type": "boolean"
        },
        "shutOff": {
          "type": "boolean"
        },
        "autoscalingGroup": {
          "type": "string"
        },
        "providerID": {
          "type": "string"
        },
        "awsHostName": {
          "type": "string"
        },
        "availabilityZone": {
          "type": "string"
        },
        "hypervisor": {
          "type": "string"
        },
        "proxmoxRole": {
          "type": "string"
        },
        "proxmoxNFSDiskSize": {
          "format": "int32",
          "type": "integer"
        },
        "actionButtons": {
          "$ref": "#/definitions/ServerActionButtonVisibilityDto"
        },
        "kubernetesNodeLabels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KubernetesNodeLabelsDto"
          }
        }
      }
    },
    "ServerTemplateDto": {
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/CloudRole"
        },
        "flavor": {
          "type": "string"
        },
        "diskSize": {
          "format": "double",
          "maximum": 8796093022208,
          "minimum": 32212254720,
          "type": "number"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ServersForBillingDto": {
      "type": "object",
      "properties": {
        "cpu": {
          "format": "int32",
          "type": "integer"
        },
        "ram": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ServersList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ServersListForDetails": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerListDto"
          }
        },
        "project": {
          "$ref": "#/definitions/ProjectDetailsForServersDto"
        }
      }
    },
    "ServersSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "ServersSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServersSearchResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ServersSearchResponseData": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "projectName": {
          "type": "string"
        }
      }
    },
    "ServiceDto": {
      "type": "object",
      "properties": {
        "metadataName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "age": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "ip": {}
      }
    },
    "ServiceSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "ServiceSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonSearchKubernetesResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Services": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SetTicketPriorityCommand": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "minLength": 1,
          "type": "string"
        },
        "priority": {
          "$ref": "#/definitions/TicketPriority"
        }
      }
    },
    "ShelveStandAloneVmCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SilenceOperationsCommand": {
      "required": [
        "id",
        "mode"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "mode": {
          "minLength": 1,
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "SimplePrometheusEntity": {
      "type": "object",
      "properties": {
        "prometheusRuleId": {
          "format": "int32",
          "type": "integer"
        },
        "prometheusRuleName": {
          "type": "string"
        }
      }
    },
    "SlackConfigurationDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "channel": {
          "type": "string"
        },
        "organizationName": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "slackType": {
          "type": "string"
        }
      }
    },
    "SlackConfigurationList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SlackConfigurationDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SlackType": {
      "format": "int32",
      "enum": [
        100,
        200
      ],
      "type": "integer"
    },
    "SourceRef": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "SpotVmOperationCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "SpotWorkerOperationCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "SshKeyCommand": {
      "required": [
        "sshPublicKey"
      ],
      "type": "object",
      "properties": {
        "sshPublicKey": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "SshUserCreateDto": {
      "required": [
        "name",
        "sshPublicKey"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "sshPublicKey": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "SshUserListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sshPublicKey": {
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "SshUsersListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sshPublicKey": {
          "type": "string"
        },
        "accessProfileName": {
          "type": "string"
        }
      }
    },
    "StandAloneMetaDataDto": {
      "required": [
        "key",
        "value"
      ],
      "type": "object",
      "properties": {
        "key": {
          "maxLength": 63,
          "minLength": 1,
          "type": "string"
        },
        "value": {
          "maxLength": 63,
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "StandAloneMetaDataDtoForVm": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "StandAloneProfileCreateCommand": {
      "required": [
        "name",
        "publicKey"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "publicKey": {
          "maxLength": 3000,
          "minLength": 3,
          "type": "string"
        },
        "securityGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandAloneProfileSecurityGroupDto"
          }
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "StandAloneProfileForDetailsDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "securityGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandAloneProfileSecurityGroupForDetailsDto"
          }
        }
      }
    },
    "StandAloneProfileFullDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "revision": {
          "format": "int32",
          "type": "integer"
        },
        "standAloneProfileSecurityGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandAloneProfileSecurityGroupFullDto"
          }
        }
      }
    },
    "StandAloneProfileLockManagementCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "StandAloneProfileSecurityGroupDto": {
      "required": [
        "name",
        "remoteIpPrefix"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "protocol": {
          "$ref": "#/definitions/SecurityGroupProtocol"
        },
        "portMinRange": {
          "format": "int32",
          "type": "integer"
        },
        "portMaxRange": {
          "format": "int32",
          "type": "integer"
        },
        "remoteIpPrefix": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "StandAloneProfileSecurityGroupForDetailsDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "portMinRange": {
          "format": "int32",
          "type": "integer"
        },
        "portMaxRange": {
          "format": "int32",
          "type": "integer"
        },
        "remoteIpPrefix": {
          "type": "string"
        },
        "isRdpPortEnabled": {
          "type": "boolean"
        }
      }
    },
    "StandAloneProfileSecurityGroupFullDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "portMinRange": {
          "format": "int32",
          "type": "integer"
        },
        "portMaxRange": {
          "format": "int32",
          "type": "integer"
        },
        "remoteIpPrefix": {
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "StandAloneProfileUpdateCommand": {
      "required": [
        "id",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        }
      }
    },
    "StandAloneProfiles": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandAloneProfilesListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "StandAloneProfilesListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "isLocked": {
          "type": "boolean"
        },
        "standaloneVms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandAloneVmSmallDetailDto"
          }
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "partnerLogo": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        }
      }
    },
    "StandAloneProfilesSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "StandAloneProfilesSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonSearchResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "StandAloneVmDiskDto": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "size": {
          "format": "int64",
          "maximum": 10000,
          "minimum": 1,
          "type": "integer"
        },
        "volumeType": {
          "type": "string"
        },
        "deviceName": {
          "type": "string"
        },
        "lunId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "StandAloneVmDiskForDetailsDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "currentSize": {
          "format": "int64",
          "type": "integer"
        },
        "targetSize": {
          "format": "int64",
          "type": "integer"
        },
        "volumeType": {
          "type": "string"
        },
        "deviceName": {
          "type": "string"
        },
        "lunId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "StandAloneVmDiskFullDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "format": "int64",
          "type": "integer"
        },
        "volumeType": {
          "type": "string"
        },
        "deviceName": {
          "type": "string"
        },
        "lunId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "StandAloneVmDiskStatus": {
      "format": "int32",
      "enum": [
        100,
        200,
        300,
        400,
        500,
        600
      ],
      "type": "integer"
    },
    "StandAloneVmFullDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "flavorId": {
          "type": "string"
        },
        "volumeSize": {
          "format": "int64",
          "type": "integer"
        },
        "ram": {
          "format": "int64",
          "type": "integer"
        },
        "cpu": {
          "format": "int32",
          "type": "integer"
        },
        "volumeType": {
          "type": "string"
        },
        "sshPublicKey": {
          "type": "string"
        },
        "publicIpEnabled": {
          "type": "boolean"
        },
        "imageId": {
          "type": "string"
        },
        "imageName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "revision": {
          "format": "int32",
          "type": "integer"
        },
        "shutOff": {
          "type": "boolean"
        },
        "publicIp": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "cloudInit": {
          "type": "string"
        },
        "isWindows": {
          "type": "boolean"
        },
        "standAloneProfile": {
          "$ref": "#/definitions/StandAloneProfileFullDto"
        },
        "standAloneVmDisks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandAloneVmDiskFullDto"
          }
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "spotPrice": {
          "type": "string"
        },
        "hypervisor": {
          "type": "string"
        },
        "spotInstance": {
          "type": "boolean"
        },
        "availabilityZone": {
          "type": "string"
        }
      }
    },
    "StandAloneVmIpManagementCommand": {
      "required": [
        "id",
        "mode"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "mode": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "StandAloneVmListForDetails": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandaloneVmsListForDetailsDto"
          }
        },
        "project": {
          "$ref": "#/definitions/ProjectDetailsForVmsDto"
        }
      }
    },
    "StandAloneVmSmallDetailDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "StandAloneVmStatus": {
      "format": "int32",
      "enum": [
        100,
        200,
        300,
        400,
        500,
        600
      ],
      "type": "integer"
    },
    "StandaloneProfileListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "revision": {
          "format": "int32",
          "type": "integer"
        },
        "isLocked": {
          "type": "boolean"
        },
        "standAloneProfileSecurityGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandaloneProfileSecurityGroupListDto"
          }
        }
      }
    },
    "StandaloneProfileSecurityGroupListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "portMinRange": {
          "format": "int32",
          "type": "integer"
        },
        "portMaxRange": {
          "format": "int32",
          "type": "integer"
        },
        "remoteIpPrefix": {
          "type": "string"
        }
      }
    },
    "StandaloneVisibilityDto": {
      "type": "object",
      "properties": {
        "showStatus": {
          "type": "boolean"
        },
        "showConsole": {
          "type": "boolean"
        },
        "shelve": {
          "type": "boolean"
        },
        "unshelve": {
          "type": "boolean"
        },
        "start": {
          "type": "boolean"
        },
        "stop": {
          "type": "boolean"
        },
        "reboot": {
          "type": "boolean"
        }
      }
    },
    "StandaloneVmListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "flavorId": {
          "type": "string"
        },
        "volumeSize": {
          "format": "int64",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "ram": {
          "format": "int64",
          "type": "integer"
        },
        "cpu": {
          "format": "int32",
          "type": "integer"
        },
        "volumeType": {
          "type": "string"
        },
        "publicIpEnabled": {
          "type": "boolean"
        },
        "publicIp": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "cloudType": {
          "type": "string"
        },
        "imageName": {
          "type": "string"
        },
        "revision": {
          "format": "int32",
          "type": "integer"
        },
        "isWindows": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "standAloneProfile": {
          "$ref": "#/definitions/StandaloneProfileListDto"
        },
        "createdAt": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        }
      }
    },
    "StandaloneVmsForBillingDto": {
      "type": "object",
      "properties": {
        "cpu": {
          "format": "int32",
          "type": "integer"
        },
        "ram": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "StandaloneVmsList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandaloneVmListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "StandaloneVmsListForDetailsDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "imageName": {
          "type": "string"
        },
        "imageId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "cloudInit": {
          "type": "string"
        },
        "volumeType": {
          "type": "string"
        },
        "volumeSize": {
          "format": "int64",
          "type": "integer"
        },
        "createdAt": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "sshPublicKey": {
          "type": "string"
        },
        "currentFlavor": {
          "type": "string"
        },
        "targetFlavor": {
          "type": "string"
        },
        "publicIpEnabled": {
          "type": "boolean"
        },
        "publicIp": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "spotPrice": {
          "type": "string"
        },
        "spotInstance": {
          "type": "boolean"
        },
        "actionButtons": {
          "$ref": "#/definitions/StandaloneVisibilityDto"
        },
        "isWindows": {
          "type": "boolean"
        },
        "disks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandAloneVmDiskForDetailsDto"
          }
        },
        "standAloneMetaDatas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandAloneMetaDataDtoForVm"
          }
        },
        "profile": {
          "$ref": "#/definitions/StandAloneProfileForDetailsDto"
        }
      }
    },
    "StandaloneVmsListForPoller": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandAloneVmFullDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "StartStandaloneVmCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Status": {
      "type": "object",
      "properties": {
        "lastBackup": {
          "format": "date-time",
          "type": "string"
        },
        "phase": {
          "type": "string"
        }
      }
    },
    "StopStandaloneVmCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "StorageClassDto": {
      "type": "object",
      "properties": {
        "metadataName": {
          "type": "string"
        },
        "age": {
          "type": "string"
        },
        "provisioner": {
          "type": "string"
        },
        "reclaimPolicy": {
          "type": "string"
        },
        "volumeBindingMode": {
          "type": "string"
        },
        "allowVolumeExpansion": {
          "type": "boolean"
        }
      }
    },
    "StorageClasses": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageClassDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "StorageListCommand": {
      "required": [
        "password",
        "url",
        "username"
      ],
      "type": "object",
      "properties": {
        "url": {
          "minLength": 1,
          "type": "string"
        },
        "username": {
          "minLength": 1,
          "type": "string"
        },
        "password": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "StripeInvoiceListDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "invoiceStatus": {
          "type": "string"
        },
        "chargeStatus": {
          "type": "string"
        },
        "chargeReason": {
          "type": "string"
        },
        "price": {
          "format": "double",
          "type": "number"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "StripeInvoices": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StripeInvoiceListDto"
          }
        }
      }
    },
    "StsDto": {
      "type": "object",
      "properties": {
        "metadataName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "age": {
          "type": "string"
        }
      }
    },
    "StsList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StsDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "StsSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "StsSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonSearchKubernetesResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Subnet": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "cidr": {
          "type": "string"
        }
      }
    },
    "Subresource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/Metadata"
        },
        "hourlyCost": {
          "type": "string"
        },
        "monthlyCost": {
          "type": "string"
        },
        "costComponents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CostComponent"
          }
        }
      }
    },
    "SyncAppProxyCommand": {
      "type": "object"
    },
    "SyncBackupCredentialsCommand": {
      "type": "object"
    },
    "SyncOpaProfilesCommand": {
      "type": "object"
    },
    "SyncOrganizationsCommand": {
      "type": "object"
    },
    "SyncProjectAppCommand": {
      "required": [
        "projectAppId"
      ],
      "type": "object",
      "properties": {
        "projectAppId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        }
      }
    },
    "SyncProjectAppsCommand": {
      "type": "object"
    },
    "SyncProjectsCommand": {
      "type": "object"
    },
    "TanzuCredentialsForProjectDto": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "volumeType": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TanzuCredentialsList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TanzuCredentialsListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TanzuCredentialsListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "projectCount": {
          "format": "int32",
          "type": "integer"
        },
        "isLocked": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "volumeType": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDropdownDto"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "continentName": {
          "type": "string"
        }
      }
    },
    "TanzuFlavorList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TanzuFlavorsListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TanzuFlavorsListDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "cpu": {
          "format": "int32",
          "type": "integer"
        },
        "ram": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "TanzuImageList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TanzuImagesListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TanzuImagesListDto": {
      "type": "object",
      "properties": {
        "imageId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "details": {}
      }
    },
    "TanzuStorageListCommand": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TicketPriority": {
      "format": "int32",
      "enum": [
        100,
        200,
        300
      ],
      "type": "integer"
    },
    "ToggleDemoModeCommand": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string"
        }
      }
    },
    "ToggleKeycloakCommand": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string"
        }
      }
    },
    "TransferList": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      }
    },
    "TransferTicketCommand": {
      "required": [
        "ticketId",
        "userId"
      ],
      "type": "object",
      "properties": {
        "ticketId": {
          "minLength": 1,
          "type": "string"
        },
        "userId": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "TriggerTemplateCommand": {
      "type": "object"
    },
    "TryForFreeCommand": {
      "required": [
        "email",
        "organizationName",
        "username"
      ],
      "type": "object",
      "properties": {
        "organizationName": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "username": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "email": {
          "format": "email",
          "maxLength": 200,
          "minLength": 3,
          "type": "string"
        }
      }
    },
    "UnbindAppRepositoryCommand": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UnbindFlavorFromProjectCommand": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "UnshelveStandaloneVmCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "UpdateAccessProfileDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "httpProxy": {
          "type": "string"
        }
      }
    },
    "UpdateAlertingProfileCommand": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "slackConfigurationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "reminder": {
          "$ref": "#/definitions/AlertingReminder"
        }
      }
    },
    "UpdateAwsCommand": {
      "required": [
        "awsAccessKeyId",
        "awsSecretAccessKey",
        "id",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "awsSecretAccessKey": {
          "minLength": 1,
          "type": "string"
        },
        "awsAccessKeyId": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "UpdateAzureCommand": {
      "required": [
        "azureClientId",
        "azureClientSecret",
        "id",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "azureClientSecret": {
          "minLength": 1,
          "type": "string"
        },
        "azureClientId": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "UpdateCatalogDto": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "isBound": {
          "type": "boolean"
        }
      }
    },
    "UpdateInvoiceDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "organizationSubscriptionId": {
          "format": "int32",
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "isPaid": {
          "type": "boolean"
        },
        "requiredPaymentAction": {
          "type": "boolean"
        },
        "stripeInvoiceId": {
          "type": "string"
        },
        "price": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "UpdateKubernetesAlertDto": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "labels": {},
        "startsAt": {
          "format": "date-time",
          "type": "string"
        },
        "endsAt": {
          "format": "date-time",
          "type": "string"
        },
        "fingerprint": {
          "type": "string"
        },
        "isSilenced": {
          "type": "boolean"
        },
        "silenceReason": {
          "type": "string"
        }
      }
    },
    "UpdateOpenStackCommand": {
      "required": [
        "id",
        "name",
        "openStackPassword",
        "openStackUser"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "openStackUser": {
          "minLength": 1,
          "type": "string"
        },
        "openStackPassword": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "UpdateOrganizationCommand": {
      "required": [
        "fullName",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "fullName": {
          "minLength": 1,
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "vatNumber": {
          "type": "string"
        },
        "isLocked": {
          "type": "boolean"
        },
        "billingEmail": {
          "type": "string"
        },
        "discountRate": {
          "format": "double",
          "type": "number"
        },
        "isEligibleUpdateSubscription": {
          "type": "boolean"
        }
      }
    },
    "UpdateOrganizationSubscriptionCommand": {
      "type": "object",
      "properties": {
        "subscriptionId": {
          "format": "int32",
          "type": "integer"
        },
        "isYearly": {
          "type": "boolean"
        }
      }
    },
    "UpdatePaymentIdCommand": {
      "type": "object",
      "properties": {
        "paymentMethodId": {
          "type": "string"
        },
        "paymentIntentId": {
          "type": "string"
        }
      }
    },
    "UpdateProjectAppStatusCommand": {
      "type": "object"
    },
    "UpdateProjectGroupDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "projectIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "UpdateProjectQuotaMessageCommand": {
      "type": "object"
    },
    "UpdateProjectUserDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isBound": {
          "type": "boolean"
        }
      }
    },
    "UpdateProjectUserGroupDto": {
      "type": "object",
      "properties": {
        "userGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "isBound": {
          "type": "boolean"
        }
      }
    },
    "UpdateQuotaCommand": {
      "required": [
        "quotaId"
      ],
      "type": "object",
      "properties": {
        "quotaId": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "serverCpu": {
          "format": "int64",
          "maximum": 1000000,
          "minimum": 2,
          "type": "integer"
        },
        "serverRam": {
          "format": "int64",
          "maximum": 109951162777600,
          "minimum": 2147483648,
          "type": "integer"
        },
        "serverDiskSize": {
          "format": "int64",
          "maximum": 109951162777600,
          "minimum": 32212254720,
          "type": "integer"
        },
        "vmCpu": {
          "format": "int64",
          "maximum": 1000000,
          "minimum": 1,
          "type": "integer"
        },
        "vmRam": {
          "format": "int64",
          "maximum": 109951162777600,
          "minimum": 1073741824,
          "type": "integer"
        },
        "vmVolumeSize": {
          "format": "int64",
          "maximum": 102400,
          "minimum": 1,
          "type": "integer"
        }
      }
    },
    "UpdateServerCommand": {
      "required": [
        "id",
        "ip"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "ip": {
          "maxLength": 300,
          "minLength": 3,
          "type": "string"
        },
        "instanceId": {
          "type": "string"
        },
        "providerID": {
          "type": "string"
        },
        "awsHostName": {
          "type": "string"
        }
      }
    },
    "UpdateServerHealthDto": {
      "type": "object",
      "properties": {
        "ipAddress": {
          "type": "string"
        },
        "serverHealth": {
          "type": "string"
        }
      }
    },
    "UpdateSlackConfigurationDto": {
      "type": "object",
      "properties": {
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "channel": {
          "type": "string"
        },
        "slackType": {
          "$ref": "#/definitions/SlackType"
        }
      }
    },
    "UpdateStandAloneVmCommand": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "ipAddress": {
          "type": "string"
        },
        "publicIp": {
          "type": "string"
        },
        "instanceId": {
          "type": "string"
        },
        "flavorId": {
          "type": "string"
        },
        "revision": {
          "format": "int32",
          "type": "integer"
        },
        "disks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateStandAloneVmDiskDto"
          }
        }
      }
    },
    "UpdateStandAloneVmDiskDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "deviceName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "UpdateStandAloneVmFlavorCommand": {
      "required": [
        "flavor",
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "flavor": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "UpdateStandaloneVmDiskCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "size": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "UpdateStandaloneVmDiskSizeCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "size": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "UpdateSubscriptionCommand": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "projectLimit": {
          "format": "int32",
          "maximum": 10000,
          "minimum": -1,
          "type": "integer"
        },
        "serverLimit": {
          "format": "int32",
          "maximum": 10000,
          "minimum": -1,
          "type": "integer"
        },
        "userLimit": {
          "format": "int32",
          "maximum": 10000,
          "minimum": -1,
          "type": "integer"
        },
        "cloudCredentialLimit": {
          "format": "int32",
          "maximum": 10000,
          "minimum": -1,
          "type": "integer"
        },
        "monthlyPrice": {
          "format": "double",
          "maximum": 100000,
          "minimum": 0,
          "type": "number"
        },
        "yearlyPrice": {
          "format": "double",
          "maximum": 100000,
          "minimum": 0,
          "type": "number"
        },
        "tcuPrice": {
          "format": "double",
          "maximum": 1000000,
          "minimum": 0,
          "type": "number"
        },
        "trialDays": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "UpdateTanzuCommand": {
      "required": [
        "id",
        "name",
        "password"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": true,
          "type": "integer"
        },
        "name": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "password": {
          "maxLength": 100,
          "minLength": 3,
          "type": "string"
        }
      }
    },
    "UpdateUserCommand": {
      "required": [
        "email",
        "id",
        "username"
      ],
      "type": "object",
      "properties": {
        "id": {
          "maxLength": 200,
          "minLength": 3,
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "username": {
          "maxLength": 30,
          "minLength": 3,
          "type": "string"
        },
        "email": {
          "format": "email",
          "maxLength": 200,
          "minLength": 3,
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/UserRole"
        },
        "forceToResetPassword": {
          "type": "boolean"
        },
        "disable": {
          "type": "boolean"
        },
        "isApprovedByPartner": {
          "type": "boolean"
        }
      }
    },
    "UpdateUserGroupDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "UpdateUserProjectDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "isBound": {
          "type": "boolean"
        }
      }
    },
    "UpdateUserProjectGroupDto": {
      "type": "object",
      "properties": {
        "projectGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "isBound": {
          "type": "boolean"
        }
      }
    },
    "UserDetails": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/UserForListDto"
        },
        "isMaintenanceModeEnabled": {
          "type": "boolean"
        },
        "demoOrganization": {
          "format": "int32",
          "type": "integer"
        },
        "trialDays": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "UserDto": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      }
    },
    "UserExistCommand": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      }
    },
    "UserForListDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "organizationName": {
          "type": "string"
        },
        "hasCustomerId": {
          "type": "boolean"
        },
        "hasPaymentMethod": {
          "type": "boolean"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "role": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "isEmailConfirmed": {
          "type": "boolean"
        },
        "isEmailNotificationEnabled": {
          "type": "boolean"
        },
        "isForcedToResetPassword": {
          "type": "boolean"
        },
        "isCsm": {
          "type": "boolean"
        },
        "isEligibleUpdateSubscription": {
          "type": "boolean"
        },
        "isLocked": {
          "type": "boolean"
        },
        "isApprovedByPartner": {
          "type": "boolean"
        },
        "owner": {
          "type": "boolean"
        },
        "isReadOnly": {
          "type": "boolean"
        },
        "hasRepo": {
          "type": "boolean"
        },
        "demoModeEnabled": {
          "type": "boolean"
        },
        "lastLoginAt": {
          "type": "string"
        },
        "boundProjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectDto"
          }
        },
        "partner": {
          "$ref": "#/definitions/PartnerDetailsForUserDto"
        }
      }
    },
    "UserGroupDetailsListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserListDto"
          }
        },
        "projectGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectGroupEntityListDto"
          }
        }
      }
    },
    "UserGroupEntityListDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "UserGroupList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserGroupDetailsListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "UserListDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "UserResourceChartDto": {
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "diskSize": {
          "format": "int64",
          "type": "integer"
        },
        "ram": {
          "format": "int64",
          "type": "integer"
        },
        "cpu": {
          "format": "int64",
          "type": "integer"
        },
        "maxRam": {
          "format": "int64",
          "type": "integer"
        },
        "maxCpu": {
          "format": "int64",
          "type": "integer"
        },
        "maxDiskSize": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "UserRole": {
      "format": "int32",
      "enum": [
        100,
        200,
        250,
        400,
        6000
      ],
      "type": "integer"
    },
    "UserTokenCreateCommand": {
      "type": "object",
      "properties": {
        "expireDate": {
          "format": "date-time",
          "type": "string"
        },
        "isReadonly": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableEndpointData"
          }
        },
        "bindALL": {
          "type": "boolean"
        }
      }
    },
    "UserTokenCreateDto": {
      "type": "object",
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        }
      }
    },
    "UserTokensListDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "isReadonly": {
          "type": "boolean"
        },
        "expireDate": {
          "type": "string"
        },
        "accessKey": {
          "type": "string"
        }
      }
    },
    "UsersList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserForListDto"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "UsersSearchCommand": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "type": "integer"
        },
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "UsersSearchList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsersSearchResponseData"
          }
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "UsersSearchResponseData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "format": "int32",
          "type": "integer"
        },
        "organizationName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "VerifyEmailCommand": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "VerifySlackCredentialsCommand": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "channel": {
          "type": "string"
        }
      }
    },
    "VerifyWebhookCommand": {
      "required": [
        "url"
      ],
      "type": "object",
      "properties": {
        "url": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "VmConsoleScreenshotCommand": {
      "type": "object",
      "properties": {
        "serverId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "VmTemplateListCommand": {
      "required": [
        "password",
        "url",
        "username"
      ],
      "type": "object",
      "properties": {
        "url": {
          "minLength": 1,
          "type": "string"
        },
        "username": {
          "minLength": 1,
          "type": "string"
        },
        "password": {
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "WebhookHeaderDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "WhiteListDomainCreateCommand": {
      "type": "object",
      "properties": {
        "whiteListDomains": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhiteListDomainCreateDto"
          }
        },
        "partnerId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "WhiteListDomainCreateDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "WhiteListDomainDeleteCommand": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "WhiteListDomainDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "YamlValidatorCommand": {
      "type": "object",
      "properties": {
        "yaml": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Input your Bearer token in this format - Bearer {your token here} to access this API"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
