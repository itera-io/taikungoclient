/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the NetworkPolicyDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkPolicyDto{}

// NetworkPolicyDto struct for NetworkPolicyDto
type NetworkPolicyDto struct {
	MetadataName NullableString    `json:"metadataName,omitempty"`
	PodSelector  map[string]string `json:"podSelector,omitempty"`
	Namespace    NullableString    `json:"namespace,omitempty"`
	Age          NullableString    `json:"age,omitempty"`
}

// NewNetworkPolicyDto instantiates a new NetworkPolicyDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkPolicyDto() *NetworkPolicyDto {
	this := NetworkPolicyDto{}
	return &this
}

// NewNetworkPolicyDtoWithDefaults instantiates a new NetworkPolicyDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkPolicyDtoWithDefaults() *NetworkPolicyDto {
	this := NetworkPolicyDto{}
	return &this
}

// GetMetadataName returns the MetadataName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkPolicyDto) GetMetadataName() string {
	if o == nil || IsNil(o.MetadataName.Get()) {
		var ret string
		return ret
	}
	return *o.MetadataName.Get()
}

// GetMetadataNameOk returns a tuple with the MetadataName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkPolicyDto) GetMetadataNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetadataName.Get(), o.MetadataName.IsSet()
}

// HasMetadataName returns a boolean if a field has been set.
func (o *NetworkPolicyDto) HasMetadataName() bool {
	if o != nil && o.MetadataName.IsSet() {
		return true
	}

	return false
}

// SetMetadataName gets a reference to the given NullableString and assigns it to the MetadataName field.
func (o *NetworkPolicyDto) SetMetadataName(v string) {
	o.MetadataName.Set(&v)
}

// SetMetadataNameNil sets the value for MetadataName to be an explicit nil
func (o *NetworkPolicyDto) SetMetadataNameNil() {
	o.MetadataName.Set(nil)
}

// UnsetMetadataName ensures that no value is present for MetadataName, not even an explicit nil
func (o *NetworkPolicyDto) UnsetMetadataName() {
	o.MetadataName.Unset()
}

// GetPodSelector returns the PodSelector field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkPolicyDto) GetPodSelector() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.PodSelector
}

// GetPodSelectorOk returns a tuple with the PodSelector field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkPolicyDto) GetPodSelectorOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.PodSelector) {
		return nil, false
	}
	return &o.PodSelector, true
}

// HasPodSelector returns a boolean if a field has been set.
func (o *NetworkPolicyDto) HasPodSelector() bool {
	if o != nil && IsNil(o.PodSelector) {
		return true
	}

	return false
}

// SetPodSelector gets a reference to the given map[string]string and assigns it to the PodSelector field.
func (o *NetworkPolicyDto) SetPodSelector(v map[string]string) {
	o.PodSelector = v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkPolicyDto) GetNamespace() string {
	if o == nil || IsNil(o.Namespace.Get()) {
		var ret string
		return ret
	}
	return *o.Namespace.Get()
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkPolicyDto) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Namespace.Get(), o.Namespace.IsSet()
}

// HasNamespace returns a boolean if a field has been set.
func (o *NetworkPolicyDto) HasNamespace() bool {
	if o != nil && o.Namespace.IsSet() {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given NullableString and assigns it to the Namespace field.
func (o *NetworkPolicyDto) SetNamespace(v string) {
	o.Namespace.Set(&v)
}

// SetNamespaceNil sets the value for Namespace to be an explicit nil
func (o *NetworkPolicyDto) SetNamespaceNil() {
	o.Namespace.Set(nil)
}

// UnsetNamespace ensures that no value is present for Namespace, not even an explicit nil
func (o *NetworkPolicyDto) UnsetNamespace() {
	o.Namespace.Unset()
}

// GetAge returns the Age field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkPolicyDto) GetAge() string {
	if o == nil || IsNil(o.Age.Get()) {
		var ret string
		return ret
	}
	return *o.Age.Get()
}

// GetAgeOk returns a tuple with the Age field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkPolicyDto) GetAgeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Age.Get(), o.Age.IsSet()
}

// HasAge returns a boolean if a field has been set.
func (o *NetworkPolicyDto) HasAge() bool {
	if o != nil && o.Age.IsSet() {
		return true
	}

	return false
}

// SetAge gets a reference to the given NullableString and assigns it to the Age field.
func (o *NetworkPolicyDto) SetAge(v string) {
	o.Age.Set(&v)
}

// SetAgeNil sets the value for Age to be an explicit nil
func (o *NetworkPolicyDto) SetAgeNil() {
	o.Age.Set(nil)
}

// UnsetAge ensures that no value is present for Age, not even an explicit nil
func (o *NetworkPolicyDto) UnsetAge() {
	o.Age.Unset()
}

func (o NetworkPolicyDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkPolicyDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MetadataName.IsSet() {
		toSerialize["metadataName"] = o.MetadataName.Get()
	}
	if o.PodSelector != nil {
		toSerialize["podSelector"] = o.PodSelector
	}
	if o.Namespace.IsSet() {
		toSerialize["namespace"] = o.Namespace.Get()
	}
	if o.Age.IsSet() {
		toSerialize["age"] = o.Age.Get()
	}
	return toSerialize, nil
}

type NullableNetworkPolicyDto struct {
	value *NetworkPolicyDto
	isSet bool
}

func (v NullableNetworkPolicyDto) Get() *NetworkPolicyDto {
	return v.value
}

func (v *NullableNetworkPolicyDto) Set(val *NetworkPolicyDto) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkPolicyDto) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkPolicyDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkPolicyDto(val *NetworkPolicyDto) *NullableNetworkPolicyDto {
	return &NullableNetworkPolicyDto{value: val, isSet: true}
}

func (v NullableNetworkPolicyDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkPolicyDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
