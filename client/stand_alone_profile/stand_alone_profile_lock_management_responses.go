// Code generated by go-swagger; DO NOT EDIT.

package stand_alone_profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// StandAloneProfileLockManagementReader is a Reader for the StandAloneProfileLockManagement structure.
type StandAloneProfileLockManagementReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StandAloneProfileLockManagementReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStandAloneProfileLockManagementOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStandAloneProfileLockManagementBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewStandAloneProfileLockManagementUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStandAloneProfileLockManagementForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStandAloneProfileLockManagementNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStandAloneProfileLockManagementInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewStandAloneProfileLockManagementOK creates a StandAloneProfileLockManagementOK with default headers values
func NewStandAloneProfileLockManagementOK() *StandAloneProfileLockManagementOK {
	return &StandAloneProfileLockManagementOK{}
}

/*
StandAloneProfileLockManagementOK describes a response with status code 200, with default header values.

Success
*/
type StandAloneProfileLockManagementOK struct {
	Payload interface{}
}

// IsSuccess returns true when this stand alone profile lock management o k response has a 2xx status code
func (o *StandAloneProfileLockManagementOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this stand alone profile lock management o k response has a 3xx status code
func (o *StandAloneProfileLockManagementOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stand alone profile lock management o k response has a 4xx status code
func (o *StandAloneProfileLockManagementOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this stand alone profile lock management o k response has a 5xx status code
func (o *StandAloneProfileLockManagementOK) IsServerError() bool {
	return false
}

// IsCode returns true when this stand alone profile lock management o k response a status code equal to that given
func (o *StandAloneProfileLockManagementOK) IsCode(code int) bool {
	return code == 200
}

func (o *StandAloneProfileLockManagementOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAloneProfile/lockmanager][%d] standAloneProfileLockManagementOK  %+v", 200, o.Payload)
}

func (o *StandAloneProfileLockManagementOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAloneProfile/lockmanager][%d] standAloneProfileLockManagementOK  %+v", 200, o.Payload)
}

func (o *StandAloneProfileLockManagementOK) GetPayload() interface{} {
	return o.Payload
}

func (o *StandAloneProfileLockManagementOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStandAloneProfileLockManagementBadRequest creates a StandAloneProfileLockManagementBadRequest with default headers values
func NewStandAloneProfileLockManagementBadRequest() *StandAloneProfileLockManagementBadRequest {
	return &StandAloneProfileLockManagementBadRequest{}
}

/*
StandAloneProfileLockManagementBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type StandAloneProfileLockManagementBadRequest struct {
	Payload []*StandAloneProfileLockManagementBadRequestBodyItems0
}

// IsSuccess returns true when this stand alone profile lock management bad request response has a 2xx status code
func (o *StandAloneProfileLockManagementBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stand alone profile lock management bad request response has a 3xx status code
func (o *StandAloneProfileLockManagementBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stand alone profile lock management bad request response has a 4xx status code
func (o *StandAloneProfileLockManagementBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this stand alone profile lock management bad request response has a 5xx status code
func (o *StandAloneProfileLockManagementBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this stand alone profile lock management bad request response a status code equal to that given
func (o *StandAloneProfileLockManagementBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *StandAloneProfileLockManagementBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAloneProfile/lockmanager][%d] standAloneProfileLockManagementBadRequest  %+v", 400, o.Payload)
}

func (o *StandAloneProfileLockManagementBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAloneProfile/lockmanager][%d] standAloneProfileLockManagementBadRequest  %+v", 400, o.Payload)
}

func (o *StandAloneProfileLockManagementBadRequest) GetPayload() []*StandAloneProfileLockManagementBadRequestBodyItems0 {
	return o.Payload
}

func (o *StandAloneProfileLockManagementBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStandAloneProfileLockManagementUnauthorized creates a StandAloneProfileLockManagementUnauthorized with default headers values
func NewStandAloneProfileLockManagementUnauthorized() *StandAloneProfileLockManagementUnauthorized {
	return &StandAloneProfileLockManagementUnauthorized{}
}

/*
StandAloneProfileLockManagementUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type StandAloneProfileLockManagementUnauthorized struct {
	Payload *StandAloneProfileLockManagementUnauthorizedBody
}

// IsSuccess returns true when this stand alone profile lock management unauthorized response has a 2xx status code
func (o *StandAloneProfileLockManagementUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stand alone profile lock management unauthorized response has a 3xx status code
func (o *StandAloneProfileLockManagementUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stand alone profile lock management unauthorized response has a 4xx status code
func (o *StandAloneProfileLockManagementUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this stand alone profile lock management unauthorized response has a 5xx status code
func (o *StandAloneProfileLockManagementUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this stand alone profile lock management unauthorized response a status code equal to that given
func (o *StandAloneProfileLockManagementUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *StandAloneProfileLockManagementUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAloneProfile/lockmanager][%d] standAloneProfileLockManagementUnauthorized  %+v", 401, o.Payload)
}

func (o *StandAloneProfileLockManagementUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAloneProfile/lockmanager][%d] standAloneProfileLockManagementUnauthorized  %+v", 401, o.Payload)
}

func (o *StandAloneProfileLockManagementUnauthorized) GetPayload() *StandAloneProfileLockManagementUnauthorizedBody {
	return o.Payload
}

func (o *StandAloneProfileLockManagementUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(StandAloneProfileLockManagementUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStandAloneProfileLockManagementForbidden creates a StandAloneProfileLockManagementForbidden with default headers values
func NewStandAloneProfileLockManagementForbidden() *StandAloneProfileLockManagementForbidden {
	return &StandAloneProfileLockManagementForbidden{}
}

/*
StandAloneProfileLockManagementForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type StandAloneProfileLockManagementForbidden struct {
	Payload *StandAloneProfileLockManagementForbiddenBody
}

// IsSuccess returns true when this stand alone profile lock management forbidden response has a 2xx status code
func (o *StandAloneProfileLockManagementForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stand alone profile lock management forbidden response has a 3xx status code
func (o *StandAloneProfileLockManagementForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stand alone profile lock management forbidden response has a 4xx status code
func (o *StandAloneProfileLockManagementForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this stand alone profile lock management forbidden response has a 5xx status code
func (o *StandAloneProfileLockManagementForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this stand alone profile lock management forbidden response a status code equal to that given
func (o *StandAloneProfileLockManagementForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *StandAloneProfileLockManagementForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAloneProfile/lockmanager][%d] standAloneProfileLockManagementForbidden  %+v", 403, o.Payload)
}

func (o *StandAloneProfileLockManagementForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAloneProfile/lockmanager][%d] standAloneProfileLockManagementForbidden  %+v", 403, o.Payload)
}

func (o *StandAloneProfileLockManagementForbidden) GetPayload() *StandAloneProfileLockManagementForbiddenBody {
	return o.Payload
}

func (o *StandAloneProfileLockManagementForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(StandAloneProfileLockManagementForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStandAloneProfileLockManagementNotFound creates a StandAloneProfileLockManagementNotFound with default headers values
func NewStandAloneProfileLockManagementNotFound() *StandAloneProfileLockManagementNotFound {
	return &StandAloneProfileLockManagementNotFound{}
}

/*
StandAloneProfileLockManagementNotFound describes a response with status code 404, with default header values.

Not Found
*/
type StandAloneProfileLockManagementNotFound struct {
	Payload *StandAloneProfileLockManagementNotFoundBody
}

// IsSuccess returns true when this stand alone profile lock management not found response has a 2xx status code
func (o *StandAloneProfileLockManagementNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stand alone profile lock management not found response has a 3xx status code
func (o *StandAloneProfileLockManagementNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stand alone profile lock management not found response has a 4xx status code
func (o *StandAloneProfileLockManagementNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this stand alone profile lock management not found response has a 5xx status code
func (o *StandAloneProfileLockManagementNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this stand alone profile lock management not found response a status code equal to that given
func (o *StandAloneProfileLockManagementNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *StandAloneProfileLockManagementNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAloneProfile/lockmanager][%d] standAloneProfileLockManagementNotFound  %+v", 404, o.Payload)
}

func (o *StandAloneProfileLockManagementNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAloneProfile/lockmanager][%d] standAloneProfileLockManagementNotFound  %+v", 404, o.Payload)
}

func (o *StandAloneProfileLockManagementNotFound) GetPayload() *StandAloneProfileLockManagementNotFoundBody {
	return o.Payload
}

func (o *StandAloneProfileLockManagementNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(StandAloneProfileLockManagementNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStandAloneProfileLockManagementInternalServerError creates a StandAloneProfileLockManagementInternalServerError with default headers values
func NewStandAloneProfileLockManagementInternalServerError() *StandAloneProfileLockManagementInternalServerError {
	return &StandAloneProfileLockManagementInternalServerError{}
}

/*
StandAloneProfileLockManagementInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type StandAloneProfileLockManagementInternalServerError struct {
}

// IsSuccess returns true when this stand alone profile lock management internal server error response has a 2xx status code
func (o *StandAloneProfileLockManagementInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stand alone profile lock management internal server error response has a 3xx status code
func (o *StandAloneProfileLockManagementInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stand alone profile lock management internal server error response has a 4xx status code
func (o *StandAloneProfileLockManagementInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this stand alone profile lock management internal server error response has a 5xx status code
func (o *StandAloneProfileLockManagementInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this stand alone profile lock management internal server error response a status code equal to that given
func (o *StandAloneProfileLockManagementInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *StandAloneProfileLockManagementInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAloneProfile/lockmanager][%d] standAloneProfileLockManagementInternalServerError ", 500)
}

func (o *StandAloneProfileLockManagementInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAloneProfile/lockmanager][%d] standAloneProfileLockManagementInternalServerError ", 500)
}

func (o *StandAloneProfileLockManagementInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
StandAloneProfileLockManagementBadRequestBodyItems0 stand alone profile lock management bad request body items0
swagger:model StandAloneProfileLockManagementBadRequestBodyItems0
*/
type StandAloneProfileLockManagementBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this stand alone profile lock management bad request body items0
func (o *StandAloneProfileLockManagementBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this stand alone profile lock management bad request body items0 based on context it is used
func (o *StandAloneProfileLockManagementBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *StandAloneProfileLockManagementBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StandAloneProfileLockManagementBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res StandAloneProfileLockManagementBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
StandAloneProfileLockManagementBody stand alone profile lock management body
swagger:model StandAloneProfileLockManagementBody
*/
type StandAloneProfileLockManagementBody struct {

	// id
	ID int32 `json:"id,omitempty"`

	// mode
	Mode string `json:"mode,omitempty"`
}

// Validate validates this stand alone profile lock management body
func (o *StandAloneProfileLockManagementBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this stand alone profile lock management body based on context it is used
func (o *StandAloneProfileLockManagementBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *StandAloneProfileLockManagementBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StandAloneProfileLockManagementBody) UnmarshalBinary(b []byte) error {
	var res StandAloneProfileLockManagementBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
StandAloneProfileLockManagementForbiddenBody stand alone profile lock management forbidden body
swagger:model StandAloneProfileLockManagementForbiddenBody
*/
type StandAloneProfileLockManagementForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this stand alone profile lock management forbidden body
func (o *StandAloneProfileLockManagementForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this stand alone profile lock management forbidden body based on context it is used
func (o *StandAloneProfileLockManagementForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *StandAloneProfileLockManagementForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StandAloneProfileLockManagementForbiddenBody) UnmarshalBinary(b []byte) error {
	var res StandAloneProfileLockManagementForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
StandAloneProfileLockManagementNotFoundBody stand alone profile lock management not found body
swagger:model StandAloneProfileLockManagementNotFoundBody
*/
type StandAloneProfileLockManagementNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this stand alone profile lock management not found body
func (o *StandAloneProfileLockManagementNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this stand alone profile lock management not found body based on context it is used
func (o *StandAloneProfileLockManagementNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *StandAloneProfileLockManagementNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StandAloneProfileLockManagementNotFoundBody) UnmarshalBinary(b []byte) error {
	var res StandAloneProfileLockManagementNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
StandAloneProfileLockManagementUnauthorizedBody stand alone profile lock management unauthorized body
swagger:model StandAloneProfileLockManagementUnauthorizedBody
*/
type StandAloneProfileLockManagementUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this stand alone profile lock management unauthorized body
func (o *StandAloneProfileLockManagementUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this stand alone profile lock management unauthorized body based on context it is used
func (o *StandAloneProfileLockManagementUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *StandAloneProfileLockManagementUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StandAloneProfileLockManagementUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res StandAloneProfileLockManagementUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
