// Code generated by go-swagger; DO NOT EDIT.

package stand_alone_profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new stand alone profile API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for stand alone profile API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	StandAloneProfileCreate(params *StandAloneProfileCreateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*StandAloneProfileCreateOK, error)

	StandAloneProfileDelete(params *StandAloneProfileDeleteParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*StandAloneProfileDeleteOK, error)

	StandAloneProfileDropdownList(params *StandAloneProfileDropdownListParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*StandAloneProfileDropdownListOK, error)

	StandAloneProfileEdit(params *StandAloneProfileEditParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*StandAloneProfileEditOK, error)

	StandAloneProfileList(params *StandAloneProfileListParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*StandAloneProfileListOK, error)

	StandAloneProfileLockManagement(params *StandAloneProfileLockManagementParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*StandAloneProfileLockManagementOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
StandAloneProfileCreate creates standalone profile
*/
func (a *Client) StandAloneProfileCreate(params *StandAloneProfileCreateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*StandAloneProfileCreateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewStandAloneProfileCreateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "StandAloneProfile_Create",
		Method:             "POST",
		PathPattern:        "/api/v{v}/StandAloneProfile/create",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &StandAloneProfileCreateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*StandAloneProfileCreateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for StandAloneProfile_Create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
StandAloneProfileDelete deletes standalone profile
*/
func (a *Client) StandAloneProfileDelete(params *StandAloneProfileDeleteParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*StandAloneProfileDeleteOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewStandAloneProfileDeleteParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "StandAloneProfile_Delete",
		Method:             "POST",
		PathPattern:        "/api/v{v}/StandAloneProfile/delete",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &StandAloneProfileDeleteReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*StandAloneProfileDeleteOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for StandAloneProfile_Delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
StandAloneProfileDropdownList retrieves dropdown list of stand alone profiles
*/
func (a *Client) StandAloneProfileDropdownList(params *StandAloneProfileDropdownListParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*StandAloneProfileDropdownListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewStandAloneProfileDropdownListParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "StandAloneProfile_DropdownList",
		Method:             "GET",
		PathPattern:        "/api/v{v}/StandAloneProfile/list",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &StandAloneProfileDropdownListReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*StandAloneProfileDropdownListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for StandAloneProfile_DropdownList: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
StandAloneProfileEdit updates standalone profile
*/
func (a *Client) StandAloneProfileEdit(params *StandAloneProfileEditParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*StandAloneProfileEditOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewStandAloneProfileEditParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "StandAloneProfile_Edit",
		Method:             "POST",
		PathPattern:        "/api/v{v}/StandAloneProfile/edit",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &StandAloneProfileEditReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*StandAloneProfileEditOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for StandAloneProfile_Edit: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
StandAloneProfileList retrieves a list of stand alone profiles
*/
func (a *Client) StandAloneProfileList(params *StandAloneProfileListParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*StandAloneProfileListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewStandAloneProfileListParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "StandAloneProfile_List",
		Method:             "GET",
		PathPattern:        "/api/v{v}/StandAloneProfile",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &StandAloneProfileListReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*StandAloneProfileListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for StandAloneProfile_List: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
StandAloneProfileLockManagement locks unlock standalone profile
*/
func (a *Client) StandAloneProfileLockManagement(params *StandAloneProfileLockManagementParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*StandAloneProfileLockManagementOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewStandAloneProfileLockManagementParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "StandAloneProfile_LockManagement",
		Method:             "POST",
		PathPattern:        "/api/v{v}/StandAloneProfile/lockmanager",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &StandAloneProfileLockManagementReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*StandAloneProfileLockManagementOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for StandAloneProfile_LockManagement: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
