/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the KubernetesInteractiveShellDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubernetesInteractiveShellDto{}

// KubernetesInteractiveShellDto struct for KubernetesInteractiveShellDto
type KubernetesInteractiveShellDto struct {
	KubeConfig *string `json:"kubeConfig,omitempty"`
	PodName *string `json:"podName,omitempty"`
}

// NewKubernetesInteractiveShellDto instantiates a new KubernetesInteractiveShellDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesInteractiveShellDto() *KubernetesInteractiveShellDto {
	this := KubernetesInteractiveShellDto{}
	return &this
}

// NewKubernetesInteractiveShellDtoWithDefaults instantiates a new KubernetesInteractiveShellDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesInteractiveShellDtoWithDefaults() *KubernetesInteractiveShellDto {
	this := KubernetesInteractiveShellDto{}
	return &this
}

// GetKubeConfig returns the KubeConfig field value if set, zero value otherwise.
func (o *KubernetesInteractiveShellDto) GetKubeConfig() string {
	if o == nil || IsNil(o.KubeConfig) {
		var ret string
		return ret
	}
	return *o.KubeConfig
}

// GetKubeConfigOk returns a tuple with the KubeConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesInteractiveShellDto) GetKubeConfigOk() (*string, bool) {
	if o == nil || IsNil(o.KubeConfig) {
		return nil, false
	}
	return o.KubeConfig, true
}

// HasKubeConfig returns a boolean if a field has been set.
func (o *KubernetesInteractiveShellDto) HasKubeConfig() bool {
	if o != nil && !IsNil(o.KubeConfig) {
		return true
	}

	return false
}

// SetKubeConfig gets a reference to the given string and assigns it to the KubeConfig field.
func (o *KubernetesInteractiveShellDto) SetKubeConfig(v string) {
	o.KubeConfig = &v
}

// GetPodName returns the PodName field value if set, zero value otherwise.
func (o *KubernetesInteractiveShellDto) GetPodName() string {
	if o == nil || IsNil(o.PodName) {
		var ret string
		return ret
	}
	return *o.PodName
}

// GetPodNameOk returns a tuple with the PodName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesInteractiveShellDto) GetPodNameOk() (*string, bool) {
	if o == nil || IsNil(o.PodName) {
		return nil, false
	}
	return o.PodName, true
}

// HasPodName returns a boolean if a field has been set.
func (o *KubernetesInteractiveShellDto) HasPodName() bool {
	if o != nil && !IsNil(o.PodName) {
		return true
	}

	return false
}

// SetPodName gets a reference to the given string and assigns it to the PodName field.
func (o *KubernetesInteractiveShellDto) SetPodName(v string) {
	o.PodName = &v
}

func (o KubernetesInteractiveShellDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubernetesInteractiveShellDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.KubeConfig) {
		toSerialize["kubeConfig"] = o.KubeConfig
	}
	if !IsNil(o.PodName) {
		toSerialize["podName"] = o.PodName
	}
	return toSerialize, nil
}

type NullableKubernetesInteractiveShellDto struct {
	value *KubernetesInteractiveShellDto
	isSet bool
}

func (v NullableKubernetesInteractiveShellDto) Get() *KubernetesInteractiveShellDto {
	return v.value
}

func (v *NullableKubernetesInteractiveShellDto) Set(val *KubernetesInteractiveShellDto) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesInteractiveShellDto) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesInteractiveShellDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesInteractiveShellDto(val *KubernetesInteractiveShellDto) *NullableKubernetesInteractiveShellDto {
	return &NullableKubernetesInteractiveShellDto{value: val, isSet: true}
}

func (v NullableKubernetesInteractiveShellDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesInteractiveShellDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


