/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the DeploymentCompletedCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentCompletedCommand{}

// DeploymentCompletedCommand struct for DeploymentCompletedCommand
type DeploymentCompletedCommand struct {
	ProjectId *int32 `json:"projectId,omitempty"`
	Result NullableString `json:"result,omitempty"`
	FromCronJob *bool `json:"fromCronJob,omitempty"`
}

// NewDeploymentCompletedCommand instantiates a new DeploymentCompletedCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentCompletedCommand() *DeploymentCompletedCommand {
	this := DeploymentCompletedCommand{}
	return &this
}

// NewDeploymentCompletedCommandWithDefaults instantiates a new DeploymentCompletedCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentCompletedCommandWithDefaults() *DeploymentCompletedCommand {
	this := DeploymentCompletedCommand{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *DeploymentCompletedCommand) GetProjectId() int32 {
	if o == nil || IsNil(o.ProjectId) {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCompletedCommand) GetProjectIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *DeploymentCompletedCommand) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *DeploymentCompletedCommand) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetResult returns the Result field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentCompletedCommand) GetResult() string {
	if o == nil || IsNil(o.Result.Get()) {
		var ret string
		return ret
	}
	return *o.Result.Get()
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentCompletedCommand) GetResultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Result.Get(), o.Result.IsSet()
}

// HasResult returns a boolean if a field has been set.
func (o *DeploymentCompletedCommand) HasResult() bool {
	if o != nil && o.Result.IsSet() {
		return true
	}

	return false
}

// SetResult gets a reference to the given NullableString and assigns it to the Result field.
func (o *DeploymentCompletedCommand) SetResult(v string) {
	o.Result.Set(&v)
}
// SetResultNil sets the value for Result to be an explicit nil
func (o *DeploymentCompletedCommand) SetResultNil() {
	o.Result.Set(nil)
}

// UnsetResult ensures that no value is present for Result, not even an explicit nil
func (o *DeploymentCompletedCommand) UnsetResult() {
	o.Result.Unset()
}

// GetFromCronJob returns the FromCronJob field value if set, zero value otherwise.
func (o *DeploymentCompletedCommand) GetFromCronJob() bool {
	if o == nil || IsNil(o.FromCronJob) {
		var ret bool
		return ret
	}
	return *o.FromCronJob
}

// GetFromCronJobOk returns a tuple with the FromCronJob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCompletedCommand) GetFromCronJobOk() (*bool, bool) {
	if o == nil || IsNil(o.FromCronJob) {
		return nil, false
	}
	return o.FromCronJob, true
}

// HasFromCronJob returns a boolean if a field has been set.
func (o *DeploymentCompletedCommand) HasFromCronJob() bool {
	if o != nil && !IsNil(o.FromCronJob) {
		return true
	}

	return false
}

// SetFromCronJob gets a reference to the given bool and assigns it to the FromCronJob field.
func (o *DeploymentCompletedCommand) SetFromCronJob(v bool) {
	o.FromCronJob = &v
}

func (o DeploymentCompletedCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentCompletedCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.Result.IsSet() {
		toSerialize["result"] = o.Result.Get()
	}
	if !IsNil(o.FromCronJob) {
		toSerialize["fromCronJob"] = o.FromCronJob
	}
	return toSerialize, nil
}

type NullableDeploymentCompletedCommand struct {
	value *DeploymentCompletedCommand
	isSet bool
}

func (v NullableDeploymentCompletedCommand) Get() *DeploymentCompletedCommand {
	return v.value
}

func (v *NullableDeploymentCompletedCommand) Set(val *DeploymentCompletedCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentCompletedCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentCompletedCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentCompletedCommand(val *DeploymentCompletedCommand) *NullableDeploymentCompletedCommand {
	return &NullableDeploymentCompletedCommand{value: val, isSet: true}
}

func (v NullableDeploymentCompletedCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentCompletedCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


