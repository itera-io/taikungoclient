/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the ZadaraRegionListCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ZadaraRegionListCommand{}

// ZadaraRegionListCommand struct for ZadaraRegionListCommand
type ZadaraRegionListCommand struct {
	Url NullableString `json:"url,omitempty"`
	ZadaraAccessKeyId NullableString `json:"zadaraAccessKeyId,omitempty"`
	ZadaraSecretAccessKey NullableString `json:"zadaraSecretAccessKey,omitempty"`
}

// NewZadaraRegionListCommand instantiates a new ZadaraRegionListCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZadaraRegionListCommand() *ZadaraRegionListCommand {
	this := ZadaraRegionListCommand{}
	return &this
}

// NewZadaraRegionListCommandWithDefaults instantiates a new ZadaraRegionListCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZadaraRegionListCommandWithDefaults() *ZadaraRegionListCommand {
	this := ZadaraRegionListCommand{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ZadaraRegionListCommand) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ZadaraRegionListCommand) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *ZadaraRegionListCommand) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *ZadaraRegionListCommand) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *ZadaraRegionListCommand) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *ZadaraRegionListCommand) UnsetUrl() {
	o.Url.Unset()
}

// GetZadaraAccessKeyId returns the ZadaraAccessKeyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ZadaraRegionListCommand) GetZadaraAccessKeyId() string {
	if o == nil || IsNil(o.ZadaraAccessKeyId.Get()) {
		var ret string
		return ret
	}
	return *o.ZadaraAccessKeyId.Get()
}

// GetZadaraAccessKeyIdOk returns a tuple with the ZadaraAccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ZadaraRegionListCommand) GetZadaraAccessKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZadaraAccessKeyId.Get(), o.ZadaraAccessKeyId.IsSet()
}

// HasZadaraAccessKeyId returns a boolean if a field has been set.
func (o *ZadaraRegionListCommand) HasZadaraAccessKeyId() bool {
	if o != nil && o.ZadaraAccessKeyId.IsSet() {
		return true
	}

	return false
}

// SetZadaraAccessKeyId gets a reference to the given NullableString and assigns it to the ZadaraAccessKeyId field.
func (o *ZadaraRegionListCommand) SetZadaraAccessKeyId(v string) {
	o.ZadaraAccessKeyId.Set(&v)
}
// SetZadaraAccessKeyIdNil sets the value for ZadaraAccessKeyId to be an explicit nil
func (o *ZadaraRegionListCommand) SetZadaraAccessKeyIdNil() {
	o.ZadaraAccessKeyId.Set(nil)
}

// UnsetZadaraAccessKeyId ensures that no value is present for ZadaraAccessKeyId, not even an explicit nil
func (o *ZadaraRegionListCommand) UnsetZadaraAccessKeyId() {
	o.ZadaraAccessKeyId.Unset()
}

// GetZadaraSecretAccessKey returns the ZadaraSecretAccessKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ZadaraRegionListCommand) GetZadaraSecretAccessKey() string {
	if o == nil || IsNil(o.ZadaraSecretAccessKey.Get()) {
		var ret string
		return ret
	}
	return *o.ZadaraSecretAccessKey.Get()
}

// GetZadaraSecretAccessKeyOk returns a tuple with the ZadaraSecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ZadaraRegionListCommand) GetZadaraSecretAccessKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZadaraSecretAccessKey.Get(), o.ZadaraSecretAccessKey.IsSet()
}

// HasZadaraSecretAccessKey returns a boolean if a field has been set.
func (o *ZadaraRegionListCommand) HasZadaraSecretAccessKey() bool {
	if o != nil && o.ZadaraSecretAccessKey.IsSet() {
		return true
	}

	return false
}

// SetZadaraSecretAccessKey gets a reference to the given NullableString and assigns it to the ZadaraSecretAccessKey field.
func (o *ZadaraRegionListCommand) SetZadaraSecretAccessKey(v string) {
	o.ZadaraSecretAccessKey.Set(&v)
}
// SetZadaraSecretAccessKeyNil sets the value for ZadaraSecretAccessKey to be an explicit nil
func (o *ZadaraRegionListCommand) SetZadaraSecretAccessKeyNil() {
	o.ZadaraSecretAccessKey.Set(nil)
}

// UnsetZadaraSecretAccessKey ensures that no value is present for ZadaraSecretAccessKey, not even an explicit nil
func (o *ZadaraRegionListCommand) UnsetZadaraSecretAccessKey() {
	o.ZadaraSecretAccessKey.Unset()
}

func (o ZadaraRegionListCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ZadaraRegionListCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if o.ZadaraAccessKeyId.IsSet() {
		toSerialize["zadaraAccessKeyId"] = o.ZadaraAccessKeyId.Get()
	}
	if o.ZadaraSecretAccessKey.IsSet() {
		toSerialize["zadaraSecretAccessKey"] = o.ZadaraSecretAccessKey.Get()
	}
	return toSerialize, nil
}

type NullableZadaraRegionListCommand struct {
	value *ZadaraRegionListCommand
	isSet bool
}

func (v NullableZadaraRegionListCommand) Get() *ZadaraRegionListCommand {
	return v.value
}

func (v *NullableZadaraRegionListCommand) Set(val *ZadaraRegionListCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableZadaraRegionListCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableZadaraRegionListCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZadaraRegionListCommand(val *ZadaraRegionListCommand) *NullableZadaraRegionListCommand {
	return &NullableZadaraRegionListCommand{value: val, isSet: true}
}

func (v NullableZadaraRegionListCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZadaraRegionListCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


