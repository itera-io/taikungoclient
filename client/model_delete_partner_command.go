/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the DeletePartnerCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeletePartnerCommand{}

// DeletePartnerCommand struct for DeletePartnerCommand
type DeletePartnerCommand struct {
	PartnerId *int32 `json:"partnerId,omitempty"`
}

// NewDeletePartnerCommand instantiates a new DeletePartnerCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeletePartnerCommand() *DeletePartnerCommand {
	this := DeletePartnerCommand{}
	return &this
}

// NewDeletePartnerCommandWithDefaults instantiates a new DeletePartnerCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeletePartnerCommandWithDefaults() *DeletePartnerCommand {
	this := DeletePartnerCommand{}
	return &this
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *DeletePartnerCommand) GetPartnerId() int32 {
	if o == nil || IsNil(o.PartnerId) {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletePartnerCommand) GetPartnerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PartnerId) {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *DeletePartnerCommand) HasPartnerId() bool {
	if o != nil && !IsNil(o.PartnerId) {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *DeletePartnerCommand) SetPartnerId(v int32) {
	o.PartnerId = &v
}

func (o DeletePartnerCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeletePartnerCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PartnerId) {
		toSerialize["partnerId"] = o.PartnerId
	}
	return toSerialize, nil
}

type NullableDeletePartnerCommand struct {
	value *DeletePartnerCommand
	isSet bool
}

func (v NullableDeletePartnerCommand) Get() *DeletePartnerCommand {
	return v.value
}

func (v *NullableDeletePartnerCommand) Set(val *DeletePartnerCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableDeletePartnerCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableDeletePartnerCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeletePartnerCommand(val *DeletePartnerCommand) *NullableDeletePartnerCommand {
	return &NullableDeletePartnerCommand{value: val, isSet: true}
}

func (v NullableDeletePartnerCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeletePartnerCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


