/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"os"
)

// checks if the GoogleZoneListCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoogleZoneListCommand{}

// GoogleZoneListCommand struct for GoogleZoneListCommand
type GoogleZoneListCommand struct {
	Config Nullable*os.File `json:"config,omitempty"`
	Region NullableString `json:"region,omitempty"`
	CloudId NullableInt32 `json:"cloudId,omitempty"`
}

// NewGoogleZoneListCommand instantiates a new GoogleZoneListCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoogleZoneListCommand() *GoogleZoneListCommand {
	this := GoogleZoneListCommand{}
	return &this
}

// NewGoogleZoneListCommandWithDefaults instantiates a new GoogleZoneListCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleZoneListCommandWithDefaults() *GoogleZoneListCommand {
	this := GoogleZoneListCommand{}
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GoogleZoneListCommand) GetConfig() *os.File {
	if o == nil || IsNil(o.Config.Get()) {
		var ret *os.File
		return ret
	}
	return *o.Config.Get()
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GoogleZoneListCommand) GetConfigOk() (**os.File, bool) {
	if o == nil {
		return nil, false
	}
	return o.Config.Get(), o.Config.IsSet()
}

// HasConfig returns a boolean if a field has been set.
func (o *GoogleZoneListCommand) HasConfig() bool {
	if o != nil && o.Config.IsSet() {
		return true
	}

	return false
}

// SetConfig gets a reference to the given Nullable*os.File and assigns it to the Config field.
func (o *GoogleZoneListCommand) SetConfig(v *os.File) {
	o.Config.Set(&v)
}
// SetConfigNil sets the value for Config to be an explicit nil
func (o *GoogleZoneListCommand) SetConfigNil() {
	o.Config.Set(nil)
}

// UnsetConfig ensures that no value is present for Config, not even an explicit nil
func (o *GoogleZoneListCommand) UnsetConfig() {
	o.Config.Unset()
}

// GetRegion returns the Region field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GoogleZoneListCommand) GetRegion() string {
	if o == nil || IsNil(o.Region.Get()) {
		var ret string
		return ret
	}
	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GoogleZoneListCommand) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// HasRegion returns a boolean if a field has been set.
func (o *GoogleZoneListCommand) HasRegion() bool {
	if o != nil && o.Region.IsSet() {
		return true
	}

	return false
}

// SetRegion gets a reference to the given NullableString and assigns it to the Region field.
func (o *GoogleZoneListCommand) SetRegion(v string) {
	o.Region.Set(&v)
}
// SetRegionNil sets the value for Region to be an explicit nil
func (o *GoogleZoneListCommand) SetRegionNil() {
	o.Region.Set(nil)
}

// UnsetRegion ensures that no value is present for Region, not even an explicit nil
func (o *GoogleZoneListCommand) UnsetRegion() {
	o.Region.Unset()
}

// GetCloudId returns the CloudId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GoogleZoneListCommand) GetCloudId() int32 {
	if o == nil || IsNil(o.CloudId.Get()) {
		var ret int32
		return ret
	}
	return *o.CloudId.Get()
}

// GetCloudIdOk returns a tuple with the CloudId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GoogleZoneListCommand) GetCloudIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloudId.Get(), o.CloudId.IsSet()
}

// HasCloudId returns a boolean if a field has been set.
func (o *GoogleZoneListCommand) HasCloudId() bool {
	if o != nil && o.CloudId.IsSet() {
		return true
	}

	return false
}

// SetCloudId gets a reference to the given NullableInt32 and assigns it to the CloudId field.
func (o *GoogleZoneListCommand) SetCloudId(v int32) {
	o.CloudId.Set(&v)
}
// SetCloudIdNil sets the value for CloudId to be an explicit nil
func (o *GoogleZoneListCommand) SetCloudIdNil() {
	o.CloudId.Set(nil)
}

// UnsetCloudId ensures that no value is present for CloudId, not even an explicit nil
func (o *GoogleZoneListCommand) UnsetCloudId() {
	o.CloudId.Unset()
}

func (o GoogleZoneListCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoogleZoneListCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Config.IsSet() {
		toSerialize["config"] = o.Config.Get()
	}
	if o.Region.IsSet() {
		toSerialize["region"] = o.Region.Get()
	}
	if o.CloudId.IsSet() {
		toSerialize["cloudId"] = o.CloudId.Get()
	}
	return toSerialize, nil
}

type NullableGoogleZoneListCommand struct {
	value *GoogleZoneListCommand
	isSet bool
}

func (v NullableGoogleZoneListCommand) Get() *GoogleZoneListCommand {
	return v.value
}

func (v *NullableGoogleZoneListCommand) Set(val *GoogleZoneListCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableGoogleZoneListCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableGoogleZoneListCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoogleZoneListCommand(val *GoogleZoneListCommand) *NullableGoogleZoneListCommand {
	return &NullableGoogleZoneListCommand{value: val, isSet: true}
}

func (v NullableGoogleZoneListCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoogleZoneListCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


