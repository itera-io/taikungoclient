// Code generated by go-swagger; DO NOT EDIT.

package repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// RepositoryTaikunRecommendedRepositoryListReader is a Reader for the RepositoryTaikunRecommendedRepositoryList structure.
type RepositoryTaikunRecommendedRepositoryListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RepositoryTaikunRecommendedRepositoryListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRepositoryTaikunRecommendedRepositoryListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRepositoryTaikunRecommendedRepositoryListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRepositoryTaikunRecommendedRepositoryListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRepositoryTaikunRecommendedRepositoryListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRepositoryTaikunRecommendedRepositoryListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRepositoryTaikunRecommendedRepositoryListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRepositoryTaikunRecommendedRepositoryListOK creates a RepositoryTaikunRecommendedRepositoryListOK with default headers values
func NewRepositoryTaikunRecommendedRepositoryListOK() *RepositoryTaikunRecommendedRepositoryListOK {
	return &RepositoryTaikunRecommendedRepositoryListOK{}
}

/* RepositoryTaikunRecommendedRepositoryListOK describes a response with status code 200, with default header values.

Success
*/
type RepositoryTaikunRecommendedRepositoryListOK struct {
	Payload []*models.ArtifactRepositoryDto
}

func (o *RepositoryTaikunRecommendedRepositoryListOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Repository/recommended][%d] repositoryTaikunRecommendedRepositoryListOK  %+v", 200, o.Payload)
}
func (o *RepositoryTaikunRecommendedRepositoryListOK) GetPayload() []*models.ArtifactRepositoryDto {
	return o.Payload
}

func (o *RepositoryTaikunRecommendedRepositoryListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRepositoryTaikunRecommendedRepositoryListBadRequest creates a RepositoryTaikunRecommendedRepositoryListBadRequest with default headers values
func NewRepositoryTaikunRecommendedRepositoryListBadRequest() *RepositoryTaikunRecommendedRepositoryListBadRequest {
	return &RepositoryTaikunRecommendedRepositoryListBadRequest{}
}

/* RepositoryTaikunRecommendedRepositoryListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RepositoryTaikunRecommendedRepositoryListBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *RepositoryTaikunRecommendedRepositoryListBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Repository/recommended][%d] repositoryTaikunRecommendedRepositoryListBadRequest  %+v", 400, o.Payload)
}
func (o *RepositoryTaikunRecommendedRepositoryListBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *RepositoryTaikunRecommendedRepositoryListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRepositoryTaikunRecommendedRepositoryListUnauthorized creates a RepositoryTaikunRecommendedRepositoryListUnauthorized with default headers values
func NewRepositoryTaikunRecommendedRepositoryListUnauthorized() *RepositoryTaikunRecommendedRepositoryListUnauthorized {
	return &RepositoryTaikunRecommendedRepositoryListUnauthorized{}
}

/* RepositoryTaikunRecommendedRepositoryListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RepositoryTaikunRecommendedRepositoryListUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *RepositoryTaikunRecommendedRepositoryListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Repository/recommended][%d] repositoryTaikunRecommendedRepositoryListUnauthorized  %+v", 401, o.Payload)
}
func (o *RepositoryTaikunRecommendedRepositoryListUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *RepositoryTaikunRecommendedRepositoryListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRepositoryTaikunRecommendedRepositoryListForbidden creates a RepositoryTaikunRecommendedRepositoryListForbidden with default headers values
func NewRepositoryTaikunRecommendedRepositoryListForbidden() *RepositoryTaikunRecommendedRepositoryListForbidden {
	return &RepositoryTaikunRecommendedRepositoryListForbidden{}
}

/* RepositoryTaikunRecommendedRepositoryListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RepositoryTaikunRecommendedRepositoryListForbidden struct {
	Payload *models.ProblemDetails
}

func (o *RepositoryTaikunRecommendedRepositoryListForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Repository/recommended][%d] repositoryTaikunRecommendedRepositoryListForbidden  %+v", 403, o.Payload)
}
func (o *RepositoryTaikunRecommendedRepositoryListForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *RepositoryTaikunRecommendedRepositoryListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRepositoryTaikunRecommendedRepositoryListNotFound creates a RepositoryTaikunRecommendedRepositoryListNotFound with default headers values
func NewRepositoryTaikunRecommendedRepositoryListNotFound() *RepositoryTaikunRecommendedRepositoryListNotFound {
	return &RepositoryTaikunRecommendedRepositoryListNotFound{}
}

/* RepositoryTaikunRecommendedRepositoryListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RepositoryTaikunRecommendedRepositoryListNotFound struct {
	Payload *models.ProblemDetails
}

func (o *RepositoryTaikunRecommendedRepositoryListNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Repository/recommended][%d] repositoryTaikunRecommendedRepositoryListNotFound  %+v", 404, o.Payload)
}
func (o *RepositoryTaikunRecommendedRepositoryListNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *RepositoryTaikunRecommendedRepositoryListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRepositoryTaikunRecommendedRepositoryListInternalServerError creates a RepositoryTaikunRecommendedRepositoryListInternalServerError with default headers values
func NewRepositoryTaikunRecommendedRepositoryListInternalServerError() *RepositoryTaikunRecommendedRepositoryListInternalServerError {
	return &RepositoryTaikunRecommendedRepositoryListInternalServerError{}
}

/* RepositoryTaikunRecommendedRepositoryListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type RepositoryTaikunRecommendedRepositoryListInternalServerError struct {
}

func (o *RepositoryTaikunRecommendedRepositoryListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Repository/recommended][%d] repositoryTaikunRecommendedRepositoryListInternalServerError ", 500)
}

func (o *RepositoryTaikunRecommendedRepositoryListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
