// Code generated by go-swagger; DO NOT EDIT.

package repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RepositoryTaikunRecommendedRepositoryListReader is a Reader for the RepositoryTaikunRecommendedRepositoryList structure.
type RepositoryTaikunRecommendedRepositoryListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RepositoryTaikunRecommendedRepositoryListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRepositoryTaikunRecommendedRepositoryListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRepositoryTaikunRecommendedRepositoryListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRepositoryTaikunRecommendedRepositoryListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRepositoryTaikunRecommendedRepositoryListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRepositoryTaikunRecommendedRepositoryListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRepositoryTaikunRecommendedRepositoryListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRepositoryTaikunRecommendedRepositoryListOK creates a RepositoryTaikunRecommendedRepositoryListOK with default headers values
func NewRepositoryTaikunRecommendedRepositoryListOK() *RepositoryTaikunRecommendedRepositoryListOK {
	return &RepositoryTaikunRecommendedRepositoryListOK{}
}

/*
RepositoryTaikunRecommendedRepositoryListOK describes a response with status code 200, with default header values.

Success
*/
type RepositoryTaikunRecommendedRepositoryListOK struct {
	Payload []*RepositoryTaikunRecommendedRepositoryListOKBodyItems0
}

// IsSuccess returns true when this repository taikun recommended repository list o k response has a 2xx status code
func (o *RepositoryTaikunRecommendedRepositoryListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this repository taikun recommended repository list o k response has a 3xx status code
func (o *RepositoryTaikunRecommendedRepositoryListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this repository taikun recommended repository list o k response has a 4xx status code
func (o *RepositoryTaikunRecommendedRepositoryListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this repository taikun recommended repository list o k response has a 5xx status code
func (o *RepositoryTaikunRecommendedRepositoryListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this repository taikun recommended repository list o k response a status code equal to that given
func (o *RepositoryTaikunRecommendedRepositoryListOK) IsCode(code int) bool {
	return code == 200
}

func (o *RepositoryTaikunRecommendedRepositoryListOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Repository/recommended][%d] repositoryTaikunRecommendedRepositoryListOK  %+v", 200, o.Payload)
}

func (o *RepositoryTaikunRecommendedRepositoryListOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Repository/recommended][%d] repositoryTaikunRecommendedRepositoryListOK  %+v", 200, o.Payload)
}

func (o *RepositoryTaikunRecommendedRepositoryListOK) GetPayload() []*RepositoryTaikunRecommendedRepositoryListOKBodyItems0 {
	return o.Payload
}

func (o *RepositoryTaikunRecommendedRepositoryListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRepositoryTaikunRecommendedRepositoryListBadRequest creates a RepositoryTaikunRecommendedRepositoryListBadRequest with default headers values
func NewRepositoryTaikunRecommendedRepositoryListBadRequest() *RepositoryTaikunRecommendedRepositoryListBadRequest {
	return &RepositoryTaikunRecommendedRepositoryListBadRequest{}
}

/*
RepositoryTaikunRecommendedRepositoryListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RepositoryTaikunRecommendedRepositoryListBadRequest struct {
	Payload []*RepositoryTaikunRecommendedRepositoryListBadRequestBodyItems0
}

// IsSuccess returns true when this repository taikun recommended repository list bad request response has a 2xx status code
func (o *RepositoryTaikunRecommendedRepositoryListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this repository taikun recommended repository list bad request response has a 3xx status code
func (o *RepositoryTaikunRecommendedRepositoryListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this repository taikun recommended repository list bad request response has a 4xx status code
func (o *RepositoryTaikunRecommendedRepositoryListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this repository taikun recommended repository list bad request response has a 5xx status code
func (o *RepositoryTaikunRecommendedRepositoryListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this repository taikun recommended repository list bad request response a status code equal to that given
func (o *RepositoryTaikunRecommendedRepositoryListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *RepositoryTaikunRecommendedRepositoryListBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Repository/recommended][%d] repositoryTaikunRecommendedRepositoryListBadRequest  %+v", 400, o.Payload)
}

func (o *RepositoryTaikunRecommendedRepositoryListBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Repository/recommended][%d] repositoryTaikunRecommendedRepositoryListBadRequest  %+v", 400, o.Payload)
}

func (o *RepositoryTaikunRecommendedRepositoryListBadRequest) GetPayload() []*RepositoryTaikunRecommendedRepositoryListBadRequestBodyItems0 {
	return o.Payload
}

func (o *RepositoryTaikunRecommendedRepositoryListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRepositoryTaikunRecommendedRepositoryListUnauthorized creates a RepositoryTaikunRecommendedRepositoryListUnauthorized with default headers values
func NewRepositoryTaikunRecommendedRepositoryListUnauthorized() *RepositoryTaikunRecommendedRepositoryListUnauthorized {
	return &RepositoryTaikunRecommendedRepositoryListUnauthorized{}
}

/*
RepositoryTaikunRecommendedRepositoryListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RepositoryTaikunRecommendedRepositoryListUnauthorized struct {
	Payload *RepositoryTaikunRecommendedRepositoryListUnauthorizedBody
}

// IsSuccess returns true when this repository taikun recommended repository list unauthorized response has a 2xx status code
func (o *RepositoryTaikunRecommendedRepositoryListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this repository taikun recommended repository list unauthorized response has a 3xx status code
func (o *RepositoryTaikunRecommendedRepositoryListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this repository taikun recommended repository list unauthorized response has a 4xx status code
func (o *RepositoryTaikunRecommendedRepositoryListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this repository taikun recommended repository list unauthorized response has a 5xx status code
func (o *RepositoryTaikunRecommendedRepositoryListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this repository taikun recommended repository list unauthorized response a status code equal to that given
func (o *RepositoryTaikunRecommendedRepositoryListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *RepositoryTaikunRecommendedRepositoryListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Repository/recommended][%d] repositoryTaikunRecommendedRepositoryListUnauthorized  %+v", 401, o.Payload)
}

func (o *RepositoryTaikunRecommendedRepositoryListUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Repository/recommended][%d] repositoryTaikunRecommendedRepositoryListUnauthorized  %+v", 401, o.Payload)
}

func (o *RepositoryTaikunRecommendedRepositoryListUnauthorized) GetPayload() *RepositoryTaikunRecommendedRepositoryListUnauthorizedBody {
	return o.Payload
}

func (o *RepositoryTaikunRecommendedRepositoryListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(RepositoryTaikunRecommendedRepositoryListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRepositoryTaikunRecommendedRepositoryListForbidden creates a RepositoryTaikunRecommendedRepositoryListForbidden with default headers values
func NewRepositoryTaikunRecommendedRepositoryListForbidden() *RepositoryTaikunRecommendedRepositoryListForbidden {
	return &RepositoryTaikunRecommendedRepositoryListForbidden{}
}

/*
RepositoryTaikunRecommendedRepositoryListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RepositoryTaikunRecommendedRepositoryListForbidden struct {
	Payload *RepositoryTaikunRecommendedRepositoryListForbiddenBody
}

// IsSuccess returns true when this repository taikun recommended repository list forbidden response has a 2xx status code
func (o *RepositoryTaikunRecommendedRepositoryListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this repository taikun recommended repository list forbidden response has a 3xx status code
func (o *RepositoryTaikunRecommendedRepositoryListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this repository taikun recommended repository list forbidden response has a 4xx status code
func (o *RepositoryTaikunRecommendedRepositoryListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this repository taikun recommended repository list forbidden response has a 5xx status code
func (o *RepositoryTaikunRecommendedRepositoryListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this repository taikun recommended repository list forbidden response a status code equal to that given
func (o *RepositoryTaikunRecommendedRepositoryListForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *RepositoryTaikunRecommendedRepositoryListForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Repository/recommended][%d] repositoryTaikunRecommendedRepositoryListForbidden  %+v", 403, o.Payload)
}

func (o *RepositoryTaikunRecommendedRepositoryListForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Repository/recommended][%d] repositoryTaikunRecommendedRepositoryListForbidden  %+v", 403, o.Payload)
}

func (o *RepositoryTaikunRecommendedRepositoryListForbidden) GetPayload() *RepositoryTaikunRecommendedRepositoryListForbiddenBody {
	return o.Payload
}

func (o *RepositoryTaikunRecommendedRepositoryListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(RepositoryTaikunRecommendedRepositoryListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRepositoryTaikunRecommendedRepositoryListNotFound creates a RepositoryTaikunRecommendedRepositoryListNotFound with default headers values
func NewRepositoryTaikunRecommendedRepositoryListNotFound() *RepositoryTaikunRecommendedRepositoryListNotFound {
	return &RepositoryTaikunRecommendedRepositoryListNotFound{}
}

/*
RepositoryTaikunRecommendedRepositoryListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RepositoryTaikunRecommendedRepositoryListNotFound struct {
	Payload *RepositoryTaikunRecommendedRepositoryListNotFoundBody
}

// IsSuccess returns true when this repository taikun recommended repository list not found response has a 2xx status code
func (o *RepositoryTaikunRecommendedRepositoryListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this repository taikun recommended repository list not found response has a 3xx status code
func (o *RepositoryTaikunRecommendedRepositoryListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this repository taikun recommended repository list not found response has a 4xx status code
func (o *RepositoryTaikunRecommendedRepositoryListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this repository taikun recommended repository list not found response has a 5xx status code
func (o *RepositoryTaikunRecommendedRepositoryListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this repository taikun recommended repository list not found response a status code equal to that given
func (o *RepositoryTaikunRecommendedRepositoryListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *RepositoryTaikunRecommendedRepositoryListNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Repository/recommended][%d] repositoryTaikunRecommendedRepositoryListNotFound  %+v", 404, o.Payload)
}

func (o *RepositoryTaikunRecommendedRepositoryListNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Repository/recommended][%d] repositoryTaikunRecommendedRepositoryListNotFound  %+v", 404, o.Payload)
}

func (o *RepositoryTaikunRecommendedRepositoryListNotFound) GetPayload() *RepositoryTaikunRecommendedRepositoryListNotFoundBody {
	return o.Payload
}

func (o *RepositoryTaikunRecommendedRepositoryListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(RepositoryTaikunRecommendedRepositoryListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRepositoryTaikunRecommendedRepositoryListInternalServerError creates a RepositoryTaikunRecommendedRepositoryListInternalServerError with default headers values
func NewRepositoryTaikunRecommendedRepositoryListInternalServerError() *RepositoryTaikunRecommendedRepositoryListInternalServerError {
	return &RepositoryTaikunRecommendedRepositoryListInternalServerError{}
}

/*
RepositoryTaikunRecommendedRepositoryListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type RepositoryTaikunRecommendedRepositoryListInternalServerError struct {
}

// IsSuccess returns true when this repository taikun recommended repository list internal server error response has a 2xx status code
func (o *RepositoryTaikunRecommendedRepositoryListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this repository taikun recommended repository list internal server error response has a 3xx status code
func (o *RepositoryTaikunRecommendedRepositoryListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this repository taikun recommended repository list internal server error response has a 4xx status code
func (o *RepositoryTaikunRecommendedRepositoryListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this repository taikun recommended repository list internal server error response has a 5xx status code
func (o *RepositoryTaikunRecommendedRepositoryListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this repository taikun recommended repository list internal server error response a status code equal to that given
func (o *RepositoryTaikunRecommendedRepositoryListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *RepositoryTaikunRecommendedRepositoryListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Repository/recommended][%d] repositoryTaikunRecommendedRepositoryListInternalServerError ", 500)
}

func (o *RepositoryTaikunRecommendedRepositoryListInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Repository/recommended][%d] repositoryTaikunRecommendedRepositoryListInternalServerError ", 500)
}

func (o *RepositoryTaikunRecommendedRepositoryListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
RepositoryTaikunRecommendedRepositoryListBadRequestBodyItems0 repository taikun recommended repository list bad request body items0
swagger:model RepositoryTaikunRecommendedRepositoryListBadRequestBodyItems0
*/
type RepositoryTaikunRecommendedRepositoryListBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this repository taikun recommended repository list bad request body items0
func (o *RepositoryTaikunRecommendedRepositoryListBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this repository taikun recommended repository list bad request body items0 based on context it is used
func (o *RepositoryTaikunRecommendedRepositoryListBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RepositoryTaikunRecommendedRepositoryListBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RepositoryTaikunRecommendedRepositoryListBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res RepositoryTaikunRecommendedRepositoryListBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
RepositoryTaikunRecommendedRepositoryListForbiddenBody repository taikun recommended repository list forbidden body
swagger:model RepositoryTaikunRecommendedRepositoryListForbiddenBody
*/
type RepositoryTaikunRecommendedRepositoryListForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this repository taikun recommended repository list forbidden body
func (o *RepositoryTaikunRecommendedRepositoryListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this repository taikun recommended repository list forbidden body based on context it is used
func (o *RepositoryTaikunRecommendedRepositoryListForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RepositoryTaikunRecommendedRepositoryListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RepositoryTaikunRecommendedRepositoryListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res RepositoryTaikunRecommendedRepositoryListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
RepositoryTaikunRecommendedRepositoryListNotFoundBody repository taikun recommended repository list not found body
swagger:model RepositoryTaikunRecommendedRepositoryListNotFoundBody
*/
type RepositoryTaikunRecommendedRepositoryListNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this repository taikun recommended repository list not found body
func (o *RepositoryTaikunRecommendedRepositoryListNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this repository taikun recommended repository list not found body based on context it is used
func (o *RepositoryTaikunRecommendedRepositoryListNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RepositoryTaikunRecommendedRepositoryListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RepositoryTaikunRecommendedRepositoryListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res RepositoryTaikunRecommendedRepositoryListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
RepositoryTaikunRecommendedRepositoryListOKBodyItems0 repository taikun recommended repository list o k body items0
swagger:model RepositoryTaikunRecommendedRepositoryListOKBodyItems0
*/
type RepositoryTaikunRecommendedRepositoryListOKBodyItems0 struct {

	// disabled
	Disabled bool `json:"disabled"`

	// display name
	DisplayName string `json:"displayName"`

	// has catalog app
	HasCatalogApp bool `json:"hasCatalogApp"`

	// is bound
	IsBound bool `json:"isBound"`

	// name
	Name string `json:"name,omitempty"`

	// official
	Official bool `json:"official"`

	// organization name
	OrganizationName string `json:"organizationName,omitempty"`

	// repository Id
	RepositoryID string `json:"repositoryId,omitempty"`

	// url
	URL string `json:"url,omitempty"`

	// verified publisher
	VerifiedPublisher bool `json:"verifiedPublisher"`
}

// Validate validates this repository taikun recommended repository list o k body items0
func (o *RepositoryTaikunRecommendedRepositoryListOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this repository taikun recommended repository list o k body items0 based on context it is used
func (o *RepositoryTaikunRecommendedRepositoryListOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RepositoryTaikunRecommendedRepositoryListOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RepositoryTaikunRecommendedRepositoryListOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res RepositoryTaikunRecommendedRepositoryListOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
RepositoryTaikunRecommendedRepositoryListUnauthorizedBody repository taikun recommended repository list unauthorized body
swagger:model RepositoryTaikunRecommendedRepositoryListUnauthorizedBody
*/
type RepositoryTaikunRecommendedRepositoryListUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this repository taikun recommended repository list unauthorized body
func (o *RepositoryTaikunRecommendedRepositoryListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this repository taikun recommended repository list unauthorized body based on context it is used
func (o *RepositoryTaikunRecommendedRepositoryListUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RepositoryTaikunRecommendedRepositoryListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RepositoryTaikunRecommendedRepositoryListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res RepositoryTaikunRecommendedRepositoryListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
