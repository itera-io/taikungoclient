// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ProjectsEditHealthStatusReader is a Reader for the ProjectsEditHealthStatus structure.
type ProjectsEditHealthStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsEditHealthStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectsEditHealthStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProjectsEditHealthStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProjectsEditHealthStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProjectsEditHealthStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectsEditHealthStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewProjectsEditHealthStatusTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProjectsEditHealthStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProjectsEditHealthStatusOK creates a ProjectsEditHealthStatusOK with default headers values
func NewProjectsEditHealthStatusOK() *ProjectsEditHealthStatusOK {
	return &ProjectsEditHealthStatusOK{}
}

/* ProjectsEditHealthStatusOK describes a response with status code 200, with default header values.

Success
*/
type ProjectsEditHealthStatusOK struct {
	Payload models.Unit
}

func (o *ProjectsEditHealthStatusOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/updatehealth/{projectId}][%d] projectsEditHealthStatusOK  %+v", 200, o.Payload)
}
func (o *ProjectsEditHealthStatusOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *ProjectsEditHealthStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsEditHealthStatusBadRequest creates a ProjectsEditHealthStatusBadRequest with default headers values
func NewProjectsEditHealthStatusBadRequest() *ProjectsEditHealthStatusBadRequest {
	return &ProjectsEditHealthStatusBadRequest{}
}

/* ProjectsEditHealthStatusBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProjectsEditHealthStatusBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *ProjectsEditHealthStatusBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/updatehealth/{projectId}][%d] projectsEditHealthStatusBadRequest  %+v", 400, o.Payload)
}
func (o *ProjectsEditHealthStatusBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *ProjectsEditHealthStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsEditHealthStatusUnauthorized creates a ProjectsEditHealthStatusUnauthorized with default headers values
func NewProjectsEditHealthStatusUnauthorized() *ProjectsEditHealthStatusUnauthorized {
	return &ProjectsEditHealthStatusUnauthorized{}
}

/* ProjectsEditHealthStatusUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProjectsEditHealthStatusUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *ProjectsEditHealthStatusUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/updatehealth/{projectId}][%d] projectsEditHealthStatusUnauthorized  %+v", 401, o.Payload)
}
func (o *ProjectsEditHealthStatusUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectsEditHealthStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsEditHealthStatusForbidden creates a ProjectsEditHealthStatusForbidden with default headers values
func NewProjectsEditHealthStatusForbidden() *ProjectsEditHealthStatusForbidden {
	return &ProjectsEditHealthStatusForbidden{}
}

/* ProjectsEditHealthStatusForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ProjectsEditHealthStatusForbidden struct {
	Payload *models.ProblemDetails
}

func (o *ProjectsEditHealthStatusForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/updatehealth/{projectId}][%d] projectsEditHealthStatusForbidden  %+v", 403, o.Payload)
}
func (o *ProjectsEditHealthStatusForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectsEditHealthStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsEditHealthStatusNotFound creates a ProjectsEditHealthStatusNotFound with default headers values
func NewProjectsEditHealthStatusNotFound() *ProjectsEditHealthStatusNotFound {
	return &ProjectsEditHealthStatusNotFound{}
}

/* ProjectsEditHealthStatusNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProjectsEditHealthStatusNotFound struct {
	Payload *models.ProblemDetails
}

func (o *ProjectsEditHealthStatusNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/updatehealth/{projectId}][%d] projectsEditHealthStatusNotFound  %+v", 404, o.Payload)
}
func (o *ProjectsEditHealthStatusNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectsEditHealthStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsEditHealthStatusTooManyRequests creates a ProjectsEditHealthStatusTooManyRequests with default headers values
func NewProjectsEditHealthStatusTooManyRequests() *ProjectsEditHealthStatusTooManyRequests {
	return &ProjectsEditHealthStatusTooManyRequests{}
}

/* ProjectsEditHealthStatusTooManyRequests describes a response with status code 429, with default header values.

Client Error
*/
type ProjectsEditHealthStatusTooManyRequests struct {
	Payload *models.ProblemDetails
}

func (o *ProjectsEditHealthStatusTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/updatehealth/{projectId}][%d] projectsEditHealthStatusTooManyRequests  %+v", 429, o.Payload)
}
func (o *ProjectsEditHealthStatusTooManyRequests) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectsEditHealthStatusTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsEditHealthStatusInternalServerError creates a ProjectsEditHealthStatusInternalServerError with default headers values
func NewProjectsEditHealthStatusInternalServerError() *ProjectsEditHealthStatusInternalServerError {
	return &ProjectsEditHealthStatusInternalServerError{}
}

/* ProjectsEditHealthStatusInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ProjectsEditHealthStatusInternalServerError struct {
}

func (o *ProjectsEditHealthStatusInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/updatehealth/{projectId}][%d] projectsEditHealthStatusInternalServerError ", 500)
}

func (o *ProjectsEditHealthStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
