// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ProjectsListWithAlertsReader is a Reader for the ProjectsListWithAlerts structure.
type ProjectsListWithAlertsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsListWithAlertsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectsListWithAlertsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProjectsListWithAlertsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProjectsListWithAlertsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProjectsListWithAlertsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectsListWithAlertsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProjectsListWithAlertsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProjectsListWithAlertsOK creates a ProjectsListWithAlertsOK with default headers values
func NewProjectsListWithAlertsOK() *ProjectsListWithAlertsOK {
	return &ProjectsListWithAlertsOK{}
}

/* ProjectsListWithAlertsOK describes a response with status code 200, with default header values.

Success
*/
type ProjectsListWithAlertsOK struct {
	Payload []*models.ProjectListForAlert
}

func (o *ProjectsListWithAlertsOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Projects/foralerting][%d] projectsListWithAlertsOK  %+v", 200, o.Payload)
}
func (o *ProjectsListWithAlertsOK) GetPayload() []*models.ProjectListForAlert {
	return o.Payload
}

func (o *ProjectsListWithAlertsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsListWithAlertsBadRequest creates a ProjectsListWithAlertsBadRequest with default headers values
func NewProjectsListWithAlertsBadRequest() *ProjectsListWithAlertsBadRequest {
	return &ProjectsListWithAlertsBadRequest{}
}

/* ProjectsListWithAlertsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProjectsListWithAlertsBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *ProjectsListWithAlertsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Projects/foralerting][%d] projectsListWithAlertsBadRequest  %+v", 400, o.Payload)
}
func (o *ProjectsListWithAlertsBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *ProjectsListWithAlertsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsListWithAlertsUnauthorized creates a ProjectsListWithAlertsUnauthorized with default headers values
func NewProjectsListWithAlertsUnauthorized() *ProjectsListWithAlertsUnauthorized {
	return &ProjectsListWithAlertsUnauthorized{}
}

/* ProjectsListWithAlertsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProjectsListWithAlertsUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *ProjectsListWithAlertsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Projects/foralerting][%d] projectsListWithAlertsUnauthorized  %+v", 401, o.Payload)
}
func (o *ProjectsListWithAlertsUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectsListWithAlertsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsListWithAlertsForbidden creates a ProjectsListWithAlertsForbidden with default headers values
func NewProjectsListWithAlertsForbidden() *ProjectsListWithAlertsForbidden {
	return &ProjectsListWithAlertsForbidden{}
}

/* ProjectsListWithAlertsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ProjectsListWithAlertsForbidden struct {
	Payload *models.ProblemDetails
}

func (o *ProjectsListWithAlertsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Projects/foralerting][%d] projectsListWithAlertsForbidden  %+v", 403, o.Payload)
}
func (o *ProjectsListWithAlertsForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectsListWithAlertsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsListWithAlertsNotFound creates a ProjectsListWithAlertsNotFound with default headers values
func NewProjectsListWithAlertsNotFound() *ProjectsListWithAlertsNotFound {
	return &ProjectsListWithAlertsNotFound{}
}

/* ProjectsListWithAlertsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProjectsListWithAlertsNotFound struct {
	Payload *models.ProblemDetails
}

func (o *ProjectsListWithAlertsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Projects/foralerting][%d] projectsListWithAlertsNotFound  %+v", 404, o.Payload)
}
func (o *ProjectsListWithAlertsNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectsListWithAlertsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsListWithAlertsInternalServerError creates a ProjectsListWithAlertsInternalServerError with default headers values
func NewProjectsListWithAlertsInternalServerError() *ProjectsListWithAlertsInternalServerError {
	return &ProjectsListWithAlertsInternalServerError{}
}

/* ProjectsListWithAlertsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ProjectsListWithAlertsInternalServerError struct {
}

func (o *ProjectsListWithAlertsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Projects/foralerting][%d] projectsListWithAlertsInternalServerError ", 500)
}

func (o *ProjectsListWithAlertsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
