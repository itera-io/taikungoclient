// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ProjectsRepairReader is a Reader for the ProjectsRepair structure.
type ProjectsRepairReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsRepairReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectsRepairOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProjectsRepairBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProjectsRepairUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProjectsRepairForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectsRepairNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProjectsRepairInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProjectsRepairOK creates a ProjectsRepairOK with default headers values
func NewProjectsRepairOK() *ProjectsRepairOK {
	return &ProjectsRepairOK{}
}

/*
ProjectsRepairOK describes a response with status code 200, with default header values.

Success
*/
type ProjectsRepairOK struct {
	Payload models.Unit
}

// IsSuccess returns true when this projects repair o k response has a 2xx status code
func (o *ProjectsRepairOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this projects repair o k response has a 3xx status code
func (o *ProjectsRepairOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects repair o k response has a 4xx status code
func (o *ProjectsRepairOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this projects repair o k response has a 5xx status code
func (o *ProjectsRepairOK) IsServerError() bool {
	return false
}

// IsCode returns true when this projects repair o k response a status code equal to that given
func (o *ProjectsRepairOK) IsCode(code int) bool {
	return code == 200
}

func (o *ProjectsRepairOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/repair/{projectId}][%d] projectsRepairOK  %+v", 200, o.Payload)
}

func (o *ProjectsRepairOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/repair/{projectId}][%d] projectsRepairOK  %+v", 200, o.Payload)
}

func (o *ProjectsRepairOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *ProjectsRepairOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsRepairBadRequest creates a ProjectsRepairBadRequest with default headers values
func NewProjectsRepairBadRequest() *ProjectsRepairBadRequest {
	return &ProjectsRepairBadRequest{}
}

/*
ProjectsRepairBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProjectsRepairBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this projects repair bad request response has a 2xx status code
func (o *ProjectsRepairBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this projects repair bad request response has a 3xx status code
func (o *ProjectsRepairBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects repair bad request response has a 4xx status code
func (o *ProjectsRepairBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this projects repair bad request response has a 5xx status code
func (o *ProjectsRepairBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this projects repair bad request response a status code equal to that given
func (o *ProjectsRepairBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ProjectsRepairBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/repair/{projectId}][%d] projectsRepairBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectsRepairBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/repair/{projectId}][%d] projectsRepairBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectsRepairBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsRepairBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsRepairUnauthorized creates a ProjectsRepairUnauthorized with default headers values
func NewProjectsRepairUnauthorized() *ProjectsRepairUnauthorized {
	return &ProjectsRepairUnauthorized{}
}

/*
ProjectsRepairUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProjectsRepairUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this projects repair unauthorized response has a 2xx status code
func (o *ProjectsRepairUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this projects repair unauthorized response has a 3xx status code
func (o *ProjectsRepairUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects repair unauthorized response has a 4xx status code
func (o *ProjectsRepairUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this projects repair unauthorized response has a 5xx status code
func (o *ProjectsRepairUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this projects repair unauthorized response a status code equal to that given
func (o *ProjectsRepairUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ProjectsRepairUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/repair/{projectId}][%d] projectsRepairUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectsRepairUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/repair/{projectId}][%d] projectsRepairUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectsRepairUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectsRepairUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsRepairForbidden creates a ProjectsRepairForbidden with default headers values
func NewProjectsRepairForbidden() *ProjectsRepairForbidden {
	return &ProjectsRepairForbidden{}
}

/*
ProjectsRepairForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ProjectsRepairForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this projects repair forbidden response has a 2xx status code
func (o *ProjectsRepairForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this projects repair forbidden response has a 3xx status code
func (o *ProjectsRepairForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects repair forbidden response has a 4xx status code
func (o *ProjectsRepairForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this projects repair forbidden response has a 5xx status code
func (o *ProjectsRepairForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this projects repair forbidden response a status code equal to that given
func (o *ProjectsRepairForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ProjectsRepairForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/repair/{projectId}][%d] projectsRepairForbidden  %+v", 403, o.Payload)
}

func (o *ProjectsRepairForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/repair/{projectId}][%d] projectsRepairForbidden  %+v", 403, o.Payload)
}

func (o *ProjectsRepairForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectsRepairForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsRepairNotFound creates a ProjectsRepairNotFound with default headers values
func NewProjectsRepairNotFound() *ProjectsRepairNotFound {
	return &ProjectsRepairNotFound{}
}

/*
ProjectsRepairNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProjectsRepairNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this projects repair not found response has a 2xx status code
func (o *ProjectsRepairNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this projects repair not found response has a 3xx status code
func (o *ProjectsRepairNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects repair not found response has a 4xx status code
func (o *ProjectsRepairNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this projects repair not found response has a 5xx status code
func (o *ProjectsRepairNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this projects repair not found response a status code equal to that given
func (o *ProjectsRepairNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ProjectsRepairNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/repair/{projectId}][%d] projectsRepairNotFound  %+v", 404, o.Payload)
}

func (o *ProjectsRepairNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/repair/{projectId}][%d] projectsRepairNotFound  %+v", 404, o.Payload)
}

func (o *ProjectsRepairNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectsRepairNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsRepairInternalServerError creates a ProjectsRepairInternalServerError with default headers values
func NewProjectsRepairInternalServerError() *ProjectsRepairInternalServerError {
	return &ProjectsRepairInternalServerError{}
}

/*
ProjectsRepairInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ProjectsRepairInternalServerError struct {
}

// IsSuccess returns true when this projects repair internal server error response has a 2xx status code
func (o *ProjectsRepairInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this projects repair internal server error response has a 3xx status code
func (o *ProjectsRepairInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects repair internal server error response has a 4xx status code
func (o *ProjectsRepairInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this projects repair internal server error response has a 5xx status code
func (o *ProjectsRepairInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this projects repair internal server error response a status code equal to that given
func (o *ProjectsRepairInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ProjectsRepairInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/repair/{projectId}][%d] projectsRepairInternalServerError ", 500)
}

func (o *ProjectsRepairInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/repair/{projectId}][%d] projectsRepairInternalServerError ", 500)
}

func (o *ProjectsRepairInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
