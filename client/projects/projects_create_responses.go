// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ProjectsCreateReader is a Reader for the ProjectsCreate structure.
type ProjectsCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectsCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProjectsCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProjectsCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProjectsCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectsCreateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProjectsCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProjectsCreateOK creates a ProjectsCreateOK with default headers values
func NewProjectsCreateOK() *ProjectsCreateOK {
	return &ProjectsCreateOK{}
}

/*
ProjectsCreateOK describes a response with status code 200, with default header values.

Success
*/
type ProjectsCreateOK struct {
	Payload *ProjectsCreateOKBody
}

// IsSuccess returns true when this projects create o k response has a 2xx status code
func (o *ProjectsCreateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this projects create o k response has a 3xx status code
func (o *ProjectsCreateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects create o k response has a 4xx status code
func (o *ProjectsCreateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this projects create o k response has a 5xx status code
func (o *ProjectsCreateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this projects create o k response a status code equal to that given
func (o *ProjectsCreateOK) IsCode(code int) bool {
	return code == 200
}

func (o *ProjectsCreateOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateOK  %+v", 200, o.Payload)
}

func (o *ProjectsCreateOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateOK  %+v", 200, o.Payload)
}

func (o *ProjectsCreateOK) GetPayload() *ProjectsCreateOKBody {
	return o.Payload
}

func (o *ProjectsCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ProjectsCreateOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsCreateBadRequest creates a ProjectsCreateBadRequest with default headers values
func NewProjectsCreateBadRequest() *ProjectsCreateBadRequest {
	return &ProjectsCreateBadRequest{}
}

/*
ProjectsCreateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProjectsCreateBadRequest struct {
	Payload []*ProjectsCreateBadRequestBodyItems0
}

// IsSuccess returns true when this projects create bad request response has a 2xx status code
func (o *ProjectsCreateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this projects create bad request response has a 3xx status code
func (o *ProjectsCreateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects create bad request response has a 4xx status code
func (o *ProjectsCreateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this projects create bad request response has a 5xx status code
func (o *ProjectsCreateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this projects create bad request response a status code equal to that given
func (o *ProjectsCreateBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ProjectsCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectsCreateBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectsCreateBadRequest) GetPayload() []*ProjectsCreateBadRequestBodyItems0 {
	return o.Payload
}

func (o *ProjectsCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsCreateUnauthorized creates a ProjectsCreateUnauthorized with default headers values
func NewProjectsCreateUnauthorized() *ProjectsCreateUnauthorized {
	return &ProjectsCreateUnauthorized{}
}

/*
ProjectsCreateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProjectsCreateUnauthorized struct {
	Payload *ProjectsCreateUnauthorizedBody
}

// IsSuccess returns true when this projects create unauthorized response has a 2xx status code
func (o *ProjectsCreateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this projects create unauthorized response has a 3xx status code
func (o *ProjectsCreateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects create unauthorized response has a 4xx status code
func (o *ProjectsCreateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this projects create unauthorized response has a 5xx status code
func (o *ProjectsCreateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this projects create unauthorized response a status code equal to that given
func (o *ProjectsCreateUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ProjectsCreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectsCreateUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectsCreateUnauthorized) GetPayload() *ProjectsCreateUnauthorizedBody {
	return o.Payload
}

func (o *ProjectsCreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ProjectsCreateUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsCreateForbidden creates a ProjectsCreateForbidden with default headers values
func NewProjectsCreateForbidden() *ProjectsCreateForbidden {
	return &ProjectsCreateForbidden{}
}

/*
ProjectsCreateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ProjectsCreateForbidden struct {
	Payload *ProjectsCreateForbiddenBody
}

// IsSuccess returns true when this projects create forbidden response has a 2xx status code
func (o *ProjectsCreateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this projects create forbidden response has a 3xx status code
func (o *ProjectsCreateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects create forbidden response has a 4xx status code
func (o *ProjectsCreateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this projects create forbidden response has a 5xx status code
func (o *ProjectsCreateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this projects create forbidden response a status code equal to that given
func (o *ProjectsCreateForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ProjectsCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateForbidden  %+v", 403, o.Payload)
}

func (o *ProjectsCreateForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateForbidden  %+v", 403, o.Payload)
}

func (o *ProjectsCreateForbidden) GetPayload() *ProjectsCreateForbiddenBody {
	return o.Payload
}

func (o *ProjectsCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ProjectsCreateForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsCreateNotFound creates a ProjectsCreateNotFound with default headers values
func NewProjectsCreateNotFound() *ProjectsCreateNotFound {
	return &ProjectsCreateNotFound{}
}

/*
ProjectsCreateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProjectsCreateNotFound struct {
	Payload *ProjectsCreateNotFoundBody
}

// IsSuccess returns true when this projects create not found response has a 2xx status code
func (o *ProjectsCreateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this projects create not found response has a 3xx status code
func (o *ProjectsCreateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects create not found response has a 4xx status code
func (o *ProjectsCreateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this projects create not found response has a 5xx status code
func (o *ProjectsCreateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this projects create not found response a status code equal to that given
func (o *ProjectsCreateNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ProjectsCreateNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateNotFound  %+v", 404, o.Payload)
}

func (o *ProjectsCreateNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateNotFound  %+v", 404, o.Payload)
}

func (o *ProjectsCreateNotFound) GetPayload() *ProjectsCreateNotFoundBody {
	return o.Payload
}

func (o *ProjectsCreateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ProjectsCreateNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsCreateInternalServerError creates a ProjectsCreateInternalServerError with default headers values
func NewProjectsCreateInternalServerError() *ProjectsCreateInternalServerError {
	return &ProjectsCreateInternalServerError{}
}

/*
ProjectsCreateInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ProjectsCreateInternalServerError struct {
}

// IsSuccess returns true when this projects create internal server error response has a 2xx status code
func (o *ProjectsCreateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this projects create internal server error response has a 3xx status code
func (o *ProjectsCreateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects create internal server error response has a 4xx status code
func (o *ProjectsCreateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this projects create internal server error response has a 5xx status code
func (o *ProjectsCreateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this projects create internal server error response a status code equal to that given
func (o *ProjectsCreateInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ProjectsCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateInternalServerError ", 500)
}

func (o *ProjectsCreateInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateInternalServerError ", 500)
}

func (o *ProjectsCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
ProjectsCreateBadRequestBodyItems0 projects create bad request body items0
swagger:model ProjectsCreateBadRequestBodyItems0
*/
type ProjectsCreateBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this projects create bad request body items0
func (o *ProjectsCreateBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this projects create bad request body items0 based on context it is used
func (o *ProjectsCreateBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectsCreateBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectsCreateBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res ProjectsCreateBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectsCreateBody projects create body
swagger:model ProjectsCreateBody
*/
type ProjectsCreateBody struct {

	// access profile Id
	AccessProfileID int32 `json:"accessProfileId,omitempty"`

	// alerting profile Id
	AlertingProfileID int32 `json:"alertingProfileId,omitempty"`

	// allow full spot kubernetes
	AllowFullSpotKubernetes bool `json:"allowFullSpotKubernetes"`

	// allow spot v ms
	AllowSpotVMs bool `json:"allowSpotVMs"`

	// allow spot workers
	AllowSpotWorkers bool `json:"allowSpotWorkers"`

	// autoscaling enabled
	AutoscalingEnabled bool `json:"autoscalingEnabled"`

	// autoscaling flavor
	AutoscalingFlavor string `json:"autoscalingFlavor,omitempty"`

	// autoscaling group name
	AutoscalingGroupName string `json:"autoscalingGroupName,omitempty"`

	// autoscaling spot enabled
	AutoscalingSpotEnabled bool `json:"autoscalingSpotEnabled"`

	// cidr
	Cidr string `json:"cidr,omitempty"`

	// cloud credential Id
	CloudCredentialID int32 `json:"cloudCredentialId,omitempty"`

	// delete on expiration
	DeleteOnExpiration bool `json:"deleteOnExpiration"`

	// disk size
	DiskSize float64 `json:"diskSize,omitempty"`

	// expired at
	// Format: date-time
	ExpiredAt *strfmt.DateTime `json:"expiredAt,omitempty"`

	// flavors
	Flavors []string `json:"flavors"`

	// is auto upgrade
	IsAutoUpgrade bool `json:"isAutoUpgrade"`

	// is backup enabled
	IsBackupEnabled bool `json:"isBackupEnabled"`

	// is kubernetes
	IsKubernetes bool `json:"isKubernetes"`

	// is lightweight k8s
	IsLightweightK8s bool `json:"isLightweightK8s"`

	// is monitoring enabled
	IsMonitoringEnabled bool `json:"isMonitoringEnabled"`

	// kubernetes profile Id
	KubernetesProfileID int32 `json:"kubernetesProfileId,omitempty"`

	// kubernetes version
	KubernetesVersion string `json:"kubernetesVersion,omitempty"`

	// max size
	MaxSize int32 `json:"maxSize,omitempty"`

	// max spot price
	MaxSpotPrice float64 `json:"maxSpotPrice,omitempty"`

	// min size
	MinSize int32 `json:"minSize,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// net mask
	NetMask int32 `json:"netMask,omitempty"`

	// opa profile Id
	OpaProfileID int32 `json:"opaProfileId,omitempty"`

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// router Id end range
	RouterIDEndRange int32 `json:"routerIdEndRange,omitempty"`

	// router Id start range
	RouterIDStartRange int32 `json:"routerIdStartRange,omitempty"`

	// s3 credential Id
	S3CredentialID int32 `json:"s3CredentialId,omitempty"`

	// taikun l b flavor
	TaikunLBFlavor string `json:"taikunLBFlavor,omitempty"`

	// users
	Users []string `json:"users"`
}

// Validate validates this projects create body
func (o *ProjectsCreateBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateExpiredAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ProjectsCreateBody) validateExpiredAt(formats strfmt.Registry) error {
	if swag.IsZero(o.ExpiredAt) { // not required
		return nil
	}

	if err := validate.FormatOf("body"+"."+"expiredAt", "body", "date-time", o.ExpiredAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this projects create body based on context it is used
func (o *ProjectsCreateBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectsCreateBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectsCreateBody) UnmarshalBinary(b []byte) error {
	var res ProjectsCreateBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectsCreateForbiddenBody projects create forbidden body
swagger:model ProjectsCreateForbiddenBody
*/
type ProjectsCreateForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this projects create forbidden body
func (o *ProjectsCreateForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this projects create forbidden body based on context it is used
func (o *ProjectsCreateForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectsCreateForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectsCreateForbiddenBody) UnmarshalBinary(b []byte) error {
	var res ProjectsCreateForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectsCreateNotFoundBody projects create not found body
swagger:model ProjectsCreateNotFoundBody
*/
type ProjectsCreateNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this projects create not found body
func (o *ProjectsCreateNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this projects create not found body based on context it is used
func (o *ProjectsCreateNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectsCreateNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectsCreateNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ProjectsCreateNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectsCreateOKBody projects create o k body
swagger:model ProjectsCreateOKBody
*/
type ProjectsCreateOKBody struct {

	// id
	ID string `json:"id,omitempty"`

	// is error
	IsError bool `json:"isError"`

	// message
	Message string `json:"message,omitempty"`

	// result
	Result interface{} `json:"result,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`
}

// Validate validates this projects create o k body
func (o *ProjectsCreateOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this projects create o k body based on context it is used
func (o *ProjectsCreateOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectsCreateOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectsCreateOKBody) UnmarshalBinary(b []byte) error {
	var res ProjectsCreateOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectsCreateUnauthorizedBody projects create unauthorized body
swagger:model ProjectsCreateUnauthorizedBody
*/
type ProjectsCreateUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this projects create unauthorized body
func (o *ProjectsCreateUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this projects create unauthorized body based on context it is used
func (o *ProjectsCreateUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectsCreateUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectsCreateUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res ProjectsCreateUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
