// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ProjectsCreateReader is a Reader for the ProjectsCreate structure.
type ProjectsCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectsCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProjectsCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProjectsCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProjectsCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectsCreateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProjectsCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProjectsCreateOK creates a ProjectsCreateOK with default headers values
func NewProjectsCreateOK() *ProjectsCreateOK {
	return &ProjectsCreateOK{}
}

/*
ProjectsCreateOK describes a response with status code 200, with default header values.

Success
*/
type ProjectsCreateOK struct {
	Payload *models.APIResponse
}

// IsSuccess returns true when this projects create o k response has a 2xx status code
func (o *ProjectsCreateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this projects create o k response has a 3xx status code
func (o *ProjectsCreateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects create o k response has a 4xx status code
func (o *ProjectsCreateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this projects create o k response has a 5xx status code
func (o *ProjectsCreateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this projects create o k response a status code equal to that given
func (o *ProjectsCreateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the projects create o k response
func (o *ProjectsCreateOK) Code() int {
	return 200
}

func (o *ProjectsCreateOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateOK  %+v", 200, o.Payload)
}

func (o *ProjectsCreateOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateOK  %+v", 200, o.Payload)
}

func (o *ProjectsCreateOK) GetPayload() *models.APIResponse {
	return o.Payload
}

func (o *ProjectsCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsCreateBadRequest creates a ProjectsCreateBadRequest with default headers values
func NewProjectsCreateBadRequest() *ProjectsCreateBadRequest {
	return &ProjectsCreateBadRequest{}
}

/*
ProjectsCreateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProjectsCreateBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this projects create bad request response has a 2xx status code
func (o *ProjectsCreateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this projects create bad request response has a 3xx status code
func (o *ProjectsCreateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects create bad request response has a 4xx status code
func (o *ProjectsCreateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this projects create bad request response has a 5xx status code
func (o *ProjectsCreateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this projects create bad request response a status code equal to that given
func (o *ProjectsCreateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the projects create bad request response
func (o *ProjectsCreateBadRequest) Code() int {
	return 400
}

func (o *ProjectsCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectsCreateBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectsCreateBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectsCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsCreateUnauthorized creates a ProjectsCreateUnauthorized with default headers values
func NewProjectsCreateUnauthorized() *ProjectsCreateUnauthorized {
	return &ProjectsCreateUnauthorized{}
}

/*
ProjectsCreateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProjectsCreateUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this projects create unauthorized response has a 2xx status code
func (o *ProjectsCreateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this projects create unauthorized response has a 3xx status code
func (o *ProjectsCreateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects create unauthorized response has a 4xx status code
func (o *ProjectsCreateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this projects create unauthorized response has a 5xx status code
func (o *ProjectsCreateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this projects create unauthorized response a status code equal to that given
func (o *ProjectsCreateUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the projects create unauthorized response
func (o *ProjectsCreateUnauthorized) Code() int {
	return 401
}

func (o *ProjectsCreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectsCreateUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectsCreateUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectsCreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsCreateForbidden creates a ProjectsCreateForbidden with default headers values
func NewProjectsCreateForbidden() *ProjectsCreateForbidden {
	return &ProjectsCreateForbidden{}
}

/*
ProjectsCreateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ProjectsCreateForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this projects create forbidden response has a 2xx status code
func (o *ProjectsCreateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this projects create forbidden response has a 3xx status code
func (o *ProjectsCreateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects create forbidden response has a 4xx status code
func (o *ProjectsCreateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this projects create forbidden response has a 5xx status code
func (o *ProjectsCreateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this projects create forbidden response a status code equal to that given
func (o *ProjectsCreateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the projects create forbidden response
func (o *ProjectsCreateForbidden) Code() int {
	return 403
}

func (o *ProjectsCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateForbidden  %+v", 403, o.Payload)
}

func (o *ProjectsCreateForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateForbidden  %+v", 403, o.Payload)
}

func (o *ProjectsCreateForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectsCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsCreateNotFound creates a ProjectsCreateNotFound with default headers values
func NewProjectsCreateNotFound() *ProjectsCreateNotFound {
	return &ProjectsCreateNotFound{}
}

/*
ProjectsCreateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProjectsCreateNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this projects create not found response has a 2xx status code
func (o *ProjectsCreateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this projects create not found response has a 3xx status code
func (o *ProjectsCreateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects create not found response has a 4xx status code
func (o *ProjectsCreateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this projects create not found response has a 5xx status code
func (o *ProjectsCreateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this projects create not found response a status code equal to that given
func (o *ProjectsCreateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the projects create not found response
func (o *ProjectsCreateNotFound) Code() int {
	return 404
}

func (o *ProjectsCreateNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateNotFound  %+v", 404, o.Payload)
}

func (o *ProjectsCreateNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateNotFound  %+v", 404, o.Payload)
}

func (o *ProjectsCreateNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectsCreateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsCreateInternalServerError creates a ProjectsCreateInternalServerError with default headers values
func NewProjectsCreateInternalServerError() *ProjectsCreateInternalServerError {
	return &ProjectsCreateInternalServerError{}
}

/*
ProjectsCreateInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ProjectsCreateInternalServerError struct {
}

// IsSuccess returns true when this projects create internal server error response has a 2xx status code
func (o *ProjectsCreateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this projects create internal server error response has a 3xx status code
func (o *ProjectsCreateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects create internal server error response has a 4xx status code
func (o *ProjectsCreateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this projects create internal server error response has a 5xx status code
func (o *ProjectsCreateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this projects create internal server error response a status code equal to that given
func (o *ProjectsCreateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the projects create internal server error response
func (o *ProjectsCreateInternalServerError) Code() int {
	return 500
}

func (o *ProjectsCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateInternalServerError ", 500)
}

func (o *ProjectsCreateInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects][%d] projectsCreateInternalServerError ", 500)
}

func (o *ProjectsCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
