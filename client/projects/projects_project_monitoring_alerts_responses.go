// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ProjectsProjectMonitoringAlertsReader is a Reader for the ProjectsProjectMonitoringAlerts structure.
type ProjectsProjectMonitoringAlertsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsProjectMonitoringAlertsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectsProjectMonitoringAlertsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProjectsProjectMonitoringAlertsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProjectsProjectMonitoringAlertsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProjectsProjectMonitoringAlertsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectsProjectMonitoringAlertsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProjectsProjectMonitoringAlertsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProjectsProjectMonitoringAlertsOK creates a ProjectsProjectMonitoringAlertsOK with default headers values
func NewProjectsProjectMonitoringAlertsOK() *ProjectsProjectMonitoringAlertsOK {
	return &ProjectsProjectMonitoringAlertsOK{}
}

/* ProjectsProjectMonitoringAlertsOK describes a response with status code 200, with default header values.

Success
*/
type ProjectsProjectMonitoringAlertsOK struct {
	Payload interface{}
}

func (o *ProjectsProjectMonitoringAlertsOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/monitoringalerts][%d] projectsProjectMonitoringAlertsOK  %+v", 200, o.Payload)
}
func (o *ProjectsProjectMonitoringAlertsOK) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsProjectMonitoringAlertsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsProjectMonitoringAlertsBadRequest creates a ProjectsProjectMonitoringAlertsBadRequest with default headers values
func NewProjectsProjectMonitoringAlertsBadRequest() *ProjectsProjectMonitoringAlertsBadRequest {
	return &ProjectsProjectMonitoringAlertsBadRequest{}
}

/* ProjectsProjectMonitoringAlertsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProjectsProjectMonitoringAlertsBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *ProjectsProjectMonitoringAlertsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/monitoringalerts][%d] projectsProjectMonitoringAlertsBadRequest  %+v", 400, o.Payload)
}
func (o *ProjectsProjectMonitoringAlertsBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *ProjectsProjectMonitoringAlertsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsProjectMonitoringAlertsUnauthorized creates a ProjectsProjectMonitoringAlertsUnauthorized with default headers values
func NewProjectsProjectMonitoringAlertsUnauthorized() *ProjectsProjectMonitoringAlertsUnauthorized {
	return &ProjectsProjectMonitoringAlertsUnauthorized{}
}

/* ProjectsProjectMonitoringAlertsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProjectsProjectMonitoringAlertsUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *ProjectsProjectMonitoringAlertsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/monitoringalerts][%d] projectsProjectMonitoringAlertsUnauthorized  %+v", 401, o.Payload)
}
func (o *ProjectsProjectMonitoringAlertsUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectsProjectMonitoringAlertsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsProjectMonitoringAlertsForbidden creates a ProjectsProjectMonitoringAlertsForbidden with default headers values
func NewProjectsProjectMonitoringAlertsForbidden() *ProjectsProjectMonitoringAlertsForbidden {
	return &ProjectsProjectMonitoringAlertsForbidden{}
}

/* ProjectsProjectMonitoringAlertsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ProjectsProjectMonitoringAlertsForbidden struct {
	Payload *models.ProblemDetails
}

func (o *ProjectsProjectMonitoringAlertsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/monitoringalerts][%d] projectsProjectMonitoringAlertsForbidden  %+v", 403, o.Payload)
}
func (o *ProjectsProjectMonitoringAlertsForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectsProjectMonitoringAlertsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsProjectMonitoringAlertsNotFound creates a ProjectsProjectMonitoringAlertsNotFound with default headers values
func NewProjectsProjectMonitoringAlertsNotFound() *ProjectsProjectMonitoringAlertsNotFound {
	return &ProjectsProjectMonitoringAlertsNotFound{}
}

/* ProjectsProjectMonitoringAlertsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProjectsProjectMonitoringAlertsNotFound struct {
	Payload *models.ProblemDetails
}

func (o *ProjectsProjectMonitoringAlertsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/monitoringalerts][%d] projectsProjectMonitoringAlertsNotFound  %+v", 404, o.Payload)
}
func (o *ProjectsProjectMonitoringAlertsNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectsProjectMonitoringAlertsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsProjectMonitoringAlertsInternalServerError creates a ProjectsProjectMonitoringAlertsInternalServerError with default headers values
func NewProjectsProjectMonitoringAlertsInternalServerError() *ProjectsProjectMonitoringAlertsInternalServerError {
	return &ProjectsProjectMonitoringAlertsInternalServerError{}
}

/* ProjectsProjectMonitoringAlertsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ProjectsProjectMonitoringAlertsInternalServerError struct {
}

func (o *ProjectsProjectMonitoringAlertsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/monitoringalerts][%d] projectsProjectMonitoringAlertsInternalServerError ", 500)
}

func (o *ProjectsProjectMonitoringAlertsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
