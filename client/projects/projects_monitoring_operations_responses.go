// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProjectsMonitoringOperationsReader is a Reader for the ProjectsMonitoringOperations structure.
type ProjectsMonitoringOperationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectsMonitoringOperationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectsMonitoringOperationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProjectsMonitoringOperationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProjectsMonitoringOperationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProjectsMonitoringOperationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectsMonitoringOperationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProjectsMonitoringOperationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProjectsMonitoringOperationsOK creates a ProjectsMonitoringOperationsOK with default headers values
func NewProjectsMonitoringOperationsOK() *ProjectsMonitoringOperationsOK {
	return &ProjectsMonitoringOperationsOK{}
}

/*
ProjectsMonitoringOperationsOK describes a response with status code 200, with default header values.

Success
*/
type ProjectsMonitoringOperationsOK struct {
	Payload interface{}
}

// IsSuccess returns true when this projects monitoring operations o k response has a 2xx status code
func (o *ProjectsMonitoringOperationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this projects monitoring operations o k response has a 3xx status code
func (o *ProjectsMonitoringOperationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects monitoring operations o k response has a 4xx status code
func (o *ProjectsMonitoringOperationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this projects monitoring operations o k response has a 5xx status code
func (o *ProjectsMonitoringOperationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this projects monitoring operations o k response a status code equal to that given
func (o *ProjectsMonitoringOperationsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ProjectsMonitoringOperationsOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/monitoring][%d] projectsMonitoringOperationsOK  %+v", 200, o.Payload)
}

func (o *ProjectsMonitoringOperationsOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/monitoring][%d] projectsMonitoringOperationsOK  %+v", 200, o.Payload)
}

func (o *ProjectsMonitoringOperationsOK) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectsMonitoringOperationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsMonitoringOperationsBadRequest creates a ProjectsMonitoringOperationsBadRequest with default headers values
func NewProjectsMonitoringOperationsBadRequest() *ProjectsMonitoringOperationsBadRequest {
	return &ProjectsMonitoringOperationsBadRequest{}
}

/*
ProjectsMonitoringOperationsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProjectsMonitoringOperationsBadRequest struct {
	Payload []*ProjectsMonitoringOperationsBadRequestBodyItems0
}

// IsSuccess returns true when this projects monitoring operations bad request response has a 2xx status code
func (o *ProjectsMonitoringOperationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this projects monitoring operations bad request response has a 3xx status code
func (o *ProjectsMonitoringOperationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects monitoring operations bad request response has a 4xx status code
func (o *ProjectsMonitoringOperationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this projects monitoring operations bad request response has a 5xx status code
func (o *ProjectsMonitoringOperationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this projects monitoring operations bad request response a status code equal to that given
func (o *ProjectsMonitoringOperationsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ProjectsMonitoringOperationsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/monitoring][%d] projectsMonitoringOperationsBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectsMonitoringOperationsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/monitoring][%d] projectsMonitoringOperationsBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectsMonitoringOperationsBadRequest) GetPayload() []*ProjectsMonitoringOperationsBadRequestBodyItems0 {
	return o.Payload
}

func (o *ProjectsMonitoringOperationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsMonitoringOperationsUnauthorized creates a ProjectsMonitoringOperationsUnauthorized with default headers values
func NewProjectsMonitoringOperationsUnauthorized() *ProjectsMonitoringOperationsUnauthorized {
	return &ProjectsMonitoringOperationsUnauthorized{}
}

/*
ProjectsMonitoringOperationsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProjectsMonitoringOperationsUnauthorized struct {
	Payload *ProjectsMonitoringOperationsUnauthorizedBody
}

// IsSuccess returns true when this projects monitoring operations unauthorized response has a 2xx status code
func (o *ProjectsMonitoringOperationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this projects monitoring operations unauthorized response has a 3xx status code
func (o *ProjectsMonitoringOperationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects monitoring operations unauthorized response has a 4xx status code
func (o *ProjectsMonitoringOperationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this projects monitoring operations unauthorized response has a 5xx status code
func (o *ProjectsMonitoringOperationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this projects monitoring operations unauthorized response a status code equal to that given
func (o *ProjectsMonitoringOperationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ProjectsMonitoringOperationsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/monitoring][%d] projectsMonitoringOperationsUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectsMonitoringOperationsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/monitoring][%d] projectsMonitoringOperationsUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectsMonitoringOperationsUnauthorized) GetPayload() *ProjectsMonitoringOperationsUnauthorizedBody {
	return o.Payload
}

func (o *ProjectsMonitoringOperationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ProjectsMonitoringOperationsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsMonitoringOperationsForbidden creates a ProjectsMonitoringOperationsForbidden with default headers values
func NewProjectsMonitoringOperationsForbidden() *ProjectsMonitoringOperationsForbidden {
	return &ProjectsMonitoringOperationsForbidden{}
}

/*
ProjectsMonitoringOperationsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ProjectsMonitoringOperationsForbidden struct {
	Payload *ProjectsMonitoringOperationsForbiddenBody
}

// IsSuccess returns true when this projects monitoring operations forbidden response has a 2xx status code
func (o *ProjectsMonitoringOperationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this projects monitoring operations forbidden response has a 3xx status code
func (o *ProjectsMonitoringOperationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects monitoring operations forbidden response has a 4xx status code
func (o *ProjectsMonitoringOperationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this projects monitoring operations forbidden response has a 5xx status code
func (o *ProjectsMonitoringOperationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this projects monitoring operations forbidden response a status code equal to that given
func (o *ProjectsMonitoringOperationsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ProjectsMonitoringOperationsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/monitoring][%d] projectsMonitoringOperationsForbidden  %+v", 403, o.Payload)
}

func (o *ProjectsMonitoringOperationsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/monitoring][%d] projectsMonitoringOperationsForbidden  %+v", 403, o.Payload)
}

func (o *ProjectsMonitoringOperationsForbidden) GetPayload() *ProjectsMonitoringOperationsForbiddenBody {
	return o.Payload
}

func (o *ProjectsMonitoringOperationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ProjectsMonitoringOperationsForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsMonitoringOperationsNotFound creates a ProjectsMonitoringOperationsNotFound with default headers values
func NewProjectsMonitoringOperationsNotFound() *ProjectsMonitoringOperationsNotFound {
	return &ProjectsMonitoringOperationsNotFound{}
}

/*
ProjectsMonitoringOperationsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProjectsMonitoringOperationsNotFound struct {
	Payload *ProjectsMonitoringOperationsNotFoundBody
}

// IsSuccess returns true when this projects monitoring operations not found response has a 2xx status code
func (o *ProjectsMonitoringOperationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this projects monitoring operations not found response has a 3xx status code
func (o *ProjectsMonitoringOperationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects monitoring operations not found response has a 4xx status code
func (o *ProjectsMonitoringOperationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this projects monitoring operations not found response has a 5xx status code
func (o *ProjectsMonitoringOperationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this projects monitoring operations not found response a status code equal to that given
func (o *ProjectsMonitoringOperationsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ProjectsMonitoringOperationsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/monitoring][%d] projectsMonitoringOperationsNotFound  %+v", 404, o.Payload)
}

func (o *ProjectsMonitoringOperationsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/monitoring][%d] projectsMonitoringOperationsNotFound  %+v", 404, o.Payload)
}

func (o *ProjectsMonitoringOperationsNotFound) GetPayload() *ProjectsMonitoringOperationsNotFoundBody {
	return o.Payload
}

func (o *ProjectsMonitoringOperationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ProjectsMonitoringOperationsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectsMonitoringOperationsInternalServerError creates a ProjectsMonitoringOperationsInternalServerError with default headers values
func NewProjectsMonitoringOperationsInternalServerError() *ProjectsMonitoringOperationsInternalServerError {
	return &ProjectsMonitoringOperationsInternalServerError{}
}

/*
ProjectsMonitoringOperationsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ProjectsMonitoringOperationsInternalServerError struct {
}

// IsSuccess returns true when this projects monitoring operations internal server error response has a 2xx status code
func (o *ProjectsMonitoringOperationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this projects monitoring operations internal server error response has a 3xx status code
func (o *ProjectsMonitoringOperationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this projects monitoring operations internal server error response has a 4xx status code
func (o *ProjectsMonitoringOperationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this projects monitoring operations internal server error response has a 5xx status code
func (o *ProjectsMonitoringOperationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this projects monitoring operations internal server error response a status code equal to that given
func (o *ProjectsMonitoringOperationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ProjectsMonitoringOperationsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/monitoring][%d] projectsMonitoringOperationsInternalServerError ", 500)
}

func (o *ProjectsMonitoringOperationsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Projects/monitoring][%d] projectsMonitoringOperationsInternalServerError ", 500)
}

func (o *ProjectsMonitoringOperationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
ProjectsMonitoringOperationsBadRequestBodyItems0 projects monitoring operations bad request body items0
swagger:model ProjectsMonitoringOperationsBadRequestBodyItems0
*/
type ProjectsMonitoringOperationsBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this projects monitoring operations bad request body items0
func (o *ProjectsMonitoringOperationsBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this projects monitoring operations bad request body items0 based on context it is used
func (o *ProjectsMonitoringOperationsBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectsMonitoringOperationsBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectsMonitoringOperationsBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res ProjectsMonitoringOperationsBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectsMonitoringOperationsBody projects monitoring operations body
swagger:model ProjectsMonitoringOperationsBody
*/
type ProjectsMonitoringOperationsBody struct {

	// project Id
	ProjectID int32 `json:"projectId,omitempty"`
}

// Validate validates this projects monitoring operations body
func (o *ProjectsMonitoringOperationsBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this projects monitoring operations body based on context it is used
func (o *ProjectsMonitoringOperationsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectsMonitoringOperationsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectsMonitoringOperationsBody) UnmarshalBinary(b []byte) error {
	var res ProjectsMonitoringOperationsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectsMonitoringOperationsForbiddenBody projects monitoring operations forbidden body
swagger:model ProjectsMonitoringOperationsForbiddenBody
*/
type ProjectsMonitoringOperationsForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this projects monitoring operations forbidden body
func (o *ProjectsMonitoringOperationsForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this projects monitoring operations forbidden body based on context it is used
func (o *ProjectsMonitoringOperationsForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectsMonitoringOperationsForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectsMonitoringOperationsForbiddenBody) UnmarshalBinary(b []byte) error {
	var res ProjectsMonitoringOperationsForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectsMonitoringOperationsNotFoundBody projects monitoring operations not found body
swagger:model ProjectsMonitoringOperationsNotFoundBody
*/
type ProjectsMonitoringOperationsNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this projects monitoring operations not found body
func (o *ProjectsMonitoringOperationsNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this projects monitoring operations not found body based on context it is used
func (o *ProjectsMonitoringOperationsNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectsMonitoringOperationsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectsMonitoringOperationsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ProjectsMonitoringOperationsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectsMonitoringOperationsUnauthorizedBody projects monitoring operations unauthorized body
swagger:model ProjectsMonitoringOperationsUnauthorizedBody
*/
type ProjectsMonitoringOperationsUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this projects monitoring operations unauthorized body
func (o *ProjectsMonitoringOperationsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this projects monitoring operations unauthorized body based on context it is used
func (o *ProjectsMonitoringOperationsUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectsMonitoringOperationsUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectsMonitoringOperationsUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res ProjectsMonitoringOperationsUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
