/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"os"
)

// checks if the PartnerImageSettingsUpdateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PartnerImageSettingsUpdateDto{}

// PartnerImageSettingsUpdateDto struct for PartnerImageSettingsUpdateDto
type PartnerImageSettingsUpdateDto struct {
	Expanded Nullable*os.File `json:"expanded,omitempty"`
	Collapsed Nullable*os.File `json:"collapsed,omitempty"`
}

// NewPartnerImageSettingsUpdateDto instantiates a new PartnerImageSettingsUpdateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartnerImageSettingsUpdateDto() *PartnerImageSettingsUpdateDto {
	this := PartnerImageSettingsUpdateDto{}
	return &this
}

// NewPartnerImageSettingsUpdateDtoWithDefaults instantiates a new PartnerImageSettingsUpdateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartnerImageSettingsUpdateDtoWithDefaults() *PartnerImageSettingsUpdateDto {
	this := PartnerImageSettingsUpdateDto{}
	return &this
}

// GetExpanded returns the Expanded field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PartnerImageSettingsUpdateDto) GetExpanded() *os.File {
	if o == nil || IsNil(o.Expanded.Get()) {
		var ret *os.File
		return ret
	}
	return *o.Expanded.Get()
}

// GetExpandedOk returns a tuple with the Expanded field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerImageSettingsUpdateDto) GetExpandedOk() (**os.File, bool) {
	if o == nil {
		return nil, false
	}
	return o.Expanded.Get(), o.Expanded.IsSet()
}

// HasExpanded returns a boolean if a field has been set.
func (o *PartnerImageSettingsUpdateDto) HasExpanded() bool {
	if o != nil && o.Expanded.IsSet() {
		return true
	}

	return false
}

// SetExpanded gets a reference to the given Nullable*os.File and assigns it to the Expanded field.
func (o *PartnerImageSettingsUpdateDto) SetExpanded(v *os.File) {
	o.Expanded.Set(&v)
}
// SetExpandedNil sets the value for Expanded to be an explicit nil
func (o *PartnerImageSettingsUpdateDto) SetExpandedNil() {
	o.Expanded.Set(nil)
}

// UnsetExpanded ensures that no value is present for Expanded, not even an explicit nil
func (o *PartnerImageSettingsUpdateDto) UnsetExpanded() {
	o.Expanded.Unset()
}

// GetCollapsed returns the Collapsed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PartnerImageSettingsUpdateDto) GetCollapsed() *os.File {
	if o == nil || IsNil(o.Collapsed.Get()) {
		var ret *os.File
		return ret
	}
	return *o.Collapsed.Get()
}

// GetCollapsedOk returns a tuple with the Collapsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerImageSettingsUpdateDto) GetCollapsedOk() (**os.File, bool) {
	if o == nil {
		return nil, false
	}
	return o.Collapsed.Get(), o.Collapsed.IsSet()
}

// HasCollapsed returns a boolean if a field has been set.
func (o *PartnerImageSettingsUpdateDto) HasCollapsed() bool {
	if o != nil && o.Collapsed.IsSet() {
		return true
	}

	return false
}

// SetCollapsed gets a reference to the given Nullable*os.File and assigns it to the Collapsed field.
func (o *PartnerImageSettingsUpdateDto) SetCollapsed(v *os.File) {
	o.Collapsed.Set(&v)
}
// SetCollapsedNil sets the value for Collapsed to be an explicit nil
func (o *PartnerImageSettingsUpdateDto) SetCollapsedNil() {
	o.Collapsed.Set(nil)
}

// UnsetCollapsed ensures that no value is present for Collapsed, not even an explicit nil
func (o *PartnerImageSettingsUpdateDto) UnsetCollapsed() {
	o.Collapsed.Unset()
}

func (o PartnerImageSettingsUpdateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PartnerImageSettingsUpdateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Expanded.IsSet() {
		toSerialize["expanded"] = o.Expanded.Get()
	}
	if o.Collapsed.IsSet() {
		toSerialize["collapsed"] = o.Collapsed.Get()
	}
	return toSerialize, nil
}

type NullablePartnerImageSettingsUpdateDto struct {
	value *PartnerImageSettingsUpdateDto
	isSet bool
}

func (v NullablePartnerImageSettingsUpdateDto) Get() *PartnerImageSettingsUpdateDto {
	return v.value
}

func (v *NullablePartnerImageSettingsUpdateDto) Set(val *PartnerImageSettingsUpdateDto) {
	v.value = val
	v.isSet = true
}

func (v NullablePartnerImageSettingsUpdateDto) IsSet() bool {
	return v.isSet
}

func (v *NullablePartnerImageSettingsUpdateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartnerImageSettingsUpdateDto(val *PartnerImageSettingsUpdateDto) *NullablePartnerImageSettingsUpdateDto {
	return &NullablePartnerImageSettingsUpdateDto{value: val, isSet: true}
}

func (v NullablePartnerImageSettingsUpdateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartnerImageSettingsUpdateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


