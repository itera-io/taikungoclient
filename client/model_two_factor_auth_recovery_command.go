/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the TwoFactorAuthRecoveryCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TwoFactorAuthRecoveryCommand{}

// TwoFactorAuthRecoveryCommand struct for TwoFactorAuthRecoveryCommand
type TwoFactorAuthRecoveryCommand struct {
	RecoveryCode NullableString `json:"recoveryCode,omitempty"`
}

// NewTwoFactorAuthRecoveryCommand instantiates a new TwoFactorAuthRecoveryCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTwoFactorAuthRecoveryCommand() *TwoFactorAuthRecoveryCommand {
	this := TwoFactorAuthRecoveryCommand{}
	return &this
}

// NewTwoFactorAuthRecoveryCommandWithDefaults instantiates a new TwoFactorAuthRecoveryCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTwoFactorAuthRecoveryCommandWithDefaults() *TwoFactorAuthRecoveryCommand {
	this := TwoFactorAuthRecoveryCommand{}
	return &this
}

// GetRecoveryCode returns the RecoveryCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TwoFactorAuthRecoveryCommand) GetRecoveryCode() string {
	if o == nil || IsNil(o.RecoveryCode.Get()) {
		var ret string
		return ret
	}
	return *o.RecoveryCode.Get()
}

// GetRecoveryCodeOk returns a tuple with the RecoveryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TwoFactorAuthRecoveryCommand) GetRecoveryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecoveryCode.Get(), o.RecoveryCode.IsSet()
}

// HasRecoveryCode returns a boolean if a field has been set.
func (o *TwoFactorAuthRecoveryCommand) HasRecoveryCode() bool {
	if o != nil && o.RecoveryCode.IsSet() {
		return true
	}

	return false
}

// SetRecoveryCode gets a reference to the given NullableString and assigns it to the RecoveryCode field.
func (o *TwoFactorAuthRecoveryCommand) SetRecoveryCode(v string) {
	o.RecoveryCode.Set(&v)
}
// SetRecoveryCodeNil sets the value for RecoveryCode to be an explicit nil
func (o *TwoFactorAuthRecoveryCommand) SetRecoveryCodeNil() {
	o.RecoveryCode.Set(nil)
}

// UnsetRecoveryCode ensures that no value is present for RecoveryCode, not even an explicit nil
func (o *TwoFactorAuthRecoveryCommand) UnsetRecoveryCode() {
	o.RecoveryCode.Unset()
}

func (o TwoFactorAuthRecoveryCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TwoFactorAuthRecoveryCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.RecoveryCode.IsSet() {
		toSerialize["recoveryCode"] = o.RecoveryCode.Get()
	}
	return toSerialize, nil
}

type NullableTwoFactorAuthRecoveryCommand struct {
	value *TwoFactorAuthRecoveryCommand
	isSet bool
}

func (v NullableTwoFactorAuthRecoveryCommand) Get() *TwoFactorAuthRecoveryCommand {
	return v.value
}

func (v *NullableTwoFactorAuthRecoveryCommand) Set(val *TwoFactorAuthRecoveryCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableTwoFactorAuthRecoveryCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableTwoFactorAuthRecoveryCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTwoFactorAuthRecoveryCommand(val *TwoFactorAuthRecoveryCommand) *NullableTwoFactorAuthRecoveryCommand {
	return &NullableTwoFactorAuthRecoveryCommand{value: val, isSet: true}
}

func (v NullableTwoFactorAuthRecoveryCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTwoFactorAuthRecoveryCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


