/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the StandaloneVmListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StandaloneVmListDto{}

// StandaloneVmListDto struct for StandaloneVmListDto
type StandaloneVmListDto struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	FlavorId *string `json:"flavorId,omitempty"`
	VolumeSize *int64 `json:"volumeSize,omitempty"`
	OrganizationName *string `json:"organizationName,omitempty"`
	OrganizationId *int32 `json:"organizationId,omitempty"`
	Ram *int64 `json:"ram,omitempty"`
	Cpu *int32 `json:"cpu,omitempty"`
	VolumeType *string `json:"volumeType,omitempty"`
	PublicIpEnabled *bool `json:"publicIpEnabled,omitempty"`
	PublicIp *string `json:"publicIp,omitempty"`
	IpAddress *string `json:"ipAddress,omitempty"`
	CloudType *CloudType `json:"cloudType,omitempty"`
	ImageName *string `json:"imageName,omitempty"`
	Revision *int32 `json:"revision,omitempty"`
	IsWindows *bool `json:"isWindows,omitempty"`
	Status *StandAloneVmStatus `json:"status,omitempty"`
	ProjectName *string `json:"projectName,omitempty"`
	ProjectId *int32 `json:"projectId,omitempty"`
	StandAloneProfile *StandaloneProfileListDto `json:"standAloneProfile,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	CreatedBy *string `json:"createdBy,omitempty"`
	LastModified *string `json:"lastModified,omitempty"`
}

// NewStandaloneVmListDto instantiates a new StandaloneVmListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStandaloneVmListDto() *StandaloneVmListDto {
	this := StandaloneVmListDto{}
	return &this
}

// NewStandaloneVmListDtoWithDefaults instantiates a new StandaloneVmListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStandaloneVmListDtoWithDefaults() *StandaloneVmListDto {
	this := StandaloneVmListDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *StandaloneVmListDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *StandaloneVmListDto) SetName(v string) {
	o.Name = &v
}

// GetFlavorId returns the FlavorId field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetFlavorId() string {
	if o == nil || IsNil(o.FlavorId) {
		var ret string
		return ret
	}
	return *o.FlavorId
}

// GetFlavorIdOk returns a tuple with the FlavorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetFlavorIdOk() (*string, bool) {
	if o == nil || IsNil(o.FlavorId) {
		return nil, false
	}
	return o.FlavorId, true
}

// HasFlavorId returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasFlavorId() bool {
	if o != nil && !IsNil(o.FlavorId) {
		return true
	}

	return false
}

// SetFlavorId gets a reference to the given string and assigns it to the FlavorId field.
func (o *StandaloneVmListDto) SetFlavorId(v string) {
	o.FlavorId = &v
}

// GetVolumeSize returns the VolumeSize field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetVolumeSize() int64 {
	if o == nil || IsNil(o.VolumeSize) {
		var ret int64
		return ret
	}
	return *o.VolumeSize
}

// GetVolumeSizeOk returns a tuple with the VolumeSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetVolumeSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.VolumeSize) {
		return nil, false
	}
	return o.VolumeSize, true
}

// HasVolumeSize returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasVolumeSize() bool {
	if o != nil && !IsNil(o.VolumeSize) {
		return true
	}

	return false
}

// SetVolumeSize gets a reference to the given int64 and assigns it to the VolumeSize field.
func (o *StandaloneVmListDto) SetVolumeSize(v int64) {
	o.VolumeSize = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *StandaloneVmListDto) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *StandaloneVmListDto) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetRam returns the Ram field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetRam() int64 {
	if o == nil || IsNil(o.Ram) {
		var ret int64
		return ret
	}
	return *o.Ram
}

// GetRamOk returns a tuple with the Ram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetRamOk() (*int64, bool) {
	if o == nil || IsNil(o.Ram) {
		return nil, false
	}
	return o.Ram, true
}

// HasRam returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasRam() bool {
	if o != nil && !IsNil(o.Ram) {
		return true
	}

	return false
}

// SetRam gets a reference to the given int64 and assigns it to the Ram field.
func (o *StandaloneVmListDto) SetRam(v int64) {
	o.Ram = &v
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetCpu() int32 {
	if o == nil || IsNil(o.Cpu) {
		var ret int32
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetCpuOk() (*int32, bool) {
	if o == nil || IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasCpu() bool {
	if o != nil && !IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given int32 and assigns it to the Cpu field.
func (o *StandaloneVmListDto) SetCpu(v int32) {
	o.Cpu = &v
}

// GetVolumeType returns the VolumeType field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetVolumeType() string {
	if o == nil || IsNil(o.VolumeType) {
		var ret string
		return ret
	}
	return *o.VolumeType
}

// GetVolumeTypeOk returns a tuple with the VolumeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetVolumeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeType) {
		return nil, false
	}
	return o.VolumeType, true
}

// HasVolumeType returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasVolumeType() bool {
	if o != nil && !IsNil(o.VolumeType) {
		return true
	}

	return false
}

// SetVolumeType gets a reference to the given string and assigns it to the VolumeType field.
func (o *StandaloneVmListDto) SetVolumeType(v string) {
	o.VolumeType = &v
}

// GetPublicIpEnabled returns the PublicIpEnabled field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetPublicIpEnabled() bool {
	if o == nil || IsNil(o.PublicIpEnabled) {
		var ret bool
		return ret
	}
	return *o.PublicIpEnabled
}

// GetPublicIpEnabledOk returns a tuple with the PublicIpEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetPublicIpEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.PublicIpEnabled) {
		return nil, false
	}
	return o.PublicIpEnabled, true
}

// HasPublicIpEnabled returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasPublicIpEnabled() bool {
	if o != nil && !IsNil(o.PublicIpEnabled) {
		return true
	}

	return false
}

// SetPublicIpEnabled gets a reference to the given bool and assigns it to the PublicIpEnabled field.
func (o *StandaloneVmListDto) SetPublicIpEnabled(v bool) {
	o.PublicIpEnabled = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetPublicIp() string {
	if o == nil || IsNil(o.PublicIp) {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetPublicIpOk() (*string, bool) {
	if o == nil || IsNil(o.PublicIp) {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasPublicIp() bool {
	if o != nil && !IsNil(o.PublicIp) {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *StandaloneVmListDto) SetPublicIp(v string) {
	o.PublicIp = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *StandaloneVmListDto) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetCloudType returns the CloudType field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetCloudType() CloudType {
	if o == nil || IsNil(o.CloudType) {
		var ret CloudType
		return ret
	}
	return *o.CloudType
}

// GetCloudTypeOk returns a tuple with the CloudType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetCloudTypeOk() (*CloudType, bool) {
	if o == nil || IsNil(o.CloudType) {
		return nil, false
	}
	return o.CloudType, true
}

// HasCloudType returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasCloudType() bool {
	if o != nil && !IsNil(o.CloudType) {
		return true
	}

	return false
}

// SetCloudType gets a reference to the given CloudType and assigns it to the CloudType field.
func (o *StandaloneVmListDto) SetCloudType(v CloudType) {
	o.CloudType = &v
}

// GetImageName returns the ImageName field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetImageName() string {
	if o == nil || IsNil(o.ImageName) {
		var ret string
		return ret
	}
	return *o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetImageNameOk() (*string, bool) {
	if o == nil || IsNil(o.ImageName) {
		return nil, false
	}
	return o.ImageName, true
}

// HasImageName returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasImageName() bool {
	if o != nil && !IsNil(o.ImageName) {
		return true
	}

	return false
}

// SetImageName gets a reference to the given string and assigns it to the ImageName field.
func (o *StandaloneVmListDto) SetImageName(v string) {
	o.ImageName = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetRevision() int32 {
	if o == nil || IsNil(o.Revision) {
		var ret int32
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetRevisionOk() (*int32, bool) {
	if o == nil || IsNil(o.Revision) {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasRevision() bool {
	if o != nil && !IsNil(o.Revision) {
		return true
	}

	return false
}

// SetRevision gets a reference to the given int32 and assigns it to the Revision field.
func (o *StandaloneVmListDto) SetRevision(v int32) {
	o.Revision = &v
}

// GetIsWindows returns the IsWindows field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetIsWindows() bool {
	if o == nil || IsNil(o.IsWindows) {
		var ret bool
		return ret
	}
	return *o.IsWindows
}

// GetIsWindowsOk returns a tuple with the IsWindows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetIsWindowsOk() (*bool, bool) {
	if o == nil || IsNil(o.IsWindows) {
		return nil, false
	}
	return o.IsWindows, true
}

// HasIsWindows returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasIsWindows() bool {
	if o != nil && !IsNil(o.IsWindows) {
		return true
	}

	return false
}

// SetIsWindows gets a reference to the given bool and assigns it to the IsWindows field.
func (o *StandaloneVmListDto) SetIsWindows(v bool) {
	o.IsWindows = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetStatus() StandAloneVmStatus {
	if o == nil || IsNil(o.Status) {
		var ret StandAloneVmStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetStatusOk() (*StandAloneVmStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given StandAloneVmStatus and assigns it to the Status field.
func (o *StandaloneVmListDto) SetStatus(v StandAloneVmStatus) {
	o.Status = &v
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetProjectName() string {
	if o == nil || IsNil(o.ProjectName) {
		var ret string
		return ret
	}
	return *o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetProjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectName) {
		return nil, false
	}
	return o.ProjectName, true
}

// HasProjectName returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasProjectName() bool {
	if o != nil && !IsNil(o.ProjectName) {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given string and assigns it to the ProjectName field.
func (o *StandaloneVmListDto) SetProjectName(v string) {
	o.ProjectName = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetProjectId() int32 {
	if o == nil || IsNil(o.ProjectId) {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetProjectIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *StandaloneVmListDto) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetStandAloneProfile returns the StandAloneProfile field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetStandAloneProfile() StandaloneProfileListDto {
	if o == nil || IsNil(o.StandAloneProfile) {
		var ret StandaloneProfileListDto
		return ret
	}
	return *o.StandAloneProfile
}

// GetStandAloneProfileOk returns a tuple with the StandAloneProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetStandAloneProfileOk() (*StandaloneProfileListDto, bool) {
	if o == nil || IsNil(o.StandAloneProfile) {
		return nil, false
	}
	return o.StandAloneProfile, true
}

// HasStandAloneProfile returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasStandAloneProfile() bool {
	if o != nil && !IsNil(o.StandAloneProfile) {
		return true
	}

	return false
}

// SetStandAloneProfile gets a reference to the given StandaloneProfileListDto and assigns it to the StandAloneProfile field.
func (o *StandaloneVmListDto) SetStandAloneProfile(v StandaloneProfileListDto) {
	o.StandAloneProfile = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *StandaloneVmListDto) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *StandaloneVmListDto) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *StandaloneVmListDto) GetLastModified() string {
	if o == nil || IsNil(o.LastModified) {
		var ret string
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandaloneVmListDto) GetLastModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *StandaloneVmListDto) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given string and assigns it to the LastModified field.
func (o *StandaloneVmListDto) SetLastModified(v string) {
	o.LastModified = &v
}

func (o StandaloneVmListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StandaloneVmListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.FlavorId) {
		toSerialize["flavorId"] = o.FlavorId
	}
	if !IsNil(o.VolumeSize) {
		toSerialize["volumeSize"] = o.VolumeSize
	}
	if !IsNil(o.OrganizationName) {
		toSerialize["organizationName"] = o.OrganizationName
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.Ram) {
		toSerialize["ram"] = o.Ram
	}
	if !IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	if !IsNil(o.VolumeType) {
		toSerialize["volumeType"] = o.VolumeType
	}
	if !IsNil(o.PublicIpEnabled) {
		toSerialize["publicIpEnabled"] = o.PublicIpEnabled
	}
	if !IsNil(o.PublicIp) {
		toSerialize["publicIp"] = o.PublicIp
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if !IsNil(o.CloudType) {
		toSerialize["cloudType"] = o.CloudType
	}
	if !IsNil(o.ImageName) {
		toSerialize["imageName"] = o.ImageName
	}
	if !IsNil(o.Revision) {
		toSerialize["revision"] = o.Revision
	}
	if !IsNil(o.IsWindows) {
		toSerialize["isWindows"] = o.IsWindows
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ProjectName) {
		toSerialize["projectName"] = o.ProjectName
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.StandAloneProfile) {
		toSerialize["standAloneProfile"] = o.StandAloneProfile
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.LastModified) {
		toSerialize["lastModified"] = o.LastModified
	}
	return toSerialize, nil
}

type NullableStandaloneVmListDto struct {
	value *StandaloneVmListDto
	isSet bool
}

func (v NullableStandaloneVmListDto) Get() *StandaloneVmListDto {
	return v.value
}

func (v *NullableStandaloneVmListDto) Set(val *StandaloneVmListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableStandaloneVmListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableStandaloneVmListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStandaloneVmListDto(val *StandaloneVmListDto) *NullableStandaloneVmListDto {
	return &NullableStandaloneVmListDto{value: val, isSet: true}
}

func (v NullableStandaloneVmListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStandaloneVmListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


