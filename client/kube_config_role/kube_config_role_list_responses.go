// Code generated by go-swagger; DO NOT EDIT.

package kube_config_role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// KubeConfigRoleListReader is a Reader for the KubeConfigRoleList structure.
type KubeConfigRoleListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KubeConfigRoleListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKubeConfigRoleListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewKubeConfigRoleListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewKubeConfigRoleListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewKubeConfigRoleListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewKubeConfigRoleListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewKubeConfigRoleListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewKubeConfigRoleListOK creates a KubeConfigRoleListOK with default headers values
func NewKubeConfigRoleListOK() *KubeConfigRoleListOK {
	return &KubeConfigRoleListOK{}
}

/*
KubeConfigRoleListOK describes a response with status code 200, with default header values.

Success
*/
type KubeConfigRoleListOK struct {
	Payload *KubeConfigRoleListOKBody
}

// IsSuccess returns true when this kube config role list o k response has a 2xx status code
func (o *KubeConfigRoleListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this kube config role list o k response has a 3xx status code
func (o *KubeConfigRoleListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kube config role list o k response has a 4xx status code
func (o *KubeConfigRoleListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this kube config role list o k response has a 5xx status code
func (o *KubeConfigRoleListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this kube config role list o k response a status code equal to that given
func (o *KubeConfigRoleListOK) IsCode(code int) bool {
	return code == 200
}

func (o *KubeConfigRoleListOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/KubeConfigRole][%d] kubeConfigRoleListOK  %+v", 200, o.Payload)
}

func (o *KubeConfigRoleListOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/KubeConfigRole][%d] kubeConfigRoleListOK  %+v", 200, o.Payload)
}

func (o *KubeConfigRoleListOK) GetPayload() *KubeConfigRoleListOKBody {
	return o.Payload
}

func (o *KubeConfigRoleListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubeConfigRoleListOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubeConfigRoleListBadRequest creates a KubeConfigRoleListBadRequest with default headers values
func NewKubeConfigRoleListBadRequest() *KubeConfigRoleListBadRequest {
	return &KubeConfigRoleListBadRequest{}
}

/*
KubeConfigRoleListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type KubeConfigRoleListBadRequest struct {
	Payload []*KubeConfigRoleListBadRequestBodyItems0
}

// IsSuccess returns true when this kube config role list bad request response has a 2xx status code
func (o *KubeConfigRoleListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kube config role list bad request response has a 3xx status code
func (o *KubeConfigRoleListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kube config role list bad request response has a 4xx status code
func (o *KubeConfigRoleListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this kube config role list bad request response has a 5xx status code
func (o *KubeConfigRoleListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this kube config role list bad request response a status code equal to that given
func (o *KubeConfigRoleListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *KubeConfigRoleListBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/KubeConfigRole][%d] kubeConfigRoleListBadRequest  %+v", 400, o.Payload)
}

func (o *KubeConfigRoleListBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/KubeConfigRole][%d] kubeConfigRoleListBadRequest  %+v", 400, o.Payload)
}

func (o *KubeConfigRoleListBadRequest) GetPayload() []*KubeConfigRoleListBadRequestBodyItems0 {
	return o.Payload
}

func (o *KubeConfigRoleListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubeConfigRoleListUnauthorized creates a KubeConfigRoleListUnauthorized with default headers values
func NewKubeConfigRoleListUnauthorized() *KubeConfigRoleListUnauthorized {
	return &KubeConfigRoleListUnauthorized{}
}

/*
KubeConfigRoleListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type KubeConfigRoleListUnauthorized struct {
	Payload *KubeConfigRoleListUnauthorizedBody
}

// IsSuccess returns true when this kube config role list unauthorized response has a 2xx status code
func (o *KubeConfigRoleListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kube config role list unauthorized response has a 3xx status code
func (o *KubeConfigRoleListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kube config role list unauthorized response has a 4xx status code
func (o *KubeConfigRoleListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this kube config role list unauthorized response has a 5xx status code
func (o *KubeConfigRoleListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this kube config role list unauthorized response a status code equal to that given
func (o *KubeConfigRoleListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *KubeConfigRoleListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/KubeConfigRole][%d] kubeConfigRoleListUnauthorized  %+v", 401, o.Payload)
}

func (o *KubeConfigRoleListUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/KubeConfigRole][%d] kubeConfigRoleListUnauthorized  %+v", 401, o.Payload)
}

func (o *KubeConfigRoleListUnauthorized) GetPayload() *KubeConfigRoleListUnauthorizedBody {
	return o.Payload
}

func (o *KubeConfigRoleListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubeConfigRoleListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubeConfigRoleListForbidden creates a KubeConfigRoleListForbidden with default headers values
func NewKubeConfigRoleListForbidden() *KubeConfigRoleListForbidden {
	return &KubeConfigRoleListForbidden{}
}

/*
KubeConfigRoleListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type KubeConfigRoleListForbidden struct {
	Payload *KubeConfigRoleListForbiddenBody
}

// IsSuccess returns true when this kube config role list forbidden response has a 2xx status code
func (o *KubeConfigRoleListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kube config role list forbidden response has a 3xx status code
func (o *KubeConfigRoleListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kube config role list forbidden response has a 4xx status code
func (o *KubeConfigRoleListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this kube config role list forbidden response has a 5xx status code
func (o *KubeConfigRoleListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this kube config role list forbidden response a status code equal to that given
func (o *KubeConfigRoleListForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *KubeConfigRoleListForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/KubeConfigRole][%d] kubeConfigRoleListForbidden  %+v", 403, o.Payload)
}

func (o *KubeConfigRoleListForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/KubeConfigRole][%d] kubeConfigRoleListForbidden  %+v", 403, o.Payload)
}

func (o *KubeConfigRoleListForbidden) GetPayload() *KubeConfigRoleListForbiddenBody {
	return o.Payload
}

func (o *KubeConfigRoleListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubeConfigRoleListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubeConfigRoleListNotFound creates a KubeConfigRoleListNotFound with default headers values
func NewKubeConfigRoleListNotFound() *KubeConfigRoleListNotFound {
	return &KubeConfigRoleListNotFound{}
}

/*
KubeConfigRoleListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type KubeConfigRoleListNotFound struct {
	Payload *KubeConfigRoleListNotFoundBody
}

// IsSuccess returns true when this kube config role list not found response has a 2xx status code
func (o *KubeConfigRoleListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kube config role list not found response has a 3xx status code
func (o *KubeConfigRoleListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kube config role list not found response has a 4xx status code
func (o *KubeConfigRoleListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this kube config role list not found response has a 5xx status code
func (o *KubeConfigRoleListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this kube config role list not found response a status code equal to that given
func (o *KubeConfigRoleListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *KubeConfigRoleListNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/KubeConfigRole][%d] kubeConfigRoleListNotFound  %+v", 404, o.Payload)
}

func (o *KubeConfigRoleListNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/KubeConfigRole][%d] kubeConfigRoleListNotFound  %+v", 404, o.Payload)
}

func (o *KubeConfigRoleListNotFound) GetPayload() *KubeConfigRoleListNotFoundBody {
	return o.Payload
}

func (o *KubeConfigRoleListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubeConfigRoleListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubeConfigRoleListInternalServerError creates a KubeConfigRoleListInternalServerError with default headers values
func NewKubeConfigRoleListInternalServerError() *KubeConfigRoleListInternalServerError {
	return &KubeConfigRoleListInternalServerError{}
}

/*
KubeConfigRoleListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type KubeConfigRoleListInternalServerError struct {
}

// IsSuccess returns true when this kube config role list internal server error response has a 2xx status code
func (o *KubeConfigRoleListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kube config role list internal server error response has a 3xx status code
func (o *KubeConfigRoleListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kube config role list internal server error response has a 4xx status code
func (o *KubeConfigRoleListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this kube config role list internal server error response has a 5xx status code
func (o *KubeConfigRoleListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this kube config role list internal server error response a status code equal to that given
func (o *KubeConfigRoleListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *KubeConfigRoleListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/KubeConfigRole][%d] kubeConfigRoleListInternalServerError ", 500)
}

func (o *KubeConfigRoleListInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/KubeConfigRole][%d] kubeConfigRoleListInternalServerError ", 500)
}

func (o *KubeConfigRoleListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
KubeConfigRoleListBadRequestBodyItems0 kube config role list bad request body items0
swagger:model KubeConfigRoleListBadRequestBodyItems0
*/
type KubeConfigRoleListBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this kube config role list bad request body items0
func (o *KubeConfigRoleListBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kube config role list bad request body items0 based on context it is used
func (o *KubeConfigRoleListBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubeConfigRoleListBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubeConfigRoleListBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res KubeConfigRoleListBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubeConfigRoleListForbiddenBody kube config role list forbidden body
swagger:model KubeConfigRoleListForbiddenBody
*/
type KubeConfigRoleListForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kube config role list forbidden body
func (o *KubeConfigRoleListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kube config role list forbidden body based on context it is used
func (o *KubeConfigRoleListForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubeConfigRoleListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubeConfigRoleListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res KubeConfigRoleListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubeConfigRoleListNotFoundBody kube config role list not found body
swagger:model KubeConfigRoleListNotFoundBody
*/
type KubeConfigRoleListNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kube config role list not found body
func (o *KubeConfigRoleListNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kube config role list not found body based on context it is used
func (o *KubeConfigRoleListNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubeConfigRoleListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubeConfigRoleListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res KubeConfigRoleListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubeConfigRoleListOKBody kube config role list o k body
swagger:model KubeConfigRoleListOKBody
*/
type KubeConfigRoleListOKBody struct {

	// data
	Data []*KubeConfigRoleListOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this kube config role list o k body
func (o *KubeConfigRoleListOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *KubeConfigRoleListOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("kubeConfigRoleListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("kubeConfigRoleListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this kube config role list o k body based on the context it is used
func (o *KubeConfigRoleListOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *KubeConfigRoleListOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("kubeConfigRoleListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("kubeConfigRoleListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *KubeConfigRoleListOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubeConfigRoleListOKBody) UnmarshalBinary(b []byte) error {
	var res KubeConfigRoleListOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubeConfigRoleListOKBodyDataItems0 kube config role list o k body data items0
swagger:model KubeConfigRoleListOKBodyDataItems0
*/
type KubeConfigRoleListOKBodyDataItems0 struct {

	// id
	ID int32 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this kube config role list o k body data items0
func (o *KubeConfigRoleListOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kube config role list o k body data items0 based on context it is used
func (o *KubeConfigRoleListOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubeConfigRoleListOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubeConfigRoleListOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res KubeConfigRoleListOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubeConfigRoleListUnauthorizedBody kube config role list unauthorized body
swagger:model KubeConfigRoleListUnauthorizedBody
*/
type KubeConfigRoleListUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kube config role list unauthorized body
func (o *KubeConfigRoleListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kube config role list unauthorized body based on context it is used
func (o *KubeConfigRoleListUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubeConfigRoleListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubeConfigRoleListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res KubeConfigRoleListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
