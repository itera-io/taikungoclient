/*
Taikun - WebApi

Testing AlertingProfilesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package taikuncore

import (
	"context"
	openapiclient "github.com/itera-io/taikungoclient/client"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_taikuncore_AlertingProfilesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test AlertingProfilesAPIService AlertingprofilesAssignEmail", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32

		httpRes, err := apiClient.AlertingProfilesAPI.AlertingprofilesAssignEmail(context.Background(), id).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AlertingProfilesAPIService AlertingprofilesAssignWebhooks", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32

		httpRes, err := apiClient.AlertingProfilesAPI.AlertingprofilesAssignWebhooks(context.Background(), id).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AlertingProfilesAPIService AlertingprofilesAttach", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.AlertingProfilesAPI.AlertingprofilesAttach(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AlertingProfilesAPIService AlertingprofilesCreate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.AlertingProfilesAPI.AlertingprofilesCreate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AlertingProfilesAPIService AlertingprofilesDelete", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id int32

		httpRes, err := apiClient.AlertingProfilesAPI.AlertingprofilesDelete(context.Background(), id).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AlertingProfilesAPIService AlertingprofilesDetach", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.AlertingProfilesAPI.AlertingprofilesDetach(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AlertingProfilesAPIService AlertingprofilesDropdown", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.AlertingProfilesAPI.AlertingprofilesDropdown(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AlertingProfilesAPIService AlertingprofilesEdit", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.AlertingProfilesAPI.AlertingprofilesEdit(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AlertingProfilesAPIService AlertingprofilesList", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.AlertingProfilesAPI.AlertingprofilesList(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AlertingProfilesAPIService AlertingprofilesLockManager", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.AlertingProfilesAPI.AlertingprofilesLockManager(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AlertingProfilesAPIService AlertingprofilesVerify", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.AlertingProfilesAPI.AlertingprofilesVerify(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
