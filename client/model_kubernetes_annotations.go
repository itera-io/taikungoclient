/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the KubernetesAnnotations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubernetesAnnotations{}

// KubernetesAnnotations struct for KubernetesAnnotations
type KubernetesAnnotations struct {
	Description NullableString `json:"description,omitempty"`
	Title NullableString `json:"title,omitempty"`
}

// NewKubernetesAnnotations instantiates a new KubernetesAnnotations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesAnnotations() *KubernetesAnnotations {
	this := KubernetesAnnotations{}
	return &this
}

// NewKubernetesAnnotationsWithDefaults instantiates a new KubernetesAnnotations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesAnnotationsWithDefaults() *KubernetesAnnotations {
	this := KubernetesAnnotations{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubernetesAnnotations) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesAnnotations) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *KubernetesAnnotations) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *KubernetesAnnotations) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *KubernetesAnnotations) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *KubernetesAnnotations) UnsetDescription() {
	o.Description.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubernetesAnnotations) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesAnnotations) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *KubernetesAnnotations) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *KubernetesAnnotations) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *KubernetesAnnotations) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *KubernetesAnnotations) UnsetTitle() {
	o.Title.Unset()
}

func (o KubernetesAnnotations) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubernetesAnnotations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	return toSerialize, nil
}

type NullableKubernetesAnnotations struct {
	value *KubernetesAnnotations
	isSet bool
}

func (v NullableKubernetesAnnotations) Get() *KubernetesAnnotations {
	return v.value
}

func (v *NullableKubernetesAnnotations) Set(val *KubernetesAnnotations) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesAnnotations) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesAnnotations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesAnnotations(val *KubernetesAnnotations) *NullableKubernetesAnnotations {
	return &NullableKubernetesAnnotations{value: val, isSet: true}
}

func (v NullableKubernetesAnnotations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesAnnotations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


