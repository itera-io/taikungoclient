/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the OpenshiftCreateCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenshiftCreateCommand{}

// OpenshiftCreateCommand struct for OpenshiftCreateCommand
type OpenshiftCreateCommand struct {
	Name           NullableString `json:"name,omitempty"`
	KubeConfig     NullableString `json:"kubeConfig,omitempty"`
	PullSecret     NullableString `json:"pullSecret,omitempty"`
	StorageClass   NullableString `json:"storageClass,omitempty"`
	BaseDomain     NullableString `json:"baseDomain,omitempty"`
	OrganizationId NullableInt32  `json:"organizationId,omitempty"`
}

// NewOpenshiftCreateCommand instantiates a new OpenshiftCreateCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenshiftCreateCommand() *OpenshiftCreateCommand {
	this := OpenshiftCreateCommand{}
	return &this
}

// NewOpenshiftCreateCommandWithDefaults instantiates a new OpenshiftCreateCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenshiftCreateCommandWithDefaults() *OpenshiftCreateCommand {
	this := OpenshiftCreateCommand{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenshiftCreateCommand) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenshiftCreateCommand) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *OpenshiftCreateCommand) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *OpenshiftCreateCommand) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *OpenshiftCreateCommand) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *OpenshiftCreateCommand) UnsetName() {
	o.Name.Unset()
}

// GetKubeConfig returns the KubeConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenshiftCreateCommand) GetKubeConfig() string {
	if o == nil || IsNil(o.KubeConfig.Get()) {
		var ret string
		return ret
	}
	return *o.KubeConfig.Get()
}

// GetKubeConfigOk returns a tuple with the KubeConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenshiftCreateCommand) GetKubeConfigOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KubeConfig.Get(), o.KubeConfig.IsSet()
}

// HasKubeConfig returns a boolean if a field has been set.
func (o *OpenshiftCreateCommand) HasKubeConfig() bool {
	if o != nil && o.KubeConfig.IsSet() {
		return true
	}

	return false
}

// SetKubeConfig gets a reference to the given NullableString and assigns it to the KubeConfig field.
func (o *OpenshiftCreateCommand) SetKubeConfig(v string) {
	o.KubeConfig.Set(&v)
}

// SetKubeConfigNil sets the value for KubeConfig to be an explicit nil
func (o *OpenshiftCreateCommand) SetKubeConfigNil() {
	o.KubeConfig.Set(nil)
}

// UnsetKubeConfig ensures that no value is present for KubeConfig, not even an explicit nil
func (o *OpenshiftCreateCommand) UnsetKubeConfig() {
	o.KubeConfig.Unset()
}

// GetPullSecret returns the PullSecret field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenshiftCreateCommand) GetPullSecret() string {
	if o == nil || IsNil(o.PullSecret.Get()) {
		var ret string
		return ret
	}
	return *o.PullSecret.Get()
}

// GetPullSecretOk returns a tuple with the PullSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenshiftCreateCommand) GetPullSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PullSecret.Get(), o.PullSecret.IsSet()
}

// HasPullSecret returns a boolean if a field has been set.
func (o *OpenshiftCreateCommand) HasPullSecret() bool {
	if o != nil && o.PullSecret.IsSet() {
		return true
	}

	return false
}

// SetPullSecret gets a reference to the given NullableString and assigns it to the PullSecret field.
func (o *OpenshiftCreateCommand) SetPullSecret(v string) {
	o.PullSecret.Set(&v)
}

// SetPullSecretNil sets the value for PullSecret to be an explicit nil
func (o *OpenshiftCreateCommand) SetPullSecretNil() {
	o.PullSecret.Set(nil)
}

// UnsetPullSecret ensures that no value is present for PullSecret, not even an explicit nil
func (o *OpenshiftCreateCommand) UnsetPullSecret() {
	o.PullSecret.Unset()
}

// GetStorageClass returns the StorageClass field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenshiftCreateCommand) GetStorageClass() string {
	if o == nil || IsNil(o.StorageClass.Get()) {
		var ret string
		return ret
	}
	return *o.StorageClass.Get()
}

// GetStorageClassOk returns a tuple with the StorageClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenshiftCreateCommand) GetStorageClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageClass.Get(), o.StorageClass.IsSet()
}

// HasStorageClass returns a boolean if a field has been set.
func (o *OpenshiftCreateCommand) HasStorageClass() bool {
	if o != nil && o.StorageClass.IsSet() {
		return true
	}

	return false
}

// SetStorageClass gets a reference to the given NullableString and assigns it to the StorageClass field.
func (o *OpenshiftCreateCommand) SetStorageClass(v string) {
	o.StorageClass.Set(&v)
}

// SetStorageClassNil sets the value for StorageClass to be an explicit nil
func (o *OpenshiftCreateCommand) SetStorageClassNil() {
	o.StorageClass.Set(nil)
}

// UnsetStorageClass ensures that no value is present for StorageClass, not even an explicit nil
func (o *OpenshiftCreateCommand) UnsetStorageClass() {
	o.StorageClass.Unset()
}

// GetBaseDomain returns the BaseDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenshiftCreateCommand) GetBaseDomain() string {
	if o == nil || IsNil(o.BaseDomain.Get()) {
		var ret string
		return ret
	}
	return *o.BaseDomain.Get()
}

// GetBaseDomainOk returns a tuple with the BaseDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenshiftCreateCommand) GetBaseDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BaseDomain.Get(), o.BaseDomain.IsSet()
}

// HasBaseDomain returns a boolean if a field has been set.
func (o *OpenshiftCreateCommand) HasBaseDomain() bool {
	if o != nil && o.BaseDomain.IsSet() {
		return true
	}

	return false
}

// SetBaseDomain gets a reference to the given NullableString and assigns it to the BaseDomain field.
func (o *OpenshiftCreateCommand) SetBaseDomain(v string) {
	o.BaseDomain.Set(&v)
}

// SetBaseDomainNil sets the value for BaseDomain to be an explicit nil
func (o *OpenshiftCreateCommand) SetBaseDomainNil() {
	o.BaseDomain.Set(nil)
}

// UnsetBaseDomain ensures that no value is present for BaseDomain, not even an explicit nil
func (o *OpenshiftCreateCommand) UnsetBaseDomain() {
	o.BaseDomain.Unset()
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenshiftCreateCommand) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId.Get()) {
		var ret int32
		return ret
	}
	return *o.OrganizationId.Get()
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenshiftCreateCommand) GetOrganizationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationId.Get(), o.OrganizationId.IsSet()
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *OpenshiftCreateCommand) HasOrganizationId() bool {
	if o != nil && o.OrganizationId.IsSet() {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given NullableInt32 and assigns it to the OrganizationId field.
func (o *OpenshiftCreateCommand) SetOrganizationId(v int32) {
	o.OrganizationId.Set(&v)
}

// SetOrganizationIdNil sets the value for OrganizationId to be an explicit nil
func (o *OpenshiftCreateCommand) SetOrganizationIdNil() {
	o.OrganizationId.Set(nil)
}

// UnsetOrganizationId ensures that no value is present for OrganizationId, not even an explicit nil
func (o *OpenshiftCreateCommand) UnsetOrganizationId() {
	o.OrganizationId.Unset()
}

func (o OpenshiftCreateCommand) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenshiftCreateCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.KubeConfig.IsSet() {
		toSerialize["kubeConfig"] = o.KubeConfig.Get()
	}
	if o.PullSecret.IsSet() {
		toSerialize["pullSecret"] = o.PullSecret.Get()
	}
	if o.StorageClass.IsSet() {
		toSerialize["storageClass"] = o.StorageClass.Get()
	}
	if o.BaseDomain.IsSet() {
		toSerialize["baseDomain"] = o.BaseDomain.Get()
	}
	if o.OrganizationId.IsSet() {
		toSerialize["organizationId"] = o.OrganizationId.Get()
	}
	return toSerialize, nil
}

type NullableOpenshiftCreateCommand struct {
	value *OpenshiftCreateCommand
	isSet bool
}

func (v NullableOpenshiftCreateCommand) Get() *OpenshiftCreateCommand {
	return v.value
}

func (v *NullableOpenshiftCreateCommand) Set(val *OpenshiftCreateCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenshiftCreateCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenshiftCreateCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenshiftCreateCommand(val *OpenshiftCreateCommand) *NullableOpenshiftCreateCommand {
	return &NullableOpenshiftCreateCommand{value: val, isSet: true}
}

func (v NullableOpenshiftCreateCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenshiftCreateCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
