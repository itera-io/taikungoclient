/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the VerifyTwoFactorTokenCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerifyTwoFactorTokenCommand{}

// VerifyTwoFactorTokenCommand struct for VerifyTwoFactorTokenCommand
type VerifyTwoFactorTokenCommand struct {
	TwoFactorTempKey NullableString `json:"twoFactorTempKey,omitempty"`
	Code NullableString `json:"code,omitempty"`
}

// NewVerifyTwoFactorTokenCommand instantiates a new VerifyTwoFactorTokenCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifyTwoFactorTokenCommand() *VerifyTwoFactorTokenCommand {
	this := VerifyTwoFactorTokenCommand{}
	return &this
}

// NewVerifyTwoFactorTokenCommandWithDefaults instantiates a new VerifyTwoFactorTokenCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifyTwoFactorTokenCommandWithDefaults() *VerifyTwoFactorTokenCommand {
	this := VerifyTwoFactorTokenCommand{}
	return &this
}

// GetTwoFactorTempKey returns the TwoFactorTempKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VerifyTwoFactorTokenCommand) GetTwoFactorTempKey() string {
	if o == nil || IsNil(o.TwoFactorTempKey.Get()) {
		var ret string
		return ret
	}
	return *o.TwoFactorTempKey.Get()
}

// GetTwoFactorTempKeyOk returns a tuple with the TwoFactorTempKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VerifyTwoFactorTokenCommand) GetTwoFactorTempKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwoFactorTempKey.Get(), o.TwoFactorTempKey.IsSet()
}

// HasTwoFactorTempKey returns a boolean if a field has been set.
func (o *VerifyTwoFactorTokenCommand) HasTwoFactorTempKey() bool {
	if o != nil && o.TwoFactorTempKey.IsSet() {
		return true
	}

	return false
}

// SetTwoFactorTempKey gets a reference to the given NullableString and assigns it to the TwoFactorTempKey field.
func (o *VerifyTwoFactorTokenCommand) SetTwoFactorTempKey(v string) {
	o.TwoFactorTempKey.Set(&v)
}
// SetTwoFactorTempKeyNil sets the value for TwoFactorTempKey to be an explicit nil
func (o *VerifyTwoFactorTokenCommand) SetTwoFactorTempKeyNil() {
	o.TwoFactorTempKey.Set(nil)
}

// UnsetTwoFactorTempKey ensures that no value is present for TwoFactorTempKey, not even an explicit nil
func (o *VerifyTwoFactorTokenCommand) UnsetTwoFactorTempKey() {
	o.TwoFactorTempKey.Unset()
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VerifyTwoFactorTokenCommand) GetCode() string {
	if o == nil || IsNil(o.Code.Get()) {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VerifyTwoFactorTokenCommand) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *VerifyTwoFactorTokenCommand) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *VerifyTwoFactorTokenCommand) SetCode(v string) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *VerifyTwoFactorTokenCommand) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *VerifyTwoFactorTokenCommand) UnsetCode() {
	o.Code.Unset()
}

func (o VerifyTwoFactorTokenCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerifyTwoFactorTokenCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TwoFactorTempKey.IsSet() {
		toSerialize["twoFactorTempKey"] = o.TwoFactorTempKey.Get()
	}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	return toSerialize, nil
}

type NullableVerifyTwoFactorTokenCommand struct {
	value *VerifyTwoFactorTokenCommand
	isSet bool
}

func (v NullableVerifyTwoFactorTokenCommand) Get() *VerifyTwoFactorTokenCommand {
	return v.value
}

func (v *NullableVerifyTwoFactorTokenCommand) Set(val *VerifyTwoFactorTokenCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifyTwoFactorTokenCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifyTwoFactorTokenCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifyTwoFactorTokenCommand(val *VerifyTwoFactorTokenCommand) *NullableVerifyTwoFactorTokenCommand {
	return &NullableVerifyTwoFactorTokenCommand{value: val, isSet: true}
}

func (v NullableVerifyTwoFactorTokenCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifyTwoFactorTokenCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


