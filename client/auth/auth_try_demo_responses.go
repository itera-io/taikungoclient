// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// AuthTryDemoReader is a Reader for the AuthTryDemo structure.
type AuthTryDemoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthTryDemoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthTryDemoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAuthTryDemoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAuthTryDemoUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAuthTryDemoForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAuthTryDemoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAuthTryDemoInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAuthTryDemoOK creates a AuthTryDemoOK with default headers values
func NewAuthTryDemoOK() *AuthTryDemoOK {
	return &AuthTryDemoOK{}
}

/* AuthTryDemoOK describes a response with status code 200, with default header values.

Success
*/
type AuthTryDemoOK struct {
	Payload models.Unit
}

func (o *AuthTryDemoOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Auth/try-demo][%d] authTryDemoOK  %+v", 200, o.Payload)
}
func (o *AuthTryDemoOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *AuthTryDemoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthTryDemoBadRequest creates a AuthTryDemoBadRequest with default headers values
func NewAuthTryDemoBadRequest() *AuthTryDemoBadRequest {
	return &AuthTryDemoBadRequest{}
}

/* AuthTryDemoBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AuthTryDemoBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *AuthTryDemoBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Auth/try-demo][%d] authTryDemoBadRequest  %+v", 400, o.Payload)
}
func (o *AuthTryDemoBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *AuthTryDemoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthTryDemoUnauthorized creates a AuthTryDemoUnauthorized with default headers values
func NewAuthTryDemoUnauthorized() *AuthTryDemoUnauthorized {
	return &AuthTryDemoUnauthorized{}
}

/* AuthTryDemoUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AuthTryDemoUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *AuthTryDemoUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Auth/try-demo][%d] authTryDemoUnauthorized  %+v", 401, o.Payload)
}
func (o *AuthTryDemoUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AuthTryDemoUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthTryDemoForbidden creates a AuthTryDemoForbidden with default headers values
func NewAuthTryDemoForbidden() *AuthTryDemoForbidden {
	return &AuthTryDemoForbidden{}
}

/* AuthTryDemoForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AuthTryDemoForbidden struct {
	Payload *models.ProblemDetails
}

func (o *AuthTryDemoForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Auth/try-demo][%d] authTryDemoForbidden  %+v", 403, o.Payload)
}
func (o *AuthTryDemoForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AuthTryDemoForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthTryDemoNotFound creates a AuthTryDemoNotFound with default headers values
func NewAuthTryDemoNotFound() *AuthTryDemoNotFound {
	return &AuthTryDemoNotFound{}
}

/* AuthTryDemoNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AuthTryDemoNotFound struct {
	Payload *models.ProblemDetails
}

func (o *AuthTryDemoNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Auth/try-demo][%d] authTryDemoNotFound  %+v", 404, o.Payload)
}
func (o *AuthTryDemoNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AuthTryDemoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthTryDemoInternalServerError creates a AuthTryDemoInternalServerError with default headers values
func NewAuthTryDemoInternalServerError() *AuthTryDemoInternalServerError {
	return &AuthTryDemoInternalServerError{}
}

/* AuthTryDemoInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AuthTryDemoInternalServerError struct {
}

func (o *AuthTryDemoInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Auth/try-demo][%d] authTryDemoInternalServerError ", 500)
}

func (o *AuthTryDemoInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
