// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// AuthResetPasswordReader is a Reader for the AuthResetPassword structure.
type AuthResetPasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthResetPasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthResetPasswordOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAuthResetPasswordBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAuthResetPasswordUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAuthResetPasswordForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAuthResetPasswordNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAuthResetPasswordTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAuthResetPasswordInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAuthResetPasswordOK creates a AuthResetPasswordOK with default headers values
func NewAuthResetPasswordOK() *AuthResetPasswordOK {
	return &AuthResetPasswordOK{}
}

/* AuthResetPasswordOK describes a response with status code 200, with default header values.

Success
*/
type AuthResetPasswordOK struct {
	Payload models.Unit
}

func (o *AuthResetPasswordOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Auth/resetpassword][%d] authResetPasswordOK  %+v", 200, o.Payload)
}
func (o *AuthResetPasswordOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *AuthResetPasswordOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthResetPasswordBadRequest creates a AuthResetPasswordBadRequest with default headers values
func NewAuthResetPasswordBadRequest() *AuthResetPasswordBadRequest {
	return &AuthResetPasswordBadRequest{}
}

/* AuthResetPasswordBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AuthResetPasswordBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *AuthResetPasswordBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Auth/resetpassword][%d] authResetPasswordBadRequest  %+v", 400, o.Payload)
}
func (o *AuthResetPasswordBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *AuthResetPasswordBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthResetPasswordUnauthorized creates a AuthResetPasswordUnauthorized with default headers values
func NewAuthResetPasswordUnauthorized() *AuthResetPasswordUnauthorized {
	return &AuthResetPasswordUnauthorized{}
}

/* AuthResetPasswordUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AuthResetPasswordUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *AuthResetPasswordUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Auth/resetpassword][%d] authResetPasswordUnauthorized  %+v", 401, o.Payload)
}
func (o *AuthResetPasswordUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AuthResetPasswordUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthResetPasswordForbidden creates a AuthResetPasswordForbidden with default headers values
func NewAuthResetPasswordForbidden() *AuthResetPasswordForbidden {
	return &AuthResetPasswordForbidden{}
}

/* AuthResetPasswordForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AuthResetPasswordForbidden struct {
	Payload *models.ProblemDetails
}

func (o *AuthResetPasswordForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Auth/resetpassword][%d] authResetPasswordForbidden  %+v", 403, o.Payload)
}
func (o *AuthResetPasswordForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AuthResetPasswordForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthResetPasswordNotFound creates a AuthResetPasswordNotFound with default headers values
func NewAuthResetPasswordNotFound() *AuthResetPasswordNotFound {
	return &AuthResetPasswordNotFound{}
}

/* AuthResetPasswordNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AuthResetPasswordNotFound struct {
	Payload *models.ProblemDetails
}

func (o *AuthResetPasswordNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Auth/resetpassword][%d] authResetPasswordNotFound  %+v", 404, o.Payload)
}
func (o *AuthResetPasswordNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AuthResetPasswordNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthResetPasswordTooManyRequests creates a AuthResetPasswordTooManyRequests with default headers values
func NewAuthResetPasswordTooManyRequests() *AuthResetPasswordTooManyRequests {
	return &AuthResetPasswordTooManyRequests{}
}

/* AuthResetPasswordTooManyRequests describes a response with status code 429, with default header values.

Client Error
*/
type AuthResetPasswordTooManyRequests struct {
	Payload *models.ProblemDetails
}

func (o *AuthResetPasswordTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Auth/resetpassword][%d] authResetPasswordTooManyRequests  %+v", 429, o.Payload)
}
func (o *AuthResetPasswordTooManyRequests) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AuthResetPasswordTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthResetPasswordInternalServerError creates a AuthResetPasswordInternalServerError with default headers values
func NewAuthResetPasswordInternalServerError() *AuthResetPasswordInternalServerError {
	return &AuthResetPasswordInternalServerError{}
}

/* AuthResetPasswordInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AuthResetPasswordInternalServerError struct {
}

func (o *AuthResetPasswordInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Auth/resetpassword][%d] authResetPasswordInternalServerError ", 500)
}

func (o *AuthResetPasswordInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
