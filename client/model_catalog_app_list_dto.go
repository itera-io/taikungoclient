/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the CatalogAppListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogAppListDto{}

// CatalogAppListDto struct for CatalogAppListDto
type CatalogAppListDto struct {
	CatalogAppId *int32 `json:"catalogAppId,omitempty"`
	Name *string `json:"name,omitempty"`
	RepoId *int32 `json:"repoId,omitempty"`
	RepoName *string `json:"repoName,omitempty"`
	CatalogId *int32 `json:"catalogId,omitempty"`
	CatalogName *string `json:"catalogName,omitempty"`
	PackageId *string `json:"packageId,omitempty"`
	Version *string `json:"version,omitempty"`
	LogoImageId *string `json:"logoImageId,omitempty"`
	IsLocked *bool `json:"isLocked,omitempty"`
	AppVersion *string `json:"appVersion,omitempty"`
	Description *string `json:"description,omitempty"`
	SecurityReportSummary *SecurityReportSummary `json:"securityReportSummary,omitempty"`
	Repository *Repository `json:"repository,omitempty"`
	Stars *int64 `json:"stars,omitempty"`
	InstalledInstanceCount NullableInt32 `json:"installedInstanceCount,omitempty"`
}

// NewCatalogAppListDto instantiates a new CatalogAppListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogAppListDto() *CatalogAppListDto {
	this := CatalogAppListDto{}
	return &this
}

// NewCatalogAppListDtoWithDefaults instantiates a new CatalogAppListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogAppListDtoWithDefaults() *CatalogAppListDto {
	this := CatalogAppListDto{}
	return &this
}

// GetCatalogAppId returns the CatalogAppId field value if set, zero value otherwise.
func (o *CatalogAppListDto) GetCatalogAppId() int32 {
	if o == nil || IsNil(o.CatalogAppId) {
		var ret int32
		return ret
	}
	return *o.CatalogAppId
}

// GetCatalogAppIdOk returns a tuple with the CatalogAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppListDto) GetCatalogAppIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CatalogAppId) {
		return nil, false
	}
	return o.CatalogAppId, true
}

// HasCatalogAppId returns a boolean if a field has been set.
func (o *CatalogAppListDto) HasCatalogAppId() bool {
	if o != nil && !IsNil(o.CatalogAppId) {
		return true
	}

	return false
}

// SetCatalogAppId gets a reference to the given int32 and assigns it to the CatalogAppId field.
func (o *CatalogAppListDto) SetCatalogAppId(v int32) {
	o.CatalogAppId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CatalogAppListDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppListDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CatalogAppListDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CatalogAppListDto) SetName(v string) {
	o.Name = &v
}

// GetRepoId returns the RepoId field value if set, zero value otherwise.
func (o *CatalogAppListDto) GetRepoId() int32 {
	if o == nil || IsNil(o.RepoId) {
		var ret int32
		return ret
	}
	return *o.RepoId
}

// GetRepoIdOk returns a tuple with the RepoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppListDto) GetRepoIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RepoId) {
		return nil, false
	}
	return o.RepoId, true
}

// HasRepoId returns a boolean if a field has been set.
func (o *CatalogAppListDto) HasRepoId() bool {
	if o != nil && !IsNil(o.RepoId) {
		return true
	}

	return false
}

// SetRepoId gets a reference to the given int32 and assigns it to the RepoId field.
func (o *CatalogAppListDto) SetRepoId(v int32) {
	o.RepoId = &v
}

// GetRepoName returns the RepoName field value if set, zero value otherwise.
func (o *CatalogAppListDto) GetRepoName() string {
	if o == nil || IsNil(o.RepoName) {
		var ret string
		return ret
	}
	return *o.RepoName
}

// GetRepoNameOk returns a tuple with the RepoName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppListDto) GetRepoNameOk() (*string, bool) {
	if o == nil || IsNil(o.RepoName) {
		return nil, false
	}
	return o.RepoName, true
}

// HasRepoName returns a boolean if a field has been set.
func (o *CatalogAppListDto) HasRepoName() bool {
	if o != nil && !IsNil(o.RepoName) {
		return true
	}

	return false
}

// SetRepoName gets a reference to the given string and assigns it to the RepoName field.
func (o *CatalogAppListDto) SetRepoName(v string) {
	o.RepoName = &v
}

// GetCatalogId returns the CatalogId field value if set, zero value otherwise.
func (o *CatalogAppListDto) GetCatalogId() int32 {
	if o == nil || IsNil(o.CatalogId) {
		var ret int32
		return ret
	}
	return *o.CatalogId
}

// GetCatalogIdOk returns a tuple with the CatalogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppListDto) GetCatalogIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CatalogId) {
		return nil, false
	}
	return o.CatalogId, true
}

// HasCatalogId returns a boolean if a field has been set.
func (o *CatalogAppListDto) HasCatalogId() bool {
	if o != nil && !IsNil(o.CatalogId) {
		return true
	}

	return false
}

// SetCatalogId gets a reference to the given int32 and assigns it to the CatalogId field.
func (o *CatalogAppListDto) SetCatalogId(v int32) {
	o.CatalogId = &v
}

// GetCatalogName returns the CatalogName field value if set, zero value otherwise.
func (o *CatalogAppListDto) GetCatalogName() string {
	if o == nil || IsNil(o.CatalogName) {
		var ret string
		return ret
	}
	return *o.CatalogName
}

// GetCatalogNameOk returns a tuple with the CatalogName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppListDto) GetCatalogNameOk() (*string, bool) {
	if o == nil || IsNil(o.CatalogName) {
		return nil, false
	}
	return o.CatalogName, true
}

// HasCatalogName returns a boolean if a field has been set.
func (o *CatalogAppListDto) HasCatalogName() bool {
	if o != nil && !IsNil(o.CatalogName) {
		return true
	}

	return false
}

// SetCatalogName gets a reference to the given string and assigns it to the CatalogName field.
func (o *CatalogAppListDto) SetCatalogName(v string) {
	o.CatalogName = &v
}

// GetPackageId returns the PackageId field value if set, zero value otherwise.
func (o *CatalogAppListDto) GetPackageId() string {
	if o == nil || IsNil(o.PackageId) {
		var ret string
		return ret
	}
	return *o.PackageId
}

// GetPackageIdOk returns a tuple with the PackageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppListDto) GetPackageIdOk() (*string, bool) {
	if o == nil || IsNil(o.PackageId) {
		return nil, false
	}
	return o.PackageId, true
}

// HasPackageId returns a boolean if a field has been set.
func (o *CatalogAppListDto) HasPackageId() bool {
	if o != nil && !IsNil(o.PackageId) {
		return true
	}

	return false
}

// SetPackageId gets a reference to the given string and assigns it to the PackageId field.
func (o *CatalogAppListDto) SetPackageId(v string) {
	o.PackageId = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CatalogAppListDto) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppListDto) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CatalogAppListDto) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *CatalogAppListDto) SetVersion(v string) {
	o.Version = &v
}

// GetLogoImageId returns the LogoImageId field value if set, zero value otherwise.
func (o *CatalogAppListDto) GetLogoImageId() string {
	if o == nil || IsNil(o.LogoImageId) {
		var ret string
		return ret
	}
	return *o.LogoImageId
}

// GetLogoImageIdOk returns a tuple with the LogoImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppListDto) GetLogoImageIdOk() (*string, bool) {
	if o == nil || IsNil(o.LogoImageId) {
		return nil, false
	}
	return o.LogoImageId, true
}

// HasLogoImageId returns a boolean if a field has been set.
func (o *CatalogAppListDto) HasLogoImageId() bool {
	if o != nil && !IsNil(o.LogoImageId) {
		return true
	}

	return false
}

// SetLogoImageId gets a reference to the given string and assigns it to the LogoImageId field.
func (o *CatalogAppListDto) SetLogoImageId(v string) {
	o.LogoImageId = &v
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise.
func (o *CatalogAppListDto) GetIsLocked() bool {
	if o == nil || IsNil(o.IsLocked) {
		var ret bool
		return ret
	}
	return *o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppListDto) GetIsLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocked) {
		return nil, false
	}
	return o.IsLocked, true
}

// HasIsLocked returns a boolean if a field has been set.
func (o *CatalogAppListDto) HasIsLocked() bool {
	if o != nil && !IsNil(o.IsLocked) {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given bool and assigns it to the IsLocked field.
func (o *CatalogAppListDto) SetIsLocked(v bool) {
	o.IsLocked = &v
}

// GetAppVersion returns the AppVersion field value if set, zero value otherwise.
func (o *CatalogAppListDto) GetAppVersion() string {
	if o == nil || IsNil(o.AppVersion) {
		var ret string
		return ret
	}
	return *o.AppVersion
}

// GetAppVersionOk returns a tuple with the AppVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppListDto) GetAppVersionOk() (*string, bool) {
	if o == nil || IsNil(o.AppVersion) {
		return nil, false
	}
	return o.AppVersion, true
}

// HasAppVersion returns a boolean if a field has been set.
func (o *CatalogAppListDto) HasAppVersion() bool {
	if o != nil && !IsNil(o.AppVersion) {
		return true
	}

	return false
}

// SetAppVersion gets a reference to the given string and assigns it to the AppVersion field.
func (o *CatalogAppListDto) SetAppVersion(v string) {
	o.AppVersion = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CatalogAppListDto) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppListDto) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CatalogAppListDto) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CatalogAppListDto) SetDescription(v string) {
	o.Description = &v
}

// GetSecurityReportSummary returns the SecurityReportSummary field value if set, zero value otherwise.
func (o *CatalogAppListDto) GetSecurityReportSummary() SecurityReportSummary {
	if o == nil || IsNil(o.SecurityReportSummary) {
		var ret SecurityReportSummary
		return ret
	}
	return *o.SecurityReportSummary
}

// GetSecurityReportSummaryOk returns a tuple with the SecurityReportSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppListDto) GetSecurityReportSummaryOk() (*SecurityReportSummary, bool) {
	if o == nil || IsNil(o.SecurityReportSummary) {
		return nil, false
	}
	return o.SecurityReportSummary, true
}

// HasSecurityReportSummary returns a boolean if a field has been set.
func (o *CatalogAppListDto) HasSecurityReportSummary() bool {
	if o != nil && !IsNil(o.SecurityReportSummary) {
		return true
	}

	return false
}

// SetSecurityReportSummary gets a reference to the given SecurityReportSummary and assigns it to the SecurityReportSummary field.
func (o *CatalogAppListDto) SetSecurityReportSummary(v SecurityReportSummary) {
	o.SecurityReportSummary = &v
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *CatalogAppListDto) GetRepository() Repository {
	if o == nil || IsNil(o.Repository) {
		var ret Repository
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppListDto) GetRepositoryOk() (*Repository, bool) {
	if o == nil || IsNil(o.Repository) {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *CatalogAppListDto) HasRepository() bool {
	if o != nil && !IsNil(o.Repository) {
		return true
	}

	return false
}

// SetRepository gets a reference to the given Repository and assigns it to the Repository field.
func (o *CatalogAppListDto) SetRepository(v Repository) {
	o.Repository = &v
}

// GetStars returns the Stars field value if set, zero value otherwise.
func (o *CatalogAppListDto) GetStars() int64 {
	if o == nil || IsNil(o.Stars) {
		var ret int64
		return ret
	}
	return *o.Stars
}

// GetStarsOk returns a tuple with the Stars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppListDto) GetStarsOk() (*int64, bool) {
	if o == nil || IsNil(o.Stars) {
		return nil, false
	}
	return o.Stars, true
}

// HasStars returns a boolean if a field has been set.
func (o *CatalogAppListDto) HasStars() bool {
	if o != nil && !IsNil(o.Stars) {
		return true
	}

	return false
}

// SetStars gets a reference to the given int64 and assigns it to the Stars field.
func (o *CatalogAppListDto) SetStars(v int64) {
	o.Stars = &v
}

// GetInstalledInstanceCount returns the InstalledInstanceCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogAppListDto) GetInstalledInstanceCount() int32 {
	if o == nil || IsNil(o.InstalledInstanceCount.Get()) {
		var ret int32
		return ret
	}
	return *o.InstalledInstanceCount.Get()
}

// GetInstalledInstanceCountOk returns a tuple with the InstalledInstanceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogAppListDto) GetInstalledInstanceCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstalledInstanceCount.Get(), o.InstalledInstanceCount.IsSet()
}

// HasInstalledInstanceCount returns a boolean if a field has been set.
func (o *CatalogAppListDto) HasInstalledInstanceCount() bool {
	if o != nil && o.InstalledInstanceCount.IsSet() {
		return true
	}

	return false
}

// SetInstalledInstanceCount gets a reference to the given NullableInt32 and assigns it to the InstalledInstanceCount field.
func (o *CatalogAppListDto) SetInstalledInstanceCount(v int32) {
	o.InstalledInstanceCount.Set(&v)
}
// SetInstalledInstanceCountNil sets the value for InstalledInstanceCount to be an explicit nil
func (o *CatalogAppListDto) SetInstalledInstanceCountNil() {
	o.InstalledInstanceCount.Set(nil)
}

// UnsetInstalledInstanceCount ensures that no value is present for InstalledInstanceCount, not even an explicit nil
func (o *CatalogAppListDto) UnsetInstalledInstanceCount() {
	o.InstalledInstanceCount.Unset()
}

func (o CatalogAppListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogAppListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CatalogAppId) {
		toSerialize["catalogAppId"] = o.CatalogAppId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RepoId) {
		toSerialize["repoId"] = o.RepoId
	}
	if !IsNil(o.RepoName) {
		toSerialize["repoName"] = o.RepoName
	}
	if !IsNil(o.CatalogId) {
		toSerialize["catalogId"] = o.CatalogId
	}
	if !IsNil(o.CatalogName) {
		toSerialize["catalogName"] = o.CatalogName
	}
	if !IsNil(o.PackageId) {
		toSerialize["packageId"] = o.PackageId
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.LogoImageId) {
		toSerialize["logoImageId"] = o.LogoImageId
	}
	if !IsNil(o.IsLocked) {
		toSerialize["isLocked"] = o.IsLocked
	}
	if !IsNil(o.AppVersion) {
		toSerialize["appVersion"] = o.AppVersion
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.SecurityReportSummary) {
		toSerialize["securityReportSummary"] = o.SecurityReportSummary
	}
	if !IsNil(o.Repository) {
		toSerialize["repository"] = o.Repository
	}
	if !IsNil(o.Stars) {
		toSerialize["stars"] = o.Stars
	}
	if o.InstalledInstanceCount.IsSet() {
		toSerialize["installedInstanceCount"] = o.InstalledInstanceCount.Get()
	}
	return toSerialize, nil
}

type NullableCatalogAppListDto struct {
	value *CatalogAppListDto
	isSet bool
}

func (v NullableCatalogAppListDto) Get() *CatalogAppListDto {
	return v.value
}

func (v *NullableCatalogAppListDto) Set(val *CatalogAppListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogAppListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogAppListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogAppListDto(val *CatalogAppListDto) *NullableCatalogAppListDto {
	return &NullableCatalogAppListDto{value: val, isSet: true}
}

func (v NullableCatalogAppListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogAppListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


