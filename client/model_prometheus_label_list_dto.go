/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PrometheusLabelListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrometheusLabelListDto{}

// PrometheusLabelListDto struct for PrometheusLabelListDto
type PrometheusLabelListDto struct {
	Label NullableString `json:"label"`
	Value NullableString `json:"value"`
}

type _PrometheusLabelListDto PrometheusLabelListDto

// NewPrometheusLabelListDto instantiates a new PrometheusLabelListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrometheusLabelListDto(label NullableString, value NullableString) *PrometheusLabelListDto {
	this := PrometheusLabelListDto{}
	this.Label = label
	this.Value = value
	return &this
}

// NewPrometheusLabelListDtoWithDefaults instantiates a new PrometheusLabelListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrometheusLabelListDtoWithDefaults() *PrometheusLabelListDto {
	this := PrometheusLabelListDto{}
	return &this
}

// GetLabel returns the Label field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PrometheusLabelListDto) GetLabel() string {
	if o == nil || o.Label.Get() == nil {
		var ret string
		return ret
	}

	return *o.Label.Get()
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrometheusLabelListDto) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Label.Get(), o.Label.IsSet()
}

// SetLabel sets field value
func (o *PrometheusLabelListDto) SetLabel(v string) {
	o.Label.Set(&v)
}

// GetValue returns the Value field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PrometheusLabelListDto) GetValue() string {
	if o == nil || o.Value.Get() == nil {
		var ret string
		return ret
	}

	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrometheusLabelListDto) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// SetValue sets field value
func (o *PrometheusLabelListDto) SetValue(v string) {
	o.Value.Set(&v)
}

func (o PrometheusLabelListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrometheusLabelListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["label"] = o.Label.Get()
	toSerialize["value"] = o.Value.Get()
	return toSerialize, nil
}

func (o *PrometheusLabelListDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"label",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPrometheusLabelListDto := _PrometheusLabelListDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPrometheusLabelListDto)

	if err != nil {
		return err
	}

	*o = PrometheusLabelListDto(varPrometheusLabelListDto)

	return err
}

type NullablePrometheusLabelListDto struct {
	value *PrometheusLabelListDto
	isSet bool
}

func (v NullablePrometheusLabelListDto) Get() *PrometheusLabelListDto {
	return v.value
}

func (v *NullablePrometheusLabelListDto) Set(val *PrometheusLabelListDto) {
	v.value = val
	v.isSet = true
}

func (v NullablePrometheusLabelListDto) IsSet() bool {
	return v.isSet
}

func (v *NullablePrometheusLabelListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrometheusLabelListDto(val *PrometheusLabelListDto) *NullablePrometheusLabelListDto {
	return &NullablePrometheusLabelListDto{value: val, isSet: true}
}

func (v NullablePrometheusLabelListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrometheusLabelListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


