/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the AllowedHostListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AllowedHostListDto{}

// AllowedHostListDto struct for AllowedHostListDto
type AllowedHostListDto struct {
	Id *int32 `json:"id,omitempty"`
	Description *string `json:"description,omitempty"`
	IpAddress *string `json:"ipAddress,omitempty"`
	MaskBits *int32 `json:"maskBits,omitempty"`
	AccessProfileId *int32 `json:"accessProfileId,omitempty"`
	AccessProfileName *string `json:"accessProfileName,omitempty"`
}

// NewAllowedHostListDto instantiates a new AllowedHostListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllowedHostListDto() *AllowedHostListDto {
	this := AllowedHostListDto{}
	return &this
}

// NewAllowedHostListDtoWithDefaults instantiates a new AllowedHostListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllowedHostListDtoWithDefaults() *AllowedHostListDto {
	this := AllowedHostListDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AllowedHostListDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllowedHostListDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AllowedHostListDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *AllowedHostListDto) SetId(v int32) {
	o.Id = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AllowedHostListDto) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllowedHostListDto) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AllowedHostListDto) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AllowedHostListDto) SetDescription(v string) {
	o.Description = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *AllowedHostListDto) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllowedHostListDto) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *AllowedHostListDto) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *AllowedHostListDto) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetMaskBits returns the MaskBits field value if set, zero value otherwise.
func (o *AllowedHostListDto) GetMaskBits() int32 {
	if o == nil || IsNil(o.MaskBits) {
		var ret int32
		return ret
	}
	return *o.MaskBits
}

// GetMaskBitsOk returns a tuple with the MaskBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllowedHostListDto) GetMaskBitsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaskBits) {
		return nil, false
	}
	return o.MaskBits, true
}

// HasMaskBits returns a boolean if a field has been set.
func (o *AllowedHostListDto) HasMaskBits() bool {
	if o != nil && !IsNil(o.MaskBits) {
		return true
	}

	return false
}

// SetMaskBits gets a reference to the given int32 and assigns it to the MaskBits field.
func (o *AllowedHostListDto) SetMaskBits(v int32) {
	o.MaskBits = &v
}

// GetAccessProfileId returns the AccessProfileId field value if set, zero value otherwise.
func (o *AllowedHostListDto) GetAccessProfileId() int32 {
	if o == nil || IsNil(o.AccessProfileId) {
		var ret int32
		return ret
	}
	return *o.AccessProfileId
}

// GetAccessProfileIdOk returns a tuple with the AccessProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllowedHostListDto) GetAccessProfileIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AccessProfileId) {
		return nil, false
	}
	return o.AccessProfileId, true
}

// HasAccessProfileId returns a boolean if a field has been set.
func (o *AllowedHostListDto) HasAccessProfileId() bool {
	if o != nil && !IsNil(o.AccessProfileId) {
		return true
	}

	return false
}

// SetAccessProfileId gets a reference to the given int32 and assigns it to the AccessProfileId field.
func (o *AllowedHostListDto) SetAccessProfileId(v int32) {
	o.AccessProfileId = &v
}

// GetAccessProfileName returns the AccessProfileName field value if set, zero value otherwise.
func (o *AllowedHostListDto) GetAccessProfileName() string {
	if o == nil || IsNil(o.AccessProfileName) {
		var ret string
		return ret
	}
	return *o.AccessProfileName
}

// GetAccessProfileNameOk returns a tuple with the AccessProfileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllowedHostListDto) GetAccessProfileNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccessProfileName) {
		return nil, false
	}
	return o.AccessProfileName, true
}

// HasAccessProfileName returns a boolean if a field has been set.
func (o *AllowedHostListDto) HasAccessProfileName() bool {
	if o != nil && !IsNil(o.AccessProfileName) {
		return true
	}

	return false
}

// SetAccessProfileName gets a reference to the given string and assigns it to the AccessProfileName field.
func (o *AllowedHostListDto) SetAccessProfileName(v string) {
	o.AccessProfileName = &v
}

func (o AllowedHostListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AllowedHostListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if !IsNil(o.MaskBits) {
		toSerialize["maskBits"] = o.MaskBits
	}
	if !IsNil(o.AccessProfileId) {
		toSerialize["accessProfileId"] = o.AccessProfileId
	}
	if !IsNil(o.AccessProfileName) {
		toSerialize["accessProfileName"] = o.AccessProfileName
	}
	return toSerialize, nil
}

type NullableAllowedHostListDto struct {
	value *AllowedHostListDto
	isSet bool
}

func (v NullableAllowedHostListDto) Get() *AllowedHostListDto {
	return v.value
}

func (v *NullableAllowedHostListDto) Set(val *AllowedHostListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAllowedHostListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAllowedHostListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllowedHostListDto(val *AllowedHostListDto) *NullableAllowedHostListDto {
	return &NullableAllowedHostListDto{value: val, isSet: true}
}

func (v NullableAllowedHostListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllowedHostListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


