/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the StripeInvoiceListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StripeInvoiceListDto{}

// StripeInvoiceListDto struct for StripeInvoiceListDto
type StripeInvoiceListDto struct {
	Id NullableString `json:"id"`
	InvoiceStatus NullableString `json:"invoiceStatus"`
	ChargeStatus NullableString `json:"chargeStatus"`
	ChargeReason NullableString `json:"chargeReason"`
	Price float64 `json:"price"`
	StartDate time.Time `json:"startDate"`
	EndDate time.Time `json:"endDate"`
}

type _StripeInvoiceListDto StripeInvoiceListDto

// NewStripeInvoiceListDto instantiates a new StripeInvoiceListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStripeInvoiceListDto(id NullableString, invoiceStatus NullableString, chargeStatus NullableString, chargeReason NullableString, price float64, startDate time.Time, endDate time.Time) *StripeInvoiceListDto {
	this := StripeInvoiceListDto{}
	this.Id = id
	this.InvoiceStatus = invoiceStatus
	this.ChargeStatus = chargeStatus
	this.ChargeReason = chargeReason
	this.Price = price
	this.StartDate = startDate
	this.EndDate = endDate
	return &this
}

// NewStripeInvoiceListDtoWithDefaults instantiates a new StripeInvoiceListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStripeInvoiceListDtoWithDefaults() *StripeInvoiceListDto {
	this := StripeInvoiceListDto{}
	return &this
}

// GetId returns the Id field value
// If the value is explicit nil, the zero value for string will be returned
func (o *StripeInvoiceListDto) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}

	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StripeInvoiceListDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// SetId sets field value
func (o *StripeInvoiceListDto) SetId(v string) {
	o.Id.Set(&v)
}

// GetInvoiceStatus returns the InvoiceStatus field value
// If the value is explicit nil, the zero value for string will be returned
func (o *StripeInvoiceListDto) GetInvoiceStatus() string {
	if o == nil || o.InvoiceStatus.Get() == nil {
		var ret string
		return ret
	}

	return *o.InvoiceStatus.Get()
}

// GetInvoiceStatusOk returns a tuple with the InvoiceStatus field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StripeInvoiceListDto) GetInvoiceStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceStatus.Get(), o.InvoiceStatus.IsSet()
}

// SetInvoiceStatus sets field value
func (o *StripeInvoiceListDto) SetInvoiceStatus(v string) {
	o.InvoiceStatus.Set(&v)
}

// GetChargeStatus returns the ChargeStatus field value
// If the value is explicit nil, the zero value for string will be returned
func (o *StripeInvoiceListDto) GetChargeStatus() string {
	if o == nil || o.ChargeStatus.Get() == nil {
		var ret string
		return ret
	}

	return *o.ChargeStatus.Get()
}

// GetChargeStatusOk returns a tuple with the ChargeStatus field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StripeInvoiceListDto) GetChargeStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChargeStatus.Get(), o.ChargeStatus.IsSet()
}

// SetChargeStatus sets field value
func (o *StripeInvoiceListDto) SetChargeStatus(v string) {
	o.ChargeStatus.Set(&v)
}

// GetChargeReason returns the ChargeReason field value
// If the value is explicit nil, the zero value for string will be returned
func (o *StripeInvoiceListDto) GetChargeReason() string {
	if o == nil || o.ChargeReason.Get() == nil {
		var ret string
		return ret
	}

	return *o.ChargeReason.Get()
}

// GetChargeReasonOk returns a tuple with the ChargeReason field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StripeInvoiceListDto) GetChargeReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChargeReason.Get(), o.ChargeReason.IsSet()
}

// SetChargeReason sets field value
func (o *StripeInvoiceListDto) SetChargeReason(v string) {
	o.ChargeReason.Set(&v)
}

// GetPrice returns the Price field value
func (o *StripeInvoiceListDto) GetPrice() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *StripeInvoiceListDto) GetPriceOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *StripeInvoiceListDto) SetPrice(v float64) {
	o.Price = v
}

// GetStartDate returns the StartDate field value
func (o *StripeInvoiceListDto) GetStartDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *StripeInvoiceListDto) GetStartDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *StripeInvoiceListDto) SetStartDate(v time.Time) {
	o.StartDate = v
}

// GetEndDate returns the EndDate field value
func (o *StripeInvoiceListDto) GetEndDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *StripeInvoiceListDto) GetEndDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *StripeInvoiceListDto) SetEndDate(v time.Time) {
	o.EndDate = v
}

func (o StripeInvoiceListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StripeInvoiceListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id.Get()
	toSerialize["invoiceStatus"] = o.InvoiceStatus.Get()
	toSerialize["chargeStatus"] = o.ChargeStatus.Get()
	toSerialize["chargeReason"] = o.ChargeReason.Get()
	toSerialize["price"] = o.Price
	toSerialize["startDate"] = o.StartDate
	toSerialize["endDate"] = o.EndDate
	return toSerialize, nil
}

func (o *StripeInvoiceListDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"invoiceStatus",
		"chargeStatus",
		"chargeReason",
		"price",
		"startDate",
		"endDate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStripeInvoiceListDto := _StripeInvoiceListDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStripeInvoiceListDto)

	if err != nil {
		return err
	}

	*o = StripeInvoiceListDto(varStripeInvoiceListDto)

	return err
}

type NullableStripeInvoiceListDto struct {
	value *StripeInvoiceListDto
	isSet bool
}

func (v NullableStripeInvoiceListDto) Get() *StripeInvoiceListDto {
	return v.value
}

func (v *NullableStripeInvoiceListDto) Set(val *StripeInvoiceListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableStripeInvoiceListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableStripeInvoiceListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStripeInvoiceListDto(val *StripeInvoiceListDto) *NullableStripeInvoiceListDto {
	return &NullableStripeInvoiceListDto{value: val, isSet: true}
}

func (v NullableStripeInvoiceListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStripeInvoiceListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


