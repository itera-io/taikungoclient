// Code generated by go-swagger; DO NOT EDIT.

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ServersListReader is a Reader for the ServersList structure.
type ServersListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServersListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServersListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewServersListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewServersListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewServersListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewServersListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewServersListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewServersListOK creates a ServersListOK with default headers values
func NewServersListOK() *ServersListOK {
	return &ServersListOK{}
}

/* ServersListOK describes a response with status code 200, with default header values.

Success
*/
type ServersListOK struct {
	Payload *models.ServersList
}

func (o *ServersListOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Servers][%d] serversListOK  %+v", 200, o.Payload)
}
func (o *ServersListOK) GetPayload() *models.ServersList {
	return o.Payload
}

func (o *ServersListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServersList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersListBadRequest creates a ServersListBadRequest with default headers values
func NewServersListBadRequest() *ServersListBadRequest {
	return &ServersListBadRequest{}
}

/* ServersListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ServersListBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *ServersListBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Servers][%d] serversListBadRequest  %+v", 400, o.Payload)
}
func (o *ServersListBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *ServersListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersListUnauthorized creates a ServersListUnauthorized with default headers values
func NewServersListUnauthorized() *ServersListUnauthorized {
	return &ServersListUnauthorized{}
}

/* ServersListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ServersListUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *ServersListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Servers][%d] serversListUnauthorized  %+v", 401, o.Payload)
}
func (o *ServersListUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ServersListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersListForbidden creates a ServersListForbidden with default headers values
func NewServersListForbidden() *ServersListForbidden {
	return &ServersListForbidden{}
}

/* ServersListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ServersListForbidden struct {
	Payload *models.ProblemDetails
}

func (o *ServersListForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Servers][%d] serversListForbidden  %+v", 403, o.Payload)
}
func (o *ServersListForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ServersListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersListNotFound creates a ServersListNotFound with default headers values
func NewServersListNotFound() *ServersListNotFound {
	return &ServersListNotFound{}
}

/* ServersListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ServersListNotFound struct {
	Payload *models.ProblemDetails
}

func (o *ServersListNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Servers][%d] serversListNotFound  %+v", 404, o.Payload)
}
func (o *ServersListNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ServersListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersListInternalServerError creates a ServersListInternalServerError with default headers values
func NewServersListInternalServerError() *ServersListInternalServerError {
	return &ServersListInternalServerError{}
}

/* ServersListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ServersListInternalServerError struct {
}

func (o *ServersListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Servers][%d] serversListInternalServerError ", 500)
}

func (o *ServersListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
