// Code generated by go-swagger; DO NOT EDIT.

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ServersShowServerStatusReader is a Reader for the ServersShowServerStatus structure.
type ServersShowServerStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServersShowServerStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServersShowServerStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewServersShowServerStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewServersShowServerStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewServersShowServerStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewServersShowServerStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewServersShowServerStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewServersShowServerStatusOK creates a ServersShowServerStatusOK with default headers values
func NewServersShowServerStatusOK() *ServersShowServerStatusOK {
	return &ServersShowServerStatusOK{}
}

/* ServersShowServerStatusOK describes a response with status code 200, with default header values.

Success
*/
type ServersShowServerStatusOK struct {
}

func (o *ServersShowServerStatusOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Servers/status/{serverId}][%d] serversShowServerStatusOK ", 200)
}

func (o *ServersShowServerStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewServersShowServerStatusBadRequest creates a ServersShowServerStatusBadRequest with default headers values
func NewServersShowServerStatusBadRequest() *ServersShowServerStatusBadRequest {
	return &ServersShowServerStatusBadRequest{}
}

/* ServersShowServerStatusBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ServersShowServerStatusBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *ServersShowServerStatusBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Servers/status/{serverId}][%d] serversShowServerStatusBadRequest  %+v", 400, o.Payload)
}
func (o *ServersShowServerStatusBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *ServersShowServerStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersShowServerStatusUnauthorized creates a ServersShowServerStatusUnauthorized with default headers values
func NewServersShowServerStatusUnauthorized() *ServersShowServerStatusUnauthorized {
	return &ServersShowServerStatusUnauthorized{}
}

/* ServersShowServerStatusUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ServersShowServerStatusUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *ServersShowServerStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Servers/status/{serverId}][%d] serversShowServerStatusUnauthorized  %+v", 401, o.Payload)
}
func (o *ServersShowServerStatusUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ServersShowServerStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersShowServerStatusForbidden creates a ServersShowServerStatusForbidden with default headers values
func NewServersShowServerStatusForbidden() *ServersShowServerStatusForbidden {
	return &ServersShowServerStatusForbidden{}
}

/* ServersShowServerStatusForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ServersShowServerStatusForbidden struct {
	Payload *models.ProblemDetails
}

func (o *ServersShowServerStatusForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Servers/status/{serverId}][%d] serversShowServerStatusForbidden  %+v", 403, o.Payload)
}
func (o *ServersShowServerStatusForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ServersShowServerStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersShowServerStatusNotFound creates a ServersShowServerStatusNotFound with default headers values
func NewServersShowServerStatusNotFound() *ServersShowServerStatusNotFound {
	return &ServersShowServerStatusNotFound{}
}

/* ServersShowServerStatusNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ServersShowServerStatusNotFound struct {
	Payload *models.ProblemDetails
}

func (o *ServersShowServerStatusNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Servers/status/{serverId}][%d] serversShowServerStatusNotFound  %+v", 404, o.Payload)
}
func (o *ServersShowServerStatusNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ServersShowServerStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersShowServerStatusInternalServerError creates a ServersShowServerStatusInternalServerError with default headers values
func NewServersShowServerStatusInternalServerError() *ServersShowServerStatusInternalServerError {
	return &ServersShowServerStatusInternalServerError{}
}

/* ServersShowServerStatusInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ServersShowServerStatusInternalServerError struct {
}

func (o *ServersShowServerStatusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Servers/status/{serverId}][%d] serversShowServerStatusInternalServerError ", 500)
}

func (o *ServersShowServerStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
