// Code generated by go-swagger; DO NOT EDIT.

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ServersUpdateReader is a Reader for the ServersUpdate structure.
type ServersUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServersUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServersUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewServersUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewServersUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewServersUpdateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewServersUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewServersUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewServersUpdateOK creates a ServersUpdateOK with default headers values
func NewServersUpdateOK() *ServersUpdateOK {
	return &ServersUpdateOK{}
}

/* ServersUpdateOK describes a response with status code 200, with default header values.

Success
*/
type ServersUpdateOK struct {
	Payload models.Unit
}

func (o *ServersUpdateOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/update][%d] serversUpdateOK  %+v", 200, o.Payload)
}
func (o *ServersUpdateOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *ServersUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersUpdateBadRequest creates a ServersUpdateBadRequest with default headers values
func NewServersUpdateBadRequest() *ServersUpdateBadRequest {
	return &ServersUpdateBadRequest{}
}

/* ServersUpdateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ServersUpdateBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *ServersUpdateBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/update][%d] serversUpdateBadRequest  %+v", 400, o.Payload)
}
func (o *ServersUpdateBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *ServersUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersUpdateUnauthorized creates a ServersUpdateUnauthorized with default headers values
func NewServersUpdateUnauthorized() *ServersUpdateUnauthorized {
	return &ServersUpdateUnauthorized{}
}

/* ServersUpdateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ServersUpdateUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *ServersUpdateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/update][%d] serversUpdateUnauthorized  %+v", 401, o.Payload)
}
func (o *ServersUpdateUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ServersUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersUpdateForbidden creates a ServersUpdateForbidden with default headers values
func NewServersUpdateForbidden() *ServersUpdateForbidden {
	return &ServersUpdateForbidden{}
}

/* ServersUpdateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ServersUpdateForbidden struct {
	Payload *models.ProblemDetails
}

func (o *ServersUpdateForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/update][%d] serversUpdateForbidden  %+v", 403, o.Payload)
}
func (o *ServersUpdateForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ServersUpdateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersUpdateNotFound creates a ServersUpdateNotFound with default headers values
func NewServersUpdateNotFound() *ServersUpdateNotFound {
	return &ServersUpdateNotFound{}
}

/* ServersUpdateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ServersUpdateNotFound struct {
	Payload *models.ProblemDetails
}

func (o *ServersUpdateNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/update][%d] serversUpdateNotFound  %+v", 404, o.Payload)
}
func (o *ServersUpdateNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ServersUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersUpdateInternalServerError creates a ServersUpdateInternalServerError with default headers values
func NewServersUpdateInternalServerError() *ServersUpdateInternalServerError {
	return &ServersUpdateInternalServerError{}
}

/* ServersUpdateInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ServersUpdateInternalServerError struct {
}

func (o *ServersUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/update][%d] serversUpdateInternalServerError ", 500)
}

func (o *ServersUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
