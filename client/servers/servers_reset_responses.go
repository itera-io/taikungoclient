// Code generated by go-swagger; DO NOT EDIT.

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ServersResetReader is a Reader for the ServersReset structure.
type ServersResetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServersResetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServersResetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewServersResetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewServersResetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewServersResetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewServersResetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewServersResetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewServersResetOK creates a ServersResetOK with default headers values
func NewServersResetOK() *ServersResetOK {
	return &ServersResetOK{}
}

/* ServersResetOK describes a response with status code 200, with default header values.

Success
*/
type ServersResetOK struct {
	Payload models.Unit
}

func (o *ServersResetOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reset][%d] serversResetOK  %+v", 200, o.Payload)
}
func (o *ServersResetOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *ServersResetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersResetBadRequest creates a ServersResetBadRequest with default headers values
func NewServersResetBadRequest() *ServersResetBadRequest {
	return &ServersResetBadRequest{}
}

/* ServersResetBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ServersResetBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *ServersResetBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reset][%d] serversResetBadRequest  %+v", 400, o.Payload)
}
func (o *ServersResetBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *ServersResetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersResetUnauthorized creates a ServersResetUnauthorized with default headers values
func NewServersResetUnauthorized() *ServersResetUnauthorized {
	return &ServersResetUnauthorized{}
}

/* ServersResetUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ServersResetUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *ServersResetUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reset][%d] serversResetUnauthorized  %+v", 401, o.Payload)
}
func (o *ServersResetUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ServersResetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersResetForbidden creates a ServersResetForbidden with default headers values
func NewServersResetForbidden() *ServersResetForbidden {
	return &ServersResetForbidden{}
}

/* ServersResetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ServersResetForbidden struct {
	Payload *models.ProblemDetails
}

func (o *ServersResetForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reset][%d] serversResetForbidden  %+v", 403, o.Payload)
}
func (o *ServersResetForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ServersResetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersResetNotFound creates a ServersResetNotFound with default headers values
func NewServersResetNotFound() *ServersResetNotFound {
	return &ServersResetNotFound{}
}

/* ServersResetNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ServersResetNotFound struct {
	Payload *models.ProblemDetails
}

func (o *ServersResetNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reset][%d] serversResetNotFound  %+v", 404, o.Payload)
}
func (o *ServersResetNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ServersResetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersResetInternalServerError creates a ServersResetInternalServerError with default headers values
func NewServersResetInternalServerError() *ServersResetInternalServerError {
	return &ServersResetInternalServerError{}
}

/* ServersResetInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ServersResetInternalServerError struct {
}

func (o *ServersResetInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reset][%d] serversResetInternalServerError ", 500)
}

func (o *ServersResetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
