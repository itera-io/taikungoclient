// Code generated by go-swagger; DO NOT EDIT.

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ServersResetReader is a Reader for the ServersReset structure.
type ServersResetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServersResetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServersResetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewServersResetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewServersResetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewServersResetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewServersResetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewServersResetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewServersResetOK creates a ServersResetOK with default headers values
func NewServersResetOK() *ServersResetOK {
	return &ServersResetOK{}
}

/*
ServersResetOK describes a response with status code 200, with default header values.

Success
*/
type ServersResetOK struct {
	Payload interface{}
}

// IsSuccess returns true when this servers reset o k response has a 2xx status code
func (o *ServersResetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this servers reset o k response has a 3xx status code
func (o *ServersResetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this servers reset o k response has a 4xx status code
func (o *ServersResetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this servers reset o k response has a 5xx status code
func (o *ServersResetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this servers reset o k response a status code equal to that given
func (o *ServersResetOK) IsCode(code int) bool {
	return code == 200
}

func (o *ServersResetOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reset][%d] serversResetOK  %+v", 200, o.Payload)
}

func (o *ServersResetOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reset][%d] serversResetOK  %+v", 200, o.Payload)
}

func (o *ServersResetOK) GetPayload() interface{} {
	return o.Payload
}

func (o *ServersResetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersResetBadRequest creates a ServersResetBadRequest with default headers values
func NewServersResetBadRequest() *ServersResetBadRequest {
	return &ServersResetBadRequest{}
}

/*
ServersResetBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ServersResetBadRequest struct {
	Payload []*ServersResetBadRequestBodyItems0
}

// IsSuccess returns true when this servers reset bad request response has a 2xx status code
func (o *ServersResetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this servers reset bad request response has a 3xx status code
func (o *ServersResetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this servers reset bad request response has a 4xx status code
func (o *ServersResetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this servers reset bad request response has a 5xx status code
func (o *ServersResetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this servers reset bad request response a status code equal to that given
func (o *ServersResetBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ServersResetBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reset][%d] serversResetBadRequest  %+v", 400, o.Payload)
}

func (o *ServersResetBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reset][%d] serversResetBadRequest  %+v", 400, o.Payload)
}

func (o *ServersResetBadRequest) GetPayload() []*ServersResetBadRequestBodyItems0 {
	return o.Payload
}

func (o *ServersResetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersResetUnauthorized creates a ServersResetUnauthorized with default headers values
func NewServersResetUnauthorized() *ServersResetUnauthorized {
	return &ServersResetUnauthorized{}
}

/*
ServersResetUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ServersResetUnauthorized struct {
	Payload *ServersResetUnauthorizedBody
}

// IsSuccess returns true when this servers reset unauthorized response has a 2xx status code
func (o *ServersResetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this servers reset unauthorized response has a 3xx status code
func (o *ServersResetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this servers reset unauthorized response has a 4xx status code
func (o *ServersResetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this servers reset unauthorized response has a 5xx status code
func (o *ServersResetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this servers reset unauthorized response a status code equal to that given
func (o *ServersResetUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ServersResetUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reset][%d] serversResetUnauthorized  %+v", 401, o.Payload)
}

func (o *ServersResetUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reset][%d] serversResetUnauthorized  %+v", 401, o.Payload)
}

func (o *ServersResetUnauthorized) GetPayload() *ServersResetUnauthorizedBody {
	return o.Payload
}

func (o *ServersResetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ServersResetUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersResetForbidden creates a ServersResetForbidden with default headers values
func NewServersResetForbidden() *ServersResetForbidden {
	return &ServersResetForbidden{}
}

/*
ServersResetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ServersResetForbidden struct {
	Payload *ServersResetForbiddenBody
}

// IsSuccess returns true when this servers reset forbidden response has a 2xx status code
func (o *ServersResetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this servers reset forbidden response has a 3xx status code
func (o *ServersResetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this servers reset forbidden response has a 4xx status code
func (o *ServersResetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this servers reset forbidden response has a 5xx status code
func (o *ServersResetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this servers reset forbidden response a status code equal to that given
func (o *ServersResetForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ServersResetForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reset][%d] serversResetForbidden  %+v", 403, o.Payload)
}

func (o *ServersResetForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reset][%d] serversResetForbidden  %+v", 403, o.Payload)
}

func (o *ServersResetForbidden) GetPayload() *ServersResetForbiddenBody {
	return o.Payload
}

func (o *ServersResetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ServersResetForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersResetNotFound creates a ServersResetNotFound with default headers values
func NewServersResetNotFound() *ServersResetNotFound {
	return &ServersResetNotFound{}
}

/*
ServersResetNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ServersResetNotFound struct {
	Payload *ServersResetNotFoundBody
}

// IsSuccess returns true when this servers reset not found response has a 2xx status code
func (o *ServersResetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this servers reset not found response has a 3xx status code
func (o *ServersResetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this servers reset not found response has a 4xx status code
func (o *ServersResetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this servers reset not found response has a 5xx status code
func (o *ServersResetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this servers reset not found response a status code equal to that given
func (o *ServersResetNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ServersResetNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reset][%d] serversResetNotFound  %+v", 404, o.Payload)
}

func (o *ServersResetNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reset][%d] serversResetNotFound  %+v", 404, o.Payload)
}

func (o *ServersResetNotFound) GetPayload() *ServersResetNotFoundBody {
	return o.Payload
}

func (o *ServersResetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ServersResetNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersResetInternalServerError creates a ServersResetInternalServerError with default headers values
func NewServersResetInternalServerError() *ServersResetInternalServerError {
	return &ServersResetInternalServerError{}
}

/*
ServersResetInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ServersResetInternalServerError struct {
}

// IsSuccess returns true when this servers reset internal server error response has a 2xx status code
func (o *ServersResetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this servers reset internal server error response has a 3xx status code
func (o *ServersResetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this servers reset internal server error response has a 4xx status code
func (o *ServersResetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this servers reset internal server error response has a 5xx status code
func (o *ServersResetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this servers reset internal server error response a status code equal to that given
func (o *ServersResetInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ServersResetInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reset][%d] serversResetInternalServerError ", 500)
}

func (o *ServersResetInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reset][%d] serversResetInternalServerError ", 500)
}

func (o *ServersResetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
ServersResetBadRequestBodyItems0 servers reset bad request body items0
swagger:model ServersResetBadRequestBodyItems0
*/
type ServersResetBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this servers reset bad request body items0
func (o *ServersResetBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this servers reset bad request body items0 based on context it is used
func (o *ServersResetBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ServersResetBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ServersResetBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res ServersResetBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ServersResetBody servers reset body
swagger:model ServersResetBody
*/
type ServersResetBody struct {

	// project Id
	ProjectID int32 `json:"projectId,omitempty"`

	// server ids
	ServerIds []int32 `json:"serverIds"`

	// status
	// Enum: [100 200 250 300 400 500 600 700 800]
	Status int32 `json:"status,omitempty"`
}

// Validate validates this servers reset body
func (o *ServersResetBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var serversResetBodyTypeStatusPropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[100,200,250,300,400,500,600,700,800]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		serversResetBodyTypeStatusPropEnum = append(serversResetBodyTypeStatusPropEnum, v)
	}
}

// prop value enum
func (o *ServersResetBody) validateStatusEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, serversResetBodyTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *ServersResetBody) validateStatus(formats strfmt.Registry) error {
	if swag.IsZero(o.Status) { // not required
		return nil
	}

	// value enum
	if err := o.validateStatusEnum("body"+"."+"status", "body", o.Status); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this servers reset body based on context it is used
func (o *ServersResetBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ServersResetBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ServersResetBody) UnmarshalBinary(b []byte) error {
	var res ServersResetBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ServersResetForbiddenBody servers reset forbidden body
swagger:model ServersResetForbiddenBody
*/
type ServersResetForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this servers reset forbidden body
func (o *ServersResetForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this servers reset forbidden body based on context it is used
func (o *ServersResetForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ServersResetForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ServersResetForbiddenBody) UnmarshalBinary(b []byte) error {
	var res ServersResetForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ServersResetNotFoundBody servers reset not found body
swagger:model ServersResetNotFoundBody
*/
type ServersResetNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this servers reset not found body
func (o *ServersResetNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this servers reset not found body based on context it is used
func (o *ServersResetNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ServersResetNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ServersResetNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ServersResetNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ServersResetUnauthorizedBody servers reset unauthorized body
swagger:model ServersResetUnauthorizedBody
*/
type ServersResetUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this servers reset unauthorized body
func (o *ServersResetUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this servers reset unauthorized body based on context it is used
func (o *ServersResetUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ServersResetUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ServersResetUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res ServersResetUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
