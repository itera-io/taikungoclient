// Code generated by go-swagger; DO NOT EDIT.

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ServersRebootReader is a Reader for the ServersReboot structure.
type ServersRebootReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServersRebootReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServersRebootOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewServersRebootBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewServersRebootUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewServersRebootForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewServersRebootNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewServersRebootTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewServersRebootInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewServersRebootOK creates a ServersRebootOK with default headers values
func NewServersRebootOK() *ServersRebootOK {
	return &ServersRebootOK{}
}

/* ServersRebootOK describes a response with status code 200, with default header values.

Success
*/
type ServersRebootOK struct {
	Payload models.Unit
}

func (o *ServersRebootOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reboot][%d] serversRebootOK  %+v", 200, o.Payload)
}
func (o *ServersRebootOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *ServersRebootOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersRebootBadRequest creates a ServersRebootBadRequest with default headers values
func NewServersRebootBadRequest() *ServersRebootBadRequest {
	return &ServersRebootBadRequest{}
}

/* ServersRebootBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ServersRebootBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *ServersRebootBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reboot][%d] serversRebootBadRequest  %+v", 400, o.Payload)
}
func (o *ServersRebootBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *ServersRebootBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersRebootUnauthorized creates a ServersRebootUnauthorized with default headers values
func NewServersRebootUnauthorized() *ServersRebootUnauthorized {
	return &ServersRebootUnauthorized{}
}

/* ServersRebootUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ServersRebootUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *ServersRebootUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reboot][%d] serversRebootUnauthorized  %+v", 401, o.Payload)
}
func (o *ServersRebootUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ServersRebootUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersRebootForbidden creates a ServersRebootForbidden with default headers values
func NewServersRebootForbidden() *ServersRebootForbidden {
	return &ServersRebootForbidden{}
}

/* ServersRebootForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ServersRebootForbidden struct {
	Payload *models.ProblemDetails
}

func (o *ServersRebootForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reboot][%d] serversRebootForbidden  %+v", 403, o.Payload)
}
func (o *ServersRebootForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ServersRebootForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersRebootNotFound creates a ServersRebootNotFound with default headers values
func NewServersRebootNotFound() *ServersRebootNotFound {
	return &ServersRebootNotFound{}
}

/* ServersRebootNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ServersRebootNotFound struct {
	Payload *models.ProblemDetails
}

func (o *ServersRebootNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reboot][%d] serversRebootNotFound  %+v", 404, o.Payload)
}
func (o *ServersRebootNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ServersRebootNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersRebootTooManyRequests creates a ServersRebootTooManyRequests with default headers values
func NewServersRebootTooManyRequests() *ServersRebootTooManyRequests {
	return &ServersRebootTooManyRequests{}
}

/* ServersRebootTooManyRequests describes a response with status code 429, with default header values.

Client Error
*/
type ServersRebootTooManyRequests struct {
	Payload *models.ProblemDetails
}

func (o *ServersRebootTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reboot][%d] serversRebootTooManyRequests  %+v", 429, o.Payload)
}
func (o *ServersRebootTooManyRequests) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ServersRebootTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServersRebootInternalServerError creates a ServersRebootInternalServerError with default headers values
func NewServersRebootInternalServerError() *ServersRebootInternalServerError {
	return &ServersRebootInternalServerError{}
}

/* ServersRebootInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ServersRebootInternalServerError struct {
}

func (o *ServersRebootInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Servers/reboot][%d] serversRebootInternalServerError ", 500)
}

func (o *ServersRebootInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
