// Code generated by go-swagger; DO NOT EDIT.

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewServersDetailsParams creates a new ServersDetailsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewServersDetailsParams() *ServersDetailsParams {
	return &ServersDetailsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewServersDetailsParamsWithTimeout creates a new ServersDetailsParams object
// with the ability to set a timeout on a request.
func NewServersDetailsParamsWithTimeout(timeout time.Duration) *ServersDetailsParams {
	return &ServersDetailsParams{
		timeout: timeout,
	}
}

// NewServersDetailsParamsWithContext creates a new ServersDetailsParams object
// with the ability to set a context for a request.
func NewServersDetailsParamsWithContext(ctx context.Context) *ServersDetailsParams {
	return &ServersDetailsParams{
		Context: ctx,
	}
}

// NewServersDetailsParamsWithHTTPClient creates a new ServersDetailsParams object
// with the ability to set a custom HTTPClient for a request.
func NewServersDetailsParamsWithHTTPClient(client *http.Client) *ServersDetailsParams {
	return &ServersDetailsParams{
		HTTPClient: client,
	}
}

/* ServersDetailsParams contains all the parameters to send to the API endpoint
   for the servers details operation.

   Typically these are written to a http.Request.
*/
type ServersDetailsParams struct {

	// ProjectID.
	//
	// Format: int32
	ProjectID int32

	// SortBy.
	SortBy *string

	// SortDirection.
	SortDirection *string

	// V.
	V string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the servers details params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ServersDetailsParams) WithDefaults() *ServersDetailsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the servers details params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ServersDetailsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the servers details params
func (o *ServersDetailsParams) WithTimeout(timeout time.Duration) *ServersDetailsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the servers details params
func (o *ServersDetailsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the servers details params
func (o *ServersDetailsParams) WithContext(ctx context.Context) *ServersDetailsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the servers details params
func (o *ServersDetailsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the servers details params
func (o *ServersDetailsParams) WithHTTPClient(client *http.Client) *ServersDetailsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the servers details params
func (o *ServersDetailsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithProjectID adds the projectID to the servers details params
func (o *ServersDetailsParams) WithProjectID(projectID int32) *ServersDetailsParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the servers details params
func (o *ServersDetailsParams) SetProjectID(projectID int32) {
	o.ProjectID = projectID
}

// WithSortBy adds the sortBy to the servers details params
func (o *ServersDetailsParams) WithSortBy(sortBy *string) *ServersDetailsParams {
	o.SetSortBy(sortBy)
	return o
}

// SetSortBy adds the sortBy to the servers details params
func (o *ServersDetailsParams) SetSortBy(sortBy *string) {
	o.SortBy = sortBy
}

// WithSortDirection adds the sortDirection to the servers details params
func (o *ServersDetailsParams) WithSortDirection(sortDirection *string) *ServersDetailsParams {
	o.SetSortDirection(sortDirection)
	return o
}

// SetSortDirection adds the sortDirection to the servers details params
func (o *ServersDetailsParams) SetSortDirection(sortDirection *string) {
	o.SortDirection = sortDirection
}

// WithV adds the v to the servers details params
func (o *ServersDetailsParams) WithV(v string) *ServersDetailsParams {
	o.SetV(v)
	return o
}

// SetV adds the v to the servers details params
func (o *ServersDetailsParams) SetV(v string) {
	o.V = v
}

// WriteToRequest writes these params to a swagger request
func (o *ServersDetailsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param projectId
	if err := r.SetPathParam("projectId", swag.FormatInt32(o.ProjectID)); err != nil {
		return err
	}

	if o.SortBy != nil {

		// query param sortBy
		var qrSortBy string

		if o.SortBy != nil {
			qrSortBy = *o.SortBy
		}
		qSortBy := qrSortBy
		if qSortBy != "" {

			if err := r.SetQueryParam("sortBy", qSortBy); err != nil {
				return err
			}
		}
	}

	if o.SortDirection != nil {

		// query param sortDirection
		var qrSortDirection string

		if o.SortDirection != nil {
			qrSortDirection = *o.SortDirection
		}
		qSortDirection := qrSortDirection
		if qSortDirection != "" {

			if err := r.SetQueryParam("sortDirection", qSortDirection); err != nil {
				return err
			}
		}
	}

	// path param v
	if err := r.SetPathParam("v", o.V); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
