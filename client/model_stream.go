/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the Stream type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Stream{}

// Stream struct for Stream
type Stream struct {
	Job NullableString `json:"job,omitempty"`
	Namespace NullableString `json:"namespace,omitempty"`
	Pod NullableString `json:"pod,omitempty"`
	PodTemplateHash NullableString `json:"podTemplateHash,omitempty"`
	StreamStream NullableString `json:"streamStream,omitempty"`
	App NullableString `json:"app,omitempty"`
	Container NullableString `json:"container,omitempty"`
	Filename NullableString `json:"filename,omitempty"`
	Tier NullableString `json:"tier,omitempty"`
	Component NullableString `json:"component,omitempty"`
}

// NewStream instantiates a new Stream object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStream() *Stream {
	this := Stream{}
	return &this
}

// NewStreamWithDefaults instantiates a new Stream object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStreamWithDefaults() *Stream {
	this := Stream{}
	return &this
}

// GetJob returns the Job field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Stream) GetJob() string {
	if o == nil || IsNil(o.Job.Get()) {
		var ret string
		return ret
	}
	return *o.Job.Get()
}

// GetJobOk returns a tuple with the Job field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Stream) GetJobOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Job.Get(), o.Job.IsSet()
}

// HasJob returns a boolean if a field has been set.
func (o *Stream) HasJob() bool {
	if o != nil && o.Job.IsSet() {
		return true
	}

	return false
}

// SetJob gets a reference to the given NullableString and assigns it to the Job field.
func (o *Stream) SetJob(v string) {
	o.Job.Set(&v)
}
// SetJobNil sets the value for Job to be an explicit nil
func (o *Stream) SetJobNil() {
	o.Job.Set(nil)
}

// UnsetJob ensures that no value is present for Job, not even an explicit nil
func (o *Stream) UnsetJob() {
	o.Job.Unset()
}

// GetNamespace returns the Namespace field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Stream) GetNamespace() string {
	if o == nil || IsNil(o.Namespace.Get()) {
		var ret string
		return ret
	}
	return *o.Namespace.Get()
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Stream) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Namespace.Get(), o.Namespace.IsSet()
}

// HasNamespace returns a boolean if a field has been set.
func (o *Stream) HasNamespace() bool {
	if o != nil && o.Namespace.IsSet() {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given NullableString and assigns it to the Namespace field.
func (o *Stream) SetNamespace(v string) {
	o.Namespace.Set(&v)
}
// SetNamespaceNil sets the value for Namespace to be an explicit nil
func (o *Stream) SetNamespaceNil() {
	o.Namespace.Set(nil)
}

// UnsetNamespace ensures that no value is present for Namespace, not even an explicit nil
func (o *Stream) UnsetNamespace() {
	o.Namespace.Unset()
}

// GetPod returns the Pod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Stream) GetPod() string {
	if o == nil || IsNil(o.Pod.Get()) {
		var ret string
		return ret
	}
	return *o.Pod.Get()
}

// GetPodOk returns a tuple with the Pod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Stream) GetPodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pod.Get(), o.Pod.IsSet()
}

// HasPod returns a boolean if a field has been set.
func (o *Stream) HasPod() bool {
	if o != nil && o.Pod.IsSet() {
		return true
	}

	return false
}

// SetPod gets a reference to the given NullableString and assigns it to the Pod field.
func (o *Stream) SetPod(v string) {
	o.Pod.Set(&v)
}
// SetPodNil sets the value for Pod to be an explicit nil
func (o *Stream) SetPodNil() {
	o.Pod.Set(nil)
}

// UnsetPod ensures that no value is present for Pod, not even an explicit nil
func (o *Stream) UnsetPod() {
	o.Pod.Unset()
}

// GetPodTemplateHash returns the PodTemplateHash field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Stream) GetPodTemplateHash() string {
	if o == nil || IsNil(o.PodTemplateHash.Get()) {
		var ret string
		return ret
	}
	return *o.PodTemplateHash.Get()
}

// GetPodTemplateHashOk returns a tuple with the PodTemplateHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Stream) GetPodTemplateHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PodTemplateHash.Get(), o.PodTemplateHash.IsSet()
}

// HasPodTemplateHash returns a boolean if a field has been set.
func (o *Stream) HasPodTemplateHash() bool {
	if o != nil && o.PodTemplateHash.IsSet() {
		return true
	}

	return false
}

// SetPodTemplateHash gets a reference to the given NullableString and assigns it to the PodTemplateHash field.
func (o *Stream) SetPodTemplateHash(v string) {
	o.PodTemplateHash.Set(&v)
}
// SetPodTemplateHashNil sets the value for PodTemplateHash to be an explicit nil
func (o *Stream) SetPodTemplateHashNil() {
	o.PodTemplateHash.Set(nil)
}

// UnsetPodTemplateHash ensures that no value is present for PodTemplateHash, not even an explicit nil
func (o *Stream) UnsetPodTemplateHash() {
	o.PodTemplateHash.Unset()
}

// GetStreamStream returns the StreamStream field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Stream) GetStreamStream() string {
	if o == nil || IsNil(o.StreamStream.Get()) {
		var ret string
		return ret
	}
	return *o.StreamStream.Get()
}

// GetStreamStreamOk returns a tuple with the StreamStream field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Stream) GetStreamStreamOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StreamStream.Get(), o.StreamStream.IsSet()
}

// HasStreamStream returns a boolean if a field has been set.
func (o *Stream) HasStreamStream() bool {
	if o != nil && o.StreamStream.IsSet() {
		return true
	}

	return false
}

// SetStreamStream gets a reference to the given NullableString and assigns it to the StreamStream field.
func (o *Stream) SetStreamStream(v string) {
	o.StreamStream.Set(&v)
}
// SetStreamStreamNil sets the value for StreamStream to be an explicit nil
func (o *Stream) SetStreamStreamNil() {
	o.StreamStream.Set(nil)
}

// UnsetStreamStream ensures that no value is present for StreamStream, not even an explicit nil
func (o *Stream) UnsetStreamStream() {
	o.StreamStream.Unset()
}

// GetApp returns the App field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Stream) GetApp() string {
	if o == nil || IsNil(o.App.Get()) {
		var ret string
		return ret
	}
	return *o.App.Get()
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Stream) GetAppOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.App.Get(), o.App.IsSet()
}

// HasApp returns a boolean if a field has been set.
func (o *Stream) HasApp() bool {
	if o != nil && o.App.IsSet() {
		return true
	}

	return false
}

// SetApp gets a reference to the given NullableString and assigns it to the App field.
func (o *Stream) SetApp(v string) {
	o.App.Set(&v)
}
// SetAppNil sets the value for App to be an explicit nil
func (o *Stream) SetAppNil() {
	o.App.Set(nil)
}

// UnsetApp ensures that no value is present for App, not even an explicit nil
func (o *Stream) UnsetApp() {
	o.App.Unset()
}

// GetContainer returns the Container field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Stream) GetContainer() string {
	if o == nil || IsNil(o.Container.Get()) {
		var ret string
		return ret
	}
	return *o.Container.Get()
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Stream) GetContainerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Container.Get(), o.Container.IsSet()
}

// HasContainer returns a boolean if a field has been set.
func (o *Stream) HasContainer() bool {
	if o != nil && o.Container.IsSet() {
		return true
	}

	return false
}

// SetContainer gets a reference to the given NullableString and assigns it to the Container field.
func (o *Stream) SetContainer(v string) {
	o.Container.Set(&v)
}
// SetContainerNil sets the value for Container to be an explicit nil
func (o *Stream) SetContainerNil() {
	o.Container.Set(nil)
}

// UnsetContainer ensures that no value is present for Container, not even an explicit nil
func (o *Stream) UnsetContainer() {
	o.Container.Unset()
}

// GetFilename returns the Filename field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Stream) GetFilename() string {
	if o == nil || IsNil(o.Filename.Get()) {
		var ret string
		return ret
	}
	return *o.Filename.Get()
}

// GetFilenameOk returns a tuple with the Filename field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Stream) GetFilenameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Filename.Get(), o.Filename.IsSet()
}

// HasFilename returns a boolean if a field has been set.
func (o *Stream) HasFilename() bool {
	if o != nil && o.Filename.IsSet() {
		return true
	}

	return false
}

// SetFilename gets a reference to the given NullableString and assigns it to the Filename field.
func (o *Stream) SetFilename(v string) {
	o.Filename.Set(&v)
}
// SetFilenameNil sets the value for Filename to be an explicit nil
func (o *Stream) SetFilenameNil() {
	o.Filename.Set(nil)
}

// UnsetFilename ensures that no value is present for Filename, not even an explicit nil
func (o *Stream) UnsetFilename() {
	o.Filename.Unset()
}

// GetTier returns the Tier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Stream) GetTier() string {
	if o == nil || IsNil(o.Tier.Get()) {
		var ret string
		return ret
	}
	return *o.Tier.Get()
}

// GetTierOk returns a tuple with the Tier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Stream) GetTierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tier.Get(), o.Tier.IsSet()
}

// HasTier returns a boolean if a field has been set.
func (o *Stream) HasTier() bool {
	if o != nil && o.Tier.IsSet() {
		return true
	}

	return false
}

// SetTier gets a reference to the given NullableString and assigns it to the Tier field.
func (o *Stream) SetTier(v string) {
	o.Tier.Set(&v)
}
// SetTierNil sets the value for Tier to be an explicit nil
func (o *Stream) SetTierNil() {
	o.Tier.Set(nil)
}

// UnsetTier ensures that no value is present for Tier, not even an explicit nil
func (o *Stream) UnsetTier() {
	o.Tier.Unset()
}

// GetComponent returns the Component field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Stream) GetComponent() string {
	if o == nil || IsNil(o.Component.Get()) {
		var ret string
		return ret
	}
	return *o.Component.Get()
}

// GetComponentOk returns a tuple with the Component field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Stream) GetComponentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Component.Get(), o.Component.IsSet()
}

// HasComponent returns a boolean if a field has been set.
func (o *Stream) HasComponent() bool {
	if o != nil && o.Component.IsSet() {
		return true
	}

	return false
}

// SetComponent gets a reference to the given NullableString and assigns it to the Component field.
func (o *Stream) SetComponent(v string) {
	o.Component.Set(&v)
}
// SetComponentNil sets the value for Component to be an explicit nil
func (o *Stream) SetComponentNil() {
	o.Component.Set(nil)
}

// UnsetComponent ensures that no value is present for Component, not even an explicit nil
func (o *Stream) UnsetComponent() {
	o.Component.Unset()
}

func (o Stream) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Stream) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Job.IsSet() {
		toSerialize["job"] = o.Job.Get()
	}
	if o.Namespace.IsSet() {
		toSerialize["namespace"] = o.Namespace.Get()
	}
	if o.Pod.IsSet() {
		toSerialize["pod"] = o.Pod.Get()
	}
	if o.PodTemplateHash.IsSet() {
		toSerialize["podTemplateHash"] = o.PodTemplateHash.Get()
	}
	if o.StreamStream.IsSet() {
		toSerialize["streamStream"] = o.StreamStream.Get()
	}
	if o.App.IsSet() {
		toSerialize["app"] = o.App.Get()
	}
	if o.Container.IsSet() {
		toSerialize["container"] = o.Container.Get()
	}
	if o.Filename.IsSet() {
		toSerialize["filename"] = o.Filename.Get()
	}
	if o.Tier.IsSet() {
		toSerialize["tier"] = o.Tier.Get()
	}
	if o.Component.IsSet() {
		toSerialize["component"] = o.Component.Get()
	}
	return toSerialize, nil
}

type NullableStream struct {
	value *Stream
	isSet bool
}

func (v NullableStream) Get() *Stream {
	return v.value
}

func (v *NullableStream) Set(val *Stream) {
	v.value = val
	v.isSet = true
}

func (v NullableStream) IsSet() bool {
	return v.isSet
}

func (v *NullableStream) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStream(val *Stream) *NullableStream {
	return &NullableStream{value: val, isSet: true}
}

func (v NullableStream) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStream) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


