// Code generated by go-swagger; DO NOT EDIT.

package ops_credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// OpsCredentialsDeleteReader is a Reader for the OpsCredentialsDelete structure.
type OpsCredentialsDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OpsCredentialsDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOpsCredentialsDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewOpsCredentialsDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOpsCredentialsDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewOpsCredentialsDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewOpsCredentialsDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOpsCredentialsDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewOpsCredentialsDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOpsCredentialsDeleteOK creates a OpsCredentialsDeleteOK with default headers values
func NewOpsCredentialsDeleteOK() *OpsCredentialsDeleteOK {
	return &OpsCredentialsDeleteOK{}
}

/*
OpsCredentialsDeleteOK describes a response with status code 200, with default header values.

Success
*/
type OpsCredentialsDeleteOK struct {
	Payload models.Unit
}

// IsSuccess returns true when this ops credentials delete o k response has a 2xx status code
func (o *OpsCredentialsDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this ops credentials delete o k response has a 3xx status code
func (o *OpsCredentialsDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ops credentials delete o k response has a 4xx status code
func (o *OpsCredentialsDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this ops credentials delete o k response has a 5xx status code
func (o *OpsCredentialsDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this ops credentials delete o k response a status code equal to that given
func (o *OpsCredentialsDeleteOK) IsCode(code int) bool {
	return code == 200
}

func (o *OpsCredentialsDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/OpsCredentials/{id}][%d] opsCredentialsDeleteOK  %+v", 200, o.Payload)
}

func (o *OpsCredentialsDeleteOK) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/OpsCredentials/{id}][%d] opsCredentialsDeleteOK  %+v", 200, o.Payload)
}

func (o *OpsCredentialsDeleteOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *OpsCredentialsDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpsCredentialsDeleteNoContent creates a OpsCredentialsDeleteNoContent with default headers values
func NewOpsCredentialsDeleteNoContent() *OpsCredentialsDeleteNoContent {
	return &OpsCredentialsDeleteNoContent{}
}

/*
OpsCredentialsDeleteNoContent describes a response with status code 204, with default header values.

Success
*/
type OpsCredentialsDeleteNoContent struct {
}

// IsSuccess returns true when this ops credentials delete no content response has a 2xx status code
func (o *OpsCredentialsDeleteNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this ops credentials delete no content response has a 3xx status code
func (o *OpsCredentialsDeleteNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ops credentials delete no content response has a 4xx status code
func (o *OpsCredentialsDeleteNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this ops credentials delete no content response has a 5xx status code
func (o *OpsCredentialsDeleteNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this ops credentials delete no content response a status code equal to that given
func (o *OpsCredentialsDeleteNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *OpsCredentialsDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/OpsCredentials/{id}][%d] opsCredentialsDeleteNoContent ", 204)
}

func (o *OpsCredentialsDeleteNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/OpsCredentials/{id}][%d] opsCredentialsDeleteNoContent ", 204)
}

func (o *OpsCredentialsDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOpsCredentialsDeleteBadRequest creates a OpsCredentialsDeleteBadRequest with default headers values
func NewOpsCredentialsDeleteBadRequest() *OpsCredentialsDeleteBadRequest {
	return &OpsCredentialsDeleteBadRequest{}
}

/*
OpsCredentialsDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type OpsCredentialsDeleteBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this ops credentials delete bad request response has a 2xx status code
func (o *OpsCredentialsDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ops credentials delete bad request response has a 3xx status code
func (o *OpsCredentialsDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ops credentials delete bad request response has a 4xx status code
func (o *OpsCredentialsDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this ops credentials delete bad request response has a 5xx status code
func (o *OpsCredentialsDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this ops credentials delete bad request response a status code equal to that given
func (o *OpsCredentialsDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *OpsCredentialsDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/OpsCredentials/{id}][%d] opsCredentialsDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *OpsCredentialsDeleteBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/OpsCredentials/{id}][%d] opsCredentialsDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *OpsCredentialsDeleteBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *OpsCredentialsDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpsCredentialsDeleteUnauthorized creates a OpsCredentialsDeleteUnauthorized with default headers values
func NewOpsCredentialsDeleteUnauthorized() *OpsCredentialsDeleteUnauthorized {
	return &OpsCredentialsDeleteUnauthorized{}
}

/*
OpsCredentialsDeleteUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type OpsCredentialsDeleteUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this ops credentials delete unauthorized response has a 2xx status code
func (o *OpsCredentialsDeleteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ops credentials delete unauthorized response has a 3xx status code
func (o *OpsCredentialsDeleteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ops credentials delete unauthorized response has a 4xx status code
func (o *OpsCredentialsDeleteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this ops credentials delete unauthorized response has a 5xx status code
func (o *OpsCredentialsDeleteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this ops credentials delete unauthorized response a status code equal to that given
func (o *OpsCredentialsDeleteUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *OpsCredentialsDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/OpsCredentials/{id}][%d] opsCredentialsDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *OpsCredentialsDeleteUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/OpsCredentials/{id}][%d] opsCredentialsDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *OpsCredentialsDeleteUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *OpsCredentialsDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpsCredentialsDeleteForbidden creates a OpsCredentialsDeleteForbidden with default headers values
func NewOpsCredentialsDeleteForbidden() *OpsCredentialsDeleteForbidden {
	return &OpsCredentialsDeleteForbidden{}
}

/*
OpsCredentialsDeleteForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type OpsCredentialsDeleteForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this ops credentials delete forbidden response has a 2xx status code
func (o *OpsCredentialsDeleteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ops credentials delete forbidden response has a 3xx status code
func (o *OpsCredentialsDeleteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ops credentials delete forbidden response has a 4xx status code
func (o *OpsCredentialsDeleteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this ops credentials delete forbidden response has a 5xx status code
func (o *OpsCredentialsDeleteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this ops credentials delete forbidden response a status code equal to that given
func (o *OpsCredentialsDeleteForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *OpsCredentialsDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/OpsCredentials/{id}][%d] opsCredentialsDeleteForbidden  %+v", 403, o.Payload)
}

func (o *OpsCredentialsDeleteForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/OpsCredentials/{id}][%d] opsCredentialsDeleteForbidden  %+v", 403, o.Payload)
}

func (o *OpsCredentialsDeleteForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *OpsCredentialsDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpsCredentialsDeleteNotFound creates a OpsCredentialsDeleteNotFound with default headers values
func NewOpsCredentialsDeleteNotFound() *OpsCredentialsDeleteNotFound {
	return &OpsCredentialsDeleteNotFound{}
}

/*
OpsCredentialsDeleteNotFound describes a response with status code 404, with default header values.

Not Found
*/
type OpsCredentialsDeleteNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this ops credentials delete not found response has a 2xx status code
func (o *OpsCredentialsDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ops credentials delete not found response has a 3xx status code
func (o *OpsCredentialsDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ops credentials delete not found response has a 4xx status code
func (o *OpsCredentialsDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this ops credentials delete not found response has a 5xx status code
func (o *OpsCredentialsDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this ops credentials delete not found response a status code equal to that given
func (o *OpsCredentialsDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *OpsCredentialsDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/OpsCredentials/{id}][%d] opsCredentialsDeleteNotFound  %+v", 404, o.Payload)
}

func (o *OpsCredentialsDeleteNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/OpsCredentials/{id}][%d] opsCredentialsDeleteNotFound  %+v", 404, o.Payload)
}

func (o *OpsCredentialsDeleteNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *OpsCredentialsDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpsCredentialsDeleteInternalServerError creates a OpsCredentialsDeleteInternalServerError with default headers values
func NewOpsCredentialsDeleteInternalServerError() *OpsCredentialsDeleteInternalServerError {
	return &OpsCredentialsDeleteInternalServerError{}
}

/*
OpsCredentialsDeleteInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type OpsCredentialsDeleteInternalServerError struct {
}

// IsSuccess returns true when this ops credentials delete internal server error response has a 2xx status code
func (o *OpsCredentialsDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ops credentials delete internal server error response has a 3xx status code
func (o *OpsCredentialsDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ops credentials delete internal server error response has a 4xx status code
func (o *OpsCredentialsDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this ops credentials delete internal server error response has a 5xx status code
func (o *OpsCredentialsDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this ops credentials delete internal server error response a status code equal to that given
func (o *OpsCredentialsDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *OpsCredentialsDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/OpsCredentials/{id}][%d] opsCredentialsDeleteInternalServerError ", 500)
}

func (o *OpsCredentialsDeleteInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/OpsCredentials/{id}][%d] opsCredentialsDeleteInternalServerError ", 500)
}

func (o *OpsCredentialsDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
