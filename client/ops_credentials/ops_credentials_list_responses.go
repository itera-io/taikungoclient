// Code generated by go-swagger; DO NOT EDIT.

package ops_credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// OpsCredentialsListReader is a Reader for the OpsCredentialsList structure.
type OpsCredentialsListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OpsCredentialsListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOpsCredentialsListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOpsCredentialsListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewOpsCredentialsListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewOpsCredentialsListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOpsCredentialsListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewOpsCredentialsListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOpsCredentialsListOK creates a OpsCredentialsListOK with default headers values
func NewOpsCredentialsListOK() *OpsCredentialsListOK {
	return &OpsCredentialsListOK{}
}

/*
OpsCredentialsListOK describes a response with status code 200, with default header values.

Success
*/
type OpsCredentialsListOK struct {
	Payload *OpsCredentialsListOKBody
}

// IsSuccess returns true when this ops credentials list o k response has a 2xx status code
func (o *OpsCredentialsListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this ops credentials list o k response has a 3xx status code
func (o *OpsCredentialsListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ops credentials list o k response has a 4xx status code
func (o *OpsCredentialsListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this ops credentials list o k response has a 5xx status code
func (o *OpsCredentialsListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this ops credentials list o k response a status code equal to that given
func (o *OpsCredentialsListOK) IsCode(code int) bool {
	return code == 200
}

func (o *OpsCredentialsListOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/OpsCredentials/list][%d] opsCredentialsListOK  %+v", 200, o.Payload)
}

func (o *OpsCredentialsListOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/OpsCredentials/list][%d] opsCredentialsListOK  %+v", 200, o.Payload)
}

func (o *OpsCredentialsListOK) GetPayload() *OpsCredentialsListOKBody {
	return o.Payload
}

func (o *OpsCredentialsListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OpsCredentialsListOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpsCredentialsListBadRequest creates a OpsCredentialsListBadRequest with default headers values
func NewOpsCredentialsListBadRequest() *OpsCredentialsListBadRequest {
	return &OpsCredentialsListBadRequest{}
}

/*
OpsCredentialsListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type OpsCredentialsListBadRequest struct {
	Payload []*OpsCredentialsListBadRequestBodyItems0
}

// IsSuccess returns true when this ops credentials list bad request response has a 2xx status code
func (o *OpsCredentialsListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ops credentials list bad request response has a 3xx status code
func (o *OpsCredentialsListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ops credentials list bad request response has a 4xx status code
func (o *OpsCredentialsListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this ops credentials list bad request response has a 5xx status code
func (o *OpsCredentialsListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this ops credentials list bad request response a status code equal to that given
func (o *OpsCredentialsListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *OpsCredentialsListBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/OpsCredentials/list][%d] opsCredentialsListBadRequest  %+v", 400, o.Payload)
}

func (o *OpsCredentialsListBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/OpsCredentials/list][%d] opsCredentialsListBadRequest  %+v", 400, o.Payload)
}

func (o *OpsCredentialsListBadRequest) GetPayload() []*OpsCredentialsListBadRequestBodyItems0 {
	return o.Payload
}

func (o *OpsCredentialsListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpsCredentialsListUnauthorized creates a OpsCredentialsListUnauthorized with default headers values
func NewOpsCredentialsListUnauthorized() *OpsCredentialsListUnauthorized {
	return &OpsCredentialsListUnauthorized{}
}

/*
OpsCredentialsListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type OpsCredentialsListUnauthorized struct {
	Payload *OpsCredentialsListUnauthorizedBody
}

// IsSuccess returns true when this ops credentials list unauthorized response has a 2xx status code
func (o *OpsCredentialsListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ops credentials list unauthorized response has a 3xx status code
func (o *OpsCredentialsListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ops credentials list unauthorized response has a 4xx status code
func (o *OpsCredentialsListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this ops credentials list unauthorized response has a 5xx status code
func (o *OpsCredentialsListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this ops credentials list unauthorized response a status code equal to that given
func (o *OpsCredentialsListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *OpsCredentialsListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/OpsCredentials/list][%d] opsCredentialsListUnauthorized  %+v", 401, o.Payload)
}

func (o *OpsCredentialsListUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/OpsCredentials/list][%d] opsCredentialsListUnauthorized  %+v", 401, o.Payload)
}

func (o *OpsCredentialsListUnauthorized) GetPayload() *OpsCredentialsListUnauthorizedBody {
	return o.Payload
}

func (o *OpsCredentialsListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OpsCredentialsListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpsCredentialsListForbidden creates a OpsCredentialsListForbidden with default headers values
func NewOpsCredentialsListForbidden() *OpsCredentialsListForbidden {
	return &OpsCredentialsListForbidden{}
}

/*
OpsCredentialsListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type OpsCredentialsListForbidden struct {
	Payload *OpsCredentialsListForbiddenBody
}

// IsSuccess returns true when this ops credentials list forbidden response has a 2xx status code
func (o *OpsCredentialsListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ops credentials list forbidden response has a 3xx status code
func (o *OpsCredentialsListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ops credentials list forbidden response has a 4xx status code
func (o *OpsCredentialsListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this ops credentials list forbidden response has a 5xx status code
func (o *OpsCredentialsListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this ops credentials list forbidden response a status code equal to that given
func (o *OpsCredentialsListForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *OpsCredentialsListForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/OpsCredentials/list][%d] opsCredentialsListForbidden  %+v", 403, o.Payload)
}

func (o *OpsCredentialsListForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/OpsCredentials/list][%d] opsCredentialsListForbidden  %+v", 403, o.Payload)
}

func (o *OpsCredentialsListForbidden) GetPayload() *OpsCredentialsListForbiddenBody {
	return o.Payload
}

func (o *OpsCredentialsListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OpsCredentialsListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpsCredentialsListNotFound creates a OpsCredentialsListNotFound with default headers values
func NewOpsCredentialsListNotFound() *OpsCredentialsListNotFound {
	return &OpsCredentialsListNotFound{}
}

/*
OpsCredentialsListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type OpsCredentialsListNotFound struct {
	Payload *OpsCredentialsListNotFoundBody
}

// IsSuccess returns true when this ops credentials list not found response has a 2xx status code
func (o *OpsCredentialsListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ops credentials list not found response has a 3xx status code
func (o *OpsCredentialsListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ops credentials list not found response has a 4xx status code
func (o *OpsCredentialsListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this ops credentials list not found response has a 5xx status code
func (o *OpsCredentialsListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this ops credentials list not found response a status code equal to that given
func (o *OpsCredentialsListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *OpsCredentialsListNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/OpsCredentials/list][%d] opsCredentialsListNotFound  %+v", 404, o.Payload)
}

func (o *OpsCredentialsListNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/OpsCredentials/list][%d] opsCredentialsListNotFound  %+v", 404, o.Payload)
}

func (o *OpsCredentialsListNotFound) GetPayload() *OpsCredentialsListNotFoundBody {
	return o.Payload
}

func (o *OpsCredentialsListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OpsCredentialsListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpsCredentialsListInternalServerError creates a OpsCredentialsListInternalServerError with default headers values
func NewOpsCredentialsListInternalServerError() *OpsCredentialsListInternalServerError {
	return &OpsCredentialsListInternalServerError{}
}

/*
OpsCredentialsListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type OpsCredentialsListInternalServerError struct {
}

// IsSuccess returns true when this ops credentials list internal server error response has a 2xx status code
func (o *OpsCredentialsListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ops credentials list internal server error response has a 3xx status code
func (o *OpsCredentialsListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ops credentials list internal server error response has a 4xx status code
func (o *OpsCredentialsListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this ops credentials list internal server error response has a 5xx status code
func (o *OpsCredentialsListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this ops credentials list internal server error response a status code equal to that given
func (o *OpsCredentialsListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *OpsCredentialsListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/OpsCredentials/list][%d] opsCredentialsListInternalServerError ", 500)
}

func (o *OpsCredentialsListInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/OpsCredentials/list][%d] opsCredentialsListInternalServerError ", 500)
}

func (o *OpsCredentialsListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
OpsCredentialsListBadRequestBodyItems0 ops credentials list bad request body items0
swagger:model OpsCredentialsListBadRequestBodyItems0
*/
type OpsCredentialsListBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this ops credentials list bad request body items0
func (o *OpsCredentialsListBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this ops credentials list bad request body items0 based on context it is used
func (o *OpsCredentialsListBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OpsCredentialsListBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OpsCredentialsListBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res OpsCredentialsListBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OpsCredentialsListForbiddenBody ops credentials list forbidden body
swagger:model OpsCredentialsListForbiddenBody
*/
type OpsCredentialsListForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this ops credentials list forbidden body
func (o *OpsCredentialsListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this ops credentials list forbidden body based on context it is used
func (o *OpsCredentialsListForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OpsCredentialsListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OpsCredentialsListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res OpsCredentialsListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OpsCredentialsListNotFoundBody ops credentials list not found body
swagger:model OpsCredentialsListNotFoundBody
*/
type OpsCredentialsListNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this ops credentials list not found body
func (o *OpsCredentialsListNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this ops credentials list not found body based on context it is used
func (o *OpsCredentialsListNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OpsCredentialsListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OpsCredentialsListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res OpsCredentialsListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OpsCredentialsListOKBody ops credentials list o k body
swagger:model OpsCredentialsListOKBody
*/
type OpsCredentialsListOKBody struct {

	// data
	Data []*OpsCredentialsListOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this ops credentials list o k body
func (o *OpsCredentialsListOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *OpsCredentialsListOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("opsCredentialsListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("opsCredentialsListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this ops credentials list o k body based on the context it is used
func (o *OpsCredentialsListOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *OpsCredentialsListOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("opsCredentialsListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("opsCredentialsListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *OpsCredentialsListOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OpsCredentialsListOKBody) UnmarshalBinary(b []byte) error {
	var res OpsCredentialsListOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OpsCredentialsListOKBodyDataItems0 ops credentials list o k body data items0
swagger:model OpsCredentialsListOKBodyDataItems0
*/
type OpsCredentialsListOKBodyDataItems0 struct {

	// created by
	CreatedBy string `json:"createdBy,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// is default
	IsDefault bool `json:"isDefault"`

	// is locked
	IsLocked bool `json:"isLocked"`

	// last modified
	LastModified string `json:"lastModified,omitempty"`

	// last modified by
	LastModifiedBy string `json:"lastModifiedBy,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// organization name
	OrganizationName string `json:"organizationName,omitempty"`

	// prometheus password
	PrometheusPassword string `json:"prometheusPassword,omitempty"`

	// prometheus Url
	PrometheusURL string `json:"prometheusUrl,omitempty"`

	// prometheus username
	PrometheusUsername string `json:"prometheusUsername,omitempty"`

	// rules
	Rules []*OpsCredentialsListOKBodyDataItems0RulesItems0 `json:"rules"`
}

// Validate validates this ops credentials list o k body data items0
func (o *OpsCredentialsListOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRules(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *OpsCredentialsListOKBodyDataItems0) validateRules(formats strfmt.Registry) error {
	if swag.IsZero(o.Rules) { // not required
		return nil
	}

	for i := 0; i < len(o.Rules); i++ {
		if swag.IsZero(o.Rules[i]) { // not required
			continue
		}

		if o.Rules[i] != nil {
			if err := o.Rules[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("rules" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("rules" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this ops credentials list o k body data items0 based on the context it is used
func (o *OpsCredentialsListOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateRules(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *OpsCredentialsListOKBodyDataItems0) contextValidateRules(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Rules); i++ {

		if o.Rules[i] != nil {
			if err := o.Rules[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("rules" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("rules" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *OpsCredentialsListOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OpsCredentialsListOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res OpsCredentialsListOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OpsCredentialsListOKBodyDataItems0RulesItems0 ops credentials list o k body data items0 rules items0
swagger:model OpsCredentialsListOKBodyDataItems0RulesItems0
*/
type OpsCredentialsListOKBodyDataItems0RulesItems0 struct {

	// prometheus rule Id
	PrometheusRuleID int32 `json:"prometheusRuleId,omitempty"`

	// prometheus rule name
	PrometheusRuleName string `json:"prometheusRuleName,omitempty"`
}

// Validate validates this ops credentials list o k body data items0 rules items0
func (o *OpsCredentialsListOKBodyDataItems0RulesItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this ops credentials list o k body data items0 rules items0 based on context it is used
func (o *OpsCredentialsListOKBodyDataItems0RulesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OpsCredentialsListOKBodyDataItems0RulesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OpsCredentialsListOKBodyDataItems0RulesItems0) UnmarshalBinary(b []byte) error {
	var res OpsCredentialsListOKBodyDataItems0RulesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OpsCredentialsListUnauthorizedBody ops credentials list unauthorized body
swagger:model OpsCredentialsListUnauthorizedBody
*/
type OpsCredentialsListUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this ops credentials list unauthorized body
func (o *OpsCredentialsListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this ops credentials list unauthorized body based on context it is used
func (o *OpsCredentialsListUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OpsCredentialsListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OpsCredentialsListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res OpsCredentialsListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
