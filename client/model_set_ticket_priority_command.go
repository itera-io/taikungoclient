/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the SetTicketPriorityCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetTicketPriorityCommand{}

// SetTicketPriorityCommand struct for SetTicketPriorityCommand
type SetTicketPriorityCommand struct {
	Id       NullableString  `json:"id,omitempty"`
	Priority *TicketPriority `json:"priority,omitempty"`
}

// NewSetTicketPriorityCommand instantiates a new SetTicketPriorityCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetTicketPriorityCommand() *SetTicketPriorityCommand {
	this := SetTicketPriorityCommand{}
	return &this
}

// NewSetTicketPriorityCommandWithDefaults instantiates a new SetTicketPriorityCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetTicketPriorityCommandWithDefaults() *SetTicketPriorityCommand {
	this := SetTicketPriorityCommand{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SetTicketPriorityCommand) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SetTicketPriorityCommand) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *SetTicketPriorityCommand) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *SetTicketPriorityCommand) SetId(v string) {
	o.Id.Set(&v)
}

// SetIdNil sets the value for Id to be an explicit nil
func (o *SetTicketPriorityCommand) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *SetTicketPriorityCommand) UnsetId() {
	o.Id.Unset()
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *SetTicketPriorityCommand) GetPriority() TicketPriority {
	if o == nil || IsNil(o.Priority) {
		var ret TicketPriority
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetTicketPriorityCommand) GetPriorityOk() (*TicketPriority, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *SetTicketPriorityCommand) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given TicketPriority and assigns it to the Priority field.
func (o *SetTicketPriorityCommand) SetPriority(v TicketPriority) {
	o.Priority = &v
}

func (o SetTicketPriorityCommand) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetTicketPriorityCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	return toSerialize, nil
}

type NullableSetTicketPriorityCommand struct {
	value *SetTicketPriorityCommand
	isSet bool
}

func (v NullableSetTicketPriorityCommand) Get() *SetTicketPriorityCommand {
	return v.value
}

func (v *NullableSetTicketPriorityCommand) Set(val *SetTicketPriorityCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableSetTicketPriorityCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableSetTicketPriorityCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetTicketPriorityCommand(val *SetTicketPriorityCommand) *NullableSetTicketPriorityCommand {
	return &NullableSetTicketPriorityCommand{value: val, isSet: true}
}

func (v NullableSetTicketPriorityCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetTicketPriorityCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
