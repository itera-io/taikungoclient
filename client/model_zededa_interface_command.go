/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the ZededaInterfaceCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ZededaInterfaceCommand{}

// ZededaInterfaceCommand struct for ZededaInterfaceCommand
type ZededaInterfaceCommand struct {
	ApiUrl NullableString `json:"apiUrl,omitempty"`
	ApiToken NullableString `json:"apiToken,omitempty"`
	Project NullableString `json:"project,omitempty"`
	EdgeNode NullableString `json:"edgeNode,omitempty"`
}

// NewZededaInterfaceCommand instantiates a new ZededaInterfaceCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZededaInterfaceCommand() *ZededaInterfaceCommand {
	this := ZededaInterfaceCommand{}
	return &this
}

// NewZededaInterfaceCommandWithDefaults instantiates a new ZededaInterfaceCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZededaInterfaceCommandWithDefaults() *ZededaInterfaceCommand {
	this := ZededaInterfaceCommand{}
	return &this
}

// GetApiUrl returns the ApiUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ZededaInterfaceCommand) GetApiUrl() string {
	if o == nil || IsNil(o.ApiUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ApiUrl.Get()
}

// GetApiUrlOk returns a tuple with the ApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ZededaInterfaceCommand) GetApiUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApiUrl.Get(), o.ApiUrl.IsSet()
}

// HasApiUrl returns a boolean if a field has been set.
func (o *ZededaInterfaceCommand) HasApiUrl() bool {
	if o != nil && o.ApiUrl.IsSet() {
		return true
	}

	return false
}

// SetApiUrl gets a reference to the given NullableString and assigns it to the ApiUrl field.
func (o *ZededaInterfaceCommand) SetApiUrl(v string) {
	o.ApiUrl.Set(&v)
}
// SetApiUrlNil sets the value for ApiUrl to be an explicit nil
func (o *ZededaInterfaceCommand) SetApiUrlNil() {
	o.ApiUrl.Set(nil)
}

// UnsetApiUrl ensures that no value is present for ApiUrl, not even an explicit nil
func (o *ZededaInterfaceCommand) UnsetApiUrl() {
	o.ApiUrl.Unset()
}

// GetApiToken returns the ApiToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ZededaInterfaceCommand) GetApiToken() string {
	if o == nil || IsNil(o.ApiToken.Get()) {
		var ret string
		return ret
	}
	return *o.ApiToken.Get()
}

// GetApiTokenOk returns a tuple with the ApiToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ZededaInterfaceCommand) GetApiTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApiToken.Get(), o.ApiToken.IsSet()
}

// HasApiToken returns a boolean if a field has been set.
func (o *ZededaInterfaceCommand) HasApiToken() bool {
	if o != nil && o.ApiToken.IsSet() {
		return true
	}

	return false
}

// SetApiToken gets a reference to the given NullableString and assigns it to the ApiToken field.
func (o *ZededaInterfaceCommand) SetApiToken(v string) {
	o.ApiToken.Set(&v)
}
// SetApiTokenNil sets the value for ApiToken to be an explicit nil
func (o *ZededaInterfaceCommand) SetApiTokenNil() {
	o.ApiToken.Set(nil)
}

// UnsetApiToken ensures that no value is present for ApiToken, not even an explicit nil
func (o *ZededaInterfaceCommand) UnsetApiToken() {
	o.ApiToken.Unset()
}

// GetProject returns the Project field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ZededaInterfaceCommand) GetProject() string {
	if o == nil || IsNil(o.Project.Get()) {
		var ret string
		return ret
	}
	return *o.Project.Get()
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ZededaInterfaceCommand) GetProjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Project.Get(), o.Project.IsSet()
}

// HasProject returns a boolean if a field has been set.
func (o *ZededaInterfaceCommand) HasProject() bool {
	if o != nil && o.Project.IsSet() {
		return true
	}

	return false
}

// SetProject gets a reference to the given NullableString and assigns it to the Project field.
func (o *ZededaInterfaceCommand) SetProject(v string) {
	o.Project.Set(&v)
}
// SetProjectNil sets the value for Project to be an explicit nil
func (o *ZededaInterfaceCommand) SetProjectNil() {
	o.Project.Set(nil)
}

// UnsetProject ensures that no value is present for Project, not even an explicit nil
func (o *ZededaInterfaceCommand) UnsetProject() {
	o.Project.Unset()
}

// GetEdgeNode returns the EdgeNode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ZededaInterfaceCommand) GetEdgeNode() string {
	if o == nil || IsNil(o.EdgeNode.Get()) {
		var ret string
		return ret
	}
	return *o.EdgeNode.Get()
}

// GetEdgeNodeOk returns a tuple with the EdgeNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ZededaInterfaceCommand) GetEdgeNodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EdgeNode.Get(), o.EdgeNode.IsSet()
}

// HasEdgeNode returns a boolean if a field has been set.
func (o *ZededaInterfaceCommand) HasEdgeNode() bool {
	if o != nil && o.EdgeNode.IsSet() {
		return true
	}

	return false
}

// SetEdgeNode gets a reference to the given NullableString and assigns it to the EdgeNode field.
func (o *ZededaInterfaceCommand) SetEdgeNode(v string) {
	o.EdgeNode.Set(&v)
}
// SetEdgeNodeNil sets the value for EdgeNode to be an explicit nil
func (o *ZededaInterfaceCommand) SetEdgeNodeNil() {
	o.EdgeNode.Set(nil)
}

// UnsetEdgeNode ensures that no value is present for EdgeNode, not even an explicit nil
func (o *ZededaInterfaceCommand) UnsetEdgeNode() {
	o.EdgeNode.Unset()
}

func (o ZededaInterfaceCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ZededaInterfaceCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiUrl.IsSet() {
		toSerialize["apiUrl"] = o.ApiUrl.Get()
	}
	if o.ApiToken.IsSet() {
		toSerialize["apiToken"] = o.ApiToken.Get()
	}
	if o.Project.IsSet() {
		toSerialize["project"] = o.Project.Get()
	}
	if o.EdgeNode.IsSet() {
		toSerialize["edgeNode"] = o.EdgeNode.Get()
	}
	return toSerialize, nil
}

type NullableZededaInterfaceCommand struct {
	value *ZededaInterfaceCommand
	isSet bool
}

func (v NullableZededaInterfaceCommand) Get() *ZededaInterfaceCommand {
	return v.value
}

func (v *NullableZededaInterfaceCommand) Set(val *ZededaInterfaceCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableZededaInterfaceCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableZededaInterfaceCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZededaInterfaceCommand(val *ZededaInterfaceCommand) *NullableZededaInterfaceCommand {
	return &NullableZededaInterfaceCommand{value: val, isSet: true}
}

func (v NullableZededaInterfaceCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZededaInterfaceCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


