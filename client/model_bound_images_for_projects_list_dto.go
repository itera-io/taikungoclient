/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BoundImagesForProjectsListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BoundImagesForProjectsListDto{}

// BoundImagesForProjectsListDto struct for BoundImagesForProjectsListDto
type BoundImagesForProjectsListDto struct {
	Id int32 `json:"id"`
	Name NullableString `json:"name"`
	ProjectId NullableInt32 `json:"projectId"`
	ProjectName NullableString `json:"projectName"`
	Size NullableFloat64 `json:"size"`
	ImageId NullableString `json:"imageId"`
	CloudId NullableInt32 `json:"cloudId"`
	IsWindows bool `json:"isWindows"`
	CloudType CloudType `json:"cloudType"`
}

type _BoundImagesForProjectsListDto BoundImagesForProjectsListDto

// NewBoundImagesForProjectsListDto instantiates a new BoundImagesForProjectsListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBoundImagesForProjectsListDto(id int32, name NullableString, projectId NullableInt32, projectName NullableString, size NullableFloat64, imageId NullableString, cloudId NullableInt32, isWindows bool, cloudType CloudType) *BoundImagesForProjectsListDto {
	this := BoundImagesForProjectsListDto{}
	this.Id = id
	this.Name = name
	this.ProjectId = projectId
	this.ProjectName = projectName
	this.Size = size
	this.ImageId = imageId
	this.CloudId = cloudId
	this.IsWindows = isWindows
	this.CloudType = cloudType
	return &this
}

// NewBoundImagesForProjectsListDtoWithDefaults instantiates a new BoundImagesForProjectsListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBoundImagesForProjectsListDtoWithDefaults() *BoundImagesForProjectsListDto {
	this := BoundImagesForProjectsListDto{}
	return &this
}

// GetId returns the Id field value
func (o *BoundImagesForProjectsListDto) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BoundImagesForProjectsListDto) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BoundImagesForProjectsListDto) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BoundImagesForProjectsListDto) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoundImagesForProjectsListDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *BoundImagesForProjectsListDto) SetName(v string) {
	o.Name.Set(&v)
}

// GetProjectId returns the ProjectId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *BoundImagesForProjectsListDto) GetProjectId() int32 {
	if o == nil || o.ProjectId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.ProjectId.Get()
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoundImagesForProjectsListDto) GetProjectIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectId.Get(), o.ProjectId.IsSet()
}

// SetProjectId sets field value
func (o *BoundImagesForProjectsListDto) SetProjectId(v int32) {
	o.ProjectId.Set(&v)
}

// GetProjectName returns the ProjectName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BoundImagesForProjectsListDto) GetProjectName() string {
	if o == nil || o.ProjectName.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProjectName.Get()
}

// GetProjectNameOk returns a tuple with the ProjectName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoundImagesForProjectsListDto) GetProjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectName.Get(), o.ProjectName.IsSet()
}

// SetProjectName sets field value
func (o *BoundImagesForProjectsListDto) SetProjectName(v string) {
	o.ProjectName.Set(&v)
}

// GetSize returns the Size field value
// If the value is explicit nil, the zero value for float64 will be returned
func (o *BoundImagesForProjectsListDto) GetSize() float64 {
	if o == nil || o.Size.Get() == nil {
		var ret float64
		return ret
	}

	return *o.Size.Get()
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoundImagesForProjectsListDto) GetSizeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Size.Get(), o.Size.IsSet()
}

// SetSize sets field value
func (o *BoundImagesForProjectsListDto) SetSize(v float64) {
	o.Size.Set(&v)
}

// GetImageId returns the ImageId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BoundImagesForProjectsListDto) GetImageId() string {
	if o == nil || o.ImageId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ImageId.Get()
}

// GetImageIdOk returns a tuple with the ImageId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoundImagesForProjectsListDto) GetImageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageId.Get(), o.ImageId.IsSet()
}

// SetImageId sets field value
func (o *BoundImagesForProjectsListDto) SetImageId(v string) {
	o.ImageId.Set(&v)
}

// GetCloudId returns the CloudId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *BoundImagesForProjectsListDto) GetCloudId() int32 {
	if o == nil || o.CloudId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.CloudId.Get()
}

// GetCloudIdOk returns a tuple with the CloudId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoundImagesForProjectsListDto) GetCloudIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloudId.Get(), o.CloudId.IsSet()
}

// SetCloudId sets field value
func (o *BoundImagesForProjectsListDto) SetCloudId(v int32) {
	o.CloudId.Set(&v)
}

// GetIsWindows returns the IsWindows field value
func (o *BoundImagesForProjectsListDto) GetIsWindows() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsWindows
}

// GetIsWindowsOk returns a tuple with the IsWindows field value
// and a boolean to check if the value has been set.
func (o *BoundImagesForProjectsListDto) GetIsWindowsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsWindows, true
}

// SetIsWindows sets field value
func (o *BoundImagesForProjectsListDto) SetIsWindows(v bool) {
	o.IsWindows = v
}

// GetCloudType returns the CloudType field value
func (o *BoundImagesForProjectsListDto) GetCloudType() CloudType {
	if o == nil {
		var ret CloudType
		return ret
	}

	return o.CloudType
}

// GetCloudTypeOk returns a tuple with the CloudType field value
// and a boolean to check if the value has been set.
func (o *BoundImagesForProjectsListDto) GetCloudTypeOk() (*CloudType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudType, true
}

// SetCloudType sets field value
func (o *BoundImagesForProjectsListDto) SetCloudType(v CloudType) {
	o.CloudType = v
}

func (o BoundImagesForProjectsListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BoundImagesForProjectsListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name.Get()
	toSerialize["projectId"] = o.ProjectId.Get()
	toSerialize["projectName"] = o.ProjectName.Get()
	toSerialize["size"] = o.Size.Get()
	toSerialize["imageId"] = o.ImageId.Get()
	toSerialize["cloudId"] = o.CloudId.Get()
	toSerialize["isWindows"] = o.IsWindows
	toSerialize["cloudType"] = o.CloudType
	return toSerialize, nil
}

func (o *BoundImagesForProjectsListDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"projectId",
		"projectName",
		"size",
		"imageId",
		"cloudId",
		"isWindows",
		"cloudType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBoundImagesForProjectsListDto := _BoundImagesForProjectsListDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBoundImagesForProjectsListDto)

	if err != nil {
		return err
	}

	*o = BoundImagesForProjectsListDto(varBoundImagesForProjectsListDto)

	return err
}

type NullableBoundImagesForProjectsListDto struct {
	value *BoundImagesForProjectsListDto
	isSet bool
}

func (v NullableBoundImagesForProjectsListDto) Get() *BoundImagesForProjectsListDto {
	return v.value
}

func (v *NullableBoundImagesForProjectsListDto) Set(val *BoundImagesForProjectsListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableBoundImagesForProjectsListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableBoundImagesForProjectsListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBoundImagesForProjectsListDto(val *BoundImagesForProjectsListDto) *NullableBoundImagesForProjectsListDto {
	return &NullableBoundImagesForProjectsListDto{value: val, isSet: true}
}

func (v NullableBoundImagesForProjectsListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBoundImagesForProjectsListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


