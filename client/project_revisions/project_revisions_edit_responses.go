// Code generated by go-swagger; DO NOT EDIT.

package project_revisions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProjectRevisionsEditReader is a Reader for the ProjectRevisionsEdit structure.
type ProjectRevisionsEditReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectRevisionsEditReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectRevisionsEditOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProjectRevisionsEditBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProjectRevisionsEditUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProjectRevisionsEditForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectRevisionsEditNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProjectRevisionsEditInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProjectRevisionsEditOK creates a ProjectRevisionsEditOK with default headers values
func NewProjectRevisionsEditOK() *ProjectRevisionsEditOK {
	return &ProjectRevisionsEditOK{}
}

/*
ProjectRevisionsEditOK describes a response with status code 200, with default header values.

Success
*/
type ProjectRevisionsEditOK struct {
	Payload interface{}
}

// IsSuccess returns true when this project revisions edit o k response has a 2xx status code
func (o *ProjectRevisionsEditOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this project revisions edit o k response has a 3xx status code
func (o *ProjectRevisionsEditOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project revisions edit o k response has a 4xx status code
func (o *ProjectRevisionsEditOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this project revisions edit o k response has a 5xx status code
func (o *ProjectRevisionsEditOK) IsServerError() bool {
	return false
}

// IsCode returns true when this project revisions edit o k response a status code equal to that given
func (o *ProjectRevisionsEditOK) IsCode(code int) bool {
	return code == 200
}

func (o *ProjectRevisionsEditOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectRevisions/update/{projectId}][%d] projectRevisionsEditOK  %+v", 200, o.Payload)
}

func (o *ProjectRevisionsEditOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectRevisions/update/{projectId}][%d] projectRevisionsEditOK  %+v", 200, o.Payload)
}

func (o *ProjectRevisionsEditOK) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectRevisionsEditOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectRevisionsEditBadRequest creates a ProjectRevisionsEditBadRequest with default headers values
func NewProjectRevisionsEditBadRequest() *ProjectRevisionsEditBadRequest {
	return &ProjectRevisionsEditBadRequest{}
}

/*
ProjectRevisionsEditBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProjectRevisionsEditBadRequest struct {
	Payload []*ProjectRevisionsEditBadRequestBodyItems0
}

// IsSuccess returns true when this project revisions edit bad request response has a 2xx status code
func (o *ProjectRevisionsEditBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project revisions edit bad request response has a 3xx status code
func (o *ProjectRevisionsEditBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project revisions edit bad request response has a 4xx status code
func (o *ProjectRevisionsEditBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this project revisions edit bad request response has a 5xx status code
func (o *ProjectRevisionsEditBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this project revisions edit bad request response a status code equal to that given
func (o *ProjectRevisionsEditBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ProjectRevisionsEditBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectRevisions/update/{projectId}][%d] projectRevisionsEditBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectRevisionsEditBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectRevisions/update/{projectId}][%d] projectRevisionsEditBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectRevisionsEditBadRequest) GetPayload() []*ProjectRevisionsEditBadRequestBodyItems0 {
	return o.Payload
}

func (o *ProjectRevisionsEditBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectRevisionsEditUnauthorized creates a ProjectRevisionsEditUnauthorized with default headers values
func NewProjectRevisionsEditUnauthorized() *ProjectRevisionsEditUnauthorized {
	return &ProjectRevisionsEditUnauthorized{}
}

/*
ProjectRevisionsEditUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProjectRevisionsEditUnauthorized struct {
	Payload *ProjectRevisionsEditUnauthorizedBody
}

// IsSuccess returns true when this project revisions edit unauthorized response has a 2xx status code
func (o *ProjectRevisionsEditUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project revisions edit unauthorized response has a 3xx status code
func (o *ProjectRevisionsEditUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project revisions edit unauthorized response has a 4xx status code
func (o *ProjectRevisionsEditUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this project revisions edit unauthorized response has a 5xx status code
func (o *ProjectRevisionsEditUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this project revisions edit unauthorized response a status code equal to that given
func (o *ProjectRevisionsEditUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ProjectRevisionsEditUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectRevisions/update/{projectId}][%d] projectRevisionsEditUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectRevisionsEditUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectRevisions/update/{projectId}][%d] projectRevisionsEditUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectRevisionsEditUnauthorized) GetPayload() *ProjectRevisionsEditUnauthorizedBody {
	return o.Payload
}

func (o *ProjectRevisionsEditUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ProjectRevisionsEditUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectRevisionsEditForbidden creates a ProjectRevisionsEditForbidden with default headers values
func NewProjectRevisionsEditForbidden() *ProjectRevisionsEditForbidden {
	return &ProjectRevisionsEditForbidden{}
}

/*
ProjectRevisionsEditForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ProjectRevisionsEditForbidden struct {
	Payload *ProjectRevisionsEditForbiddenBody
}

// IsSuccess returns true when this project revisions edit forbidden response has a 2xx status code
func (o *ProjectRevisionsEditForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project revisions edit forbidden response has a 3xx status code
func (o *ProjectRevisionsEditForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project revisions edit forbidden response has a 4xx status code
func (o *ProjectRevisionsEditForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this project revisions edit forbidden response has a 5xx status code
func (o *ProjectRevisionsEditForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this project revisions edit forbidden response a status code equal to that given
func (o *ProjectRevisionsEditForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ProjectRevisionsEditForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectRevisions/update/{projectId}][%d] projectRevisionsEditForbidden  %+v", 403, o.Payload)
}

func (o *ProjectRevisionsEditForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectRevisions/update/{projectId}][%d] projectRevisionsEditForbidden  %+v", 403, o.Payload)
}

func (o *ProjectRevisionsEditForbidden) GetPayload() *ProjectRevisionsEditForbiddenBody {
	return o.Payload
}

func (o *ProjectRevisionsEditForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ProjectRevisionsEditForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectRevisionsEditNotFound creates a ProjectRevisionsEditNotFound with default headers values
func NewProjectRevisionsEditNotFound() *ProjectRevisionsEditNotFound {
	return &ProjectRevisionsEditNotFound{}
}

/*
ProjectRevisionsEditNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProjectRevisionsEditNotFound struct {
	Payload *ProjectRevisionsEditNotFoundBody
}

// IsSuccess returns true when this project revisions edit not found response has a 2xx status code
func (o *ProjectRevisionsEditNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project revisions edit not found response has a 3xx status code
func (o *ProjectRevisionsEditNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project revisions edit not found response has a 4xx status code
func (o *ProjectRevisionsEditNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this project revisions edit not found response has a 5xx status code
func (o *ProjectRevisionsEditNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this project revisions edit not found response a status code equal to that given
func (o *ProjectRevisionsEditNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ProjectRevisionsEditNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectRevisions/update/{projectId}][%d] projectRevisionsEditNotFound  %+v", 404, o.Payload)
}

func (o *ProjectRevisionsEditNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectRevisions/update/{projectId}][%d] projectRevisionsEditNotFound  %+v", 404, o.Payload)
}

func (o *ProjectRevisionsEditNotFound) GetPayload() *ProjectRevisionsEditNotFoundBody {
	return o.Payload
}

func (o *ProjectRevisionsEditNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ProjectRevisionsEditNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectRevisionsEditInternalServerError creates a ProjectRevisionsEditInternalServerError with default headers values
func NewProjectRevisionsEditInternalServerError() *ProjectRevisionsEditInternalServerError {
	return &ProjectRevisionsEditInternalServerError{}
}

/*
ProjectRevisionsEditInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ProjectRevisionsEditInternalServerError struct {
}

// IsSuccess returns true when this project revisions edit internal server error response has a 2xx status code
func (o *ProjectRevisionsEditInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project revisions edit internal server error response has a 3xx status code
func (o *ProjectRevisionsEditInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project revisions edit internal server error response has a 4xx status code
func (o *ProjectRevisionsEditInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this project revisions edit internal server error response has a 5xx status code
func (o *ProjectRevisionsEditInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this project revisions edit internal server error response a status code equal to that given
func (o *ProjectRevisionsEditInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ProjectRevisionsEditInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectRevisions/update/{projectId}][%d] projectRevisionsEditInternalServerError ", 500)
}

func (o *ProjectRevisionsEditInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectRevisions/update/{projectId}][%d] projectRevisionsEditInternalServerError ", 500)
}

func (o *ProjectRevisionsEditInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
ProjectRevisionsEditBadRequestBodyItems0 project revisions edit bad request body items0
swagger:model ProjectRevisionsEditBadRequestBodyItems0
*/
type ProjectRevisionsEditBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this project revisions edit bad request body items0
func (o *ProjectRevisionsEditBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project revisions edit bad request body items0 based on context it is used
func (o *ProjectRevisionsEditBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectRevisionsEditBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectRevisionsEditBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res ProjectRevisionsEditBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectRevisionsEditBody project revisions edit body
swagger:model ProjectRevisionsEditBody
*/
type ProjectRevisionsEditBody struct {

	// access profile revision
	AccessProfileRevision int32 `json:"accessProfileRevision,omitempty"`

	// cloud credential revision
	CloudCredentialRevision int32 `json:"cloudCredentialRevision,omitempty"`

	// opa profile revision
	OpaProfileRevision int32 `json:"opaProfileRevision,omitempty"`
}

// Validate validates this project revisions edit body
func (o *ProjectRevisionsEditBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project revisions edit body based on context it is used
func (o *ProjectRevisionsEditBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectRevisionsEditBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectRevisionsEditBody) UnmarshalBinary(b []byte) error {
	var res ProjectRevisionsEditBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectRevisionsEditForbiddenBody project revisions edit forbidden body
swagger:model ProjectRevisionsEditForbiddenBody
*/
type ProjectRevisionsEditForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this project revisions edit forbidden body
func (o *ProjectRevisionsEditForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project revisions edit forbidden body based on context it is used
func (o *ProjectRevisionsEditForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectRevisionsEditForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectRevisionsEditForbiddenBody) UnmarshalBinary(b []byte) error {
	var res ProjectRevisionsEditForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectRevisionsEditNotFoundBody project revisions edit not found body
swagger:model ProjectRevisionsEditNotFoundBody
*/
type ProjectRevisionsEditNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this project revisions edit not found body
func (o *ProjectRevisionsEditNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project revisions edit not found body based on context it is used
func (o *ProjectRevisionsEditNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectRevisionsEditNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectRevisionsEditNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ProjectRevisionsEditNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectRevisionsEditUnauthorizedBody project revisions edit unauthorized body
swagger:model ProjectRevisionsEditUnauthorizedBody
*/
type ProjectRevisionsEditUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this project revisions edit unauthorized body
func (o *ProjectRevisionsEditUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project revisions edit unauthorized body based on context it is used
func (o *ProjectRevisionsEditUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectRevisionsEditUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectRevisionsEditUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res ProjectRevisionsEditUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
