/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the CreateOpenstackCloudCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOpenstackCloudCommand{}

// CreateOpenstackCloudCommand struct for CreateOpenstackCloudCommand
type CreateOpenstackCloudCommand struct {
	Name *string `json:"name,omitempty"`
	OpenStackUser *string `json:"openStackUser,omitempty"`
	OpenStackPassword *string `json:"openStackPassword,omitempty"`
	OpenStackUrl *string `json:"openStackUrl,omitempty"`
	OpenStackProject *string `json:"openStackProject,omitempty"`
	OpenStackPublicNetwork *string `json:"openStackPublicNetwork,omitempty"`
	OpenStackAvailabilityZone *string `json:"openStackAvailabilityZone,omitempty"`
	OpenStackDomain *string `json:"openStackDomain,omitempty"`
	OpenStackRegion *string `json:"openStackRegion,omitempty"`
	OpenStackContinent *string `json:"openStackContinent,omitempty"`
	OpenStackVolumeType *string `json:"openStackVolumeType,omitempty"`
	OpenStackImportNetwork *bool `json:"openStackImportNetwork,omitempty"`
	OpenStackInternalSubnetId *string `json:"openStackInternalSubnetId,omitempty"`
	OrganizationId NullableInt32 `json:"organizationId,omitempty"`
	ApplicationCredEnabled *bool `json:"applicationCredEnabled,omitempty"`
	IsAdmin *bool `json:"isAdmin,omitempty"`
	SkipTlsFlag *bool `json:"skipTlsFlag,omitempty"`
}

// NewCreateOpenstackCloudCommand instantiates a new CreateOpenstackCloudCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOpenstackCloudCommand() *CreateOpenstackCloudCommand {
	this := CreateOpenstackCloudCommand{}
	return &this
}

// NewCreateOpenstackCloudCommandWithDefaults instantiates a new CreateOpenstackCloudCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOpenstackCloudCommandWithDefaults() *CreateOpenstackCloudCommand {
	this := CreateOpenstackCloudCommand{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateOpenstackCloudCommand) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOpenstackCloudCommand) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateOpenstackCloudCommand) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateOpenstackCloudCommand) SetName(v string) {
	o.Name = &v
}

// GetOpenStackUser returns the OpenStackUser field value if set, zero value otherwise.
func (o *CreateOpenstackCloudCommand) GetOpenStackUser() string {
	if o == nil || IsNil(o.OpenStackUser) {
		var ret string
		return ret
	}
	return *o.OpenStackUser
}

// GetOpenStackUserOk returns a tuple with the OpenStackUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOpenstackCloudCommand) GetOpenStackUserOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackUser) {
		return nil, false
	}
	return o.OpenStackUser, true
}

// HasOpenStackUser returns a boolean if a field has been set.
func (o *CreateOpenstackCloudCommand) HasOpenStackUser() bool {
	if o != nil && !IsNil(o.OpenStackUser) {
		return true
	}

	return false
}

// SetOpenStackUser gets a reference to the given string and assigns it to the OpenStackUser field.
func (o *CreateOpenstackCloudCommand) SetOpenStackUser(v string) {
	o.OpenStackUser = &v
}

// GetOpenStackPassword returns the OpenStackPassword field value if set, zero value otherwise.
func (o *CreateOpenstackCloudCommand) GetOpenStackPassword() string {
	if o == nil || IsNil(o.OpenStackPassword) {
		var ret string
		return ret
	}
	return *o.OpenStackPassword
}

// GetOpenStackPasswordOk returns a tuple with the OpenStackPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOpenstackCloudCommand) GetOpenStackPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackPassword) {
		return nil, false
	}
	return o.OpenStackPassword, true
}

// HasOpenStackPassword returns a boolean if a field has been set.
func (o *CreateOpenstackCloudCommand) HasOpenStackPassword() bool {
	if o != nil && !IsNil(o.OpenStackPassword) {
		return true
	}

	return false
}

// SetOpenStackPassword gets a reference to the given string and assigns it to the OpenStackPassword field.
func (o *CreateOpenstackCloudCommand) SetOpenStackPassword(v string) {
	o.OpenStackPassword = &v
}

// GetOpenStackUrl returns the OpenStackUrl field value if set, zero value otherwise.
func (o *CreateOpenstackCloudCommand) GetOpenStackUrl() string {
	if o == nil || IsNil(o.OpenStackUrl) {
		var ret string
		return ret
	}
	return *o.OpenStackUrl
}

// GetOpenStackUrlOk returns a tuple with the OpenStackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOpenstackCloudCommand) GetOpenStackUrlOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackUrl) {
		return nil, false
	}
	return o.OpenStackUrl, true
}

// HasOpenStackUrl returns a boolean if a field has been set.
func (o *CreateOpenstackCloudCommand) HasOpenStackUrl() bool {
	if o != nil && !IsNil(o.OpenStackUrl) {
		return true
	}

	return false
}

// SetOpenStackUrl gets a reference to the given string and assigns it to the OpenStackUrl field.
func (o *CreateOpenstackCloudCommand) SetOpenStackUrl(v string) {
	o.OpenStackUrl = &v
}

// GetOpenStackProject returns the OpenStackProject field value if set, zero value otherwise.
func (o *CreateOpenstackCloudCommand) GetOpenStackProject() string {
	if o == nil || IsNil(o.OpenStackProject) {
		var ret string
		return ret
	}
	return *o.OpenStackProject
}

// GetOpenStackProjectOk returns a tuple with the OpenStackProject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOpenstackCloudCommand) GetOpenStackProjectOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackProject) {
		return nil, false
	}
	return o.OpenStackProject, true
}

// HasOpenStackProject returns a boolean if a field has been set.
func (o *CreateOpenstackCloudCommand) HasOpenStackProject() bool {
	if o != nil && !IsNil(o.OpenStackProject) {
		return true
	}

	return false
}

// SetOpenStackProject gets a reference to the given string and assigns it to the OpenStackProject field.
func (o *CreateOpenstackCloudCommand) SetOpenStackProject(v string) {
	o.OpenStackProject = &v
}

// GetOpenStackPublicNetwork returns the OpenStackPublicNetwork field value if set, zero value otherwise.
func (o *CreateOpenstackCloudCommand) GetOpenStackPublicNetwork() string {
	if o == nil || IsNil(o.OpenStackPublicNetwork) {
		var ret string
		return ret
	}
	return *o.OpenStackPublicNetwork
}

// GetOpenStackPublicNetworkOk returns a tuple with the OpenStackPublicNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOpenstackCloudCommand) GetOpenStackPublicNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackPublicNetwork) {
		return nil, false
	}
	return o.OpenStackPublicNetwork, true
}

// HasOpenStackPublicNetwork returns a boolean if a field has been set.
func (o *CreateOpenstackCloudCommand) HasOpenStackPublicNetwork() bool {
	if o != nil && !IsNil(o.OpenStackPublicNetwork) {
		return true
	}

	return false
}

// SetOpenStackPublicNetwork gets a reference to the given string and assigns it to the OpenStackPublicNetwork field.
func (o *CreateOpenstackCloudCommand) SetOpenStackPublicNetwork(v string) {
	o.OpenStackPublicNetwork = &v
}

// GetOpenStackAvailabilityZone returns the OpenStackAvailabilityZone field value if set, zero value otherwise.
func (o *CreateOpenstackCloudCommand) GetOpenStackAvailabilityZone() string {
	if o == nil || IsNil(o.OpenStackAvailabilityZone) {
		var ret string
		return ret
	}
	return *o.OpenStackAvailabilityZone
}

// GetOpenStackAvailabilityZoneOk returns a tuple with the OpenStackAvailabilityZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOpenstackCloudCommand) GetOpenStackAvailabilityZoneOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackAvailabilityZone) {
		return nil, false
	}
	return o.OpenStackAvailabilityZone, true
}

// HasOpenStackAvailabilityZone returns a boolean if a field has been set.
func (o *CreateOpenstackCloudCommand) HasOpenStackAvailabilityZone() bool {
	if o != nil && !IsNil(o.OpenStackAvailabilityZone) {
		return true
	}

	return false
}

// SetOpenStackAvailabilityZone gets a reference to the given string and assigns it to the OpenStackAvailabilityZone field.
func (o *CreateOpenstackCloudCommand) SetOpenStackAvailabilityZone(v string) {
	o.OpenStackAvailabilityZone = &v
}

// GetOpenStackDomain returns the OpenStackDomain field value if set, zero value otherwise.
func (o *CreateOpenstackCloudCommand) GetOpenStackDomain() string {
	if o == nil || IsNil(o.OpenStackDomain) {
		var ret string
		return ret
	}
	return *o.OpenStackDomain
}

// GetOpenStackDomainOk returns a tuple with the OpenStackDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOpenstackCloudCommand) GetOpenStackDomainOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackDomain) {
		return nil, false
	}
	return o.OpenStackDomain, true
}

// HasOpenStackDomain returns a boolean if a field has been set.
func (o *CreateOpenstackCloudCommand) HasOpenStackDomain() bool {
	if o != nil && !IsNil(o.OpenStackDomain) {
		return true
	}

	return false
}

// SetOpenStackDomain gets a reference to the given string and assigns it to the OpenStackDomain field.
func (o *CreateOpenstackCloudCommand) SetOpenStackDomain(v string) {
	o.OpenStackDomain = &v
}

// GetOpenStackRegion returns the OpenStackRegion field value if set, zero value otherwise.
func (o *CreateOpenstackCloudCommand) GetOpenStackRegion() string {
	if o == nil || IsNil(o.OpenStackRegion) {
		var ret string
		return ret
	}
	return *o.OpenStackRegion
}

// GetOpenStackRegionOk returns a tuple with the OpenStackRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOpenstackCloudCommand) GetOpenStackRegionOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackRegion) {
		return nil, false
	}
	return o.OpenStackRegion, true
}

// HasOpenStackRegion returns a boolean if a field has been set.
func (o *CreateOpenstackCloudCommand) HasOpenStackRegion() bool {
	if o != nil && !IsNil(o.OpenStackRegion) {
		return true
	}

	return false
}

// SetOpenStackRegion gets a reference to the given string and assigns it to the OpenStackRegion field.
func (o *CreateOpenstackCloudCommand) SetOpenStackRegion(v string) {
	o.OpenStackRegion = &v
}

// GetOpenStackContinent returns the OpenStackContinent field value if set, zero value otherwise.
func (o *CreateOpenstackCloudCommand) GetOpenStackContinent() string {
	if o == nil || IsNil(o.OpenStackContinent) {
		var ret string
		return ret
	}
	return *o.OpenStackContinent
}

// GetOpenStackContinentOk returns a tuple with the OpenStackContinent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOpenstackCloudCommand) GetOpenStackContinentOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackContinent) {
		return nil, false
	}
	return o.OpenStackContinent, true
}

// HasOpenStackContinent returns a boolean if a field has been set.
func (o *CreateOpenstackCloudCommand) HasOpenStackContinent() bool {
	if o != nil && !IsNil(o.OpenStackContinent) {
		return true
	}

	return false
}

// SetOpenStackContinent gets a reference to the given string and assigns it to the OpenStackContinent field.
func (o *CreateOpenstackCloudCommand) SetOpenStackContinent(v string) {
	o.OpenStackContinent = &v
}

// GetOpenStackVolumeType returns the OpenStackVolumeType field value if set, zero value otherwise.
func (o *CreateOpenstackCloudCommand) GetOpenStackVolumeType() string {
	if o == nil || IsNil(o.OpenStackVolumeType) {
		var ret string
		return ret
	}
	return *o.OpenStackVolumeType
}

// GetOpenStackVolumeTypeOk returns a tuple with the OpenStackVolumeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOpenstackCloudCommand) GetOpenStackVolumeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackVolumeType) {
		return nil, false
	}
	return o.OpenStackVolumeType, true
}

// HasOpenStackVolumeType returns a boolean if a field has been set.
func (o *CreateOpenstackCloudCommand) HasOpenStackVolumeType() bool {
	if o != nil && !IsNil(o.OpenStackVolumeType) {
		return true
	}

	return false
}

// SetOpenStackVolumeType gets a reference to the given string and assigns it to the OpenStackVolumeType field.
func (o *CreateOpenstackCloudCommand) SetOpenStackVolumeType(v string) {
	o.OpenStackVolumeType = &v
}

// GetOpenStackImportNetwork returns the OpenStackImportNetwork field value if set, zero value otherwise.
func (o *CreateOpenstackCloudCommand) GetOpenStackImportNetwork() bool {
	if o == nil || IsNil(o.OpenStackImportNetwork) {
		var ret bool
		return ret
	}
	return *o.OpenStackImportNetwork
}

// GetOpenStackImportNetworkOk returns a tuple with the OpenStackImportNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOpenstackCloudCommand) GetOpenStackImportNetworkOk() (*bool, bool) {
	if o == nil || IsNil(o.OpenStackImportNetwork) {
		return nil, false
	}
	return o.OpenStackImportNetwork, true
}

// HasOpenStackImportNetwork returns a boolean if a field has been set.
func (o *CreateOpenstackCloudCommand) HasOpenStackImportNetwork() bool {
	if o != nil && !IsNil(o.OpenStackImportNetwork) {
		return true
	}

	return false
}

// SetOpenStackImportNetwork gets a reference to the given bool and assigns it to the OpenStackImportNetwork field.
func (o *CreateOpenstackCloudCommand) SetOpenStackImportNetwork(v bool) {
	o.OpenStackImportNetwork = &v
}

// GetOpenStackInternalSubnetId returns the OpenStackInternalSubnetId field value if set, zero value otherwise.
func (o *CreateOpenstackCloudCommand) GetOpenStackInternalSubnetId() string {
	if o == nil || IsNil(o.OpenStackInternalSubnetId) {
		var ret string
		return ret
	}
	return *o.OpenStackInternalSubnetId
}

// GetOpenStackInternalSubnetIdOk returns a tuple with the OpenStackInternalSubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOpenstackCloudCommand) GetOpenStackInternalSubnetIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackInternalSubnetId) {
		return nil, false
	}
	return o.OpenStackInternalSubnetId, true
}

// HasOpenStackInternalSubnetId returns a boolean if a field has been set.
func (o *CreateOpenstackCloudCommand) HasOpenStackInternalSubnetId() bool {
	if o != nil && !IsNil(o.OpenStackInternalSubnetId) {
		return true
	}

	return false
}

// SetOpenStackInternalSubnetId gets a reference to the given string and assigns it to the OpenStackInternalSubnetId field.
func (o *CreateOpenstackCloudCommand) SetOpenStackInternalSubnetId(v string) {
	o.OpenStackInternalSubnetId = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOpenstackCloudCommand) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId.Get()) {
		var ret int32
		return ret
	}
	return *o.OrganizationId.Get()
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOpenstackCloudCommand) GetOrganizationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationId.Get(), o.OrganizationId.IsSet()
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *CreateOpenstackCloudCommand) HasOrganizationId() bool {
	if o != nil && o.OrganizationId.IsSet() {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given NullableInt32 and assigns it to the OrganizationId field.
func (o *CreateOpenstackCloudCommand) SetOrganizationId(v int32) {
	o.OrganizationId.Set(&v)
}
// SetOrganizationIdNil sets the value for OrganizationId to be an explicit nil
func (o *CreateOpenstackCloudCommand) SetOrganizationIdNil() {
	o.OrganizationId.Set(nil)
}

// UnsetOrganizationId ensures that no value is present for OrganizationId, not even an explicit nil
func (o *CreateOpenstackCloudCommand) UnsetOrganizationId() {
	o.OrganizationId.Unset()
}

// GetApplicationCredEnabled returns the ApplicationCredEnabled field value if set, zero value otherwise.
func (o *CreateOpenstackCloudCommand) GetApplicationCredEnabled() bool {
	if o == nil || IsNil(o.ApplicationCredEnabled) {
		var ret bool
		return ret
	}
	return *o.ApplicationCredEnabled
}

// GetApplicationCredEnabledOk returns a tuple with the ApplicationCredEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOpenstackCloudCommand) GetApplicationCredEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ApplicationCredEnabled) {
		return nil, false
	}
	return o.ApplicationCredEnabled, true
}

// HasApplicationCredEnabled returns a boolean if a field has been set.
func (o *CreateOpenstackCloudCommand) HasApplicationCredEnabled() bool {
	if o != nil && !IsNil(o.ApplicationCredEnabled) {
		return true
	}

	return false
}

// SetApplicationCredEnabled gets a reference to the given bool and assigns it to the ApplicationCredEnabled field.
func (o *CreateOpenstackCloudCommand) SetApplicationCredEnabled(v bool) {
	o.ApplicationCredEnabled = &v
}

// GetIsAdmin returns the IsAdmin field value if set, zero value otherwise.
func (o *CreateOpenstackCloudCommand) GetIsAdmin() bool {
	if o == nil || IsNil(o.IsAdmin) {
		var ret bool
		return ret
	}
	return *o.IsAdmin
}

// GetIsAdminOk returns a tuple with the IsAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOpenstackCloudCommand) GetIsAdminOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAdmin) {
		return nil, false
	}
	return o.IsAdmin, true
}

// HasIsAdmin returns a boolean if a field has been set.
func (o *CreateOpenstackCloudCommand) HasIsAdmin() bool {
	if o != nil && !IsNil(o.IsAdmin) {
		return true
	}

	return false
}

// SetIsAdmin gets a reference to the given bool and assigns it to the IsAdmin field.
func (o *CreateOpenstackCloudCommand) SetIsAdmin(v bool) {
	o.IsAdmin = &v
}

// GetSkipTlsFlag returns the SkipTlsFlag field value if set, zero value otherwise.
func (o *CreateOpenstackCloudCommand) GetSkipTlsFlag() bool {
	if o == nil || IsNil(o.SkipTlsFlag) {
		var ret bool
		return ret
	}
	return *o.SkipTlsFlag
}

// GetSkipTlsFlagOk returns a tuple with the SkipTlsFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOpenstackCloudCommand) GetSkipTlsFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipTlsFlag) {
		return nil, false
	}
	return o.SkipTlsFlag, true
}

// HasSkipTlsFlag returns a boolean if a field has been set.
func (o *CreateOpenstackCloudCommand) HasSkipTlsFlag() bool {
	if o != nil && !IsNil(o.SkipTlsFlag) {
		return true
	}

	return false
}

// SetSkipTlsFlag gets a reference to the given bool and assigns it to the SkipTlsFlag field.
func (o *CreateOpenstackCloudCommand) SetSkipTlsFlag(v bool) {
	o.SkipTlsFlag = &v
}

func (o CreateOpenstackCloudCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOpenstackCloudCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OpenStackUser) {
		toSerialize["openStackUser"] = o.OpenStackUser
	}
	if !IsNil(o.OpenStackPassword) {
		toSerialize["openStackPassword"] = o.OpenStackPassword
	}
	if !IsNil(o.OpenStackUrl) {
		toSerialize["openStackUrl"] = o.OpenStackUrl
	}
	if !IsNil(o.OpenStackProject) {
		toSerialize["openStackProject"] = o.OpenStackProject
	}
	if !IsNil(o.OpenStackPublicNetwork) {
		toSerialize["openStackPublicNetwork"] = o.OpenStackPublicNetwork
	}
	if !IsNil(o.OpenStackAvailabilityZone) {
		toSerialize["openStackAvailabilityZone"] = o.OpenStackAvailabilityZone
	}
	if !IsNil(o.OpenStackDomain) {
		toSerialize["openStackDomain"] = o.OpenStackDomain
	}
	if !IsNil(o.OpenStackRegion) {
		toSerialize["openStackRegion"] = o.OpenStackRegion
	}
	if !IsNil(o.OpenStackContinent) {
		toSerialize["openStackContinent"] = o.OpenStackContinent
	}
	if !IsNil(o.OpenStackVolumeType) {
		toSerialize["openStackVolumeType"] = o.OpenStackVolumeType
	}
	if !IsNil(o.OpenStackImportNetwork) {
		toSerialize["openStackImportNetwork"] = o.OpenStackImportNetwork
	}
	if !IsNil(o.OpenStackInternalSubnetId) {
		toSerialize["openStackInternalSubnetId"] = o.OpenStackInternalSubnetId
	}
	if o.OrganizationId.IsSet() {
		toSerialize["organizationId"] = o.OrganizationId.Get()
	}
	if !IsNil(o.ApplicationCredEnabled) {
		toSerialize["applicationCredEnabled"] = o.ApplicationCredEnabled
	}
	if !IsNil(o.IsAdmin) {
		toSerialize["isAdmin"] = o.IsAdmin
	}
	if !IsNil(o.SkipTlsFlag) {
		toSerialize["skipTlsFlag"] = o.SkipTlsFlag
	}
	return toSerialize, nil
}

type NullableCreateOpenstackCloudCommand struct {
	value *CreateOpenstackCloudCommand
	isSet bool
}

func (v NullableCreateOpenstackCloudCommand) Get() *CreateOpenstackCloudCommand {
	return v.value
}

func (v *NullableCreateOpenstackCloudCommand) Set(val *CreateOpenstackCloudCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOpenstackCloudCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOpenstackCloudCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOpenstackCloudCommand(val *CreateOpenstackCloudCommand) *NullableCreateOpenstackCloudCommand {
	return &NullableCreateOpenstackCloudCommand{value: val, isSet: true}
}

func (v NullableCreateOpenstackCloudCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOpenstackCloudCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


