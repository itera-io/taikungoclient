/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the VClusterListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VClusterListDto{}

// VClusterListDto struct for VClusterListDto
type VClusterListDto struct {
	Id *int32 `json:"id,omitempty"`
	Name NullableString `json:"name,omitempty"`
	IsLocked *bool `json:"isLocked,omitempty"`
	HasKubeConfigFile *bool `json:"hasKubeConfigFile,omitempty"`
	IsMaintenanceModeEnabled *bool `json:"isMaintenanceModeEnabled,omitempty"`
	OrganizationName NullableString `json:"organizationName,omitempty"`
	OrganizationId *int32 `json:"organizationId,omitempty"`
	KubernetesVersion NullableString `json:"kubernetesVersion,omitempty"`
	CreatedAt NullableString `json:"createdAt,omitempty"`
	CreatedBy NullableString `json:"createdBy,omitempty"`
	LastModified NullableString `json:"lastModified,omitempty"`
	LastModifiedBy NullableString `json:"lastModifiedBy,omitempty"`
	AlertsCount *int32 `json:"alertsCount,omitempty"`
	ExpiredAt NullableString `json:"expiredAt,omitempty"`
	DeleteOnExpiration *bool `json:"deleteOnExpiration,omitempty"`
	Logs NullableString `json:"logs,omitempty"`
	CloudType *CloudType `json:"cloudType,omitempty"`
	Status *ProjectStatus `json:"status,omitempty"`
	Health *ProjectHealth `json:"health,omitempty"`
}

// NewVClusterListDto instantiates a new VClusterListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVClusterListDto() *VClusterListDto {
	this := VClusterListDto{}
	return &this
}

// NewVClusterListDtoWithDefaults instantiates a new VClusterListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVClusterListDtoWithDefaults() *VClusterListDto {
	this := VClusterListDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VClusterListDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VClusterListDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *VClusterListDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VClusterListDto) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VClusterListDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *VClusterListDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *VClusterListDto) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *VClusterListDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *VClusterListDto) UnsetName() {
	o.Name.Unset()
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise.
func (o *VClusterListDto) GetIsLocked() bool {
	if o == nil || IsNil(o.IsLocked) {
		var ret bool
		return ret
	}
	return *o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetIsLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocked) {
		return nil, false
	}
	return o.IsLocked, true
}

// HasIsLocked returns a boolean if a field has been set.
func (o *VClusterListDto) HasIsLocked() bool {
	if o != nil && !IsNil(o.IsLocked) {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given bool and assigns it to the IsLocked field.
func (o *VClusterListDto) SetIsLocked(v bool) {
	o.IsLocked = &v
}

// GetHasKubeConfigFile returns the HasKubeConfigFile field value if set, zero value otherwise.
func (o *VClusterListDto) GetHasKubeConfigFile() bool {
	if o == nil || IsNil(o.HasKubeConfigFile) {
		var ret bool
		return ret
	}
	return *o.HasKubeConfigFile
}

// GetHasKubeConfigFileOk returns a tuple with the HasKubeConfigFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetHasKubeConfigFileOk() (*bool, bool) {
	if o == nil || IsNil(o.HasKubeConfigFile) {
		return nil, false
	}
	return o.HasKubeConfigFile, true
}

// HasHasKubeConfigFile returns a boolean if a field has been set.
func (o *VClusterListDto) HasHasKubeConfigFile() bool {
	if o != nil && !IsNil(o.HasKubeConfigFile) {
		return true
	}

	return false
}

// SetHasKubeConfigFile gets a reference to the given bool and assigns it to the HasKubeConfigFile field.
func (o *VClusterListDto) SetHasKubeConfigFile(v bool) {
	o.HasKubeConfigFile = &v
}

// GetIsMaintenanceModeEnabled returns the IsMaintenanceModeEnabled field value if set, zero value otherwise.
func (o *VClusterListDto) GetIsMaintenanceModeEnabled() bool {
	if o == nil || IsNil(o.IsMaintenanceModeEnabled) {
		var ret bool
		return ret
	}
	return *o.IsMaintenanceModeEnabled
}

// GetIsMaintenanceModeEnabledOk returns a tuple with the IsMaintenanceModeEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetIsMaintenanceModeEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMaintenanceModeEnabled) {
		return nil, false
	}
	return o.IsMaintenanceModeEnabled, true
}

// HasIsMaintenanceModeEnabled returns a boolean if a field has been set.
func (o *VClusterListDto) HasIsMaintenanceModeEnabled() bool {
	if o != nil && !IsNil(o.IsMaintenanceModeEnabled) {
		return true
	}

	return false
}

// SetIsMaintenanceModeEnabled gets a reference to the given bool and assigns it to the IsMaintenanceModeEnabled field.
func (o *VClusterListDto) SetIsMaintenanceModeEnabled(v bool) {
	o.IsMaintenanceModeEnabled = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VClusterListDto) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizationName.Get()
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VClusterListDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationName.Get(), o.OrganizationName.IsSet()
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *VClusterListDto) HasOrganizationName() bool {
	if o != nil && o.OrganizationName.IsSet() {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given NullableString and assigns it to the OrganizationName field.
func (o *VClusterListDto) SetOrganizationName(v string) {
	o.OrganizationName.Set(&v)
}
// SetOrganizationNameNil sets the value for OrganizationName to be an explicit nil
func (o *VClusterListDto) SetOrganizationNameNil() {
	o.OrganizationName.Set(nil)
}

// UnsetOrganizationName ensures that no value is present for OrganizationName, not even an explicit nil
func (o *VClusterListDto) UnsetOrganizationName() {
	o.OrganizationName.Unset()
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *VClusterListDto) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *VClusterListDto) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *VClusterListDto) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetKubernetesVersion returns the KubernetesVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VClusterListDto) GetKubernetesVersion() string {
	if o == nil || IsNil(o.KubernetesVersion.Get()) {
		var ret string
		return ret
	}
	return *o.KubernetesVersion.Get()
}

// GetKubernetesVersionOk returns a tuple with the KubernetesVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VClusterListDto) GetKubernetesVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KubernetesVersion.Get(), o.KubernetesVersion.IsSet()
}

// HasKubernetesVersion returns a boolean if a field has been set.
func (o *VClusterListDto) HasKubernetesVersion() bool {
	if o != nil && o.KubernetesVersion.IsSet() {
		return true
	}

	return false
}

// SetKubernetesVersion gets a reference to the given NullableString and assigns it to the KubernetesVersion field.
func (o *VClusterListDto) SetKubernetesVersion(v string) {
	o.KubernetesVersion.Set(&v)
}
// SetKubernetesVersionNil sets the value for KubernetesVersion to be an explicit nil
func (o *VClusterListDto) SetKubernetesVersionNil() {
	o.KubernetesVersion.Set(nil)
}

// UnsetKubernetesVersion ensures that no value is present for KubernetesVersion, not even an explicit nil
func (o *VClusterListDto) UnsetKubernetesVersion() {
	o.KubernetesVersion.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VClusterListDto) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VClusterListDto) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *VClusterListDto) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableString and assigns it to the CreatedAt field.
func (o *VClusterListDto) SetCreatedAt(v string) {
	o.CreatedAt.Set(&v)
}
// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *VClusterListDto) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *VClusterListDto) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VClusterListDto) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VClusterListDto) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *VClusterListDto) HasCreatedBy() bool {
	if o != nil && o.CreatedBy.IsSet() {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given NullableString and assigns it to the CreatedBy field.
func (o *VClusterListDto) SetCreatedBy(v string) {
	o.CreatedBy.Set(&v)
}
// SetCreatedByNil sets the value for CreatedBy to be an explicit nil
func (o *VClusterListDto) SetCreatedByNil() {
	o.CreatedBy.Set(nil)
}

// UnsetCreatedBy ensures that no value is present for CreatedBy, not even an explicit nil
func (o *VClusterListDto) UnsetCreatedBy() {
	o.CreatedBy.Unset()
}

// GetLastModified returns the LastModified field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VClusterListDto) GetLastModified() string {
	if o == nil || IsNil(o.LastModified.Get()) {
		var ret string
		return ret
	}
	return *o.LastModified.Get()
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VClusterListDto) GetLastModifiedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModified.Get(), o.LastModified.IsSet()
}

// HasLastModified returns a boolean if a field has been set.
func (o *VClusterListDto) HasLastModified() bool {
	if o != nil && o.LastModified.IsSet() {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given NullableString and assigns it to the LastModified field.
func (o *VClusterListDto) SetLastModified(v string) {
	o.LastModified.Set(&v)
}
// SetLastModifiedNil sets the value for LastModified to be an explicit nil
func (o *VClusterListDto) SetLastModifiedNil() {
	o.LastModified.Set(nil)
}

// UnsetLastModified ensures that no value is present for LastModified, not even an explicit nil
func (o *VClusterListDto) UnsetLastModified() {
	o.LastModified.Unset()
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VClusterListDto) GetLastModifiedBy() string {
	if o == nil || IsNil(o.LastModifiedBy.Get()) {
		var ret string
		return ret
	}
	return *o.LastModifiedBy.Get()
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VClusterListDto) GetLastModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModifiedBy.Get(), o.LastModifiedBy.IsSet()
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *VClusterListDto) HasLastModifiedBy() bool {
	if o != nil && o.LastModifiedBy.IsSet() {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given NullableString and assigns it to the LastModifiedBy field.
func (o *VClusterListDto) SetLastModifiedBy(v string) {
	o.LastModifiedBy.Set(&v)
}
// SetLastModifiedByNil sets the value for LastModifiedBy to be an explicit nil
func (o *VClusterListDto) SetLastModifiedByNil() {
	o.LastModifiedBy.Set(nil)
}

// UnsetLastModifiedBy ensures that no value is present for LastModifiedBy, not even an explicit nil
func (o *VClusterListDto) UnsetLastModifiedBy() {
	o.LastModifiedBy.Unset()
}

// GetAlertsCount returns the AlertsCount field value if set, zero value otherwise.
func (o *VClusterListDto) GetAlertsCount() int32 {
	if o == nil || IsNil(o.AlertsCount) {
		var ret int32
		return ret
	}
	return *o.AlertsCount
}

// GetAlertsCountOk returns a tuple with the AlertsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetAlertsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AlertsCount) {
		return nil, false
	}
	return o.AlertsCount, true
}

// HasAlertsCount returns a boolean if a field has been set.
func (o *VClusterListDto) HasAlertsCount() bool {
	if o != nil && !IsNil(o.AlertsCount) {
		return true
	}

	return false
}

// SetAlertsCount gets a reference to the given int32 and assigns it to the AlertsCount field.
func (o *VClusterListDto) SetAlertsCount(v int32) {
	o.AlertsCount = &v
}

// GetExpiredAt returns the ExpiredAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VClusterListDto) GetExpiredAt() string {
	if o == nil || IsNil(o.ExpiredAt.Get()) {
		var ret string
		return ret
	}
	return *o.ExpiredAt.Get()
}

// GetExpiredAtOk returns a tuple with the ExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VClusterListDto) GetExpiredAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiredAt.Get(), o.ExpiredAt.IsSet()
}

// HasExpiredAt returns a boolean if a field has been set.
func (o *VClusterListDto) HasExpiredAt() bool {
	if o != nil && o.ExpiredAt.IsSet() {
		return true
	}

	return false
}

// SetExpiredAt gets a reference to the given NullableString and assigns it to the ExpiredAt field.
func (o *VClusterListDto) SetExpiredAt(v string) {
	o.ExpiredAt.Set(&v)
}
// SetExpiredAtNil sets the value for ExpiredAt to be an explicit nil
func (o *VClusterListDto) SetExpiredAtNil() {
	o.ExpiredAt.Set(nil)
}

// UnsetExpiredAt ensures that no value is present for ExpiredAt, not even an explicit nil
func (o *VClusterListDto) UnsetExpiredAt() {
	o.ExpiredAt.Unset()
}

// GetDeleteOnExpiration returns the DeleteOnExpiration field value if set, zero value otherwise.
func (o *VClusterListDto) GetDeleteOnExpiration() bool {
	if o == nil || IsNil(o.DeleteOnExpiration) {
		var ret bool
		return ret
	}
	return *o.DeleteOnExpiration
}

// GetDeleteOnExpirationOk returns a tuple with the DeleteOnExpiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetDeleteOnExpirationOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteOnExpiration) {
		return nil, false
	}
	return o.DeleteOnExpiration, true
}

// HasDeleteOnExpiration returns a boolean if a field has been set.
func (o *VClusterListDto) HasDeleteOnExpiration() bool {
	if o != nil && !IsNil(o.DeleteOnExpiration) {
		return true
	}

	return false
}

// SetDeleteOnExpiration gets a reference to the given bool and assigns it to the DeleteOnExpiration field.
func (o *VClusterListDto) SetDeleteOnExpiration(v bool) {
	o.DeleteOnExpiration = &v
}

// GetLogs returns the Logs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VClusterListDto) GetLogs() string {
	if o == nil || IsNil(o.Logs.Get()) {
		var ret string
		return ret
	}
	return *o.Logs.Get()
}

// GetLogsOk returns a tuple with the Logs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VClusterListDto) GetLogsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Logs.Get(), o.Logs.IsSet()
}

// HasLogs returns a boolean if a field has been set.
func (o *VClusterListDto) HasLogs() bool {
	if o != nil && o.Logs.IsSet() {
		return true
	}

	return false
}

// SetLogs gets a reference to the given NullableString and assigns it to the Logs field.
func (o *VClusterListDto) SetLogs(v string) {
	o.Logs.Set(&v)
}
// SetLogsNil sets the value for Logs to be an explicit nil
func (o *VClusterListDto) SetLogsNil() {
	o.Logs.Set(nil)
}

// UnsetLogs ensures that no value is present for Logs, not even an explicit nil
func (o *VClusterListDto) UnsetLogs() {
	o.Logs.Unset()
}

// GetCloudType returns the CloudType field value if set, zero value otherwise.
func (o *VClusterListDto) GetCloudType() CloudType {
	if o == nil || IsNil(o.CloudType) {
		var ret CloudType
		return ret
	}
	return *o.CloudType
}

// GetCloudTypeOk returns a tuple with the CloudType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetCloudTypeOk() (*CloudType, bool) {
	if o == nil || IsNil(o.CloudType) {
		return nil, false
	}
	return o.CloudType, true
}

// HasCloudType returns a boolean if a field has been set.
func (o *VClusterListDto) HasCloudType() bool {
	if o != nil && !IsNil(o.CloudType) {
		return true
	}

	return false
}

// SetCloudType gets a reference to the given CloudType and assigns it to the CloudType field.
func (o *VClusterListDto) SetCloudType(v CloudType) {
	o.CloudType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *VClusterListDto) GetStatus() ProjectStatus {
	if o == nil || IsNil(o.Status) {
		var ret ProjectStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetStatusOk() (*ProjectStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *VClusterListDto) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ProjectStatus and assigns it to the Status field.
func (o *VClusterListDto) SetStatus(v ProjectStatus) {
	o.Status = &v
}

// GetHealth returns the Health field value if set, zero value otherwise.
func (o *VClusterListDto) GetHealth() ProjectHealth {
	if o == nil || IsNil(o.Health) {
		var ret ProjectHealth
		return ret
	}
	return *o.Health
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetHealthOk() (*ProjectHealth, bool) {
	if o == nil || IsNil(o.Health) {
		return nil, false
	}
	return o.Health, true
}

// HasHealth returns a boolean if a field has been set.
func (o *VClusterListDto) HasHealth() bool {
	if o != nil && !IsNil(o.Health) {
		return true
	}

	return false
}

// SetHealth gets a reference to the given ProjectHealth and assigns it to the Health field.
func (o *VClusterListDto) SetHealth(v ProjectHealth) {
	o.Health = &v
}

func (o VClusterListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VClusterListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if !IsNil(o.IsLocked) {
		toSerialize["isLocked"] = o.IsLocked
	}
	if !IsNil(o.HasKubeConfigFile) {
		toSerialize["hasKubeConfigFile"] = o.HasKubeConfigFile
	}
	if !IsNil(o.IsMaintenanceModeEnabled) {
		toSerialize["isMaintenanceModeEnabled"] = o.IsMaintenanceModeEnabled
	}
	if o.OrganizationName.IsSet() {
		toSerialize["organizationName"] = o.OrganizationName.Get()
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if o.KubernetesVersion.IsSet() {
		toSerialize["kubernetesVersion"] = o.KubernetesVersion.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["createdAt"] = o.CreatedAt.Get()
	}
	if o.CreatedBy.IsSet() {
		toSerialize["createdBy"] = o.CreatedBy.Get()
	}
	if o.LastModified.IsSet() {
		toSerialize["lastModified"] = o.LastModified.Get()
	}
	if o.LastModifiedBy.IsSet() {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy.Get()
	}
	if !IsNil(o.AlertsCount) {
		toSerialize["alertsCount"] = o.AlertsCount
	}
	if o.ExpiredAt.IsSet() {
		toSerialize["expiredAt"] = o.ExpiredAt.Get()
	}
	if !IsNil(o.DeleteOnExpiration) {
		toSerialize["deleteOnExpiration"] = o.DeleteOnExpiration
	}
	if o.Logs.IsSet() {
		toSerialize["logs"] = o.Logs.Get()
	}
	if !IsNil(o.CloudType) {
		toSerialize["cloudType"] = o.CloudType
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Health) {
		toSerialize["health"] = o.Health
	}
	return toSerialize, nil
}

type NullableVClusterListDto struct {
	value *VClusterListDto
	isSet bool
}

func (v NullableVClusterListDto) Get() *VClusterListDto {
	return v.value
}

func (v *NullableVClusterListDto) Set(val *VClusterListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableVClusterListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableVClusterListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVClusterListDto(val *VClusterListDto) *NullableVClusterListDto {
	return &NullableVClusterListDto{value: val, isSet: true}
}

func (v NullableVClusterListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVClusterListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


