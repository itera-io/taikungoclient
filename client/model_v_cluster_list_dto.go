/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the VClusterListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VClusterListDto{}

// VClusterListDto struct for VClusterListDto
type VClusterListDto struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	IsVirtualCluster *bool `json:"isVirtualCluster,omitempty"`
	IsLocked *bool `json:"isLocked,omitempty"`
	HasKubeConfigFile *bool `json:"hasKubeConfigFile,omitempty"`
	IsMaintenanceModeEnabled *bool `json:"isMaintenanceModeEnabled,omitempty"`
	OrganizationName *string `json:"organizationName,omitempty"`
	OrganizationId *int32 `json:"organizationId,omitempty"`
	KubernetesVersion *string `json:"kubernetesVersion,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	CreatedBy *string `json:"createdBy,omitempty"`
	LastModified *string `json:"lastModified,omitempty"`
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`
	AlertsCount *int32 `json:"alertsCount,omitempty"`
	ExpiredAt *string `json:"expiredAt,omitempty"`
	DeleteOnExpiration *bool `json:"deleteOnExpiration,omitempty"`
	AlertingProfileId NullableInt32 `json:"alertingProfileId,omitempty"`
	AlertingProfileName *string `json:"alertingProfileName,omitempty"`
	AccessIp *string `json:"accessIp,omitempty"`
	CloudType *CloudType `json:"cloudType,omitempty"`
	Status *ProjectStatus `json:"status,omitempty"`
	Health *ProjectHealth `json:"health,omitempty"`
	LockButton *ButtonStatusDto `json:"lockButton,omitempty"`
	UnlockButton *ButtonStatusDto `json:"unlockButton,omitempty"`
	DeleteButton *ButtonStatusDto `json:"deleteButton,omitempty"`
	KubeInfoButton *ButtonStatusDto `json:"kubeInfoButton,omitempty"`
	SetExpirationDateButton *ButtonStatusDto `json:"setExpirationDateButton,omitempty"`
	ResetStatusButton *ButtonStatusDto `json:"resetStatusButton,omitempty"`
}

// NewVClusterListDto instantiates a new VClusterListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVClusterListDto() *VClusterListDto {
	this := VClusterListDto{}
	return &this
}

// NewVClusterListDtoWithDefaults instantiates a new VClusterListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVClusterListDtoWithDefaults() *VClusterListDto {
	this := VClusterListDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VClusterListDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VClusterListDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *VClusterListDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VClusterListDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VClusterListDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VClusterListDto) SetName(v string) {
	o.Name = &v
}

// GetIsVirtualCluster returns the IsVirtualCluster field value if set, zero value otherwise.
func (o *VClusterListDto) GetIsVirtualCluster() bool {
	if o == nil || IsNil(o.IsVirtualCluster) {
		var ret bool
		return ret
	}
	return *o.IsVirtualCluster
}

// GetIsVirtualClusterOk returns a tuple with the IsVirtualCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetIsVirtualClusterOk() (*bool, bool) {
	if o == nil || IsNil(o.IsVirtualCluster) {
		return nil, false
	}
	return o.IsVirtualCluster, true
}

// HasIsVirtualCluster returns a boolean if a field has been set.
func (o *VClusterListDto) HasIsVirtualCluster() bool {
	if o != nil && !IsNil(o.IsVirtualCluster) {
		return true
	}

	return false
}

// SetIsVirtualCluster gets a reference to the given bool and assigns it to the IsVirtualCluster field.
func (o *VClusterListDto) SetIsVirtualCluster(v bool) {
	o.IsVirtualCluster = &v
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise.
func (o *VClusterListDto) GetIsLocked() bool {
	if o == nil || IsNil(o.IsLocked) {
		var ret bool
		return ret
	}
	return *o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetIsLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocked) {
		return nil, false
	}
	return o.IsLocked, true
}

// HasIsLocked returns a boolean if a field has been set.
func (o *VClusterListDto) HasIsLocked() bool {
	if o != nil && !IsNil(o.IsLocked) {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given bool and assigns it to the IsLocked field.
func (o *VClusterListDto) SetIsLocked(v bool) {
	o.IsLocked = &v
}

// GetHasKubeConfigFile returns the HasKubeConfigFile field value if set, zero value otherwise.
func (o *VClusterListDto) GetHasKubeConfigFile() bool {
	if o == nil || IsNil(o.HasKubeConfigFile) {
		var ret bool
		return ret
	}
	return *o.HasKubeConfigFile
}

// GetHasKubeConfigFileOk returns a tuple with the HasKubeConfigFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetHasKubeConfigFileOk() (*bool, bool) {
	if o == nil || IsNil(o.HasKubeConfigFile) {
		return nil, false
	}
	return o.HasKubeConfigFile, true
}

// HasHasKubeConfigFile returns a boolean if a field has been set.
func (o *VClusterListDto) HasHasKubeConfigFile() bool {
	if o != nil && !IsNil(o.HasKubeConfigFile) {
		return true
	}

	return false
}

// SetHasKubeConfigFile gets a reference to the given bool and assigns it to the HasKubeConfigFile field.
func (o *VClusterListDto) SetHasKubeConfigFile(v bool) {
	o.HasKubeConfigFile = &v
}

// GetIsMaintenanceModeEnabled returns the IsMaintenanceModeEnabled field value if set, zero value otherwise.
func (o *VClusterListDto) GetIsMaintenanceModeEnabled() bool {
	if o == nil || IsNil(o.IsMaintenanceModeEnabled) {
		var ret bool
		return ret
	}
	return *o.IsMaintenanceModeEnabled
}

// GetIsMaintenanceModeEnabledOk returns a tuple with the IsMaintenanceModeEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetIsMaintenanceModeEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMaintenanceModeEnabled) {
		return nil, false
	}
	return o.IsMaintenanceModeEnabled, true
}

// HasIsMaintenanceModeEnabled returns a boolean if a field has been set.
func (o *VClusterListDto) HasIsMaintenanceModeEnabled() bool {
	if o != nil && !IsNil(o.IsMaintenanceModeEnabled) {
		return true
	}

	return false
}

// SetIsMaintenanceModeEnabled gets a reference to the given bool and assigns it to the IsMaintenanceModeEnabled field.
func (o *VClusterListDto) SetIsMaintenanceModeEnabled(v bool) {
	o.IsMaintenanceModeEnabled = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *VClusterListDto) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *VClusterListDto) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *VClusterListDto) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *VClusterListDto) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *VClusterListDto) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *VClusterListDto) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetKubernetesVersion returns the KubernetesVersion field value if set, zero value otherwise.
func (o *VClusterListDto) GetKubernetesVersion() string {
	if o == nil || IsNil(o.KubernetesVersion) {
		var ret string
		return ret
	}
	return *o.KubernetesVersion
}

// GetKubernetesVersionOk returns a tuple with the KubernetesVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetKubernetesVersionOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesVersion) {
		return nil, false
	}
	return o.KubernetesVersion, true
}

// HasKubernetesVersion returns a boolean if a field has been set.
func (o *VClusterListDto) HasKubernetesVersion() bool {
	if o != nil && !IsNil(o.KubernetesVersion) {
		return true
	}

	return false
}

// SetKubernetesVersion gets a reference to the given string and assigns it to the KubernetesVersion field.
func (o *VClusterListDto) SetKubernetesVersion(v string) {
	o.KubernetesVersion = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *VClusterListDto) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *VClusterListDto) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *VClusterListDto) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *VClusterListDto) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *VClusterListDto) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *VClusterListDto) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *VClusterListDto) GetLastModified() string {
	if o == nil || IsNil(o.LastModified) {
		var ret string
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetLastModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *VClusterListDto) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given string and assigns it to the LastModified field.
func (o *VClusterListDto) SetLastModified(v string) {
	o.LastModified = &v
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise.
func (o *VClusterListDto) GetLastModifiedBy() string {
	if o == nil || IsNil(o.LastModifiedBy) {
		var ret string
		return ret
	}
	return *o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetLastModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedBy) {
		return nil, false
	}
	return o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *VClusterListDto) HasLastModifiedBy() bool {
	if o != nil && !IsNil(o.LastModifiedBy) {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given string and assigns it to the LastModifiedBy field.
func (o *VClusterListDto) SetLastModifiedBy(v string) {
	o.LastModifiedBy = &v
}

// GetAlertsCount returns the AlertsCount field value if set, zero value otherwise.
func (o *VClusterListDto) GetAlertsCount() int32 {
	if o == nil || IsNil(o.AlertsCount) {
		var ret int32
		return ret
	}
	return *o.AlertsCount
}

// GetAlertsCountOk returns a tuple with the AlertsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetAlertsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AlertsCount) {
		return nil, false
	}
	return o.AlertsCount, true
}

// HasAlertsCount returns a boolean if a field has been set.
func (o *VClusterListDto) HasAlertsCount() bool {
	if o != nil && !IsNil(o.AlertsCount) {
		return true
	}

	return false
}

// SetAlertsCount gets a reference to the given int32 and assigns it to the AlertsCount field.
func (o *VClusterListDto) SetAlertsCount(v int32) {
	o.AlertsCount = &v
}

// GetExpiredAt returns the ExpiredAt field value if set, zero value otherwise.
func (o *VClusterListDto) GetExpiredAt() string {
	if o == nil || IsNil(o.ExpiredAt) {
		var ret string
		return ret
	}
	return *o.ExpiredAt
}

// GetExpiredAtOk returns a tuple with the ExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetExpiredAtOk() (*string, bool) {
	if o == nil || IsNil(o.ExpiredAt) {
		return nil, false
	}
	return o.ExpiredAt, true
}

// HasExpiredAt returns a boolean if a field has been set.
func (o *VClusterListDto) HasExpiredAt() bool {
	if o != nil && !IsNil(o.ExpiredAt) {
		return true
	}

	return false
}

// SetExpiredAt gets a reference to the given string and assigns it to the ExpiredAt field.
func (o *VClusterListDto) SetExpiredAt(v string) {
	o.ExpiredAt = &v
}

// GetDeleteOnExpiration returns the DeleteOnExpiration field value if set, zero value otherwise.
func (o *VClusterListDto) GetDeleteOnExpiration() bool {
	if o == nil || IsNil(o.DeleteOnExpiration) {
		var ret bool
		return ret
	}
	return *o.DeleteOnExpiration
}

// GetDeleteOnExpirationOk returns a tuple with the DeleteOnExpiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetDeleteOnExpirationOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteOnExpiration) {
		return nil, false
	}
	return o.DeleteOnExpiration, true
}

// HasDeleteOnExpiration returns a boolean if a field has been set.
func (o *VClusterListDto) HasDeleteOnExpiration() bool {
	if o != nil && !IsNil(o.DeleteOnExpiration) {
		return true
	}

	return false
}

// SetDeleteOnExpiration gets a reference to the given bool and assigns it to the DeleteOnExpiration field.
func (o *VClusterListDto) SetDeleteOnExpiration(v bool) {
	o.DeleteOnExpiration = &v
}

// GetAlertingProfileId returns the AlertingProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VClusterListDto) GetAlertingProfileId() int32 {
	if o == nil || IsNil(o.AlertingProfileId.Get()) {
		var ret int32
		return ret
	}
	return *o.AlertingProfileId.Get()
}

// GetAlertingProfileIdOk returns a tuple with the AlertingProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VClusterListDto) GetAlertingProfileIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlertingProfileId.Get(), o.AlertingProfileId.IsSet()
}

// HasAlertingProfileId returns a boolean if a field has been set.
func (o *VClusterListDto) HasAlertingProfileId() bool {
	if o != nil && o.AlertingProfileId.IsSet() {
		return true
	}

	return false
}

// SetAlertingProfileId gets a reference to the given NullableInt32 and assigns it to the AlertingProfileId field.
func (o *VClusterListDto) SetAlertingProfileId(v int32) {
	o.AlertingProfileId.Set(&v)
}
// SetAlertingProfileIdNil sets the value for AlertingProfileId to be an explicit nil
func (o *VClusterListDto) SetAlertingProfileIdNil() {
	o.AlertingProfileId.Set(nil)
}

// UnsetAlertingProfileId ensures that no value is present for AlertingProfileId, not even an explicit nil
func (o *VClusterListDto) UnsetAlertingProfileId() {
	o.AlertingProfileId.Unset()
}

// GetAlertingProfileName returns the AlertingProfileName field value if set, zero value otherwise.
func (o *VClusterListDto) GetAlertingProfileName() string {
	if o == nil || IsNil(o.AlertingProfileName) {
		var ret string
		return ret
	}
	return *o.AlertingProfileName
}

// GetAlertingProfileNameOk returns a tuple with the AlertingProfileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetAlertingProfileNameOk() (*string, bool) {
	if o == nil || IsNil(o.AlertingProfileName) {
		return nil, false
	}
	return o.AlertingProfileName, true
}

// HasAlertingProfileName returns a boolean if a field has been set.
func (o *VClusterListDto) HasAlertingProfileName() bool {
	if o != nil && !IsNil(o.AlertingProfileName) {
		return true
	}

	return false
}

// SetAlertingProfileName gets a reference to the given string and assigns it to the AlertingProfileName field.
func (o *VClusterListDto) SetAlertingProfileName(v string) {
	o.AlertingProfileName = &v
}

// GetAccessIp returns the AccessIp field value if set, zero value otherwise.
func (o *VClusterListDto) GetAccessIp() string {
	if o == nil || IsNil(o.AccessIp) {
		var ret string
		return ret
	}
	return *o.AccessIp
}

// GetAccessIpOk returns a tuple with the AccessIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetAccessIpOk() (*string, bool) {
	if o == nil || IsNil(o.AccessIp) {
		return nil, false
	}
	return o.AccessIp, true
}

// HasAccessIp returns a boolean if a field has been set.
func (o *VClusterListDto) HasAccessIp() bool {
	if o != nil && !IsNil(o.AccessIp) {
		return true
	}

	return false
}

// SetAccessIp gets a reference to the given string and assigns it to the AccessIp field.
func (o *VClusterListDto) SetAccessIp(v string) {
	o.AccessIp = &v
}

// GetCloudType returns the CloudType field value if set, zero value otherwise.
func (o *VClusterListDto) GetCloudType() CloudType {
	if o == nil || IsNil(o.CloudType) {
		var ret CloudType
		return ret
	}
	return *o.CloudType
}

// GetCloudTypeOk returns a tuple with the CloudType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetCloudTypeOk() (*CloudType, bool) {
	if o == nil || IsNil(o.CloudType) {
		return nil, false
	}
	return o.CloudType, true
}

// HasCloudType returns a boolean if a field has been set.
func (o *VClusterListDto) HasCloudType() bool {
	if o != nil && !IsNil(o.CloudType) {
		return true
	}

	return false
}

// SetCloudType gets a reference to the given CloudType and assigns it to the CloudType field.
func (o *VClusterListDto) SetCloudType(v CloudType) {
	o.CloudType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *VClusterListDto) GetStatus() ProjectStatus {
	if o == nil || IsNil(o.Status) {
		var ret ProjectStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetStatusOk() (*ProjectStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *VClusterListDto) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ProjectStatus and assigns it to the Status field.
func (o *VClusterListDto) SetStatus(v ProjectStatus) {
	o.Status = &v
}

// GetHealth returns the Health field value if set, zero value otherwise.
func (o *VClusterListDto) GetHealth() ProjectHealth {
	if o == nil || IsNil(o.Health) {
		var ret ProjectHealth
		return ret
	}
	return *o.Health
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetHealthOk() (*ProjectHealth, bool) {
	if o == nil || IsNil(o.Health) {
		return nil, false
	}
	return o.Health, true
}

// HasHealth returns a boolean if a field has been set.
func (o *VClusterListDto) HasHealth() bool {
	if o != nil && !IsNil(o.Health) {
		return true
	}

	return false
}

// SetHealth gets a reference to the given ProjectHealth and assigns it to the Health field.
func (o *VClusterListDto) SetHealth(v ProjectHealth) {
	o.Health = &v
}

// GetLockButton returns the LockButton field value if set, zero value otherwise.
func (o *VClusterListDto) GetLockButton() ButtonStatusDto {
	if o == nil || IsNil(o.LockButton) {
		var ret ButtonStatusDto
		return ret
	}
	return *o.LockButton
}

// GetLockButtonOk returns a tuple with the LockButton field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetLockButtonOk() (*ButtonStatusDto, bool) {
	if o == nil || IsNil(o.LockButton) {
		return nil, false
	}
	return o.LockButton, true
}

// HasLockButton returns a boolean if a field has been set.
func (o *VClusterListDto) HasLockButton() bool {
	if o != nil && !IsNil(o.LockButton) {
		return true
	}

	return false
}

// SetLockButton gets a reference to the given ButtonStatusDto and assigns it to the LockButton field.
func (o *VClusterListDto) SetLockButton(v ButtonStatusDto) {
	o.LockButton = &v
}

// GetUnlockButton returns the UnlockButton field value if set, zero value otherwise.
func (o *VClusterListDto) GetUnlockButton() ButtonStatusDto {
	if o == nil || IsNil(o.UnlockButton) {
		var ret ButtonStatusDto
		return ret
	}
	return *o.UnlockButton
}

// GetUnlockButtonOk returns a tuple with the UnlockButton field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetUnlockButtonOk() (*ButtonStatusDto, bool) {
	if o == nil || IsNil(o.UnlockButton) {
		return nil, false
	}
	return o.UnlockButton, true
}

// HasUnlockButton returns a boolean if a field has been set.
func (o *VClusterListDto) HasUnlockButton() bool {
	if o != nil && !IsNil(o.UnlockButton) {
		return true
	}

	return false
}

// SetUnlockButton gets a reference to the given ButtonStatusDto and assigns it to the UnlockButton field.
func (o *VClusterListDto) SetUnlockButton(v ButtonStatusDto) {
	o.UnlockButton = &v
}

// GetDeleteButton returns the DeleteButton field value if set, zero value otherwise.
func (o *VClusterListDto) GetDeleteButton() ButtonStatusDto {
	if o == nil || IsNil(o.DeleteButton) {
		var ret ButtonStatusDto
		return ret
	}
	return *o.DeleteButton
}

// GetDeleteButtonOk returns a tuple with the DeleteButton field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetDeleteButtonOk() (*ButtonStatusDto, bool) {
	if o == nil || IsNil(o.DeleteButton) {
		return nil, false
	}
	return o.DeleteButton, true
}

// HasDeleteButton returns a boolean if a field has been set.
func (o *VClusterListDto) HasDeleteButton() bool {
	if o != nil && !IsNil(o.DeleteButton) {
		return true
	}

	return false
}

// SetDeleteButton gets a reference to the given ButtonStatusDto and assigns it to the DeleteButton field.
func (o *VClusterListDto) SetDeleteButton(v ButtonStatusDto) {
	o.DeleteButton = &v
}

// GetKubeInfoButton returns the KubeInfoButton field value if set, zero value otherwise.
func (o *VClusterListDto) GetKubeInfoButton() ButtonStatusDto {
	if o == nil || IsNil(o.KubeInfoButton) {
		var ret ButtonStatusDto
		return ret
	}
	return *o.KubeInfoButton
}

// GetKubeInfoButtonOk returns a tuple with the KubeInfoButton field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetKubeInfoButtonOk() (*ButtonStatusDto, bool) {
	if o == nil || IsNil(o.KubeInfoButton) {
		return nil, false
	}
	return o.KubeInfoButton, true
}

// HasKubeInfoButton returns a boolean if a field has been set.
func (o *VClusterListDto) HasKubeInfoButton() bool {
	if o != nil && !IsNil(o.KubeInfoButton) {
		return true
	}

	return false
}

// SetKubeInfoButton gets a reference to the given ButtonStatusDto and assigns it to the KubeInfoButton field.
func (o *VClusterListDto) SetKubeInfoButton(v ButtonStatusDto) {
	o.KubeInfoButton = &v
}

// GetSetExpirationDateButton returns the SetExpirationDateButton field value if set, zero value otherwise.
func (o *VClusterListDto) GetSetExpirationDateButton() ButtonStatusDto {
	if o == nil || IsNil(o.SetExpirationDateButton) {
		var ret ButtonStatusDto
		return ret
	}
	return *o.SetExpirationDateButton
}

// GetSetExpirationDateButtonOk returns a tuple with the SetExpirationDateButton field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetSetExpirationDateButtonOk() (*ButtonStatusDto, bool) {
	if o == nil || IsNil(o.SetExpirationDateButton) {
		return nil, false
	}
	return o.SetExpirationDateButton, true
}

// HasSetExpirationDateButton returns a boolean if a field has been set.
func (o *VClusterListDto) HasSetExpirationDateButton() bool {
	if o != nil && !IsNil(o.SetExpirationDateButton) {
		return true
	}

	return false
}

// SetSetExpirationDateButton gets a reference to the given ButtonStatusDto and assigns it to the SetExpirationDateButton field.
func (o *VClusterListDto) SetSetExpirationDateButton(v ButtonStatusDto) {
	o.SetExpirationDateButton = &v
}

// GetResetStatusButton returns the ResetStatusButton field value if set, zero value otherwise.
func (o *VClusterListDto) GetResetStatusButton() ButtonStatusDto {
	if o == nil || IsNil(o.ResetStatusButton) {
		var ret ButtonStatusDto
		return ret
	}
	return *o.ResetStatusButton
}

// GetResetStatusButtonOk returns a tuple with the ResetStatusButton field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterListDto) GetResetStatusButtonOk() (*ButtonStatusDto, bool) {
	if o == nil || IsNil(o.ResetStatusButton) {
		return nil, false
	}
	return o.ResetStatusButton, true
}

// HasResetStatusButton returns a boolean if a field has been set.
func (o *VClusterListDto) HasResetStatusButton() bool {
	if o != nil && !IsNil(o.ResetStatusButton) {
		return true
	}

	return false
}

// SetResetStatusButton gets a reference to the given ButtonStatusDto and assigns it to the ResetStatusButton field.
func (o *VClusterListDto) SetResetStatusButton(v ButtonStatusDto) {
	o.ResetStatusButton = &v
}

func (o VClusterListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VClusterListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.IsVirtualCluster) {
		toSerialize["isVirtualCluster"] = o.IsVirtualCluster
	}
	if !IsNil(o.IsLocked) {
		toSerialize["isLocked"] = o.IsLocked
	}
	if !IsNil(o.HasKubeConfigFile) {
		toSerialize["hasKubeConfigFile"] = o.HasKubeConfigFile
	}
	if !IsNil(o.IsMaintenanceModeEnabled) {
		toSerialize["isMaintenanceModeEnabled"] = o.IsMaintenanceModeEnabled
	}
	if !IsNil(o.OrganizationName) {
		toSerialize["organizationName"] = o.OrganizationName
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.KubernetesVersion) {
		toSerialize["kubernetesVersion"] = o.KubernetesVersion
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.LastModified) {
		toSerialize["lastModified"] = o.LastModified
	}
	if !IsNil(o.LastModifiedBy) {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}
	if !IsNil(o.AlertsCount) {
		toSerialize["alertsCount"] = o.AlertsCount
	}
	if !IsNil(o.ExpiredAt) {
		toSerialize["expiredAt"] = o.ExpiredAt
	}
	if !IsNil(o.DeleteOnExpiration) {
		toSerialize["deleteOnExpiration"] = o.DeleteOnExpiration
	}
	if o.AlertingProfileId.IsSet() {
		toSerialize["alertingProfileId"] = o.AlertingProfileId.Get()
	}
	if !IsNil(o.AlertingProfileName) {
		toSerialize["alertingProfileName"] = o.AlertingProfileName
	}
	if !IsNil(o.AccessIp) {
		toSerialize["accessIp"] = o.AccessIp
	}
	if !IsNil(o.CloudType) {
		toSerialize["cloudType"] = o.CloudType
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Health) {
		toSerialize["health"] = o.Health
	}
	if !IsNil(o.LockButton) {
		toSerialize["lockButton"] = o.LockButton
	}
	if !IsNil(o.UnlockButton) {
		toSerialize["unlockButton"] = o.UnlockButton
	}
	if !IsNil(o.DeleteButton) {
		toSerialize["deleteButton"] = o.DeleteButton
	}
	if !IsNil(o.KubeInfoButton) {
		toSerialize["kubeInfoButton"] = o.KubeInfoButton
	}
	if !IsNil(o.SetExpirationDateButton) {
		toSerialize["setExpirationDateButton"] = o.SetExpirationDateButton
	}
	if !IsNil(o.ResetStatusButton) {
		toSerialize["resetStatusButton"] = o.ResetStatusButton
	}
	return toSerialize, nil
}

type NullableVClusterListDto struct {
	value *VClusterListDto
	isSet bool
}

func (v NullableVClusterListDto) Get() *VClusterListDto {
	return v.value
}

func (v *NullableVClusterListDto) Set(val *VClusterListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableVClusterListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableVClusterListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVClusterListDto(val *VClusterListDto) *NullableVClusterListDto {
	return &NullableVClusterListDto{value: val, isSet: true}
}

func (v NullableVClusterListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVClusterListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


