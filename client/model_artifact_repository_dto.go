/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ArtifactRepositoryDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArtifactRepositoryDto{}

// ArtifactRepositoryDto struct for ArtifactRepositoryDto
type ArtifactRepositoryDto struct {
	RepositoryId NullableString `json:"repositoryId"`
	AppRepoId int32 `json:"appRepoId"`
	Name string `json:"name"`
	DisplayName NullableString `json:"displayName"`
	Url string `json:"url"`
	OrganizationName string `json:"organizationName"`
	Disabled bool `json:"disabled"`
	VerifiedPublisher bool `json:"verifiedPublisher"`
	Official bool `json:"official"`
	IsBound bool `json:"isBound"`
	IsPrivate *bool `json:"isPrivate,omitempty"`
	IsTaikun bool `json:"isTaikun"`
	HasCatalogApp bool `json:"hasCatalogApp"`
}

type _ArtifactRepositoryDto ArtifactRepositoryDto

// NewArtifactRepositoryDto instantiates a new ArtifactRepositoryDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArtifactRepositoryDto(repositoryId NullableString, appRepoId int32, name string, displayName NullableString, url string, organizationName string, disabled bool, verifiedPublisher bool, official bool, isBound bool, isTaikun bool, hasCatalogApp bool) *ArtifactRepositoryDto {
	this := ArtifactRepositoryDto{}
	this.RepositoryId = repositoryId
	this.AppRepoId = appRepoId
	this.Name = name
	this.DisplayName = displayName
	this.Url = url
	this.OrganizationName = organizationName
	this.Disabled = disabled
	this.VerifiedPublisher = verifiedPublisher
	this.Official = official
	this.IsBound = isBound
	this.IsTaikun = isTaikun
	this.HasCatalogApp = hasCatalogApp
	return &this
}

// NewArtifactRepositoryDtoWithDefaults instantiates a new ArtifactRepositoryDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArtifactRepositoryDtoWithDefaults() *ArtifactRepositoryDto {
	this := ArtifactRepositoryDto{}
	return &this
}

// GetRepositoryId returns the RepositoryId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ArtifactRepositoryDto) GetRepositoryId() string {
	if o == nil || o.RepositoryId.Get() == nil {
		var ret string
		return ret
	}

	return *o.RepositoryId.Get()
}

// GetRepositoryIdOk returns a tuple with the RepositoryId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtifactRepositoryDto) GetRepositoryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RepositoryId.Get(), o.RepositoryId.IsSet()
}

// SetRepositoryId sets field value
func (o *ArtifactRepositoryDto) SetRepositoryId(v string) {
	o.RepositoryId.Set(&v)
}

// GetAppRepoId returns the AppRepoId field value
func (o *ArtifactRepositoryDto) GetAppRepoId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AppRepoId
}

// GetAppRepoIdOk returns a tuple with the AppRepoId field value
// and a boolean to check if the value has been set.
func (o *ArtifactRepositoryDto) GetAppRepoIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppRepoId, true
}

// SetAppRepoId sets field value
func (o *ArtifactRepositoryDto) SetAppRepoId(v int32) {
	o.AppRepoId = v
}

// GetName returns the Name field value
func (o *ArtifactRepositoryDto) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ArtifactRepositoryDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ArtifactRepositoryDto) SetName(v string) {
	o.Name = v
}

// GetDisplayName returns the DisplayName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ArtifactRepositoryDto) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}

	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtifactRepositoryDto) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// SetDisplayName sets field value
func (o *ArtifactRepositoryDto) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}

// GetUrl returns the Url field value
func (o *ArtifactRepositoryDto) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ArtifactRepositoryDto) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ArtifactRepositoryDto) SetUrl(v string) {
	o.Url = v
}

// GetOrganizationName returns the OrganizationName field value
func (o *ArtifactRepositoryDto) GetOrganizationName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value
// and a boolean to check if the value has been set.
func (o *ArtifactRepositoryDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationName, true
}

// SetOrganizationName sets field value
func (o *ArtifactRepositoryDto) SetOrganizationName(v string) {
	o.OrganizationName = v
}

// GetDisabled returns the Disabled field value
func (o *ArtifactRepositoryDto) GetDisabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value
// and a boolean to check if the value has been set.
func (o *ArtifactRepositoryDto) GetDisabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Disabled, true
}

// SetDisabled sets field value
func (o *ArtifactRepositoryDto) SetDisabled(v bool) {
	o.Disabled = v
}

// GetVerifiedPublisher returns the VerifiedPublisher field value
func (o *ArtifactRepositoryDto) GetVerifiedPublisher() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.VerifiedPublisher
}

// GetVerifiedPublisherOk returns a tuple with the VerifiedPublisher field value
// and a boolean to check if the value has been set.
func (o *ArtifactRepositoryDto) GetVerifiedPublisherOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VerifiedPublisher, true
}

// SetVerifiedPublisher sets field value
func (o *ArtifactRepositoryDto) SetVerifiedPublisher(v bool) {
	o.VerifiedPublisher = v
}

// GetOfficial returns the Official field value
func (o *ArtifactRepositoryDto) GetOfficial() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Official
}

// GetOfficialOk returns a tuple with the Official field value
// and a boolean to check if the value has been set.
func (o *ArtifactRepositoryDto) GetOfficialOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Official, true
}

// SetOfficial sets field value
func (o *ArtifactRepositoryDto) SetOfficial(v bool) {
	o.Official = v
}

// GetIsBound returns the IsBound field value
func (o *ArtifactRepositoryDto) GetIsBound() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsBound
}

// GetIsBoundOk returns a tuple with the IsBound field value
// and a boolean to check if the value has been set.
func (o *ArtifactRepositoryDto) GetIsBoundOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsBound, true
}

// SetIsBound sets field value
func (o *ArtifactRepositoryDto) SetIsBound(v bool) {
	o.IsBound = v
}

// GetIsPrivate returns the IsPrivate field value if set, zero value otherwise.
func (o *ArtifactRepositoryDto) GetIsPrivate() bool {
	if o == nil || IsNil(o.IsPrivate) {
		var ret bool
		return ret
	}
	return *o.IsPrivate
}

// GetIsPrivateOk returns a tuple with the IsPrivate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactRepositoryDto) GetIsPrivateOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPrivate) {
		return nil, false
	}
	return o.IsPrivate, true
}

// HasIsPrivate returns a boolean if a field has been set.
func (o *ArtifactRepositoryDto) HasIsPrivate() bool {
	if o != nil && !IsNil(o.IsPrivate) {
		return true
	}

	return false
}

// SetIsPrivate gets a reference to the given bool and assigns it to the IsPrivate field.
func (o *ArtifactRepositoryDto) SetIsPrivate(v bool) {
	o.IsPrivate = &v
}

// GetIsTaikun returns the IsTaikun field value
func (o *ArtifactRepositoryDto) GetIsTaikun() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsTaikun
}

// GetIsTaikunOk returns a tuple with the IsTaikun field value
// and a boolean to check if the value has been set.
func (o *ArtifactRepositoryDto) GetIsTaikunOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsTaikun, true
}

// SetIsTaikun sets field value
func (o *ArtifactRepositoryDto) SetIsTaikun(v bool) {
	o.IsTaikun = v
}

// GetHasCatalogApp returns the HasCatalogApp field value
func (o *ArtifactRepositoryDto) GetHasCatalogApp() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasCatalogApp
}

// GetHasCatalogAppOk returns a tuple with the HasCatalogApp field value
// and a boolean to check if the value has been set.
func (o *ArtifactRepositoryDto) GetHasCatalogAppOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasCatalogApp, true
}

// SetHasCatalogApp sets field value
func (o *ArtifactRepositoryDto) SetHasCatalogApp(v bool) {
	o.HasCatalogApp = v
}

func (o ArtifactRepositoryDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArtifactRepositoryDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["repositoryId"] = o.RepositoryId.Get()
	toSerialize["appRepoId"] = o.AppRepoId
	toSerialize["name"] = o.Name
	toSerialize["displayName"] = o.DisplayName.Get()
	toSerialize["url"] = o.Url
	toSerialize["organizationName"] = o.OrganizationName
	toSerialize["disabled"] = o.Disabled
	toSerialize["verifiedPublisher"] = o.VerifiedPublisher
	toSerialize["official"] = o.Official
	toSerialize["isBound"] = o.IsBound
	if !IsNil(o.IsPrivate) {
		toSerialize["isPrivate"] = o.IsPrivate
	}
	toSerialize["isTaikun"] = o.IsTaikun
	toSerialize["hasCatalogApp"] = o.HasCatalogApp
	return toSerialize, nil
}

func (o *ArtifactRepositoryDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"repositoryId",
		"appRepoId",
		"name",
		"displayName",
		"url",
		"organizationName",
		"disabled",
		"verifiedPublisher",
		"official",
		"isBound",
		"isTaikun",
		"hasCatalogApp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varArtifactRepositoryDto := _ArtifactRepositoryDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varArtifactRepositoryDto)

	if err != nil {
		return err
	}

	*o = ArtifactRepositoryDto(varArtifactRepositoryDto)

	return err
}

type NullableArtifactRepositoryDto struct {
	value *ArtifactRepositoryDto
	isSet bool
}

func (v NullableArtifactRepositoryDto) Get() *ArtifactRepositoryDto {
	return v.value
}

func (v *NullableArtifactRepositoryDto) Set(val *ArtifactRepositoryDto) {
	v.value = val
	v.isSet = true
}

func (v NullableArtifactRepositoryDto) IsSet() bool {
	return v.isSet
}

func (v *NullableArtifactRepositoryDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArtifactRepositoryDto(val *ArtifactRepositoryDto) *NullableArtifactRepositoryDto {
	return &NullableArtifactRepositoryDto{value: val, isSet: true}
}

func (v NullableArtifactRepositoryDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArtifactRepositoryDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


