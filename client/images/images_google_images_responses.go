// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ImagesGoogleImagesReader is a Reader for the ImagesGoogleImages structure.
type ImagesGoogleImagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImagesGoogleImagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImagesGoogleImagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImagesGoogleImagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewImagesGoogleImagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewImagesGoogleImagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewImagesGoogleImagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImagesGoogleImagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewImagesGoogleImagesOK creates a ImagesGoogleImagesOK with default headers values
func NewImagesGoogleImagesOK() *ImagesGoogleImagesOK {
	return &ImagesGoogleImagesOK{}
}

/*
ImagesGoogleImagesOK describes a response with status code 200, with default header values.

Success
*/
type ImagesGoogleImagesOK struct {
	Payload *ImagesGoogleImagesOKBody
}

// IsSuccess returns true when this images google images o k response has a 2xx status code
func (o *ImagesGoogleImagesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this images google images o k response has a 3xx status code
func (o *ImagesGoogleImagesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images google images o k response has a 4xx status code
func (o *ImagesGoogleImagesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this images google images o k response has a 5xx status code
func (o *ImagesGoogleImagesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this images google images o k response a status code equal to that given
func (o *ImagesGoogleImagesOK) IsCode(code int) bool {
	return code == 200
}

func (o *ImagesGoogleImagesOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesOK  %+v", 200, o.Payload)
}

func (o *ImagesGoogleImagesOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesOK  %+v", 200, o.Payload)
}

func (o *ImagesGoogleImagesOK) GetPayload() *ImagesGoogleImagesOKBody {
	return o.Payload
}

func (o *ImagesGoogleImagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ImagesGoogleImagesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesGoogleImagesBadRequest creates a ImagesGoogleImagesBadRequest with default headers values
func NewImagesGoogleImagesBadRequest() *ImagesGoogleImagesBadRequest {
	return &ImagesGoogleImagesBadRequest{}
}

/*
ImagesGoogleImagesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ImagesGoogleImagesBadRequest struct {
	Payload []*ImagesGoogleImagesBadRequestBodyItems0
}

// IsSuccess returns true when this images google images bad request response has a 2xx status code
func (o *ImagesGoogleImagesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images google images bad request response has a 3xx status code
func (o *ImagesGoogleImagesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images google images bad request response has a 4xx status code
func (o *ImagesGoogleImagesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this images google images bad request response has a 5xx status code
func (o *ImagesGoogleImagesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this images google images bad request response a status code equal to that given
func (o *ImagesGoogleImagesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ImagesGoogleImagesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesBadRequest  %+v", 400, o.Payload)
}

func (o *ImagesGoogleImagesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesBadRequest  %+v", 400, o.Payload)
}

func (o *ImagesGoogleImagesBadRequest) GetPayload() []*ImagesGoogleImagesBadRequestBodyItems0 {
	return o.Payload
}

func (o *ImagesGoogleImagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesGoogleImagesUnauthorized creates a ImagesGoogleImagesUnauthorized with default headers values
func NewImagesGoogleImagesUnauthorized() *ImagesGoogleImagesUnauthorized {
	return &ImagesGoogleImagesUnauthorized{}
}

/*
ImagesGoogleImagesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ImagesGoogleImagesUnauthorized struct {
	Payload *ImagesGoogleImagesUnauthorizedBody
}

// IsSuccess returns true when this images google images unauthorized response has a 2xx status code
func (o *ImagesGoogleImagesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images google images unauthorized response has a 3xx status code
func (o *ImagesGoogleImagesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images google images unauthorized response has a 4xx status code
func (o *ImagesGoogleImagesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this images google images unauthorized response has a 5xx status code
func (o *ImagesGoogleImagesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this images google images unauthorized response a status code equal to that given
func (o *ImagesGoogleImagesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ImagesGoogleImagesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesUnauthorized  %+v", 401, o.Payload)
}

func (o *ImagesGoogleImagesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesUnauthorized  %+v", 401, o.Payload)
}

func (o *ImagesGoogleImagesUnauthorized) GetPayload() *ImagesGoogleImagesUnauthorizedBody {
	return o.Payload
}

func (o *ImagesGoogleImagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ImagesGoogleImagesUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesGoogleImagesForbidden creates a ImagesGoogleImagesForbidden with default headers values
func NewImagesGoogleImagesForbidden() *ImagesGoogleImagesForbidden {
	return &ImagesGoogleImagesForbidden{}
}

/*
ImagesGoogleImagesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ImagesGoogleImagesForbidden struct {
	Payload *ImagesGoogleImagesForbiddenBody
}

// IsSuccess returns true when this images google images forbidden response has a 2xx status code
func (o *ImagesGoogleImagesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images google images forbidden response has a 3xx status code
func (o *ImagesGoogleImagesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images google images forbidden response has a 4xx status code
func (o *ImagesGoogleImagesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this images google images forbidden response has a 5xx status code
func (o *ImagesGoogleImagesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this images google images forbidden response a status code equal to that given
func (o *ImagesGoogleImagesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ImagesGoogleImagesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesForbidden  %+v", 403, o.Payload)
}

func (o *ImagesGoogleImagesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesForbidden  %+v", 403, o.Payload)
}

func (o *ImagesGoogleImagesForbidden) GetPayload() *ImagesGoogleImagesForbiddenBody {
	return o.Payload
}

func (o *ImagesGoogleImagesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ImagesGoogleImagesForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesGoogleImagesNotFound creates a ImagesGoogleImagesNotFound with default headers values
func NewImagesGoogleImagesNotFound() *ImagesGoogleImagesNotFound {
	return &ImagesGoogleImagesNotFound{}
}

/*
ImagesGoogleImagesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ImagesGoogleImagesNotFound struct {
	Payload *ImagesGoogleImagesNotFoundBody
}

// IsSuccess returns true when this images google images not found response has a 2xx status code
func (o *ImagesGoogleImagesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images google images not found response has a 3xx status code
func (o *ImagesGoogleImagesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images google images not found response has a 4xx status code
func (o *ImagesGoogleImagesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this images google images not found response has a 5xx status code
func (o *ImagesGoogleImagesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this images google images not found response a status code equal to that given
func (o *ImagesGoogleImagesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ImagesGoogleImagesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesNotFound  %+v", 404, o.Payload)
}

func (o *ImagesGoogleImagesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesNotFound  %+v", 404, o.Payload)
}

func (o *ImagesGoogleImagesNotFound) GetPayload() *ImagesGoogleImagesNotFoundBody {
	return o.Payload
}

func (o *ImagesGoogleImagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ImagesGoogleImagesNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesGoogleImagesInternalServerError creates a ImagesGoogleImagesInternalServerError with default headers values
func NewImagesGoogleImagesInternalServerError() *ImagesGoogleImagesInternalServerError {
	return &ImagesGoogleImagesInternalServerError{}
}

/*
ImagesGoogleImagesInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ImagesGoogleImagesInternalServerError struct {
}

// IsSuccess returns true when this images google images internal server error response has a 2xx status code
func (o *ImagesGoogleImagesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images google images internal server error response has a 3xx status code
func (o *ImagesGoogleImagesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images google images internal server error response has a 4xx status code
func (o *ImagesGoogleImagesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this images google images internal server error response has a 5xx status code
func (o *ImagesGoogleImagesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this images google images internal server error response a status code equal to that given
func (o *ImagesGoogleImagesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ImagesGoogleImagesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesInternalServerError ", 500)
}

func (o *ImagesGoogleImagesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesInternalServerError ", 500)
}

func (o *ImagesGoogleImagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
ImagesGoogleImagesBadRequestBodyItems0 images google images bad request body items0
swagger:model ImagesGoogleImagesBadRequestBodyItems0
*/
type ImagesGoogleImagesBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this images google images bad request body items0
func (o *ImagesGoogleImagesBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this images google images bad request body items0 based on context it is used
func (o *ImagesGoogleImagesBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ImagesGoogleImagesBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesGoogleImagesBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res ImagesGoogleImagesBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ImagesGoogleImagesForbiddenBody images google images forbidden body
swagger:model ImagesGoogleImagesForbiddenBody
*/
type ImagesGoogleImagesForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this images google images forbidden body
func (o *ImagesGoogleImagesForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this images google images forbidden body based on context it is used
func (o *ImagesGoogleImagesForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ImagesGoogleImagesForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesGoogleImagesForbiddenBody) UnmarshalBinary(b []byte) error {
	var res ImagesGoogleImagesForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ImagesGoogleImagesNotFoundBody images google images not found body
swagger:model ImagesGoogleImagesNotFoundBody
*/
type ImagesGoogleImagesNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this images google images not found body
func (o *ImagesGoogleImagesNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this images google images not found body based on context it is used
func (o *ImagesGoogleImagesNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ImagesGoogleImagesNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesGoogleImagesNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ImagesGoogleImagesNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ImagesGoogleImagesOKBody images google images o k body
swagger:model ImagesGoogleImagesOKBody
*/
type ImagesGoogleImagesOKBody struct {

	// data
	Data []*ImagesGoogleImagesOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this images google images o k body
func (o *ImagesGoogleImagesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ImagesGoogleImagesOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("imagesGoogleImagesOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("imagesGoogleImagesOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this images google images o k body based on the context it is used
func (o *ImagesGoogleImagesOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ImagesGoogleImagesOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("imagesGoogleImagesOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("imagesGoogleImagesOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ImagesGoogleImagesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesGoogleImagesOKBody) UnmarshalBinary(b []byte) error {
	var res ImagesGoogleImagesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ImagesGoogleImagesOKBodyDataItems0 images google images o k body data items0
swagger:model ImagesGoogleImagesOKBodyDataItems0
*/
type ImagesGoogleImagesOKBodyDataItems0 struct {

	// id
	ID string `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this images google images o k body data items0
func (o *ImagesGoogleImagesOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this images google images o k body data items0 based on context it is used
func (o *ImagesGoogleImagesOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ImagesGoogleImagesOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesGoogleImagesOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res ImagesGoogleImagesOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ImagesGoogleImagesUnauthorizedBody images google images unauthorized body
swagger:model ImagesGoogleImagesUnauthorizedBody
*/
type ImagesGoogleImagesUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this images google images unauthorized body
func (o *ImagesGoogleImagesUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this images google images unauthorized body based on context it is used
func (o *ImagesGoogleImagesUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ImagesGoogleImagesUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesGoogleImagesUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res ImagesGoogleImagesUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
