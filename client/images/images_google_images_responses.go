// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ImagesGoogleImagesReader is a Reader for the ImagesGoogleImages structure.
type ImagesGoogleImagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImagesGoogleImagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImagesGoogleImagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImagesGoogleImagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewImagesGoogleImagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewImagesGoogleImagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewImagesGoogleImagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImagesGoogleImagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewImagesGoogleImagesOK creates a ImagesGoogleImagesOK with default headers values
func NewImagesGoogleImagesOK() *ImagesGoogleImagesOK {
	return &ImagesGoogleImagesOK{}
}

/*
ImagesGoogleImagesOK describes a response with status code 200, with default header values.

Success
*/
type ImagesGoogleImagesOK struct {
	Payload *models.GoogleImageList
}

// IsSuccess returns true when this images google images o k response has a 2xx status code
func (o *ImagesGoogleImagesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this images google images o k response has a 3xx status code
func (o *ImagesGoogleImagesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images google images o k response has a 4xx status code
func (o *ImagesGoogleImagesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this images google images o k response has a 5xx status code
func (o *ImagesGoogleImagesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this images google images o k response a status code equal to that given
func (o *ImagesGoogleImagesOK) IsCode(code int) bool {
	return code == 200
}

func (o *ImagesGoogleImagesOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesOK  %+v", 200, o.Payload)
}

func (o *ImagesGoogleImagesOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesOK  %+v", 200, o.Payload)
}

func (o *ImagesGoogleImagesOK) GetPayload() *models.GoogleImageList {
	return o.Payload
}

func (o *ImagesGoogleImagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GoogleImageList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesGoogleImagesBadRequest creates a ImagesGoogleImagesBadRequest with default headers values
func NewImagesGoogleImagesBadRequest() *ImagesGoogleImagesBadRequest {
	return &ImagesGoogleImagesBadRequest{}
}

/*
ImagesGoogleImagesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ImagesGoogleImagesBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this images google images bad request response has a 2xx status code
func (o *ImagesGoogleImagesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images google images bad request response has a 3xx status code
func (o *ImagesGoogleImagesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images google images bad request response has a 4xx status code
func (o *ImagesGoogleImagesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this images google images bad request response has a 5xx status code
func (o *ImagesGoogleImagesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this images google images bad request response a status code equal to that given
func (o *ImagesGoogleImagesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ImagesGoogleImagesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesBadRequest  %+v", 400, o.Payload)
}

func (o *ImagesGoogleImagesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesBadRequest  %+v", 400, o.Payload)
}

func (o *ImagesGoogleImagesBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ImagesGoogleImagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesGoogleImagesUnauthorized creates a ImagesGoogleImagesUnauthorized with default headers values
func NewImagesGoogleImagesUnauthorized() *ImagesGoogleImagesUnauthorized {
	return &ImagesGoogleImagesUnauthorized{}
}

/*
ImagesGoogleImagesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ImagesGoogleImagesUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this images google images unauthorized response has a 2xx status code
func (o *ImagesGoogleImagesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images google images unauthorized response has a 3xx status code
func (o *ImagesGoogleImagesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images google images unauthorized response has a 4xx status code
func (o *ImagesGoogleImagesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this images google images unauthorized response has a 5xx status code
func (o *ImagesGoogleImagesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this images google images unauthorized response a status code equal to that given
func (o *ImagesGoogleImagesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ImagesGoogleImagesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesUnauthorized  %+v", 401, o.Payload)
}

func (o *ImagesGoogleImagesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesUnauthorized  %+v", 401, o.Payload)
}

func (o *ImagesGoogleImagesUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ImagesGoogleImagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesGoogleImagesForbidden creates a ImagesGoogleImagesForbidden with default headers values
func NewImagesGoogleImagesForbidden() *ImagesGoogleImagesForbidden {
	return &ImagesGoogleImagesForbidden{}
}

/*
ImagesGoogleImagesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ImagesGoogleImagesForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this images google images forbidden response has a 2xx status code
func (o *ImagesGoogleImagesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images google images forbidden response has a 3xx status code
func (o *ImagesGoogleImagesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images google images forbidden response has a 4xx status code
func (o *ImagesGoogleImagesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this images google images forbidden response has a 5xx status code
func (o *ImagesGoogleImagesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this images google images forbidden response a status code equal to that given
func (o *ImagesGoogleImagesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ImagesGoogleImagesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesForbidden  %+v", 403, o.Payload)
}

func (o *ImagesGoogleImagesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesForbidden  %+v", 403, o.Payload)
}

func (o *ImagesGoogleImagesForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ImagesGoogleImagesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesGoogleImagesNotFound creates a ImagesGoogleImagesNotFound with default headers values
func NewImagesGoogleImagesNotFound() *ImagesGoogleImagesNotFound {
	return &ImagesGoogleImagesNotFound{}
}

/*
ImagesGoogleImagesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ImagesGoogleImagesNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this images google images not found response has a 2xx status code
func (o *ImagesGoogleImagesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images google images not found response has a 3xx status code
func (o *ImagesGoogleImagesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images google images not found response has a 4xx status code
func (o *ImagesGoogleImagesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this images google images not found response has a 5xx status code
func (o *ImagesGoogleImagesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this images google images not found response a status code equal to that given
func (o *ImagesGoogleImagesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ImagesGoogleImagesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesNotFound  %+v", 404, o.Payload)
}

func (o *ImagesGoogleImagesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesNotFound  %+v", 404, o.Payload)
}

func (o *ImagesGoogleImagesNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ImagesGoogleImagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesGoogleImagesInternalServerError creates a ImagesGoogleImagesInternalServerError with default headers values
func NewImagesGoogleImagesInternalServerError() *ImagesGoogleImagesInternalServerError {
	return &ImagesGoogleImagesInternalServerError{}
}

/*
ImagesGoogleImagesInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ImagesGoogleImagesInternalServerError struct {
}

// IsSuccess returns true when this images google images internal server error response has a 2xx status code
func (o *ImagesGoogleImagesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images google images internal server error response has a 3xx status code
func (o *ImagesGoogleImagesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images google images internal server error response has a 4xx status code
func (o *ImagesGoogleImagesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this images google images internal server error response has a 5xx status code
func (o *ImagesGoogleImagesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this images google images internal server error response a status code equal to that given
func (o *ImagesGoogleImagesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ImagesGoogleImagesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesInternalServerError ", 500)
}

func (o *ImagesGoogleImagesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/google/{cloudId}/{type}][%d] imagesGoogleImagesInternalServerError ", 500)
}

func (o *ImagesGoogleImagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
