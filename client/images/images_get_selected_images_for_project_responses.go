// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ImagesGetSelectedImagesForProjectReader is a Reader for the ImagesGetSelectedImagesForProject structure.
type ImagesGetSelectedImagesForProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImagesGetSelectedImagesForProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImagesGetSelectedImagesForProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImagesGetSelectedImagesForProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewImagesGetSelectedImagesForProjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewImagesGetSelectedImagesForProjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewImagesGetSelectedImagesForProjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImagesGetSelectedImagesForProjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewImagesGetSelectedImagesForProjectOK creates a ImagesGetSelectedImagesForProjectOK with default headers values
func NewImagesGetSelectedImagesForProjectOK() *ImagesGetSelectedImagesForProjectOK {
	return &ImagesGetSelectedImagesForProjectOK{}
}

/*
ImagesGetSelectedImagesForProjectOK describes a response with status code 200, with default header values.

Success
*/
type ImagesGetSelectedImagesForProjectOK struct {
	Payload *ImagesGetSelectedImagesForProjectOKBody
}

// IsSuccess returns true when this images get selected images for project o k response has a 2xx status code
func (o *ImagesGetSelectedImagesForProjectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this images get selected images for project o k response has a 3xx status code
func (o *ImagesGetSelectedImagesForProjectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images get selected images for project o k response has a 4xx status code
func (o *ImagesGetSelectedImagesForProjectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this images get selected images for project o k response has a 5xx status code
func (o *ImagesGetSelectedImagesForProjectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this images get selected images for project o k response a status code equal to that given
func (o *ImagesGetSelectedImagesForProjectOK) IsCode(code int) bool {
	return code == 200
}

func (o *ImagesGetSelectedImagesForProjectOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/projects/list][%d] imagesGetSelectedImagesForProjectOK  %+v", 200, o.Payload)
}

func (o *ImagesGetSelectedImagesForProjectOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/projects/list][%d] imagesGetSelectedImagesForProjectOK  %+v", 200, o.Payload)
}

func (o *ImagesGetSelectedImagesForProjectOK) GetPayload() *ImagesGetSelectedImagesForProjectOKBody {
	return o.Payload
}

func (o *ImagesGetSelectedImagesForProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ImagesGetSelectedImagesForProjectOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesGetSelectedImagesForProjectBadRequest creates a ImagesGetSelectedImagesForProjectBadRequest with default headers values
func NewImagesGetSelectedImagesForProjectBadRequest() *ImagesGetSelectedImagesForProjectBadRequest {
	return &ImagesGetSelectedImagesForProjectBadRequest{}
}

/*
ImagesGetSelectedImagesForProjectBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ImagesGetSelectedImagesForProjectBadRequest struct {
	Payload []*ImagesGetSelectedImagesForProjectBadRequestBodyItems0
}

// IsSuccess returns true when this images get selected images for project bad request response has a 2xx status code
func (o *ImagesGetSelectedImagesForProjectBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images get selected images for project bad request response has a 3xx status code
func (o *ImagesGetSelectedImagesForProjectBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images get selected images for project bad request response has a 4xx status code
func (o *ImagesGetSelectedImagesForProjectBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this images get selected images for project bad request response has a 5xx status code
func (o *ImagesGetSelectedImagesForProjectBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this images get selected images for project bad request response a status code equal to that given
func (o *ImagesGetSelectedImagesForProjectBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ImagesGetSelectedImagesForProjectBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/projects/list][%d] imagesGetSelectedImagesForProjectBadRequest  %+v", 400, o.Payload)
}

func (o *ImagesGetSelectedImagesForProjectBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/projects/list][%d] imagesGetSelectedImagesForProjectBadRequest  %+v", 400, o.Payload)
}

func (o *ImagesGetSelectedImagesForProjectBadRequest) GetPayload() []*ImagesGetSelectedImagesForProjectBadRequestBodyItems0 {
	return o.Payload
}

func (o *ImagesGetSelectedImagesForProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesGetSelectedImagesForProjectUnauthorized creates a ImagesGetSelectedImagesForProjectUnauthorized with default headers values
func NewImagesGetSelectedImagesForProjectUnauthorized() *ImagesGetSelectedImagesForProjectUnauthorized {
	return &ImagesGetSelectedImagesForProjectUnauthorized{}
}

/*
ImagesGetSelectedImagesForProjectUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ImagesGetSelectedImagesForProjectUnauthorized struct {
	Payload *ImagesGetSelectedImagesForProjectUnauthorizedBody
}

// IsSuccess returns true when this images get selected images for project unauthorized response has a 2xx status code
func (o *ImagesGetSelectedImagesForProjectUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images get selected images for project unauthorized response has a 3xx status code
func (o *ImagesGetSelectedImagesForProjectUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images get selected images for project unauthorized response has a 4xx status code
func (o *ImagesGetSelectedImagesForProjectUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this images get selected images for project unauthorized response has a 5xx status code
func (o *ImagesGetSelectedImagesForProjectUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this images get selected images for project unauthorized response a status code equal to that given
func (o *ImagesGetSelectedImagesForProjectUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ImagesGetSelectedImagesForProjectUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/projects/list][%d] imagesGetSelectedImagesForProjectUnauthorized  %+v", 401, o.Payload)
}

func (o *ImagesGetSelectedImagesForProjectUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/projects/list][%d] imagesGetSelectedImagesForProjectUnauthorized  %+v", 401, o.Payload)
}

func (o *ImagesGetSelectedImagesForProjectUnauthorized) GetPayload() *ImagesGetSelectedImagesForProjectUnauthorizedBody {
	return o.Payload
}

func (o *ImagesGetSelectedImagesForProjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ImagesGetSelectedImagesForProjectUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesGetSelectedImagesForProjectForbidden creates a ImagesGetSelectedImagesForProjectForbidden with default headers values
func NewImagesGetSelectedImagesForProjectForbidden() *ImagesGetSelectedImagesForProjectForbidden {
	return &ImagesGetSelectedImagesForProjectForbidden{}
}

/*
ImagesGetSelectedImagesForProjectForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ImagesGetSelectedImagesForProjectForbidden struct {
	Payload *ImagesGetSelectedImagesForProjectForbiddenBody
}

// IsSuccess returns true when this images get selected images for project forbidden response has a 2xx status code
func (o *ImagesGetSelectedImagesForProjectForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images get selected images for project forbidden response has a 3xx status code
func (o *ImagesGetSelectedImagesForProjectForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images get selected images for project forbidden response has a 4xx status code
func (o *ImagesGetSelectedImagesForProjectForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this images get selected images for project forbidden response has a 5xx status code
func (o *ImagesGetSelectedImagesForProjectForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this images get selected images for project forbidden response a status code equal to that given
func (o *ImagesGetSelectedImagesForProjectForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ImagesGetSelectedImagesForProjectForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/projects/list][%d] imagesGetSelectedImagesForProjectForbidden  %+v", 403, o.Payload)
}

func (o *ImagesGetSelectedImagesForProjectForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/projects/list][%d] imagesGetSelectedImagesForProjectForbidden  %+v", 403, o.Payload)
}

func (o *ImagesGetSelectedImagesForProjectForbidden) GetPayload() *ImagesGetSelectedImagesForProjectForbiddenBody {
	return o.Payload
}

func (o *ImagesGetSelectedImagesForProjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ImagesGetSelectedImagesForProjectForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesGetSelectedImagesForProjectNotFound creates a ImagesGetSelectedImagesForProjectNotFound with default headers values
func NewImagesGetSelectedImagesForProjectNotFound() *ImagesGetSelectedImagesForProjectNotFound {
	return &ImagesGetSelectedImagesForProjectNotFound{}
}

/*
ImagesGetSelectedImagesForProjectNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ImagesGetSelectedImagesForProjectNotFound struct {
	Payload *ImagesGetSelectedImagesForProjectNotFoundBody
}

// IsSuccess returns true when this images get selected images for project not found response has a 2xx status code
func (o *ImagesGetSelectedImagesForProjectNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images get selected images for project not found response has a 3xx status code
func (o *ImagesGetSelectedImagesForProjectNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images get selected images for project not found response has a 4xx status code
func (o *ImagesGetSelectedImagesForProjectNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this images get selected images for project not found response has a 5xx status code
func (o *ImagesGetSelectedImagesForProjectNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this images get selected images for project not found response a status code equal to that given
func (o *ImagesGetSelectedImagesForProjectNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ImagesGetSelectedImagesForProjectNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/projects/list][%d] imagesGetSelectedImagesForProjectNotFound  %+v", 404, o.Payload)
}

func (o *ImagesGetSelectedImagesForProjectNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/projects/list][%d] imagesGetSelectedImagesForProjectNotFound  %+v", 404, o.Payload)
}

func (o *ImagesGetSelectedImagesForProjectNotFound) GetPayload() *ImagesGetSelectedImagesForProjectNotFoundBody {
	return o.Payload
}

func (o *ImagesGetSelectedImagesForProjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ImagesGetSelectedImagesForProjectNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesGetSelectedImagesForProjectInternalServerError creates a ImagesGetSelectedImagesForProjectInternalServerError with default headers values
func NewImagesGetSelectedImagesForProjectInternalServerError() *ImagesGetSelectedImagesForProjectInternalServerError {
	return &ImagesGetSelectedImagesForProjectInternalServerError{}
}

/*
ImagesGetSelectedImagesForProjectInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ImagesGetSelectedImagesForProjectInternalServerError struct {
}

// IsSuccess returns true when this images get selected images for project internal server error response has a 2xx status code
func (o *ImagesGetSelectedImagesForProjectInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images get selected images for project internal server error response has a 3xx status code
func (o *ImagesGetSelectedImagesForProjectInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images get selected images for project internal server error response has a 4xx status code
func (o *ImagesGetSelectedImagesForProjectInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this images get selected images for project internal server error response has a 5xx status code
func (o *ImagesGetSelectedImagesForProjectInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this images get selected images for project internal server error response a status code equal to that given
func (o *ImagesGetSelectedImagesForProjectInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ImagesGetSelectedImagesForProjectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/projects/list][%d] imagesGetSelectedImagesForProjectInternalServerError ", 500)
}

func (o *ImagesGetSelectedImagesForProjectInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/projects/list][%d] imagesGetSelectedImagesForProjectInternalServerError ", 500)
}

func (o *ImagesGetSelectedImagesForProjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
ImagesGetSelectedImagesForProjectBadRequestBodyItems0 images get selected images for project bad request body items0
swagger:model ImagesGetSelectedImagesForProjectBadRequestBodyItems0
*/
type ImagesGetSelectedImagesForProjectBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this images get selected images for project bad request body items0
func (o *ImagesGetSelectedImagesForProjectBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this images get selected images for project bad request body items0 based on context it is used
func (o *ImagesGetSelectedImagesForProjectBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ImagesGetSelectedImagesForProjectBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesGetSelectedImagesForProjectBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res ImagesGetSelectedImagesForProjectBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ImagesGetSelectedImagesForProjectForbiddenBody images get selected images for project forbidden body
swagger:model ImagesGetSelectedImagesForProjectForbiddenBody
*/
type ImagesGetSelectedImagesForProjectForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this images get selected images for project forbidden body
func (o *ImagesGetSelectedImagesForProjectForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this images get selected images for project forbidden body based on context it is used
func (o *ImagesGetSelectedImagesForProjectForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ImagesGetSelectedImagesForProjectForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesGetSelectedImagesForProjectForbiddenBody) UnmarshalBinary(b []byte) error {
	var res ImagesGetSelectedImagesForProjectForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ImagesGetSelectedImagesForProjectNotFoundBody images get selected images for project not found body
swagger:model ImagesGetSelectedImagesForProjectNotFoundBody
*/
type ImagesGetSelectedImagesForProjectNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this images get selected images for project not found body
func (o *ImagesGetSelectedImagesForProjectNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this images get selected images for project not found body based on context it is used
func (o *ImagesGetSelectedImagesForProjectNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ImagesGetSelectedImagesForProjectNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesGetSelectedImagesForProjectNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ImagesGetSelectedImagesForProjectNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ImagesGetSelectedImagesForProjectOKBody images get selected images for project o k body
swagger:model ImagesGetSelectedImagesForProjectOKBody
*/
type ImagesGetSelectedImagesForProjectOKBody struct {

	// data
	Data []*ImagesGetSelectedImagesForProjectOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this images get selected images for project o k body
func (o *ImagesGetSelectedImagesForProjectOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ImagesGetSelectedImagesForProjectOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("imagesGetSelectedImagesForProjectOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("imagesGetSelectedImagesForProjectOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this images get selected images for project o k body based on the context it is used
func (o *ImagesGetSelectedImagesForProjectOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ImagesGetSelectedImagesForProjectOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("imagesGetSelectedImagesForProjectOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("imagesGetSelectedImagesForProjectOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ImagesGetSelectedImagesForProjectOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesGetSelectedImagesForProjectOKBody) UnmarshalBinary(b []byte) error {
	var res ImagesGetSelectedImagesForProjectOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ImagesGetSelectedImagesForProjectOKBodyDataItems0 images get selected images for project o k body data items0
swagger:model ImagesGetSelectedImagesForProjectOKBodyDataItems0
*/
type ImagesGetSelectedImagesForProjectOKBodyDataItems0 struct {

	// cloud Id
	CloudID int32 `json:"cloudId,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// image Id
	ImageID string `json:"imageId,omitempty"`

	// is aws
	IsAws bool `json:"isAws"`

	// is azure
	IsAzure bool `json:"isAzure"`

	// is openstack
	IsOpenstack bool `json:"isOpenstack"`

	// is windows
	IsWindows bool `json:"isWindows"`

	// name
	Name string `json:"name,omitempty"`

	// project Id
	ProjectID int32 `json:"projectId,omitempty"`

	// project name
	ProjectName string `json:"projectName,omitempty"`

	// size
	Size float64 `json:"size,omitempty"`
}

// Validate validates this images get selected images for project o k body data items0
func (o *ImagesGetSelectedImagesForProjectOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this images get selected images for project o k body data items0 based on context it is used
func (o *ImagesGetSelectedImagesForProjectOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ImagesGetSelectedImagesForProjectOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesGetSelectedImagesForProjectOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res ImagesGetSelectedImagesForProjectOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ImagesGetSelectedImagesForProjectUnauthorizedBody images get selected images for project unauthorized body
swagger:model ImagesGetSelectedImagesForProjectUnauthorizedBody
*/
type ImagesGetSelectedImagesForProjectUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this images get selected images for project unauthorized body
func (o *ImagesGetSelectedImagesForProjectUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this images get selected images for project unauthorized body based on context it is used
func (o *ImagesGetSelectedImagesForProjectUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ImagesGetSelectedImagesForProjectUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesGetSelectedImagesForProjectUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res ImagesGetSelectedImagesForProjectUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
