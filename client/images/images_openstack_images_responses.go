// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ImagesOpenstackImagesReader is a Reader for the ImagesOpenstackImages structure.
type ImagesOpenstackImagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImagesOpenstackImagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImagesOpenstackImagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImagesOpenstackImagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewImagesOpenstackImagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewImagesOpenstackImagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewImagesOpenstackImagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImagesOpenstackImagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewImagesOpenstackImagesOK creates a ImagesOpenstackImagesOK with default headers values
func NewImagesOpenstackImagesOK() *ImagesOpenstackImagesOK {
	return &ImagesOpenstackImagesOK{}
}

/*
ImagesOpenstackImagesOK describes a response with status code 200, with default header values.

Success
*/
type ImagesOpenstackImagesOK struct {
	Payload *ImagesOpenstackImagesOKBody
}

// IsSuccess returns true when this images openstack images o k response has a 2xx status code
func (o *ImagesOpenstackImagesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this images openstack images o k response has a 3xx status code
func (o *ImagesOpenstackImagesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images openstack images o k response has a 4xx status code
func (o *ImagesOpenstackImagesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this images openstack images o k response has a 5xx status code
func (o *ImagesOpenstackImagesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this images openstack images o k response a status code equal to that given
func (o *ImagesOpenstackImagesOK) IsCode(code int) bool {
	return code == 200
}

func (o *ImagesOpenstackImagesOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/openstack/{cloudId}][%d] imagesOpenstackImagesOK  %+v", 200, o.Payload)
}

func (o *ImagesOpenstackImagesOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/openstack/{cloudId}][%d] imagesOpenstackImagesOK  %+v", 200, o.Payload)
}

func (o *ImagesOpenstackImagesOK) GetPayload() *ImagesOpenstackImagesOKBody {
	return o.Payload
}

func (o *ImagesOpenstackImagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ImagesOpenstackImagesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesOpenstackImagesBadRequest creates a ImagesOpenstackImagesBadRequest with default headers values
func NewImagesOpenstackImagesBadRequest() *ImagesOpenstackImagesBadRequest {
	return &ImagesOpenstackImagesBadRequest{}
}

/*
ImagesOpenstackImagesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ImagesOpenstackImagesBadRequest struct {
	Payload []*ImagesOpenstackImagesBadRequestBodyItems0
}

// IsSuccess returns true when this images openstack images bad request response has a 2xx status code
func (o *ImagesOpenstackImagesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images openstack images bad request response has a 3xx status code
func (o *ImagesOpenstackImagesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images openstack images bad request response has a 4xx status code
func (o *ImagesOpenstackImagesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this images openstack images bad request response has a 5xx status code
func (o *ImagesOpenstackImagesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this images openstack images bad request response a status code equal to that given
func (o *ImagesOpenstackImagesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ImagesOpenstackImagesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/openstack/{cloudId}][%d] imagesOpenstackImagesBadRequest  %+v", 400, o.Payload)
}

func (o *ImagesOpenstackImagesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/openstack/{cloudId}][%d] imagesOpenstackImagesBadRequest  %+v", 400, o.Payload)
}

func (o *ImagesOpenstackImagesBadRequest) GetPayload() []*ImagesOpenstackImagesBadRequestBodyItems0 {
	return o.Payload
}

func (o *ImagesOpenstackImagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesOpenstackImagesUnauthorized creates a ImagesOpenstackImagesUnauthorized with default headers values
func NewImagesOpenstackImagesUnauthorized() *ImagesOpenstackImagesUnauthorized {
	return &ImagesOpenstackImagesUnauthorized{}
}

/*
ImagesOpenstackImagesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ImagesOpenstackImagesUnauthorized struct {
	Payload *ImagesOpenstackImagesUnauthorizedBody
}

// IsSuccess returns true when this images openstack images unauthorized response has a 2xx status code
func (o *ImagesOpenstackImagesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images openstack images unauthorized response has a 3xx status code
func (o *ImagesOpenstackImagesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images openstack images unauthorized response has a 4xx status code
func (o *ImagesOpenstackImagesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this images openstack images unauthorized response has a 5xx status code
func (o *ImagesOpenstackImagesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this images openstack images unauthorized response a status code equal to that given
func (o *ImagesOpenstackImagesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ImagesOpenstackImagesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/openstack/{cloudId}][%d] imagesOpenstackImagesUnauthorized  %+v", 401, o.Payload)
}

func (o *ImagesOpenstackImagesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/openstack/{cloudId}][%d] imagesOpenstackImagesUnauthorized  %+v", 401, o.Payload)
}

func (o *ImagesOpenstackImagesUnauthorized) GetPayload() *ImagesOpenstackImagesUnauthorizedBody {
	return o.Payload
}

func (o *ImagesOpenstackImagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ImagesOpenstackImagesUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesOpenstackImagesForbidden creates a ImagesOpenstackImagesForbidden with default headers values
func NewImagesOpenstackImagesForbidden() *ImagesOpenstackImagesForbidden {
	return &ImagesOpenstackImagesForbidden{}
}

/*
ImagesOpenstackImagesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ImagesOpenstackImagesForbidden struct {
	Payload *ImagesOpenstackImagesForbiddenBody
}

// IsSuccess returns true when this images openstack images forbidden response has a 2xx status code
func (o *ImagesOpenstackImagesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images openstack images forbidden response has a 3xx status code
func (o *ImagesOpenstackImagesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images openstack images forbidden response has a 4xx status code
func (o *ImagesOpenstackImagesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this images openstack images forbidden response has a 5xx status code
func (o *ImagesOpenstackImagesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this images openstack images forbidden response a status code equal to that given
func (o *ImagesOpenstackImagesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ImagesOpenstackImagesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/openstack/{cloudId}][%d] imagesOpenstackImagesForbidden  %+v", 403, o.Payload)
}

func (o *ImagesOpenstackImagesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/openstack/{cloudId}][%d] imagesOpenstackImagesForbidden  %+v", 403, o.Payload)
}

func (o *ImagesOpenstackImagesForbidden) GetPayload() *ImagesOpenstackImagesForbiddenBody {
	return o.Payload
}

func (o *ImagesOpenstackImagesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ImagesOpenstackImagesForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesOpenstackImagesNotFound creates a ImagesOpenstackImagesNotFound with default headers values
func NewImagesOpenstackImagesNotFound() *ImagesOpenstackImagesNotFound {
	return &ImagesOpenstackImagesNotFound{}
}

/*
ImagesOpenstackImagesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ImagesOpenstackImagesNotFound struct {
	Payload *ImagesOpenstackImagesNotFoundBody
}

// IsSuccess returns true when this images openstack images not found response has a 2xx status code
func (o *ImagesOpenstackImagesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images openstack images not found response has a 3xx status code
func (o *ImagesOpenstackImagesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images openstack images not found response has a 4xx status code
func (o *ImagesOpenstackImagesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this images openstack images not found response has a 5xx status code
func (o *ImagesOpenstackImagesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this images openstack images not found response a status code equal to that given
func (o *ImagesOpenstackImagesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ImagesOpenstackImagesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/openstack/{cloudId}][%d] imagesOpenstackImagesNotFound  %+v", 404, o.Payload)
}

func (o *ImagesOpenstackImagesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/openstack/{cloudId}][%d] imagesOpenstackImagesNotFound  %+v", 404, o.Payload)
}

func (o *ImagesOpenstackImagesNotFound) GetPayload() *ImagesOpenstackImagesNotFoundBody {
	return o.Payload
}

func (o *ImagesOpenstackImagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ImagesOpenstackImagesNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesOpenstackImagesInternalServerError creates a ImagesOpenstackImagesInternalServerError with default headers values
func NewImagesOpenstackImagesInternalServerError() *ImagesOpenstackImagesInternalServerError {
	return &ImagesOpenstackImagesInternalServerError{}
}

/*
ImagesOpenstackImagesInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ImagesOpenstackImagesInternalServerError struct {
}

// IsSuccess returns true when this images openstack images internal server error response has a 2xx status code
func (o *ImagesOpenstackImagesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images openstack images internal server error response has a 3xx status code
func (o *ImagesOpenstackImagesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images openstack images internal server error response has a 4xx status code
func (o *ImagesOpenstackImagesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this images openstack images internal server error response has a 5xx status code
func (o *ImagesOpenstackImagesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this images openstack images internal server error response a status code equal to that given
func (o *ImagesOpenstackImagesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ImagesOpenstackImagesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/openstack/{cloudId}][%d] imagesOpenstackImagesInternalServerError ", 500)
}

func (o *ImagesOpenstackImagesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/openstack/{cloudId}][%d] imagesOpenstackImagesInternalServerError ", 500)
}

func (o *ImagesOpenstackImagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
ImagesOpenstackImagesBadRequestBodyItems0 images openstack images bad request body items0
swagger:model ImagesOpenstackImagesBadRequestBodyItems0
*/
type ImagesOpenstackImagesBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this images openstack images bad request body items0
func (o *ImagesOpenstackImagesBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this images openstack images bad request body items0 based on context it is used
func (o *ImagesOpenstackImagesBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ImagesOpenstackImagesBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesOpenstackImagesBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res ImagesOpenstackImagesBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ImagesOpenstackImagesForbiddenBody images openstack images forbidden body
swagger:model ImagesOpenstackImagesForbiddenBody
*/
type ImagesOpenstackImagesForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this images openstack images forbidden body
func (o *ImagesOpenstackImagesForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this images openstack images forbidden body based on context it is used
func (o *ImagesOpenstackImagesForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ImagesOpenstackImagesForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesOpenstackImagesForbiddenBody) UnmarshalBinary(b []byte) error {
	var res ImagesOpenstackImagesForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ImagesOpenstackImagesNotFoundBody images openstack images not found body
swagger:model ImagesOpenstackImagesNotFoundBody
*/
type ImagesOpenstackImagesNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this images openstack images not found body
func (o *ImagesOpenstackImagesNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this images openstack images not found body based on context it is used
func (o *ImagesOpenstackImagesNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ImagesOpenstackImagesNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesOpenstackImagesNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ImagesOpenstackImagesNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ImagesOpenstackImagesOKBody images openstack images o k body
swagger:model ImagesOpenstackImagesOKBody
*/
type ImagesOpenstackImagesOKBody struct {

	// data
	Data []*ImagesOpenstackImagesOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this images openstack images o k body
func (o *ImagesOpenstackImagesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ImagesOpenstackImagesOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("imagesOpenstackImagesOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("imagesOpenstackImagesOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this images openstack images o k body based on the context it is used
func (o *ImagesOpenstackImagesOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ImagesOpenstackImagesOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("imagesOpenstackImagesOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("imagesOpenstackImagesOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ImagesOpenstackImagesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesOpenstackImagesOKBody) UnmarshalBinary(b []byte) error {
	var res ImagesOpenstackImagesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ImagesOpenstackImagesOKBodyDataItems0 images openstack images o k body data items0
swagger:model ImagesOpenstackImagesOKBodyDataItems0
*/
type ImagesOpenstackImagesOKBodyDataItems0 struct {

	// id
	ID string `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this images openstack images o k body data items0
func (o *ImagesOpenstackImagesOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this images openstack images o k body data items0 based on context it is used
func (o *ImagesOpenstackImagesOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ImagesOpenstackImagesOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesOpenstackImagesOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res ImagesOpenstackImagesOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ImagesOpenstackImagesUnauthorizedBody images openstack images unauthorized body
swagger:model ImagesOpenstackImagesUnauthorizedBody
*/
type ImagesOpenstackImagesUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this images openstack images unauthorized body
func (o *ImagesOpenstackImagesUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this images openstack images unauthorized body based on context it is used
func (o *ImagesOpenstackImagesUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ImagesOpenstackImagesUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesOpenstackImagesUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res ImagesOpenstackImagesUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
