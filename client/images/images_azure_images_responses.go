// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ImagesAzureImagesReader is a Reader for the ImagesAzureImages structure.
type ImagesAzureImagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImagesAzureImagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImagesAzureImagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImagesAzureImagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewImagesAzureImagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewImagesAzureImagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewImagesAzureImagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImagesAzureImagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewImagesAzureImagesOK creates a ImagesAzureImagesOK with default headers values
func NewImagesAzureImagesOK() *ImagesAzureImagesOK {
	return &ImagesAzureImagesOK{}
}

/*
ImagesAzureImagesOK describes a response with status code 200, with default header values.

Success
*/
type ImagesAzureImagesOK struct {
	Payload *ImagesAzureImagesOKBody
}

// IsSuccess returns true when this images azure images o k response has a 2xx status code
func (o *ImagesAzureImagesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this images azure images o k response has a 3xx status code
func (o *ImagesAzureImagesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images azure images o k response has a 4xx status code
func (o *ImagesAzureImagesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this images azure images o k response has a 5xx status code
func (o *ImagesAzureImagesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this images azure images o k response a status code equal to that given
func (o *ImagesAzureImagesOK) IsCode(code int) bool {
	return code == 200
}

func (o *ImagesAzureImagesOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/azure/{cloudId}/{publisherName}/{offer}/{sku}][%d] imagesAzureImagesOK  %+v", 200, o.Payload)
}

func (o *ImagesAzureImagesOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/azure/{cloudId}/{publisherName}/{offer}/{sku}][%d] imagesAzureImagesOK  %+v", 200, o.Payload)
}

func (o *ImagesAzureImagesOK) GetPayload() *ImagesAzureImagesOKBody {
	return o.Payload
}

func (o *ImagesAzureImagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ImagesAzureImagesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesAzureImagesBadRequest creates a ImagesAzureImagesBadRequest with default headers values
func NewImagesAzureImagesBadRequest() *ImagesAzureImagesBadRequest {
	return &ImagesAzureImagesBadRequest{}
}

/*
ImagesAzureImagesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ImagesAzureImagesBadRequest struct {
	Payload []*ImagesAzureImagesBadRequestBodyItems0
}

// IsSuccess returns true when this images azure images bad request response has a 2xx status code
func (o *ImagesAzureImagesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images azure images bad request response has a 3xx status code
func (o *ImagesAzureImagesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images azure images bad request response has a 4xx status code
func (o *ImagesAzureImagesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this images azure images bad request response has a 5xx status code
func (o *ImagesAzureImagesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this images azure images bad request response a status code equal to that given
func (o *ImagesAzureImagesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ImagesAzureImagesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/azure/{cloudId}/{publisherName}/{offer}/{sku}][%d] imagesAzureImagesBadRequest  %+v", 400, o.Payload)
}

func (o *ImagesAzureImagesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/azure/{cloudId}/{publisherName}/{offer}/{sku}][%d] imagesAzureImagesBadRequest  %+v", 400, o.Payload)
}

func (o *ImagesAzureImagesBadRequest) GetPayload() []*ImagesAzureImagesBadRequestBodyItems0 {
	return o.Payload
}

func (o *ImagesAzureImagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesAzureImagesUnauthorized creates a ImagesAzureImagesUnauthorized with default headers values
func NewImagesAzureImagesUnauthorized() *ImagesAzureImagesUnauthorized {
	return &ImagesAzureImagesUnauthorized{}
}

/*
ImagesAzureImagesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ImagesAzureImagesUnauthorized struct {
	Payload *ImagesAzureImagesUnauthorizedBody
}

// IsSuccess returns true when this images azure images unauthorized response has a 2xx status code
func (o *ImagesAzureImagesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images azure images unauthorized response has a 3xx status code
func (o *ImagesAzureImagesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images azure images unauthorized response has a 4xx status code
func (o *ImagesAzureImagesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this images azure images unauthorized response has a 5xx status code
func (o *ImagesAzureImagesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this images azure images unauthorized response a status code equal to that given
func (o *ImagesAzureImagesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ImagesAzureImagesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/azure/{cloudId}/{publisherName}/{offer}/{sku}][%d] imagesAzureImagesUnauthorized  %+v", 401, o.Payload)
}

func (o *ImagesAzureImagesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/azure/{cloudId}/{publisherName}/{offer}/{sku}][%d] imagesAzureImagesUnauthorized  %+v", 401, o.Payload)
}

func (o *ImagesAzureImagesUnauthorized) GetPayload() *ImagesAzureImagesUnauthorizedBody {
	return o.Payload
}

func (o *ImagesAzureImagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ImagesAzureImagesUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesAzureImagesForbidden creates a ImagesAzureImagesForbidden with default headers values
func NewImagesAzureImagesForbidden() *ImagesAzureImagesForbidden {
	return &ImagesAzureImagesForbidden{}
}

/*
ImagesAzureImagesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ImagesAzureImagesForbidden struct {
	Payload *ImagesAzureImagesForbiddenBody
}

// IsSuccess returns true when this images azure images forbidden response has a 2xx status code
func (o *ImagesAzureImagesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images azure images forbidden response has a 3xx status code
func (o *ImagesAzureImagesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images azure images forbidden response has a 4xx status code
func (o *ImagesAzureImagesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this images azure images forbidden response has a 5xx status code
func (o *ImagesAzureImagesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this images azure images forbidden response a status code equal to that given
func (o *ImagesAzureImagesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ImagesAzureImagesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/azure/{cloudId}/{publisherName}/{offer}/{sku}][%d] imagesAzureImagesForbidden  %+v", 403, o.Payload)
}

func (o *ImagesAzureImagesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/azure/{cloudId}/{publisherName}/{offer}/{sku}][%d] imagesAzureImagesForbidden  %+v", 403, o.Payload)
}

func (o *ImagesAzureImagesForbidden) GetPayload() *ImagesAzureImagesForbiddenBody {
	return o.Payload
}

func (o *ImagesAzureImagesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ImagesAzureImagesForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesAzureImagesNotFound creates a ImagesAzureImagesNotFound with default headers values
func NewImagesAzureImagesNotFound() *ImagesAzureImagesNotFound {
	return &ImagesAzureImagesNotFound{}
}

/*
ImagesAzureImagesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ImagesAzureImagesNotFound struct {
	Payload *ImagesAzureImagesNotFoundBody
}

// IsSuccess returns true when this images azure images not found response has a 2xx status code
func (o *ImagesAzureImagesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images azure images not found response has a 3xx status code
func (o *ImagesAzureImagesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images azure images not found response has a 4xx status code
func (o *ImagesAzureImagesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this images azure images not found response has a 5xx status code
func (o *ImagesAzureImagesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this images azure images not found response a status code equal to that given
func (o *ImagesAzureImagesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ImagesAzureImagesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/azure/{cloudId}/{publisherName}/{offer}/{sku}][%d] imagesAzureImagesNotFound  %+v", 404, o.Payload)
}

func (o *ImagesAzureImagesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/azure/{cloudId}/{publisherName}/{offer}/{sku}][%d] imagesAzureImagesNotFound  %+v", 404, o.Payload)
}

func (o *ImagesAzureImagesNotFound) GetPayload() *ImagesAzureImagesNotFoundBody {
	return o.Payload
}

func (o *ImagesAzureImagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ImagesAzureImagesNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImagesAzureImagesInternalServerError creates a ImagesAzureImagesInternalServerError with default headers values
func NewImagesAzureImagesInternalServerError() *ImagesAzureImagesInternalServerError {
	return &ImagesAzureImagesInternalServerError{}
}

/*
ImagesAzureImagesInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ImagesAzureImagesInternalServerError struct {
}

// IsSuccess returns true when this images azure images internal server error response has a 2xx status code
func (o *ImagesAzureImagesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this images azure images internal server error response has a 3xx status code
func (o *ImagesAzureImagesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this images azure images internal server error response has a 4xx status code
func (o *ImagesAzureImagesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this images azure images internal server error response has a 5xx status code
func (o *ImagesAzureImagesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this images azure images internal server error response a status code equal to that given
func (o *ImagesAzureImagesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ImagesAzureImagesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/azure/{cloudId}/{publisherName}/{offer}/{sku}][%d] imagesAzureImagesInternalServerError ", 500)
}

func (o *ImagesAzureImagesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Images/azure/{cloudId}/{publisherName}/{offer}/{sku}][%d] imagesAzureImagesInternalServerError ", 500)
}

func (o *ImagesAzureImagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
ImagesAzureImagesBadRequestBodyItems0 images azure images bad request body items0
swagger:model ImagesAzureImagesBadRequestBodyItems0
*/
type ImagesAzureImagesBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this images azure images bad request body items0
func (o *ImagesAzureImagesBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this images azure images bad request body items0 based on context it is used
func (o *ImagesAzureImagesBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ImagesAzureImagesBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesAzureImagesBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res ImagesAzureImagesBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ImagesAzureImagesForbiddenBody images azure images forbidden body
swagger:model ImagesAzureImagesForbiddenBody
*/
type ImagesAzureImagesForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this images azure images forbidden body
func (o *ImagesAzureImagesForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this images azure images forbidden body based on context it is used
func (o *ImagesAzureImagesForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ImagesAzureImagesForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesAzureImagesForbiddenBody) UnmarshalBinary(b []byte) error {
	var res ImagesAzureImagesForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ImagesAzureImagesNotFoundBody images azure images not found body
swagger:model ImagesAzureImagesNotFoundBody
*/
type ImagesAzureImagesNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this images azure images not found body
func (o *ImagesAzureImagesNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this images azure images not found body based on context it is used
func (o *ImagesAzureImagesNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ImagesAzureImagesNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesAzureImagesNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ImagesAzureImagesNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ImagesAzureImagesOKBody images azure images o k body
swagger:model ImagesAzureImagesOKBody
*/
type ImagesAzureImagesOKBody struct {

	// data
	Data []*ImagesAzureImagesOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this images azure images o k body
func (o *ImagesAzureImagesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ImagesAzureImagesOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("imagesAzureImagesOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("imagesAzureImagesOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this images azure images o k body based on the context it is used
func (o *ImagesAzureImagesOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ImagesAzureImagesOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("imagesAzureImagesOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("imagesAzureImagesOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ImagesAzureImagesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesAzureImagesOKBody) UnmarshalBinary(b []byte) error {
	var res ImagesAzureImagesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ImagesAzureImagesOKBodyDataItems0 images azure images o k body data items0
swagger:model ImagesAzureImagesOKBodyDataItems0
*/
type ImagesAzureImagesOKBodyDataItems0 struct {

	// id
	ID string `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this images azure images o k body data items0
func (o *ImagesAzureImagesOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this images azure images o k body data items0 based on context it is used
func (o *ImagesAzureImagesOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ImagesAzureImagesOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesAzureImagesOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res ImagesAzureImagesOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ImagesAzureImagesUnauthorizedBody images azure images unauthorized body
swagger:model ImagesAzureImagesUnauthorizedBody
*/
type ImagesAzureImagesUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this images azure images unauthorized body
func (o *ImagesAzureImagesUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this images azure images unauthorized body based on context it is used
func (o *ImagesAzureImagesUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ImagesAzureImagesUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ImagesAzureImagesUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res ImagesAzureImagesUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
