/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the UpdateEdgeNodesCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateEdgeNodesCommand{}

// UpdateEdgeNodesCommand struct for UpdateEdgeNodesCommand
type UpdateEdgeNodesCommand struct {
	Id *int32 `json:"id,omitempty"`
	EdgeNodes []string `json:"edgeNodes,omitempty"`
}

// NewUpdateEdgeNodesCommand instantiates a new UpdateEdgeNodesCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateEdgeNodesCommand() *UpdateEdgeNodesCommand {
	this := UpdateEdgeNodesCommand{}
	return &this
}

// NewUpdateEdgeNodesCommandWithDefaults instantiates a new UpdateEdgeNodesCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateEdgeNodesCommandWithDefaults() *UpdateEdgeNodesCommand {
	this := UpdateEdgeNodesCommand{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UpdateEdgeNodesCommand) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEdgeNodesCommand) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UpdateEdgeNodesCommand) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *UpdateEdgeNodesCommand) SetId(v int32) {
	o.Id = &v
}

// GetEdgeNodes returns the EdgeNodes field value if set, zero value otherwise.
func (o *UpdateEdgeNodesCommand) GetEdgeNodes() []string {
	if o == nil || IsNil(o.EdgeNodes) {
		var ret []string
		return ret
	}
	return o.EdgeNodes
}

// GetEdgeNodesOk returns a tuple with the EdgeNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEdgeNodesCommand) GetEdgeNodesOk() ([]string, bool) {
	if o == nil || IsNil(o.EdgeNodes) {
		return nil, false
	}
	return o.EdgeNodes, true
}

// HasEdgeNodes returns a boolean if a field has been set.
func (o *UpdateEdgeNodesCommand) HasEdgeNodes() bool {
	if o != nil && !IsNil(o.EdgeNodes) {
		return true
	}

	return false
}

// SetEdgeNodes gets a reference to the given []string and assigns it to the EdgeNodes field.
func (o *UpdateEdgeNodesCommand) SetEdgeNodes(v []string) {
	o.EdgeNodes = v
}

func (o UpdateEdgeNodesCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateEdgeNodesCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.EdgeNodes) {
		toSerialize["edgeNodes"] = o.EdgeNodes
	}
	return toSerialize, nil
}

type NullableUpdateEdgeNodesCommand struct {
	value *UpdateEdgeNodesCommand
	isSet bool
}

func (v NullableUpdateEdgeNodesCommand) Get() *UpdateEdgeNodesCommand {
	return v.value
}

func (v *NullableUpdateEdgeNodesCommand) Set(val *UpdateEdgeNodesCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateEdgeNodesCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateEdgeNodesCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateEdgeNodesCommand(val *UpdateEdgeNodesCommand) *NullableUpdateEdgeNodesCommand {
	return &NullableUpdateEdgeNodesCommand{value: val, isSet: true}
}

func (v NullableUpdateEdgeNodesCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateEdgeNodesCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


