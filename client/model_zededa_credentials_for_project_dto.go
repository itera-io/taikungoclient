/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the ZededaCredentialsForProjectDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ZededaCredentialsForProjectDto{}

// ZededaCredentialsForProjectDto struct for ZededaCredentialsForProjectDto
type ZededaCredentialsForProjectDto struct {
	ApiToken NullableString `json:"apiToken,omitempty"`
	ApiUrl NullableString `json:"apiUrl,omitempty"`
	Project NullableString `json:"project,omitempty"`
	ProjectId NullableString `json:"projectId,omitempty"`
	ZededaNetworks []ZededaNetworkListDto `json:"zededaNetworks,omitempty"`
}

// NewZededaCredentialsForProjectDto instantiates a new ZededaCredentialsForProjectDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZededaCredentialsForProjectDto() *ZededaCredentialsForProjectDto {
	this := ZededaCredentialsForProjectDto{}
	return &this
}

// NewZededaCredentialsForProjectDtoWithDefaults instantiates a new ZededaCredentialsForProjectDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZededaCredentialsForProjectDtoWithDefaults() *ZededaCredentialsForProjectDto {
	this := ZededaCredentialsForProjectDto{}
	return &this
}

// GetApiToken returns the ApiToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ZededaCredentialsForProjectDto) GetApiToken() string {
	if o == nil || IsNil(o.ApiToken.Get()) {
		var ret string
		return ret
	}
	return *o.ApiToken.Get()
}

// GetApiTokenOk returns a tuple with the ApiToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ZededaCredentialsForProjectDto) GetApiTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApiToken.Get(), o.ApiToken.IsSet()
}

// HasApiToken returns a boolean if a field has been set.
func (o *ZededaCredentialsForProjectDto) HasApiToken() bool {
	if o != nil && o.ApiToken.IsSet() {
		return true
	}

	return false
}

// SetApiToken gets a reference to the given NullableString and assigns it to the ApiToken field.
func (o *ZededaCredentialsForProjectDto) SetApiToken(v string) {
	o.ApiToken.Set(&v)
}
// SetApiTokenNil sets the value for ApiToken to be an explicit nil
func (o *ZededaCredentialsForProjectDto) SetApiTokenNil() {
	o.ApiToken.Set(nil)
}

// UnsetApiToken ensures that no value is present for ApiToken, not even an explicit nil
func (o *ZededaCredentialsForProjectDto) UnsetApiToken() {
	o.ApiToken.Unset()
}

// GetApiUrl returns the ApiUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ZededaCredentialsForProjectDto) GetApiUrl() string {
	if o == nil || IsNil(o.ApiUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ApiUrl.Get()
}

// GetApiUrlOk returns a tuple with the ApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ZededaCredentialsForProjectDto) GetApiUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApiUrl.Get(), o.ApiUrl.IsSet()
}

// HasApiUrl returns a boolean if a field has been set.
func (o *ZededaCredentialsForProjectDto) HasApiUrl() bool {
	if o != nil && o.ApiUrl.IsSet() {
		return true
	}

	return false
}

// SetApiUrl gets a reference to the given NullableString and assigns it to the ApiUrl field.
func (o *ZededaCredentialsForProjectDto) SetApiUrl(v string) {
	o.ApiUrl.Set(&v)
}
// SetApiUrlNil sets the value for ApiUrl to be an explicit nil
func (o *ZededaCredentialsForProjectDto) SetApiUrlNil() {
	o.ApiUrl.Set(nil)
}

// UnsetApiUrl ensures that no value is present for ApiUrl, not even an explicit nil
func (o *ZededaCredentialsForProjectDto) UnsetApiUrl() {
	o.ApiUrl.Unset()
}

// GetProject returns the Project field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ZededaCredentialsForProjectDto) GetProject() string {
	if o == nil || IsNil(o.Project.Get()) {
		var ret string
		return ret
	}
	return *o.Project.Get()
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ZededaCredentialsForProjectDto) GetProjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Project.Get(), o.Project.IsSet()
}

// HasProject returns a boolean if a field has been set.
func (o *ZededaCredentialsForProjectDto) HasProject() bool {
	if o != nil && o.Project.IsSet() {
		return true
	}

	return false
}

// SetProject gets a reference to the given NullableString and assigns it to the Project field.
func (o *ZededaCredentialsForProjectDto) SetProject(v string) {
	o.Project.Set(&v)
}
// SetProjectNil sets the value for Project to be an explicit nil
func (o *ZededaCredentialsForProjectDto) SetProjectNil() {
	o.Project.Set(nil)
}

// UnsetProject ensures that no value is present for Project, not even an explicit nil
func (o *ZededaCredentialsForProjectDto) UnsetProject() {
	o.Project.Unset()
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ZededaCredentialsForProjectDto) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId.Get()) {
		var ret string
		return ret
	}
	return *o.ProjectId.Get()
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ZededaCredentialsForProjectDto) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectId.Get(), o.ProjectId.IsSet()
}

// HasProjectId returns a boolean if a field has been set.
func (o *ZededaCredentialsForProjectDto) HasProjectId() bool {
	if o != nil && o.ProjectId.IsSet() {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given NullableString and assigns it to the ProjectId field.
func (o *ZededaCredentialsForProjectDto) SetProjectId(v string) {
	o.ProjectId.Set(&v)
}
// SetProjectIdNil sets the value for ProjectId to be an explicit nil
func (o *ZededaCredentialsForProjectDto) SetProjectIdNil() {
	o.ProjectId.Set(nil)
}

// UnsetProjectId ensures that no value is present for ProjectId, not even an explicit nil
func (o *ZededaCredentialsForProjectDto) UnsetProjectId() {
	o.ProjectId.Unset()
}

// GetZededaNetworks returns the ZededaNetworks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ZededaCredentialsForProjectDto) GetZededaNetworks() []ZededaNetworkListDto {
	if o == nil {
		var ret []ZededaNetworkListDto
		return ret
	}
	return o.ZededaNetworks
}

// GetZededaNetworksOk returns a tuple with the ZededaNetworks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ZededaCredentialsForProjectDto) GetZededaNetworksOk() ([]ZededaNetworkListDto, bool) {
	if o == nil || IsNil(o.ZededaNetworks) {
		return nil, false
	}
	return o.ZededaNetworks, true
}

// HasZededaNetworks returns a boolean if a field has been set.
func (o *ZededaCredentialsForProjectDto) HasZededaNetworks() bool {
	if o != nil && !IsNil(o.ZededaNetworks) {
		return true
	}

	return false
}

// SetZededaNetworks gets a reference to the given []ZededaNetworkListDto and assigns it to the ZededaNetworks field.
func (o *ZededaCredentialsForProjectDto) SetZededaNetworks(v []ZededaNetworkListDto) {
	o.ZededaNetworks = v
}

func (o ZededaCredentialsForProjectDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ZededaCredentialsForProjectDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiToken.IsSet() {
		toSerialize["apiToken"] = o.ApiToken.Get()
	}
	if o.ApiUrl.IsSet() {
		toSerialize["apiUrl"] = o.ApiUrl.Get()
	}
	if o.Project.IsSet() {
		toSerialize["project"] = o.Project.Get()
	}
	if o.ProjectId.IsSet() {
		toSerialize["projectId"] = o.ProjectId.Get()
	}
	if o.ZededaNetworks != nil {
		toSerialize["zededaNetworks"] = o.ZededaNetworks
	}
	return toSerialize, nil
}

type NullableZededaCredentialsForProjectDto struct {
	value *ZededaCredentialsForProjectDto
	isSet bool
}

func (v NullableZededaCredentialsForProjectDto) Get() *ZededaCredentialsForProjectDto {
	return v.value
}

func (v *NullableZededaCredentialsForProjectDto) Set(val *ZededaCredentialsForProjectDto) {
	v.value = val
	v.isSet = true
}

func (v NullableZededaCredentialsForProjectDto) IsSet() bool {
	return v.isSet
}

func (v *NullableZededaCredentialsForProjectDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZededaCredentialsForProjectDto(val *ZededaCredentialsForProjectDto) *NullableZededaCredentialsForProjectDto {
	return &NullableZededaCredentialsForProjectDto{value: val, isSet: true}
}

func (v NullableZededaCredentialsForProjectDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZededaCredentialsForProjectDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


