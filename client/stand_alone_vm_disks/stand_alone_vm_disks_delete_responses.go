// Code generated by go-swagger; DO NOT EDIT.

package stand_alone_vm_disks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// StandAloneVMDisksDeleteReader is a Reader for the StandAloneVMDisksDelete structure.
type StandAloneVMDisksDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StandAloneVMDisksDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStandAloneVMDisksDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStandAloneVMDisksDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewStandAloneVMDisksDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStandAloneVMDisksDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStandAloneVMDisksDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStandAloneVMDisksDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewStandAloneVMDisksDeleteOK creates a StandAloneVMDisksDeleteOK with default headers values
func NewStandAloneVMDisksDeleteOK() *StandAloneVMDisksDeleteOK {
	return &StandAloneVMDisksDeleteOK{}
}

/* StandAloneVMDisksDeleteOK describes a response with status code 200, with default header values.

Success
*/
type StandAloneVMDisksDeleteOK struct {
	Payload models.Unit
}

func (o *StandAloneVMDisksDeleteOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAloneVmDisks/delete][%d] standAloneVmDisksDeleteOK  %+v", 200, o.Payload)
}
func (o *StandAloneVMDisksDeleteOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *StandAloneVMDisksDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStandAloneVMDisksDeleteBadRequest creates a StandAloneVMDisksDeleteBadRequest with default headers values
func NewStandAloneVMDisksDeleteBadRequest() *StandAloneVMDisksDeleteBadRequest {
	return &StandAloneVMDisksDeleteBadRequest{}
}

/* StandAloneVMDisksDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type StandAloneVMDisksDeleteBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *StandAloneVMDisksDeleteBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAloneVmDisks/delete][%d] standAloneVmDisksDeleteBadRequest  %+v", 400, o.Payload)
}
func (o *StandAloneVMDisksDeleteBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *StandAloneVMDisksDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStandAloneVMDisksDeleteUnauthorized creates a StandAloneVMDisksDeleteUnauthorized with default headers values
func NewStandAloneVMDisksDeleteUnauthorized() *StandAloneVMDisksDeleteUnauthorized {
	return &StandAloneVMDisksDeleteUnauthorized{}
}

/* StandAloneVMDisksDeleteUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type StandAloneVMDisksDeleteUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *StandAloneVMDisksDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAloneVmDisks/delete][%d] standAloneVmDisksDeleteUnauthorized  %+v", 401, o.Payload)
}
func (o *StandAloneVMDisksDeleteUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *StandAloneVMDisksDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStandAloneVMDisksDeleteForbidden creates a StandAloneVMDisksDeleteForbidden with default headers values
func NewStandAloneVMDisksDeleteForbidden() *StandAloneVMDisksDeleteForbidden {
	return &StandAloneVMDisksDeleteForbidden{}
}

/* StandAloneVMDisksDeleteForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type StandAloneVMDisksDeleteForbidden struct {
	Payload *models.ProblemDetails
}

func (o *StandAloneVMDisksDeleteForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAloneVmDisks/delete][%d] standAloneVmDisksDeleteForbidden  %+v", 403, o.Payload)
}
func (o *StandAloneVMDisksDeleteForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *StandAloneVMDisksDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStandAloneVMDisksDeleteNotFound creates a StandAloneVMDisksDeleteNotFound with default headers values
func NewStandAloneVMDisksDeleteNotFound() *StandAloneVMDisksDeleteNotFound {
	return &StandAloneVMDisksDeleteNotFound{}
}

/* StandAloneVMDisksDeleteNotFound describes a response with status code 404, with default header values.

Not Found
*/
type StandAloneVMDisksDeleteNotFound struct {
	Payload *models.ProblemDetails
}

func (o *StandAloneVMDisksDeleteNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAloneVmDisks/delete][%d] standAloneVmDisksDeleteNotFound  %+v", 404, o.Payload)
}
func (o *StandAloneVMDisksDeleteNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *StandAloneVMDisksDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStandAloneVMDisksDeleteInternalServerError creates a StandAloneVMDisksDeleteInternalServerError with default headers values
func NewStandAloneVMDisksDeleteInternalServerError() *StandAloneVMDisksDeleteInternalServerError {
	return &StandAloneVMDisksDeleteInternalServerError{}
}

/* StandAloneVMDisksDeleteInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type StandAloneVMDisksDeleteInternalServerError struct {
}

func (o *StandAloneVMDisksDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAloneVmDisks/delete][%d] standAloneVmDisksDeleteInternalServerError ", 500)
}

func (o *StandAloneVMDisksDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
