// Code generated by go-swagger; DO NOT EDIT.

package taikun_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// TaikunGroupsUpdateReader is a Reader for the TaikunGroupsUpdate structure.
type TaikunGroupsUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TaikunGroupsUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTaikunGroupsUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTaikunGroupsUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewTaikunGroupsUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewTaikunGroupsUpdateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewTaikunGroupsUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTaikunGroupsUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewTaikunGroupsUpdateOK creates a TaikunGroupsUpdateOK with default headers values
func NewTaikunGroupsUpdateOK() *TaikunGroupsUpdateOK {
	return &TaikunGroupsUpdateOK{}
}

/* TaikunGroupsUpdateOK describes a response with status code 200, with default header values.

Success
*/
type TaikunGroupsUpdateOK struct {
	Payload models.Unit
}

func (o *TaikunGroupsUpdateOK) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/TaikunGroups/update][%d] taikunGroupsUpdateOK  %+v", 200, o.Payload)
}
func (o *TaikunGroupsUpdateOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *TaikunGroupsUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTaikunGroupsUpdateBadRequest creates a TaikunGroupsUpdateBadRequest with default headers values
func NewTaikunGroupsUpdateBadRequest() *TaikunGroupsUpdateBadRequest {
	return &TaikunGroupsUpdateBadRequest{}
}

/* TaikunGroupsUpdateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type TaikunGroupsUpdateBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *TaikunGroupsUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/TaikunGroups/update][%d] taikunGroupsUpdateBadRequest  %+v", 400, o.Payload)
}
func (o *TaikunGroupsUpdateBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *TaikunGroupsUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTaikunGroupsUpdateUnauthorized creates a TaikunGroupsUpdateUnauthorized with default headers values
func NewTaikunGroupsUpdateUnauthorized() *TaikunGroupsUpdateUnauthorized {
	return &TaikunGroupsUpdateUnauthorized{}
}

/* TaikunGroupsUpdateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type TaikunGroupsUpdateUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *TaikunGroupsUpdateUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/TaikunGroups/update][%d] taikunGroupsUpdateUnauthorized  %+v", 401, o.Payload)
}
func (o *TaikunGroupsUpdateUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *TaikunGroupsUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTaikunGroupsUpdateForbidden creates a TaikunGroupsUpdateForbidden with default headers values
func NewTaikunGroupsUpdateForbidden() *TaikunGroupsUpdateForbidden {
	return &TaikunGroupsUpdateForbidden{}
}

/* TaikunGroupsUpdateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type TaikunGroupsUpdateForbidden struct {
	Payload *models.ProblemDetails
}

func (o *TaikunGroupsUpdateForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/TaikunGroups/update][%d] taikunGroupsUpdateForbidden  %+v", 403, o.Payload)
}
func (o *TaikunGroupsUpdateForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *TaikunGroupsUpdateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTaikunGroupsUpdateNotFound creates a TaikunGroupsUpdateNotFound with default headers values
func NewTaikunGroupsUpdateNotFound() *TaikunGroupsUpdateNotFound {
	return &TaikunGroupsUpdateNotFound{}
}

/* TaikunGroupsUpdateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type TaikunGroupsUpdateNotFound struct {
	Payload *models.ProblemDetails
}

func (o *TaikunGroupsUpdateNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/TaikunGroups/update][%d] taikunGroupsUpdateNotFound  %+v", 404, o.Payload)
}
func (o *TaikunGroupsUpdateNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *TaikunGroupsUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTaikunGroupsUpdateInternalServerError creates a TaikunGroupsUpdateInternalServerError with default headers values
func NewTaikunGroupsUpdateInternalServerError() *TaikunGroupsUpdateInternalServerError {
	return &TaikunGroupsUpdateInternalServerError{}
}

/* TaikunGroupsUpdateInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type TaikunGroupsUpdateInternalServerError struct {
}

func (o *TaikunGroupsUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/TaikunGroups/update][%d] taikunGroupsUpdateInternalServerError ", 500)
}

func (o *TaikunGroupsUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
