/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the StripeSubscriptionItemDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StripeSubscriptionItemDto{}

// StripeSubscriptionItemDto struct for StripeSubscriptionItemDto
type StripeSubscriptionItemDto struct {
	SubscriptionItemId *string `json:"subscriptionItemId,omitempty"`
	PriceId *string `json:"priceId,omitempty"`
	ProductId *string `json:"productId,omitempty"`
}

// NewStripeSubscriptionItemDto instantiates a new StripeSubscriptionItemDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStripeSubscriptionItemDto() *StripeSubscriptionItemDto {
	this := StripeSubscriptionItemDto{}
	return &this
}

// NewStripeSubscriptionItemDtoWithDefaults instantiates a new StripeSubscriptionItemDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStripeSubscriptionItemDtoWithDefaults() *StripeSubscriptionItemDto {
	this := StripeSubscriptionItemDto{}
	return &this
}

// GetSubscriptionItemId returns the SubscriptionItemId field value if set, zero value otherwise.
func (o *StripeSubscriptionItemDto) GetSubscriptionItemId() string {
	if o == nil || IsNil(o.SubscriptionItemId) {
		var ret string
		return ret
	}
	return *o.SubscriptionItemId
}

// GetSubscriptionItemIdOk returns a tuple with the SubscriptionItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StripeSubscriptionItemDto) GetSubscriptionItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionItemId) {
		return nil, false
	}
	return o.SubscriptionItemId, true
}

// HasSubscriptionItemId returns a boolean if a field has been set.
func (o *StripeSubscriptionItemDto) HasSubscriptionItemId() bool {
	if o != nil && !IsNil(o.SubscriptionItemId) {
		return true
	}

	return false
}

// SetSubscriptionItemId gets a reference to the given string and assigns it to the SubscriptionItemId field.
func (o *StripeSubscriptionItemDto) SetSubscriptionItemId(v string) {
	o.SubscriptionItemId = &v
}

// GetPriceId returns the PriceId field value if set, zero value otherwise.
func (o *StripeSubscriptionItemDto) GetPriceId() string {
	if o == nil || IsNil(o.PriceId) {
		var ret string
		return ret
	}
	return *o.PriceId
}

// GetPriceIdOk returns a tuple with the PriceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StripeSubscriptionItemDto) GetPriceIdOk() (*string, bool) {
	if o == nil || IsNil(o.PriceId) {
		return nil, false
	}
	return o.PriceId, true
}

// HasPriceId returns a boolean if a field has been set.
func (o *StripeSubscriptionItemDto) HasPriceId() bool {
	if o != nil && !IsNil(o.PriceId) {
		return true
	}

	return false
}

// SetPriceId gets a reference to the given string and assigns it to the PriceId field.
func (o *StripeSubscriptionItemDto) SetPriceId(v string) {
	o.PriceId = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *StripeSubscriptionItemDto) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StripeSubscriptionItemDto) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *StripeSubscriptionItemDto) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *StripeSubscriptionItemDto) SetProductId(v string) {
	o.ProductId = &v
}

func (o StripeSubscriptionItemDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StripeSubscriptionItemDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SubscriptionItemId) {
		toSerialize["subscriptionItemId"] = o.SubscriptionItemId
	}
	if !IsNil(o.PriceId) {
		toSerialize["priceId"] = o.PriceId
	}
	if !IsNil(o.ProductId) {
		toSerialize["productId"] = o.ProductId
	}
	return toSerialize, nil
}

type NullableStripeSubscriptionItemDto struct {
	value *StripeSubscriptionItemDto
	isSet bool
}

func (v NullableStripeSubscriptionItemDto) Get() *StripeSubscriptionItemDto {
	return v.value
}

func (v *NullableStripeSubscriptionItemDto) Set(val *StripeSubscriptionItemDto) {
	v.value = val
	v.isSet = true
}

func (v NullableStripeSubscriptionItemDto) IsSet() bool {
	return v.isSet
}

func (v *NullableStripeSubscriptionItemDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStripeSubscriptionItemDto(val *StripeSubscriptionItemDto) *NullableStripeSubscriptionItemDto {
	return &NullableStripeSubscriptionItemDto{value: val, isSet: true}
}

func (v NullableStripeSubscriptionItemDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStripeSubscriptionItemDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


