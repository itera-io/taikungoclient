/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the AzureAksClusterDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureAksClusterDto{}

// AzureAksClusterDto struct for AzureAksClusterDto
type AzureAksClusterDto struct {
	ResourceGroupName NullableString `json:"resourceGroupName,omitempty"`
	ClusterName NullableString `json:"clusterName,omitempty"`
	Location NullableString `json:"location,omitempty"`
}

// NewAzureAksClusterDto instantiates a new AzureAksClusterDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureAksClusterDto() *AzureAksClusterDto {
	this := AzureAksClusterDto{}
	return &this
}

// NewAzureAksClusterDtoWithDefaults instantiates a new AzureAksClusterDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureAksClusterDtoWithDefaults() *AzureAksClusterDto {
	this := AzureAksClusterDto{}
	return &this
}

// GetResourceGroupName returns the ResourceGroupName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureAksClusterDto) GetResourceGroupName() string {
	if o == nil || IsNil(o.ResourceGroupName.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceGroupName.Get()
}

// GetResourceGroupNameOk returns a tuple with the ResourceGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureAksClusterDto) GetResourceGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceGroupName.Get(), o.ResourceGroupName.IsSet()
}

// HasResourceGroupName returns a boolean if a field has been set.
func (o *AzureAksClusterDto) HasResourceGroupName() bool {
	if o != nil && o.ResourceGroupName.IsSet() {
		return true
	}

	return false
}

// SetResourceGroupName gets a reference to the given NullableString and assigns it to the ResourceGroupName field.
func (o *AzureAksClusterDto) SetResourceGroupName(v string) {
	o.ResourceGroupName.Set(&v)
}
// SetResourceGroupNameNil sets the value for ResourceGroupName to be an explicit nil
func (o *AzureAksClusterDto) SetResourceGroupNameNil() {
	o.ResourceGroupName.Set(nil)
}

// UnsetResourceGroupName ensures that no value is present for ResourceGroupName, not even an explicit nil
func (o *AzureAksClusterDto) UnsetResourceGroupName() {
	o.ResourceGroupName.Unset()
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureAksClusterDto) GetClusterName() string {
	if o == nil || IsNil(o.ClusterName.Get()) {
		var ret string
		return ret
	}
	return *o.ClusterName.Get()
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureAksClusterDto) GetClusterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClusterName.Get(), o.ClusterName.IsSet()
}

// HasClusterName returns a boolean if a field has been set.
func (o *AzureAksClusterDto) HasClusterName() bool {
	if o != nil && o.ClusterName.IsSet() {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given NullableString and assigns it to the ClusterName field.
func (o *AzureAksClusterDto) SetClusterName(v string) {
	o.ClusterName.Set(&v)
}
// SetClusterNameNil sets the value for ClusterName to be an explicit nil
func (o *AzureAksClusterDto) SetClusterNameNil() {
	o.ClusterName.Set(nil)
}

// UnsetClusterName ensures that no value is present for ClusterName, not even an explicit nil
func (o *AzureAksClusterDto) UnsetClusterName() {
	o.ClusterName.Unset()
}

// GetLocation returns the Location field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureAksClusterDto) GetLocation() string {
	if o == nil || IsNil(o.Location.Get()) {
		var ret string
		return ret
	}
	return *o.Location.Get()
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureAksClusterDto) GetLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Location.Get(), o.Location.IsSet()
}

// HasLocation returns a boolean if a field has been set.
func (o *AzureAksClusterDto) HasLocation() bool {
	if o != nil && o.Location.IsSet() {
		return true
	}

	return false
}

// SetLocation gets a reference to the given NullableString and assigns it to the Location field.
func (o *AzureAksClusterDto) SetLocation(v string) {
	o.Location.Set(&v)
}
// SetLocationNil sets the value for Location to be an explicit nil
func (o *AzureAksClusterDto) SetLocationNil() {
	o.Location.Set(nil)
}

// UnsetLocation ensures that no value is present for Location, not even an explicit nil
func (o *AzureAksClusterDto) UnsetLocation() {
	o.Location.Unset()
}

func (o AzureAksClusterDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureAksClusterDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ResourceGroupName.IsSet() {
		toSerialize["resourceGroupName"] = o.ResourceGroupName.Get()
	}
	if o.ClusterName.IsSet() {
		toSerialize["clusterName"] = o.ClusterName.Get()
	}
	if o.Location.IsSet() {
		toSerialize["location"] = o.Location.Get()
	}
	return toSerialize, nil
}

type NullableAzureAksClusterDto struct {
	value *AzureAksClusterDto
	isSet bool
}

func (v NullableAzureAksClusterDto) Get() *AzureAksClusterDto {
	return v.value
}

func (v *NullableAzureAksClusterDto) Set(val *AzureAksClusterDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureAksClusterDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureAksClusterDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureAksClusterDto(val *AzureAksClusterDto) *NullableAzureAksClusterDto {
	return &NullableAzureAksClusterDto{value: val, isSet: true}
}

func (v NullableAzureAksClusterDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureAksClusterDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


