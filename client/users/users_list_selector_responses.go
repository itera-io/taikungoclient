// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// UsersListSelectorReader is a Reader for the UsersListSelector structure.
type UsersListSelectorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UsersListSelectorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUsersListSelectorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUsersListSelectorBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUsersListSelectorUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUsersListSelectorForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUsersListSelectorNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUsersListSelectorTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUsersListSelectorInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUsersListSelectorOK creates a UsersListSelectorOK with default headers values
func NewUsersListSelectorOK() *UsersListSelectorOK {
	return &UsersListSelectorOK{}
}

/* UsersListSelectorOK describes a response with status code 200, with default header values.

Success
*/
type UsersListSelectorOK struct {
	Payload []*models.UserDropdownDto
}

func (o *UsersListSelectorOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Users/list][%d] usersListSelectorOK  %+v", 200, o.Payload)
}
func (o *UsersListSelectorOK) GetPayload() []*models.UserDropdownDto {
	return o.Payload
}

func (o *UsersListSelectorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersListSelectorBadRequest creates a UsersListSelectorBadRequest with default headers values
func NewUsersListSelectorBadRequest() *UsersListSelectorBadRequest {
	return &UsersListSelectorBadRequest{}
}

/* UsersListSelectorBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UsersListSelectorBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *UsersListSelectorBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Users/list][%d] usersListSelectorBadRequest  %+v", 400, o.Payload)
}
func (o *UsersListSelectorBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *UsersListSelectorBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersListSelectorUnauthorized creates a UsersListSelectorUnauthorized with default headers values
func NewUsersListSelectorUnauthorized() *UsersListSelectorUnauthorized {
	return &UsersListSelectorUnauthorized{}
}

/* UsersListSelectorUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UsersListSelectorUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *UsersListSelectorUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Users/list][%d] usersListSelectorUnauthorized  %+v", 401, o.Payload)
}
func (o *UsersListSelectorUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *UsersListSelectorUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersListSelectorForbidden creates a UsersListSelectorForbidden with default headers values
func NewUsersListSelectorForbidden() *UsersListSelectorForbidden {
	return &UsersListSelectorForbidden{}
}

/* UsersListSelectorForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UsersListSelectorForbidden struct {
	Payload *models.ProblemDetails
}

func (o *UsersListSelectorForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Users/list][%d] usersListSelectorForbidden  %+v", 403, o.Payload)
}
func (o *UsersListSelectorForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *UsersListSelectorForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersListSelectorNotFound creates a UsersListSelectorNotFound with default headers values
func NewUsersListSelectorNotFound() *UsersListSelectorNotFound {
	return &UsersListSelectorNotFound{}
}

/* UsersListSelectorNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UsersListSelectorNotFound struct {
	Payload *models.ProblemDetails
}

func (o *UsersListSelectorNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Users/list][%d] usersListSelectorNotFound  %+v", 404, o.Payload)
}
func (o *UsersListSelectorNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *UsersListSelectorNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersListSelectorTooManyRequests creates a UsersListSelectorTooManyRequests with default headers values
func NewUsersListSelectorTooManyRequests() *UsersListSelectorTooManyRequests {
	return &UsersListSelectorTooManyRequests{}
}

/* UsersListSelectorTooManyRequests describes a response with status code 429, with default header values.

Client Error
*/
type UsersListSelectorTooManyRequests struct {
	Payload *models.ProblemDetails
}

func (o *UsersListSelectorTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Users/list][%d] usersListSelectorTooManyRequests  %+v", 429, o.Payload)
}
func (o *UsersListSelectorTooManyRequests) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *UsersListSelectorTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersListSelectorInternalServerError creates a UsersListSelectorInternalServerError with default headers values
func NewUsersListSelectorInternalServerError() *UsersListSelectorInternalServerError {
	return &UsersListSelectorInternalServerError{}
}

/* UsersListSelectorInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UsersListSelectorInternalServerError struct {
}

func (o *UsersListSelectorInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Users/list][%d] usersListSelectorInternalServerError ", 500)
}

func (o *UsersListSelectorInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
