// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewUsersToggleMaintenanceModeParams creates a new UsersToggleMaintenanceModeParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUsersToggleMaintenanceModeParams() *UsersToggleMaintenanceModeParams {
	return &UsersToggleMaintenanceModeParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUsersToggleMaintenanceModeParamsWithTimeout creates a new UsersToggleMaintenanceModeParams object
// with the ability to set a timeout on a request.
func NewUsersToggleMaintenanceModeParamsWithTimeout(timeout time.Duration) *UsersToggleMaintenanceModeParams {
	return &UsersToggleMaintenanceModeParams{
		timeout: timeout,
	}
}

// NewUsersToggleMaintenanceModeParamsWithContext creates a new UsersToggleMaintenanceModeParams object
// with the ability to set a context for a request.
func NewUsersToggleMaintenanceModeParamsWithContext(ctx context.Context) *UsersToggleMaintenanceModeParams {
	return &UsersToggleMaintenanceModeParams{
		Context: ctx,
	}
}

// NewUsersToggleMaintenanceModeParamsWithHTTPClient creates a new UsersToggleMaintenanceModeParams object
// with the ability to set a custom HTTPClient for a request.
func NewUsersToggleMaintenanceModeParamsWithHTTPClient(client *http.Client) *UsersToggleMaintenanceModeParams {
	return &UsersToggleMaintenanceModeParams{
		HTTPClient: client,
	}
}

/* UsersToggleMaintenanceModeParams contains all the parameters to send to the API endpoint
   for the users toggle maintenance mode operation.

   Typically these are written to a http.Request.
*/
type UsersToggleMaintenanceModeParams struct {

	// Mode.
	Mode *string

	// V.
	V string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the users toggle maintenance mode params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UsersToggleMaintenanceModeParams) WithDefaults() *UsersToggleMaintenanceModeParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the users toggle maintenance mode params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UsersToggleMaintenanceModeParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the users toggle maintenance mode params
func (o *UsersToggleMaintenanceModeParams) WithTimeout(timeout time.Duration) *UsersToggleMaintenanceModeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the users toggle maintenance mode params
func (o *UsersToggleMaintenanceModeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the users toggle maintenance mode params
func (o *UsersToggleMaintenanceModeParams) WithContext(ctx context.Context) *UsersToggleMaintenanceModeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the users toggle maintenance mode params
func (o *UsersToggleMaintenanceModeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the users toggle maintenance mode params
func (o *UsersToggleMaintenanceModeParams) WithHTTPClient(client *http.Client) *UsersToggleMaintenanceModeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the users toggle maintenance mode params
func (o *UsersToggleMaintenanceModeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMode adds the mode to the users toggle maintenance mode params
func (o *UsersToggleMaintenanceModeParams) WithMode(mode *string) *UsersToggleMaintenanceModeParams {
	o.SetMode(mode)
	return o
}

// SetMode adds the mode to the users toggle maintenance mode params
func (o *UsersToggleMaintenanceModeParams) SetMode(mode *string) {
	o.Mode = mode
}

// WithV adds the v to the users toggle maintenance mode params
func (o *UsersToggleMaintenanceModeParams) WithV(v string) *UsersToggleMaintenanceModeParams {
	o.SetV(v)
	return o
}

// SetV adds the v to the users toggle maintenance mode params
func (o *UsersToggleMaintenanceModeParams) SetV(v string) {
	o.V = v
}

// WriteToRequest writes these params to a swagger request
func (o *UsersToggleMaintenanceModeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Mode != nil {

		// query param mode
		var qrMode string

		if o.Mode != nil {
			qrMode = *o.Mode
		}
		qMode := qrMode
		if qMode != "" {

			if err := r.SetQueryParam("mode", qMode); err != nil {
				return err
			}
		}
	}

	// path param v
	if err := r.SetPathParam("v", o.V); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
