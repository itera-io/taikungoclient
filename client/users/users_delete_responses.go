// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UsersDeleteReader is a Reader for the UsersDelete structure.
type UsersDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UsersDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUsersDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUsersDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUsersDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUsersDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUsersDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUsersDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUsersDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUsersDeleteOK creates a UsersDeleteOK with default headers values
func NewUsersDeleteOK() *UsersDeleteOK {
	return &UsersDeleteOK{}
}

/*
UsersDeleteOK describes a response with status code 200, with default header values.

Success
*/
type UsersDeleteOK struct {
	Payload interface{}
}

// IsSuccess returns true when this users delete o k response has a 2xx status code
func (o *UsersDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this users delete o k response has a 3xx status code
func (o *UsersDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users delete o k response has a 4xx status code
func (o *UsersDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this users delete o k response has a 5xx status code
func (o *UsersDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this users delete o k response a status code equal to that given
func (o *UsersDeleteOK) IsCode(code int) bool {
	return code == 200
}

func (o *UsersDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Users/{id}][%d] usersDeleteOK  %+v", 200, o.Payload)
}

func (o *UsersDeleteOK) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Users/{id}][%d] usersDeleteOK  %+v", 200, o.Payload)
}

func (o *UsersDeleteOK) GetPayload() interface{} {
	return o.Payload
}

func (o *UsersDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersDeleteNoContent creates a UsersDeleteNoContent with default headers values
func NewUsersDeleteNoContent() *UsersDeleteNoContent {
	return &UsersDeleteNoContent{}
}

/*
UsersDeleteNoContent describes a response with status code 204, with default header values.

Success
*/
type UsersDeleteNoContent struct {
}

// IsSuccess returns true when this users delete no content response has a 2xx status code
func (o *UsersDeleteNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this users delete no content response has a 3xx status code
func (o *UsersDeleteNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users delete no content response has a 4xx status code
func (o *UsersDeleteNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this users delete no content response has a 5xx status code
func (o *UsersDeleteNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this users delete no content response a status code equal to that given
func (o *UsersDeleteNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UsersDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Users/{id}][%d] usersDeleteNoContent ", 204)
}

func (o *UsersDeleteNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Users/{id}][%d] usersDeleteNoContent ", 204)
}

func (o *UsersDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUsersDeleteBadRequest creates a UsersDeleteBadRequest with default headers values
func NewUsersDeleteBadRequest() *UsersDeleteBadRequest {
	return &UsersDeleteBadRequest{}
}

/*
UsersDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UsersDeleteBadRequest struct {
	Payload []*UsersDeleteBadRequestBodyItems0
}

// IsSuccess returns true when this users delete bad request response has a 2xx status code
func (o *UsersDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this users delete bad request response has a 3xx status code
func (o *UsersDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users delete bad request response has a 4xx status code
func (o *UsersDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this users delete bad request response has a 5xx status code
func (o *UsersDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this users delete bad request response a status code equal to that given
func (o *UsersDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UsersDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Users/{id}][%d] usersDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *UsersDeleteBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Users/{id}][%d] usersDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *UsersDeleteBadRequest) GetPayload() []*UsersDeleteBadRequestBodyItems0 {
	return o.Payload
}

func (o *UsersDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersDeleteUnauthorized creates a UsersDeleteUnauthorized with default headers values
func NewUsersDeleteUnauthorized() *UsersDeleteUnauthorized {
	return &UsersDeleteUnauthorized{}
}

/*
UsersDeleteUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UsersDeleteUnauthorized struct {
	Payload *UsersDeleteUnauthorizedBody
}

// IsSuccess returns true when this users delete unauthorized response has a 2xx status code
func (o *UsersDeleteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this users delete unauthorized response has a 3xx status code
func (o *UsersDeleteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users delete unauthorized response has a 4xx status code
func (o *UsersDeleteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this users delete unauthorized response has a 5xx status code
func (o *UsersDeleteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this users delete unauthorized response a status code equal to that given
func (o *UsersDeleteUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UsersDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Users/{id}][%d] usersDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *UsersDeleteUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Users/{id}][%d] usersDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *UsersDeleteUnauthorized) GetPayload() *UsersDeleteUnauthorizedBody {
	return o.Payload
}

func (o *UsersDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UsersDeleteUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersDeleteForbidden creates a UsersDeleteForbidden with default headers values
func NewUsersDeleteForbidden() *UsersDeleteForbidden {
	return &UsersDeleteForbidden{}
}

/*
UsersDeleteForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UsersDeleteForbidden struct {
	Payload *UsersDeleteForbiddenBody
}

// IsSuccess returns true when this users delete forbidden response has a 2xx status code
func (o *UsersDeleteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this users delete forbidden response has a 3xx status code
func (o *UsersDeleteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users delete forbidden response has a 4xx status code
func (o *UsersDeleteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this users delete forbidden response has a 5xx status code
func (o *UsersDeleteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this users delete forbidden response a status code equal to that given
func (o *UsersDeleteForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UsersDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Users/{id}][%d] usersDeleteForbidden  %+v", 403, o.Payload)
}

func (o *UsersDeleteForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Users/{id}][%d] usersDeleteForbidden  %+v", 403, o.Payload)
}

func (o *UsersDeleteForbidden) GetPayload() *UsersDeleteForbiddenBody {
	return o.Payload
}

func (o *UsersDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UsersDeleteForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersDeleteNotFound creates a UsersDeleteNotFound with default headers values
func NewUsersDeleteNotFound() *UsersDeleteNotFound {
	return &UsersDeleteNotFound{}
}

/*
UsersDeleteNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UsersDeleteNotFound struct {
	Payload *UsersDeleteNotFoundBody
}

// IsSuccess returns true when this users delete not found response has a 2xx status code
func (o *UsersDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this users delete not found response has a 3xx status code
func (o *UsersDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users delete not found response has a 4xx status code
func (o *UsersDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this users delete not found response has a 5xx status code
func (o *UsersDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this users delete not found response a status code equal to that given
func (o *UsersDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UsersDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Users/{id}][%d] usersDeleteNotFound  %+v", 404, o.Payload)
}

func (o *UsersDeleteNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Users/{id}][%d] usersDeleteNotFound  %+v", 404, o.Payload)
}

func (o *UsersDeleteNotFound) GetPayload() *UsersDeleteNotFoundBody {
	return o.Payload
}

func (o *UsersDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UsersDeleteNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersDeleteInternalServerError creates a UsersDeleteInternalServerError with default headers values
func NewUsersDeleteInternalServerError() *UsersDeleteInternalServerError {
	return &UsersDeleteInternalServerError{}
}

/*
UsersDeleteInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UsersDeleteInternalServerError struct {
}

// IsSuccess returns true when this users delete internal server error response has a 2xx status code
func (o *UsersDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this users delete internal server error response has a 3xx status code
func (o *UsersDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users delete internal server error response has a 4xx status code
func (o *UsersDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this users delete internal server error response has a 5xx status code
func (o *UsersDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this users delete internal server error response a status code equal to that given
func (o *UsersDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UsersDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Users/{id}][%d] usersDeleteInternalServerError ", 500)
}

func (o *UsersDeleteInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Users/{id}][%d] usersDeleteInternalServerError ", 500)
}

func (o *UsersDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
UsersDeleteBadRequestBodyItems0 users delete bad request body items0
swagger:model UsersDeleteBadRequestBodyItems0
*/
type UsersDeleteBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this users delete bad request body items0
func (o *UsersDeleteBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this users delete bad request body items0 based on context it is used
func (o *UsersDeleteBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UsersDeleteBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UsersDeleteBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res UsersDeleteBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
UsersDeleteForbiddenBody users delete forbidden body
swagger:model UsersDeleteForbiddenBody
*/
type UsersDeleteForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this users delete forbidden body
func (o *UsersDeleteForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this users delete forbidden body based on context it is used
func (o *UsersDeleteForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UsersDeleteForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UsersDeleteForbiddenBody) UnmarshalBinary(b []byte) error {
	var res UsersDeleteForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
UsersDeleteNotFoundBody users delete not found body
swagger:model UsersDeleteNotFoundBody
*/
type UsersDeleteNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this users delete not found body
func (o *UsersDeleteNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this users delete not found body based on context it is used
func (o *UsersDeleteNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UsersDeleteNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UsersDeleteNotFoundBody) UnmarshalBinary(b []byte) error {
	var res UsersDeleteNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
UsersDeleteUnauthorizedBody users delete unauthorized body
swagger:model UsersDeleteUnauthorizedBody
*/
type UsersDeleteUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this users delete unauthorized body
func (o *UsersDeleteUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this users delete unauthorized body based on context it is used
func (o *UsersDeleteUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UsersDeleteUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UsersDeleteUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res UsersDeleteUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
