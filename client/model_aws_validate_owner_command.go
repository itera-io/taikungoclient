/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the AwsValidateOwnerCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsValidateOwnerCommand{}

// AwsValidateOwnerCommand struct for AwsValidateOwnerCommand
type AwsValidateOwnerCommand struct {
	CloudId *int32   `json:"cloudId,omitempty"`
	Owners  []string `json:"owners,omitempty"`
}

// NewAwsValidateOwnerCommand instantiates a new AwsValidateOwnerCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsValidateOwnerCommand() *AwsValidateOwnerCommand {
	this := AwsValidateOwnerCommand{}
	return &this
}

// NewAwsValidateOwnerCommandWithDefaults instantiates a new AwsValidateOwnerCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsValidateOwnerCommandWithDefaults() *AwsValidateOwnerCommand {
	this := AwsValidateOwnerCommand{}
	return &this
}

// GetCloudId returns the CloudId field value if set, zero value otherwise.
func (o *AwsValidateOwnerCommand) GetCloudId() int32 {
	if o == nil || IsNil(o.CloudId) {
		var ret int32
		return ret
	}
	return *o.CloudId
}

// GetCloudIdOk returns a tuple with the CloudId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsValidateOwnerCommand) GetCloudIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CloudId) {
		return nil, false
	}
	return o.CloudId, true
}

// HasCloudId returns a boolean if a field has been set.
func (o *AwsValidateOwnerCommand) HasCloudId() bool {
	if o != nil && !IsNil(o.CloudId) {
		return true
	}

	return false
}

// SetCloudId gets a reference to the given int32 and assigns it to the CloudId field.
func (o *AwsValidateOwnerCommand) SetCloudId(v int32) {
	o.CloudId = &v
}

// GetOwners returns the Owners field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsValidateOwnerCommand) GetOwners() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Owners
}

// GetOwnersOk returns a tuple with the Owners field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsValidateOwnerCommand) GetOwnersOk() ([]string, bool) {
	if o == nil || IsNil(o.Owners) {
		return nil, false
	}
	return o.Owners, true
}

// HasOwners returns a boolean if a field has been set.
func (o *AwsValidateOwnerCommand) HasOwners() bool {
	if o != nil && IsNil(o.Owners) {
		return true
	}

	return false
}

// SetOwners gets a reference to the given []string and assigns it to the Owners field.
func (o *AwsValidateOwnerCommand) SetOwners(v []string) {
	o.Owners = v
}

func (o AwsValidateOwnerCommand) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsValidateOwnerCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloudId) {
		toSerialize["cloudId"] = o.CloudId
	}
	if o.Owners != nil {
		toSerialize["owners"] = o.Owners
	}
	return toSerialize, nil
}

type NullableAwsValidateOwnerCommand struct {
	value *AwsValidateOwnerCommand
	isSet bool
}

func (v NullableAwsValidateOwnerCommand) Get() *AwsValidateOwnerCommand {
	return v.value
}

func (v *NullableAwsValidateOwnerCommand) Set(val *AwsValidateOwnerCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsValidateOwnerCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsValidateOwnerCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsValidateOwnerCommand(val *AwsValidateOwnerCommand) *NullableAwsValidateOwnerCommand {
	return &NullableAwsValidateOwnerCommand{value: val, isSet: true}
}

func (v NullableAwsValidateOwnerCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsValidateOwnerCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
