// Code generated by go-swagger; DO NOT EDIT.

package notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NotificationsCreateReader is a Reader for the NotificationsCreate structure.
type NotificationsCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NotificationsCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNotificationsCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNotificationsCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewNotificationsCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewNotificationsCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewNotificationsCreateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewNotificationsCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewNotificationsCreateOK creates a NotificationsCreateOK with default headers values
func NewNotificationsCreateOK() *NotificationsCreateOK {
	return &NotificationsCreateOK{}
}

/*
NotificationsCreateOK describes a response with status code 200, with default header values.

Success
*/
type NotificationsCreateOK struct {
	Payload interface{}
}

// IsSuccess returns true when this notifications create o k response has a 2xx status code
func (o *NotificationsCreateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this notifications create o k response has a 3xx status code
func (o *NotificationsCreateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notifications create o k response has a 4xx status code
func (o *NotificationsCreateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this notifications create o k response has a 5xx status code
func (o *NotificationsCreateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this notifications create o k response a status code equal to that given
func (o *NotificationsCreateOK) IsCode(code int) bool {
	return code == 200
}

func (o *NotificationsCreateOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Notifications/add][%d] notificationsCreateOK  %+v", 200, o.Payload)
}

func (o *NotificationsCreateOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Notifications/add][%d] notificationsCreateOK  %+v", 200, o.Payload)
}

func (o *NotificationsCreateOK) GetPayload() interface{} {
	return o.Payload
}

func (o *NotificationsCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationsCreateBadRequest creates a NotificationsCreateBadRequest with default headers values
func NewNotificationsCreateBadRequest() *NotificationsCreateBadRequest {
	return &NotificationsCreateBadRequest{}
}

/*
NotificationsCreateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type NotificationsCreateBadRequest struct {
	Payload []*NotificationsCreateBadRequestBodyItems0
}

// IsSuccess returns true when this notifications create bad request response has a 2xx status code
func (o *NotificationsCreateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notifications create bad request response has a 3xx status code
func (o *NotificationsCreateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notifications create bad request response has a 4xx status code
func (o *NotificationsCreateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this notifications create bad request response has a 5xx status code
func (o *NotificationsCreateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this notifications create bad request response a status code equal to that given
func (o *NotificationsCreateBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *NotificationsCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Notifications/add][%d] notificationsCreateBadRequest  %+v", 400, o.Payload)
}

func (o *NotificationsCreateBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Notifications/add][%d] notificationsCreateBadRequest  %+v", 400, o.Payload)
}

func (o *NotificationsCreateBadRequest) GetPayload() []*NotificationsCreateBadRequestBodyItems0 {
	return o.Payload
}

func (o *NotificationsCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationsCreateUnauthorized creates a NotificationsCreateUnauthorized with default headers values
func NewNotificationsCreateUnauthorized() *NotificationsCreateUnauthorized {
	return &NotificationsCreateUnauthorized{}
}

/*
NotificationsCreateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type NotificationsCreateUnauthorized struct {
	Payload *NotificationsCreateUnauthorizedBody
}

// IsSuccess returns true when this notifications create unauthorized response has a 2xx status code
func (o *NotificationsCreateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notifications create unauthorized response has a 3xx status code
func (o *NotificationsCreateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notifications create unauthorized response has a 4xx status code
func (o *NotificationsCreateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this notifications create unauthorized response has a 5xx status code
func (o *NotificationsCreateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this notifications create unauthorized response a status code equal to that given
func (o *NotificationsCreateUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *NotificationsCreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Notifications/add][%d] notificationsCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *NotificationsCreateUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Notifications/add][%d] notificationsCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *NotificationsCreateUnauthorized) GetPayload() *NotificationsCreateUnauthorizedBody {
	return o.Payload
}

func (o *NotificationsCreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(NotificationsCreateUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationsCreateForbidden creates a NotificationsCreateForbidden with default headers values
func NewNotificationsCreateForbidden() *NotificationsCreateForbidden {
	return &NotificationsCreateForbidden{}
}

/*
NotificationsCreateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type NotificationsCreateForbidden struct {
	Payload *NotificationsCreateForbiddenBody
}

// IsSuccess returns true when this notifications create forbidden response has a 2xx status code
func (o *NotificationsCreateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notifications create forbidden response has a 3xx status code
func (o *NotificationsCreateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notifications create forbidden response has a 4xx status code
func (o *NotificationsCreateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this notifications create forbidden response has a 5xx status code
func (o *NotificationsCreateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this notifications create forbidden response a status code equal to that given
func (o *NotificationsCreateForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *NotificationsCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Notifications/add][%d] notificationsCreateForbidden  %+v", 403, o.Payload)
}

func (o *NotificationsCreateForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Notifications/add][%d] notificationsCreateForbidden  %+v", 403, o.Payload)
}

func (o *NotificationsCreateForbidden) GetPayload() *NotificationsCreateForbiddenBody {
	return o.Payload
}

func (o *NotificationsCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(NotificationsCreateForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationsCreateNotFound creates a NotificationsCreateNotFound with default headers values
func NewNotificationsCreateNotFound() *NotificationsCreateNotFound {
	return &NotificationsCreateNotFound{}
}

/*
NotificationsCreateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type NotificationsCreateNotFound struct {
	Payload *NotificationsCreateNotFoundBody
}

// IsSuccess returns true when this notifications create not found response has a 2xx status code
func (o *NotificationsCreateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notifications create not found response has a 3xx status code
func (o *NotificationsCreateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notifications create not found response has a 4xx status code
func (o *NotificationsCreateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this notifications create not found response has a 5xx status code
func (o *NotificationsCreateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this notifications create not found response a status code equal to that given
func (o *NotificationsCreateNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *NotificationsCreateNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Notifications/add][%d] notificationsCreateNotFound  %+v", 404, o.Payload)
}

func (o *NotificationsCreateNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Notifications/add][%d] notificationsCreateNotFound  %+v", 404, o.Payload)
}

func (o *NotificationsCreateNotFound) GetPayload() *NotificationsCreateNotFoundBody {
	return o.Payload
}

func (o *NotificationsCreateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(NotificationsCreateNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationsCreateInternalServerError creates a NotificationsCreateInternalServerError with default headers values
func NewNotificationsCreateInternalServerError() *NotificationsCreateInternalServerError {
	return &NotificationsCreateInternalServerError{}
}

/*
NotificationsCreateInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type NotificationsCreateInternalServerError struct {
}

// IsSuccess returns true when this notifications create internal server error response has a 2xx status code
func (o *NotificationsCreateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notifications create internal server error response has a 3xx status code
func (o *NotificationsCreateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notifications create internal server error response has a 4xx status code
func (o *NotificationsCreateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this notifications create internal server error response has a 5xx status code
func (o *NotificationsCreateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this notifications create internal server error response a status code equal to that given
func (o *NotificationsCreateInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *NotificationsCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Notifications/add][%d] notificationsCreateInternalServerError ", 500)
}

func (o *NotificationsCreateInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Notifications/add][%d] notificationsCreateInternalServerError ", 500)
}

func (o *NotificationsCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
NotificationsCreateBadRequestBodyItems0 notifications create bad request body items0
swagger:model NotificationsCreateBadRequestBodyItems0
*/
type NotificationsCreateBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this notifications create bad request body items0
func (o *NotificationsCreateBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this notifications create bad request body items0 based on context it is used
func (o *NotificationsCreateBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *NotificationsCreateBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NotificationsCreateBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res NotificationsCreateBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
NotificationsCreateBody notifications create body
swagger:model NotificationsCreateBody
*/
type NotificationsCreateBody struct {

	// action status
	// Enum: [0 1 2]
	ActionStatus int32 `json:"actionStatus,omitempty"`

	// action type
	// Enum: [10 20 30 32 34 36 38 40 42 44 50 60 70 80 90 100 105 110 120 130 140 150 155 156 160 165 170 175 176 177 180 190 200 210 220 230 240 250 260 270 280 290 300 310 320 330 340 350 360 370 380 390]
	ActionType int32 `json:"actionType,omitempty"`

	// project Id
	ProjectID int32 `json:"projectId,omitempty"`

	// project type
	// Enum: [100 200]
	ProjectType int32 `json:"projectType,omitempty"`
}

// Validate validates this notifications create body
func (o *NotificationsCreateBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateActionStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateActionType(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProjectType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var notificationsCreateBodyTypeActionStatusPropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[0,1,2]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		notificationsCreateBodyTypeActionStatusPropEnum = append(notificationsCreateBodyTypeActionStatusPropEnum, v)
	}
}

// prop value enum
func (o *NotificationsCreateBody) validateActionStatusEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, notificationsCreateBodyTypeActionStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *NotificationsCreateBody) validateActionStatus(formats strfmt.Registry) error {
	if swag.IsZero(o.ActionStatus) { // not required
		return nil
	}

	// value enum
	if err := o.validateActionStatusEnum("body"+"."+"actionStatus", "body", o.ActionStatus); err != nil {
		return err
	}

	return nil
}

var notificationsCreateBodyTypeActionTypePropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[10,20,30,32,34,36,38,40,42,44,50,60,70,80,90,100,105,110,120,130,140,150,155,156,160,165,170,175,176,177,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320,330,340,350,360,370,380,390]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		notificationsCreateBodyTypeActionTypePropEnum = append(notificationsCreateBodyTypeActionTypePropEnum, v)
	}
}

// prop value enum
func (o *NotificationsCreateBody) validateActionTypeEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, notificationsCreateBodyTypeActionTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *NotificationsCreateBody) validateActionType(formats strfmt.Registry) error {
	if swag.IsZero(o.ActionType) { // not required
		return nil
	}

	// value enum
	if err := o.validateActionTypeEnum("body"+"."+"actionType", "body", o.ActionType); err != nil {
		return err
	}

	return nil
}

var notificationsCreateBodyTypeProjectTypePropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[100,200]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		notificationsCreateBodyTypeProjectTypePropEnum = append(notificationsCreateBodyTypeProjectTypePropEnum, v)
	}
}

// prop value enum
func (o *NotificationsCreateBody) validateProjectTypeEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, notificationsCreateBodyTypeProjectTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *NotificationsCreateBody) validateProjectType(formats strfmt.Registry) error {
	if swag.IsZero(o.ProjectType) { // not required
		return nil
	}

	// value enum
	if err := o.validateProjectTypeEnum("body"+"."+"projectType", "body", o.ProjectType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this notifications create body based on context it is used
func (o *NotificationsCreateBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *NotificationsCreateBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NotificationsCreateBody) UnmarshalBinary(b []byte) error {
	var res NotificationsCreateBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
NotificationsCreateForbiddenBody notifications create forbidden body
swagger:model NotificationsCreateForbiddenBody
*/
type NotificationsCreateForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this notifications create forbidden body
func (o *NotificationsCreateForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this notifications create forbidden body based on context it is used
func (o *NotificationsCreateForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *NotificationsCreateForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NotificationsCreateForbiddenBody) UnmarshalBinary(b []byte) error {
	var res NotificationsCreateForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
NotificationsCreateNotFoundBody notifications create not found body
swagger:model NotificationsCreateNotFoundBody
*/
type NotificationsCreateNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this notifications create not found body
func (o *NotificationsCreateNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this notifications create not found body based on context it is used
func (o *NotificationsCreateNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *NotificationsCreateNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NotificationsCreateNotFoundBody) UnmarshalBinary(b []byte) error {
	var res NotificationsCreateNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
NotificationsCreateUnauthorizedBody notifications create unauthorized body
swagger:model NotificationsCreateUnauthorizedBody
*/
type NotificationsCreateUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this notifications create unauthorized body
func (o *NotificationsCreateUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this notifications create unauthorized body based on context it is used
func (o *NotificationsCreateUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *NotificationsCreateUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NotificationsCreateUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res NotificationsCreateUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
