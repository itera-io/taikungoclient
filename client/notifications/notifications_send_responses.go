// Code generated by go-swagger; DO NOT EDIT.

package notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// NotificationsSendReader is a Reader for the NotificationsSend structure.
type NotificationsSendReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NotificationsSendReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNotificationsSendOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNotificationsSendBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewNotificationsSendUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewNotificationsSendForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewNotificationsSendNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewNotificationsSendTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewNotificationsSendInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewNotificationsSendOK creates a NotificationsSendOK with default headers values
func NewNotificationsSendOK() *NotificationsSendOK {
	return &NotificationsSendOK{}
}

/* NotificationsSendOK describes a response with status code 200, with default header values.

Success
*/
type NotificationsSendOK struct {
	Payload models.Unit
}

func (o *NotificationsSendOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Notifications/send][%d] notificationsSendOK  %+v", 200, o.Payload)
}
func (o *NotificationsSendOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *NotificationsSendOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationsSendBadRequest creates a NotificationsSendBadRequest with default headers values
func NewNotificationsSendBadRequest() *NotificationsSendBadRequest {
	return &NotificationsSendBadRequest{}
}

/* NotificationsSendBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type NotificationsSendBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *NotificationsSendBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Notifications/send][%d] notificationsSendBadRequest  %+v", 400, o.Payload)
}
func (o *NotificationsSendBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *NotificationsSendBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationsSendUnauthorized creates a NotificationsSendUnauthorized with default headers values
func NewNotificationsSendUnauthorized() *NotificationsSendUnauthorized {
	return &NotificationsSendUnauthorized{}
}

/* NotificationsSendUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type NotificationsSendUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *NotificationsSendUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Notifications/send][%d] notificationsSendUnauthorized  %+v", 401, o.Payload)
}
func (o *NotificationsSendUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *NotificationsSendUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationsSendForbidden creates a NotificationsSendForbidden with default headers values
func NewNotificationsSendForbidden() *NotificationsSendForbidden {
	return &NotificationsSendForbidden{}
}

/* NotificationsSendForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type NotificationsSendForbidden struct {
	Payload *models.ProblemDetails
}

func (o *NotificationsSendForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Notifications/send][%d] notificationsSendForbidden  %+v", 403, o.Payload)
}
func (o *NotificationsSendForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *NotificationsSendForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationsSendNotFound creates a NotificationsSendNotFound with default headers values
func NewNotificationsSendNotFound() *NotificationsSendNotFound {
	return &NotificationsSendNotFound{}
}

/* NotificationsSendNotFound describes a response with status code 404, with default header values.

Not Found
*/
type NotificationsSendNotFound struct {
	Payload *models.ProblemDetails
}

func (o *NotificationsSendNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Notifications/send][%d] notificationsSendNotFound  %+v", 404, o.Payload)
}
func (o *NotificationsSendNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *NotificationsSendNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationsSendTooManyRequests creates a NotificationsSendTooManyRequests with default headers values
func NewNotificationsSendTooManyRequests() *NotificationsSendTooManyRequests {
	return &NotificationsSendTooManyRequests{}
}

/* NotificationsSendTooManyRequests describes a response with status code 429, with default header values.

Client Error
*/
type NotificationsSendTooManyRequests struct {
	Payload *models.ProblemDetails
}

func (o *NotificationsSendTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Notifications/send][%d] notificationsSendTooManyRequests  %+v", 429, o.Payload)
}
func (o *NotificationsSendTooManyRequests) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *NotificationsSendTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationsSendInternalServerError creates a NotificationsSendInternalServerError with default headers values
func NewNotificationsSendInternalServerError() *NotificationsSendInternalServerError {
	return &NotificationsSendInternalServerError{}
}

/* NotificationsSendInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type NotificationsSendInternalServerError struct {
}

func (o *NotificationsSendInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Notifications/send][%d] notificationsSendInternalServerError ", 500)
}

func (o *NotificationsSendInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
