/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the StandaloneProfileListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StandaloneProfileListDto{}

// StandaloneProfileListDto struct for StandaloneProfileListDto
type StandaloneProfileListDto struct {
	Id int32 `json:"id"`
	Name NullableString `json:"name"`
	Revision int32 `json:"revision"`
	IsLocked bool `json:"isLocked"`
	StandAloneProfileSecurityGroups []StandaloneProfileSecurityGroupListDto `json:"standAloneProfileSecurityGroups"`
}

type _StandaloneProfileListDto StandaloneProfileListDto

// NewStandaloneProfileListDto instantiates a new StandaloneProfileListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStandaloneProfileListDto(id int32, name NullableString, revision int32, isLocked bool, standAloneProfileSecurityGroups []StandaloneProfileSecurityGroupListDto) *StandaloneProfileListDto {
	this := StandaloneProfileListDto{}
	this.Id = id
	this.Name = name
	this.Revision = revision
	this.IsLocked = isLocked
	this.StandAloneProfileSecurityGroups = standAloneProfileSecurityGroups
	return &this
}

// NewStandaloneProfileListDtoWithDefaults instantiates a new StandaloneProfileListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStandaloneProfileListDtoWithDefaults() *StandaloneProfileListDto {
	this := StandaloneProfileListDto{}
	return &this
}

// GetId returns the Id field value
func (o *StandaloneProfileListDto) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *StandaloneProfileListDto) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *StandaloneProfileListDto) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *StandaloneProfileListDto) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StandaloneProfileListDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *StandaloneProfileListDto) SetName(v string) {
	o.Name.Set(&v)
}

// GetRevision returns the Revision field value
func (o *StandaloneProfileListDto) GetRevision() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *StandaloneProfileListDto) GetRevisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *StandaloneProfileListDto) SetRevision(v int32) {
	o.Revision = v
}

// GetIsLocked returns the IsLocked field value
func (o *StandaloneProfileListDto) GetIsLocked() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value
// and a boolean to check if the value has been set.
func (o *StandaloneProfileListDto) GetIsLockedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsLocked, true
}

// SetIsLocked sets field value
func (o *StandaloneProfileListDto) SetIsLocked(v bool) {
	o.IsLocked = v
}

// GetStandAloneProfileSecurityGroups returns the StandAloneProfileSecurityGroups field value
// If the value is explicit nil, the zero value for []StandaloneProfileSecurityGroupListDto will be returned
func (o *StandaloneProfileListDto) GetStandAloneProfileSecurityGroups() []StandaloneProfileSecurityGroupListDto {
	if o == nil {
		var ret []StandaloneProfileSecurityGroupListDto
		return ret
	}

	return o.StandAloneProfileSecurityGroups
}

// GetStandAloneProfileSecurityGroupsOk returns a tuple with the StandAloneProfileSecurityGroups field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StandaloneProfileListDto) GetStandAloneProfileSecurityGroupsOk() ([]StandaloneProfileSecurityGroupListDto, bool) {
	if o == nil || IsNil(o.StandAloneProfileSecurityGroups) {
		return nil, false
	}
	return o.StandAloneProfileSecurityGroups, true
}

// SetStandAloneProfileSecurityGroups sets field value
func (o *StandaloneProfileListDto) SetStandAloneProfileSecurityGroups(v []StandaloneProfileSecurityGroupListDto) {
	o.StandAloneProfileSecurityGroups = v
}

func (o StandaloneProfileListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StandaloneProfileListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name.Get()
	toSerialize["revision"] = o.Revision
	toSerialize["isLocked"] = o.IsLocked
	if o.StandAloneProfileSecurityGroups != nil {
		toSerialize["standAloneProfileSecurityGroups"] = o.StandAloneProfileSecurityGroups
	}
	return toSerialize, nil
}

func (o *StandaloneProfileListDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"revision",
		"isLocked",
		"standAloneProfileSecurityGroups",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStandaloneProfileListDto := _StandaloneProfileListDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStandaloneProfileListDto)

	if err != nil {
		return err
	}

	*o = StandaloneProfileListDto(varStandaloneProfileListDto)

	return err
}

type NullableStandaloneProfileListDto struct {
	value *StandaloneProfileListDto
	isSet bool
}

func (v NullableStandaloneProfileListDto) Get() *StandaloneProfileListDto {
	return v.value
}

func (v *NullableStandaloneProfileListDto) Set(val *StandaloneProfileListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableStandaloneProfileListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableStandaloneProfileListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStandaloneProfileListDto(val *StandaloneProfileListDto) *NullableStandaloneProfileListDto {
	return &NullableStandaloneProfileListDto{value: val, isSet: true}
}

func (v NullableStandaloneProfileListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStandaloneProfileListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


