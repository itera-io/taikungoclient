/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the CreateExecutorCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateExecutorCommand{}

// CreateExecutorCommand struct for CreateExecutorCommand
type CreateExecutorCommand struct {
	Name *string `json:"name,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	LocalCluster *bool `json:"localCluster,omitempty"`
	Continent *string `json:"continent,omitempty"`
	KubeConfig *string `json:"kubeConfig,omitempty"`
}

// NewCreateExecutorCommand instantiates a new CreateExecutorCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateExecutorCommand() *CreateExecutorCommand {
	this := CreateExecutorCommand{}
	return &this
}

// NewCreateExecutorCommandWithDefaults instantiates a new CreateExecutorCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateExecutorCommandWithDefaults() *CreateExecutorCommand {
	this := CreateExecutorCommand{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateExecutorCommand) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateExecutorCommand) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateExecutorCommand) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateExecutorCommand) SetName(v string) {
	o.Name = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *CreateExecutorCommand) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateExecutorCommand) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *CreateExecutorCommand) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *CreateExecutorCommand) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetLocalCluster returns the LocalCluster field value if set, zero value otherwise.
func (o *CreateExecutorCommand) GetLocalCluster() bool {
	if o == nil || IsNil(o.LocalCluster) {
		var ret bool
		return ret
	}
	return *o.LocalCluster
}

// GetLocalClusterOk returns a tuple with the LocalCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateExecutorCommand) GetLocalClusterOk() (*bool, bool) {
	if o == nil || IsNil(o.LocalCluster) {
		return nil, false
	}
	return o.LocalCluster, true
}

// HasLocalCluster returns a boolean if a field has been set.
func (o *CreateExecutorCommand) HasLocalCluster() bool {
	if o != nil && !IsNil(o.LocalCluster) {
		return true
	}

	return false
}

// SetLocalCluster gets a reference to the given bool and assigns it to the LocalCluster field.
func (o *CreateExecutorCommand) SetLocalCluster(v bool) {
	o.LocalCluster = &v
}

// GetContinent returns the Continent field value if set, zero value otherwise.
func (o *CreateExecutorCommand) GetContinent() string {
	if o == nil || IsNil(o.Continent) {
		var ret string
		return ret
	}
	return *o.Continent
}

// GetContinentOk returns a tuple with the Continent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateExecutorCommand) GetContinentOk() (*string, bool) {
	if o == nil || IsNil(o.Continent) {
		return nil, false
	}
	return o.Continent, true
}

// HasContinent returns a boolean if a field has been set.
func (o *CreateExecutorCommand) HasContinent() bool {
	if o != nil && !IsNil(o.Continent) {
		return true
	}

	return false
}

// SetContinent gets a reference to the given string and assigns it to the Continent field.
func (o *CreateExecutorCommand) SetContinent(v string) {
	o.Continent = &v
}

// GetKubeConfig returns the KubeConfig field value if set, zero value otherwise.
func (o *CreateExecutorCommand) GetKubeConfig() string {
	if o == nil || IsNil(o.KubeConfig) {
		var ret string
		return ret
	}
	return *o.KubeConfig
}

// GetKubeConfigOk returns a tuple with the KubeConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateExecutorCommand) GetKubeConfigOk() (*string, bool) {
	if o == nil || IsNil(o.KubeConfig) {
		return nil, false
	}
	return o.KubeConfig, true
}

// HasKubeConfig returns a boolean if a field has been set.
func (o *CreateExecutorCommand) HasKubeConfig() bool {
	if o != nil && !IsNil(o.KubeConfig) {
		return true
	}

	return false
}

// SetKubeConfig gets a reference to the given string and assigns it to the KubeConfig field.
func (o *CreateExecutorCommand) SetKubeConfig(v string) {
	o.KubeConfig = &v
}

func (o CreateExecutorCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateExecutorCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.LocalCluster) {
		toSerialize["localCluster"] = o.LocalCluster
	}
	if !IsNil(o.Continent) {
		toSerialize["continent"] = o.Continent
	}
	if !IsNil(o.KubeConfig) {
		toSerialize["kubeConfig"] = o.KubeConfig
	}
	return toSerialize, nil
}

type NullableCreateExecutorCommand struct {
	value *CreateExecutorCommand
	isSet bool
}

func (v NullableCreateExecutorCommand) Get() *CreateExecutorCommand {
	return v.value
}

func (v *NullableCreateExecutorCommand) Set(val *CreateExecutorCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateExecutorCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateExecutorCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateExecutorCommand(val *CreateExecutorCommand) *NullableCreateExecutorCommand {
	return &NullableCreateExecutorCommand{value: val, isSet: true}
}

func (v NullableCreateExecutorCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateExecutorCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


