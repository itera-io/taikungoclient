/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KubernetesDashboardDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubernetesDashboardDto{}

// KubernetesDashboardDto struct for KubernetesDashboardDto
type KubernetesDashboardDto struct {
	Pods []PodDto `json:"pods"`
	Nodes []NodeDto `json:"nodes"`
}

type _KubernetesDashboardDto KubernetesDashboardDto

// NewKubernetesDashboardDto instantiates a new KubernetesDashboardDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesDashboardDto(pods []PodDto, nodes []NodeDto) *KubernetesDashboardDto {
	this := KubernetesDashboardDto{}
	this.Pods = pods
	this.Nodes = nodes
	return &this
}

// NewKubernetesDashboardDtoWithDefaults instantiates a new KubernetesDashboardDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesDashboardDtoWithDefaults() *KubernetesDashboardDto {
	this := KubernetesDashboardDto{}
	return &this
}

// GetPods returns the Pods field value
// If the value is explicit nil, the zero value for []PodDto will be returned
func (o *KubernetesDashboardDto) GetPods() []PodDto {
	if o == nil {
		var ret []PodDto
		return ret
	}

	return o.Pods
}

// GetPodsOk returns a tuple with the Pods field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesDashboardDto) GetPodsOk() ([]PodDto, bool) {
	if o == nil || IsNil(o.Pods) {
		return nil, false
	}
	return o.Pods, true
}

// SetPods sets field value
func (o *KubernetesDashboardDto) SetPods(v []PodDto) {
	o.Pods = v
}

// GetNodes returns the Nodes field value
// If the value is explicit nil, the zero value for []NodeDto will be returned
func (o *KubernetesDashboardDto) GetNodes() []NodeDto {
	if o == nil {
		var ret []NodeDto
		return ret
	}

	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesDashboardDto) GetNodesOk() ([]NodeDto, bool) {
	if o == nil || IsNil(o.Nodes) {
		return nil, false
	}
	return o.Nodes, true
}

// SetNodes sets field value
func (o *KubernetesDashboardDto) SetNodes(v []NodeDto) {
	o.Nodes = v
}

func (o KubernetesDashboardDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubernetesDashboardDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Pods != nil {
		toSerialize["pods"] = o.Pods
	}
	if o.Nodes != nil {
		toSerialize["nodes"] = o.Nodes
	}
	return toSerialize, nil
}

func (o *KubernetesDashboardDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pods",
		"nodes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKubernetesDashboardDto := _KubernetesDashboardDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKubernetesDashboardDto)

	if err != nil {
		return err
	}

	*o = KubernetesDashboardDto(varKubernetesDashboardDto)

	return err
}

type NullableKubernetesDashboardDto struct {
	value *KubernetesDashboardDto
	isSet bool
}

func (v NullableKubernetesDashboardDto) Get() *KubernetesDashboardDto {
	return v.value
}

func (v *NullableKubernetesDashboardDto) Set(val *KubernetesDashboardDto) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesDashboardDto) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesDashboardDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesDashboardDto(val *KubernetesDashboardDto) *NullableKubernetesDashboardDto {
	return &NullableKubernetesDashboardDto{value: val, isSet: true}
}

func (v NullableKubernetesDashboardDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesDashboardDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


