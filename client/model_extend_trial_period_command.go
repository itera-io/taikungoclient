/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the ExtendTrialPeriodCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtendTrialPeriodCommand{}

// ExtendTrialPeriodCommand struct for ExtendTrialPeriodCommand
type ExtendTrialPeriodCommand struct {
	OrganizationId *int32 `json:"organizationId,omitempty"`
	Days *int32 `json:"days,omitempty"`
}

// NewExtendTrialPeriodCommand instantiates a new ExtendTrialPeriodCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtendTrialPeriodCommand() *ExtendTrialPeriodCommand {
	this := ExtendTrialPeriodCommand{}
	return &this
}

// NewExtendTrialPeriodCommandWithDefaults instantiates a new ExtendTrialPeriodCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtendTrialPeriodCommandWithDefaults() *ExtendTrialPeriodCommand {
	this := ExtendTrialPeriodCommand{}
	return &this
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ExtendTrialPeriodCommand) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendTrialPeriodCommand) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ExtendTrialPeriodCommand) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *ExtendTrialPeriodCommand) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *ExtendTrialPeriodCommand) GetDays() int32 {
	if o == nil || IsNil(o.Days) {
		var ret int32
		return ret
	}
	return *o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendTrialPeriodCommand) GetDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.Days) {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *ExtendTrialPeriodCommand) HasDays() bool {
	if o != nil && !IsNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given int32 and assigns it to the Days field.
func (o *ExtendTrialPeriodCommand) SetDays(v int32) {
	o.Days = &v
}

func (o ExtendTrialPeriodCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtendTrialPeriodCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.Days) {
		toSerialize["days"] = o.Days
	}
	return toSerialize, nil
}

type NullableExtendTrialPeriodCommand struct {
	value *ExtendTrialPeriodCommand
	isSet bool
}

func (v NullableExtendTrialPeriodCommand) Get() *ExtendTrialPeriodCommand {
	return v.value
}

func (v *NullableExtendTrialPeriodCommand) Set(val *ExtendTrialPeriodCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableExtendTrialPeriodCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableExtendTrialPeriodCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtendTrialPeriodCommand(val *ExtendTrialPeriodCommand) *NullableExtendTrialPeriodCommand {
	return &NullableExtendTrialPeriodCommand{value: val, isSet: true}
}

func (v NullableExtendTrialPeriodCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtendTrialPeriodCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


