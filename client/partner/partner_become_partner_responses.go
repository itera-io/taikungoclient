// Code generated by go-swagger; DO NOT EDIT.

package partner

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// PartnerBecomePartnerReader is a Reader for the PartnerBecomePartner structure.
type PartnerBecomePartnerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PartnerBecomePartnerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPartnerBecomePartnerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPartnerBecomePartnerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPartnerBecomePartnerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPartnerBecomePartnerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPartnerBecomePartnerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPartnerBecomePartnerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPartnerBecomePartnerOK creates a PartnerBecomePartnerOK with default headers values
func NewPartnerBecomePartnerOK() *PartnerBecomePartnerOK {
	return &PartnerBecomePartnerOK{}
}

/*
PartnerBecomePartnerOK describes a response with status code 200, with default header values.

Success
*/
type PartnerBecomePartnerOK struct {
	Payload models.Unit
}

// IsSuccess returns true when this partner become partner o k response has a 2xx status code
func (o *PartnerBecomePartnerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this partner become partner o k response has a 3xx status code
func (o *PartnerBecomePartnerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this partner become partner o k response has a 4xx status code
func (o *PartnerBecomePartnerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this partner become partner o k response has a 5xx status code
func (o *PartnerBecomePartnerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this partner become partner o k response a status code equal to that given
func (o *PartnerBecomePartnerOK) IsCode(code int) bool {
	return code == 200
}

func (o *PartnerBecomePartnerOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Partner/become-a-partner][%d] partnerBecomePartnerOK  %+v", 200, o.Payload)
}

func (o *PartnerBecomePartnerOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Partner/become-a-partner][%d] partnerBecomePartnerOK  %+v", 200, o.Payload)
}

func (o *PartnerBecomePartnerOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *PartnerBecomePartnerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPartnerBecomePartnerBadRequest creates a PartnerBecomePartnerBadRequest with default headers values
func NewPartnerBecomePartnerBadRequest() *PartnerBecomePartnerBadRequest {
	return &PartnerBecomePartnerBadRequest{}
}

/*
PartnerBecomePartnerBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PartnerBecomePartnerBadRequest struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this partner become partner bad request response has a 2xx status code
func (o *PartnerBecomePartnerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this partner become partner bad request response has a 3xx status code
func (o *PartnerBecomePartnerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this partner become partner bad request response has a 4xx status code
func (o *PartnerBecomePartnerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this partner become partner bad request response has a 5xx status code
func (o *PartnerBecomePartnerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this partner become partner bad request response a status code equal to that given
func (o *PartnerBecomePartnerBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PartnerBecomePartnerBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Partner/become-a-partner][%d] partnerBecomePartnerBadRequest  %+v", 400, o.Payload)
}

func (o *PartnerBecomePartnerBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Partner/become-a-partner][%d] partnerBecomePartnerBadRequest  %+v", 400, o.Payload)
}

func (o *PartnerBecomePartnerBadRequest) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *PartnerBecomePartnerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPartnerBecomePartnerUnauthorized creates a PartnerBecomePartnerUnauthorized with default headers values
func NewPartnerBecomePartnerUnauthorized() *PartnerBecomePartnerUnauthorized {
	return &PartnerBecomePartnerUnauthorized{}
}

/*
PartnerBecomePartnerUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PartnerBecomePartnerUnauthorized struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this partner become partner unauthorized response has a 2xx status code
func (o *PartnerBecomePartnerUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this partner become partner unauthorized response has a 3xx status code
func (o *PartnerBecomePartnerUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this partner become partner unauthorized response has a 4xx status code
func (o *PartnerBecomePartnerUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this partner become partner unauthorized response has a 5xx status code
func (o *PartnerBecomePartnerUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this partner become partner unauthorized response a status code equal to that given
func (o *PartnerBecomePartnerUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PartnerBecomePartnerUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Partner/become-a-partner][%d] partnerBecomePartnerUnauthorized  %+v", 401, o.Payload)
}

func (o *PartnerBecomePartnerUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Partner/become-a-partner][%d] partnerBecomePartnerUnauthorized  %+v", 401, o.Payload)
}

func (o *PartnerBecomePartnerUnauthorized) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *PartnerBecomePartnerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPartnerBecomePartnerForbidden creates a PartnerBecomePartnerForbidden with default headers values
func NewPartnerBecomePartnerForbidden() *PartnerBecomePartnerForbidden {
	return &PartnerBecomePartnerForbidden{}
}

/*
PartnerBecomePartnerForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PartnerBecomePartnerForbidden struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this partner become partner forbidden response has a 2xx status code
func (o *PartnerBecomePartnerForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this partner become partner forbidden response has a 3xx status code
func (o *PartnerBecomePartnerForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this partner become partner forbidden response has a 4xx status code
func (o *PartnerBecomePartnerForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this partner become partner forbidden response has a 5xx status code
func (o *PartnerBecomePartnerForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this partner become partner forbidden response a status code equal to that given
func (o *PartnerBecomePartnerForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PartnerBecomePartnerForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Partner/become-a-partner][%d] partnerBecomePartnerForbidden  %+v", 403, o.Payload)
}

func (o *PartnerBecomePartnerForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Partner/become-a-partner][%d] partnerBecomePartnerForbidden  %+v", 403, o.Payload)
}

func (o *PartnerBecomePartnerForbidden) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *PartnerBecomePartnerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPartnerBecomePartnerNotFound creates a PartnerBecomePartnerNotFound with default headers values
func NewPartnerBecomePartnerNotFound() *PartnerBecomePartnerNotFound {
	return &PartnerBecomePartnerNotFound{}
}

/*
PartnerBecomePartnerNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PartnerBecomePartnerNotFound struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this partner become partner not found response has a 2xx status code
func (o *PartnerBecomePartnerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this partner become partner not found response has a 3xx status code
func (o *PartnerBecomePartnerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this partner become partner not found response has a 4xx status code
func (o *PartnerBecomePartnerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this partner become partner not found response has a 5xx status code
func (o *PartnerBecomePartnerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this partner become partner not found response a status code equal to that given
func (o *PartnerBecomePartnerNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PartnerBecomePartnerNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Partner/become-a-partner][%d] partnerBecomePartnerNotFound  %+v", 404, o.Payload)
}

func (o *PartnerBecomePartnerNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Partner/become-a-partner][%d] partnerBecomePartnerNotFound  %+v", 404, o.Payload)
}

func (o *PartnerBecomePartnerNotFound) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *PartnerBecomePartnerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPartnerBecomePartnerInternalServerError creates a PartnerBecomePartnerInternalServerError with default headers values
func NewPartnerBecomePartnerInternalServerError() *PartnerBecomePartnerInternalServerError {
	return &PartnerBecomePartnerInternalServerError{}
}

/*
PartnerBecomePartnerInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type PartnerBecomePartnerInternalServerError struct {
}

// IsSuccess returns true when this partner become partner internal server error response has a 2xx status code
func (o *PartnerBecomePartnerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this partner become partner internal server error response has a 3xx status code
func (o *PartnerBecomePartnerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this partner become partner internal server error response has a 4xx status code
func (o *PartnerBecomePartnerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this partner become partner internal server error response has a 5xx status code
func (o *PartnerBecomePartnerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this partner become partner internal server error response a status code equal to that given
func (o *PartnerBecomePartnerInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PartnerBecomePartnerInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Partner/become-a-partner][%d] partnerBecomePartnerInternalServerError ", 500)
}

func (o *PartnerBecomePartnerInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Partner/become-a-partner][%d] partnerBecomePartnerInternalServerError ", 500)
}

func (o *PartnerBecomePartnerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
