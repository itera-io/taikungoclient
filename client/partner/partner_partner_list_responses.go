// Code generated by go-swagger; DO NOT EDIT.

package partner

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// PartnerPartnerListReader is a Reader for the PartnerPartnerList structure.
type PartnerPartnerListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PartnerPartnerListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPartnerPartnerListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPartnerPartnerListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPartnerPartnerListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPartnerPartnerListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPartnerPartnerListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPartnerPartnerListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPartnerPartnerListOK creates a PartnerPartnerListOK with default headers values
func NewPartnerPartnerListOK() *PartnerPartnerListOK {
	return &PartnerPartnerListOK{}
}

/*
PartnerPartnerListOK describes a response with status code 200, with default header values.

Success
*/
type PartnerPartnerListOK struct {
	Payload []*models.PartnerEntity
}

// IsSuccess returns true when this partner partner list o k response has a 2xx status code
func (o *PartnerPartnerListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this partner partner list o k response has a 3xx status code
func (o *PartnerPartnerListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this partner partner list o k response has a 4xx status code
func (o *PartnerPartnerListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this partner partner list o k response has a 5xx status code
func (o *PartnerPartnerListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this partner partner list o k response a status code equal to that given
func (o *PartnerPartnerListOK) IsCode(code int) bool {
	return code == 200
}

func (o *PartnerPartnerListOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Partner/list][%d] partnerPartnerListOK  %+v", 200, o.Payload)
}

func (o *PartnerPartnerListOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Partner/list][%d] partnerPartnerListOK  %+v", 200, o.Payload)
}

func (o *PartnerPartnerListOK) GetPayload() []*models.PartnerEntity {
	return o.Payload
}

func (o *PartnerPartnerListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPartnerPartnerListBadRequest creates a PartnerPartnerListBadRequest with default headers values
func NewPartnerPartnerListBadRequest() *PartnerPartnerListBadRequest {
	return &PartnerPartnerListBadRequest{}
}

/*
PartnerPartnerListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PartnerPartnerListBadRequest struct {
	Payload []*models.Error
}

// IsSuccess returns true when this partner partner list bad request response has a 2xx status code
func (o *PartnerPartnerListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this partner partner list bad request response has a 3xx status code
func (o *PartnerPartnerListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this partner partner list bad request response has a 4xx status code
func (o *PartnerPartnerListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this partner partner list bad request response has a 5xx status code
func (o *PartnerPartnerListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this partner partner list bad request response a status code equal to that given
func (o *PartnerPartnerListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PartnerPartnerListBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Partner/list][%d] partnerPartnerListBadRequest  %+v", 400, o.Payload)
}

func (o *PartnerPartnerListBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Partner/list][%d] partnerPartnerListBadRequest  %+v", 400, o.Payload)
}

func (o *PartnerPartnerListBadRequest) GetPayload() []*models.Error {
	return o.Payload
}

func (o *PartnerPartnerListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPartnerPartnerListUnauthorized creates a PartnerPartnerListUnauthorized with default headers values
func NewPartnerPartnerListUnauthorized() *PartnerPartnerListUnauthorized {
	return &PartnerPartnerListUnauthorized{}
}

/*
PartnerPartnerListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PartnerPartnerListUnauthorized struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this partner partner list unauthorized response has a 2xx status code
func (o *PartnerPartnerListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this partner partner list unauthorized response has a 3xx status code
func (o *PartnerPartnerListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this partner partner list unauthorized response has a 4xx status code
func (o *PartnerPartnerListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this partner partner list unauthorized response has a 5xx status code
func (o *PartnerPartnerListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this partner partner list unauthorized response a status code equal to that given
func (o *PartnerPartnerListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PartnerPartnerListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Partner/list][%d] partnerPartnerListUnauthorized  %+v", 401, o.Payload)
}

func (o *PartnerPartnerListUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Partner/list][%d] partnerPartnerListUnauthorized  %+v", 401, o.Payload)
}

func (o *PartnerPartnerListUnauthorized) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *PartnerPartnerListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPartnerPartnerListForbidden creates a PartnerPartnerListForbidden with default headers values
func NewPartnerPartnerListForbidden() *PartnerPartnerListForbidden {
	return &PartnerPartnerListForbidden{}
}

/*
PartnerPartnerListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PartnerPartnerListForbidden struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this partner partner list forbidden response has a 2xx status code
func (o *PartnerPartnerListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this partner partner list forbidden response has a 3xx status code
func (o *PartnerPartnerListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this partner partner list forbidden response has a 4xx status code
func (o *PartnerPartnerListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this partner partner list forbidden response has a 5xx status code
func (o *PartnerPartnerListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this partner partner list forbidden response a status code equal to that given
func (o *PartnerPartnerListForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PartnerPartnerListForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Partner/list][%d] partnerPartnerListForbidden  %+v", 403, o.Payload)
}

func (o *PartnerPartnerListForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Partner/list][%d] partnerPartnerListForbidden  %+v", 403, o.Payload)
}

func (o *PartnerPartnerListForbidden) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *PartnerPartnerListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPartnerPartnerListNotFound creates a PartnerPartnerListNotFound with default headers values
func NewPartnerPartnerListNotFound() *PartnerPartnerListNotFound {
	return &PartnerPartnerListNotFound{}
}

/*
PartnerPartnerListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PartnerPartnerListNotFound struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this partner partner list not found response has a 2xx status code
func (o *PartnerPartnerListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this partner partner list not found response has a 3xx status code
func (o *PartnerPartnerListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this partner partner list not found response has a 4xx status code
func (o *PartnerPartnerListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this partner partner list not found response has a 5xx status code
func (o *PartnerPartnerListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this partner partner list not found response a status code equal to that given
func (o *PartnerPartnerListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PartnerPartnerListNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Partner/list][%d] partnerPartnerListNotFound  %+v", 404, o.Payload)
}

func (o *PartnerPartnerListNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Partner/list][%d] partnerPartnerListNotFound  %+v", 404, o.Payload)
}

func (o *PartnerPartnerListNotFound) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *PartnerPartnerListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPartnerPartnerListInternalServerError creates a PartnerPartnerListInternalServerError with default headers values
func NewPartnerPartnerListInternalServerError() *PartnerPartnerListInternalServerError {
	return &PartnerPartnerListInternalServerError{}
}

/*
PartnerPartnerListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type PartnerPartnerListInternalServerError struct {
}

// IsSuccess returns true when this partner partner list internal server error response has a 2xx status code
func (o *PartnerPartnerListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this partner partner list internal server error response has a 3xx status code
func (o *PartnerPartnerListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this partner partner list internal server error response has a 4xx status code
func (o *PartnerPartnerListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this partner partner list internal server error response has a 5xx status code
func (o *PartnerPartnerListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this partner partner list internal server error response a status code equal to that given
func (o *PartnerPartnerListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PartnerPartnerListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Partner/list][%d] partnerPartnerListInternalServerError ", 500)
}

func (o *PartnerPartnerListInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Partner/list][%d] partnerPartnerListInternalServerError ", 500)
}

func (o *PartnerPartnerListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
