/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the PrometheusDashboardDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrometheusDashboardDto{}

// PrometheusDashboardDto struct for PrometheusDashboardDto
type PrometheusDashboardDto struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	ExpressionDecoded *string `json:"expressionDecoded,omitempty"`
	ExpressionEncoded *string `json:"expressionEncoded,omitempty"`
	Description *string `json:"description,omitempty"`
	IsReadonly *bool `json:"isReadonly,omitempty"`
}

// NewPrometheusDashboardDto instantiates a new PrometheusDashboardDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrometheusDashboardDto() *PrometheusDashboardDto {
	this := PrometheusDashboardDto{}
	return &this
}

// NewPrometheusDashboardDtoWithDefaults instantiates a new PrometheusDashboardDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrometheusDashboardDtoWithDefaults() *PrometheusDashboardDto {
	this := PrometheusDashboardDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PrometheusDashboardDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrometheusDashboardDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PrometheusDashboardDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PrometheusDashboardDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PrometheusDashboardDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrometheusDashboardDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PrometheusDashboardDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PrometheusDashboardDto) SetName(v string) {
	o.Name = &v
}

// GetExpressionDecoded returns the ExpressionDecoded field value if set, zero value otherwise.
func (o *PrometheusDashboardDto) GetExpressionDecoded() string {
	if o == nil || IsNil(o.ExpressionDecoded) {
		var ret string
		return ret
	}
	return *o.ExpressionDecoded
}

// GetExpressionDecodedOk returns a tuple with the ExpressionDecoded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrometheusDashboardDto) GetExpressionDecodedOk() (*string, bool) {
	if o == nil || IsNil(o.ExpressionDecoded) {
		return nil, false
	}
	return o.ExpressionDecoded, true
}

// HasExpressionDecoded returns a boolean if a field has been set.
func (o *PrometheusDashboardDto) HasExpressionDecoded() bool {
	if o != nil && !IsNil(o.ExpressionDecoded) {
		return true
	}

	return false
}

// SetExpressionDecoded gets a reference to the given string and assigns it to the ExpressionDecoded field.
func (o *PrometheusDashboardDto) SetExpressionDecoded(v string) {
	o.ExpressionDecoded = &v
}

// GetExpressionEncoded returns the ExpressionEncoded field value if set, zero value otherwise.
func (o *PrometheusDashboardDto) GetExpressionEncoded() string {
	if o == nil || IsNil(o.ExpressionEncoded) {
		var ret string
		return ret
	}
	return *o.ExpressionEncoded
}

// GetExpressionEncodedOk returns a tuple with the ExpressionEncoded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrometheusDashboardDto) GetExpressionEncodedOk() (*string, bool) {
	if o == nil || IsNil(o.ExpressionEncoded) {
		return nil, false
	}
	return o.ExpressionEncoded, true
}

// HasExpressionEncoded returns a boolean if a field has been set.
func (o *PrometheusDashboardDto) HasExpressionEncoded() bool {
	if o != nil && !IsNil(o.ExpressionEncoded) {
		return true
	}

	return false
}

// SetExpressionEncoded gets a reference to the given string and assigns it to the ExpressionEncoded field.
func (o *PrometheusDashboardDto) SetExpressionEncoded(v string) {
	o.ExpressionEncoded = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PrometheusDashboardDto) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrometheusDashboardDto) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PrometheusDashboardDto) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PrometheusDashboardDto) SetDescription(v string) {
	o.Description = &v
}

// GetIsReadonly returns the IsReadonly field value if set, zero value otherwise.
func (o *PrometheusDashboardDto) GetIsReadonly() bool {
	if o == nil || IsNil(o.IsReadonly) {
		var ret bool
		return ret
	}
	return *o.IsReadonly
}

// GetIsReadonlyOk returns a tuple with the IsReadonly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrometheusDashboardDto) GetIsReadonlyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsReadonly) {
		return nil, false
	}
	return o.IsReadonly, true
}

// HasIsReadonly returns a boolean if a field has been set.
func (o *PrometheusDashboardDto) HasIsReadonly() bool {
	if o != nil && !IsNil(o.IsReadonly) {
		return true
	}

	return false
}

// SetIsReadonly gets a reference to the given bool and assigns it to the IsReadonly field.
func (o *PrometheusDashboardDto) SetIsReadonly(v bool) {
	o.IsReadonly = &v
}

func (o PrometheusDashboardDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrometheusDashboardDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ExpressionDecoded) {
		toSerialize["expressionDecoded"] = o.ExpressionDecoded
	}
	if !IsNil(o.ExpressionEncoded) {
		toSerialize["expressionEncoded"] = o.ExpressionEncoded
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.IsReadonly) {
		toSerialize["isReadonly"] = o.IsReadonly
	}
	return toSerialize, nil
}

type NullablePrometheusDashboardDto struct {
	value *PrometheusDashboardDto
	isSet bool
}

func (v NullablePrometheusDashboardDto) Get() *PrometheusDashboardDto {
	return v.value
}

func (v *NullablePrometheusDashboardDto) Set(val *PrometheusDashboardDto) {
	v.value = val
	v.isSet = true
}

func (v NullablePrometheusDashboardDto) IsSet() bool {
	return v.isSet
}

func (v *NullablePrometheusDashboardDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrometheusDashboardDto(val *PrometheusDashboardDto) *NullablePrometheusDashboardDto {
	return &NullablePrometheusDashboardDto{value: val, isSet: true}
}

func (v NullablePrometheusDashboardDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrometheusDashboardDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


