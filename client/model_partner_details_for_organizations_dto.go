/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the PartnerDetailsForOrganizationsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PartnerDetailsForOrganizationsDto{}

// PartnerDetailsForOrganizationsDto struct for PartnerDetailsForOrganizationsDto
type PartnerDetailsForOrganizationsDto struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Link *string `json:"link,omitempty"`
	Domain *string `json:"domain,omitempty"`
	Logo *string `json:"logo,omitempty"`
}

// NewPartnerDetailsForOrganizationsDto instantiates a new PartnerDetailsForOrganizationsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartnerDetailsForOrganizationsDto() *PartnerDetailsForOrganizationsDto {
	this := PartnerDetailsForOrganizationsDto{}
	return &this
}

// NewPartnerDetailsForOrganizationsDtoWithDefaults instantiates a new PartnerDetailsForOrganizationsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartnerDetailsForOrganizationsDtoWithDefaults() *PartnerDetailsForOrganizationsDto {
	this := PartnerDetailsForOrganizationsDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PartnerDetailsForOrganizationsDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsForOrganizationsDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PartnerDetailsForOrganizationsDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PartnerDetailsForOrganizationsDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PartnerDetailsForOrganizationsDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsForOrganizationsDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PartnerDetailsForOrganizationsDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PartnerDetailsForOrganizationsDto) SetName(v string) {
	o.Name = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *PartnerDetailsForOrganizationsDto) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsForOrganizationsDto) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *PartnerDetailsForOrganizationsDto) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *PartnerDetailsForOrganizationsDto) SetLink(v string) {
	o.Link = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *PartnerDetailsForOrganizationsDto) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsForOrganizationsDto) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *PartnerDetailsForOrganizationsDto) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *PartnerDetailsForOrganizationsDto) SetDomain(v string) {
	o.Domain = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *PartnerDetailsForOrganizationsDto) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsForOrganizationsDto) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *PartnerDetailsForOrganizationsDto) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *PartnerDetailsForOrganizationsDto) SetLogo(v string) {
	o.Logo = &v
}

func (o PartnerDetailsForOrganizationsDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PartnerDetailsForOrganizationsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	return toSerialize, nil
}

type NullablePartnerDetailsForOrganizationsDto struct {
	value *PartnerDetailsForOrganizationsDto
	isSet bool
}

func (v NullablePartnerDetailsForOrganizationsDto) Get() *PartnerDetailsForOrganizationsDto {
	return v.value
}

func (v *NullablePartnerDetailsForOrganizationsDto) Set(val *PartnerDetailsForOrganizationsDto) {
	v.value = val
	v.isSet = true
}

func (v NullablePartnerDetailsForOrganizationsDto) IsSet() bool {
	return v.isSet
}

func (v *NullablePartnerDetailsForOrganizationsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartnerDetailsForOrganizationsDto(val *PartnerDetailsForOrganizationsDto) *NullablePartnerDetailsForOrganizationsDto {
	return &NullablePartnerDetailsForOrganizationsDto{value: val, isSet: true}
}

func (v NullablePartnerDetailsForOrganizationsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartnerDetailsForOrganizationsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


