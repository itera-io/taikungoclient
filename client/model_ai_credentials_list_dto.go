/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AiCredentialsListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AiCredentialsListDto{}

// AiCredentialsListDto struct for AiCredentialsListDto
type AiCredentialsListDto struct {
	Id int32 `json:"id"`
	Url NullableString `json:"url"`
	Name NullableString `json:"name"`
	Type AiType `json:"type"`
	OrganizationId NullableInt32 `json:"organizationId"`
	OrganizationName NullableString `json:"organizationName"`
	Projects []CommonDropdownDto `json:"projects"`
	IsDefault bool `json:"isDefault"`
}

type _AiCredentialsListDto AiCredentialsListDto

// NewAiCredentialsListDto instantiates a new AiCredentialsListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAiCredentialsListDto(id int32, url NullableString, name NullableString, type_ AiType, organizationId NullableInt32, organizationName NullableString, projects []CommonDropdownDto, isDefault bool) *AiCredentialsListDto {
	this := AiCredentialsListDto{}
	this.Id = id
	this.Url = url
	this.Name = name
	this.Type = type_
	this.OrganizationId = organizationId
	this.OrganizationName = organizationName
	this.Projects = projects
	this.IsDefault = isDefault
	return &this
}

// NewAiCredentialsListDtoWithDefaults instantiates a new AiCredentialsListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAiCredentialsListDtoWithDefaults() *AiCredentialsListDto {
	this := AiCredentialsListDto{}
	return &this
}

// GetId returns the Id field value
func (o *AiCredentialsListDto) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AiCredentialsListDto) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AiCredentialsListDto) SetId(v int32) {
	o.Id = v
}

// GetUrl returns the Url field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AiCredentialsListDto) GetUrl() string {
	if o == nil || o.Url.Get() == nil {
		var ret string
		return ret
	}

	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AiCredentialsListDto) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// SetUrl sets field value
func (o *AiCredentialsListDto) SetUrl(v string) {
	o.Url.Set(&v)
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AiCredentialsListDto) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AiCredentialsListDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *AiCredentialsListDto) SetName(v string) {
	o.Name.Set(&v)
}

// GetType returns the Type field value
func (o *AiCredentialsListDto) GetType() AiType {
	if o == nil {
		var ret AiType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AiCredentialsListDto) GetTypeOk() (*AiType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AiCredentialsListDto) SetType(v AiType) {
	o.Type = v
}

// GetOrganizationId returns the OrganizationId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *AiCredentialsListDto) GetOrganizationId() int32 {
	if o == nil || o.OrganizationId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.OrganizationId.Get()
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AiCredentialsListDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationId.Get(), o.OrganizationId.IsSet()
}

// SetOrganizationId sets field value
func (o *AiCredentialsListDto) SetOrganizationId(v int32) {
	o.OrganizationId.Set(&v)
}

// GetOrganizationName returns the OrganizationName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AiCredentialsListDto) GetOrganizationName() string {
	if o == nil || o.OrganizationName.Get() == nil {
		var ret string
		return ret
	}

	return *o.OrganizationName.Get()
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AiCredentialsListDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationName.Get(), o.OrganizationName.IsSet()
}

// SetOrganizationName sets field value
func (o *AiCredentialsListDto) SetOrganizationName(v string) {
	o.OrganizationName.Set(&v)
}

// GetProjects returns the Projects field value
// If the value is explicit nil, the zero value for []CommonDropdownDto will be returned
func (o *AiCredentialsListDto) GetProjects() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}

	return o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AiCredentialsListDto) GetProjectsOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.Projects) {
		return nil, false
	}
	return o.Projects, true
}

// SetProjects sets field value
func (o *AiCredentialsListDto) SetProjects(v []CommonDropdownDto) {
	o.Projects = v
}

// GetIsDefault returns the IsDefault field value
func (o *AiCredentialsListDto) GetIsDefault() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value
// and a boolean to check if the value has been set.
func (o *AiCredentialsListDto) GetIsDefaultOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDefault, true
}

// SetIsDefault sets field value
func (o *AiCredentialsListDto) SetIsDefault(v bool) {
	o.IsDefault = v
}

func (o AiCredentialsListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AiCredentialsListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["url"] = o.Url.Get()
	toSerialize["name"] = o.Name.Get()
	toSerialize["type"] = o.Type
	toSerialize["organizationId"] = o.OrganizationId.Get()
	toSerialize["organizationName"] = o.OrganizationName.Get()
	if o.Projects != nil {
		toSerialize["projects"] = o.Projects
	}
	toSerialize["isDefault"] = o.IsDefault
	return toSerialize, nil
}

func (o *AiCredentialsListDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"url",
		"name",
		"type",
		"organizationId",
		"organizationName",
		"projects",
		"isDefault",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAiCredentialsListDto := _AiCredentialsListDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAiCredentialsListDto)

	if err != nil {
		return err
	}

	*o = AiCredentialsListDto(varAiCredentialsListDto)

	return err
}

type NullableAiCredentialsListDto struct {
	value *AiCredentialsListDto
	isSet bool
}

func (v NullableAiCredentialsListDto) Get() *AiCredentialsListDto {
	return v.value
}

func (v *NullableAiCredentialsListDto) Set(val *AiCredentialsListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAiCredentialsListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAiCredentialsListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAiCredentialsListDto(val *AiCredentialsListDto) *NullableAiCredentialsListDto {
	return &NullableAiCredentialsListDto{value: val, isSet: true}
}

func (v NullableAiCredentialsListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAiCredentialsListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


