/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the ProjectDetailsForServersDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectDetailsForServersDto{}

// ProjectDetailsForServersDto struct for ProjectDetailsForServersDto
type ProjectDetailsForServersDto struct {
	AlertsTotalCount *int32 `json:"alertsTotalCount,omitempty"`
	Worker *int32 `json:"worker,omitempty"`
	Bastion *int32 `json:"bastion,omitempty"`
	ProjectStatus *ProjectStatus `json:"projectStatus,omitempty"`
	ProjectName *string `json:"projectName,omitempty"`
	AccessIp *string `json:"accessIp,omitempty"`
	ProjectId *int32 `json:"projectId,omitempty"`
	MasterReady *int32 `json:"masterReady,omitempty"`
	CloudType *CloudType `json:"cloudType,omitempty"`
	CloudName *string `json:"cloudName,omitempty"`
	CloudId *int32 `json:"cloudId,omitempty"`
	QuotaId *int32 `json:"quotaId,omitempty"`
	OrganizationName *string `json:"organizationName,omitempty"`
	OrganizationId *int32 `json:"organizationId,omitempty"`
	KubernetesCurrentVersion *string `json:"kubernetesCurrentVersion,omitempty"`
	IsBackupEnabled *bool `json:"isBackupEnabled,omitempty"`
	AiEnabled *bool `json:"aiEnabled,omitempty"`
	IsLocked *bool `json:"isLocked,omitempty"`
	IsAutoUpgrade *bool `json:"isAutoUpgrade,omitempty"`
	IsMonitoringEnabled *bool `json:"isMonitoringEnabled,omitempty"`
	IsOpaEnabled *bool `json:"isOpaEnabled,omitempty"`
	HasKubeConfigFile *bool `json:"hasKubeConfigFile,omitempty"`
	HasSelectedFlavors *bool `json:"hasSelectedFlavors,omitempty"`
	IsMaintenanceModeEnabled *bool `json:"isMaintenanceModeEnabled,omitempty"`
	IsProjectMaintenanceModeEnabled *bool `json:"isProjectMaintenanceModeEnabled,omitempty"`
	IsDeprecated *bool `json:"isDeprecated,omitempty"`
	CpuLimit *int64 `json:"cpuLimit,omitempty"`
	RamLimit *int64 `json:"ramLimit,omitempty"`
	DiskSizeLimit *int64 `json:"diskSizeLimit,omitempty"`
	UsedCpu *int64 `json:"usedCpu,omitempty"`
	UsedRam *int64 `json:"usedRam,omitempty"`
	UsedDiskSize *int64 `json:"usedDiskSize,omitempty"`
	VmCpuLimit *int64 `json:"vmCpuLimit,omitempty"`
	VmRamLimit *int64 `json:"vmRamLimit,omitempty"`
	VmVolumeSizeLimit *int64 `json:"vmVolumeSizeLimit,omitempty"`
	VmUsedCpu *int64 `json:"vmUsedCpu,omitempty"`
	VmUsedRam *int64 `json:"vmUsedRam,omitempty"`
	VmUsedVolumeSize *int64 `json:"vmUsedVolumeSize,omitempty"`
	AccessProfileName *string `json:"accessProfileName,omitempty"`
	AccessProfileId NullableInt32 `json:"accessProfileId,omitempty"`
	KubernetesProfileName *string `json:"kubernetesProfileName,omitempty"`
	KubernetesProfileId NullableInt32 `json:"kubernetesProfileId,omitempty"`
	AlertingProfileName *string `json:"alertingProfileName,omitempty"`
	ProjectHealth *ProjectHealth `json:"projectHealth,omitempty"`
	AlertingProfileId NullableInt32 `json:"alertingProfileId,omitempty"`
	S3CredentialId NullableInt32 `json:"s3CredentialId,omitempty"`
	AiCredentialId NullableInt32 `json:"aiCredentialId,omitempty"`
	ExpiredAt *string `json:"expiredAt,omitempty"`
	CertificationExpiredAt *string `json:"certificationExpiredAt,omitempty"`
	OpaProfileId NullableInt32 `json:"opaProfileId,omitempty"`
	OpaProfileName *string `json:"opaProfileName,omitempty"`
	AllowFullSpotKubernetes *bool `json:"allowFullSpotKubernetes,omitempty"`
	AllowSpotWorkers *bool `json:"allowSpotWorkers,omitempty"`
	AllowSpotVMs *bool `json:"allowSpotVMs,omitempty"`
	TotalHourlyCost *float64 `json:"totalHourlyCost,omitempty"`
	AutoscalingGroupName *string `json:"autoscalingGroupName,omitempty"`
	MinSize NullableInt32 `json:"minSize,omitempty"`
	MaxSize NullableInt32 `json:"maxSize,omitempty"`
	DiskSize NullableFloat64 `json:"diskSize,omitempty"`
	Flavor *string `json:"flavor,omitempty"`
	SpotEnabled NullableBool `json:"spotEnabled,omitempty"`
	IsAutoscalingEnabled *bool `json:"isAutoscalingEnabled,omitempty"`
	IsAutoscalingSpotEnabled *bool `json:"isAutoscalingSpotEnabled,omitempty"`
	HasNfsServer *bool `json:"hasNfsServer,omitempty"`
	WasmEnabled *bool `json:"wasmEnabled,omitempty"`
	AvailabilityZones []string `json:"availabilityZones,omitempty"`
	Hypervisors []string `json:"hypervisors,omitempty"`
	ProxmoxStorage *ProxmoxStorage `json:"proxmoxStorage,omitempty"`
	IsDrsEnabled *bool `json:"isDrsEnabled,omitempty"`
	MaxSpotPrice NullableFloat64 `json:"maxSpotPrice,omitempty"`
}

// NewProjectDetailsForServersDto instantiates a new ProjectDetailsForServersDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectDetailsForServersDto() *ProjectDetailsForServersDto {
	this := ProjectDetailsForServersDto{}
	return &this
}

// NewProjectDetailsForServersDtoWithDefaults instantiates a new ProjectDetailsForServersDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectDetailsForServersDtoWithDefaults() *ProjectDetailsForServersDto {
	this := ProjectDetailsForServersDto{}
	return &this
}

// GetAlertsTotalCount returns the AlertsTotalCount field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetAlertsTotalCount() int32 {
	if o == nil || IsNil(o.AlertsTotalCount) {
		var ret int32
		return ret
	}
	return *o.AlertsTotalCount
}

// GetAlertsTotalCountOk returns a tuple with the AlertsTotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetAlertsTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AlertsTotalCount) {
		return nil, false
	}
	return o.AlertsTotalCount, true
}

// HasAlertsTotalCount returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasAlertsTotalCount() bool {
	if o != nil && !IsNil(o.AlertsTotalCount) {
		return true
	}

	return false
}

// SetAlertsTotalCount gets a reference to the given int32 and assigns it to the AlertsTotalCount field.
func (o *ProjectDetailsForServersDto) SetAlertsTotalCount(v int32) {
	o.AlertsTotalCount = &v
}

// GetWorker returns the Worker field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetWorker() int32 {
	if o == nil || IsNil(o.Worker) {
		var ret int32
		return ret
	}
	return *o.Worker
}

// GetWorkerOk returns a tuple with the Worker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetWorkerOk() (*int32, bool) {
	if o == nil || IsNil(o.Worker) {
		return nil, false
	}
	return o.Worker, true
}

// HasWorker returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasWorker() bool {
	if o != nil && !IsNil(o.Worker) {
		return true
	}

	return false
}

// SetWorker gets a reference to the given int32 and assigns it to the Worker field.
func (o *ProjectDetailsForServersDto) SetWorker(v int32) {
	o.Worker = &v
}

// GetBastion returns the Bastion field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetBastion() int32 {
	if o == nil || IsNil(o.Bastion) {
		var ret int32
		return ret
	}
	return *o.Bastion
}

// GetBastionOk returns a tuple with the Bastion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetBastionOk() (*int32, bool) {
	if o == nil || IsNil(o.Bastion) {
		return nil, false
	}
	return o.Bastion, true
}

// HasBastion returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasBastion() bool {
	if o != nil && !IsNil(o.Bastion) {
		return true
	}

	return false
}

// SetBastion gets a reference to the given int32 and assigns it to the Bastion field.
func (o *ProjectDetailsForServersDto) SetBastion(v int32) {
	o.Bastion = &v
}

// GetProjectStatus returns the ProjectStatus field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetProjectStatus() ProjectStatus {
	if o == nil || IsNil(o.ProjectStatus) {
		var ret ProjectStatus
		return ret
	}
	return *o.ProjectStatus
}

// GetProjectStatusOk returns a tuple with the ProjectStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetProjectStatusOk() (*ProjectStatus, bool) {
	if o == nil || IsNil(o.ProjectStatus) {
		return nil, false
	}
	return o.ProjectStatus, true
}

// HasProjectStatus returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasProjectStatus() bool {
	if o != nil && !IsNil(o.ProjectStatus) {
		return true
	}

	return false
}

// SetProjectStatus gets a reference to the given ProjectStatus and assigns it to the ProjectStatus field.
func (o *ProjectDetailsForServersDto) SetProjectStatus(v ProjectStatus) {
	o.ProjectStatus = &v
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetProjectName() string {
	if o == nil || IsNil(o.ProjectName) {
		var ret string
		return ret
	}
	return *o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetProjectNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectName) {
		return nil, false
	}
	return o.ProjectName, true
}

// HasProjectName returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasProjectName() bool {
	if o != nil && !IsNil(o.ProjectName) {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given string and assigns it to the ProjectName field.
func (o *ProjectDetailsForServersDto) SetProjectName(v string) {
	o.ProjectName = &v
}

// GetAccessIp returns the AccessIp field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetAccessIp() string {
	if o == nil || IsNil(o.AccessIp) {
		var ret string
		return ret
	}
	return *o.AccessIp
}

// GetAccessIpOk returns a tuple with the AccessIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetAccessIpOk() (*string, bool) {
	if o == nil || IsNil(o.AccessIp) {
		return nil, false
	}
	return o.AccessIp, true
}

// HasAccessIp returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasAccessIp() bool {
	if o != nil && !IsNil(o.AccessIp) {
		return true
	}

	return false
}

// SetAccessIp gets a reference to the given string and assigns it to the AccessIp field.
func (o *ProjectDetailsForServersDto) SetAccessIp(v string) {
	o.AccessIp = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetProjectId() int32 {
	if o == nil || IsNil(o.ProjectId) {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetProjectIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *ProjectDetailsForServersDto) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetMasterReady returns the MasterReady field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetMasterReady() int32 {
	if o == nil || IsNil(o.MasterReady) {
		var ret int32
		return ret
	}
	return *o.MasterReady
}

// GetMasterReadyOk returns a tuple with the MasterReady field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetMasterReadyOk() (*int32, bool) {
	if o == nil || IsNil(o.MasterReady) {
		return nil, false
	}
	return o.MasterReady, true
}

// HasMasterReady returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasMasterReady() bool {
	if o != nil && !IsNil(o.MasterReady) {
		return true
	}

	return false
}

// SetMasterReady gets a reference to the given int32 and assigns it to the MasterReady field.
func (o *ProjectDetailsForServersDto) SetMasterReady(v int32) {
	o.MasterReady = &v
}

// GetCloudType returns the CloudType field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetCloudType() CloudType {
	if o == nil || IsNil(o.CloudType) {
		var ret CloudType
		return ret
	}
	return *o.CloudType
}

// GetCloudTypeOk returns a tuple with the CloudType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetCloudTypeOk() (*CloudType, bool) {
	if o == nil || IsNil(o.CloudType) {
		return nil, false
	}
	return o.CloudType, true
}

// HasCloudType returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasCloudType() bool {
	if o != nil && !IsNil(o.CloudType) {
		return true
	}

	return false
}

// SetCloudType gets a reference to the given CloudType and assigns it to the CloudType field.
func (o *ProjectDetailsForServersDto) SetCloudType(v CloudType) {
	o.CloudType = &v
}

// GetCloudName returns the CloudName field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetCloudName() string {
	if o == nil || IsNil(o.CloudName) {
		var ret string
		return ret
	}
	return *o.CloudName
}

// GetCloudNameOk returns a tuple with the CloudName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetCloudNameOk() (*string, bool) {
	if o == nil || IsNil(o.CloudName) {
		return nil, false
	}
	return o.CloudName, true
}

// HasCloudName returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasCloudName() bool {
	if o != nil && !IsNil(o.CloudName) {
		return true
	}

	return false
}

// SetCloudName gets a reference to the given string and assigns it to the CloudName field.
func (o *ProjectDetailsForServersDto) SetCloudName(v string) {
	o.CloudName = &v
}

// GetCloudId returns the CloudId field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetCloudId() int32 {
	if o == nil || IsNil(o.CloudId) {
		var ret int32
		return ret
	}
	return *o.CloudId
}

// GetCloudIdOk returns a tuple with the CloudId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetCloudIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CloudId) {
		return nil, false
	}
	return o.CloudId, true
}

// HasCloudId returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasCloudId() bool {
	if o != nil && !IsNil(o.CloudId) {
		return true
	}

	return false
}

// SetCloudId gets a reference to the given int32 and assigns it to the CloudId field.
func (o *ProjectDetailsForServersDto) SetCloudId(v int32) {
	o.CloudId = &v
}

// GetQuotaId returns the QuotaId field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetQuotaId() int32 {
	if o == nil || IsNil(o.QuotaId) {
		var ret int32
		return ret
	}
	return *o.QuotaId
}

// GetQuotaIdOk returns a tuple with the QuotaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetQuotaIdOk() (*int32, bool) {
	if o == nil || IsNil(o.QuotaId) {
		return nil, false
	}
	return o.QuotaId, true
}

// HasQuotaId returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasQuotaId() bool {
	if o != nil && !IsNil(o.QuotaId) {
		return true
	}

	return false
}

// SetQuotaId gets a reference to the given int32 and assigns it to the QuotaId field.
func (o *ProjectDetailsForServersDto) SetQuotaId(v int32) {
	o.QuotaId = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *ProjectDetailsForServersDto) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *ProjectDetailsForServersDto) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetKubernetesCurrentVersion returns the KubernetesCurrentVersion field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetKubernetesCurrentVersion() string {
	if o == nil || IsNil(o.KubernetesCurrentVersion) {
		var ret string
		return ret
	}
	return *o.KubernetesCurrentVersion
}

// GetKubernetesCurrentVersionOk returns a tuple with the KubernetesCurrentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetKubernetesCurrentVersionOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesCurrentVersion) {
		return nil, false
	}
	return o.KubernetesCurrentVersion, true
}

// HasKubernetesCurrentVersion returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasKubernetesCurrentVersion() bool {
	if o != nil && !IsNil(o.KubernetesCurrentVersion) {
		return true
	}

	return false
}

// SetKubernetesCurrentVersion gets a reference to the given string and assigns it to the KubernetesCurrentVersion field.
func (o *ProjectDetailsForServersDto) SetKubernetesCurrentVersion(v string) {
	o.KubernetesCurrentVersion = &v
}

// GetIsBackupEnabled returns the IsBackupEnabled field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetIsBackupEnabled() bool {
	if o == nil || IsNil(o.IsBackupEnabled) {
		var ret bool
		return ret
	}
	return *o.IsBackupEnabled
}

// GetIsBackupEnabledOk returns a tuple with the IsBackupEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetIsBackupEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBackupEnabled) {
		return nil, false
	}
	return o.IsBackupEnabled, true
}

// HasIsBackupEnabled returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasIsBackupEnabled() bool {
	if o != nil && !IsNil(o.IsBackupEnabled) {
		return true
	}

	return false
}

// SetIsBackupEnabled gets a reference to the given bool and assigns it to the IsBackupEnabled field.
func (o *ProjectDetailsForServersDto) SetIsBackupEnabled(v bool) {
	o.IsBackupEnabled = &v
}

// GetAiEnabled returns the AiEnabled field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetAiEnabled() bool {
	if o == nil || IsNil(o.AiEnabled) {
		var ret bool
		return ret
	}
	return *o.AiEnabled
}

// GetAiEnabledOk returns a tuple with the AiEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetAiEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AiEnabled) {
		return nil, false
	}
	return o.AiEnabled, true
}

// HasAiEnabled returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasAiEnabled() bool {
	if o != nil && !IsNil(o.AiEnabled) {
		return true
	}

	return false
}

// SetAiEnabled gets a reference to the given bool and assigns it to the AiEnabled field.
func (o *ProjectDetailsForServersDto) SetAiEnabled(v bool) {
	o.AiEnabled = &v
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetIsLocked() bool {
	if o == nil || IsNil(o.IsLocked) {
		var ret bool
		return ret
	}
	return *o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetIsLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocked) {
		return nil, false
	}
	return o.IsLocked, true
}

// HasIsLocked returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasIsLocked() bool {
	if o != nil && !IsNil(o.IsLocked) {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given bool and assigns it to the IsLocked field.
func (o *ProjectDetailsForServersDto) SetIsLocked(v bool) {
	o.IsLocked = &v
}

// GetIsAutoUpgrade returns the IsAutoUpgrade field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetIsAutoUpgrade() bool {
	if o == nil || IsNil(o.IsAutoUpgrade) {
		var ret bool
		return ret
	}
	return *o.IsAutoUpgrade
}

// GetIsAutoUpgradeOk returns a tuple with the IsAutoUpgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetIsAutoUpgradeOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutoUpgrade) {
		return nil, false
	}
	return o.IsAutoUpgrade, true
}

// HasIsAutoUpgrade returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasIsAutoUpgrade() bool {
	if o != nil && !IsNil(o.IsAutoUpgrade) {
		return true
	}

	return false
}

// SetIsAutoUpgrade gets a reference to the given bool and assigns it to the IsAutoUpgrade field.
func (o *ProjectDetailsForServersDto) SetIsAutoUpgrade(v bool) {
	o.IsAutoUpgrade = &v
}

// GetIsMonitoringEnabled returns the IsMonitoringEnabled field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetIsMonitoringEnabled() bool {
	if o == nil || IsNil(o.IsMonitoringEnabled) {
		var ret bool
		return ret
	}
	return *o.IsMonitoringEnabled
}

// GetIsMonitoringEnabledOk returns a tuple with the IsMonitoringEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetIsMonitoringEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMonitoringEnabled) {
		return nil, false
	}
	return o.IsMonitoringEnabled, true
}

// HasIsMonitoringEnabled returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasIsMonitoringEnabled() bool {
	if o != nil && !IsNil(o.IsMonitoringEnabled) {
		return true
	}

	return false
}

// SetIsMonitoringEnabled gets a reference to the given bool and assigns it to the IsMonitoringEnabled field.
func (o *ProjectDetailsForServersDto) SetIsMonitoringEnabled(v bool) {
	o.IsMonitoringEnabled = &v
}

// GetIsOpaEnabled returns the IsOpaEnabled field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetIsOpaEnabled() bool {
	if o == nil || IsNil(o.IsOpaEnabled) {
		var ret bool
		return ret
	}
	return *o.IsOpaEnabled
}

// GetIsOpaEnabledOk returns a tuple with the IsOpaEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetIsOpaEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOpaEnabled) {
		return nil, false
	}
	return o.IsOpaEnabled, true
}

// HasIsOpaEnabled returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasIsOpaEnabled() bool {
	if o != nil && !IsNil(o.IsOpaEnabled) {
		return true
	}

	return false
}

// SetIsOpaEnabled gets a reference to the given bool and assigns it to the IsOpaEnabled field.
func (o *ProjectDetailsForServersDto) SetIsOpaEnabled(v bool) {
	o.IsOpaEnabled = &v
}

// GetHasKubeConfigFile returns the HasKubeConfigFile field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetHasKubeConfigFile() bool {
	if o == nil || IsNil(o.HasKubeConfigFile) {
		var ret bool
		return ret
	}
	return *o.HasKubeConfigFile
}

// GetHasKubeConfigFileOk returns a tuple with the HasKubeConfigFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetHasKubeConfigFileOk() (*bool, bool) {
	if o == nil || IsNil(o.HasKubeConfigFile) {
		return nil, false
	}
	return o.HasKubeConfigFile, true
}

// HasHasKubeConfigFile returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasHasKubeConfigFile() bool {
	if o != nil && !IsNil(o.HasKubeConfigFile) {
		return true
	}

	return false
}

// SetHasKubeConfigFile gets a reference to the given bool and assigns it to the HasKubeConfigFile field.
func (o *ProjectDetailsForServersDto) SetHasKubeConfigFile(v bool) {
	o.HasKubeConfigFile = &v
}

// GetHasSelectedFlavors returns the HasSelectedFlavors field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetHasSelectedFlavors() bool {
	if o == nil || IsNil(o.HasSelectedFlavors) {
		var ret bool
		return ret
	}
	return *o.HasSelectedFlavors
}

// GetHasSelectedFlavorsOk returns a tuple with the HasSelectedFlavors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetHasSelectedFlavorsOk() (*bool, bool) {
	if o == nil || IsNil(o.HasSelectedFlavors) {
		return nil, false
	}
	return o.HasSelectedFlavors, true
}

// HasHasSelectedFlavors returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasHasSelectedFlavors() bool {
	if o != nil && !IsNil(o.HasSelectedFlavors) {
		return true
	}

	return false
}

// SetHasSelectedFlavors gets a reference to the given bool and assigns it to the HasSelectedFlavors field.
func (o *ProjectDetailsForServersDto) SetHasSelectedFlavors(v bool) {
	o.HasSelectedFlavors = &v
}

// GetIsMaintenanceModeEnabled returns the IsMaintenanceModeEnabled field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetIsMaintenanceModeEnabled() bool {
	if o == nil || IsNil(o.IsMaintenanceModeEnabled) {
		var ret bool
		return ret
	}
	return *o.IsMaintenanceModeEnabled
}

// GetIsMaintenanceModeEnabledOk returns a tuple with the IsMaintenanceModeEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetIsMaintenanceModeEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMaintenanceModeEnabled) {
		return nil, false
	}
	return o.IsMaintenanceModeEnabled, true
}

// HasIsMaintenanceModeEnabled returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasIsMaintenanceModeEnabled() bool {
	if o != nil && !IsNil(o.IsMaintenanceModeEnabled) {
		return true
	}

	return false
}

// SetIsMaintenanceModeEnabled gets a reference to the given bool and assigns it to the IsMaintenanceModeEnabled field.
func (o *ProjectDetailsForServersDto) SetIsMaintenanceModeEnabled(v bool) {
	o.IsMaintenanceModeEnabled = &v
}

// GetIsProjectMaintenanceModeEnabled returns the IsProjectMaintenanceModeEnabled field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetIsProjectMaintenanceModeEnabled() bool {
	if o == nil || IsNil(o.IsProjectMaintenanceModeEnabled) {
		var ret bool
		return ret
	}
	return *o.IsProjectMaintenanceModeEnabled
}

// GetIsProjectMaintenanceModeEnabledOk returns a tuple with the IsProjectMaintenanceModeEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetIsProjectMaintenanceModeEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsProjectMaintenanceModeEnabled) {
		return nil, false
	}
	return o.IsProjectMaintenanceModeEnabled, true
}

// HasIsProjectMaintenanceModeEnabled returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasIsProjectMaintenanceModeEnabled() bool {
	if o != nil && !IsNil(o.IsProjectMaintenanceModeEnabled) {
		return true
	}

	return false
}

// SetIsProjectMaintenanceModeEnabled gets a reference to the given bool and assigns it to the IsProjectMaintenanceModeEnabled field.
func (o *ProjectDetailsForServersDto) SetIsProjectMaintenanceModeEnabled(v bool) {
	o.IsProjectMaintenanceModeEnabled = &v
}

// GetIsDeprecated returns the IsDeprecated field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetIsDeprecated() bool {
	if o == nil || IsNil(o.IsDeprecated) {
		var ret bool
		return ret
	}
	return *o.IsDeprecated
}

// GetIsDeprecatedOk returns a tuple with the IsDeprecated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetIsDeprecatedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeprecated) {
		return nil, false
	}
	return o.IsDeprecated, true
}

// HasIsDeprecated returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasIsDeprecated() bool {
	if o != nil && !IsNil(o.IsDeprecated) {
		return true
	}

	return false
}

// SetIsDeprecated gets a reference to the given bool and assigns it to the IsDeprecated field.
func (o *ProjectDetailsForServersDto) SetIsDeprecated(v bool) {
	o.IsDeprecated = &v
}

// GetCpuLimit returns the CpuLimit field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetCpuLimit() int64 {
	if o == nil || IsNil(o.CpuLimit) {
		var ret int64
		return ret
	}
	return *o.CpuLimit
}

// GetCpuLimitOk returns a tuple with the CpuLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetCpuLimitOk() (*int64, bool) {
	if o == nil || IsNil(o.CpuLimit) {
		return nil, false
	}
	return o.CpuLimit, true
}

// HasCpuLimit returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasCpuLimit() bool {
	if o != nil && !IsNil(o.CpuLimit) {
		return true
	}

	return false
}

// SetCpuLimit gets a reference to the given int64 and assigns it to the CpuLimit field.
func (o *ProjectDetailsForServersDto) SetCpuLimit(v int64) {
	o.CpuLimit = &v
}

// GetRamLimit returns the RamLimit field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetRamLimit() int64 {
	if o == nil || IsNil(o.RamLimit) {
		var ret int64
		return ret
	}
	return *o.RamLimit
}

// GetRamLimitOk returns a tuple with the RamLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetRamLimitOk() (*int64, bool) {
	if o == nil || IsNil(o.RamLimit) {
		return nil, false
	}
	return o.RamLimit, true
}

// HasRamLimit returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasRamLimit() bool {
	if o != nil && !IsNil(o.RamLimit) {
		return true
	}

	return false
}

// SetRamLimit gets a reference to the given int64 and assigns it to the RamLimit field.
func (o *ProjectDetailsForServersDto) SetRamLimit(v int64) {
	o.RamLimit = &v
}

// GetDiskSizeLimit returns the DiskSizeLimit field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetDiskSizeLimit() int64 {
	if o == nil || IsNil(o.DiskSizeLimit) {
		var ret int64
		return ret
	}
	return *o.DiskSizeLimit
}

// GetDiskSizeLimitOk returns a tuple with the DiskSizeLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetDiskSizeLimitOk() (*int64, bool) {
	if o == nil || IsNil(o.DiskSizeLimit) {
		return nil, false
	}
	return o.DiskSizeLimit, true
}

// HasDiskSizeLimit returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasDiskSizeLimit() bool {
	if o != nil && !IsNil(o.DiskSizeLimit) {
		return true
	}

	return false
}

// SetDiskSizeLimit gets a reference to the given int64 and assigns it to the DiskSizeLimit field.
func (o *ProjectDetailsForServersDto) SetDiskSizeLimit(v int64) {
	o.DiskSizeLimit = &v
}

// GetUsedCpu returns the UsedCpu field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetUsedCpu() int64 {
	if o == nil || IsNil(o.UsedCpu) {
		var ret int64
		return ret
	}
	return *o.UsedCpu
}

// GetUsedCpuOk returns a tuple with the UsedCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetUsedCpuOk() (*int64, bool) {
	if o == nil || IsNil(o.UsedCpu) {
		return nil, false
	}
	return o.UsedCpu, true
}

// HasUsedCpu returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasUsedCpu() bool {
	if o != nil && !IsNil(o.UsedCpu) {
		return true
	}

	return false
}

// SetUsedCpu gets a reference to the given int64 and assigns it to the UsedCpu field.
func (o *ProjectDetailsForServersDto) SetUsedCpu(v int64) {
	o.UsedCpu = &v
}

// GetUsedRam returns the UsedRam field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetUsedRam() int64 {
	if o == nil || IsNil(o.UsedRam) {
		var ret int64
		return ret
	}
	return *o.UsedRam
}

// GetUsedRamOk returns a tuple with the UsedRam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetUsedRamOk() (*int64, bool) {
	if o == nil || IsNil(o.UsedRam) {
		return nil, false
	}
	return o.UsedRam, true
}

// HasUsedRam returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasUsedRam() bool {
	if o != nil && !IsNil(o.UsedRam) {
		return true
	}

	return false
}

// SetUsedRam gets a reference to the given int64 and assigns it to the UsedRam field.
func (o *ProjectDetailsForServersDto) SetUsedRam(v int64) {
	o.UsedRam = &v
}

// GetUsedDiskSize returns the UsedDiskSize field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetUsedDiskSize() int64 {
	if o == nil || IsNil(o.UsedDiskSize) {
		var ret int64
		return ret
	}
	return *o.UsedDiskSize
}

// GetUsedDiskSizeOk returns a tuple with the UsedDiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetUsedDiskSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.UsedDiskSize) {
		return nil, false
	}
	return o.UsedDiskSize, true
}

// HasUsedDiskSize returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasUsedDiskSize() bool {
	if o != nil && !IsNil(o.UsedDiskSize) {
		return true
	}

	return false
}

// SetUsedDiskSize gets a reference to the given int64 and assigns it to the UsedDiskSize field.
func (o *ProjectDetailsForServersDto) SetUsedDiskSize(v int64) {
	o.UsedDiskSize = &v
}

// GetVmCpuLimit returns the VmCpuLimit field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetVmCpuLimit() int64 {
	if o == nil || IsNil(o.VmCpuLimit) {
		var ret int64
		return ret
	}
	return *o.VmCpuLimit
}

// GetVmCpuLimitOk returns a tuple with the VmCpuLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetVmCpuLimitOk() (*int64, bool) {
	if o == nil || IsNil(o.VmCpuLimit) {
		return nil, false
	}
	return o.VmCpuLimit, true
}

// HasVmCpuLimit returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasVmCpuLimit() bool {
	if o != nil && !IsNil(o.VmCpuLimit) {
		return true
	}

	return false
}

// SetVmCpuLimit gets a reference to the given int64 and assigns it to the VmCpuLimit field.
func (o *ProjectDetailsForServersDto) SetVmCpuLimit(v int64) {
	o.VmCpuLimit = &v
}

// GetVmRamLimit returns the VmRamLimit field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetVmRamLimit() int64 {
	if o == nil || IsNil(o.VmRamLimit) {
		var ret int64
		return ret
	}
	return *o.VmRamLimit
}

// GetVmRamLimitOk returns a tuple with the VmRamLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetVmRamLimitOk() (*int64, bool) {
	if o == nil || IsNil(o.VmRamLimit) {
		return nil, false
	}
	return o.VmRamLimit, true
}

// HasVmRamLimit returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasVmRamLimit() bool {
	if o != nil && !IsNil(o.VmRamLimit) {
		return true
	}

	return false
}

// SetVmRamLimit gets a reference to the given int64 and assigns it to the VmRamLimit field.
func (o *ProjectDetailsForServersDto) SetVmRamLimit(v int64) {
	o.VmRamLimit = &v
}

// GetVmVolumeSizeLimit returns the VmVolumeSizeLimit field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetVmVolumeSizeLimit() int64 {
	if o == nil || IsNil(o.VmVolumeSizeLimit) {
		var ret int64
		return ret
	}
	return *o.VmVolumeSizeLimit
}

// GetVmVolumeSizeLimitOk returns a tuple with the VmVolumeSizeLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetVmVolumeSizeLimitOk() (*int64, bool) {
	if o == nil || IsNil(o.VmVolumeSizeLimit) {
		return nil, false
	}
	return o.VmVolumeSizeLimit, true
}

// HasVmVolumeSizeLimit returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasVmVolumeSizeLimit() bool {
	if o != nil && !IsNil(o.VmVolumeSizeLimit) {
		return true
	}

	return false
}

// SetVmVolumeSizeLimit gets a reference to the given int64 and assigns it to the VmVolumeSizeLimit field.
func (o *ProjectDetailsForServersDto) SetVmVolumeSizeLimit(v int64) {
	o.VmVolumeSizeLimit = &v
}

// GetVmUsedCpu returns the VmUsedCpu field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetVmUsedCpu() int64 {
	if o == nil || IsNil(o.VmUsedCpu) {
		var ret int64
		return ret
	}
	return *o.VmUsedCpu
}

// GetVmUsedCpuOk returns a tuple with the VmUsedCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetVmUsedCpuOk() (*int64, bool) {
	if o == nil || IsNil(o.VmUsedCpu) {
		return nil, false
	}
	return o.VmUsedCpu, true
}

// HasVmUsedCpu returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasVmUsedCpu() bool {
	if o != nil && !IsNil(o.VmUsedCpu) {
		return true
	}

	return false
}

// SetVmUsedCpu gets a reference to the given int64 and assigns it to the VmUsedCpu field.
func (o *ProjectDetailsForServersDto) SetVmUsedCpu(v int64) {
	o.VmUsedCpu = &v
}

// GetVmUsedRam returns the VmUsedRam field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetVmUsedRam() int64 {
	if o == nil || IsNil(o.VmUsedRam) {
		var ret int64
		return ret
	}
	return *o.VmUsedRam
}

// GetVmUsedRamOk returns a tuple with the VmUsedRam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetVmUsedRamOk() (*int64, bool) {
	if o == nil || IsNil(o.VmUsedRam) {
		return nil, false
	}
	return o.VmUsedRam, true
}

// HasVmUsedRam returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasVmUsedRam() bool {
	if o != nil && !IsNil(o.VmUsedRam) {
		return true
	}

	return false
}

// SetVmUsedRam gets a reference to the given int64 and assigns it to the VmUsedRam field.
func (o *ProjectDetailsForServersDto) SetVmUsedRam(v int64) {
	o.VmUsedRam = &v
}

// GetVmUsedVolumeSize returns the VmUsedVolumeSize field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetVmUsedVolumeSize() int64 {
	if o == nil || IsNil(o.VmUsedVolumeSize) {
		var ret int64
		return ret
	}
	return *o.VmUsedVolumeSize
}

// GetVmUsedVolumeSizeOk returns a tuple with the VmUsedVolumeSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetVmUsedVolumeSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.VmUsedVolumeSize) {
		return nil, false
	}
	return o.VmUsedVolumeSize, true
}

// HasVmUsedVolumeSize returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasVmUsedVolumeSize() bool {
	if o != nil && !IsNil(o.VmUsedVolumeSize) {
		return true
	}

	return false
}

// SetVmUsedVolumeSize gets a reference to the given int64 and assigns it to the VmUsedVolumeSize field.
func (o *ProjectDetailsForServersDto) SetVmUsedVolumeSize(v int64) {
	o.VmUsedVolumeSize = &v
}

// GetAccessProfileName returns the AccessProfileName field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetAccessProfileName() string {
	if o == nil || IsNil(o.AccessProfileName) {
		var ret string
		return ret
	}
	return *o.AccessProfileName
}

// GetAccessProfileNameOk returns a tuple with the AccessProfileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetAccessProfileNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccessProfileName) {
		return nil, false
	}
	return o.AccessProfileName, true
}

// HasAccessProfileName returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasAccessProfileName() bool {
	if o != nil && !IsNil(o.AccessProfileName) {
		return true
	}

	return false
}

// SetAccessProfileName gets a reference to the given string and assigns it to the AccessProfileName field.
func (o *ProjectDetailsForServersDto) SetAccessProfileName(v string) {
	o.AccessProfileName = &v
}

// GetAccessProfileId returns the AccessProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForServersDto) GetAccessProfileId() int32 {
	if o == nil || IsNil(o.AccessProfileId.Get()) {
		var ret int32
		return ret
	}
	return *o.AccessProfileId.Get()
}

// GetAccessProfileIdOk returns a tuple with the AccessProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForServersDto) GetAccessProfileIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessProfileId.Get(), o.AccessProfileId.IsSet()
}

// HasAccessProfileId returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasAccessProfileId() bool {
	if o != nil && o.AccessProfileId.IsSet() {
		return true
	}

	return false
}

// SetAccessProfileId gets a reference to the given NullableInt32 and assigns it to the AccessProfileId field.
func (o *ProjectDetailsForServersDto) SetAccessProfileId(v int32) {
	o.AccessProfileId.Set(&v)
}
// SetAccessProfileIdNil sets the value for AccessProfileId to be an explicit nil
func (o *ProjectDetailsForServersDto) SetAccessProfileIdNil() {
	o.AccessProfileId.Set(nil)
}

// UnsetAccessProfileId ensures that no value is present for AccessProfileId, not even an explicit nil
func (o *ProjectDetailsForServersDto) UnsetAccessProfileId() {
	o.AccessProfileId.Unset()
}

// GetKubernetesProfileName returns the KubernetesProfileName field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetKubernetesProfileName() string {
	if o == nil || IsNil(o.KubernetesProfileName) {
		var ret string
		return ret
	}
	return *o.KubernetesProfileName
}

// GetKubernetesProfileNameOk returns a tuple with the KubernetesProfileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetKubernetesProfileNameOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesProfileName) {
		return nil, false
	}
	return o.KubernetesProfileName, true
}

// HasKubernetesProfileName returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasKubernetesProfileName() bool {
	if o != nil && !IsNil(o.KubernetesProfileName) {
		return true
	}

	return false
}

// SetKubernetesProfileName gets a reference to the given string and assigns it to the KubernetesProfileName field.
func (o *ProjectDetailsForServersDto) SetKubernetesProfileName(v string) {
	o.KubernetesProfileName = &v
}

// GetKubernetesProfileId returns the KubernetesProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForServersDto) GetKubernetesProfileId() int32 {
	if o == nil || IsNil(o.KubernetesProfileId.Get()) {
		var ret int32
		return ret
	}
	return *o.KubernetesProfileId.Get()
}

// GetKubernetesProfileIdOk returns a tuple with the KubernetesProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForServersDto) GetKubernetesProfileIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.KubernetesProfileId.Get(), o.KubernetesProfileId.IsSet()
}

// HasKubernetesProfileId returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasKubernetesProfileId() bool {
	if o != nil && o.KubernetesProfileId.IsSet() {
		return true
	}

	return false
}

// SetKubernetesProfileId gets a reference to the given NullableInt32 and assigns it to the KubernetesProfileId field.
func (o *ProjectDetailsForServersDto) SetKubernetesProfileId(v int32) {
	o.KubernetesProfileId.Set(&v)
}
// SetKubernetesProfileIdNil sets the value for KubernetesProfileId to be an explicit nil
func (o *ProjectDetailsForServersDto) SetKubernetesProfileIdNil() {
	o.KubernetesProfileId.Set(nil)
}

// UnsetKubernetesProfileId ensures that no value is present for KubernetesProfileId, not even an explicit nil
func (o *ProjectDetailsForServersDto) UnsetKubernetesProfileId() {
	o.KubernetesProfileId.Unset()
}

// GetAlertingProfileName returns the AlertingProfileName field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetAlertingProfileName() string {
	if o == nil || IsNil(o.AlertingProfileName) {
		var ret string
		return ret
	}
	return *o.AlertingProfileName
}

// GetAlertingProfileNameOk returns a tuple with the AlertingProfileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetAlertingProfileNameOk() (*string, bool) {
	if o == nil || IsNil(o.AlertingProfileName) {
		return nil, false
	}
	return o.AlertingProfileName, true
}

// HasAlertingProfileName returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasAlertingProfileName() bool {
	if o != nil && !IsNil(o.AlertingProfileName) {
		return true
	}

	return false
}

// SetAlertingProfileName gets a reference to the given string and assigns it to the AlertingProfileName field.
func (o *ProjectDetailsForServersDto) SetAlertingProfileName(v string) {
	o.AlertingProfileName = &v
}

// GetProjectHealth returns the ProjectHealth field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetProjectHealth() ProjectHealth {
	if o == nil || IsNil(o.ProjectHealth) {
		var ret ProjectHealth
		return ret
	}
	return *o.ProjectHealth
}

// GetProjectHealthOk returns a tuple with the ProjectHealth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetProjectHealthOk() (*ProjectHealth, bool) {
	if o == nil || IsNil(o.ProjectHealth) {
		return nil, false
	}
	return o.ProjectHealth, true
}

// HasProjectHealth returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasProjectHealth() bool {
	if o != nil && !IsNil(o.ProjectHealth) {
		return true
	}

	return false
}

// SetProjectHealth gets a reference to the given ProjectHealth and assigns it to the ProjectHealth field.
func (o *ProjectDetailsForServersDto) SetProjectHealth(v ProjectHealth) {
	o.ProjectHealth = &v
}

// GetAlertingProfileId returns the AlertingProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForServersDto) GetAlertingProfileId() int32 {
	if o == nil || IsNil(o.AlertingProfileId.Get()) {
		var ret int32
		return ret
	}
	return *o.AlertingProfileId.Get()
}

// GetAlertingProfileIdOk returns a tuple with the AlertingProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForServersDto) GetAlertingProfileIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlertingProfileId.Get(), o.AlertingProfileId.IsSet()
}

// HasAlertingProfileId returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasAlertingProfileId() bool {
	if o != nil && o.AlertingProfileId.IsSet() {
		return true
	}

	return false
}

// SetAlertingProfileId gets a reference to the given NullableInt32 and assigns it to the AlertingProfileId field.
func (o *ProjectDetailsForServersDto) SetAlertingProfileId(v int32) {
	o.AlertingProfileId.Set(&v)
}
// SetAlertingProfileIdNil sets the value for AlertingProfileId to be an explicit nil
func (o *ProjectDetailsForServersDto) SetAlertingProfileIdNil() {
	o.AlertingProfileId.Set(nil)
}

// UnsetAlertingProfileId ensures that no value is present for AlertingProfileId, not even an explicit nil
func (o *ProjectDetailsForServersDto) UnsetAlertingProfileId() {
	o.AlertingProfileId.Unset()
}

// GetS3CredentialId returns the S3CredentialId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForServersDto) GetS3CredentialId() int32 {
	if o == nil || IsNil(o.S3CredentialId.Get()) {
		var ret int32
		return ret
	}
	return *o.S3CredentialId.Get()
}

// GetS3CredentialIdOk returns a tuple with the S3CredentialId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForServersDto) GetS3CredentialIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.S3CredentialId.Get(), o.S3CredentialId.IsSet()
}

// HasS3CredentialId returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasS3CredentialId() bool {
	if o != nil && o.S3CredentialId.IsSet() {
		return true
	}

	return false
}

// SetS3CredentialId gets a reference to the given NullableInt32 and assigns it to the S3CredentialId field.
func (o *ProjectDetailsForServersDto) SetS3CredentialId(v int32) {
	o.S3CredentialId.Set(&v)
}
// SetS3CredentialIdNil sets the value for S3CredentialId to be an explicit nil
func (o *ProjectDetailsForServersDto) SetS3CredentialIdNil() {
	o.S3CredentialId.Set(nil)
}

// UnsetS3CredentialId ensures that no value is present for S3CredentialId, not even an explicit nil
func (o *ProjectDetailsForServersDto) UnsetS3CredentialId() {
	o.S3CredentialId.Unset()
}

// GetAiCredentialId returns the AiCredentialId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForServersDto) GetAiCredentialId() int32 {
	if o == nil || IsNil(o.AiCredentialId.Get()) {
		var ret int32
		return ret
	}
	return *o.AiCredentialId.Get()
}

// GetAiCredentialIdOk returns a tuple with the AiCredentialId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForServersDto) GetAiCredentialIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AiCredentialId.Get(), o.AiCredentialId.IsSet()
}

// HasAiCredentialId returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasAiCredentialId() bool {
	if o != nil && o.AiCredentialId.IsSet() {
		return true
	}

	return false
}

// SetAiCredentialId gets a reference to the given NullableInt32 and assigns it to the AiCredentialId field.
func (o *ProjectDetailsForServersDto) SetAiCredentialId(v int32) {
	o.AiCredentialId.Set(&v)
}
// SetAiCredentialIdNil sets the value for AiCredentialId to be an explicit nil
func (o *ProjectDetailsForServersDto) SetAiCredentialIdNil() {
	o.AiCredentialId.Set(nil)
}

// UnsetAiCredentialId ensures that no value is present for AiCredentialId, not even an explicit nil
func (o *ProjectDetailsForServersDto) UnsetAiCredentialId() {
	o.AiCredentialId.Unset()
}

// GetExpiredAt returns the ExpiredAt field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetExpiredAt() string {
	if o == nil || IsNil(o.ExpiredAt) {
		var ret string
		return ret
	}
	return *o.ExpiredAt
}

// GetExpiredAtOk returns a tuple with the ExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetExpiredAtOk() (*string, bool) {
	if o == nil || IsNil(o.ExpiredAt) {
		return nil, false
	}
	return o.ExpiredAt, true
}

// HasExpiredAt returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasExpiredAt() bool {
	if o != nil && !IsNil(o.ExpiredAt) {
		return true
	}

	return false
}

// SetExpiredAt gets a reference to the given string and assigns it to the ExpiredAt field.
func (o *ProjectDetailsForServersDto) SetExpiredAt(v string) {
	o.ExpiredAt = &v
}

// GetCertificationExpiredAt returns the CertificationExpiredAt field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetCertificationExpiredAt() string {
	if o == nil || IsNil(o.CertificationExpiredAt) {
		var ret string
		return ret
	}
	return *o.CertificationExpiredAt
}

// GetCertificationExpiredAtOk returns a tuple with the CertificationExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetCertificationExpiredAtOk() (*string, bool) {
	if o == nil || IsNil(o.CertificationExpiredAt) {
		return nil, false
	}
	return o.CertificationExpiredAt, true
}

// HasCertificationExpiredAt returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasCertificationExpiredAt() bool {
	if o != nil && !IsNil(o.CertificationExpiredAt) {
		return true
	}

	return false
}

// SetCertificationExpiredAt gets a reference to the given string and assigns it to the CertificationExpiredAt field.
func (o *ProjectDetailsForServersDto) SetCertificationExpiredAt(v string) {
	o.CertificationExpiredAt = &v
}

// GetOpaProfileId returns the OpaProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForServersDto) GetOpaProfileId() int32 {
	if o == nil || IsNil(o.OpaProfileId.Get()) {
		var ret int32
		return ret
	}
	return *o.OpaProfileId.Get()
}

// GetOpaProfileIdOk returns a tuple with the OpaProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForServersDto) GetOpaProfileIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OpaProfileId.Get(), o.OpaProfileId.IsSet()
}

// HasOpaProfileId returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasOpaProfileId() bool {
	if o != nil && o.OpaProfileId.IsSet() {
		return true
	}

	return false
}

// SetOpaProfileId gets a reference to the given NullableInt32 and assigns it to the OpaProfileId field.
func (o *ProjectDetailsForServersDto) SetOpaProfileId(v int32) {
	o.OpaProfileId.Set(&v)
}
// SetOpaProfileIdNil sets the value for OpaProfileId to be an explicit nil
func (o *ProjectDetailsForServersDto) SetOpaProfileIdNil() {
	o.OpaProfileId.Set(nil)
}

// UnsetOpaProfileId ensures that no value is present for OpaProfileId, not even an explicit nil
func (o *ProjectDetailsForServersDto) UnsetOpaProfileId() {
	o.OpaProfileId.Unset()
}

// GetOpaProfileName returns the OpaProfileName field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetOpaProfileName() string {
	if o == nil || IsNil(o.OpaProfileName) {
		var ret string
		return ret
	}
	return *o.OpaProfileName
}

// GetOpaProfileNameOk returns a tuple with the OpaProfileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetOpaProfileNameOk() (*string, bool) {
	if o == nil || IsNil(o.OpaProfileName) {
		return nil, false
	}
	return o.OpaProfileName, true
}

// HasOpaProfileName returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasOpaProfileName() bool {
	if o != nil && !IsNil(o.OpaProfileName) {
		return true
	}

	return false
}

// SetOpaProfileName gets a reference to the given string and assigns it to the OpaProfileName field.
func (o *ProjectDetailsForServersDto) SetOpaProfileName(v string) {
	o.OpaProfileName = &v
}

// GetAllowFullSpotKubernetes returns the AllowFullSpotKubernetes field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetAllowFullSpotKubernetes() bool {
	if o == nil || IsNil(o.AllowFullSpotKubernetes) {
		var ret bool
		return ret
	}
	return *o.AllowFullSpotKubernetes
}

// GetAllowFullSpotKubernetesOk returns a tuple with the AllowFullSpotKubernetes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetAllowFullSpotKubernetesOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowFullSpotKubernetes) {
		return nil, false
	}
	return o.AllowFullSpotKubernetes, true
}

// HasAllowFullSpotKubernetes returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasAllowFullSpotKubernetes() bool {
	if o != nil && !IsNil(o.AllowFullSpotKubernetes) {
		return true
	}

	return false
}

// SetAllowFullSpotKubernetes gets a reference to the given bool and assigns it to the AllowFullSpotKubernetes field.
func (o *ProjectDetailsForServersDto) SetAllowFullSpotKubernetes(v bool) {
	o.AllowFullSpotKubernetes = &v
}

// GetAllowSpotWorkers returns the AllowSpotWorkers field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetAllowSpotWorkers() bool {
	if o == nil || IsNil(o.AllowSpotWorkers) {
		var ret bool
		return ret
	}
	return *o.AllowSpotWorkers
}

// GetAllowSpotWorkersOk returns a tuple with the AllowSpotWorkers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetAllowSpotWorkersOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSpotWorkers) {
		return nil, false
	}
	return o.AllowSpotWorkers, true
}

// HasAllowSpotWorkers returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasAllowSpotWorkers() bool {
	if o != nil && !IsNil(o.AllowSpotWorkers) {
		return true
	}

	return false
}

// SetAllowSpotWorkers gets a reference to the given bool and assigns it to the AllowSpotWorkers field.
func (o *ProjectDetailsForServersDto) SetAllowSpotWorkers(v bool) {
	o.AllowSpotWorkers = &v
}

// GetAllowSpotVMs returns the AllowSpotVMs field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetAllowSpotVMs() bool {
	if o == nil || IsNil(o.AllowSpotVMs) {
		var ret bool
		return ret
	}
	return *o.AllowSpotVMs
}

// GetAllowSpotVMsOk returns a tuple with the AllowSpotVMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetAllowSpotVMsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSpotVMs) {
		return nil, false
	}
	return o.AllowSpotVMs, true
}

// HasAllowSpotVMs returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasAllowSpotVMs() bool {
	if o != nil && !IsNil(o.AllowSpotVMs) {
		return true
	}

	return false
}

// SetAllowSpotVMs gets a reference to the given bool and assigns it to the AllowSpotVMs field.
func (o *ProjectDetailsForServersDto) SetAllowSpotVMs(v bool) {
	o.AllowSpotVMs = &v
}

// GetTotalHourlyCost returns the TotalHourlyCost field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetTotalHourlyCost() float64 {
	if o == nil || IsNil(o.TotalHourlyCost) {
		var ret float64
		return ret
	}
	return *o.TotalHourlyCost
}

// GetTotalHourlyCostOk returns a tuple with the TotalHourlyCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetTotalHourlyCostOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalHourlyCost) {
		return nil, false
	}
	return o.TotalHourlyCost, true
}

// HasTotalHourlyCost returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasTotalHourlyCost() bool {
	if o != nil && !IsNil(o.TotalHourlyCost) {
		return true
	}

	return false
}

// SetTotalHourlyCost gets a reference to the given float64 and assigns it to the TotalHourlyCost field.
func (o *ProjectDetailsForServersDto) SetTotalHourlyCost(v float64) {
	o.TotalHourlyCost = &v
}

// GetAutoscalingGroupName returns the AutoscalingGroupName field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetAutoscalingGroupName() string {
	if o == nil || IsNil(o.AutoscalingGroupName) {
		var ret string
		return ret
	}
	return *o.AutoscalingGroupName
}

// GetAutoscalingGroupNameOk returns a tuple with the AutoscalingGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetAutoscalingGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.AutoscalingGroupName) {
		return nil, false
	}
	return o.AutoscalingGroupName, true
}

// HasAutoscalingGroupName returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasAutoscalingGroupName() bool {
	if o != nil && !IsNil(o.AutoscalingGroupName) {
		return true
	}

	return false
}

// SetAutoscalingGroupName gets a reference to the given string and assigns it to the AutoscalingGroupName field.
func (o *ProjectDetailsForServersDto) SetAutoscalingGroupName(v string) {
	o.AutoscalingGroupName = &v
}

// GetMinSize returns the MinSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForServersDto) GetMinSize() int32 {
	if o == nil || IsNil(o.MinSize.Get()) {
		var ret int32
		return ret
	}
	return *o.MinSize.Get()
}

// GetMinSizeOk returns a tuple with the MinSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForServersDto) GetMinSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinSize.Get(), o.MinSize.IsSet()
}

// HasMinSize returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasMinSize() bool {
	if o != nil && o.MinSize.IsSet() {
		return true
	}

	return false
}

// SetMinSize gets a reference to the given NullableInt32 and assigns it to the MinSize field.
func (o *ProjectDetailsForServersDto) SetMinSize(v int32) {
	o.MinSize.Set(&v)
}
// SetMinSizeNil sets the value for MinSize to be an explicit nil
func (o *ProjectDetailsForServersDto) SetMinSizeNil() {
	o.MinSize.Set(nil)
}

// UnsetMinSize ensures that no value is present for MinSize, not even an explicit nil
func (o *ProjectDetailsForServersDto) UnsetMinSize() {
	o.MinSize.Unset()
}

// GetMaxSize returns the MaxSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForServersDto) GetMaxSize() int32 {
	if o == nil || IsNil(o.MaxSize.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxSize.Get()
}

// GetMaxSizeOk returns a tuple with the MaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForServersDto) GetMaxSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxSize.Get(), o.MaxSize.IsSet()
}

// HasMaxSize returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasMaxSize() bool {
	if o != nil && o.MaxSize.IsSet() {
		return true
	}

	return false
}

// SetMaxSize gets a reference to the given NullableInt32 and assigns it to the MaxSize field.
func (o *ProjectDetailsForServersDto) SetMaxSize(v int32) {
	o.MaxSize.Set(&v)
}
// SetMaxSizeNil sets the value for MaxSize to be an explicit nil
func (o *ProjectDetailsForServersDto) SetMaxSizeNil() {
	o.MaxSize.Set(nil)
}

// UnsetMaxSize ensures that no value is present for MaxSize, not even an explicit nil
func (o *ProjectDetailsForServersDto) UnsetMaxSize() {
	o.MaxSize.Unset()
}

// GetDiskSize returns the DiskSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForServersDto) GetDiskSize() float64 {
	if o == nil || IsNil(o.DiskSize.Get()) {
		var ret float64
		return ret
	}
	return *o.DiskSize.Get()
}

// GetDiskSizeOk returns a tuple with the DiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForServersDto) GetDiskSizeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiskSize.Get(), o.DiskSize.IsSet()
}

// HasDiskSize returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasDiskSize() bool {
	if o != nil && o.DiskSize.IsSet() {
		return true
	}

	return false
}

// SetDiskSize gets a reference to the given NullableFloat64 and assigns it to the DiskSize field.
func (o *ProjectDetailsForServersDto) SetDiskSize(v float64) {
	o.DiskSize.Set(&v)
}
// SetDiskSizeNil sets the value for DiskSize to be an explicit nil
func (o *ProjectDetailsForServersDto) SetDiskSizeNil() {
	o.DiskSize.Set(nil)
}

// UnsetDiskSize ensures that no value is present for DiskSize, not even an explicit nil
func (o *ProjectDetailsForServersDto) UnsetDiskSize() {
	o.DiskSize.Unset()
}

// GetFlavor returns the Flavor field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetFlavor() string {
	if o == nil || IsNil(o.Flavor) {
		var ret string
		return ret
	}
	return *o.Flavor
}

// GetFlavorOk returns a tuple with the Flavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetFlavorOk() (*string, bool) {
	if o == nil || IsNil(o.Flavor) {
		return nil, false
	}
	return o.Flavor, true
}

// HasFlavor returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasFlavor() bool {
	if o != nil && !IsNil(o.Flavor) {
		return true
	}

	return false
}

// SetFlavor gets a reference to the given string and assigns it to the Flavor field.
func (o *ProjectDetailsForServersDto) SetFlavor(v string) {
	o.Flavor = &v
}

// GetSpotEnabled returns the SpotEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForServersDto) GetSpotEnabled() bool {
	if o == nil || IsNil(o.SpotEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.SpotEnabled.Get()
}

// GetSpotEnabledOk returns a tuple with the SpotEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForServersDto) GetSpotEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpotEnabled.Get(), o.SpotEnabled.IsSet()
}

// HasSpotEnabled returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasSpotEnabled() bool {
	if o != nil && o.SpotEnabled.IsSet() {
		return true
	}

	return false
}

// SetSpotEnabled gets a reference to the given NullableBool and assigns it to the SpotEnabled field.
func (o *ProjectDetailsForServersDto) SetSpotEnabled(v bool) {
	o.SpotEnabled.Set(&v)
}
// SetSpotEnabledNil sets the value for SpotEnabled to be an explicit nil
func (o *ProjectDetailsForServersDto) SetSpotEnabledNil() {
	o.SpotEnabled.Set(nil)
}

// UnsetSpotEnabled ensures that no value is present for SpotEnabled, not even an explicit nil
func (o *ProjectDetailsForServersDto) UnsetSpotEnabled() {
	o.SpotEnabled.Unset()
}

// GetIsAutoscalingEnabled returns the IsAutoscalingEnabled field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetIsAutoscalingEnabled() bool {
	if o == nil || IsNil(o.IsAutoscalingEnabled) {
		var ret bool
		return ret
	}
	return *o.IsAutoscalingEnabled
}

// GetIsAutoscalingEnabledOk returns a tuple with the IsAutoscalingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetIsAutoscalingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutoscalingEnabled) {
		return nil, false
	}
	return o.IsAutoscalingEnabled, true
}

// HasIsAutoscalingEnabled returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasIsAutoscalingEnabled() bool {
	if o != nil && !IsNil(o.IsAutoscalingEnabled) {
		return true
	}

	return false
}

// SetIsAutoscalingEnabled gets a reference to the given bool and assigns it to the IsAutoscalingEnabled field.
func (o *ProjectDetailsForServersDto) SetIsAutoscalingEnabled(v bool) {
	o.IsAutoscalingEnabled = &v
}

// GetIsAutoscalingSpotEnabled returns the IsAutoscalingSpotEnabled field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetIsAutoscalingSpotEnabled() bool {
	if o == nil || IsNil(o.IsAutoscalingSpotEnabled) {
		var ret bool
		return ret
	}
	return *o.IsAutoscalingSpotEnabled
}

// GetIsAutoscalingSpotEnabledOk returns a tuple with the IsAutoscalingSpotEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetIsAutoscalingSpotEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutoscalingSpotEnabled) {
		return nil, false
	}
	return o.IsAutoscalingSpotEnabled, true
}

// HasIsAutoscalingSpotEnabled returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasIsAutoscalingSpotEnabled() bool {
	if o != nil && !IsNil(o.IsAutoscalingSpotEnabled) {
		return true
	}

	return false
}

// SetIsAutoscalingSpotEnabled gets a reference to the given bool and assigns it to the IsAutoscalingSpotEnabled field.
func (o *ProjectDetailsForServersDto) SetIsAutoscalingSpotEnabled(v bool) {
	o.IsAutoscalingSpotEnabled = &v
}

// GetHasNfsServer returns the HasNfsServer field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetHasNfsServer() bool {
	if o == nil || IsNil(o.HasNfsServer) {
		var ret bool
		return ret
	}
	return *o.HasNfsServer
}

// GetHasNfsServerOk returns a tuple with the HasNfsServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetHasNfsServerOk() (*bool, bool) {
	if o == nil || IsNil(o.HasNfsServer) {
		return nil, false
	}
	return o.HasNfsServer, true
}

// HasHasNfsServer returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasHasNfsServer() bool {
	if o != nil && !IsNil(o.HasNfsServer) {
		return true
	}

	return false
}

// SetHasNfsServer gets a reference to the given bool and assigns it to the HasNfsServer field.
func (o *ProjectDetailsForServersDto) SetHasNfsServer(v bool) {
	o.HasNfsServer = &v
}

// GetWasmEnabled returns the WasmEnabled field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetWasmEnabled() bool {
	if o == nil || IsNil(o.WasmEnabled) {
		var ret bool
		return ret
	}
	return *o.WasmEnabled
}

// GetWasmEnabledOk returns a tuple with the WasmEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetWasmEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.WasmEnabled) {
		return nil, false
	}
	return o.WasmEnabled, true
}

// HasWasmEnabled returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasWasmEnabled() bool {
	if o != nil && !IsNil(o.WasmEnabled) {
		return true
	}

	return false
}

// SetWasmEnabled gets a reference to the given bool and assigns it to the WasmEnabled field.
func (o *ProjectDetailsForServersDto) SetWasmEnabled(v bool) {
	o.WasmEnabled = &v
}

// GetAvailabilityZones returns the AvailabilityZones field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetAvailabilityZones() []string {
	if o == nil || IsNil(o.AvailabilityZones) {
		var ret []string
		return ret
	}
	return o.AvailabilityZones
}

// GetAvailabilityZonesOk returns a tuple with the AvailabilityZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetAvailabilityZonesOk() ([]string, bool) {
	if o == nil || IsNil(o.AvailabilityZones) {
		return nil, false
	}
	return o.AvailabilityZones, true
}

// HasAvailabilityZones returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasAvailabilityZones() bool {
	if o != nil && !IsNil(o.AvailabilityZones) {
		return true
	}

	return false
}

// SetAvailabilityZones gets a reference to the given []string and assigns it to the AvailabilityZones field.
func (o *ProjectDetailsForServersDto) SetAvailabilityZones(v []string) {
	o.AvailabilityZones = v
}

// GetHypervisors returns the Hypervisors field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetHypervisors() []string {
	if o == nil || IsNil(o.Hypervisors) {
		var ret []string
		return ret
	}
	return o.Hypervisors
}

// GetHypervisorsOk returns a tuple with the Hypervisors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetHypervisorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Hypervisors) {
		return nil, false
	}
	return o.Hypervisors, true
}

// HasHypervisors returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasHypervisors() bool {
	if o != nil && !IsNil(o.Hypervisors) {
		return true
	}

	return false
}

// SetHypervisors gets a reference to the given []string and assigns it to the Hypervisors field.
func (o *ProjectDetailsForServersDto) SetHypervisors(v []string) {
	o.Hypervisors = v
}

// GetProxmoxStorage returns the ProxmoxStorage field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetProxmoxStorage() ProxmoxStorage {
	if o == nil || IsNil(o.ProxmoxStorage) {
		var ret ProxmoxStorage
		return ret
	}
	return *o.ProxmoxStorage
}

// GetProxmoxStorageOk returns a tuple with the ProxmoxStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetProxmoxStorageOk() (*ProxmoxStorage, bool) {
	if o == nil || IsNil(o.ProxmoxStorage) {
		return nil, false
	}
	return o.ProxmoxStorage, true
}

// HasProxmoxStorage returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasProxmoxStorage() bool {
	if o != nil && !IsNil(o.ProxmoxStorage) {
		return true
	}

	return false
}

// SetProxmoxStorage gets a reference to the given ProxmoxStorage and assigns it to the ProxmoxStorage field.
func (o *ProjectDetailsForServersDto) SetProxmoxStorage(v ProxmoxStorage) {
	o.ProxmoxStorage = &v
}

// GetIsDrsEnabled returns the IsDrsEnabled field value if set, zero value otherwise.
func (o *ProjectDetailsForServersDto) GetIsDrsEnabled() bool {
	if o == nil || IsNil(o.IsDrsEnabled) {
		var ret bool
		return ret
	}
	return *o.IsDrsEnabled
}

// GetIsDrsEnabledOk returns a tuple with the IsDrsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForServersDto) GetIsDrsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDrsEnabled) {
		return nil, false
	}
	return o.IsDrsEnabled, true
}

// HasIsDrsEnabled returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasIsDrsEnabled() bool {
	if o != nil && !IsNil(o.IsDrsEnabled) {
		return true
	}

	return false
}

// SetIsDrsEnabled gets a reference to the given bool and assigns it to the IsDrsEnabled field.
func (o *ProjectDetailsForServersDto) SetIsDrsEnabled(v bool) {
	o.IsDrsEnabled = &v
}

// GetMaxSpotPrice returns the MaxSpotPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForServersDto) GetMaxSpotPrice() float64 {
	if o == nil || IsNil(o.MaxSpotPrice.Get()) {
		var ret float64
		return ret
	}
	return *o.MaxSpotPrice.Get()
}

// GetMaxSpotPriceOk returns a tuple with the MaxSpotPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForServersDto) GetMaxSpotPriceOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxSpotPrice.Get(), o.MaxSpotPrice.IsSet()
}

// HasMaxSpotPrice returns a boolean if a field has been set.
func (o *ProjectDetailsForServersDto) HasMaxSpotPrice() bool {
	if o != nil && o.MaxSpotPrice.IsSet() {
		return true
	}

	return false
}

// SetMaxSpotPrice gets a reference to the given NullableFloat64 and assigns it to the MaxSpotPrice field.
func (o *ProjectDetailsForServersDto) SetMaxSpotPrice(v float64) {
	o.MaxSpotPrice.Set(&v)
}
// SetMaxSpotPriceNil sets the value for MaxSpotPrice to be an explicit nil
func (o *ProjectDetailsForServersDto) SetMaxSpotPriceNil() {
	o.MaxSpotPrice.Set(nil)
}

// UnsetMaxSpotPrice ensures that no value is present for MaxSpotPrice, not even an explicit nil
func (o *ProjectDetailsForServersDto) UnsetMaxSpotPrice() {
	o.MaxSpotPrice.Unset()
}

func (o ProjectDetailsForServersDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectDetailsForServersDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlertsTotalCount) {
		toSerialize["alertsTotalCount"] = o.AlertsTotalCount
	}
	if !IsNil(o.Worker) {
		toSerialize["worker"] = o.Worker
	}
	if !IsNil(o.Bastion) {
		toSerialize["bastion"] = o.Bastion
	}
	if !IsNil(o.ProjectStatus) {
		toSerialize["projectStatus"] = o.ProjectStatus
	}
	if !IsNil(o.ProjectName) {
		toSerialize["projectName"] = o.ProjectName
	}
	if !IsNil(o.AccessIp) {
		toSerialize["accessIp"] = o.AccessIp
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.MasterReady) {
		toSerialize["masterReady"] = o.MasterReady
	}
	if !IsNil(o.CloudType) {
		toSerialize["cloudType"] = o.CloudType
	}
	if !IsNil(o.CloudName) {
		toSerialize["cloudName"] = o.CloudName
	}
	if !IsNil(o.CloudId) {
		toSerialize["cloudId"] = o.CloudId
	}
	if !IsNil(o.QuotaId) {
		toSerialize["quotaId"] = o.QuotaId
	}
	if !IsNil(o.OrganizationName) {
		toSerialize["organizationName"] = o.OrganizationName
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.KubernetesCurrentVersion) {
		toSerialize["kubernetesCurrentVersion"] = o.KubernetesCurrentVersion
	}
	if !IsNil(o.IsBackupEnabled) {
		toSerialize["isBackupEnabled"] = o.IsBackupEnabled
	}
	if !IsNil(o.AiEnabled) {
		toSerialize["aiEnabled"] = o.AiEnabled
	}
	if !IsNil(o.IsLocked) {
		toSerialize["isLocked"] = o.IsLocked
	}
	if !IsNil(o.IsAutoUpgrade) {
		toSerialize["isAutoUpgrade"] = o.IsAutoUpgrade
	}
	if !IsNil(o.IsMonitoringEnabled) {
		toSerialize["isMonitoringEnabled"] = o.IsMonitoringEnabled
	}
	if !IsNil(o.IsOpaEnabled) {
		toSerialize["isOpaEnabled"] = o.IsOpaEnabled
	}
	if !IsNil(o.HasKubeConfigFile) {
		toSerialize["hasKubeConfigFile"] = o.HasKubeConfigFile
	}
	if !IsNil(o.HasSelectedFlavors) {
		toSerialize["hasSelectedFlavors"] = o.HasSelectedFlavors
	}
	if !IsNil(o.IsMaintenanceModeEnabled) {
		toSerialize["isMaintenanceModeEnabled"] = o.IsMaintenanceModeEnabled
	}
	if !IsNil(o.IsProjectMaintenanceModeEnabled) {
		toSerialize["isProjectMaintenanceModeEnabled"] = o.IsProjectMaintenanceModeEnabled
	}
	if !IsNil(o.IsDeprecated) {
		toSerialize["isDeprecated"] = o.IsDeprecated
	}
	if !IsNil(o.CpuLimit) {
		toSerialize["cpuLimit"] = o.CpuLimit
	}
	if !IsNil(o.RamLimit) {
		toSerialize["ramLimit"] = o.RamLimit
	}
	if !IsNil(o.DiskSizeLimit) {
		toSerialize["diskSizeLimit"] = o.DiskSizeLimit
	}
	if !IsNil(o.UsedCpu) {
		toSerialize["usedCpu"] = o.UsedCpu
	}
	if !IsNil(o.UsedRam) {
		toSerialize["usedRam"] = o.UsedRam
	}
	if !IsNil(o.UsedDiskSize) {
		toSerialize["usedDiskSize"] = o.UsedDiskSize
	}
	if !IsNil(o.VmCpuLimit) {
		toSerialize["vmCpuLimit"] = o.VmCpuLimit
	}
	if !IsNil(o.VmRamLimit) {
		toSerialize["vmRamLimit"] = o.VmRamLimit
	}
	if !IsNil(o.VmVolumeSizeLimit) {
		toSerialize["vmVolumeSizeLimit"] = o.VmVolumeSizeLimit
	}
	if !IsNil(o.VmUsedCpu) {
		toSerialize["vmUsedCpu"] = o.VmUsedCpu
	}
	if !IsNil(o.VmUsedRam) {
		toSerialize["vmUsedRam"] = o.VmUsedRam
	}
	if !IsNil(o.VmUsedVolumeSize) {
		toSerialize["vmUsedVolumeSize"] = o.VmUsedVolumeSize
	}
	if !IsNil(o.AccessProfileName) {
		toSerialize["accessProfileName"] = o.AccessProfileName
	}
	if o.AccessProfileId.IsSet() {
		toSerialize["accessProfileId"] = o.AccessProfileId.Get()
	}
	if !IsNil(o.KubernetesProfileName) {
		toSerialize["kubernetesProfileName"] = o.KubernetesProfileName
	}
	if o.KubernetesProfileId.IsSet() {
		toSerialize["kubernetesProfileId"] = o.KubernetesProfileId.Get()
	}
	if !IsNil(o.AlertingProfileName) {
		toSerialize["alertingProfileName"] = o.AlertingProfileName
	}
	if !IsNil(o.ProjectHealth) {
		toSerialize["projectHealth"] = o.ProjectHealth
	}
	if o.AlertingProfileId.IsSet() {
		toSerialize["alertingProfileId"] = o.AlertingProfileId.Get()
	}
	if o.S3CredentialId.IsSet() {
		toSerialize["s3CredentialId"] = o.S3CredentialId.Get()
	}
	if o.AiCredentialId.IsSet() {
		toSerialize["aiCredentialId"] = o.AiCredentialId.Get()
	}
	if !IsNil(o.ExpiredAt) {
		toSerialize["expiredAt"] = o.ExpiredAt
	}
	if !IsNil(o.CertificationExpiredAt) {
		toSerialize["certificationExpiredAt"] = o.CertificationExpiredAt
	}
	if o.OpaProfileId.IsSet() {
		toSerialize["opaProfileId"] = o.OpaProfileId.Get()
	}
	if !IsNil(o.OpaProfileName) {
		toSerialize["opaProfileName"] = o.OpaProfileName
	}
	if !IsNil(o.AllowFullSpotKubernetes) {
		toSerialize["allowFullSpotKubernetes"] = o.AllowFullSpotKubernetes
	}
	if !IsNil(o.AllowSpotWorkers) {
		toSerialize["allowSpotWorkers"] = o.AllowSpotWorkers
	}
	if !IsNil(o.AllowSpotVMs) {
		toSerialize["allowSpotVMs"] = o.AllowSpotVMs
	}
	if !IsNil(o.TotalHourlyCost) {
		toSerialize["totalHourlyCost"] = o.TotalHourlyCost
	}
	if !IsNil(o.AutoscalingGroupName) {
		toSerialize["autoscalingGroupName"] = o.AutoscalingGroupName
	}
	if o.MinSize.IsSet() {
		toSerialize["minSize"] = o.MinSize.Get()
	}
	if o.MaxSize.IsSet() {
		toSerialize["maxSize"] = o.MaxSize.Get()
	}
	if o.DiskSize.IsSet() {
		toSerialize["diskSize"] = o.DiskSize.Get()
	}
	if !IsNil(o.Flavor) {
		toSerialize["flavor"] = o.Flavor
	}
	if o.SpotEnabled.IsSet() {
		toSerialize["spotEnabled"] = o.SpotEnabled.Get()
	}
	if !IsNil(o.IsAutoscalingEnabled) {
		toSerialize["isAutoscalingEnabled"] = o.IsAutoscalingEnabled
	}
	if !IsNil(o.IsAutoscalingSpotEnabled) {
		toSerialize["isAutoscalingSpotEnabled"] = o.IsAutoscalingSpotEnabled
	}
	if !IsNil(o.HasNfsServer) {
		toSerialize["hasNfsServer"] = o.HasNfsServer
	}
	if !IsNil(o.WasmEnabled) {
		toSerialize["wasmEnabled"] = o.WasmEnabled
	}
	if !IsNil(o.AvailabilityZones) {
		toSerialize["availabilityZones"] = o.AvailabilityZones
	}
	if !IsNil(o.Hypervisors) {
		toSerialize["hypervisors"] = o.Hypervisors
	}
	if !IsNil(o.ProxmoxStorage) {
		toSerialize["proxmoxStorage"] = o.ProxmoxStorage
	}
	if !IsNil(o.IsDrsEnabled) {
		toSerialize["isDrsEnabled"] = o.IsDrsEnabled
	}
	if o.MaxSpotPrice.IsSet() {
		toSerialize["maxSpotPrice"] = o.MaxSpotPrice.Get()
	}
	return toSerialize, nil
}

type NullableProjectDetailsForServersDto struct {
	value *ProjectDetailsForServersDto
	isSet bool
}

func (v NullableProjectDetailsForServersDto) Get() *ProjectDetailsForServersDto {
	return v.value
}

func (v *NullableProjectDetailsForServersDto) Set(val *ProjectDetailsForServersDto) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectDetailsForServersDto) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectDetailsForServersDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectDetailsForServersDto(val *ProjectDetailsForServersDto) *NullableProjectDetailsForServersDto {
	return &NullableProjectDetailsForServersDto{value: val, isSet: true}
}

func (v NullableProjectDetailsForServersDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectDetailsForServersDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


