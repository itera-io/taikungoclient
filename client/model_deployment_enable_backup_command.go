/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the DeploymentEnableBackupCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentEnableBackupCommand{}

// DeploymentEnableBackupCommand struct for DeploymentEnableBackupCommand
type DeploymentEnableBackupCommand struct {
	ProjectId *int32 `json:"projectId,omitempty"`
	S3CredentialId *int32 `json:"s3CredentialId,omitempty"`
}

// NewDeploymentEnableBackupCommand instantiates a new DeploymentEnableBackupCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentEnableBackupCommand() *DeploymentEnableBackupCommand {
	this := DeploymentEnableBackupCommand{}
	return &this
}

// NewDeploymentEnableBackupCommandWithDefaults instantiates a new DeploymentEnableBackupCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentEnableBackupCommandWithDefaults() *DeploymentEnableBackupCommand {
	this := DeploymentEnableBackupCommand{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *DeploymentEnableBackupCommand) GetProjectId() int32 {
	if o == nil || IsNil(o.ProjectId) {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentEnableBackupCommand) GetProjectIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *DeploymentEnableBackupCommand) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *DeploymentEnableBackupCommand) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetS3CredentialId returns the S3CredentialId field value if set, zero value otherwise.
func (o *DeploymentEnableBackupCommand) GetS3CredentialId() int32 {
	if o == nil || IsNil(o.S3CredentialId) {
		var ret int32
		return ret
	}
	return *o.S3CredentialId
}

// GetS3CredentialIdOk returns a tuple with the S3CredentialId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentEnableBackupCommand) GetS3CredentialIdOk() (*int32, bool) {
	if o == nil || IsNil(o.S3CredentialId) {
		return nil, false
	}
	return o.S3CredentialId, true
}

// HasS3CredentialId returns a boolean if a field has been set.
func (o *DeploymentEnableBackupCommand) HasS3CredentialId() bool {
	if o != nil && !IsNil(o.S3CredentialId) {
		return true
	}

	return false
}

// SetS3CredentialId gets a reference to the given int32 and assigns it to the S3CredentialId field.
func (o *DeploymentEnableBackupCommand) SetS3CredentialId(v int32) {
	o.S3CredentialId = &v
}

func (o DeploymentEnableBackupCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentEnableBackupCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.S3CredentialId) {
		toSerialize["s3CredentialId"] = o.S3CredentialId
	}
	return toSerialize, nil
}

type NullableDeploymentEnableBackupCommand struct {
	value *DeploymentEnableBackupCommand
	isSet bool
}

func (v NullableDeploymentEnableBackupCommand) Get() *DeploymentEnableBackupCommand {
	return v.value
}

func (v *NullableDeploymentEnableBackupCommand) Set(val *DeploymentEnableBackupCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentEnableBackupCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentEnableBackupCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentEnableBackupCommand(val *DeploymentEnableBackupCommand) *NullableDeploymentEnableBackupCommand {
	return &NullableDeploymentEnableBackupCommand{value: val, isSet: true}
}

func (v NullableDeploymentEnableBackupCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentEnableBackupCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


