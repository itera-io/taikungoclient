/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PartnerDetailsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PartnerDetailsDto{}

// PartnerDetailsDto struct for PartnerDetailsDto
type PartnerDetailsDto struct {
	Id int32 `json:"id"`
	Name string `json:"name"`
	Link NullableString `json:"link"`
	Domain NullableString `json:"domain"`
	Country NullableString `json:"country"`
	City NullableString `json:"city"`
	VatNumber NullableString `json:"vatNumber"`
	BackgroundImageUrl NullableString `json:"backgroundImageUrl"`
	Address NullableString `json:"address"`
	Logo NullableString `json:"logo"`
	Phone NullableString `json:"phone"`
	Email NullableString `json:"email"`
	PaymentEnabled NullableBool `json:"paymentEnabled"`
	AllowRegistration NullableBool `json:"allowRegistration"`
	RequiredUserApproval NullableBool `json:"requiredUserApproval"`
	Organizations []CommonDropdownDto `json:"organizations"`
	WhiteListDomains []WhiteListDomainDto `json:"whiteListDomains"`
	PartnerColorSettings *PartnerColorSettingsDto `json:"partnerColorSettings,omitempty"`
	PartnerImageSettings *PartnerImageSettingsDto `json:"partnerImageSettings,omitempty"`
}

type _PartnerDetailsDto PartnerDetailsDto

// NewPartnerDetailsDto instantiates a new PartnerDetailsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartnerDetailsDto(id int32, name string, link NullableString, domain NullableString, country NullableString, city NullableString, vatNumber NullableString, backgroundImageUrl NullableString, address NullableString, logo NullableString, phone NullableString, email NullableString, paymentEnabled NullableBool, allowRegistration NullableBool, requiredUserApproval NullableBool, organizations []CommonDropdownDto, whiteListDomains []WhiteListDomainDto) *PartnerDetailsDto {
	this := PartnerDetailsDto{}
	this.Id = id
	this.Name = name
	this.Link = link
	this.Domain = domain
	this.Country = country
	this.City = city
	this.VatNumber = vatNumber
	this.BackgroundImageUrl = backgroundImageUrl
	this.Address = address
	this.Logo = logo
	this.Phone = phone
	this.Email = email
	this.PaymentEnabled = paymentEnabled
	this.AllowRegistration = allowRegistration
	this.RequiredUserApproval = requiredUserApproval
	this.Organizations = organizations
	this.WhiteListDomains = whiteListDomains
	return &this
}

// NewPartnerDetailsDtoWithDefaults instantiates a new PartnerDetailsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartnerDetailsDtoWithDefaults() *PartnerDetailsDto {
	this := PartnerDetailsDto{}
	return &this
}

// GetId returns the Id field value
func (o *PartnerDetailsDto) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PartnerDetailsDto) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *PartnerDetailsDto) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PartnerDetailsDto) SetName(v string) {
	o.Name = v
}

// GetLink returns the Link field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PartnerDetailsDto) GetLink() string {
	if o == nil || o.Link.Get() == nil {
		var ret string
		return ret
	}

	return *o.Link.Get()
}

// GetLinkOk returns a tuple with the Link field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerDetailsDto) GetLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Link.Get(), o.Link.IsSet()
}

// SetLink sets field value
func (o *PartnerDetailsDto) SetLink(v string) {
	o.Link.Set(&v)
}

// GetDomain returns the Domain field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PartnerDetailsDto) GetDomain() string {
	if o == nil || o.Domain.Get() == nil {
		var ret string
		return ret
	}

	return *o.Domain.Get()
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerDetailsDto) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Domain.Get(), o.Domain.IsSet()
}

// SetDomain sets field value
func (o *PartnerDetailsDto) SetDomain(v string) {
	o.Domain.Set(&v)
}

// GetCountry returns the Country field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PartnerDetailsDto) GetCountry() string {
	if o == nil || o.Country.Get() == nil {
		var ret string
		return ret
	}

	return *o.Country.Get()
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerDetailsDto) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Country.Get(), o.Country.IsSet()
}

// SetCountry sets field value
func (o *PartnerDetailsDto) SetCountry(v string) {
	o.Country.Set(&v)
}

// GetCity returns the City field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PartnerDetailsDto) GetCity() string {
	if o == nil || o.City.Get() == nil {
		var ret string
		return ret
	}

	return *o.City.Get()
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerDetailsDto) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.City.Get(), o.City.IsSet()
}

// SetCity sets field value
func (o *PartnerDetailsDto) SetCity(v string) {
	o.City.Set(&v)
}

// GetVatNumber returns the VatNumber field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PartnerDetailsDto) GetVatNumber() string {
	if o == nil || o.VatNumber.Get() == nil {
		var ret string
		return ret
	}

	return *o.VatNumber.Get()
}

// GetVatNumberOk returns a tuple with the VatNumber field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerDetailsDto) GetVatNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VatNumber.Get(), o.VatNumber.IsSet()
}

// SetVatNumber sets field value
func (o *PartnerDetailsDto) SetVatNumber(v string) {
	o.VatNumber.Set(&v)
}

// GetBackgroundImageUrl returns the BackgroundImageUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PartnerDetailsDto) GetBackgroundImageUrl() string {
	if o == nil || o.BackgroundImageUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.BackgroundImageUrl.Get()
}

// GetBackgroundImageUrlOk returns a tuple with the BackgroundImageUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerDetailsDto) GetBackgroundImageUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackgroundImageUrl.Get(), o.BackgroundImageUrl.IsSet()
}

// SetBackgroundImageUrl sets field value
func (o *PartnerDetailsDto) SetBackgroundImageUrl(v string) {
	o.BackgroundImageUrl.Set(&v)
}

// GetAddress returns the Address field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PartnerDetailsDto) GetAddress() string {
	if o == nil || o.Address.Get() == nil {
		var ret string
		return ret
	}

	return *o.Address.Get()
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerDetailsDto) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Address.Get(), o.Address.IsSet()
}

// SetAddress sets field value
func (o *PartnerDetailsDto) SetAddress(v string) {
	o.Address.Set(&v)
}

// GetLogo returns the Logo field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PartnerDetailsDto) GetLogo() string {
	if o == nil || o.Logo.Get() == nil {
		var ret string
		return ret
	}

	return *o.Logo.Get()
}

// GetLogoOk returns a tuple with the Logo field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerDetailsDto) GetLogoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Logo.Get(), o.Logo.IsSet()
}

// SetLogo sets field value
func (o *PartnerDetailsDto) SetLogo(v string) {
	o.Logo.Set(&v)
}

// GetPhone returns the Phone field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PartnerDetailsDto) GetPhone() string {
	if o == nil || o.Phone.Get() == nil {
		var ret string
		return ret
	}

	return *o.Phone.Get()
}

// GetPhoneOk returns a tuple with the Phone field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerDetailsDto) GetPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phone.Get(), o.Phone.IsSet()
}

// SetPhone sets field value
func (o *PartnerDetailsDto) SetPhone(v string) {
	o.Phone.Set(&v)
}

// GetEmail returns the Email field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PartnerDetailsDto) GetEmail() string {
	if o == nil || o.Email.Get() == nil {
		var ret string
		return ret
	}

	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerDetailsDto) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// SetEmail sets field value
func (o *PartnerDetailsDto) SetEmail(v string) {
	o.Email.Set(&v)
}

// GetPaymentEnabled returns the PaymentEnabled field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *PartnerDetailsDto) GetPaymentEnabled() bool {
	if o == nil || o.PaymentEnabled.Get() == nil {
		var ret bool
		return ret
	}

	return *o.PaymentEnabled.Get()
}

// GetPaymentEnabledOk returns a tuple with the PaymentEnabled field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerDetailsDto) GetPaymentEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentEnabled.Get(), o.PaymentEnabled.IsSet()
}

// SetPaymentEnabled sets field value
func (o *PartnerDetailsDto) SetPaymentEnabled(v bool) {
	o.PaymentEnabled.Set(&v)
}

// GetAllowRegistration returns the AllowRegistration field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *PartnerDetailsDto) GetAllowRegistration() bool {
	if o == nil || o.AllowRegistration.Get() == nil {
		var ret bool
		return ret
	}

	return *o.AllowRegistration.Get()
}

// GetAllowRegistrationOk returns a tuple with the AllowRegistration field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerDetailsDto) GetAllowRegistrationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowRegistration.Get(), o.AllowRegistration.IsSet()
}

// SetAllowRegistration sets field value
func (o *PartnerDetailsDto) SetAllowRegistration(v bool) {
	o.AllowRegistration.Set(&v)
}

// GetRequiredUserApproval returns the RequiredUserApproval field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *PartnerDetailsDto) GetRequiredUserApproval() bool {
	if o == nil || o.RequiredUserApproval.Get() == nil {
		var ret bool
		return ret
	}

	return *o.RequiredUserApproval.Get()
}

// GetRequiredUserApprovalOk returns a tuple with the RequiredUserApproval field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerDetailsDto) GetRequiredUserApprovalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequiredUserApproval.Get(), o.RequiredUserApproval.IsSet()
}

// SetRequiredUserApproval sets field value
func (o *PartnerDetailsDto) SetRequiredUserApproval(v bool) {
	o.RequiredUserApproval.Set(&v)
}

// GetOrganizations returns the Organizations field value
// If the value is explicit nil, the zero value for []CommonDropdownDto will be returned
func (o *PartnerDetailsDto) GetOrganizations() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}

	return o.Organizations
}

// GetOrganizationsOk returns a tuple with the Organizations field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerDetailsDto) GetOrganizationsOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.Organizations) {
		return nil, false
	}
	return o.Organizations, true
}

// SetOrganizations sets field value
func (o *PartnerDetailsDto) SetOrganizations(v []CommonDropdownDto) {
	o.Organizations = v
}

// GetWhiteListDomains returns the WhiteListDomains field value
// If the value is explicit nil, the zero value for []WhiteListDomainDto will be returned
func (o *PartnerDetailsDto) GetWhiteListDomains() []WhiteListDomainDto {
	if o == nil {
		var ret []WhiteListDomainDto
		return ret
	}

	return o.WhiteListDomains
}

// GetWhiteListDomainsOk returns a tuple with the WhiteListDomains field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerDetailsDto) GetWhiteListDomainsOk() ([]WhiteListDomainDto, bool) {
	if o == nil || IsNil(o.WhiteListDomains) {
		return nil, false
	}
	return o.WhiteListDomains, true
}

// SetWhiteListDomains sets field value
func (o *PartnerDetailsDto) SetWhiteListDomains(v []WhiteListDomainDto) {
	o.WhiteListDomains = v
}

// GetPartnerColorSettings returns the PartnerColorSettings field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetPartnerColorSettings() PartnerColorSettingsDto {
	if o == nil || IsNil(o.PartnerColorSettings) {
		var ret PartnerColorSettingsDto
		return ret
	}
	return *o.PartnerColorSettings
}

// GetPartnerColorSettingsOk returns a tuple with the PartnerColorSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetPartnerColorSettingsOk() (*PartnerColorSettingsDto, bool) {
	if o == nil || IsNil(o.PartnerColorSettings) {
		return nil, false
	}
	return o.PartnerColorSettings, true
}

// HasPartnerColorSettings returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasPartnerColorSettings() bool {
	if o != nil && !IsNil(o.PartnerColorSettings) {
		return true
	}

	return false
}

// SetPartnerColorSettings gets a reference to the given PartnerColorSettingsDto and assigns it to the PartnerColorSettings field.
func (o *PartnerDetailsDto) SetPartnerColorSettings(v PartnerColorSettingsDto) {
	o.PartnerColorSettings = &v
}

// GetPartnerImageSettings returns the PartnerImageSettings field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetPartnerImageSettings() PartnerImageSettingsDto {
	if o == nil || IsNil(o.PartnerImageSettings) {
		var ret PartnerImageSettingsDto
		return ret
	}
	return *o.PartnerImageSettings
}

// GetPartnerImageSettingsOk returns a tuple with the PartnerImageSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetPartnerImageSettingsOk() (*PartnerImageSettingsDto, bool) {
	if o == nil || IsNil(o.PartnerImageSettings) {
		return nil, false
	}
	return o.PartnerImageSettings, true
}

// HasPartnerImageSettings returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasPartnerImageSettings() bool {
	if o != nil && !IsNil(o.PartnerImageSettings) {
		return true
	}

	return false
}

// SetPartnerImageSettings gets a reference to the given PartnerImageSettingsDto and assigns it to the PartnerImageSettings field.
func (o *PartnerDetailsDto) SetPartnerImageSettings(v PartnerImageSettingsDto) {
	o.PartnerImageSettings = &v
}

func (o PartnerDetailsDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PartnerDetailsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["link"] = o.Link.Get()
	toSerialize["domain"] = o.Domain.Get()
	toSerialize["country"] = o.Country.Get()
	toSerialize["city"] = o.City.Get()
	toSerialize["vatNumber"] = o.VatNumber.Get()
	toSerialize["backgroundImageUrl"] = o.BackgroundImageUrl.Get()
	toSerialize["address"] = o.Address.Get()
	toSerialize["logo"] = o.Logo.Get()
	toSerialize["phone"] = o.Phone.Get()
	toSerialize["email"] = o.Email.Get()
	toSerialize["paymentEnabled"] = o.PaymentEnabled.Get()
	toSerialize["allowRegistration"] = o.AllowRegistration.Get()
	toSerialize["requiredUserApproval"] = o.RequiredUserApproval.Get()
	if o.Organizations != nil {
		toSerialize["organizations"] = o.Organizations
	}
	if o.WhiteListDomains != nil {
		toSerialize["whiteListDomains"] = o.WhiteListDomains
	}
	if !IsNil(o.PartnerColorSettings) {
		toSerialize["partnerColorSettings"] = o.PartnerColorSettings
	}
	if !IsNil(o.PartnerImageSettings) {
		toSerialize["partnerImageSettings"] = o.PartnerImageSettings
	}
	return toSerialize, nil
}

func (o *PartnerDetailsDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"link",
		"domain",
		"country",
		"city",
		"vatNumber",
		"backgroundImageUrl",
		"address",
		"logo",
		"phone",
		"email",
		"paymentEnabled",
		"allowRegistration",
		"requiredUserApproval",
		"organizations",
		"whiteListDomains",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPartnerDetailsDto := _PartnerDetailsDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPartnerDetailsDto)

	if err != nil {
		return err
	}

	*o = PartnerDetailsDto(varPartnerDetailsDto)

	return err
}

type NullablePartnerDetailsDto struct {
	value *PartnerDetailsDto
	isSet bool
}

func (v NullablePartnerDetailsDto) Get() *PartnerDetailsDto {
	return v.value
}

func (v *NullablePartnerDetailsDto) Set(val *PartnerDetailsDto) {
	v.value = val
	v.isSet = true
}

func (v NullablePartnerDetailsDto) IsSet() bool {
	return v.isSet
}

func (v *NullablePartnerDetailsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartnerDetailsDto(val *PartnerDetailsDto) *NullablePartnerDetailsDto {
	return &NullablePartnerDetailsDto{value: val, isSet: true}
}

func (v NullablePartnerDetailsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartnerDetailsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


