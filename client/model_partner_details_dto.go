/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the PartnerDetailsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PartnerDetailsDto{}

// PartnerDetailsDto struct for PartnerDetailsDto
type PartnerDetailsDto struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Link *string `json:"link,omitempty"`
	Domain *string `json:"domain,omitempty"`
	Country *string `json:"country,omitempty"`
	City *string `json:"city,omitempty"`
	VatNumber *string `json:"vatNumber,omitempty"`
	BackgroundImageUrl *string `json:"backgroundImageUrl,omitempty"`
	Address *string `json:"address,omitempty"`
	Logo *string `json:"logo,omitempty"`
	Phone *string `json:"phone,omitempty"`
	Email *string `json:"email,omitempty"`
	PaymentEnabled *bool `json:"paymentEnabled,omitempty"`
	AllowRegistration *bool `json:"allowRegistration,omitempty"`
	RequiredUserApproval *bool `json:"requiredUserApproval,omitempty"`
	Organizations []CommonDropdownDto `json:"organizations,omitempty"`
	WhiteListDomains []WhiteListDomainDto `json:"whiteListDomains,omitempty"`
	PartnerColorSettings *PartnerColorSettingsDto `json:"partnerColorSettings,omitempty"`
	PartnerImageSettings *PartnerImageSettingsDto `json:"partnerImageSettings,omitempty"`
}

// NewPartnerDetailsDto instantiates a new PartnerDetailsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartnerDetailsDto() *PartnerDetailsDto {
	this := PartnerDetailsDto{}
	return &this
}

// NewPartnerDetailsDtoWithDefaults instantiates a new PartnerDetailsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartnerDetailsDtoWithDefaults() *PartnerDetailsDto {
	this := PartnerDetailsDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PartnerDetailsDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PartnerDetailsDto) SetName(v string) {
	o.Name = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *PartnerDetailsDto) SetLink(v string) {
	o.Link = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *PartnerDetailsDto) SetDomain(v string) {
	o.Domain = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *PartnerDetailsDto) SetCountry(v string) {
	o.Country = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *PartnerDetailsDto) SetCity(v string) {
	o.City = &v
}

// GetVatNumber returns the VatNumber field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetVatNumber() string {
	if o == nil || IsNil(o.VatNumber) {
		var ret string
		return ret
	}
	return *o.VatNumber
}

// GetVatNumberOk returns a tuple with the VatNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetVatNumberOk() (*string, bool) {
	if o == nil || IsNil(o.VatNumber) {
		return nil, false
	}
	return o.VatNumber, true
}

// HasVatNumber returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasVatNumber() bool {
	if o != nil && !IsNil(o.VatNumber) {
		return true
	}

	return false
}

// SetVatNumber gets a reference to the given string and assigns it to the VatNumber field.
func (o *PartnerDetailsDto) SetVatNumber(v string) {
	o.VatNumber = &v
}

// GetBackgroundImageUrl returns the BackgroundImageUrl field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetBackgroundImageUrl() string {
	if o == nil || IsNil(o.BackgroundImageUrl) {
		var ret string
		return ret
	}
	return *o.BackgroundImageUrl
}

// GetBackgroundImageUrlOk returns a tuple with the BackgroundImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetBackgroundImageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BackgroundImageUrl) {
		return nil, false
	}
	return o.BackgroundImageUrl, true
}

// HasBackgroundImageUrl returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasBackgroundImageUrl() bool {
	if o != nil && !IsNil(o.BackgroundImageUrl) {
		return true
	}

	return false
}

// SetBackgroundImageUrl gets a reference to the given string and assigns it to the BackgroundImageUrl field.
func (o *PartnerDetailsDto) SetBackgroundImageUrl(v string) {
	o.BackgroundImageUrl = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *PartnerDetailsDto) SetAddress(v string) {
	o.Address = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *PartnerDetailsDto) SetLogo(v string) {
	o.Logo = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *PartnerDetailsDto) SetPhone(v string) {
	o.Phone = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *PartnerDetailsDto) SetEmail(v string) {
	o.Email = &v
}

// GetPaymentEnabled returns the PaymentEnabled field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetPaymentEnabled() bool {
	if o == nil || IsNil(o.PaymentEnabled) {
		var ret bool
		return ret
	}
	return *o.PaymentEnabled
}

// GetPaymentEnabledOk returns a tuple with the PaymentEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetPaymentEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.PaymentEnabled) {
		return nil, false
	}
	return o.PaymentEnabled, true
}

// HasPaymentEnabled returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasPaymentEnabled() bool {
	if o != nil && !IsNil(o.PaymentEnabled) {
		return true
	}

	return false
}

// SetPaymentEnabled gets a reference to the given bool and assigns it to the PaymentEnabled field.
func (o *PartnerDetailsDto) SetPaymentEnabled(v bool) {
	o.PaymentEnabled = &v
}

// GetAllowRegistration returns the AllowRegistration field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetAllowRegistration() bool {
	if o == nil || IsNil(o.AllowRegistration) {
		var ret bool
		return ret
	}
	return *o.AllowRegistration
}

// GetAllowRegistrationOk returns a tuple with the AllowRegistration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetAllowRegistrationOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowRegistration) {
		return nil, false
	}
	return o.AllowRegistration, true
}

// HasAllowRegistration returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasAllowRegistration() bool {
	if o != nil && !IsNil(o.AllowRegistration) {
		return true
	}

	return false
}

// SetAllowRegistration gets a reference to the given bool and assigns it to the AllowRegistration field.
func (o *PartnerDetailsDto) SetAllowRegistration(v bool) {
	o.AllowRegistration = &v
}

// GetRequiredUserApproval returns the RequiredUserApproval field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetRequiredUserApproval() bool {
	if o == nil || IsNil(o.RequiredUserApproval) {
		var ret bool
		return ret
	}
	return *o.RequiredUserApproval
}

// GetRequiredUserApprovalOk returns a tuple with the RequiredUserApproval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetRequiredUserApprovalOk() (*bool, bool) {
	if o == nil || IsNil(o.RequiredUserApproval) {
		return nil, false
	}
	return o.RequiredUserApproval, true
}

// HasRequiredUserApproval returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasRequiredUserApproval() bool {
	if o != nil && !IsNil(o.RequiredUserApproval) {
		return true
	}

	return false
}

// SetRequiredUserApproval gets a reference to the given bool and assigns it to the RequiredUserApproval field.
func (o *PartnerDetailsDto) SetRequiredUserApproval(v bool) {
	o.RequiredUserApproval = &v
}

// GetOrganizations returns the Organizations field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetOrganizations() []CommonDropdownDto {
	if o == nil || IsNil(o.Organizations) {
		var ret []CommonDropdownDto
		return ret
	}
	return o.Organizations
}

// GetOrganizationsOk returns a tuple with the Organizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetOrganizationsOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.Organizations) {
		return nil, false
	}
	return o.Organizations, true
}

// HasOrganizations returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasOrganizations() bool {
	if o != nil && !IsNil(o.Organizations) {
		return true
	}

	return false
}

// SetOrganizations gets a reference to the given []CommonDropdownDto and assigns it to the Organizations field.
func (o *PartnerDetailsDto) SetOrganizations(v []CommonDropdownDto) {
	o.Organizations = v
}

// GetWhiteListDomains returns the WhiteListDomains field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetWhiteListDomains() []WhiteListDomainDto {
	if o == nil || IsNil(o.WhiteListDomains) {
		var ret []WhiteListDomainDto
		return ret
	}
	return o.WhiteListDomains
}

// GetWhiteListDomainsOk returns a tuple with the WhiteListDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetWhiteListDomainsOk() ([]WhiteListDomainDto, bool) {
	if o == nil || IsNil(o.WhiteListDomains) {
		return nil, false
	}
	return o.WhiteListDomains, true
}

// HasWhiteListDomains returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasWhiteListDomains() bool {
	if o != nil && !IsNil(o.WhiteListDomains) {
		return true
	}

	return false
}

// SetWhiteListDomains gets a reference to the given []WhiteListDomainDto and assigns it to the WhiteListDomains field.
func (o *PartnerDetailsDto) SetWhiteListDomains(v []WhiteListDomainDto) {
	o.WhiteListDomains = v
}

// GetPartnerColorSettings returns the PartnerColorSettings field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetPartnerColorSettings() PartnerColorSettingsDto {
	if o == nil || IsNil(o.PartnerColorSettings) {
		var ret PartnerColorSettingsDto
		return ret
	}
	return *o.PartnerColorSettings
}

// GetPartnerColorSettingsOk returns a tuple with the PartnerColorSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetPartnerColorSettingsOk() (*PartnerColorSettingsDto, bool) {
	if o == nil || IsNil(o.PartnerColorSettings) {
		return nil, false
	}
	return o.PartnerColorSettings, true
}

// HasPartnerColorSettings returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasPartnerColorSettings() bool {
	if o != nil && !IsNil(o.PartnerColorSettings) {
		return true
	}

	return false
}

// SetPartnerColorSettings gets a reference to the given PartnerColorSettingsDto and assigns it to the PartnerColorSettings field.
func (o *PartnerDetailsDto) SetPartnerColorSettings(v PartnerColorSettingsDto) {
	o.PartnerColorSettings = &v
}

// GetPartnerImageSettings returns the PartnerImageSettings field value if set, zero value otherwise.
func (o *PartnerDetailsDto) GetPartnerImageSettings() PartnerImageSettingsDto {
	if o == nil || IsNil(o.PartnerImageSettings) {
		var ret PartnerImageSettingsDto
		return ret
	}
	return *o.PartnerImageSettings
}

// GetPartnerImageSettingsOk returns a tuple with the PartnerImageSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDetailsDto) GetPartnerImageSettingsOk() (*PartnerImageSettingsDto, bool) {
	if o == nil || IsNil(o.PartnerImageSettings) {
		return nil, false
	}
	return o.PartnerImageSettings, true
}

// HasPartnerImageSettings returns a boolean if a field has been set.
func (o *PartnerDetailsDto) HasPartnerImageSettings() bool {
	if o != nil && !IsNil(o.PartnerImageSettings) {
		return true
	}

	return false
}

// SetPartnerImageSettings gets a reference to the given PartnerImageSettingsDto and assigns it to the PartnerImageSettings field.
func (o *PartnerDetailsDto) SetPartnerImageSettings(v PartnerImageSettingsDto) {
	o.PartnerImageSettings = &v
}

func (o PartnerDetailsDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PartnerDetailsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.VatNumber) {
		toSerialize["vatNumber"] = o.VatNumber
	}
	if !IsNil(o.BackgroundImageUrl) {
		toSerialize["backgroundImageUrl"] = o.BackgroundImageUrl
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.PaymentEnabled) {
		toSerialize["paymentEnabled"] = o.PaymentEnabled
	}
	if !IsNil(o.AllowRegistration) {
		toSerialize["allowRegistration"] = o.AllowRegistration
	}
	if !IsNil(o.RequiredUserApproval) {
		toSerialize["requiredUserApproval"] = o.RequiredUserApproval
	}
	if !IsNil(o.Organizations) {
		toSerialize["organizations"] = o.Organizations
	}
	if !IsNil(o.WhiteListDomains) {
		toSerialize["whiteListDomains"] = o.WhiteListDomains
	}
	if !IsNil(o.PartnerColorSettings) {
		toSerialize["partnerColorSettings"] = o.PartnerColorSettings
	}
	if !IsNil(o.PartnerImageSettings) {
		toSerialize["partnerImageSettings"] = o.PartnerImageSettings
	}
	return toSerialize, nil
}

type NullablePartnerDetailsDto struct {
	value *PartnerDetailsDto
	isSet bool
}

func (v NullablePartnerDetailsDto) Get() *PartnerDetailsDto {
	return v.value
}

func (v *NullablePartnerDetailsDto) Set(val *PartnerDetailsDto) {
	v.value = val
	v.isSet = true
}

func (v NullablePartnerDetailsDto) IsSet() bool {
	return v.isSet
}

func (v *NullablePartnerDetailsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartnerDetailsDto(val *PartnerDetailsDto) *NullablePartnerDetailsDto {
	return &NullablePartnerDetailsDto{value: val, isSet: true}
}

func (v NullablePartnerDetailsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartnerDetailsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


