/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EditVirtualClusterQuotasCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditVirtualClusterQuotasCommand{}

// EditVirtualClusterQuotasCommand struct for EditVirtualClusterQuotasCommand
type EditVirtualClusterQuotasCommand struct {
	VClusterId int32 `json:"vClusterId"`
	WorkloadResources EditVirtualClusterWorkloadResources `json:"workloadResources"`
	CpuLimits EditVirtualClusterResourceLimits `json:"cpuLimits"`
	RamLimits EditVirtualClusterResourceLimits `json:"ramLimits"`
	EphemeralStorageLimits EditVirtualClusterResourceLimits `json:"ephemeralStorageLimits"`
}

type _EditVirtualClusterQuotasCommand EditVirtualClusterQuotasCommand

// NewEditVirtualClusterQuotasCommand instantiates a new EditVirtualClusterQuotasCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditVirtualClusterQuotasCommand(vClusterId int32, workloadResources EditVirtualClusterWorkloadResources, cpuLimits EditVirtualClusterResourceLimits, ramLimits EditVirtualClusterResourceLimits, ephemeralStorageLimits EditVirtualClusterResourceLimits) *EditVirtualClusterQuotasCommand {
	this := EditVirtualClusterQuotasCommand{}
	this.VClusterId = vClusterId
	this.WorkloadResources = workloadResources
	this.CpuLimits = cpuLimits
	this.RamLimits = ramLimits
	this.EphemeralStorageLimits = ephemeralStorageLimits
	return &this
}

// NewEditVirtualClusterQuotasCommandWithDefaults instantiates a new EditVirtualClusterQuotasCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditVirtualClusterQuotasCommandWithDefaults() *EditVirtualClusterQuotasCommand {
	this := EditVirtualClusterQuotasCommand{}
	return &this
}

// GetVClusterId returns the VClusterId field value
func (o *EditVirtualClusterQuotasCommand) GetVClusterId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VClusterId
}

// GetVClusterIdOk returns a tuple with the VClusterId field value
// and a boolean to check if the value has been set.
func (o *EditVirtualClusterQuotasCommand) GetVClusterIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VClusterId, true
}

// SetVClusterId sets field value
func (o *EditVirtualClusterQuotasCommand) SetVClusterId(v int32) {
	o.VClusterId = v
}

// GetWorkloadResources returns the WorkloadResources field value
func (o *EditVirtualClusterQuotasCommand) GetWorkloadResources() EditVirtualClusterWorkloadResources {
	if o == nil {
		var ret EditVirtualClusterWorkloadResources
		return ret
	}

	return o.WorkloadResources
}

// GetWorkloadResourcesOk returns a tuple with the WorkloadResources field value
// and a boolean to check if the value has been set.
func (o *EditVirtualClusterQuotasCommand) GetWorkloadResourcesOk() (*EditVirtualClusterWorkloadResources, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkloadResources, true
}

// SetWorkloadResources sets field value
func (o *EditVirtualClusterQuotasCommand) SetWorkloadResources(v EditVirtualClusterWorkloadResources) {
	o.WorkloadResources = v
}

// GetCpuLimits returns the CpuLimits field value
func (o *EditVirtualClusterQuotasCommand) GetCpuLimits() EditVirtualClusterResourceLimits {
	if o == nil {
		var ret EditVirtualClusterResourceLimits
		return ret
	}

	return o.CpuLimits
}

// GetCpuLimitsOk returns a tuple with the CpuLimits field value
// and a boolean to check if the value has been set.
func (o *EditVirtualClusterQuotasCommand) GetCpuLimitsOk() (*EditVirtualClusterResourceLimits, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CpuLimits, true
}

// SetCpuLimits sets field value
func (o *EditVirtualClusterQuotasCommand) SetCpuLimits(v EditVirtualClusterResourceLimits) {
	o.CpuLimits = v
}

// GetRamLimits returns the RamLimits field value
func (o *EditVirtualClusterQuotasCommand) GetRamLimits() EditVirtualClusterResourceLimits {
	if o == nil {
		var ret EditVirtualClusterResourceLimits
		return ret
	}

	return o.RamLimits
}

// GetRamLimitsOk returns a tuple with the RamLimits field value
// and a boolean to check if the value has been set.
func (o *EditVirtualClusterQuotasCommand) GetRamLimitsOk() (*EditVirtualClusterResourceLimits, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RamLimits, true
}

// SetRamLimits sets field value
func (o *EditVirtualClusterQuotasCommand) SetRamLimits(v EditVirtualClusterResourceLimits) {
	o.RamLimits = v
}

// GetEphemeralStorageLimits returns the EphemeralStorageLimits field value
func (o *EditVirtualClusterQuotasCommand) GetEphemeralStorageLimits() EditVirtualClusterResourceLimits {
	if o == nil {
		var ret EditVirtualClusterResourceLimits
		return ret
	}

	return o.EphemeralStorageLimits
}

// GetEphemeralStorageLimitsOk returns a tuple with the EphemeralStorageLimits field value
// and a boolean to check if the value has been set.
func (o *EditVirtualClusterQuotasCommand) GetEphemeralStorageLimitsOk() (*EditVirtualClusterResourceLimits, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EphemeralStorageLimits, true
}

// SetEphemeralStorageLimits sets field value
func (o *EditVirtualClusterQuotasCommand) SetEphemeralStorageLimits(v EditVirtualClusterResourceLimits) {
	o.EphemeralStorageLimits = v
}

func (o EditVirtualClusterQuotasCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditVirtualClusterQuotasCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["vClusterId"] = o.VClusterId
	toSerialize["workloadResources"] = o.WorkloadResources
	toSerialize["cpuLimits"] = o.CpuLimits
	toSerialize["ramLimits"] = o.RamLimits
	toSerialize["ephemeralStorageLimits"] = o.EphemeralStorageLimits
	return toSerialize, nil
}

func (o *EditVirtualClusterQuotasCommand) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"vClusterId",
		"workloadResources",
		"cpuLimits",
		"ramLimits",
		"ephemeralStorageLimits",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEditVirtualClusterQuotasCommand := _EditVirtualClusterQuotasCommand{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEditVirtualClusterQuotasCommand)

	if err != nil {
		return err
	}

	*o = EditVirtualClusterQuotasCommand(varEditVirtualClusterQuotasCommand)

	return err
}

type NullableEditVirtualClusterQuotasCommand struct {
	value *EditVirtualClusterQuotasCommand
	isSet bool
}

func (v NullableEditVirtualClusterQuotasCommand) Get() *EditVirtualClusterQuotasCommand {
	return v.value
}

func (v *NullableEditVirtualClusterQuotasCommand) Set(val *EditVirtualClusterQuotasCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableEditVirtualClusterQuotasCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableEditVirtualClusterQuotasCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditVirtualClusterQuotasCommand(val *EditVirtualClusterQuotasCommand) *NullableEditVirtualClusterQuotasCommand {
	return &NullableEditVirtualClusterQuotasCommand{value: val, isSet: true}
}

func (v NullableEditVirtualClusterQuotasCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditVirtualClusterQuotasCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


