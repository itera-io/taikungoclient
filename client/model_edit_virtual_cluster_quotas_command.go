/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the EditVirtualClusterQuotasCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditVirtualClusterQuotasCommand{}

// EditVirtualClusterQuotasCommand struct for EditVirtualClusterQuotasCommand
type EditVirtualClusterQuotasCommand struct {
	VClusterId *int32 `json:"vClusterId,omitempty"`
	ResourceQuotas *EditVirtualClusterResourceQuotas `json:"resourceQuotas,omitempty"`
	CpuLimitRanges *EditVirtualClusterResourceLimitRanges `json:"cpuLimitRanges,omitempty"`
	RamLimitRanges *EditVirtualClusterResourceLimitRanges `json:"ramLimitRanges,omitempty"`
	EphemeralStorageLimitRanges *EditVirtualClusterResourceLimitRanges `json:"ephemeralStorageLimitRanges,omitempty"`
}

// NewEditVirtualClusterQuotasCommand instantiates a new EditVirtualClusterQuotasCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditVirtualClusterQuotasCommand() *EditVirtualClusterQuotasCommand {
	this := EditVirtualClusterQuotasCommand{}
	return &this
}

// NewEditVirtualClusterQuotasCommandWithDefaults instantiates a new EditVirtualClusterQuotasCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditVirtualClusterQuotasCommandWithDefaults() *EditVirtualClusterQuotasCommand {
	this := EditVirtualClusterQuotasCommand{}
	return &this
}

// GetVClusterId returns the VClusterId field value if set, zero value otherwise.
func (o *EditVirtualClusterQuotasCommand) GetVClusterId() int32 {
	if o == nil || IsNil(o.VClusterId) {
		var ret int32
		return ret
	}
	return *o.VClusterId
}

// GetVClusterIdOk returns a tuple with the VClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditVirtualClusterQuotasCommand) GetVClusterIdOk() (*int32, bool) {
	if o == nil || IsNil(o.VClusterId) {
		return nil, false
	}
	return o.VClusterId, true
}

// HasVClusterId returns a boolean if a field has been set.
func (o *EditVirtualClusterQuotasCommand) HasVClusterId() bool {
	if o != nil && !IsNil(o.VClusterId) {
		return true
	}

	return false
}

// SetVClusterId gets a reference to the given int32 and assigns it to the VClusterId field.
func (o *EditVirtualClusterQuotasCommand) SetVClusterId(v int32) {
	o.VClusterId = &v
}

// GetResourceQuotas returns the ResourceQuotas field value if set, zero value otherwise.
func (o *EditVirtualClusterQuotasCommand) GetResourceQuotas() EditVirtualClusterResourceQuotas {
	if o == nil || IsNil(o.ResourceQuotas) {
		var ret EditVirtualClusterResourceQuotas
		return ret
	}
	return *o.ResourceQuotas
}

// GetResourceQuotasOk returns a tuple with the ResourceQuotas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditVirtualClusterQuotasCommand) GetResourceQuotasOk() (*EditVirtualClusterResourceQuotas, bool) {
	if o == nil || IsNil(o.ResourceQuotas) {
		return nil, false
	}
	return o.ResourceQuotas, true
}

// HasResourceQuotas returns a boolean if a field has been set.
func (o *EditVirtualClusterQuotasCommand) HasResourceQuotas() bool {
	if o != nil && !IsNil(o.ResourceQuotas) {
		return true
	}

	return false
}

// SetResourceQuotas gets a reference to the given EditVirtualClusterResourceQuotas and assigns it to the ResourceQuotas field.
func (o *EditVirtualClusterQuotasCommand) SetResourceQuotas(v EditVirtualClusterResourceQuotas) {
	o.ResourceQuotas = &v
}

// GetCpuLimitRanges returns the CpuLimitRanges field value if set, zero value otherwise.
func (o *EditVirtualClusterQuotasCommand) GetCpuLimitRanges() EditVirtualClusterResourceLimitRanges {
	if o == nil || IsNil(o.CpuLimitRanges) {
		var ret EditVirtualClusterResourceLimitRanges
		return ret
	}
	return *o.CpuLimitRanges
}

// GetCpuLimitRangesOk returns a tuple with the CpuLimitRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditVirtualClusterQuotasCommand) GetCpuLimitRangesOk() (*EditVirtualClusterResourceLimitRanges, bool) {
	if o == nil || IsNil(o.CpuLimitRanges) {
		return nil, false
	}
	return o.CpuLimitRanges, true
}

// HasCpuLimitRanges returns a boolean if a field has been set.
func (o *EditVirtualClusterQuotasCommand) HasCpuLimitRanges() bool {
	if o != nil && !IsNil(o.CpuLimitRanges) {
		return true
	}

	return false
}

// SetCpuLimitRanges gets a reference to the given EditVirtualClusterResourceLimitRanges and assigns it to the CpuLimitRanges field.
func (o *EditVirtualClusterQuotasCommand) SetCpuLimitRanges(v EditVirtualClusterResourceLimitRanges) {
	o.CpuLimitRanges = &v
}

// GetRamLimitRanges returns the RamLimitRanges field value if set, zero value otherwise.
func (o *EditVirtualClusterQuotasCommand) GetRamLimitRanges() EditVirtualClusterResourceLimitRanges {
	if o == nil || IsNil(o.RamLimitRanges) {
		var ret EditVirtualClusterResourceLimitRanges
		return ret
	}
	return *o.RamLimitRanges
}

// GetRamLimitRangesOk returns a tuple with the RamLimitRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditVirtualClusterQuotasCommand) GetRamLimitRangesOk() (*EditVirtualClusterResourceLimitRanges, bool) {
	if o == nil || IsNil(o.RamLimitRanges) {
		return nil, false
	}
	return o.RamLimitRanges, true
}

// HasRamLimitRanges returns a boolean if a field has been set.
func (o *EditVirtualClusterQuotasCommand) HasRamLimitRanges() bool {
	if o != nil && !IsNil(o.RamLimitRanges) {
		return true
	}

	return false
}

// SetRamLimitRanges gets a reference to the given EditVirtualClusterResourceLimitRanges and assigns it to the RamLimitRanges field.
func (o *EditVirtualClusterQuotasCommand) SetRamLimitRanges(v EditVirtualClusterResourceLimitRanges) {
	o.RamLimitRanges = &v
}

// GetEphemeralStorageLimitRanges returns the EphemeralStorageLimitRanges field value if set, zero value otherwise.
func (o *EditVirtualClusterQuotasCommand) GetEphemeralStorageLimitRanges() EditVirtualClusterResourceLimitRanges {
	if o == nil || IsNil(o.EphemeralStorageLimitRanges) {
		var ret EditVirtualClusterResourceLimitRanges
		return ret
	}
	return *o.EphemeralStorageLimitRanges
}

// GetEphemeralStorageLimitRangesOk returns a tuple with the EphemeralStorageLimitRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditVirtualClusterQuotasCommand) GetEphemeralStorageLimitRangesOk() (*EditVirtualClusterResourceLimitRanges, bool) {
	if o == nil || IsNil(o.EphemeralStorageLimitRanges) {
		return nil, false
	}
	return o.EphemeralStorageLimitRanges, true
}

// HasEphemeralStorageLimitRanges returns a boolean if a field has been set.
func (o *EditVirtualClusterQuotasCommand) HasEphemeralStorageLimitRanges() bool {
	if o != nil && !IsNil(o.EphemeralStorageLimitRanges) {
		return true
	}

	return false
}

// SetEphemeralStorageLimitRanges gets a reference to the given EditVirtualClusterResourceLimitRanges and assigns it to the EphemeralStorageLimitRanges field.
func (o *EditVirtualClusterQuotasCommand) SetEphemeralStorageLimitRanges(v EditVirtualClusterResourceLimitRanges) {
	o.EphemeralStorageLimitRanges = &v
}

func (o EditVirtualClusterQuotasCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditVirtualClusterQuotasCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VClusterId) {
		toSerialize["vClusterId"] = o.VClusterId
	}
	if !IsNil(o.ResourceQuotas) {
		toSerialize["resourceQuotas"] = o.ResourceQuotas
	}
	if !IsNil(o.CpuLimitRanges) {
		toSerialize["cpuLimitRanges"] = o.CpuLimitRanges
	}
	if !IsNil(o.RamLimitRanges) {
		toSerialize["ramLimitRanges"] = o.RamLimitRanges
	}
	if !IsNil(o.EphemeralStorageLimitRanges) {
		toSerialize["ephemeralStorageLimitRanges"] = o.EphemeralStorageLimitRanges
	}
	return toSerialize, nil
}

type NullableEditVirtualClusterQuotasCommand struct {
	value *EditVirtualClusterQuotasCommand
	isSet bool
}

func (v NullableEditVirtualClusterQuotasCommand) Get() *EditVirtualClusterQuotasCommand {
	return v.value
}

func (v *NullableEditVirtualClusterQuotasCommand) Set(val *EditVirtualClusterQuotasCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableEditVirtualClusterQuotasCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableEditVirtualClusterQuotasCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditVirtualClusterQuotasCommand(val *EditVirtualClusterQuotasCommand) *NullableEditVirtualClusterQuotasCommand {
	return &NullableEditVirtualClusterQuotasCommand{value: val, isSet: true}
}

func (v NullableEditVirtualClusterQuotasCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditVirtualClusterQuotasCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


