// Code generated by go-swagger; DO NOT EDIT.

package stand_alone

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// StandAloneProjectDetailsReader is a Reader for the StandAloneProjectDetails structure.
type StandAloneProjectDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StandAloneProjectDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStandAloneProjectDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStandAloneProjectDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewStandAloneProjectDetailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStandAloneProjectDetailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStandAloneProjectDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStandAloneProjectDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewStandAloneProjectDetailsOK creates a StandAloneProjectDetailsOK with default headers values
func NewStandAloneProjectDetailsOK() *StandAloneProjectDetailsOK {
	return &StandAloneProjectDetailsOK{}
}

/* StandAloneProjectDetailsOK describes a response with status code 200, with default header values.

Success
*/
type StandAloneProjectDetailsOK struct {
	Payload *models.ProjectFullListDto
}

func (o *StandAloneProjectDetailsOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/StandAlone/project/{projectId}][%d] standAloneProjectDetailsOK  %+v", 200, o.Payload)
}
func (o *StandAloneProjectDetailsOK) GetPayload() *models.ProjectFullListDto {
	return o.Payload
}

func (o *StandAloneProjectDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectFullListDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStandAloneProjectDetailsBadRequest creates a StandAloneProjectDetailsBadRequest with default headers values
func NewStandAloneProjectDetailsBadRequest() *StandAloneProjectDetailsBadRequest {
	return &StandAloneProjectDetailsBadRequest{}
}

/* StandAloneProjectDetailsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type StandAloneProjectDetailsBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *StandAloneProjectDetailsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/StandAlone/project/{projectId}][%d] standAloneProjectDetailsBadRequest  %+v", 400, o.Payload)
}
func (o *StandAloneProjectDetailsBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *StandAloneProjectDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStandAloneProjectDetailsUnauthorized creates a StandAloneProjectDetailsUnauthorized with default headers values
func NewStandAloneProjectDetailsUnauthorized() *StandAloneProjectDetailsUnauthorized {
	return &StandAloneProjectDetailsUnauthorized{}
}

/* StandAloneProjectDetailsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type StandAloneProjectDetailsUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *StandAloneProjectDetailsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/StandAlone/project/{projectId}][%d] standAloneProjectDetailsUnauthorized  %+v", 401, o.Payload)
}
func (o *StandAloneProjectDetailsUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *StandAloneProjectDetailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStandAloneProjectDetailsForbidden creates a StandAloneProjectDetailsForbidden with default headers values
func NewStandAloneProjectDetailsForbidden() *StandAloneProjectDetailsForbidden {
	return &StandAloneProjectDetailsForbidden{}
}

/* StandAloneProjectDetailsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type StandAloneProjectDetailsForbidden struct {
	Payload *models.ProblemDetails
}

func (o *StandAloneProjectDetailsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/StandAlone/project/{projectId}][%d] standAloneProjectDetailsForbidden  %+v", 403, o.Payload)
}
func (o *StandAloneProjectDetailsForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *StandAloneProjectDetailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStandAloneProjectDetailsNotFound creates a StandAloneProjectDetailsNotFound with default headers values
func NewStandAloneProjectDetailsNotFound() *StandAloneProjectDetailsNotFound {
	return &StandAloneProjectDetailsNotFound{}
}

/* StandAloneProjectDetailsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type StandAloneProjectDetailsNotFound struct {
	Payload *models.ProblemDetails
}

func (o *StandAloneProjectDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/StandAlone/project/{projectId}][%d] standAloneProjectDetailsNotFound  %+v", 404, o.Payload)
}
func (o *StandAloneProjectDetailsNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *StandAloneProjectDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStandAloneProjectDetailsInternalServerError creates a StandAloneProjectDetailsInternalServerError with default headers values
func NewStandAloneProjectDetailsInternalServerError() *StandAloneProjectDetailsInternalServerError {
	return &StandAloneProjectDetailsInternalServerError{}
}

/* StandAloneProjectDetailsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type StandAloneProjectDetailsInternalServerError struct {
}

func (o *StandAloneProjectDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/StandAlone/project/{projectId}][%d] standAloneProjectDetailsInternalServerError ", 500)
}

func (o *StandAloneProjectDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
