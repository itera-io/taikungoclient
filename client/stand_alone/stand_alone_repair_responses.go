// Code generated by go-swagger; DO NOT EDIT.

package stand_alone

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// StandAloneRepairReader is a Reader for the StandAloneRepair structure.
type StandAloneRepairReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StandAloneRepairReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStandAloneRepairOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStandAloneRepairBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewStandAloneRepairUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStandAloneRepairForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStandAloneRepairNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStandAloneRepairInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewStandAloneRepairOK creates a StandAloneRepairOK with default headers values
func NewStandAloneRepairOK() *StandAloneRepairOK {
	return &StandAloneRepairOK{}
}

/* StandAloneRepairOK describes a response with status code 200, with default header values.

Success
*/
type StandAloneRepairOK struct {
	Payload models.Unit
}

func (o *StandAloneRepairOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAlone/repair][%d] standAloneRepairOK  %+v", 200, o.Payload)
}
func (o *StandAloneRepairOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *StandAloneRepairOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStandAloneRepairBadRequest creates a StandAloneRepairBadRequest with default headers values
func NewStandAloneRepairBadRequest() *StandAloneRepairBadRequest {
	return &StandAloneRepairBadRequest{}
}

/* StandAloneRepairBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type StandAloneRepairBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *StandAloneRepairBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAlone/repair][%d] standAloneRepairBadRequest  %+v", 400, o.Payload)
}
func (o *StandAloneRepairBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *StandAloneRepairBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStandAloneRepairUnauthorized creates a StandAloneRepairUnauthorized with default headers values
func NewStandAloneRepairUnauthorized() *StandAloneRepairUnauthorized {
	return &StandAloneRepairUnauthorized{}
}

/* StandAloneRepairUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type StandAloneRepairUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *StandAloneRepairUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAlone/repair][%d] standAloneRepairUnauthorized  %+v", 401, o.Payload)
}
func (o *StandAloneRepairUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *StandAloneRepairUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStandAloneRepairForbidden creates a StandAloneRepairForbidden with default headers values
func NewStandAloneRepairForbidden() *StandAloneRepairForbidden {
	return &StandAloneRepairForbidden{}
}

/* StandAloneRepairForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type StandAloneRepairForbidden struct {
	Payload *models.ProblemDetails
}

func (o *StandAloneRepairForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAlone/repair][%d] standAloneRepairForbidden  %+v", 403, o.Payload)
}
func (o *StandAloneRepairForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *StandAloneRepairForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStandAloneRepairNotFound creates a StandAloneRepairNotFound with default headers values
func NewStandAloneRepairNotFound() *StandAloneRepairNotFound {
	return &StandAloneRepairNotFound{}
}

/* StandAloneRepairNotFound describes a response with status code 404, with default header values.

Not Found
*/
type StandAloneRepairNotFound struct {
	Payload *models.ProblemDetails
}

func (o *StandAloneRepairNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAlone/repair][%d] standAloneRepairNotFound  %+v", 404, o.Payload)
}
func (o *StandAloneRepairNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *StandAloneRepairNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStandAloneRepairInternalServerError creates a StandAloneRepairInternalServerError with default headers values
func NewStandAloneRepairInternalServerError() *StandAloneRepairInternalServerError {
	return &StandAloneRepairInternalServerError{}
}

/* StandAloneRepairInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type StandAloneRepairInternalServerError struct {
}

func (o *StandAloneRepairInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/StandAlone/repair][%d] standAloneRepairInternalServerError ", 500)
}

func (o *StandAloneRepairInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
