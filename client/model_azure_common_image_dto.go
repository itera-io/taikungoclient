/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the AzureCommonImageDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureCommonImageDto{}

// AzureCommonImageDto struct for AzureCommonImageDto
type AzureCommonImageDto struct {
	Data []AzurePublisherDetails `json:"data,omitempty"`
	Images *BoundImagesForProjectDto `json:"images,omitempty"`
}

// NewAzureCommonImageDto instantiates a new AzureCommonImageDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureCommonImageDto() *AzureCommonImageDto {
	this := AzureCommonImageDto{}
	return &this
}

// NewAzureCommonImageDtoWithDefaults instantiates a new AzureCommonImageDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureCommonImageDtoWithDefaults() *AzureCommonImageDto {
	this := AzureCommonImageDto{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AzureCommonImageDto) GetData() []AzurePublisherDetails {
	if o == nil {
		var ret []AzurePublisherDetails
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureCommonImageDto) GetDataOk() ([]AzurePublisherDetails, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *AzureCommonImageDto) HasData() bool {
	if o != nil && IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []AzurePublisherDetails and assigns it to the Data field.
func (o *AzureCommonImageDto) SetData(v []AzurePublisherDetails) {
	o.Data = v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *AzureCommonImageDto) GetImages() BoundImagesForProjectDto {
	if o == nil || IsNil(o.Images) {
		var ret BoundImagesForProjectDto
		return ret
	}
	return *o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureCommonImageDto) GetImagesOk() (*BoundImagesForProjectDto, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *AzureCommonImageDto) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given BoundImagesForProjectDto and assigns it to the Images field.
func (o *AzureCommonImageDto) SetImages(v BoundImagesForProjectDto) {
	o.Images = &v
}

func (o AzureCommonImageDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureCommonImageDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	return toSerialize, nil
}

type NullableAzureCommonImageDto struct {
	value *AzureCommonImageDto
	isSet bool
}

func (v NullableAzureCommonImageDto) Get() *AzureCommonImageDto {
	return v.value
}

func (v *NullableAzureCommonImageDto) Set(val *AzureCommonImageDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureCommonImageDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureCommonImageDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureCommonImageDto(val *AzureCommonImageDto) *NullableAzureCommonImageDto {
	return &NullableAzureCommonImageDto{value: val, isSet: true}
}

func (v NullableAzureCommonImageDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureCommonImageDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


