/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"time"
)

// checks if the InfraBillingSummaryDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InfraBillingSummaryDto{}

// InfraBillingSummaryDto struct for InfraBillingSummaryDto
type InfraBillingSummaryDto struct {
	OrganizationId   *int32         `json:"organizationId,omitempty"`
	OrganizationName NullableString `json:"organizationName,omitempty"`
	StartDate        *time.Time     `json:"startDate,omitempty"`
	EndDate          NullableTime   `json:"endDate,omitempty"`
	TotalPrice       *float64       `json:"totalPrice,omitempty"`
}

// NewInfraBillingSummaryDto instantiates a new InfraBillingSummaryDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInfraBillingSummaryDto() *InfraBillingSummaryDto {
	this := InfraBillingSummaryDto{}
	return &this
}

// NewInfraBillingSummaryDtoWithDefaults instantiates a new InfraBillingSummaryDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInfraBillingSummaryDtoWithDefaults() *InfraBillingSummaryDto {
	this := InfraBillingSummaryDto{}
	return &this
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *InfraBillingSummaryDto) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfraBillingSummaryDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *InfraBillingSummaryDto) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *InfraBillingSummaryDto) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InfraBillingSummaryDto) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizationName.Get()
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InfraBillingSummaryDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationName.Get(), o.OrganizationName.IsSet()
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *InfraBillingSummaryDto) HasOrganizationName() bool {
	if o != nil && o.OrganizationName.IsSet() {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given NullableString and assigns it to the OrganizationName field.
func (o *InfraBillingSummaryDto) SetOrganizationName(v string) {
	o.OrganizationName.Set(&v)
}

// SetOrganizationNameNil sets the value for OrganizationName to be an explicit nil
func (o *InfraBillingSummaryDto) SetOrganizationNameNil() {
	o.OrganizationName.Set(nil)
}

// UnsetOrganizationName ensures that no value is present for OrganizationName, not even an explicit nil
func (o *InfraBillingSummaryDto) UnsetOrganizationName() {
	o.OrganizationName.Unset()
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *InfraBillingSummaryDto) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfraBillingSummaryDto) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *InfraBillingSummaryDto) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *InfraBillingSummaryDto) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InfraBillingSummaryDto) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.EndDate.Get()
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InfraBillingSummaryDto) GetEndDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndDate.Get(), o.EndDate.IsSet()
}

// HasEndDate returns a boolean if a field has been set.
func (o *InfraBillingSummaryDto) HasEndDate() bool {
	if o != nil && o.EndDate.IsSet() {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given NullableTime and assigns it to the EndDate field.
func (o *InfraBillingSummaryDto) SetEndDate(v time.Time) {
	o.EndDate.Set(&v)
}

// SetEndDateNil sets the value for EndDate to be an explicit nil
func (o *InfraBillingSummaryDto) SetEndDateNil() {
	o.EndDate.Set(nil)
}

// UnsetEndDate ensures that no value is present for EndDate, not even an explicit nil
func (o *InfraBillingSummaryDto) UnsetEndDate() {
	o.EndDate.Unset()
}

// GetTotalPrice returns the TotalPrice field value if set, zero value otherwise.
func (o *InfraBillingSummaryDto) GetTotalPrice() float64 {
	if o == nil || IsNil(o.TotalPrice) {
		var ret float64
		return ret
	}
	return *o.TotalPrice
}

// GetTotalPriceOk returns a tuple with the TotalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfraBillingSummaryDto) GetTotalPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalPrice) {
		return nil, false
	}
	return o.TotalPrice, true
}

// HasTotalPrice returns a boolean if a field has been set.
func (o *InfraBillingSummaryDto) HasTotalPrice() bool {
	if o != nil && !IsNil(o.TotalPrice) {
		return true
	}

	return false
}

// SetTotalPrice gets a reference to the given float64 and assigns it to the TotalPrice field.
func (o *InfraBillingSummaryDto) SetTotalPrice(v float64) {
	o.TotalPrice = &v
}

func (o InfraBillingSummaryDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InfraBillingSummaryDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if o.OrganizationName.IsSet() {
		toSerialize["organizationName"] = o.OrganizationName.Get()
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if o.EndDate.IsSet() {
		toSerialize["endDate"] = o.EndDate.Get()
	}
	if !IsNil(o.TotalPrice) {
		toSerialize["totalPrice"] = o.TotalPrice
	}
	return toSerialize, nil
}

type NullableInfraBillingSummaryDto struct {
	value *InfraBillingSummaryDto
	isSet bool
}

func (v NullableInfraBillingSummaryDto) Get() *InfraBillingSummaryDto {
	return v.value
}

func (v *NullableInfraBillingSummaryDto) Set(val *InfraBillingSummaryDto) {
	v.value = val
	v.isSet = true
}

func (v NullableInfraBillingSummaryDto) IsSet() bool {
	return v.isSet
}

func (v *NullableInfraBillingSummaryDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInfraBillingSummaryDto(val *InfraBillingSummaryDto) *NullableInfraBillingSummaryDto {
	return &NullableInfraBillingSummaryDto{value: val, isSet: true}
}

func (v NullableInfraBillingSummaryDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInfraBillingSummaryDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
