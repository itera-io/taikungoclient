/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the AlertingIntegrationDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertingIntegrationDto{}

// AlertingIntegrationDto struct for AlertingIntegrationDto
type AlertingIntegrationDto struct {
	Url *string `json:"url,omitempty"`
	Token *string `json:"token,omitempty"`
	AlertingIntegrationType *AlertingIntegrationType `json:"alertingIntegrationType,omitempty"`
}

// NewAlertingIntegrationDto instantiates a new AlertingIntegrationDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertingIntegrationDto() *AlertingIntegrationDto {
	this := AlertingIntegrationDto{}
	return &this
}

// NewAlertingIntegrationDtoWithDefaults instantiates a new AlertingIntegrationDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertingIntegrationDtoWithDefaults() *AlertingIntegrationDto {
	this := AlertingIntegrationDto{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AlertingIntegrationDto) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertingIntegrationDto) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AlertingIntegrationDto) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AlertingIntegrationDto) SetUrl(v string) {
	o.Url = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *AlertingIntegrationDto) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertingIntegrationDto) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *AlertingIntegrationDto) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *AlertingIntegrationDto) SetToken(v string) {
	o.Token = &v
}

// GetAlertingIntegrationType returns the AlertingIntegrationType field value if set, zero value otherwise.
func (o *AlertingIntegrationDto) GetAlertingIntegrationType() AlertingIntegrationType {
	if o == nil || IsNil(o.AlertingIntegrationType) {
		var ret AlertingIntegrationType
		return ret
	}
	return *o.AlertingIntegrationType
}

// GetAlertingIntegrationTypeOk returns a tuple with the AlertingIntegrationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertingIntegrationDto) GetAlertingIntegrationTypeOk() (*AlertingIntegrationType, bool) {
	if o == nil || IsNil(o.AlertingIntegrationType) {
		return nil, false
	}
	return o.AlertingIntegrationType, true
}

// HasAlertingIntegrationType returns a boolean if a field has been set.
func (o *AlertingIntegrationDto) HasAlertingIntegrationType() bool {
	if o != nil && !IsNil(o.AlertingIntegrationType) {
		return true
	}

	return false
}

// SetAlertingIntegrationType gets a reference to the given AlertingIntegrationType and assigns it to the AlertingIntegrationType field.
func (o *AlertingIntegrationDto) SetAlertingIntegrationType(v AlertingIntegrationType) {
	o.AlertingIntegrationType = &v
}

func (o AlertingIntegrationDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertingIntegrationDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.AlertingIntegrationType) {
		toSerialize["alertingIntegrationType"] = o.AlertingIntegrationType
	}
	return toSerialize, nil
}

type NullableAlertingIntegrationDto struct {
	value *AlertingIntegrationDto
	isSet bool
}

func (v NullableAlertingIntegrationDto) Get() *AlertingIntegrationDto {
	return v.value
}

func (v *NullableAlertingIntegrationDto) Set(val *AlertingIntegrationDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertingIntegrationDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertingIntegrationDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertingIntegrationDto(val *AlertingIntegrationDto) *NullableAlertingIntegrationDto {
	return &NullableAlertingIntegrationDto{value: val, isSet: true}
}

func (v NullableAlertingIntegrationDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertingIntegrationDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


