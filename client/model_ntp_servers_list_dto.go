/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the NtpServersListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NtpServersListDto{}

// NtpServersListDto struct for NtpServersListDto
type NtpServersListDto struct {
	Id                *int32         `json:"id,omitempty"`
	Address           NullableString `json:"address,omitempty"`
	AccessProfileName NullableString `json:"accessProfileName,omitempty"`
}

// NewNtpServersListDto instantiates a new NtpServersListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNtpServersListDto() *NtpServersListDto {
	this := NtpServersListDto{}
	return &this
}

// NewNtpServersListDtoWithDefaults instantiates a new NtpServersListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNtpServersListDtoWithDefaults() *NtpServersListDto {
	this := NtpServersListDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NtpServersListDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NtpServersListDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NtpServersListDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *NtpServersListDto) SetId(v int32) {
	o.Id = &v
}

// GetAddress returns the Address field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NtpServersListDto) GetAddress() string {
	if o == nil || IsNil(o.Address.Get()) {
		var ret string
		return ret
	}
	return *o.Address.Get()
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NtpServersListDto) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Address.Get(), o.Address.IsSet()
}

// HasAddress returns a boolean if a field has been set.
func (o *NtpServersListDto) HasAddress() bool {
	if o != nil && o.Address.IsSet() {
		return true
	}

	return false
}

// SetAddress gets a reference to the given NullableString and assigns it to the Address field.
func (o *NtpServersListDto) SetAddress(v string) {
	o.Address.Set(&v)
}

// SetAddressNil sets the value for Address to be an explicit nil
func (o *NtpServersListDto) SetAddressNil() {
	o.Address.Set(nil)
}

// UnsetAddress ensures that no value is present for Address, not even an explicit nil
func (o *NtpServersListDto) UnsetAddress() {
	o.Address.Unset()
}

// GetAccessProfileName returns the AccessProfileName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NtpServersListDto) GetAccessProfileName() string {
	if o == nil || IsNil(o.AccessProfileName.Get()) {
		var ret string
		return ret
	}
	return *o.AccessProfileName.Get()
}

// GetAccessProfileNameOk returns a tuple with the AccessProfileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NtpServersListDto) GetAccessProfileNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessProfileName.Get(), o.AccessProfileName.IsSet()
}

// HasAccessProfileName returns a boolean if a field has been set.
func (o *NtpServersListDto) HasAccessProfileName() bool {
	if o != nil && o.AccessProfileName.IsSet() {
		return true
	}

	return false
}

// SetAccessProfileName gets a reference to the given NullableString and assigns it to the AccessProfileName field.
func (o *NtpServersListDto) SetAccessProfileName(v string) {
	o.AccessProfileName.Set(&v)
}

// SetAccessProfileNameNil sets the value for AccessProfileName to be an explicit nil
func (o *NtpServersListDto) SetAccessProfileNameNil() {
	o.AccessProfileName.Set(nil)
}

// UnsetAccessProfileName ensures that no value is present for AccessProfileName, not even an explicit nil
func (o *NtpServersListDto) UnsetAccessProfileName() {
	o.AccessProfileName.Unset()
}

func (o NtpServersListDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NtpServersListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Address.IsSet() {
		toSerialize["address"] = o.Address.Get()
	}
	if o.AccessProfileName.IsSet() {
		toSerialize["accessProfileName"] = o.AccessProfileName.Get()
	}
	return toSerialize, nil
}

type NullableNtpServersListDto struct {
	value *NtpServersListDto
	isSet bool
}

func (v NullableNtpServersListDto) Get() *NtpServersListDto {
	return v.value
}

func (v *NullableNtpServersListDto) Set(val *NtpServersListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableNtpServersListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableNtpServersListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNtpServersListDto(val *NtpServersListDto) *NullableNtpServersListDto {
	return &NullableNtpServersListDto{value: val, isSet: true}
}

func (v NullableNtpServersListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNtpServersListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
