/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the UpdateStageCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateStageCommand{}

// UpdateStageCommand struct for UpdateStageCommand
type UpdateStageCommand struct {
	ProjectId *int32 `json:"projectId,omitempty"`
	Stage *string `json:"stage,omitempty"`
}

// NewUpdateStageCommand instantiates a new UpdateStageCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateStageCommand() *UpdateStageCommand {
	this := UpdateStageCommand{}
	return &this
}

// NewUpdateStageCommandWithDefaults instantiates a new UpdateStageCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateStageCommandWithDefaults() *UpdateStageCommand {
	this := UpdateStageCommand{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *UpdateStageCommand) GetProjectId() int32 {
	if o == nil || IsNil(o.ProjectId) {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStageCommand) GetProjectIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *UpdateStageCommand) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *UpdateStageCommand) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetStage returns the Stage field value if set, zero value otherwise.
func (o *UpdateStageCommand) GetStage() string {
	if o == nil || IsNil(o.Stage) {
		var ret string
		return ret
	}
	return *o.Stage
}

// GetStageOk returns a tuple with the Stage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStageCommand) GetStageOk() (*string, bool) {
	if o == nil || IsNil(o.Stage) {
		return nil, false
	}
	return o.Stage, true
}

// HasStage returns a boolean if a field has been set.
func (o *UpdateStageCommand) HasStage() bool {
	if o != nil && !IsNil(o.Stage) {
		return true
	}

	return false
}

// SetStage gets a reference to the given string and assigns it to the Stage field.
func (o *UpdateStageCommand) SetStage(v string) {
	o.Stage = &v
}

func (o UpdateStageCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateStageCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.Stage) {
		toSerialize["stage"] = o.Stage
	}
	return toSerialize, nil
}

type NullableUpdateStageCommand struct {
	value *UpdateStageCommand
	isSet bool
}

func (v NullableUpdateStageCommand) Get() *UpdateStageCommand {
	return v.value
}

func (v *NullableUpdateStageCommand) Set(val *UpdateStageCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateStageCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateStageCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateStageCommand(val *UpdateStageCommand) *NullableUpdateStageCommand {
	return &NullableUpdateStageCommand{value: val, isSet: true}
}

func (v NullableUpdateStageCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateStageCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


