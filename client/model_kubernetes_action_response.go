/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the KubernetesActionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubernetesActionResponse{}

// KubernetesActionResponse struct for KubernetesActionResponse
type KubernetesActionResponse struct {
	Succeeded []string `json:"succeeded,omitempty"`
	Failed []string `json:"failed,omitempty"`
}

// NewKubernetesActionResponse instantiates a new KubernetesActionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesActionResponse() *KubernetesActionResponse {
	this := KubernetesActionResponse{}
	return &this
}

// NewKubernetesActionResponseWithDefaults instantiates a new KubernetesActionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesActionResponseWithDefaults() *KubernetesActionResponse {
	this := KubernetesActionResponse{}
	return &this
}

// GetSucceeded returns the Succeeded field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubernetesActionResponse) GetSucceeded() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Succeeded
}

// GetSucceededOk returns a tuple with the Succeeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesActionResponse) GetSucceededOk() ([]string, bool) {
	if o == nil || IsNil(o.Succeeded) {
		return nil, false
	}
	return o.Succeeded, true
}

// HasSucceeded returns a boolean if a field has been set.
func (o *KubernetesActionResponse) HasSucceeded() bool {
	if o != nil && !IsNil(o.Succeeded) {
		return true
	}

	return false
}

// SetSucceeded gets a reference to the given []string and assigns it to the Succeeded field.
func (o *KubernetesActionResponse) SetSucceeded(v []string) {
	o.Succeeded = v
}

// GetFailed returns the Failed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubernetesActionResponse) GetFailed() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Failed
}

// GetFailedOk returns a tuple with the Failed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesActionResponse) GetFailedOk() ([]string, bool) {
	if o == nil || IsNil(o.Failed) {
		return nil, false
	}
	return o.Failed, true
}

// HasFailed returns a boolean if a field has been set.
func (o *KubernetesActionResponse) HasFailed() bool {
	if o != nil && !IsNil(o.Failed) {
		return true
	}

	return false
}

// SetFailed gets a reference to the given []string and assigns it to the Failed field.
func (o *KubernetesActionResponse) SetFailed(v []string) {
	o.Failed = v
}

func (o KubernetesActionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubernetesActionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Succeeded != nil {
		toSerialize["succeeded"] = o.Succeeded
	}
	if o.Failed != nil {
		toSerialize["failed"] = o.Failed
	}
	return toSerialize, nil
}

type NullableKubernetesActionResponse struct {
	value *KubernetesActionResponse
	isSet bool
}

func (v NullableKubernetesActionResponse) Get() *KubernetesActionResponse {
	return v.value
}

func (v *NullableKubernetesActionResponse) Set(val *KubernetesActionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesActionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesActionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesActionResponse(val *KubernetesActionResponse) *NullableKubernetesActionResponse {
	return &NullableKubernetesActionResponse{value: val, isSet: true}
}

func (v NullableKubernetesActionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesActionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


