/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the VsphereVmTemplateData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VsphereVmTemplateData{}

// VsphereVmTemplateData struct for VsphereVmTemplateData
type VsphereVmTemplateData struct {
	Name *string `json:"name,omitempty"`
	Size *int32 `json:"size,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
}

// NewVsphereVmTemplateData instantiates a new VsphereVmTemplateData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVsphereVmTemplateData() *VsphereVmTemplateData {
	this := VsphereVmTemplateData{}
	return &this
}

// NewVsphereVmTemplateDataWithDefaults instantiates a new VsphereVmTemplateData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVsphereVmTemplateDataWithDefaults() *VsphereVmTemplateData {
	this := VsphereVmTemplateData{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VsphereVmTemplateData) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsphereVmTemplateData) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VsphereVmTemplateData) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VsphereVmTemplateData) SetName(v string) {
	o.Name = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *VsphereVmTemplateData) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsphereVmTemplateData) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *VsphereVmTemplateData) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *VsphereVmTemplateData) SetSize(v int32) {
	o.Size = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *VsphereVmTemplateData) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsphereVmTemplateData) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *VsphereVmTemplateData) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *VsphereVmTemplateData) SetUuid(v string) {
	o.Uuid = &v
}

func (o VsphereVmTemplateData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VsphereVmTemplateData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	return toSerialize, nil
}

type NullableVsphereVmTemplateData struct {
	value *VsphereVmTemplateData
	isSet bool
}

func (v NullableVsphereVmTemplateData) Get() *VsphereVmTemplateData {
	return v.value
}

func (v *NullableVsphereVmTemplateData) Set(val *VsphereVmTemplateData) {
	v.value = val
	v.isSet = true
}

func (v NullableVsphereVmTemplateData) IsSet() bool {
	return v.isSet
}

func (v *NullableVsphereVmTemplateData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVsphereVmTemplateData(val *VsphereVmTemplateData) *NullableVsphereVmTemplateData {
	return &NullableVsphereVmTemplateData{value: val, isSet: true}
}

func (v NullableVsphereVmTemplateData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVsphereVmTemplateData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


