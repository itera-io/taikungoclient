// Code generated by go-swagger; DO NOT EDIT.

package doc

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// DocumentationDeleteReader is a Reader for the DocumentationDelete structure.
type DocumentationDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DocumentationDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDocumentationDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDocumentationDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDocumentationDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDocumentationDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDocumentationDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDocumentationDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDocumentationDeleteTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDocumentationDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDocumentationDeleteOK creates a DocumentationDeleteOK with default headers values
func NewDocumentationDeleteOK() *DocumentationDeleteOK {
	return &DocumentationDeleteOK{}
}

/* DocumentationDeleteOK describes a response with status code 200, with default header values.

Success
*/
type DocumentationDeleteOK struct {
}

func (o *DocumentationDeleteOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Documentation/delete][%d] documentationDeleteOK ", 200)
}

func (o *DocumentationDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDocumentationDeleteNoContent creates a DocumentationDeleteNoContent with default headers values
func NewDocumentationDeleteNoContent() *DocumentationDeleteNoContent {
	return &DocumentationDeleteNoContent{}
}

/* DocumentationDeleteNoContent describes a response with status code 204, with default header values.

Success
*/
type DocumentationDeleteNoContent struct {
}

func (o *DocumentationDeleteNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Documentation/delete][%d] documentationDeleteNoContent ", 204)
}

func (o *DocumentationDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDocumentationDeleteBadRequest creates a DocumentationDeleteBadRequest with default headers values
func NewDocumentationDeleteBadRequest() *DocumentationDeleteBadRequest {
	return &DocumentationDeleteBadRequest{}
}

/* DocumentationDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DocumentationDeleteBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *DocumentationDeleteBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Documentation/delete][%d] documentationDeleteBadRequest  %+v", 400, o.Payload)
}
func (o *DocumentationDeleteBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *DocumentationDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDocumentationDeleteUnauthorized creates a DocumentationDeleteUnauthorized with default headers values
func NewDocumentationDeleteUnauthorized() *DocumentationDeleteUnauthorized {
	return &DocumentationDeleteUnauthorized{}
}

/* DocumentationDeleteUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DocumentationDeleteUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *DocumentationDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Documentation/delete][%d] documentationDeleteUnauthorized  %+v", 401, o.Payload)
}
func (o *DocumentationDeleteUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DocumentationDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDocumentationDeleteForbidden creates a DocumentationDeleteForbidden with default headers values
func NewDocumentationDeleteForbidden() *DocumentationDeleteForbidden {
	return &DocumentationDeleteForbidden{}
}

/* DocumentationDeleteForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DocumentationDeleteForbidden struct {
	Payload *models.ProblemDetails
}

func (o *DocumentationDeleteForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Documentation/delete][%d] documentationDeleteForbidden  %+v", 403, o.Payload)
}
func (o *DocumentationDeleteForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DocumentationDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDocumentationDeleteNotFound creates a DocumentationDeleteNotFound with default headers values
func NewDocumentationDeleteNotFound() *DocumentationDeleteNotFound {
	return &DocumentationDeleteNotFound{}
}

/* DocumentationDeleteNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DocumentationDeleteNotFound struct {
	Payload *models.ProblemDetails
}

func (o *DocumentationDeleteNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Documentation/delete][%d] documentationDeleteNotFound  %+v", 404, o.Payload)
}
func (o *DocumentationDeleteNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DocumentationDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDocumentationDeleteTooManyRequests creates a DocumentationDeleteTooManyRequests with default headers values
func NewDocumentationDeleteTooManyRequests() *DocumentationDeleteTooManyRequests {
	return &DocumentationDeleteTooManyRequests{}
}

/* DocumentationDeleteTooManyRequests describes a response with status code 429, with default header values.

Client Error
*/
type DocumentationDeleteTooManyRequests struct {
	Payload *models.ProblemDetails
}

func (o *DocumentationDeleteTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Documentation/delete][%d] documentationDeleteTooManyRequests  %+v", 429, o.Payload)
}
func (o *DocumentationDeleteTooManyRequests) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DocumentationDeleteTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDocumentationDeleteInternalServerError creates a DocumentationDeleteInternalServerError with default headers values
func NewDocumentationDeleteInternalServerError() *DocumentationDeleteInternalServerError {
	return &DocumentationDeleteInternalServerError{}
}

/* DocumentationDeleteInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type DocumentationDeleteInternalServerError struct {
}

func (o *DocumentationDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Documentation/delete][%d] documentationDeleteInternalServerError ", 500)
}

func (o *DocumentationDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
