// Code generated by go-swagger; DO NOT EDIT.

package doc

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// DocumentationCreateReader is a Reader for the DocumentationCreate structure.
type DocumentationCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DocumentationCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDocumentationCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDocumentationCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDocumentationCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDocumentationCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDocumentationCreateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDocumentationCreateTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDocumentationCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDocumentationCreateOK creates a DocumentationCreateOK with default headers values
func NewDocumentationCreateOK() *DocumentationCreateOK {
	return &DocumentationCreateOK{}
}

/* DocumentationCreateOK describes a response with status code 200, with default header values.

Success
*/
type DocumentationCreateOK struct {
	Payload models.Unit
}

func (o *DocumentationCreateOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Documentation/upsert][%d] documentationCreateOK  %+v", 200, o.Payload)
}
func (o *DocumentationCreateOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *DocumentationCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDocumentationCreateBadRequest creates a DocumentationCreateBadRequest with default headers values
func NewDocumentationCreateBadRequest() *DocumentationCreateBadRequest {
	return &DocumentationCreateBadRequest{}
}

/* DocumentationCreateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DocumentationCreateBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *DocumentationCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Documentation/upsert][%d] documentationCreateBadRequest  %+v", 400, o.Payload)
}
func (o *DocumentationCreateBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *DocumentationCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDocumentationCreateUnauthorized creates a DocumentationCreateUnauthorized with default headers values
func NewDocumentationCreateUnauthorized() *DocumentationCreateUnauthorized {
	return &DocumentationCreateUnauthorized{}
}

/* DocumentationCreateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DocumentationCreateUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *DocumentationCreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Documentation/upsert][%d] documentationCreateUnauthorized  %+v", 401, o.Payload)
}
func (o *DocumentationCreateUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DocumentationCreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDocumentationCreateForbidden creates a DocumentationCreateForbidden with default headers values
func NewDocumentationCreateForbidden() *DocumentationCreateForbidden {
	return &DocumentationCreateForbidden{}
}

/* DocumentationCreateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DocumentationCreateForbidden struct {
	Payload *models.ProblemDetails
}

func (o *DocumentationCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Documentation/upsert][%d] documentationCreateForbidden  %+v", 403, o.Payload)
}
func (o *DocumentationCreateForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DocumentationCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDocumentationCreateNotFound creates a DocumentationCreateNotFound with default headers values
func NewDocumentationCreateNotFound() *DocumentationCreateNotFound {
	return &DocumentationCreateNotFound{}
}

/* DocumentationCreateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DocumentationCreateNotFound struct {
	Payload *models.ProblemDetails
}

func (o *DocumentationCreateNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Documentation/upsert][%d] documentationCreateNotFound  %+v", 404, o.Payload)
}
func (o *DocumentationCreateNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DocumentationCreateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDocumentationCreateTooManyRequests creates a DocumentationCreateTooManyRequests with default headers values
func NewDocumentationCreateTooManyRequests() *DocumentationCreateTooManyRequests {
	return &DocumentationCreateTooManyRequests{}
}

/* DocumentationCreateTooManyRequests describes a response with status code 429, with default header values.

Client Error
*/
type DocumentationCreateTooManyRequests struct {
	Payload *models.ProblemDetails
}

func (o *DocumentationCreateTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Documentation/upsert][%d] documentationCreateTooManyRequests  %+v", 429, o.Payload)
}
func (o *DocumentationCreateTooManyRequests) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *DocumentationCreateTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDocumentationCreateInternalServerError creates a DocumentationCreateInternalServerError with default headers values
func NewDocumentationCreateInternalServerError() *DocumentationCreateInternalServerError {
	return &DocumentationCreateInternalServerError{}
}

/* DocumentationCreateInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type DocumentationCreateInternalServerError struct {
}

func (o *DocumentationCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Documentation/upsert][%d] documentationCreateInternalServerError ", 500)
}

func (o *DocumentationCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
