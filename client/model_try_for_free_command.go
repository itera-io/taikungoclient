/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the TryForFreeCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TryForFreeCommand{}

// TryForFreeCommand struct for TryForFreeCommand
type TryForFreeCommand struct {
	OrganizationName *string `json:"organizationName,omitempty"`
	Username *string `json:"username,omitempty"`
	Email *string `json:"email,omitempty"`
}

// NewTryForFreeCommand instantiates a new TryForFreeCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTryForFreeCommand() *TryForFreeCommand {
	this := TryForFreeCommand{}
	return &this
}

// NewTryForFreeCommandWithDefaults instantiates a new TryForFreeCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTryForFreeCommandWithDefaults() *TryForFreeCommand {
	this := TryForFreeCommand{}
	return &this
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *TryForFreeCommand) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TryForFreeCommand) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *TryForFreeCommand) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *TryForFreeCommand) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *TryForFreeCommand) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TryForFreeCommand) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *TryForFreeCommand) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *TryForFreeCommand) SetUsername(v string) {
	o.Username = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *TryForFreeCommand) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TryForFreeCommand) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *TryForFreeCommand) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *TryForFreeCommand) SetEmail(v string) {
	o.Email = &v
}

func (o TryForFreeCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TryForFreeCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrganizationName) {
		toSerialize["organizationName"] = o.OrganizationName
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	return toSerialize, nil
}

type NullableTryForFreeCommand struct {
	value *TryForFreeCommand
	isSet bool
}

func (v NullableTryForFreeCommand) Get() *TryForFreeCommand {
	return v.value
}

func (v *NullableTryForFreeCommand) Set(val *TryForFreeCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableTryForFreeCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableTryForFreeCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTryForFreeCommand(val *TryForFreeCommand) *NullableTryForFreeCommand {
	return &NullableTryForFreeCommand{value: val, isSet: true}
}

func (v NullableTryForFreeCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTryForFreeCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


