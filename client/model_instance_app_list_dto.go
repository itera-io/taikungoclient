/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the InstanceAppListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceAppListDto{}

// InstanceAppListDto struct for InstanceAppListDto
type InstanceAppListDto struct {
	Id int32 `json:"id"`
	Name NullableString `json:"name"`
	Namespace NullableString `json:"namespace"`
	Status EInstanceStatus `json:"status"`
	Version NullableString `json:"version"`
	CatalogId int32 `json:"catalogId"`
	CatalogName NullableString `json:"catalogName"`
	CatalogAppName NullableString `json:"catalogAppName"`
	CatalogAppId int32 `json:"catalogAppId"`
	AppRepoName NullableString `json:"appRepoName"`
	Logo NullableString `json:"logo"`
	AutoSync bool `json:"autoSync"`
	Created NullableString `json:"created"`
	CreatedBy NullableString `json:"createdBy"`
	LastModified NullableString `json:"lastModified"`
	LastModifiedBy NullableString `json:"lastModifiedBy"`
	ProjectId int32 `json:"projectId"`
	ProjectName NullableString `json:"projectName"`
	Logs NullableString `json:"logs"`
}

type _InstanceAppListDto InstanceAppListDto

// NewInstanceAppListDto instantiates a new InstanceAppListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceAppListDto(id int32, name NullableString, namespace NullableString, status EInstanceStatus, version NullableString, catalogId int32, catalogName NullableString, catalogAppName NullableString, catalogAppId int32, appRepoName NullableString, logo NullableString, autoSync bool, created NullableString, createdBy NullableString, lastModified NullableString, lastModifiedBy NullableString, projectId int32, projectName NullableString, logs NullableString) *InstanceAppListDto {
	this := InstanceAppListDto{}
	this.Id = id
	this.Name = name
	this.Namespace = namespace
	this.Status = status
	this.Version = version
	this.CatalogId = catalogId
	this.CatalogName = catalogName
	this.CatalogAppName = catalogAppName
	this.CatalogAppId = catalogAppId
	this.AppRepoName = appRepoName
	this.Logo = logo
	this.AutoSync = autoSync
	this.Created = created
	this.CreatedBy = createdBy
	this.LastModified = lastModified
	this.LastModifiedBy = lastModifiedBy
	this.ProjectId = projectId
	this.ProjectName = projectName
	this.Logs = logs
	return &this
}

// NewInstanceAppListDtoWithDefaults instantiates a new InstanceAppListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceAppListDtoWithDefaults() *InstanceAppListDto {
	this := InstanceAppListDto{}
	return &this
}

// GetId returns the Id field value
func (o *InstanceAppListDto) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *InstanceAppListDto) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *InstanceAppListDto) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InstanceAppListDto) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceAppListDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *InstanceAppListDto) SetName(v string) {
	o.Name.Set(&v)
}

// GetNamespace returns the Namespace field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InstanceAppListDto) GetNamespace() string {
	if o == nil || o.Namespace.Get() == nil {
		var ret string
		return ret
	}

	return *o.Namespace.Get()
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceAppListDto) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Namespace.Get(), o.Namespace.IsSet()
}

// SetNamespace sets field value
func (o *InstanceAppListDto) SetNamespace(v string) {
	o.Namespace.Set(&v)
}

// GetStatus returns the Status field value
func (o *InstanceAppListDto) GetStatus() EInstanceStatus {
	if o == nil {
		var ret EInstanceStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *InstanceAppListDto) GetStatusOk() (*EInstanceStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *InstanceAppListDto) SetStatus(v EInstanceStatus) {
	o.Status = v
}

// GetVersion returns the Version field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InstanceAppListDto) GetVersion() string {
	if o == nil || o.Version.Get() == nil {
		var ret string
		return ret
	}

	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceAppListDto) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// SetVersion sets field value
func (o *InstanceAppListDto) SetVersion(v string) {
	o.Version.Set(&v)
}

// GetCatalogId returns the CatalogId field value
func (o *InstanceAppListDto) GetCatalogId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CatalogId
}

// GetCatalogIdOk returns a tuple with the CatalogId field value
// and a boolean to check if the value has been set.
func (o *InstanceAppListDto) GetCatalogIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CatalogId, true
}

// SetCatalogId sets field value
func (o *InstanceAppListDto) SetCatalogId(v int32) {
	o.CatalogId = v
}

// GetCatalogName returns the CatalogName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InstanceAppListDto) GetCatalogName() string {
	if o == nil || o.CatalogName.Get() == nil {
		var ret string
		return ret
	}

	return *o.CatalogName.Get()
}

// GetCatalogNameOk returns a tuple with the CatalogName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceAppListDto) GetCatalogNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CatalogName.Get(), o.CatalogName.IsSet()
}

// SetCatalogName sets field value
func (o *InstanceAppListDto) SetCatalogName(v string) {
	o.CatalogName.Set(&v)
}

// GetCatalogAppName returns the CatalogAppName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InstanceAppListDto) GetCatalogAppName() string {
	if o == nil || o.CatalogAppName.Get() == nil {
		var ret string
		return ret
	}

	return *o.CatalogAppName.Get()
}

// GetCatalogAppNameOk returns a tuple with the CatalogAppName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceAppListDto) GetCatalogAppNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CatalogAppName.Get(), o.CatalogAppName.IsSet()
}

// SetCatalogAppName sets field value
func (o *InstanceAppListDto) SetCatalogAppName(v string) {
	o.CatalogAppName.Set(&v)
}

// GetCatalogAppId returns the CatalogAppId field value
func (o *InstanceAppListDto) GetCatalogAppId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CatalogAppId
}

// GetCatalogAppIdOk returns a tuple with the CatalogAppId field value
// and a boolean to check if the value has been set.
func (o *InstanceAppListDto) GetCatalogAppIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CatalogAppId, true
}

// SetCatalogAppId sets field value
func (o *InstanceAppListDto) SetCatalogAppId(v int32) {
	o.CatalogAppId = v
}

// GetAppRepoName returns the AppRepoName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InstanceAppListDto) GetAppRepoName() string {
	if o == nil || o.AppRepoName.Get() == nil {
		var ret string
		return ret
	}

	return *o.AppRepoName.Get()
}

// GetAppRepoNameOk returns a tuple with the AppRepoName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceAppListDto) GetAppRepoNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AppRepoName.Get(), o.AppRepoName.IsSet()
}

// SetAppRepoName sets field value
func (o *InstanceAppListDto) SetAppRepoName(v string) {
	o.AppRepoName.Set(&v)
}

// GetLogo returns the Logo field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InstanceAppListDto) GetLogo() string {
	if o == nil || o.Logo.Get() == nil {
		var ret string
		return ret
	}

	return *o.Logo.Get()
}

// GetLogoOk returns a tuple with the Logo field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceAppListDto) GetLogoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Logo.Get(), o.Logo.IsSet()
}

// SetLogo sets field value
func (o *InstanceAppListDto) SetLogo(v string) {
	o.Logo.Set(&v)
}

// GetAutoSync returns the AutoSync field value
func (o *InstanceAppListDto) GetAutoSync() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoSync
}

// GetAutoSyncOk returns a tuple with the AutoSync field value
// and a boolean to check if the value has been set.
func (o *InstanceAppListDto) GetAutoSyncOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoSync, true
}

// SetAutoSync sets field value
func (o *InstanceAppListDto) SetAutoSync(v bool) {
	o.AutoSync = v
}

// GetCreated returns the Created field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InstanceAppListDto) GetCreated() string {
	if o == nil || o.Created.Get() == nil {
		var ret string
		return ret
	}

	return *o.Created.Get()
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceAppListDto) GetCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Created.Get(), o.Created.IsSet()
}

// SetCreated sets field value
func (o *InstanceAppListDto) SetCreated(v string) {
	o.Created.Set(&v)
}

// GetCreatedBy returns the CreatedBy field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InstanceAppListDto) GetCreatedBy() string {
	if o == nil || o.CreatedBy.Get() == nil {
		var ret string
		return ret
	}

	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceAppListDto) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// SetCreatedBy sets field value
func (o *InstanceAppListDto) SetCreatedBy(v string) {
	o.CreatedBy.Set(&v)
}

// GetLastModified returns the LastModified field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InstanceAppListDto) GetLastModified() string {
	if o == nil || o.LastModified.Get() == nil {
		var ret string
		return ret
	}

	return *o.LastModified.Get()
}

// GetLastModifiedOk returns a tuple with the LastModified field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceAppListDto) GetLastModifiedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModified.Get(), o.LastModified.IsSet()
}

// SetLastModified sets field value
func (o *InstanceAppListDto) SetLastModified(v string) {
	o.LastModified.Set(&v)
}

// GetLastModifiedBy returns the LastModifiedBy field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InstanceAppListDto) GetLastModifiedBy() string {
	if o == nil || o.LastModifiedBy.Get() == nil {
		var ret string
		return ret
	}

	return *o.LastModifiedBy.Get()
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceAppListDto) GetLastModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModifiedBy.Get(), o.LastModifiedBy.IsSet()
}

// SetLastModifiedBy sets field value
func (o *InstanceAppListDto) SetLastModifiedBy(v string) {
	o.LastModifiedBy.Set(&v)
}

// GetProjectId returns the ProjectId field value
func (o *InstanceAppListDto) GetProjectId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *InstanceAppListDto) GetProjectIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *InstanceAppListDto) SetProjectId(v int32) {
	o.ProjectId = v
}

// GetProjectName returns the ProjectName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InstanceAppListDto) GetProjectName() string {
	if o == nil || o.ProjectName.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProjectName.Get()
}

// GetProjectNameOk returns a tuple with the ProjectName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceAppListDto) GetProjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectName.Get(), o.ProjectName.IsSet()
}

// SetProjectName sets field value
func (o *InstanceAppListDto) SetProjectName(v string) {
	o.ProjectName.Set(&v)
}

// GetLogs returns the Logs field value
// If the value is explicit nil, the zero value for string will be returned
func (o *InstanceAppListDto) GetLogs() string {
	if o == nil || o.Logs.Get() == nil {
		var ret string
		return ret
	}

	return *o.Logs.Get()
}

// GetLogsOk returns a tuple with the Logs field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceAppListDto) GetLogsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Logs.Get(), o.Logs.IsSet()
}

// SetLogs sets field value
func (o *InstanceAppListDto) SetLogs(v string) {
	o.Logs.Set(&v)
}

func (o InstanceAppListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstanceAppListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name.Get()
	toSerialize["namespace"] = o.Namespace.Get()
	toSerialize["status"] = o.Status
	toSerialize["version"] = o.Version.Get()
	toSerialize["catalogId"] = o.CatalogId
	toSerialize["catalogName"] = o.CatalogName.Get()
	toSerialize["catalogAppName"] = o.CatalogAppName.Get()
	toSerialize["catalogAppId"] = o.CatalogAppId
	toSerialize["appRepoName"] = o.AppRepoName.Get()
	toSerialize["logo"] = o.Logo.Get()
	toSerialize["autoSync"] = o.AutoSync
	toSerialize["created"] = o.Created.Get()
	toSerialize["createdBy"] = o.CreatedBy.Get()
	toSerialize["lastModified"] = o.LastModified.Get()
	toSerialize["lastModifiedBy"] = o.LastModifiedBy.Get()
	toSerialize["projectId"] = o.ProjectId
	toSerialize["projectName"] = o.ProjectName.Get()
	toSerialize["logs"] = o.Logs.Get()
	return toSerialize, nil
}

func (o *InstanceAppListDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"namespace",
		"status",
		"version",
		"catalogId",
		"catalogName",
		"catalogAppName",
		"catalogAppId",
		"appRepoName",
		"logo",
		"autoSync",
		"created",
		"createdBy",
		"lastModified",
		"lastModifiedBy",
		"projectId",
		"projectName",
		"logs",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInstanceAppListDto := _InstanceAppListDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInstanceAppListDto)

	if err != nil {
		return err
	}

	*o = InstanceAppListDto(varInstanceAppListDto)

	return err
}

type NullableInstanceAppListDto struct {
	value *InstanceAppListDto
	isSet bool
}

func (v NullableInstanceAppListDto) Get() *InstanceAppListDto {
	return v.value
}

func (v *NullableInstanceAppListDto) Set(val *InstanceAppListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceAppListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceAppListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceAppListDto(val *InstanceAppListDto) *NullableInstanceAppListDto {
	return &NullableInstanceAppListDto{value: val, isSet: true}
}

func (v NullableInstanceAppListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceAppListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


