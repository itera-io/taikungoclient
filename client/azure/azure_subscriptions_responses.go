// Code generated by go-swagger; DO NOT EDIT.

package azure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// AzureSubscriptionsReader is a Reader for the AzureSubscriptions structure.
type AzureSubscriptionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AzureSubscriptionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAzureSubscriptionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAzureSubscriptionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAzureSubscriptionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAzureSubscriptionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAzureSubscriptionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAzureSubscriptionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAzureSubscriptionsOK creates a AzureSubscriptionsOK with default headers values
func NewAzureSubscriptionsOK() *AzureSubscriptionsOK {
	return &AzureSubscriptionsOK{}
}

/* AzureSubscriptionsOK describes a response with status code 200, with default header values.

Success
*/
type AzureSubscriptionsOK struct {
	Payload []*models.CommonStringBasedDropdownDto
}

func (o *AzureSubscriptionsOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/susbcriptions][%d] azureSubscriptionsOK  %+v", 200, o.Payload)
}
func (o *AzureSubscriptionsOK) GetPayload() []*models.CommonStringBasedDropdownDto {
	return o.Payload
}

func (o *AzureSubscriptionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAzureSubscriptionsBadRequest creates a AzureSubscriptionsBadRequest with default headers values
func NewAzureSubscriptionsBadRequest() *AzureSubscriptionsBadRequest {
	return &AzureSubscriptionsBadRequest{}
}

/* AzureSubscriptionsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AzureSubscriptionsBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *AzureSubscriptionsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/susbcriptions][%d] azureSubscriptionsBadRequest  %+v", 400, o.Payload)
}
func (o *AzureSubscriptionsBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *AzureSubscriptionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAzureSubscriptionsUnauthorized creates a AzureSubscriptionsUnauthorized with default headers values
func NewAzureSubscriptionsUnauthorized() *AzureSubscriptionsUnauthorized {
	return &AzureSubscriptionsUnauthorized{}
}

/* AzureSubscriptionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AzureSubscriptionsUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *AzureSubscriptionsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/susbcriptions][%d] azureSubscriptionsUnauthorized  %+v", 401, o.Payload)
}
func (o *AzureSubscriptionsUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AzureSubscriptionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAzureSubscriptionsForbidden creates a AzureSubscriptionsForbidden with default headers values
func NewAzureSubscriptionsForbidden() *AzureSubscriptionsForbidden {
	return &AzureSubscriptionsForbidden{}
}

/* AzureSubscriptionsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AzureSubscriptionsForbidden struct {
	Payload *models.ProblemDetails
}

func (o *AzureSubscriptionsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/susbcriptions][%d] azureSubscriptionsForbidden  %+v", 403, o.Payload)
}
func (o *AzureSubscriptionsForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AzureSubscriptionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAzureSubscriptionsNotFound creates a AzureSubscriptionsNotFound with default headers values
func NewAzureSubscriptionsNotFound() *AzureSubscriptionsNotFound {
	return &AzureSubscriptionsNotFound{}
}

/* AzureSubscriptionsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AzureSubscriptionsNotFound struct {
	Payload *models.ProblemDetails
}

func (o *AzureSubscriptionsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/susbcriptions][%d] azureSubscriptionsNotFound  %+v", 404, o.Payload)
}
func (o *AzureSubscriptionsNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AzureSubscriptionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAzureSubscriptionsInternalServerError creates a AzureSubscriptionsInternalServerError with default headers values
func NewAzureSubscriptionsInternalServerError() *AzureSubscriptionsInternalServerError {
	return &AzureSubscriptionsInternalServerError{}
}

/* AzureSubscriptionsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AzureSubscriptionsInternalServerError struct {
}

func (o *AzureSubscriptionsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/susbcriptions][%d] azureSubscriptionsInternalServerError ", 500)
}

func (o *AzureSubscriptionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
