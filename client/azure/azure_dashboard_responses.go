// Code generated by go-swagger; DO NOT EDIT.

package azure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AzureDashboardReader is a Reader for the AzureDashboard structure.
type AzureDashboardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AzureDashboardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAzureDashboardOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAzureDashboardBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAzureDashboardUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAzureDashboardForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAzureDashboardNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAzureDashboardInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAzureDashboardOK creates a AzureDashboardOK with default headers values
func NewAzureDashboardOK() *AzureDashboardOK {
	return &AzureDashboardOK{}
}

/*
AzureDashboardOK describes a response with status code 200, with default header values.

Success
*/
type AzureDashboardOK struct {
	Payload []*AzureDashboardOKBodyItems0
}

// IsSuccess returns true when this azure dashboard o k response has a 2xx status code
func (o *AzureDashboardOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this azure dashboard o k response has a 3xx status code
func (o *AzureDashboardOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this azure dashboard o k response has a 4xx status code
func (o *AzureDashboardOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this azure dashboard o k response has a 5xx status code
func (o *AzureDashboardOK) IsServerError() bool {
	return false
}

// IsCode returns true when this azure dashboard o k response a status code equal to that given
func (o *AzureDashboardOK) IsCode(code int) bool {
	return code == 200
}

func (o *AzureDashboardOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardOK  %+v", 200, o.Payload)
}

func (o *AzureDashboardOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardOK  %+v", 200, o.Payload)
}

func (o *AzureDashboardOK) GetPayload() []*AzureDashboardOKBodyItems0 {
	return o.Payload
}

func (o *AzureDashboardOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAzureDashboardBadRequest creates a AzureDashboardBadRequest with default headers values
func NewAzureDashboardBadRequest() *AzureDashboardBadRequest {
	return &AzureDashboardBadRequest{}
}

/*
AzureDashboardBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AzureDashboardBadRequest struct {
	Payload []*AzureDashboardBadRequestBodyItems0
}

// IsSuccess returns true when this azure dashboard bad request response has a 2xx status code
func (o *AzureDashboardBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this azure dashboard bad request response has a 3xx status code
func (o *AzureDashboardBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this azure dashboard bad request response has a 4xx status code
func (o *AzureDashboardBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this azure dashboard bad request response has a 5xx status code
func (o *AzureDashboardBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this azure dashboard bad request response a status code equal to that given
func (o *AzureDashboardBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AzureDashboardBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardBadRequest  %+v", 400, o.Payload)
}

func (o *AzureDashboardBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardBadRequest  %+v", 400, o.Payload)
}

func (o *AzureDashboardBadRequest) GetPayload() []*AzureDashboardBadRequestBodyItems0 {
	return o.Payload
}

func (o *AzureDashboardBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAzureDashboardUnauthorized creates a AzureDashboardUnauthorized with default headers values
func NewAzureDashboardUnauthorized() *AzureDashboardUnauthorized {
	return &AzureDashboardUnauthorized{}
}

/*
AzureDashboardUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AzureDashboardUnauthorized struct {
	Payload *AzureDashboardUnauthorizedBody
}

// IsSuccess returns true when this azure dashboard unauthorized response has a 2xx status code
func (o *AzureDashboardUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this azure dashboard unauthorized response has a 3xx status code
func (o *AzureDashboardUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this azure dashboard unauthorized response has a 4xx status code
func (o *AzureDashboardUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this azure dashboard unauthorized response has a 5xx status code
func (o *AzureDashboardUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this azure dashboard unauthorized response a status code equal to that given
func (o *AzureDashboardUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AzureDashboardUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardUnauthorized  %+v", 401, o.Payload)
}

func (o *AzureDashboardUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardUnauthorized  %+v", 401, o.Payload)
}

func (o *AzureDashboardUnauthorized) GetPayload() *AzureDashboardUnauthorizedBody {
	return o.Payload
}

func (o *AzureDashboardUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AzureDashboardUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAzureDashboardForbidden creates a AzureDashboardForbidden with default headers values
func NewAzureDashboardForbidden() *AzureDashboardForbidden {
	return &AzureDashboardForbidden{}
}

/*
AzureDashboardForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AzureDashboardForbidden struct {
	Payload *AzureDashboardForbiddenBody
}

// IsSuccess returns true when this azure dashboard forbidden response has a 2xx status code
func (o *AzureDashboardForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this azure dashboard forbidden response has a 3xx status code
func (o *AzureDashboardForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this azure dashboard forbidden response has a 4xx status code
func (o *AzureDashboardForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this azure dashboard forbidden response has a 5xx status code
func (o *AzureDashboardForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this azure dashboard forbidden response a status code equal to that given
func (o *AzureDashboardForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *AzureDashboardForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardForbidden  %+v", 403, o.Payload)
}

func (o *AzureDashboardForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardForbidden  %+v", 403, o.Payload)
}

func (o *AzureDashboardForbidden) GetPayload() *AzureDashboardForbiddenBody {
	return o.Payload
}

func (o *AzureDashboardForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AzureDashboardForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAzureDashboardNotFound creates a AzureDashboardNotFound with default headers values
func NewAzureDashboardNotFound() *AzureDashboardNotFound {
	return &AzureDashboardNotFound{}
}

/*
AzureDashboardNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AzureDashboardNotFound struct {
	Payload *AzureDashboardNotFoundBody
}

// IsSuccess returns true when this azure dashboard not found response has a 2xx status code
func (o *AzureDashboardNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this azure dashboard not found response has a 3xx status code
func (o *AzureDashboardNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this azure dashboard not found response has a 4xx status code
func (o *AzureDashboardNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this azure dashboard not found response has a 5xx status code
func (o *AzureDashboardNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this azure dashboard not found response a status code equal to that given
func (o *AzureDashboardNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *AzureDashboardNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardNotFound  %+v", 404, o.Payload)
}

func (o *AzureDashboardNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardNotFound  %+v", 404, o.Payload)
}

func (o *AzureDashboardNotFound) GetPayload() *AzureDashboardNotFoundBody {
	return o.Payload
}

func (o *AzureDashboardNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AzureDashboardNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAzureDashboardInternalServerError creates a AzureDashboardInternalServerError with default headers values
func NewAzureDashboardInternalServerError() *AzureDashboardInternalServerError {
	return &AzureDashboardInternalServerError{}
}

/*
AzureDashboardInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AzureDashboardInternalServerError struct {
}

// IsSuccess returns true when this azure dashboard internal server error response has a 2xx status code
func (o *AzureDashboardInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this azure dashboard internal server error response has a 3xx status code
func (o *AzureDashboardInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this azure dashboard internal server error response has a 4xx status code
func (o *AzureDashboardInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this azure dashboard internal server error response has a 5xx status code
func (o *AzureDashboardInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this azure dashboard internal server error response a status code equal to that given
func (o *AzureDashboardInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AzureDashboardInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardInternalServerError ", 500)
}

func (o *AzureDashboardInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardInternalServerError ", 500)
}

func (o *AzureDashboardInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
AzureDashboardBadRequestBodyItems0 azure dashboard bad request body items0
swagger:model AzureDashboardBadRequestBodyItems0
*/
type AzureDashboardBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this azure dashboard bad request body items0
func (o *AzureDashboardBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this azure dashboard bad request body items0 based on context it is used
func (o *AzureDashboardBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AzureDashboardBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AzureDashboardBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res AzureDashboardBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AzureDashboardBody azure dashboard body
swagger:model AzureDashboardBody
*/
type AzureDashboardBody struct {

	// cloud Id
	CloudID int32 `json:"cloudId,omitempty"`

	// filter by
	FilterBy string `json:"filterBy,omitempty"`
}

// Validate validates this azure dashboard body
func (o *AzureDashboardBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this azure dashboard body based on context it is used
func (o *AzureDashboardBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AzureDashboardBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AzureDashboardBody) UnmarshalBinary(b []byte) error {
	var res AzureDashboardBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AzureDashboardForbiddenBody azure dashboard forbidden body
swagger:model AzureDashboardForbiddenBody
*/
type AzureDashboardForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this azure dashboard forbidden body
func (o *AzureDashboardForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this azure dashboard forbidden body based on context it is used
func (o *AzureDashboardForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AzureDashboardForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AzureDashboardForbiddenBody) UnmarshalBinary(b []byte) error {
	var res AzureDashboardForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AzureDashboardNotFoundBody azure dashboard not found body
swagger:model AzureDashboardNotFoundBody
*/
type AzureDashboardNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this azure dashboard not found body
func (o *AzureDashboardNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this azure dashboard not found body based on context it is used
func (o *AzureDashboardNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AzureDashboardNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AzureDashboardNotFoundBody) UnmarshalBinary(b []byte) error {
	var res AzureDashboardNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AzureDashboardOKBodyItems0 azure dashboard o k body items0
swagger:model AzureDashboardOKBodyItems0
*/
type AzureDashboardOKBodyItems0 struct {

	// current usage
	CurrentUsage int32 `json:"currentUsage,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// total cores
	TotalCores int64 `json:"totalCores,omitempty"`
}

// Validate validates this azure dashboard o k body items0
func (o *AzureDashboardOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this azure dashboard o k body items0 based on context it is used
func (o *AzureDashboardOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AzureDashboardOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AzureDashboardOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res AzureDashboardOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AzureDashboardUnauthorizedBody azure dashboard unauthorized body
swagger:model AzureDashboardUnauthorizedBody
*/
type AzureDashboardUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this azure dashboard unauthorized body
func (o *AzureDashboardUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this azure dashboard unauthorized body based on context it is used
func (o *AzureDashboardUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AzureDashboardUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AzureDashboardUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res AzureDashboardUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
