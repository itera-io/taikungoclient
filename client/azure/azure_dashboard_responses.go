// Code generated by go-swagger; DO NOT EDIT.

package azure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// AzureDashboardReader is a Reader for the AzureDashboard structure.
type AzureDashboardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AzureDashboardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAzureDashboardOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAzureDashboardBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAzureDashboardUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAzureDashboardForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAzureDashboardNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAzureDashboardInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAzureDashboardOK creates a AzureDashboardOK with default headers values
func NewAzureDashboardOK() *AzureDashboardOK {
	return &AzureDashboardOK{}
}

/*
AzureDashboardOK describes a response with status code 200, with default header values.

Success
*/
type AzureDashboardOK struct {
	Payload []*models.AzureQuotaListRecordDto
}

// IsSuccess returns true when this azure dashboard o k response has a 2xx status code
func (o *AzureDashboardOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this azure dashboard o k response has a 3xx status code
func (o *AzureDashboardOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this azure dashboard o k response has a 4xx status code
func (o *AzureDashboardOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this azure dashboard o k response has a 5xx status code
func (o *AzureDashboardOK) IsServerError() bool {
	return false
}

// IsCode returns true when this azure dashboard o k response a status code equal to that given
func (o *AzureDashboardOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the azure dashboard o k response
func (o *AzureDashboardOK) Code() int {
	return 200
}

func (o *AzureDashboardOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardOK  %+v", 200, o.Payload)
}

func (o *AzureDashboardOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardOK  %+v", 200, o.Payload)
}

func (o *AzureDashboardOK) GetPayload() []*models.AzureQuotaListRecordDto {
	return o.Payload
}

func (o *AzureDashboardOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAzureDashboardBadRequest creates a AzureDashboardBadRequest with default headers values
func NewAzureDashboardBadRequest() *AzureDashboardBadRequest {
	return &AzureDashboardBadRequest{}
}

/*
AzureDashboardBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AzureDashboardBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this azure dashboard bad request response has a 2xx status code
func (o *AzureDashboardBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this azure dashboard bad request response has a 3xx status code
func (o *AzureDashboardBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this azure dashboard bad request response has a 4xx status code
func (o *AzureDashboardBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this azure dashboard bad request response has a 5xx status code
func (o *AzureDashboardBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this azure dashboard bad request response a status code equal to that given
func (o *AzureDashboardBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the azure dashboard bad request response
func (o *AzureDashboardBadRequest) Code() int {
	return 400
}

func (o *AzureDashboardBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardBadRequest  %+v", 400, o.Payload)
}

func (o *AzureDashboardBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardBadRequest  %+v", 400, o.Payload)
}

func (o *AzureDashboardBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AzureDashboardBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAzureDashboardUnauthorized creates a AzureDashboardUnauthorized with default headers values
func NewAzureDashboardUnauthorized() *AzureDashboardUnauthorized {
	return &AzureDashboardUnauthorized{}
}

/*
AzureDashboardUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AzureDashboardUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this azure dashboard unauthorized response has a 2xx status code
func (o *AzureDashboardUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this azure dashboard unauthorized response has a 3xx status code
func (o *AzureDashboardUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this azure dashboard unauthorized response has a 4xx status code
func (o *AzureDashboardUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this azure dashboard unauthorized response has a 5xx status code
func (o *AzureDashboardUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this azure dashboard unauthorized response a status code equal to that given
func (o *AzureDashboardUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the azure dashboard unauthorized response
func (o *AzureDashboardUnauthorized) Code() int {
	return 401
}

func (o *AzureDashboardUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardUnauthorized  %+v", 401, o.Payload)
}

func (o *AzureDashboardUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardUnauthorized  %+v", 401, o.Payload)
}

func (o *AzureDashboardUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AzureDashboardUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAzureDashboardForbidden creates a AzureDashboardForbidden with default headers values
func NewAzureDashboardForbidden() *AzureDashboardForbidden {
	return &AzureDashboardForbidden{}
}

/*
AzureDashboardForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AzureDashboardForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this azure dashboard forbidden response has a 2xx status code
func (o *AzureDashboardForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this azure dashboard forbidden response has a 3xx status code
func (o *AzureDashboardForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this azure dashboard forbidden response has a 4xx status code
func (o *AzureDashboardForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this azure dashboard forbidden response has a 5xx status code
func (o *AzureDashboardForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this azure dashboard forbidden response a status code equal to that given
func (o *AzureDashboardForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the azure dashboard forbidden response
func (o *AzureDashboardForbidden) Code() int {
	return 403
}

func (o *AzureDashboardForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardForbidden  %+v", 403, o.Payload)
}

func (o *AzureDashboardForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardForbidden  %+v", 403, o.Payload)
}

func (o *AzureDashboardForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AzureDashboardForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAzureDashboardNotFound creates a AzureDashboardNotFound with default headers values
func NewAzureDashboardNotFound() *AzureDashboardNotFound {
	return &AzureDashboardNotFound{}
}

/*
AzureDashboardNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AzureDashboardNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this azure dashboard not found response has a 2xx status code
func (o *AzureDashboardNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this azure dashboard not found response has a 3xx status code
func (o *AzureDashboardNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this azure dashboard not found response has a 4xx status code
func (o *AzureDashboardNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this azure dashboard not found response has a 5xx status code
func (o *AzureDashboardNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this azure dashboard not found response a status code equal to that given
func (o *AzureDashboardNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the azure dashboard not found response
func (o *AzureDashboardNotFound) Code() int {
	return 404
}

func (o *AzureDashboardNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardNotFound  %+v", 404, o.Payload)
}

func (o *AzureDashboardNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardNotFound  %+v", 404, o.Payload)
}

func (o *AzureDashboardNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AzureDashboardNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAzureDashboardInternalServerError creates a AzureDashboardInternalServerError with default headers values
func NewAzureDashboardInternalServerError() *AzureDashboardInternalServerError {
	return &AzureDashboardInternalServerError{}
}

/*
AzureDashboardInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AzureDashboardInternalServerError struct {
}

// IsSuccess returns true when this azure dashboard internal server error response has a 2xx status code
func (o *AzureDashboardInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this azure dashboard internal server error response has a 3xx status code
func (o *AzureDashboardInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this azure dashboard internal server error response has a 4xx status code
func (o *AzureDashboardInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this azure dashboard internal server error response has a 5xx status code
func (o *AzureDashboardInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this azure dashboard internal server error response a status code equal to that given
func (o *AzureDashboardInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the azure dashboard internal server error response
func (o *AzureDashboardInternalServerError) Code() int {
	return 500
}

func (o *AzureDashboardInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardInternalServerError ", 500)
}

func (o *AzureDashboardInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Azure/quota/list][%d] azureDashboardInternalServerError ", 500)
}

func (o *AzureDashboardInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
