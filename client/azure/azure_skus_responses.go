// Code generated by go-swagger; DO NOT EDIT.

package azure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AzureSkusReader is a Reader for the AzureSkus structure.
type AzureSkusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AzureSkusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAzureSkusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAzureSkusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAzureSkusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAzureSkusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAzureSkusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAzureSkusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAzureSkusOK creates a AzureSkusOK with default headers values
func NewAzureSkusOK() *AzureSkusOK {
	return &AzureSkusOK{}
}

/*
AzureSkusOK describes a response with status code 200, with default header values.

Success
*/
type AzureSkusOK struct {
	Payload *AzureSkusOKBody
}

// IsSuccess returns true when this azure skus o k response has a 2xx status code
func (o *AzureSkusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this azure skus o k response has a 3xx status code
func (o *AzureSkusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this azure skus o k response has a 4xx status code
func (o *AzureSkusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this azure skus o k response has a 5xx status code
func (o *AzureSkusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this azure skus o k response a status code equal to that given
func (o *AzureSkusOK) IsCode(code int) bool {
	return code == 200
}

func (o *AzureSkusOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Azure/skus/{cloudId}/{publisher}/{offer}][%d] azureSkusOK  %+v", 200, o.Payload)
}

func (o *AzureSkusOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Azure/skus/{cloudId}/{publisher}/{offer}][%d] azureSkusOK  %+v", 200, o.Payload)
}

func (o *AzureSkusOK) GetPayload() *AzureSkusOKBody {
	return o.Payload
}

func (o *AzureSkusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AzureSkusOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAzureSkusBadRequest creates a AzureSkusBadRequest with default headers values
func NewAzureSkusBadRequest() *AzureSkusBadRequest {
	return &AzureSkusBadRequest{}
}

/*
AzureSkusBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AzureSkusBadRequest struct {
	Payload []*AzureSkusBadRequestBodyItems0
}

// IsSuccess returns true when this azure skus bad request response has a 2xx status code
func (o *AzureSkusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this azure skus bad request response has a 3xx status code
func (o *AzureSkusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this azure skus bad request response has a 4xx status code
func (o *AzureSkusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this azure skus bad request response has a 5xx status code
func (o *AzureSkusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this azure skus bad request response a status code equal to that given
func (o *AzureSkusBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AzureSkusBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Azure/skus/{cloudId}/{publisher}/{offer}][%d] azureSkusBadRequest  %+v", 400, o.Payload)
}

func (o *AzureSkusBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Azure/skus/{cloudId}/{publisher}/{offer}][%d] azureSkusBadRequest  %+v", 400, o.Payload)
}

func (o *AzureSkusBadRequest) GetPayload() []*AzureSkusBadRequestBodyItems0 {
	return o.Payload
}

func (o *AzureSkusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAzureSkusUnauthorized creates a AzureSkusUnauthorized with default headers values
func NewAzureSkusUnauthorized() *AzureSkusUnauthorized {
	return &AzureSkusUnauthorized{}
}

/*
AzureSkusUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AzureSkusUnauthorized struct {
	Payload *AzureSkusUnauthorizedBody
}

// IsSuccess returns true when this azure skus unauthorized response has a 2xx status code
func (o *AzureSkusUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this azure skus unauthorized response has a 3xx status code
func (o *AzureSkusUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this azure skus unauthorized response has a 4xx status code
func (o *AzureSkusUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this azure skus unauthorized response has a 5xx status code
func (o *AzureSkusUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this azure skus unauthorized response a status code equal to that given
func (o *AzureSkusUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AzureSkusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Azure/skus/{cloudId}/{publisher}/{offer}][%d] azureSkusUnauthorized  %+v", 401, o.Payload)
}

func (o *AzureSkusUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Azure/skus/{cloudId}/{publisher}/{offer}][%d] azureSkusUnauthorized  %+v", 401, o.Payload)
}

func (o *AzureSkusUnauthorized) GetPayload() *AzureSkusUnauthorizedBody {
	return o.Payload
}

func (o *AzureSkusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AzureSkusUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAzureSkusForbidden creates a AzureSkusForbidden with default headers values
func NewAzureSkusForbidden() *AzureSkusForbidden {
	return &AzureSkusForbidden{}
}

/*
AzureSkusForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AzureSkusForbidden struct {
	Payload *AzureSkusForbiddenBody
}

// IsSuccess returns true when this azure skus forbidden response has a 2xx status code
func (o *AzureSkusForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this azure skus forbidden response has a 3xx status code
func (o *AzureSkusForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this azure skus forbidden response has a 4xx status code
func (o *AzureSkusForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this azure skus forbidden response has a 5xx status code
func (o *AzureSkusForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this azure skus forbidden response a status code equal to that given
func (o *AzureSkusForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *AzureSkusForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Azure/skus/{cloudId}/{publisher}/{offer}][%d] azureSkusForbidden  %+v", 403, o.Payload)
}

func (o *AzureSkusForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Azure/skus/{cloudId}/{publisher}/{offer}][%d] azureSkusForbidden  %+v", 403, o.Payload)
}

func (o *AzureSkusForbidden) GetPayload() *AzureSkusForbiddenBody {
	return o.Payload
}

func (o *AzureSkusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AzureSkusForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAzureSkusNotFound creates a AzureSkusNotFound with default headers values
func NewAzureSkusNotFound() *AzureSkusNotFound {
	return &AzureSkusNotFound{}
}

/*
AzureSkusNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AzureSkusNotFound struct {
	Payload *AzureSkusNotFoundBody
}

// IsSuccess returns true when this azure skus not found response has a 2xx status code
func (o *AzureSkusNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this azure skus not found response has a 3xx status code
func (o *AzureSkusNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this azure skus not found response has a 4xx status code
func (o *AzureSkusNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this azure skus not found response has a 5xx status code
func (o *AzureSkusNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this azure skus not found response a status code equal to that given
func (o *AzureSkusNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *AzureSkusNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Azure/skus/{cloudId}/{publisher}/{offer}][%d] azureSkusNotFound  %+v", 404, o.Payload)
}

func (o *AzureSkusNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Azure/skus/{cloudId}/{publisher}/{offer}][%d] azureSkusNotFound  %+v", 404, o.Payload)
}

func (o *AzureSkusNotFound) GetPayload() *AzureSkusNotFoundBody {
	return o.Payload
}

func (o *AzureSkusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AzureSkusNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAzureSkusInternalServerError creates a AzureSkusInternalServerError with default headers values
func NewAzureSkusInternalServerError() *AzureSkusInternalServerError {
	return &AzureSkusInternalServerError{}
}

/*
AzureSkusInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AzureSkusInternalServerError struct {
}

// IsSuccess returns true when this azure skus internal server error response has a 2xx status code
func (o *AzureSkusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this azure skus internal server error response has a 3xx status code
func (o *AzureSkusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this azure skus internal server error response has a 4xx status code
func (o *AzureSkusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this azure skus internal server error response has a 5xx status code
func (o *AzureSkusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this azure skus internal server error response a status code equal to that given
func (o *AzureSkusInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AzureSkusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Azure/skus/{cloudId}/{publisher}/{offer}][%d] azureSkusInternalServerError ", 500)
}

func (o *AzureSkusInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Azure/skus/{cloudId}/{publisher}/{offer}][%d] azureSkusInternalServerError ", 500)
}

func (o *AzureSkusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
AzureSkusBadRequestBodyItems0 azure skus bad request body items0
swagger:model AzureSkusBadRequestBodyItems0
*/
type AzureSkusBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this azure skus bad request body items0
func (o *AzureSkusBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this azure skus bad request body items0 based on context it is used
func (o *AzureSkusBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AzureSkusBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AzureSkusBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res AzureSkusBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AzureSkusForbiddenBody azure skus forbidden body
swagger:model AzureSkusForbiddenBody
*/
type AzureSkusForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this azure skus forbidden body
func (o *AzureSkusForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this azure skus forbidden body based on context it is used
func (o *AzureSkusForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AzureSkusForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AzureSkusForbiddenBody) UnmarshalBinary(b []byte) error {
	var res AzureSkusForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AzureSkusNotFoundBody azure skus not found body
swagger:model AzureSkusNotFoundBody
*/
type AzureSkusNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this azure skus not found body
func (o *AzureSkusNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this azure skus not found body based on context it is used
func (o *AzureSkusNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AzureSkusNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AzureSkusNotFoundBody) UnmarshalBinary(b []byte) error {
	var res AzureSkusNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AzureSkusOKBody azure skus o k body
swagger:model AzureSkusOKBody
*/
type AzureSkusOKBody struct {

	// data
	Data []string `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this azure skus o k body
func (o *AzureSkusOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this azure skus o k body based on context it is used
func (o *AzureSkusOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AzureSkusOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AzureSkusOKBody) UnmarshalBinary(b []byte) error {
	var res AzureSkusOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AzureSkusUnauthorizedBody azure skus unauthorized body
swagger:model AzureSkusUnauthorizedBody
*/
type AzureSkusUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this azure skus unauthorized body
func (o *AzureSkusUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this azure skus unauthorized body based on context it is used
func (o *AzureSkusUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AzureSkusUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AzureSkusUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res AzureSkusUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
