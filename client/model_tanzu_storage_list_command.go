/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the TanzuStorageListCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TanzuStorageListCommand{}

// TanzuStorageListCommand struct for TanzuStorageListCommand
type TanzuStorageListCommand struct {
	Username *string `json:"username,omitempty"`
	Url *string `json:"url,omitempty"`
	Password *string `json:"password,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Port NullableInt32 `json:"port,omitempty"`
}

// NewTanzuStorageListCommand instantiates a new TanzuStorageListCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTanzuStorageListCommand() *TanzuStorageListCommand {
	this := TanzuStorageListCommand{}
	return &this
}

// NewTanzuStorageListCommandWithDefaults instantiates a new TanzuStorageListCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTanzuStorageListCommandWithDefaults() *TanzuStorageListCommand {
	this := TanzuStorageListCommand{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *TanzuStorageListCommand) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TanzuStorageListCommand) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *TanzuStorageListCommand) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *TanzuStorageListCommand) SetUsername(v string) {
	o.Username = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *TanzuStorageListCommand) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TanzuStorageListCommand) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *TanzuStorageListCommand) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *TanzuStorageListCommand) SetUrl(v string) {
	o.Url = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *TanzuStorageListCommand) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TanzuStorageListCommand) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *TanzuStorageListCommand) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *TanzuStorageListCommand) SetPassword(v string) {
	o.Password = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *TanzuStorageListCommand) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TanzuStorageListCommand) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *TanzuStorageListCommand) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *TanzuStorageListCommand) SetNamespace(v string) {
	o.Namespace = &v
}

// GetPort returns the Port field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TanzuStorageListCommand) GetPort() int32 {
	if o == nil || IsNil(o.Port.Get()) {
		var ret int32
		return ret
	}
	return *o.Port.Get()
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TanzuStorageListCommand) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Port.Get(), o.Port.IsSet()
}

// HasPort returns a boolean if a field has been set.
func (o *TanzuStorageListCommand) HasPort() bool {
	if o != nil && o.Port.IsSet() {
		return true
	}

	return false
}

// SetPort gets a reference to the given NullableInt32 and assigns it to the Port field.
func (o *TanzuStorageListCommand) SetPort(v int32) {
	o.Port.Set(&v)
}
// SetPortNil sets the value for Port to be an explicit nil
func (o *TanzuStorageListCommand) SetPortNil() {
	o.Port.Set(nil)
}

// UnsetPort ensures that no value is present for Port, not even an explicit nil
func (o *TanzuStorageListCommand) UnsetPort() {
	o.Port.Unset()
}

func (o TanzuStorageListCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TanzuStorageListCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if o.Port.IsSet() {
		toSerialize["port"] = o.Port.Get()
	}
	return toSerialize, nil
}

type NullableTanzuStorageListCommand struct {
	value *TanzuStorageListCommand
	isSet bool
}

func (v NullableTanzuStorageListCommand) Get() *TanzuStorageListCommand {
	return v.value
}

func (v *NullableTanzuStorageListCommand) Set(val *TanzuStorageListCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableTanzuStorageListCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableTanzuStorageListCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTanzuStorageListCommand(val *TanzuStorageListCommand) *NullableTanzuStorageListCommand {
	return &NullableTanzuStorageListCommand{value: val, isSet: true}
}

func (v NullableTanzuStorageListCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTanzuStorageListCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


