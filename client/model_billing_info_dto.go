/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the BillingInfoDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingInfoDto{}

// BillingInfoDto struct for BillingInfoDto
type BillingInfoDto struct {
	Country *string `json:"country,omitempty"`
	VatNumber *string `json:"vatNumber,omitempty"`
	LegalName *string `json:"legalName,omitempty"`
	City *string `json:"city,omitempty"`
	BillingEmail *string `json:"billingEmail,omitempty"`
	Address *string `json:"address,omitempty"`
}

// NewBillingInfoDto instantiates a new BillingInfoDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingInfoDto() *BillingInfoDto {
	this := BillingInfoDto{}
	return &this
}

// NewBillingInfoDtoWithDefaults instantiates a new BillingInfoDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingInfoDtoWithDefaults() *BillingInfoDto {
	this := BillingInfoDto{}
	return &this
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *BillingInfoDto) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInfoDto) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *BillingInfoDto) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *BillingInfoDto) SetCountry(v string) {
	o.Country = &v
}

// GetVatNumber returns the VatNumber field value if set, zero value otherwise.
func (o *BillingInfoDto) GetVatNumber() string {
	if o == nil || IsNil(o.VatNumber) {
		var ret string
		return ret
	}
	return *o.VatNumber
}

// GetVatNumberOk returns a tuple with the VatNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInfoDto) GetVatNumberOk() (*string, bool) {
	if o == nil || IsNil(o.VatNumber) {
		return nil, false
	}
	return o.VatNumber, true
}

// HasVatNumber returns a boolean if a field has been set.
func (o *BillingInfoDto) HasVatNumber() bool {
	if o != nil && !IsNil(o.VatNumber) {
		return true
	}

	return false
}

// SetVatNumber gets a reference to the given string and assigns it to the VatNumber field.
func (o *BillingInfoDto) SetVatNumber(v string) {
	o.VatNumber = &v
}

// GetLegalName returns the LegalName field value if set, zero value otherwise.
func (o *BillingInfoDto) GetLegalName() string {
	if o == nil || IsNil(o.LegalName) {
		var ret string
		return ret
	}
	return *o.LegalName
}

// GetLegalNameOk returns a tuple with the LegalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInfoDto) GetLegalNameOk() (*string, bool) {
	if o == nil || IsNil(o.LegalName) {
		return nil, false
	}
	return o.LegalName, true
}

// HasLegalName returns a boolean if a field has been set.
func (o *BillingInfoDto) HasLegalName() bool {
	if o != nil && !IsNil(o.LegalName) {
		return true
	}

	return false
}

// SetLegalName gets a reference to the given string and assigns it to the LegalName field.
func (o *BillingInfoDto) SetLegalName(v string) {
	o.LegalName = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *BillingInfoDto) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInfoDto) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *BillingInfoDto) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *BillingInfoDto) SetCity(v string) {
	o.City = &v
}

// GetBillingEmail returns the BillingEmail field value if set, zero value otherwise.
func (o *BillingInfoDto) GetBillingEmail() string {
	if o == nil || IsNil(o.BillingEmail) {
		var ret string
		return ret
	}
	return *o.BillingEmail
}

// GetBillingEmailOk returns a tuple with the BillingEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInfoDto) GetBillingEmailOk() (*string, bool) {
	if o == nil || IsNil(o.BillingEmail) {
		return nil, false
	}
	return o.BillingEmail, true
}

// HasBillingEmail returns a boolean if a field has been set.
func (o *BillingInfoDto) HasBillingEmail() bool {
	if o != nil && !IsNil(o.BillingEmail) {
		return true
	}

	return false
}

// SetBillingEmail gets a reference to the given string and assigns it to the BillingEmail field.
func (o *BillingInfoDto) SetBillingEmail(v string) {
	o.BillingEmail = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *BillingInfoDto) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInfoDto) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *BillingInfoDto) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *BillingInfoDto) SetAddress(v string) {
	o.Address = &v
}

func (o BillingInfoDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingInfoDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.VatNumber) {
		toSerialize["vatNumber"] = o.VatNumber
	}
	if !IsNil(o.LegalName) {
		toSerialize["legalName"] = o.LegalName
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.BillingEmail) {
		toSerialize["billingEmail"] = o.BillingEmail
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	return toSerialize, nil
}

type NullableBillingInfoDto struct {
	value *BillingInfoDto
	isSet bool
}

func (v NullableBillingInfoDto) Get() *BillingInfoDto {
	return v.value
}

func (v *NullableBillingInfoDto) Set(val *BillingInfoDto) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingInfoDto) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingInfoDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingInfoDto(val *BillingInfoDto) *NullableBillingInfoDto {
	return &NullableBillingInfoDto{value: val, isSet: true}
}

func (v NullableBillingInfoDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingInfoDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


