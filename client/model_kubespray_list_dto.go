/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KubesprayListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubesprayListDto{}

// KubesprayListDto struct for KubesprayListDto
type KubesprayListDto struct {
	Id int32 `json:"id"`
	Version NullableString `json:"version"`
	KubernetesVersion NullableString `json:"kubernetesVersion"`
	IsDeprecated bool `json:"isDeprecated"`
}

type _KubesprayListDto KubesprayListDto

// NewKubesprayListDto instantiates a new KubesprayListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubesprayListDto(id int32, version NullableString, kubernetesVersion NullableString, isDeprecated bool) *KubesprayListDto {
	this := KubesprayListDto{}
	this.Id = id
	this.Version = version
	this.KubernetesVersion = kubernetesVersion
	this.IsDeprecated = isDeprecated
	return &this
}

// NewKubesprayListDtoWithDefaults instantiates a new KubesprayListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubesprayListDtoWithDefaults() *KubesprayListDto {
	this := KubesprayListDto{}
	return &this
}

// GetId returns the Id field value
func (o *KubesprayListDto) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *KubesprayListDto) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *KubesprayListDto) SetId(v int32) {
	o.Id = v
}

// GetVersion returns the Version field value
// If the value is explicit nil, the zero value for string will be returned
func (o *KubesprayListDto) GetVersion() string {
	if o == nil || o.Version.Get() == nil {
		var ret string
		return ret
	}

	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubesprayListDto) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// SetVersion sets field value
func (o *KubesprayListDto) SetVersion(v string) {
	o.Version.Set(&v)
}

// GetKubernetesVersion returns the KubernetesVersion field value
// If the value is explicit nil, the zero value for string will be returned
func (o *KubesprayListDto) GetKubernetesVersion() string {
	if o == nil || o.KubernetesVersion.Get() == nil {
		var ret string
		return ret
	}

	return *o.KubernetesVersion.Get()
}

// GetKubernetesVersionOk returns a tuple with the KubernetesVersion field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubesprayListDto) GetKubernetesVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KubernetesVersion.Get(), o.KubernetesVersion.IsSet()
}

// SetKubernetesVersion sets field value
func (o *KubesprayListDto) SetKubernetesVersion(v string) {
	o.KubernetesVersion.Set(&v)
}

// GetIsDeprecated returns the IsDeprecated field value
func (o *KubesprayListDto) GetIsDeprecated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDeprecated
}

// GetIsDeprecatedOk returns a tuple with the IsDeprecated field value
// and a boolean to check if the value has been set.
func (o *KubesprayListDto) GetIsDeprecatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDeprecated, true
}

// SetIsDeprecated sets field value
func (o *KubesprayListDto) SetIsDeprecated(v bool) {
	o.IsDeprecated = v
}

func (o KubesprayListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubesprayListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["version"] = o.Version.Get()
	toSerialize["kubernetesVersion"] = o.KubernetesVersion.Get()
	toSerialize["isDeprecated"] = o.IsDeprecated
	return toSerialize, nil
}

func (o *KubesprayListDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"version",
		"kubernetesVersion",
		"isDeprecated",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKubesprayListDto := _KubesprayListDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKubesprayListDto)

	if err != nil {
		return err
	}

	*o = KubesprayListDto(varKubesprayListDto)

	return err
}

type NullableKubesprayListDto struct {
	value *KubesprayListDto
	isSet bool
}

func (v NullableKubesprayListDto) Get() *KubesprayListDto {
	return v.value
}

func (v *NullableKubesprayListDto) Set(val *KubesprayListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableKubesprayListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableKubesprayListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubesprayListDto(val *KubesprayListDto) *NullableKubesprayListDto {
	return &NullableKubesprayListDto{value: val, isSet: true}
}

func (v NullableKubesprayListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubesprayListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


