// Code generated by go-swagger; DO NOT EDIT.

package security_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// SecurityGroupListReader is a Reader for the SecurityGroupList structure.
type SecurityGroupListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecurityGroupListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSecurityGroupListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSecurityGroupListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSecurityGroupListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSecurityGroupListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSecurityGroupListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSecurityGroupListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSecurityGroupListOK creates a SecurityGroupListOK with default headers values
func NewSecurityGroupListOK() *SecurityGroupListOK {
	return &SecurityGroupListOK{}
}

/*
SecurityGroupListOK describes a response with status code 200, with default header values.

Success
*/
type SecurityGroupListOK struct {
	Payload []*models.SecurityGroupListDto
}

// IsSuccess returns true when this security group list o k response has a 2xx status code
func (o *SecurityGroupListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this security group list o k response has a 3xx status code
func (o *SecurityGroupListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security group list o k response has a 4xx status code
func (o *SecurityGroupListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this security group list o k response has a 5xx status code
func (o *SecurityGroupListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this security group list o k response a status code equal to that given
func (o *SecurityGroupListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the security group list o k response
func (o *SecurityGroupListOK) Code() int {
	return 200
}

func (o *SecurityGroupListOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/list/{standAloneProfileId}][%d] securityGroupListOK  %+v", 200, o.Payload)
}

func (o *SecurityGroupListOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/list/{standAloneProfileId}][%d] securityGroupListOK  %+v", 200, o.Payload)
}

func (o *SecurityGroupListOK) GetPayload() []*models.SecurityGroupListDto {
	return o.Payload
}

func (o *SecurityGroupListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecurityGroupListBadRequest creates a SecurityGroupListBadRequest with default headers values
func NewSecurityGroupListBadRequest() *SecurityGroupListBadRequest {
	return &SecurityGroupListBadRequest{}
}

/*
SecurityGroupListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SecurityGroupListBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this security group list bad request response has a 2xx status code
func (o *SecurityGroupListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this security group list bad request response has a 3xx status code
func (o *SecurityGroupListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security group list bad request response has a 4xx status code
func (o *SecurityGroupListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this security group list bad request response has a 5xx status code
func (o *SecurityGroupListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this security group list bad request response a status code equal to that given
func (o *SecurityGroupListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the security group list bad request response
func (o *SecurityGroupListBadRequest) Code() int {
	return 400
}

func (o *SecurityGroupListBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/list/{standAloneProfileId}][%d] securityGroupListBadRequest  %+v", 400, o.Payload)
}

func (o *SecurityGroupListBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/list/{standAloneProfileId}][%d] securityGroupListBadRequest  %+v", 400, o.Payload)
}

func (o *SecurityGroupListBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SecurityGroupListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecurityGroupListUnauthorized creates a SecurityGroupListUnauthorized with default headers values
func NewSecurityGroupListUnauthorized() *SecurityGroupListUnauthorized {
	return &SecurityGroupListUnauthorized{}
}

/*
SecurityGroupListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SecurityGroupListUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this security group list unauthorized response has a 2xx status code
func (o *SecurityGroupListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this security group list unauthorized response has a 3xx status code
func (o *SecurityGroupListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security group list unauthorized response has a 4xx status code
func (o *SecurityGroupListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this security group list unauthorized response has a 5xx status code
func (o *SecurityGroupListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this security group list unauthorized response a status code equal to that given
func (o *SecurityGroupListUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the security group list unauthorized response
func (o *SecurityGroupListUnauthorized) Code() int {
	return 401
}

func (o *SecurityGroupListUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/list/{standAloneProfileId}][%d] securityGroupListUnauthorized  %+v", 401, o.Payload)
}

func (o *SecurityGroupListUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/list/{standAloneProfileId}][%d] securityGroupListUnauthorized  %+v", 401, o.Payload)
}

func (o *SecurityGroupListUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SecurityGroupListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecurityGroupListForbidden creates a SecurityGroupListForbidden with default headers values
func NewSecurityGroupListForbidden() *SecurityGroupListForbidden {
	return &SecurityGroupListForbidden{}
}

/*
SecurityGroupListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SecurityGroupListForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this security group list forbidden response has a 2xx status code
func (o *SecurityGroupListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this security group list forbidden response has a 3xx status code
func (o *SecurityGroupListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security group list forbidden response has a 4xx status code
func (o *SecurityGroupListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this security group list forbidden response has a 5xx status code
func (o *SecurityGroupListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this security group list forbidden response a status code equal to that given
func (o *SecurityGroupListForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the security group list forbidden response
func (o *SecurityGroupListForbidden) Code() int {
	return 403
}

func (o *SecurityGroupListForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/list/{standAloneProfileId}][%d] securityGroupListForbidden  %+v", 403, o.Payload)
}

func (o *SecurityGroupListForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/list/{standAloneProfileId}][%d] securityGroupListForbidden  %+v", 403, o.Payload)
}

func (o *SecurityGroupListForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SecurityGroupListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecurityGroupListNotFound creates a SecurityGroupListNotFound with default headers values
func NewSecurityGroupListNotFound() *SecurityGroupListNotFound {
	return &SecurityGroupListNotFound{}
}

/*
SecurityGroupListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SecurityGroupListNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this security group list not found response has a 2xx status code
func (o *SecurityGroupListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this security group list not found response has a 3xx status code
func (o *SecurityGroupListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security group list not found response has a 4xx status code
func (o *SecurityGroupListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this security group list not found response has a 5xx status code
func (o *SecurityGroupListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this security group list not found response a status code equal to that given
func (o *SecurityGroupListNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the security group list not found response
func (o *SecurityGroupListNotFound) Code() int {
	return 404
}

func (o *SecurityGroupListNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/list/{standAloneProfileId}][%d] securityGroupListNotFound  %+v", 404, o.Payload)
}

func (o *SecurityGroupListNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/list/{standAloneProfileId}][%d] securityGroupListNotFound  %+v", 404, o.Payload)
}

func (o *SecurityGroupListNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SecurityGroupListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecurityGroupListInternalServerError creates a SecurityGroupListInternalServerError with default headers values
func NewSecurityGroupListInternalServerError() *SecurityGroupListInternalServerError {
	return &SecurityGroupListInternalServerError{}
}

/*
SecurityGroupListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type SecurityGroupListInternalServerError struct {
}

// IsSuccess returns true when this security group list internal server error response has a 2xx status code
func (o *SecurityGroupListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this security group list internal server error response has a 3xx status code
func (o *SecurityGroupListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security group list internal server error response has a 4xx status code
func (o *SecurityGroupListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this security group list internal server error response has a 5xx status code
func (o *SecurityGroupListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this security group list internal server error response a status code equal to that given
func (o *SecurityGroupListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the security group list internal server error response
func (o *SecurityGroupListInternalServerError) Code() int {
	return 500
}

func (o *SecurityGroupListInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/list/{standAloneProfileId}][%d] securityGroupListInternalServerError ", 500)
}

func (o *SecurityGroupListInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/list/{standAloneProfileId}][%d] securityGroupListInternalServerError ", 500)
}

func (o *SecurityGroupListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
