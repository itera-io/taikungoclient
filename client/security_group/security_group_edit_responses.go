// Code generated by go-swagger; DO NOT EDIT.

package security_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SecurityGroupEditReader is a Reader for the SecurityGroupEdit structure.
type SecurityGroupEditReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecurityGroupEditReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSecurityGroupEditOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSecurityGroupEditBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSecurityGroupEditUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSecurityGroupEditForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSecurityGroupEditNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSecurityGroupEditInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSecurityGroupEditOK creates a SecurityGroupEditOK with default headers values
func NewSecurityGroupEditOK() *SecurityGroupEditOK {
	return &SecurityGroupEditOK{}
}

/*
SecurityGroupEditOK describes a response with status code 200, with default header values.

Success
*/
type SecurityGroupEditOK struct {
	Payload interface{}
}

// IsSuccess returns true when this security group edit o k response has a 2xx status code
func (o *SecurityGroupEditOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this security group edit o k response has a 3xx status code
func (o *SecurityGroupEditOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security group edit o k response has a 4xx status code
func (o *SecurityGroupEditOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this security group edit o k response has a 5xx status code
func (o *SecurityGroupEditOK) IsServerError() bool {
	return false
}

// IsCode returns true when this security group edit o k response a status code equal to that given
func (o *SecurityGroupEditOK) IsCode(code int) bool {
	return code == 200
}

func (o *SecurityGroupEditOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/edit][%d] securityGroupEditOK  %+v", 200, o.Payload)
}

func (o *SecurityGroupEditOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/edit][%d] securityGroupEditOK  %+v", 200, o.Payload)
}

func (o *SecurityGroupEditOK) GetPayload() interface{} {
	return o.Payload
}

func (o *SecurityGroupEditOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecurityGroupEditBadRequest creates a SecurityGroupEditBadRequest with default headers values
func NewSecurityGroupEditBadRequest() *SecurityGroupEditBadRequest {
	return &SecurityGroupEditBadRequest{}
}

/*
SecurityGroupEditBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SecurityGroupEditBadRequest struct {
	Payload []*SecurityGroupEditBadRequestBodyItems0
}

// IsSuccess returns true when this security group edit bad request response has a 2xx status code
func (o *SecurityGroupEditBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this security group edit bad request response has a 3xx status code
func (o *SecurityGroupEditBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security group edit bad request response has a 4xx status code
func (o *SecurityGroupEditBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this security group edit bad request response has a 5xx status code
func (o *SecurityGroupEditBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this security group edit bad request response a status code equal to that given
func (o *SecurityGroupEditBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SecurityGroupEditBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/edit][%d] securityGroupEditBadRequest  %+v", 400, o.Payload)
}

func (o *SecurityGroupEditBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/edit][%d] securityGroupEditBadRequest  %+v", 400, o.Payload)
}

func (o *SecurityGroupEditBadRequest) GetPayload() []*SecurityGroupEditBadRequestBodyItems0 {
	return o.Payload
}

func (o *SecurityGroupEditBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecurityGroupEditUnauthorized creates a SecurityGroupEditUnauthorized with default headers values
func NewSecurityGroupEditUnauthorized() *SecurityGroupEditUnauthorized {
	return &SecurityGroupEditUnauthorized{}
}

/*
SecurityGroupEditUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SecurityGroupEditUnauthorized struct {
	Payload *SecurityGroupEditUnauthorizedBody
}

// IsSuccess returns true when this security group edit unauthorized response has a 2xx status code
func (o *SecurityGroupEditUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this security group edit unauthorized response has a 3xx status code
func (o *SecurityGroupEditUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security group edit unauthorized response has a 4xx status code
func (o *SecurityGroupEditUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this security group edit unauthorized response has a 5xx status code
func (o *SecurityGroupEditUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this security group edit unauthorized response a status code equal to that given
func (o *SecurityGroupEditUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SecurityGroupEditUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/edit][%d] securityGroupEditUnauthorized  %+v", 401, o.Payload)
}

func (o *SecurityGroupEditUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/edit][%d] securityGroupEditUnauthorized  %+v", 401, o.Payload)
}

func (o *SecurityGroupEditUnauthorized) GetPayload() *SecurityGroupEditUnauthorizedBody {
	return o.Payload
}

func (o *SecurityGroupEditUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SecurityGroupEditUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecurityGroupEditForbidden creates a SecurityGroupEditForbidden with default headers values
func NewSecurityGroupEditForbidden() *SecurityGroupEditForbidden {
	return &SecurityGroupEditForbidden{}
}

/*
SecurityGroupEditForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SecurityGroupEditForbidden struct {
	Payload *SecurityGroupEditForbiddenBody
}

// IsSuccess returns true when this security group edit forbidden response has a 2xx status code
func (o *SecurityGroupEditForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this security group edit forbidden response has a 3xx status code
func (o *SecurityGroupEditForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security group edit forbidden response has a 4xx status code
func (o *SecurityGroupEditForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this security group edit forbidden response has a 5xx status code
func (o *SecurityGroupEditForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this security group edit forbidden response a status code equal to that given
func (o *SecurityGroupEditForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SecurityGroupEditForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/edit][%d] securityGroupEditForbidden  %+v", 403, o.Payload)
}

func (o *SecurityGroupEditForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/edit][%d] securityGroupEditForbidden  %+v", 403, o.Payload)
}

func (o *SecurityGroupEditForbidden) GetPayload() *SecurityGroupEditForbiddenBody {
	return o.Payload
}

func (o *SecurityGroupEditForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SecurityGroupEditForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecurityGroupEditNotFound creates a SecurityGroupEditNotFound with default headers values
func NewSecurityGroupEditNotFound() *SecurityGroupEditNotFound {
	return &SecurityGroupEditNotFound{}
}

/*
SecurityGroupEditNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SecurityGroupEditNotFound struct {
	Payload *SecurityGroupEditNotFoundBody
}

// IsSuccess returns true when this security group edit not found response has a 2xx status code
func (o *SecurityGroupEditNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this security group edit not found response has a 3xx status code
func (o *SecurityGroupEditNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security group edit not found response has a 4xx status code
func (o *SecurityGroupEditNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this security group edit not found response has a 5xx status code
func (o *SecurityGroupEditNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this security group edit not found response a status code equal to that given
func (o *SecurityGroupEditNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SecurityGroupEditNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/edit][%d] securityGroupEditNotFound  %+v", 404, o.Payload)
}

func (o *SecurityGroupEditNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/edit][%d] securityGroupEditNotFound  %+v", 404, o.Payload)
}

func (o *SecurityGroupEditNotFound) GetPayload() *SecurityGroupEditNotFoundBody {
	return o.Payload
}

func (o *SecurityGroupEditNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SecurityGroupEditNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecurityGroupEditInternalServerError creates a SecurityGroupEditInternalServerError with default headers values
func NewSecurityGroupEditInternalServerError() *SecurityGroupEditInternalServerError {
	return &SecurityGroupEditInternalServerError{}
}

/*
SecurityGroupEditInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type SecurityGroupEditInternalServerError struct {
}

// IsSuccess returns true when this security group edit internal server error response has a 2xx status code
func (o *SecurityGroupEditInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this security group edit internal server error response has a 3xx status code
func (o *SecurityGroupEditInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security group edit internal server error response has a 4xx status code
func (o *SecurityGroupEditInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this security group edit internal server error response has a 5xx status code
func (o *SecurityGroupEditInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this security group edit internal server error response a status code equal to that given
func (o *SecurityGroupEditInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SecurityGroupEditInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/edit][%d] securityGroupEditInternalServerError ", 500)
}

func (o *SecurityGroupEditInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/SecurityGroup/edit][%d] securityGroupEditInternalServerError ", 500)
}

func (o *SecurityGroupEditInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
SecurityGroupEditBadRequestBodyItems0 security group edit bad request body items0
swagger:model SecurityGroupEditBadRequestBodyItems0
*/
type SecurityGroupEditBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this security group edit bad request body items0
func (o *SecurityGroupEditBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this security group edit bad request body items0 based on context it is used
func (o *SecurityGroupEditBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SecurityGroupEditBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityGroupEditBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res SecurityGroupEditBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SecurityGroupEditBody security group edit body
swagger:model SecurityGroupEditBody
*/
type SecurityGroupEditBody struct {

	// id
	ID int32 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// port max range
	PortMaxRange int32 `json:"portMaxRange,omitempty"`

	// port min range
	PortMinRange int32 `json:"portMinRange,omitempty"`

	// protocol
	// Enum: [100 200 300]
	Protocol int32 `json:"protocol,omitempty"`

	// remote Ip prefix
	RemoteIPPrefix string `json:"remoteIpPrefix,omitempty"`
}

// Validate validates this security group edit body
func (o *SecurityGroupEditBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateProtocol(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var securityGroupEditBodyTypeProtocolPropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[100,200,300]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		securityGroupEditBodyTypeProtocolPropEnum = append(securityGroupEditBodyTypeProtocolPropEnum, v)
	}
}

// prop value enum
func (o *SecurityGroupEditBody) validateProtocolEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, securityGroupEditBodyTypeProtocolPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *SecurityGroupEditBody) validateProtocol(formats strfmt.Registry) error {
	if swag.IsZero(o.Protocol) { // not required
		return nil
	}

	// value enum
	if err := o.validateProtocolEnum("body"+"."+"protocol", "body", o.Protocol); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this security group edit body based on context it is used
func (o *SecurityGroupEditBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SecurityGroupEditBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityGroupEditBody) UnmarshalBinary(b []byte) error {
	var res SecurityGroupEditBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SecurityGroupEditForbiddenBody security group edit forbidden body
swagger:model SecurityGroupEditForbiddenBody
*/
type SecurityGroupEditForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this security group edit forbidden body
func (o *SecurityGroupEditForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this security group edit forbidden body based on context it is used
func (o *SecurityGroupEditForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SecurityGroupEditForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityGroupEditForbiddenBody) UnmarshalBinary(b []byte) error {
	var res SecurityGroupEditForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SecurityGroupEditNotFoundBody security group edit not found body
swagger:model SecurityGroupEditNotFoundBody
*/
type SecurityGroupEditNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this security group edit not found body
func (o *SecurityGroupEditNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this security group edit not found body based on context it is used
func (o *SecurityGroupEditNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SecurityGroupEditNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityGroupEditNotFoundBody) UnmarshalBinary(b []byte) error {
	var res SecurityGroupEditNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SecurityGroupEditUnauthorizedBody security group edit unauthorized body
swagger:model SecurityGroupEditUnauthorizedBody
*/
type SecurityGroupEditUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this security group edit unauthorized body
func (o *SecurityGroupEditUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this security group edit unauthorized body based on context it is used
func (o *SecurityGroupEditUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SecurityGroupEditUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecurityGroupEditUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res SecurityGroupEditUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
