/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the CatalogAppDetailsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogAppDetailsDto{}

// CatalogAppDetailsDto struct for CatalogAppDetailsDto
type CatalogAppDetailsDto struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	AppRepoName *string `json:"appRepoName,omitempty"`
	AppRepoOrganizationName *string `json:"appRepoOrganizationName,omitempty"`
	AppRepoId *int32 `json:"appRepoId,omitempty"`
	CatalogName *string `json:"catalogName,omitempty"`
	CatalogId *int32 `json:"catalogId,omitempty"`
	PackageId *string `json:"packageId,omitempty"`
	Version *string `json:"version,omitempty"`
	LogoId *string `json:"logoId,omitempty"`
	ProjectApps []ProjectAppDto `json:"projectApps,omitempty"`
	Description *string `json:"description,omitempty"`
	Readme *string `json:"readme,omitempty"`
	SecurityReport *SecurityReportSummaryDto `json:"securityReport,omitempty"`
	AppVersion *string `json:"appVersion,omitempty"`
	Stars *int32 `json:"stars,omitempty"`
	VerifiedPublisher *bool `json:"verifiedPublisher,omitempty"`
	Official *bool `json:"official,omitempty"`
	HasJsonSchema *bool `json:"hasJsonSchema,omitempty"`
}

// NewCatalogAppDetailsDto instantiates a new CatalogAppDetailsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogAppDetailsDto() *CatalogAppDetailsDto {
	this := CatalogAppDetailsDto{}
	return &this
}

// NewCatalogAppDetailsDtoWithDefaults instantiates a new CatalogAppDetailsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogAppDetailsDtoWithDefaults() *CatalogAppDetailsDto {
	this := CatalogAppDetailsDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CatalogAppDetailsDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppDetailsDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CatalogAppDetailsDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CatalogAppDetailsDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CatalogAppDetailsDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppDetailsDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CatalogAppDetailsDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CatalogAppDetailsDto) SetName(v string) {
	o.Name = &v
}

// GetAppRepoName returns the AppRepoName field value if set, zero value otherwise.
func (o *CatalogAppDetailsDto) GetAppRepoName() string {
	if o == nil || IsNil(o.AppRepoName) {
		var ret string
		return ret
	}
	return *o.AppRepoName
}

// GetAppRepoNameOk returns a tuple with the AppRepoName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppDetailsDto) GetAppRepoNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppRepoName) {
		return nil, false
	}
	return o.AppRepoName, true
}

// HasAppRepoName returns a boolean if a field has been set.
func (o *CatalogAppDetailsDto) HasAppRepoName() bool {
	if o != nil && !IsNil(o.AppRepoName) {
		return true
	}

	return false
}

// SetAppRepoName gets a reference to the given string and assigns it to the AppRepoName field.
func (o *CatalogAppDetailsDto) SetAppRepoName(v string) {
	o.AppRepoName = &v
}

// GetAppRepoOrganizationName returns the AppRepoOrganizationName field value if set, zero value otherwise.
func (o *CatalogAppDetailsDto) GetAppRepoOrganizationName() string {
	if o == nil || IsNil(o.AppRepoOrganizationName) {
		var ret string
		return ret
	}
	return *o.AppRepoOrganizationName
}

// GetAppRepoOrganizationNameOk returns a tuple with the AppRepoOrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppDetailsDto) GetAppRepoOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppRepoOrganizationName) {
		return nil, false
	}
	return o.AppRepoOrganizationName, true
}

// HasAppRepoOrganizationName returns a boolean if a field has been set.
func (o *CatalogAppDetailsDto) HasAppRepoOrganizationName() bool {
	if o != nil && !IsNil(o.AppRepoOrganizationName) {
		return true
	}

	return false
}

// SetAppRepoOrganizationName gets a reference to the given string and assigns it to the AppRepoOrganizationName field.
func (o *CatalogAppDetailsDto) SetAppRepoOrganizationName(v string) {
	o.AppRepoOrganizationName = &v
}

// GetAppRepoId returns the AppRepoId field value if set, zero value otherwise.
func (o *CatalogAppDetailsDto) GetAppRepoId() int32 {
	if o == nil || IsNil(o.AppRepoId) {
		var ret int32
		return ret
	}
	return *o.AppRepoId
}

// GetAppRepoIdOk returns a tuple with the AppRepoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppDetailsDto) GetAppRepoIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AppRepoId) {
		return nil, false
	}
	return o.AppRepoId, true
}

// HasAppRepoId returns a boolean if a field has been set.
func (o *CatalogAppDetailsDto) HasAppRepoId() bool {
	if o != nil && !IsNil(o.AppRepoId) {
		return true
	}

	return false
}

// SetAppRepoId gets a reference to the given int32 and assigns it to the AppRepoId field.
func (o *CatalogAppDetailsDto) SetAppRepoId(v int32) {
	o.AppRepoId = &v
}

// GetCatalogName returns the CatalogName field value if set, zero value otherwise.
func (o *CatalogAppDetailsDto) GetCatalogName() string {
	if o == nil || IsNil(o.CatalogName) {
		var ret string
		return ret
	}
	return *o.CatalogName
}

// GetCatalogNameOk returns a tuple with the CatalogName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppDetailsDto) GetCatalogNameOk() (*string, bool) {
	if o == nil || IsNil(o.CatalogName) {
		return nil, false
	}
	return o.CatalogName, true
}

// HasCatalogName returns a boolean if a field has been set.
func (o *CatalogAppDetailsDto) HasCatalogName() bool {
	if o != nil && !IsNil(o.CatalogName) {
		return true
	}

	return false
}

// SetCatalogName gets a reference to the given string and assigns it to the CatalogName field.
func (o *CatalogAppDetailsDto) SetCatalogName(v string) {
	o.CatalogName = &v
}

// GetCatalogId returns the CatalogId field value if set, zero value otherwise.
func (o *CatalogAppDetailsDto) GetCatalogId() int32 {
	if o == nil || IsNil(o.CatalogId) {
		var ret int32
		return ret
	}
	return *o.CatalogId
}

// GetCatalogIdOk returns a tuple with the CatalogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppDetailsDto) GetCatalogIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CatalogId) {
		return nil, false
	}
	return o.CatalogId, true
}

// HasCatalogId returns a boolean if a field has been set.
func (o *CatalogAppDetailsDto) HasCatalogId() bool {
	if o != nil && !IsNil(o.CatalogId) {
		return true
	}

	return false
}

// SetCatalogId gets a reference to the given int32 and assigns it to the CatalogId field.
func (o *CatalogAppDetailsDto) SetCatalogId(v int32) {
	o.CatalogId = &v
}

// GetPackageId returns the PackageId field value if set, zero value otherwise.
func (o *CatalogAppDetailsDto) GetPackageId() string {
	if o == nil || IsNil(o.PackageId) {
		var ret string
		return ret
	}
	return *o.PackageId
}

// GetPackageIdOk returns a tuple with the PackageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppDetailsDto) GetPackageIdOk() (*string, bool) {
	if o == nil || IsNil(o.PackageId) {
		return nil, false
	}
	return o.PackageId, true
}

// HasPackageId returns a boolean if a field has been set.
func (o *CatalogAppDetailsDto) HasPackageId() bool {
	if o != nil && !IsNil(o.PackageId) {
		return true
	}

	return false
}

// SetPackageId gets a reference to the given string and assigns it to the PackageId field.
func (o *CatalogAppDetailsDto) SetPackageId(v string) {
	o.PackageId = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CatalogAppDetailsDto) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppDetailsDto) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CatalogAppDetailsDto) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *CatalogAppDetailsDto) SetVersion(v string) {
	o.Version = &v
}

// GetLogoId returns the LogoId field value if set, zero value otherwise.
func (o *CatalogAppDetailsDto) GetLogoId() string {
	if o == nil || IsNil(o.LogoId) {
		var ret string
		return ret
	}
	return *o.LogoId
}

// GetLogoIdOk returns a tuple with the LogoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppDetailsDto) GetLogoIdOk() (*string, bool) {
	if o == nil || IsNil(o.LogoId) {
		return nil, false
	}
	return o.LogoId, true
}

// HasLogoId returns a boolean if a field has been set.
func (o *CatalogAppDetailsDto) HasLogoId() bool {
	if o != nil && !IsNil(o.LogoId) {
		return true
	}

	return false
}

// SetLogoId gets a reference to the given string and assigns it to the LogoId field.
func (o *CatalogAppDetailsDto) SetLogoId(v string) {
	o.LogoId = &v
}

// GetProjectApps returns the ProjectApps field value if set, zero value otherwise.
func (o *CatalogAppDetailsDto) GetProjectApps() []ProjectAppDto {
	if o == nil || IsNil(o.ProjectApps) {
		var ret []ProjectAppDto
		return ret
	}
	return o.ProjectApps
}

// GetProjectAppsOk returns a tuple with the ProjectApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppDetailsDto) GetProjectAppsOk() ([]ProjectAppDto, bool) {
	if o == nil || IsNil(o.ProjectApps) {
		return nil, false
	}
	return o.ProjectApps, true
}

// HasProjectApps returns a boolean if a field has been set.
func (o *CatalogAppDetailsDto) HasProjectApps() bool {
	if o != nil && !IsNil(o.ProjectApps) {
		return true
	}

	return false
}

// SetProjectApps gets a reference to the given []ProjectAppDto and assigns it to the ProjectApps field.
func (o *CatalogAppDetailsDto) SetProjectApps(v []ProjectAppDto) {
	o.ProjectApps = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CatalogAppDetailsDto) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppDetailsDto) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CatalogAppDetailsDto) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CatalogAppDetailsDto) SetDescription(v string) {
	o.Description = &v
}

// GetReadme returns the Readme field value if set, zero value otherwise.
func (o *CatalogAppDetailsDto) GetReadme() string {
	if o == nil || IsNil(o.Readme) {
		var ret string
		return ret
	}
	return *o.Readme
}

// GetReadmeOk returns a tuple with the Readme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppDetailsDto) GetReadmeOk() (*string, bool) {
	if o == nil || IsNil(o.Readme) {
		return nil, false
	}
	return o.Readme, true
}

// HasReadme returns a boolean if a field has been set.
func (o *CatalogAppDetailsDto) HasReadme() bool {
	if o != nil && !IsNil(o.Readme) {
		return true
	}

	return false
}

// SetReadme gets a reference to the given string and assigns it to the Readme field.
func (o *CatalogAppDetailsDto) SetReadme(v string) {
	o.Readme = &v
}

// GetSecurityReport returns the SecurityReport field value if set, zero value otherwise.
func (o *CatalogAppDetailsDto) GetSecurityReport() SecurityReportSummaryDto {
	if o == nil || IsNil(o.SecurityReport) {
		var ret SecurityReportSummaryDto
		return ret
	}
	return *o.SecurityReport
}

// GetSecurityReportOk returns a tuple with the SecurityReport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppDetailsDto) GetSecurityReportOk() (*SecurityReportSummaryDto, bool) {
	if o == nil || IsNil(o.SecurityReport) {
		return nil, false
	}
	return o.SecurityReport, true
}

// HasSecurityReport returns a boolean if a field has been set.
func (o *CatalogAppDetailsDto) HasSecurityReport() bool {
	if o != nil && !IsNil(o.SecurityReport) {
		return true
	}

	return false
}

// SetSecurityReport gets a reference to the given SecurityReportSummaryDto and assigns it to the SecurityReport field.
func (o *CatalogAppDetailsDto) SetSecurityReport(v SecurityReportSummaryDto) {
	o.SecurityReport = &v
}

// GetAppVersion returns the AppVersion field value if set, zero value otherwise.
func (o *CatalogAppDetailsDto) GetAppVersion() string {
	if o == nil || IsNil(o.AppVersion) {
		var ret string
		return ret
	}
	return *o.AppVersion
}

// GetAppVersionOk returns a tuple with the AppVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppDetailsDto) GetAppVersionOk() (*string, bool) {
	if o == nil || IsNil(o.AppVersion) {
		return nil, false
	}
	return o.AppVersion, true
}

// HasAppVersion returns a boolean if a field has been set.
func (o *CatalogAppDetailsDto) HasAppVersion() bool {
	if o != nil && !IsNil(o.AppVersion) {
		return true
	}

	return false
}

// SetAppVersion gets a reference to the given string and assigns it to the AppVersion field.
func (o *CatalogAppDetailsDto) SetAppVersion(v string) {
	o.AppVersion = &v
}

// GetStars returns the Stars field value if set, zero value otherwise.
func (o *CatalogAppDetailsDto) GetStars() int32 {
	if o == nil || IsNil(o.Stars) {
		var ret int32
		return ret
	}
	return *o.Stars
}

// GetStarsOk returns a tuple with the Stars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppDetailsDto) GetStarsOk() (*int32, bool) {
	if o == nil || IsNil(o.Stars) {
		return nil, false
	}
	return o.Stars, true
}

// HasStars returns a boolean if a field has been set.
func (o *CatalogAppDetailsDto) HasStars() bool {
	if o != nil && !IsNil(o.Stars) {
		return true
	}

	return false
}

// SetStars gets a reference to the given int32 and assigns it to the Stars field.
func (o *CatalogAppDetailsDto) SetStars(v int32) {
	o.Stars = &v
}

// GetVerifiedPublisher returns the VerifiedPublisher field value if set, zero value otherwise.
func (o *CatalogAppDetailsDto) GetVerifiedPublisher() bool {
	if o == nil || IsNil(o.VerifiedPublisher) {
		var ret bool
		return ret
	}
	return *o.VerifiedPublisher
}

// GetVerifiedPublisherOk returns a tuple with the VerifiedPublisher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppDetailsDto) GetVerifiedPublisherOk() (*bool, bool) {
	if o == nil || IsNil(o.VerifiedPublisher) {
		return nil, false
	}
	return o.VerifiedPublisher, true
}

// HasVerifiedPublisher returns a boolean if a field has been set.
func (o *CatalogAppDetailsDto) HasVerifiedPublisher() bool {
	if o != nil && !IsNil(o.VerifiedPublisher) {
		return true
	}

	return false
}

// SetVerifiedPublisher gets a reference to the given bool and assigns it to the VerifiedPublisher field.
func (o *CatalogAppDetailsDto) SetVerifiedPublisher(v bool) {
	o.VerifiedPublisher = &v
}

// GetOfficial returns the Official field value if set, zero value otherwise.
func (o *CatalogAppDetailsDto) GetOfficial() bool {
	if o == nil || IsNil(o.Official) {
		var ret bool
		return ret
	}
	return *o.Official
}

// GetOfficialOk returns a tuple with the Official field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppDetailsDto) GetOfficialOk() (*bool, bool) {
	if o == nil || IsNil(o.Official) {
		return nil, false
	}
	return o.Official, true
}

// HasOfficial returns a boolean if a field has been set.
func (o *CatalogAppDetailsDto) HasOfficial() bool {
	if o != nil && !IsNil(o.Official) {
		return true
	}

	return false
}

// SetOfficial gets a reference to the given bool and assigns it to the Official field.
func (o *CatalogAppDetailsDto) SetOfficial(v bool) {
	o.Official = &v
}

// GetHasJsonSchema returns the HasJsonSchema field value if set, zero value otherwise.
func (o *CatalogAppDetailsDto) GetHasJsonSchema() bool {
	if o == nil || IsNil(o.HasJsonSchema) {
		var ret bool
		return ret
	}
	return *o.HasJsonSchema
}

// GetHasJsonSchemaOk returns a tuple with the HasJsonSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogAppDetailsDto) GetHasJsonSchemaOk() (*bool, bool) {
	if o == nil || IsNil(o.HasJsonSchema) {
		return nil, false
	}
	return o.HasJsonSchema, true
}

// HasHasJsonSchema returns a boolean if a field has been set.
func (o *CatalogAppDetailsDto) HasHasJsonSchema() bool {
	if o != nil && !IsNil(o.HasJsonSchema) {
		return true
	}

	return false
}

// SetHasJsonSchema gets a reference to the given bool and assigns it to the HasJsonSchema field.
func (o *CatalogAppDetailsDto) SetHasJsonSchema(v bool) {
	o.HasJsonSchema = &v
}

func (o CatalogAppDetailsDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogAppDetailsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.AppRepoName) {
		toSerialize["appRepoName"] = o.AppRepoName
	}
	if !IsNil(o.AppRepoOrganizationName) {
		toSerialize["appRepoOrganizationName"] = o.AppRepoOrganizationName
	}
	if !IsNil(o.AppRepoId) {
		toSerialize["appRepoId"] = o.AppRepoId
	}
	if !IsNil(o.CatalogName) {
		toSerialize["catalogName"] = o.CatalogName
	}
	if !IsNil(o.CatalogId) {
		toSerialize["catalogId"] = o.CatalogId
	}
	if !IsNil(o.PackageId) {
		toSerialize["packageId"] = o.PackageId
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.LogoId) {
		toSerialize["logoId"] = o.LogoId
	}
	if !IsNil(o.ProjectApps) {
		toSerialize["projectApps"] = o.ProjectApps
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Readme) {
		toSerialize["readme"] = o.Readme
	}
	if !IsNil(o.SecurityReport) {
		toSerialize["securityReport"] = o.SecurityReport
	}
	if !IsNil(o.AppVersion) {
		toSerialize["appVersion"] = o.AppVersion
	}
	if !IsNil(o.Stars) {
		toSerialize["stars"] = o.Stars
	}
	if !IsNil(o.VerifiedPublisher) {
		toSerialize["verifiedPublisher"] = o.VerifiedPublisher
	}
	if !IsNil(o.Official) {
		toSerialize["official"] = o.Official
	}
	if !IsNil(o.HasJsonSchema) {
		toSerialize["hasJsonSchema"] = o.HasJsonSchema
	}
	return toSerialize, nil
}

type NullableCatalogAppDetailsDto struct {
	value *CatalogAppDetailsDto
	isSet bool
}

func (v NullableCatalogAppDetailsDto) Get() *CatalogAppDetailsDto {
	return v.value
}

func (v *NullableCatalogAppDetailsDto) Set(val *CatalogAppDetailsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogAppDetailsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogAppDetailsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogAppDetailsDto(val *CatalogAppDetailsDto) *NullableCatalogAppDetailsDto {
	return &NullableCatalogAppDetailsDto{value: val, isSet: true}
}

func (v NullableCatalogAppDetailsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogAppDetailsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


