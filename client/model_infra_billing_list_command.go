/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the InfraBillingListCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InfraBillingListCommand{}

// InfraBillingListCommand struct for InfraBillingListCommand
type InfraBillingListCommand struct {
	OrganizationId NullableInt32 `json:"organizationId,omitempty"`
	Filter         *DateFilter   `json:"filter,omitempty"`
}

// NewInfraBillingListCommand instantiates a new InfraBillingListCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInfraBillingListCommand() *InfraBillingListCommand {
	this := InfraBillingListCommand{}
	return &this
}

// NewInfraBillingListCommandWithDefaults instantiates a new InfraBillingListCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInfraBillingListCommandWithDefaults() *InfraBillingListCommand {
	this := InfraBillingListCommand{}
	return &this
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InfraBillingListCommand) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId.Get()) {
		var ret int32
		return ret
	}
	return *o.OrganizationId.Get()
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InfraBillingListCommand) GetOrganizationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationId.Get(), o.OrganizationId.IsSet()
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *InfraBillingListCommand) HasOrganizationId() bool {
	if o != nil && o.OrganizationId.IsSet() {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given NullableInt32 and assigns it to the OrganizationId field.
func (o *InfraBillingListCommand) SetOrganizationId(v int32) {
	o.OrganizationId.Set(&v)
}

// SetOrganizationIdNil sets the value for OrganizationId to be an explicit nil
func (o *InfraBillingListCommand) SetOrganizationIdNil() {
	o.OrganizationId.Set(nil)
}

// UnsetOrganizationId ensures that no value is present for OrganizationId, not even an explicit nil
func (o *InfraBillingListCommand) UnsetOrganizationId() {
	o.OrganizationId.Unset()
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *InfraBillingListCommand) GetFilter() DateFilter {
	if o == nil || IsNil(o.Filter) {
		var ret DateFilter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfraBillingListCommand) GetFilterOk() (*DateFilter, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *InfraBillingListCommand) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given DateFilter and assigns it to the Filter field.
func (o *InfraBillingListCommand) SetFilter(v DateFilter) {
	o.Filter = &v
}

func (o InfraBillingListCommand) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InfraBillingListCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OrganizationId.IsSet() {
		toSerialize["organizationId"] = o.OrganizationId.Get()
	}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	return toSerialize, nil
}

type NullableInfraBillingListCommand struct {
	value *InfraBillingListCommand
	isSet bool
}

func (v NullableInfraBillingListCommand) Get() *InfraBillingListCommand {
	return v.value
}

func (v *NullableInfraBillingListCommand) Set(val *InfraBillingListCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableInfraBillingListCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableInfraBillingListCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInfraBillingListCommand(val *InfraBillingListCommand) *NullableInfraBillingListCommand {
	return &NullableInfraBillingListCommand{value: val, isSet: true}
}

func (v NullableInfraBillingListCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInfraBillingListCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
