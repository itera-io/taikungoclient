/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the UpdateExecutorHealthStatusCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateExecutorHealthStatusCommand{}

// UpdateExecutorHealthStatusCommand struct for UpdateExecutorHealthStatusCommand
type UpdateExecutorHealthStatusCommand struct {
	ExecutorId *int32 `json:"executorId,omitempty"`
	Health *ExecutorHealth `json:"health,omitempty"`
}

// NewUpdateExecutorHealthStatusCommand instantiates a new UpdateExecutorHealthStatusCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateExecutorHealthStatusCommand() *UpdateExecutorHealthStatusCommand {
	this := UpdateExecutorHealthStatusCommand{}
	return &this
}

// NewUpdateExecutorHealthStatusCommandWithDefaults instantiates a new UpdateExecutorHealthStatusCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateExecutorHealthStatusCommandWithDefaults() *UpdateExecutorHealthStatusCommand {
	this := UpdateExecutorHealthStatusCommand{}
	return &this
}

// GetExecutorId returns the ExecutorId field value if set, zero value otherwise.
func (o *UpdateExecutorHealthStatusCommand) GetExecutorId() int32 {
	if o == nil || IsNil(o.ExecutorId) {
		var ret int32
		return ret
	}
	return *o.ExecutorId
}

// GetExecutorIdOk returns a tuple with the ExecutorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateExecutorHealthStatusCommand) GetExecutorIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ExecutorId) {
		return nil, false
	}
	return o.ExecutorId, true
}

// HasExecutorId returns a boolean if a field has been set.
func (o *UpdateExecutorHealthStatusCommand) HasExecutorId() bool {
	if o != nil && !IsNil(o.ExecutorId) {
		return true
	}

	return false
}

// SetExecutorId gets a reference to the given int32 and assigns it to the ExecutorId field.
func (o *UpdateExecutorHealthStatusCommand) SetExecutorId(v int32) {
	o.ExecutorId = &v
}

// GetHealth returns the Health field value if set, zero value otherwise.
func (o *UpdateExecutorHealthStatusCommand) GetHealth() ExecutorHealth {
	if o == nil || IsNil(o.Health) {
		var ret ExecutorHealth
		return ret
	}
	return *o.Health
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateExecutorHealthStatusCommand) GetHealthOk() (*ExecutorHealth, bool) {
	if o == nil || IsNil(o.Health) {
		return nil, false
	}
	return o.Health, true
}

// HasHealth returns a boolean if a field has been set.
func (o *UpdateExecutorHealthStatusCommand) HasHealth() bool {
	if o != nil && !IsNil(o.Health) {
		return true
	}

	return false
}

// SetHealth gets a reference to the given ExecutorHealth and assigns it to the Health field.
func (o *UpdateExecutorHealthStatusCommand) SetHealth(v ExecutorHealth) {
	o.Health = &v
}

func (o UpdateExecutorHealthStatusCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateExecutorHealthStatusCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExecutorId) {
		toSerialize["executorId"] = o.ExecutorId
	}
	if !IsNil(o.Health) {
		toSerialize["health"] = o.Health
	}
	return toSerialize, nil
}

type NullableUpdateExecutorHealthStatusCommand struct {
	value *UpdateExecutorHealthStatusCommand
	isSet bool
}

func (v NullableUpdateExecutorHealthStatusCommand) Get() *UpdateExecutorHealthStatusCommand {
	return v.value
}

func (v *NullableUpdateExecutorHealthStatusCommand) Set(val *UpdateExecutorHealthStatusCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateExecutorHealthStatusCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateExecutorHealthStatusCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateExecutorHealthStatusCommand(val *UpdateExecutorHealthStatusCommand) *NullableUpdateExecutorHealthStatusCommand {
	return &NullableUpdateExecutorHealthStatusCommand{value: val, isSet: true}
}

func (v NullableUpdateExecutorHealthStatusCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateExecutorHealthStatusCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


