/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the EnumList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnumList{}

// EnumList struct for EnumList
type EnumList struct {
	CloudTypes               []CommonDropdownDto            `json:"cloudTypes,omitempty"`
	ProjectStatuses          []CommonDropdownDto            `json:"projectStatuses,omitempty"`
	ServerRoles              []CommonDropdownDto            `json:"serverRoles,omitempty"`
	ServerStatuses           []CommonDropdownDto            `json:"serverStatuses,omitempty"`
	UserRoles                []CommonDropdownDto            `json:"userRoles,omitempty"`
	SecurityGroupRules       []CommonDropdownDto            `json:"securityGroupRules,omitempty"`
	PrometheusTypes          []CommonDropdownDto            `json:"prometheusTypes,omitempty"`
	AuditLogs                []CommonDropdownDto            `json:"auditLogs,omitempty"`
	RebootOptions            []CommonDropdownDto            `json:"rebootOptions,omitempty"`
	Availability             []CommonAvailabilityDto        `json:"availability,omitempty"`
	SlackTypes               []CommonDropdownDto            `json:"slackTypes,omitempty"`
	RequestLogs              []CommonDropdownDto            `json:"requestLogs,omitempty"`
	AzureQuotas              []CommonDropdownDto            `json:"azureQuotas,omitempty"`
	ShowbackKinds            []CommonDropdownDto            `json:"showbackKinds,omitempty"`
	AlertTypes               []CommonDropdownDto            `json:"alertTypes,omitempty"`
	ReminderTypes            []CommonDropdownDto            `json:"reminderTypes,omitempty"`
	AwsPlatforms             []CommonStringBasedDropdownDto `json:"awsPlatforms,omitempty"`
	CronPeriods              []CommonStringBasedDropdownDto `json:"cronPeriods,omitempty"`
	ValidityPeriods          []CommonDropdownDto            `json:"validityPeriods,omitempty"`
	AlertingIntegrationTypes []CommonDropdownDto            `json:"alertingIntegrationTypes,omitempty"`
	GoogleImageTypes         []CommonDropdownDto            `json:"googleImageTypes,omitempty"`
	StandaloneVmStatuses     []CommonDropdownDto            `json:"standaloneVmStatuses,omitempty"`
	OpenstackContinents      []CommonStringBasedDropdownDto `json:"openstackContinents,omitempty"`
	RetentionPeriods         []CommonStringBasedDropdownDto `json:"retentionPeriods,omitempty"`
	TicketPriorities         []CommonDropdownDto            `json:"ticketPriorities,omitempty"`
	ProxmoxRoles             []CommonDropdownDto            `json:"proxmoxRoles,omitempty"`
}

// NewEnumList instantiates a new EnumList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnumList() *EnumList {
	this := EnumList{}
	return &this
}

// NewEnumListWithDefaults instantiates a new EnumList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnumListWithDefaults() *EnumList {
	this := EnumList{}
	return &this
}

// GetCloudTypes returns the CloudTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetCloudTypes() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.CloudTypes
}

// GetCloudTypesOk returns a tuple with the CloudTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetCloudTypesOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.CloudTypes) {
		return nil, false
	}
	return o.CloudTypes, true
}

// HasCloudTypes returns a boolean if a field has been set.
func (o *EnumList) HasCloudTypes() bool {
	if o != nil && IsNil(o.CloudTypes) {
		return true
	}

	return false
}

// SetCloudTypes gets a reference to the given []CommonDropdownDto and assigns it to the CloudTypes field.
func (o *EnumList) SetCloudTypes(v []CommonDropdownDto) {
	o.CloudTypes = v
}

// GetProjectStatuses returns the ProjectStatuses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetProjectStatuses() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.ProjectStatuses
}

// GetProjectStatusesOk returns a tuple with the ProjectStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetProjectStatusesOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.ProjectStatuses) {
		return nil, false
	}
	return o.ProjectStatuses, true
}

// HasProjectStatuses returns a boolean if a field has been set.
func (o *EnumList) HasProjectStatuses() bool {
	if o != nil && IsNil(o.ProjectStatuses) {
		return true
	}

	return false
}

// SetProjectStatuses gets a reference to the given []CommonDropdownDto and assigns it to the ProjectStatuses field.
func (o *EnumList) SetProjectStatuses(v []CommonDropdownDto) {
	o.ProjectStatuses = v
}

// GetServerRoles returns the ServerRoles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetServerRoles() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.ServerRoles
}

// GetServerRolesOk returns a tuple with the ServerRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetServerRolesOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.ServerRoles) {
		return nil, false
	}
	return o.ServerRoles, true
}

// HasServerRoles returns a boolean if a field has been set.
func (o *EnumList) HasServerRoles() bool {
	if o != nil && IsNil(o.ServerRoles) {
		return true
	}

	return false
}

// SetServerRoles gets a reference to the given []CommonDropdownDto and assigns it to the ServerRoles field.
func (o *EnumList) SetServerRoles(v []CommonDropdownDto) {
	o.ServerRoles = v
}

// GetServerStatuses returns the ServerStatuses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetServerStatuses() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.ServerStatuses
}

// GetServerStatusesOk returns a tuple with the ServerStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetServerStatusesOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.ServerStatuses) {
		return nil, false
	}
	return o.ServerStatuses, true
}

// HasServerStatuses returns a boolean if a field has been set.
func (o *EnumList) HasServerStatuses() bool {
	if o != nil && IsNil(o.ServerStatuses) {
		return true
	}

	return false
}

// SetServerStatuses gets a reference to the given []CommonDropdownDto and assigns it to the ServerStatuses field.
func (o *EnumList) SetServerStatuses(v []CommonDropdownDto) {
	o.ServerStatuses = v
}

// GetUserRoles returns the UserRoles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetUserRoles() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.UserRoles
}

// GetUserRolesOk returns a tuple with the UserRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetUserRolesOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.UserRoles) {
		return nil, false
	}
	return o.UserRoles, true
}

// HasUserRoles returns a boolean if a field has been set.
func (o *EnumList) HasUserRoles() bool {
	if o != nil && IsNil(o.UserRoles) {
		return true
	}

	return false
}

// SetUserRoles gets a reference to the given []CommonDropdownDto and assigns it to the UserRoles field.
func (o *EnumList) SetUserRoles(v []CommonDropdownDto) {
	o.UserRoles = v
}

// GetSecurityGroupRules returns the SecurityGroupRules field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetSecurityGroupRules() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.SecurityGroupRules
}

// GetSecurityGroupRulesOk returns a tuple with the SecurityGroupRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetSecurityGroupRulesOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.SecurityGroupRules) {
		return nil, false
	}
	return o.SecurityGroupRules, true
}

// HasSecurityGroupRules returns a boolean if a field has been set.
func (o *EnumList) HasSecurityGroupRules() bool {
	if o != nil && IsNil(o.SecurityGroupRules) {
		return true
	}

	return false
}

// SetSecurityGroupRules gets a reference to the given []CommonDropdownDto and assigns it to the SecurityGroupRules field.
func (o *EnumList) SetSecurityGroupRules(v []CommonDropdownDto) {
	o.SecurityGroupRules = v
}

// GetPrometheusTypes returns the PrometheusTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetPrometheusTypes() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.PrometheusTypes
}

// GetPrometheusTypesOk returns a tuple with the PrometheusTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetPrometheusTypesOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.PrometheusTypes) {
		return nil, false
	}
	return o.PrometheusTypes, true
}

// HasPrometheusTypes returns a boolean if a field has been set.
func (o *EnumList) HasPrometheusTypes() bool {
	if o != nil && IsNil(o.PrometheusTypes) {
		return true
	}

	return false
}

// SetPrometheusTypes gets a reference to the given []CommonDropdownDto and assigns it to the PrometheusTypes field.
func (o *EnumList) SetPrometheusTypes(v []CommonDropdownDto) {
	o.PrometheusTypes = v
}

// GetAuditLogs returns the AuditLogs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetAuditLogs() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.AuditLogs
}

// GetAuditLogsOk returns a tuple with the AuditLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetAuditLogsOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.AuditLogs) {
		return nil, false
	}
	return o.AuditLogs, true
}

// HasAuditLogs returns a boolean if a field has been set.
func (o *EnumList) HasAuditLogs() bool {
	if o != nil && IsNil(o.AuditLogs) {
		return true
	}

	return false
}

// SetAuditLogs gets a reference to the given []CommonDropdownDto and assigns it to the AuditLogs field.
func (o *EnumList) SetAuditLogs(v []CommonDropdownDto) {
	o.AuditLogs = v
}

// GetRebootOptions returns the RebootOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetRebootOptions() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.RebootOptions
}

// GetRebootOptionsOk returns a tuple with the RebootOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetRebootOptionsOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.RebootOptions) {
		return nil, false
	}
	return o.RebootOptions, true
}

// HasRebootOptions returns a boolean if a field has been set.
func (o *EnumList) HasRebootOptions() bool {
	if o != nil && IsNil(o.RebootOptions) {
		return true
	}

	return false
}

// SetRebootOptions gets a reference to the given []CommonDropdownDto and assigns it to the RebootOptions field.
func (o *EnumList) SetRebootOptions(v []CommonDropdownDto) {
	o.RebootOptions = v
}

// GetAvailability returns the Availability field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetAvailability() []CommonAvailabilityDto {
	if o == nil {
		var ret []CommonAvailabilityDto
		return ret
	}
	return o.Availability
}

// GetAvailabilityOk returns a tuple with the Availability field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetAvailabilityOk() ([]CommonAvailabilityDto, bool) {
	if o == nil || IsNil(o.Availability) {
		return nil, false
	}
	return o.Availability, true
}

// HasAvailability returns a boolean if a field has been set.
func (o *EnumList) HasAvailability() bool {
	if o != nil && IsNil(o.Availability) {
		return true
	}

	return false
}

// SetAvailability gets a reference to the given []CommonAvailabilityDto and assigns it to the Availability field.
func (o *EnumList) SetAvailability(v []CommonAvailabilityDto) {
	o.Availability = v
}

// GetSlackTypes returns the SlackTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetSlackTypes() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.SlackTypes
}

// GetSlackTypesOk returns a tuple with the SlackTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetSlackTypesOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.SlackTypes) {
		return nil, false
	}
	return o.SlackTypes, true
}

// HasSlackTypes returns a boolean if a field has been set.
func (o *EnumList) HasSlackTypes() bool {
	if o != nil && IsNil(o.SlackTypes) {
		return true
	}

	return false
}

// SetSlackTypes gets a reference to the given []CommonDropdownDto and assigns it to the SlackTypes field.
func (o *EnumList) SetSlackTypes(v []CommonDropdownDto) {
	o.SlackTypes = v
}

// GetRequestLogs returns the RequestLogs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetRequestLogs() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.RequestLogs
}

// GetRequestLogsOk returns a tuple with the RequestLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetRequestLogsOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.RequestLogs) {
		return nil, false
	}
	return o.RequestLogs, true
}

// HasRequestLogs returns a boolean if a field has been set.
func (o *EnumList) HasRequestLogs() bool {
	if o != nil && IsNil(o.RequestLogs) {
		return true
	}

	return false
}

// SetRequestLogs gets a reference to the given []CommonDropdownDto and assigns it to the RequestLogs field.
func (o *EnumList) SetRequestLogs(v []CommonDropdownDto) {
	o.RequestLogs = v
}

// GetAzureQuotas returns the AzureQuotas field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetAzureQuotas() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.AzureQuotas
}

// GetAzureQuotasOk returns a tuple with the AzureQuotas field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetAzureQuotasOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.AzureQuotas) {
		return nil, false
	}
	return o.AzureQuotas, true
}

// HasAzureQuotas returns a boolean if a field has been set.
func (o *EnumList) HasAzureQuotas() bool {
	if o != nil && IsNil(o.AzureQuotas) {
		return true
	}

	return false
}

// SetAzureQuotas gets a reference to the given []CommonDropdownDto and assigns it to the AzureQuotas field.
func (o *EnumList) SetAzureQuotas(v []CommonDropdownDto) {
	o.AzureQuotas = v
}

// GetShowbackKinds returns the ShowbackKinds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetShowbackKinds() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.ShowbackKinds
}

// GetShowbackKindsOk returns a tuple with the ShowbackKinds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetShowbackKindsOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.ShowbackKinds) {
		return nil, false
	}
	return o.ShowbackKinds, true
}

// HasShowbackKinds returns a boolean if a field has been set.
func (o *EnumList) HasShowbackKinds() bool {
	if o != nil && IsNil(o.ShowbackKinds) {
		return true
	}

	return false
}

// SetShowbackKinds gets a reference to the given []CommonDropdownDto and assigns it to the ShowbackKinds field.
func (o *EnumList) SetShowbackKinds(v []CommonDropdownDto) {
	o.ShowbackKinds = v
}

// GetAlertTypes returns the AlertTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetAlertTypes() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.AlertTypes
}

// GetAlertTypesOk returns a tuple with the AlertTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetAlertTypesOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.AlertTypes) {
		return nil, false
	}
	return o.AlertTypes, true
}

// HasAlertTypes returns a boolean if a field has been set.
func (o *EnumList) HasAlertTypes() bool {
	if o != nil && IsNil(o.AlertTypes) {
		return true
	}

	return false
}

// SetAlertTypes gets a reference to the given []CommonDropdownDto and assigns it to the AlertTypes field.
func (o *EnumList) SetAlertTypes(v []CommonDropdownDto) {
	o.AlertTypes = v
}

// GetReminderTypes returns the ReminderTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetReminderTypes() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.ReminderTypes
}

// GetReminderTypesOk returns a tuple with the ReminderTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetReminderTypesOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.ReminderTypes) {
		return nil, false
	}
	return o.ReminderTypes, true
}

// HasReminderTypes returns a boolean if a field has been set.
func (o *EnumList) HasReminderTypes() bool {
	if o != nil && IsNil(o.ReminderTypes) {
		return true
	}

	return false
}

// SetReminderTypes gets a reference to the given []CommonDropdownDto and assigns it to the ReminderTypes field.
func (o *EnumList) SetReminderTypes(v []CommonDropdownDto) {
	o.ReminderTypes = v
}

// GetAwsPlatforms returns the AwsPlatforms field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetAwsPlatforms() []CommonStringBasedDropdownDto {
	if o == nil {
		var ret []CommonStringBasedDropdownDto
		return ret
	}
	return o.AwsPlatforms
}

// GetAwsPlatformsOk returns a tuple with the AwsPlatforms field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetAwsPlatformsOk() ([]CommonStringBasedDropdownDto, bool) {
	if o == nil || IsNil(o.AwsPlatforms) {
		return nil, false
	}
	return o.AwsPlatforms, true
}

// HasAwsPlatforms returns a boolean if a field has been set.
func (o *EnumList) HasAwsPlatforms() bool {
	if o != nil && IsNil(o.AwsPlatforms) {
		return true
	}

	return false
}

// SetAwsPlatforms gets a reference to the given []CommonStringBasedDropdownDto and assigns it to the AwsPlatforms field.
func (o *EnumList) SetAwsPlatforms(v []CommonStringBasedDropdownDto) {
	o.AwsPlatforms = v
}

// GetCronPeriods returns the CronPeriods field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetCronPeriods() []CommonStringBasedDropdownDto {
	if o == nil {
		var ret []CommonStringBasedDropdownDto
		return ret
	}
	return o.CronPeriods
}

// GetCronPeriodsOk returns a tuple with the CronPeriods field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetCronPeriodsOk() ([]CommonStringBasedDropdownDto, bool) {
	if o == nil || IsNil(o.CronPeriods) {
		return nil, false
	}
	return o.CronPeriods, true
}

// HasCronPeriods returns a boolean if a field has been set.
func (o *EnumList) HasCronPeriods() bool {
	if o != nil && IsNil(o.CronPeriods) {
		return true
	}

	return false
}

// SetCronPeriods gets a reference to the given []CommonStringBasedDropdownDto and assigns it to the CronPeriods field.
func (o *EnumList) SetCronPeriods(v []CommonStringBasedDropdownDto) {
	o.CronPeriods = v
}

// GetValidityPeriods returns the ValidityPeriods field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetValidityPeriods() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.ValidityPeriods
}

// GetValidityPeriodsOk returns a tuple with the ValidityPeriods field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetValidityPeriodsOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.ValidityPeriods) {
		return nil, false
	}
	return o.ValidityPeriods, true
}

// HasValidityPeriods returns a boolean if a field has been set.
func (o *EnumList) HasValidityPeriods() bool {
	if o != nil && IsNil(o.ValidityPeriods) {
		return true
	}

	return false
}

// SetValidityPeriods gets a reference to the given []CommonDropdownDto and assigns it to the ValidityPeriods field.
func (o *EnumList) SetValidityPeriods(v []CommonDropdownDto) {
	o.ValidityPeriods = v
}

// GetAlertingIntegrationTypes returns the AlertingIntegrationTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetAlertingIntegrationTypes() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.AlertingIntegrationTypes
}

// GetAlertingIntegrationTypesOk returns a tuple with the AlertingIntegrationTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetAlertingIntegrationTypesOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.AlertingIntegrationTypes) {
		return nil, false
	}
	return o.AlertingIntegrationTypes, true
}

// HasAlertingIntegrationTypes returns a boolean if a field has been set.
func (o *EnumList) HasAlertingIntegrationTypes() bool {
	if o != nil && IsNil(o.AlertingIntegrationTypes) {
		return true
	}

	return false
}

// SetAlertingIntegrationTypes gets a reference to the given []CommonDropdownDto and assigns it to the AlertingIntegrationTypes field.
func (o *EnumList) SetAlertingIntegrationTypes(v []CommonDropdownDto) {
	o.AlertingIntegrationTypes = v
}

// GetGoogleImageTypes returns the GoogleImageTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetGoogleImageTypes() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.GoogleImageTypes
}

// GetGoogleImageTypesOk returns a tuple with the GoogleImageTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetGoogleImageTypesOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.GoogleImageTypes) {
		return nil, false
	}
	return o.GoogleImageTypes, true
}

// HasGoogleImageTypes returns a boolean if a field has been set.
func (o *EnumList) HasGoogleImageTypes() bool {
	if o != nil && IsNil(o.GoogleImageTypes) {
		return true
	}

	return false
}

// SetGoogleImageTypes gets a reference to the given []CommonDropdownDto and assigns it to the GoogleImageTypes field.
func (o *EnumList) SetGoogleImageTypes(v []CommonDropdownDto) {
	o.GoogleImageTypes = v
}

// GetStandaloneVmStatuses returns the StandaloneVmStatuses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetStandaloneVmStatuses() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.StandaloneVmStatuses
}

// GetStandaloneVmStatusesOk returns a tuple with the StandaloneVmStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetStandaloneVmStatusesOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.StandaloneVmStatuses) {
		return nil, false
	}
	return o.StandaloneVmStatuses, true
}

// HasStandaloneVmStatuses returns a boolean if a field has been set.
func (o *EnumList) HasStandaloneVmStatuses() bool {
	if o != nil && IsNil(o.StandaloneVmStatuses) {
		return true
	}

	return false
}

// SetStandaloneVmStatuses gets a reference to the given []CommonDropdownDto and assigns it to the StandaloneVmStatuses field.
func (o *EnumList) SetStandaloneVmStatuses(v []CommonDropdownDto) {
	o.StandaloneVmStatuses = v
}

// GetOpenstackContinents returns the OpenstackContinents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetOpenstackContinents() []CommonStringBasedDropdownDto {
	if o == nil {
		var ret []CommonStringBasedDropdownDto
		return ret
	}
	return o.OpenstackContinents
}

// GetOpenstackContinentsOk returns a tuple with the OpenstackContinents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetOpenstackContinentsOk() ([]CommonStringBasedDropdownDto, bool) {
	if o == nil || IsNil(o.OpenstackContinents) {
		return nil, false
	}
	return o.OpenstackContinents, true
}

// HasOpenstackContinents returns a boolean if a field has been set.
func (o *EnumList) HasOpenstackContinents() bool {
	if o != nil && IsNil(o.OpenstackContinents) {
		return true
	}

	return false
}

// SetOpenstackContinents gets a reference to the given []CommonStringBasedDropdownDto and assigns it to the OpenstackContinents field.
func (o *EnumList) SetOpenstackContinents(v []CommonStringBasedDropdownDto) {
	o.OpenstackContinents = v
}

// GetRetentionPeriods returns the RetentionPeriods field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetRetentionPeriods() []CommonStringBasedDropdownDto {
	if o == nil {
		var ret []CommonStringBasedDropdownDto
		return ret
	}
	return o.RetentionPeriods
}

// GetRetentionPeriodsOk returns a tuple with the RetentionPeriods field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetRetentionPeriodsOk() ([]CommonStringBasedDropdownDto, bool) {
	if o == nil || IsNil(o.RetentionPeriods) {
		return nil, false
	}
	return o.RetentionPeriods, true
}

// HasRetentionPeriods returns a boolean if a field has been set.
func (o *EnumList) HasRetentionPeriods() bool {
	if o != nil && IsNil(o.RetentionPeriods) {
		return true
	}

	return false
}

// SetRetentionPeriods gets a reference to the given []CommonStringBasedDropdownDto and assigns it to the RetentionPeriods field.
func (o *EnumList) SetRetentionPeriods(v []CommonStringBasedDropdownDto) {
	o.RetentionPeriods = v
}

// GetTicketPriorities returns the TicketPriorities field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetTicketPriorities() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.TicketPriorities
}

// GetTicketPrioritiesOk returns a tuple with the TicketPriorities field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetTicketPrioritiesOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.TicketPriorities) {
		return nil, false
	}
	return o.TicketPriorities, true
}

// HasTicketPriorities returns a boolean if a field has been set.
func (o *EnumList) HasTicketPriorities() bool {
	if o != nil && IsNil(o.TicketPriorities) {
		return true
	}

	return false
}

// SetTicketPriorities gets a reference to the given []CommonDropdownDto and assigns it to the TicketPriorities field.
func (o *EnumList) SetTicketPriorities(v []CommonDropdownDto) {
	o.TicketPriorities = v
}

// GetProxmoxRoles returns the ProxmoxRoles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnumList) GetProxmoxRoles() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}
	return o.ProxmoxRoles
}

// GetProxmoxRolesOk returns a tuple with the ProxmoxRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnumList) GetProxmoxRolesOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.ProxmoxRoles) {
		return nil, false
	}
	return o.ProxmoxRoles, true
}

// HasProxmoxRoles returns a boolean if a field has been set.
func (o *EnumList) HasProxmoxRoles() bool {
	if o != nil && IsNil(o.ProxmoxRoles) {
		return true
	}

	return false
}

// SetProxmoxRoles gets a reference to the given []CommonDropdownDto and assigns it to the ProxmoxRoles field.
func (o *EnumList) SetProxmoxRoles(v []CommonDropdownDto) {
	o.ProxmoxRoles = v
}

func (o EnumList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnumList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CloudTypes != nil {
		toSerialize["cloudTypes"] = o.CloudTypes
	}
	if o.ProjectStatuses != nil {
		toSerialize["projectStatuses"] = o.ProjectStatuses
	}
	if o.ServerRoles != nil {
		toSerialize["serverRoles"] = o.ServerRoles
	}
	if o.ServerStatuses != nil {
		toSerialize["serverStatuses"] = o.ServerStatuses
	}
	if o.UserRoles != nil {
		toSerialize["userRoles"] = o.UserRoles
	}
	if o.SecurityGroupRules != nil {
		toSerialize["securityGroupRules"] = o.SecurityGroupRules
	}
	if o.PrometheusTypes != nil {
		toSerialize["prometheusTypes"] = o.PrometheusTypes
	}
	if o.AuditLogs != nil {
		toSerialize["auditLogs"] = o.AuditLogs
	}
	if o.RebootOptions != nil {
		toSerialize["rebootOptions"] = o.RebootOptions
	}
	if o.Availability != nil {
		toSerialize["availability"] = o.Availability
	}
	if o.SlackTypes != nil {
		toSerialize["slackTypes"] = o.SlackTypes
	}
	if o.RequestLogs != nil {
		toSerialize["requestLogs"] = o.RequestLogs
	}
	if o.AzureQuotas != nil {
		toSerialize["azureQuotas"] = o.AzureQuotas
	}
	if o.ShowbackKinds != nil {
		toSerialize["showbackKinds"] = o.ShowbackKinds
	}
	if o.AlertTypes != nil {
		toSerialize["alertTypes"] = o.AlertTypes
	}
	if o.ReminderTypes != nil {
		toSerialize["reminderTypes"] = o.ReminderTypes
	}
	if o.AwsPlatforms != nil {
		toSerialize["awsPlatforms"] = o.AwsPlatforms
	}
	if o.CronPeriods != nil {
		toSerialize["cronPeriods"] = o.CronPeriods
	}
	if o.ValidityPeriods != nil {
		toSerialize["validityPeriods"] = o.ValidityPeriods
	}
	if o.AlertingIntegrationTypes != nil {
		toSerialize["alertingIntegrationTypes"] = o.AlertingIntegrationTypes
	}
	if o.GoogleImageTypes != nil {
		toSerialize["googleImageTypes"] = o.GoogleImageTypes
	}
	if o.StandaloneVmStatuses != nil {
		toSerialize["standaloneVmStatuses"] = o.StandaloneVmStatuses
	}
	if o.OpenstackContinents != nil {
		toSerialize["openstackContinents"] = o.OpenstackContinents
	}
	if o.RetentionPeriods != nil {
		toSerialize["retentionPeriods"] = o.RetentionPeriods
	}
	if o.TicketPriorities != nil {
		toSerialize["ticketPriorities"] = o.TicketPriorities
	}
	if o.ProxmoxRoles != nil {
		toSerialize["proxmoxRoles"] = o.ProxmoxRoles
	}
	return toSerialize, nil
}

type NullableEnumList struct {
	value *EnumList
	isSet bool
}

func (v NullableEnumList) Get() *EnumList {
	return v.value
}

func (v *NullableEnumList) Set(val *EnumList) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumList) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumList(val *EnumList) *NullableEnumList {
	return &NullableEnumList{value: val, isSet: true}
}

func (v NullableEnumList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
