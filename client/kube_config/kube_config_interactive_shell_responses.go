// Code generated by go-swagger; DO NOT EDIT.

package kube_config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// KubeConfigInteractiveShellReader is a Reader for the KubeConfigInteractiveShell structure.
type KubeConfigInteractiveShellReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KubeConfigInteractiveShellReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKubeConfigInteractiveShellOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewKubeConfigInteractiveShellBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewKubeConfigInteractiveShellUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewKubeConfigInteractiveShellForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewKubeConfigInteractiveShellNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewKubeConfigInteractiveShellInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewKubeConfigInteractiveShellOK creates a KubeConfigInteractiveShellOK with default headers values
func NewKubeConfigInteractiveShellOK() *KubeConfigInteractiveShellOK {
	return &KubeConfigInteractiveShellOK{}
}

/*
KubeConfigInteractiveShellOK describes a response with status code 200, with default header values.

Success
*/
type KubeConfigInteractiveShellOK struct {
	Payload string
}

// IsSuccess returns true when this kube config interactive shell o k response has a 2xx status code
func (o *KubeConfigInteractiveShellOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this kube config interactive shell o k response has a 3xx status code
func (o *KubeConfigInteractiveShellOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kube config interactive shell o k response has a 4xx status code
func (o *KubeConfigInteractiveShellOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this kube config interactive shell o k response has a 5xx status code
func (o *KubeConfigInteractiveShellOK) IsServerError() bool {
	return false
}

// IsCode returns true when this kube config interactive shell o k response a status code equal to that given
func (o *KubeConfigInteractiveShellOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the kube config interactive shell o k response
func (o *KubeConfigInteractiveShellOK) Code() int {
	return 200
}

func (o *KubeConfigInteractiveShellOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/interactive-shell][%d] kubeConfigInteractiveShellOK  %+v", 200, o.Payload)
}

func (o *KubeConfigInteractiveShellOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/interactive-shell][%d] kubeConfigInteractiveShellOK  %+v", 200, o.Payload)
}

func (o *KubeConfigInteractiveShellOK) GetPayload() string {
	return o.Payload
}

func (o *KubeConfigInteractiveShellOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubeConfigInteractiveShellBadRequest creates a KubeConfigInteractiveShellBadRequest with default headers values
func NewKubeConfigInteractiveShellBadRequest() *KubeConfigInteractiveShellBadRequest {
	return &KubeConfigInteractiveShellBadRequest{}
}

/*
KubeConfigInteractiveShellBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type KubeConfigInteractiveShellBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this kube config interactive shell bad request response has a 2xx status code
func (o *KubeConfigInteractiveShellBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kube config interactive shell bad request response has a 3xx status code
func (o *KubeConfigInteractiveShellBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kube config interactive shell bad request response has a 4xx status code
func (o *KubeConfigInteractiveShellBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this kube config interactive shell bad request response has a 5xx status code
func (o *KubeConfigInteractiveShellBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this kube config interactive shell bad request response a status code equal to that given
func (o *KubeConfigInteractiveShellBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the kube config interactive shell bad request response
func (o *KubeConfigInteractiveShellBadRequest) Code() int {
	return 400
}

func (o *KubeConfigInteractiveShellBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/interactive-shell][%d] kubeConfigInteractiveShellBadRequest  %+v", 400, o.Payload)
}

func (o *KubeConfigInteractiveShellBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/interactive-shell][%d] kubeConfigInteractiveShellBadRequest  %+v", 400, o.Payload)
}

func (o *KubeConfigInteractiveShellBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *KubeConfigInteractiveShellBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubeConfigInteractiveShellUnauthorized creates a KubeConfigInteractiveShellUnauthorized with default headers values
func NewKubeConfigInteractiveShellUnauthorized() *KubeConfigInteractiveShellUnauthorized {
	return &KubeConfigInteractiveShellUnauthorized{}
}

/*
KubeConfigInteractiveShellUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type KubeConfigInteractiveShellUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this kube config interactive shell unauthorized response has a 2xx status code
func (o *KubeConfigInteractiveShellUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kube config interactive shell unauthorized response has a 3xx status code
func (o *KubeConfigInteractiveShellUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kube config interactive shell unauthorized response has a 4xx status code
func (o *KubeConfigInteractiveShellUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this kube config interactive shell unauthorized response has a 5xx status code
func (o *KubeConfigInteractiveShellUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this kube config interactive shell unauthorized response a status code equal to that given
func (o *KubeConfigInteractiveShellUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the kube config interactive shell unauthorized response
func (o *KubeConfigInteractiveShellUnauthorized) Code() int {
	return 401
}

func (o *KubeConfigInteractiveShellUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/interactive-shell][%d] kubeConfigInteractiveShellUnauthorized  %+v", 401, o.Payload)
}

func (o *KubeConfigInteractiveShellUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/interactive-shell][%d] kubeConfigInteractiveShellUnauthorized  %+v", 401, o.Payload)
}

func (o *KubeConfigInteractiveShellUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *KubeConfigInteractiveShellUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubeConfigInteractiveShellForbidden creates a KubeConfigInteractiveShellForbidden with default headers values
func NewKubeConfigInteractiveShellForbidden() *KubeConfigInteractiveShellForbidden {
	return &KubeConfigInteractiveShellForbidden{}
}

/*
KubeConfigInteractiveShellForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type KubeConfigInteractiveShellForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this kube config interactive shell forbidden response has a 2xx status code
func (o *KubeConfigInteractiveShellForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kube config interactive shell forbidden response has a 3xx status code
func (o *KubeConfigInteractiveShellForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kube config interactive shell forbidden response has a 4xx status code
func (o *KubeConfigInteractiveShellForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this kube config interactive shell forbidden response has a 5xx status code
func (o *KubeConfigInteractiveShellForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this kube config interactive shell forbidden response a status code equal to that given
func (o *KubeConfigInteractiveShellForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the kube config interactive shell forbidden response
func (o *KubeConfigInteractiveShellForbidden) Code() int {
	return 403
}

func (o *KubeConfigInteractiveShellForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/interactive-shell][%d] kubeConfigInteractiveShellForbidden  %+v", 403, o.Payload)
}

func (o *KubeConfigInteractiveShellForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/interactive-shell][%d] kubeConfigInteractiveShellForbidden  %+v", 403, o.Payload)
}

func (o *KubeConfigInteractiveShellForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *KubeConfigInteractiveShellForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubeConfigInteractiveShellNotFound creates a KubeConfigInteractiveShellNotFound with default headers values
func NewKubeConfigInteractiveShellNotFound() *KubeConfigInteractiveShellNotFound {
	return &KubeConfigInteractiveShellNotFound{}
}

/*
KubeConfigInteractiveShellNotFound describes a response with status code 404, with default header values.

Not Found
*/
type KubeConfigInteractiveShellNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this kube config interactive shell not found response has a 2xx status code
func (o *KubeConfigInteractiveShellNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kube config interactive shell not found response has a 3xx status code
func (o *KubeConfigInteractiveShellNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kube config interactive shell not found response has a 4xx status code
func (o *KubeConfigInteractiveShellNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this kube config interactive shell not found response has a 5xx status code
func (o *KubeConfigInteractiveShellNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this kube config interactive shell not found response a status code equal to that given
func (o *KubeConfigInteractiveShellNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the kube config interactive shell not found response
func (o *KubeConfigInteractiveShellNotFound) Code() int {
	return 404
}

func (o *KubeConfigInteractiveShellNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/interactive-shell][%d] kubeConfigInteractiveShellNotFound  %+v", 404, o.Payload)
}

func (o *KubeConfigInteractiveShellNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/interactive-shell][%d] kubeConfigInteractiveShellNotFound  %+v", 404, o.Payload)
}

func (o *KubeConfigInteractiveShellNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *KubeConfigInteractiveShellNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubeConfigInteractiveShellInternalServerError creates a KubeConfigInteractiveShellInternalServerError with default headers values
func NewKubeConfigInteractiveShellInternalServerError() *KubeConfigInteractiveShellInternalServerError {
	return &KubeConfigInteractiveShellInternalServerError{}
}

/*
KubeConfigInteractiveShellInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type KubeConfigInteractiveShellInternalServerError struct {
}

// IsSuccess returns true when this kube config interactive shell internal server error response has a 2xx status code
func (o *KubeConfigInteractiveShellInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kube config interactive shell internal server error response has a 3xx status code
func (o *KubeConfigInteractiveShellInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kube config interactive shell internal server error response has a 4xx status code
func (o *KubeConfigInteractiveShellInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this kube config interactive shell internal server error response has a 5xx status code
func (o *KubeConfigInteractiveShellInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this kube config interactive shell internal server error response a status code equal to that given
func (o *KubeConfigInteractiveShellInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the kube config interactive shell internal server error response
func (o *KubeConfigInteractiveShellInternalServerError) Code() int {
	return 500
}

func (o *KubeConfigInteractiveShellInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/interactive-shell][%d] kubeConfigInteractiveShellInternalServerError ", 500)
}

func (o *KubeConfigInteractiveShellInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/interactive-shell][%d] kubeConfigInteractiveShellInternalServerError ", 500)
}

func (o *KubeConfigInteractiveShellInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
