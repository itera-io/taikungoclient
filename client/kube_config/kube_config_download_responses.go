// Code generated by go-swagger; DO NOT EDIT.

package kube_config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// KubeConfigDownloadReader is a Reader for the KubeConfigDownload structure.
type KubeConfigDownloadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KubeConfigDownloadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKubeConfigDownloadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewKubeConfigDownloadBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewKubeConfigDownloadUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewKubeConfigDownloadForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewKubeConfigDownloadNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewKubeConfigDownloadInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewKubeConfigDownloadOK creates a KubeConfigDownloadOK with default headers values
func NewKubeConfigDownloadOK() *KubeConfigDownloadOK {
	return &KubeConfigDownloadOK{}
}

/*
KubeConfigDownloadOK describes a response with status code 200, with default header values.

Success
*/
type KubeConfigDownloadOK struct {
	Payload interface{}
}

// IsSuccess returns true when this kube config download o k response has a 2xx status code
func (o *KubeConfigDownloadOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this kube config download o k response has a 3xx status code
func (o *KubeConfigDownloadOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kube config download o k response has a 4xx status code
func (o *KubeConfigDownloadOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this kube config download o k response has a 5xx status code
func (o *KubeConfigDownloadOK) IsServerError() bool {
	return false
}

// IsCode returns true when this kube config download o k response a status code equal to that given
func (o *KubeConfigDownloadOK) IsCode(code int) bool {
	return code == 200
}

func (o *KubeConfigDownloadOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/download][%d] kubeConfigDownloadOK  %+v", 200, o.Payload)
}

func (o *KubeConfigDownloadOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/download][%d] kubeConfigDownloadOK  %+v", 200, o.Payload)
}

func (o *KubeConfigDownloadOK) GetPayload() interface{} {
	return o.Payload
}

func (o *KubeConfigDownloadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubeConfigDownloadBadRequest creates a KubeConfigDownloadBadRequest with default headers values
func NewKubeConfigDownloadBadRequest() *KubeConfigDownloadBadRequest {
	return &KubeConfigDownloadBadRequest{}
}

/*
KubeConfigDownloadBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type KubeConfigDownloadBadRequest struct {
	Payload *models.ValidationProblemDetails
}

// IsSuccess returns true when this kube config download bad request response has a 2xx status code
func (o *KubeConfigDownloadBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kube config download bad request response has a 3xx status code
func (o *KubeConfigDownloadBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kube config download bad request response has a 4xx status code
func (o *KubeConfigDownloadBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this kube config download bad request response has a 5xx status code
func (o *KubeConfigDownloadBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this kube config download bad request response a status code equal to that given
func (o *KubeConfigDownloadBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *KubeConfigDownloadBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/download][%d] kubeConfigDownloadBadRequest  %+v", 400, o.Payload)
}

func (o *KubeConfigDownloadBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/download][%d] kubeConfigDownloadBadRequest  %+v", 400, o.Payload)
}

func (o *KubeConfigDownloadBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *KubeConfigDownloadBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubeConfigDownloadUnauthorized creates a KubeConfigDownloadUnauthorized with default headers values
func NewKubeConfigDownloadUnauthorized() *KubeConfigDownloadUnauthorized {
	return &KubeConfigDownloadUnauthorized{}
}

/*
KubeConfigDownloadUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type KubeConfigDownloadUnauthorized struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this kube config download unauthorized response has a 2xx status code
func (o *KubeConfigDownloadUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kube config download unauthorized response has a 3xx status code
func (o *KubeConfigDownloadUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kube config download unauthorized response has a 4xx status code
func (o *KubeConfigDownloadUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this kube config download unauthorized response has a 5xx status code
func (o *KubeConfigDownloadUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this kube config download unauthorized response a status code equal to that given
func (o *KubeConfigDownloadUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *KubeConfigDownloadUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/download][%d] kubeConfigDownloadUnauthorized  %+v", 401, o.Payload)
}

func (o *KubeConfigDownloadUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/download][%d] kubeConfigDownloadUnauthorized  %+v", 401, o.Payload)
}

func (o *KubeConfigDownloadUnauthorized) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *KubeConfigDownloadUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubeConfigDownloadForbidden creates a KubeConfigDownloadForbidden with default headers values
func NewKubeConfigDownloadForbidden() *KubeConfigDownloadForbidden {
	return &KubeConfigDownloadForbidden{}
}

/*
KubeConfigDownloadForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type KubeConfigDownloadForbidden struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this kube config download forbidden response has a 2xx status code
func (o *KubeConfigDownloadForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kube config download forbidden response has a 3xx status code
func (o *KubeConfigDownloadForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kube config download forbidden response has a 4xx status code
func (o *KubeConfigDownloadForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this kube config download forbidden response has a 5xx status code
func (o *KubeConfigDownloadForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this kube config download forbidden response a status code equal to that given
func (o *KubeConfigDownloadForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *KubeConfigDownloadForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/download][%d] kubeConfigDownloadForbidden  %+v", 403, o.Payload)
}

func (o *KubeConfigDownloadForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/download][%d] kubeConfigDownloadForbidden  %+v", 403, o.Payload)
}

func (o *KubeConfigDownloadForbidden) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *KubeConfigDownloadForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubeConfigDownloadNotFound creates a KubeConfigDownloadNotFound with default headers values
func NewKubeConfigDownloadNotFound() *KubeConfigDownloadNotFound {
	return &KubeConfigDownloadNotFound{}
}

/*
KubeConfigDownloadNotFound describes a response with status code 404, with default header values.

Not Found
*/
type KubeConfigDownloadNotFound struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this kube config download not found response has a 2xx status code
func (o *KubeConfigDownloadNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kube config download not found response has a 3xx status code
func (o *KubeConfigDownloadNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kube config download not found response has a 4xx status code
func (o *KubeConfigDownloadNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this kube config download not found response has a 5xx status code
func (o *KubeConfigDownloadNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this kube config download not found response a status code equal to that given
func (o *KubeConfigDownloadNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *KubeConfigDownloadNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/download][%d] kubeConfigDownloadNotFound  %+v", 404, o.Payload)
}

func (o *KubeConfigDownloadNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/download][%d] kubeConfigDownloadNotFound  %+v", 404, o.Payload)
}

func (o *KubeConfigDownloadNotFound) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *KubeConfigDownloadNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubeConfigDownloadInternalServerError creates a KubeConfigDownloadInternalServerError with default headers values
func NewKubeConfigDownloadInternalServerError() *KubeConfigDownloadInternalServerError {
	return &KubeConfigDownloadInternalServerError{}
}

/*
KubeConfigDownloadInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type KubeConfigDownloadInternalServerError struct {
}

// IsSuccess returns true when this kube config download internal server error response has a 2xx status code
func (o *KubeConfigDownloadInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kube config download internal server error response has a 3xx status code
func (o *KubeConfigDownloadInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kube config download internal server error response has a 4xx status code
func (o *KubeConfigDownloadInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this kube config download internal server error response has a 5xx status code
func (o *KubeConfigDownloadInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this kube config download internal server error response a status code equal to that given
func (o *KubeConfigDownloadInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *KubeConfigDownloadInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/download][%d] kubeConfigDownloadInternalServerError ", 500)
}

func (o *KubeConfigDownloadInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/KubeConfig/download][%d] kubeConfigDownloadInternalServerError ", 500)
}

func (o *KubeConfigDownloadInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
