// Code generated by go-swagger; DO NOT EDIT.

package access_profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// AccessProfilesDeleteReader is a Reader for the AccessProfilesDelete structure.
type AccessProfilesDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccessProfilesDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAccessProfilesDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewAccessProfilesDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAccessProfilesDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAccessProfilesDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAccessProfilesDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAccessProfilesDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAccessProfilesDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAccessProfilesDeleteOK creates a AccessProfilesDeleteOK with default headers values
func NewAccessProfilesDeleteOK() *AccessProfilesDeleteOK {
	return &AccessProfilesDeleteOK{}
}

/*
AccessProfilesDeleteOK describes a response with status code 200, with default header values.

Success
*/
type AccessProfilesDeleteOK struct {
}

// IsSuccess returns true when this access profiles delete o k response has a 2xx status code
func (o *AccessProfilesDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this access profiles delete o k response has a 3xx status code
func (o *AccessProfilesDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this access profiles delete o k response has a 4xx status code
func (o *AccessProfilesDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this access profiles delete o k response has a 5xx status code
func (o *AccessProfilesDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this access profiles delete o k response a status code equal to that given
func (o *AccessProfilesDeleteOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the access profiles delete o k response
func (o *AccessProfilesDeleteOK) Code() int {
	return 200
}

func (o *AccessProfilesDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/AccessProfiles/{id}][%d] accessProfilesDeleteOK ", 200)
}

func (o *AccessProfilesDeleteOK) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/AccessProfiles/{id}][%d] accessProfilesDeleteOK ", 200)
}

func (o *AccessProfilesDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccessProfilesDeleteNoContent creates a AccessProfilesDeleteNoContent with default headers values
func NewAccessProfilesDeleteNoContent() *AccessProfilesDeleteNoContent {
	return &AccessProfilesDeleteNoContent{}
}

/*
AccessProfilesDeleteNoContent describes a response with status code 204, with default header values.

No Content
*/
type AccessProfilesDeleteNoContent struct {
}

// IsSuccess returns true when this access profiles delete no content response has a 2xx status code
func (o *AccessProfilesDeleteNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this access profiles delete no content response has a 3xx status code
func (o *AccessProfilesDeleteNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this access profiles delete no content response has a 4xx status code
func (o *AccessProfilesDeleteNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this access profiles delete no content response has a 5xx status code
func (o *AccessProfilesDeleteNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this access profiles delete no content response a status code equal to that given
func (o *AccessProfilesDeleteNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the access profiles delete no content response
func (o *AccessProfilesDeleteNoContent) Code() int {
	return 204
}

func (o *AccessProfilesDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/AccessProfiles/{id}][%d] accessProfilesDeleteNoContent ", 204)
}

func (o *AccessProfilesDeleteNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/AccessProfiles/{id}][%d] accessProfilesDeleteNoContent ", 204)
}

func (o *AccessProfilesDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccessProfilesDeleteBadRequest creates a AccessProfilesDeleteBadRequest with default headers values
func NewAccessProfilesDeleteBadRequest() *AccessProfilesDeleteBadRequest {
	return &AccessProfilesDeleteBadRequest{}
}

/*
AccessProfilesDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AccessProfilesDeleteBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this access profiles delete bad request response has a 2xx status code
func (o *AccessProfilesDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this access profiles delete bad request response has a 3xx status code
func (o *AccessProfilesDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this access profiles delete bad request response has a 4xx status code
func (o *AccessProfilesDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this access profiles delete bad request response has a 5xx status code
func (o *AccessProfilesDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this access profiles delete bad request response a status code equal to that given
func (o *AccessProfilesDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the access profiles delete bad request response
func (o *AccessProfilesDeleteBadRequest) Code() int {
	return 400
}

func (o *AccessProfilesDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/AccessProfiles/{id}][%d] accessProfilesDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *AccessProfilesDeleteBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/AccessProfiles/{id}][%d] accessProfilesDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *AccessProfilesDeleteBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *AccessProfilesDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccessProfilesDeleteUnauthorized creates a AccessProfilesDeleteUnauthorized with default headers values
func NewAccessProfilesDeleteUnauthorized() *AccessProfilesDeleteUnauthorized {
	return &AccessProfilesDeleteUnauthorized{}
}

/*
AccessProfilesDeleteUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AccessProfilesDeleteUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this access profiles delete unauthorized response has a 2xx status code
func (o *AccessProfilesDeleteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this access profiles delete unauthorized response has a 3xx status code
func (o *AccessProfilesDeleteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this access profiles delete unauthorized response has a 4xx status code
func (o *AccessProfilesDeleteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this access profiles delete unauthorized response has a 5xx status code
func (o *AccessProfilesDeleteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this access profiles delete unauthorized response a status code equal to that given
func (o *AccessProfilesDeleteUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the access profiles delete unauthorized response
func (o *AccessProfilesDeleteUnauthorized) Code() int {
	return 401
}

func (o *AccessProfilesDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/AccessProfiles/{id}][%d] accessProfilesDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *AccessProfilesDeleteUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/AccessProfiles/{id}][%d] accessProfilesDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *AccessProfilesDeleteUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *AccessProfilesDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccessProfilesDeleteForbidden creates a AccessProfilesDeleteForbidden with default headers values
func NewAccessProfilesDeleteForbidden() *AccessProfilesDeleteForbidden {
	return &AccessProfilesDeleteForbidden{}
}

/*
AccessProfilesDeleteForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AccessProfilesDeleteForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this access profiles delete forbidden response has a 2xx status code
func (o *AccessProfilesDeleteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this access profiles delete forbidden response has a 3xx status code
func (o *AccessProfilesDeleteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this access profiles delete forbidden response has a 4xx status code
func (o *AccessProfilesDeleteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this access profiles delete forbidden response has a 5xx status code
func (o *AccessProfilesDeleteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this access profiles delete forbidden response a status code equal to that given
func (o *AccessProfilesDeleteForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the access profiles delete forbidden response
func (o *AccessProfilesDeleteForbidden) Code() int {
	return 403
}

func (o *AccessProfilesDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/AccessProfiles/{id}][%d] accessProfilesDeleteForbidden  %+v", 403, o.Payload)
}

func (o *AccessProfilesDeleteForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/AccessProfiles/{id}][%d] accessProfilesDeleteForbidden  %+v", 403, o.Payload)
}

func (o *AccessProfilesDeleteForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *AccessProfilesDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccessProfilesDeleteNotFound creates a AccessProfilesDeleteNotFound with default headers values
func NewAccessProfilesDeleteNotFound() *AccessProfilesDeleteNotFound {
	return &AccessProfilesDeleteNotFound{}
}

/*
AccessProfilesDeleteNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AccessProfilesDeleteNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this access profiles delete not found response has a 2xx status code
func (o *AccessProfilesDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this access profiles delete not found response has a 3xx status code
func (o *AccessProfilesDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this access profiles delete not found response has a 4xx status code
func (o *AccessProfilesDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this access profiles delete not found response has a 5xx status code
func (o *AccessProfilesDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this access profiles delete not found response a status code equal to that given
func (o *AccessProfilesDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the access profiles delete not found response
func (o *AccessProfilesDeleteNotFound) Code() int {
	return 404
}

func (o *AccessProfilesDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/AccessProfiles/{id}][%d] accessProfilesDeleteNotFound  %+v", 404, o.Payload)
}

func (o *AccessProfilesDeleteNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/AccessProfiles/{id}][%d] accessProfilesDeleteNotFound  %+v", 404, o.Payload)
}

func (o *AccessProfilesDeleteNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *AccessProfilesDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccessProfilesDeleteInternalServerError creates a AccessProfilesDeleteInternalServerError with default headers values
func NewAccessProfilesDeleteInternalServerError() *AccessProfilesDeleteInternalServerError {
	return &AccessProfilesDeleteInternalServerError{}
}

/*
AccessProfilesDeleteInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AccessProfilesDeleteInternalServerError struct {
}

// IsSuccess returns true when this access profiles delete internal server error response has a 2xx status code
func (o *AccessProfilesDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this access profiles delete internal server error response has a 3xx status code
func (o *AccessProfilesDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this access profiles delete internal server error response has a 4xx status code
func (o *AccessProfilesDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this access profiles delete internal server error response has a 5xx status code
func (o *AccessProfilesDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this access profiles delete internal server error response a status code equal to that given
func (o *AccessProfilesDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the access profiles delete internal server error response
func (o *AccessProfilesDeleteInternalServerError) Code() int {
	return 500
}

func (o *AccessProfilesDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/AccessProfiles/{id}][%d] accessProfilesDeleteInternalServerError ", 500)
}

func (o *AccessProfilesDeleteInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/AccessProfiles/{id}][%d] accessProfilesDeleteInternalServerError ", 500)
}

func (o *AccessProfilesDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
