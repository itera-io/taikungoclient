// Code generated by go-swagger; DO NOT EDIT.

package access_profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// AccessProfilesLockManagerReader is a Reader for the AccessProfilesLockManager structure.
type AccessProfilesLockManagerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccessProfilesLockManagerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAccessProfilesLockManagerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAccessProfilesLockManagerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAccessProfilesLockManagerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAccessProfilesLockManagerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAccessProfilesLockManagerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAccessProfilesLockManagerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAccessProfilesLockManagerOK creates a AccessProfilesLockManagerOK with default headers values
func NewAccessProfilesLockManagerOK() *AccessProfilesLockManagerOK {
	return &AccessProfilesLockManagerOK{}
}

/* AccessProfilesLockManagerOK describes a response with status code 200, with default header values.

Success
*/
type AccessProfilesLockManagerOK struct {
	Payload models.Unit
}

func (o *AccessProfilesLockManagerOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AccessProfiles/lockmanager][%d] accessProfilesLockManagerOK  %+v", 200, o.Payload)
}
func (o *AccessProfilesLockManagerOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *AccessProfilesLockManagerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccessProfilesLockManagerBadRequest creates a AccessProfilesLockManagerBadRequest with default headers values
func NewAccessProfilesLockManagerBadRequest() *AccessProfilesLockManagerBadRequest {
	return &AccessProfilesLockManagerBadRequest{}
}

/* AccessProfilesLockManagerBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AccessProfilesLockManagerBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *AccessProfilesLockManagerBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AccessProfiles/lockmanager][%d] accessProfilesLockManagerBadRequest  %+v", 400, o.Payload)
}
func (o *AccessProfilesLockManagerBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *AccessProfilesLockManagerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccessProfilesLockManagerUnauthorized creates a AccessProfilesLockManagerUnauthorized with default headers values
func NewAccessProfilesLockManagerUnauthorized() *AccessProfilesLockManagerUnauthorized {
	return &AccessProfilesLockManagerUnauthorized{}
}

/* AccessProfilesLockManagerUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AccessProfilesLockManagerUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *AccessProfilesLockManagerUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AccessProfiles/lockmanager][%d] accessProfilesLockManagerUnauthorized  %+v", 401, o.Payload)
}
func (o *AccessProfilesLockManagerUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AccessProfilesLockManagerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccessProfilesLockManagerForbidden creates a AccessProfilesLockManagerForbidden with default headers values
func NewAccessProfilesLockManagerForbidden() *AccessProfilesLockManagerForbidden {
	return &AccessProfilesLockManagerForbidden{}
}

/* AccessProfilesLockManagerForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AccessProfilesLockManagerForbidden struct {
	Payload *models.ProblemDetails
}

func (o *AccessProfilesLockManagerForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AccessProfiles/lockmanager][%d] accessProfilesLockManagerForbidden  %+v", 403, o.Payload)
}
func (o *AccessProfilesLockManagerForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AccessProfilesLockManagerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccessProfilesLockManagerNotFound creates a AccessProfilesLockManagerNotFound with default headers values
func NewAccessProfilesLockManagerNotFound() *AccessProfilesLockManagerNotFound {
	return &AccessProfilesLockManagerNotFound{}
}

/* AccessProfilesLockManagerNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AccessProfilesLockManagerNotFound struct {
	Payload *models.ProblemDetails
}

func (o *AccessProfilesLockManagerNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AccessProfiles/lockmanager][%d] accessProfilesLockManagerNotFound  %+v", 404, o.Payload)
}
func (o *AccessProfilesLockManagerNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AccessProfilesLockManagerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccessProfilesLockManagerInternalServerError creates a AccessProfilesLockManagerInternalServerError with default headers values
func NewAccessProfilesLockManagerInternalServerError() *AccessProfilesLockManagerInternalServerError {
	return &AccessProfilesLockManagerInternalServerError{}
}

/* AccessProfilesLockManagerInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AccessProfilesLockManagerInternalServerError struct {
}

func (o *AccessProfilesLockManagerInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AccessProfiles/lockmanager][%d] accessProfilesLockManagerInternalServerError ", 500)
}

func (o *AccessProfilesLockManagerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
