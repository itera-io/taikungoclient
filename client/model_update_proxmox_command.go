/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the UpdateProxmoxCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProxmoxCommand{}

// UpdateProxmoxCommand struct for UpdateProxmoxCommand
type UpdateProxmoxCommand struct {
	Id          *int32         `json:"id,omitempty"`
	Name        NullableString `json:"name,omitempty"`
	TokenId     NullableString `json:"tokenId,omitempty"`
	TokenSecret NullableString `json:"tokenSecret,omitempty"`
}

// NewUpdateProxmoxCommand instantiates a new UpdateProxmoxCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProxmoxCommand() *UpdateProxmoxCommand {
	this := UpdateProxmoxCommand{}
	return &this
}

// NewUpdateProxmoxCommandWithDefaults instantiates a new UpdateProxmoxCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProxmoxCommandWithDefaults() *UpdateProxmoxCommand {
	this := UpdateProxmoxCommand{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UpdateProxmoxCommand) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProxmoxCommand) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UpdateProxmoxCommand) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *UpdateProxmoxCommand) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProxmoxCommand) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProxmoxCommand) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *UpdateProxmoxCommand) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *UpdateProxmoxCommand) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *UpdateProxmoxCommand) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *UpdateProxmoxCommand) UnsetName() {
	o.Name.Unset()
}

// GetTokenId returns the TokenId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProxmoxCommand) GetTokenId() string {
	if o == nil || IsNil(o.TokenId.Get()) {
		var ret string
		return ret
	}
	return *o.TokenId.Get()
}

// GetTokenIdOk returns a tuple with the TokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProxmoxCommand) GetTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TokenId.Get(), o.TokenId.IsSet()
}

// HasTokenId returns a boolean if a field has been set.
func (o *UpdateProxmoxCommand) HasTokenId() bool {
	if o != nil && o.TokenId.IsSet() {
		return true
	}

	return false
}

// SetTokenId gets a reference to the given NullableString and assigns it to the TokenId field.
func (o *UpdateProxmoxCommand) SetTokenId(v string) {
	o.TokenId.Set(&v)
}

// SetTokenIdNil sets the value for TokenId to be an explicit nil
func (o *UpdateProxmoxCommand) SetTokenIdNil() {
	o.TokenId.Set(nil)
}

// UnsetTokenId ensures that no value is present for TokenId, not even an explicit nil
func (o *UpdateProxmoxCommand) UnsetTokenId() {
	o.TokenId.Unset()
}

// GetTokenSecret returns the TokenSecret field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProxmoxCommand) GetTokenSecret() string {
	if o == nil || IsNil(o.TokenSecret.Get()) {
		var ret string
		return ret
	}
	return *o.TokenSecret.Get()
}

// GetTokenSecretOk returns a tuple with the TokenSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProxmoxCommand) GetTokenSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TokenSecret.Get(), o.TokenSecret.IsSet()
}

// HasTokenSecret returns a boolean if a field has been set.
func (o *UpdateProxmoxCommand) HasTokenSecret() bool {
	if o != nil && o.TokenSecret.IsSet() {
		return true
	}

	return false
}

// SetTokenSecret gets a reference to the given NullableString and assigns it to the TokenSecret field.
func (o *UpdateProxmoxCommand) SetTokenSecret(v string) {
	o.TokenSecret.Set(&v)
}

// SetTokenSecretNil sets the value for TokenSecret to be an explicit nil
func (o *UpdateProxmoxCommand) SetTokenSecretNil() {
	o.TokenSecret.Set(nil)
}

// UnsetTokenSecret ensures that no value is present for TokenSecret, not even an explicit nil
func (o *UpdateProxmoxCommand) UnsetTokenSecret() {
	o.TokenSecret.Unset()
}

func (o UpdateProxmoxCommand) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProxmoxCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.TokenId.IsSet() {
		toSerialize["tokenId"] = o.TokenId.Get()
	}
	if o.TokenSecret.IsSet() {
		toSerialize["tokenSecret"] = o.TokenSecret.Get()
	}
	return toSerialize, nil
}

type NullableUpdateProxmoxCommand struct {
	value *UpdateProxmoxCommand
	isSet bool
}

func (v NullableUpdateProxmoxCommand) Get() *UpdateProxmoxCommand {
	return v.value
}

func (v *NullableUpdateProxmoxCommand) Set(val *UpdateProxmoxCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProxmoxCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProxmoxCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProxmoxCommand(val *UpdateProxmoxCommand) *NullableUpdateProxmoxCommand {
	return &NullableUpdateProxmoxCommand{value: val, isSet: true}
}

func (v NullableUpdateProxmoxCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProxmoxCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
