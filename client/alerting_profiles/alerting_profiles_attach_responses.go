// Code generated by go-swagger; DO NOT EDIT.

package alerting_profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// AlertingProfilesAttachReader is a Reader for the AlertingProfilesAttach structure.
type AlertingProfilesAttachReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AlertingProfilesAttachReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAlertingProfilesAttachOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAlertingProfilesAttachBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAlertingProfilesAttachUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAlertingProfilesAttachForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAlertingProfilesAttachNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAlertingProfilesAttachInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAlertingProfilesAttachOK creates a AlertingProfilesAttachOK with default headers values
func NewAlertingProfilesAttachOK() *AlertingProfilesAttachOK {
	return &AlertingProfilesAttachOK{}
}

/*
AlertingProfilesAttachOK describes a response with status code 200, with default header values.

Success
*/
type AlertingProfilesAttachOK struct {
}

// IsSuccess returns true when this alerting profiles attach o k response has a 2xx status code
func (o *AlertingProfilesAttachOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this alerting profiles attach o k response has a 3xx status code
func (o *AlertingProfilesAttachOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this alerting profiles attach o k response has a 4xx status code
func (o *AlertingProfilesAttachOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this alerting profiles attach o k response has a 5xx status code
func (o *AlertingProfilesAttachOK) IsServerError() bool {
	return false
}

// IsCode returns true when this alerting profiles attach o k response a status code equal to that given
func (o *AlertingProfilesAttachOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the alerting profiles attach o k response
func (o *AlertingProfilesAttachOK) Code() int {
	return 200
}

func (o *AlertingProfilesAttachOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachOK ", 200)
}

func (o *AlertingProfilesAttachOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachOK ", 200)
}

func (o *AlertingProfilesAttachOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAlertingProfilesAttachBadRequest creates a AlertingProfilesAttachBadRequest with default headers values
func NewAlertingProfilesAttachBadRequest() *AlertingProfilesAttachBadRequest {
	return &AlertingProfilesAttachBadRequest{}
}

/*
AlertingProfilesAttachBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AlertingProfilesAttachBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this alerting profiles attach bad request response has a 2xx status code
func (o *AlertingProfilesAttachBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this alerting profiles attach bad request response has a 3xx status code
func (o *AlertingProfilesAttachBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this alerting profiles attach bad request response has a 4xx status code
func (o *AlertingProfilesAttachBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this alerting profiles attach bad request response has a 5xx status code
func (o *AlertingProfilesAttachBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this alerting profiles attach bad request response a status code equal to that given
func (o *AlertingProfilesAttachBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the alerting profiles attach bad request response
func (o *AlertingProfilesAttachBadRequest) Code() int {
	return 400
}

func (o *AlertingProfilesAttachBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachBadRequest  %+v", 400, o.Payload)
}

func (o *AlertingProfilesAttachBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachBadRequest  %+v", 400, o.Payload)
}

func (o *AlertingProfilesAttachBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *AlertingProfilesAttachBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertingProfilesAttachUnauthorized creates a AlertingProfilesAttachUnauthorized with default headers values
func NewAlertingProfilesAttachUnauthorized() *AlertingProfilesAttachUnauthorized {
	return &AlertingProfilesAttachUnauthorized{}
}

/*
AlertingProfilesAttachUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AlertingProfilesAttachUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this alerting profiles attach unauthorized response has a 2xx status code
func (o *AlertingProfilesAttachUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this alerting profiles attach unauthorized response has a 3xx status code
func (o *AlertingProfilesAttachUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this alerting profiles attach unauthorized response has a 4xx status code
func (o *AlertingProfilesAttachUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this alerting profiles attach unauthorized response has a 5xx status code
func (o *AlertingProfilesAttachUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this alerting profiles attach unauthorized response a status code equal to that given
func (o *AlertingProfilesAttachUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the alerting profiles attach unauthorized response
func (o *AlertingProfilesAttachUnauthorized) Code() int {
	return 401
}

func (o *AlertingProfilesAttachUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachUnauthorized  %+v", 401, o.Payload)
}

func (o *AlertingProfilesAttachUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachUnauthorized  %+v", 401, o.Payload)
}

func (o *AlertingProfilesAttachUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *AlertingProfilesAttachUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertingProfilesAttachForbidden creates a AlertingProfilesAttachForbidden with default headers values
func NewAlertingProfilesAttachForbidden() *AlertingProfilesAttachForbidden {
	return &AlertingProfilesAttachForbidden{}
}

/*
AlertingProfilesAttachForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AlertingProfilesAttachForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this alerting profiles attach forbidden response has a 2xx status code
func (o *AlertingProfilesAttachForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this alerting profiles attach forbidden response has a 3xx status code
func (o *AlertingProfilesAttachForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this alerting profiles attach forbidden response has a 4xx status code
func (o *AlertingProfilesAttachForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this alerting profiles attach forbidden response has a 5xx status code
func (o *AlertingProfilesAttachForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this alerting profiles attach forbidden response a status code equal to that given
func (o *AlertingProfilesAttachForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the alerting profiles attach forbidden response
func (o *AlertingProfilesAttachForbidden) Code() int {
	return 403
}

func (o *AlertingProfilesAttachForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachForbidden  %+v", 403, o.Payload)
}

func (o *AlertingProfilesAttachForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachForbidden  %+v", 403, o.Payload)
}

func (o *AlertingProfilesAttachForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *AlertingProfilesAttachForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertingProfilesAttachNotFound creates a AlertingProfilesAttachNotFound with default headers values
func NewAlertingProfilesAttachNotFound() *AlertingProfilesAttachNotFound {
	return &AlertingProfilesAttachNotFound{}
}

/*
AlertingProfilesAttachNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AlertingProfilesAttachNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this alerting profiles attach not found response has a 2xx status code
func (o *AlertingProfilesAttachNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this alerting profiles attach not found response has a 3xx status code
func (o *AlertingProfilesAttachNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this alerting profiles attach not found response has a 4xx status code
func (o *AlertingProfilesAttachNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this alerting profiles attach not found response has a 5xx status code
func (o *AlertingProfilesAttachNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this alerting profiles attach not found response a status code equal to that given
func (o *AlertingProfilesAttachNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the alerting profiles attach not found response
func (o *AlertingProfilesAttachNotFound) Code() int {
	return 404
}

func (o *AlertingProfilesAttachNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachNotFound  %+v", 404, o.Payload)
}

func (o *AlertingProfilesAttachNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachNotFound  %+v", 404, o.Payload)
}

func (o *AlertingProfilesAttachNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *AlertingProfilesAttachNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertingProfilesAttachInternalServerError creates a AlertingProfilesAttachInternalServerError with default headers values
func NewAlertingProfilesAttachInternalServerError() *AlertingProfilesAttachInternalServerError {
	return &AlertingProfilesAttachInternalServerError{}
}

/*
AlertingProfilesAttachInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AlertingProfilesAttachInternalServerError struct {
}

// IsSuccess returns true when this alerting profiles attach internal server error response has a 2xx status code
func (o *AlertingProfilesAttachInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this alerting profiles attach internal server error response has a 3xx status code
func (o *AlertingProfilesAttachInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this alerting profiles attach internal server error response has a 4xx status code
func (o *AlertingProfilesAttachInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this alerting profiles attach internal server error response has a 5xx status code
func (o *AlertingProfilesAttachInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this alerting profiles attach internal server error response a status code equal to that given
func (o *AlertingProfilesAttachInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the alerting profiles attach internal server error response
func (o *AlertingProfilesAttachInternalServerError) Code() int {
	return 500
}

func (o *AlertingProfilesAttachInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachInternalServerError ", 500)
}

func (o *AlertingProfilesAttachInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachInternalServerError ", 500)
}

func (o *AlertingProfilesAttachInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
