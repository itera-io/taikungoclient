// Code generated by go-swagger; DO NOT EDIT.

package alerting_profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AlertingProfilesAttachReader is a Reader for the AlertingProfilesAttach structure.
type AlertingProfilesAttachReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AlertingProfilesAttachReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAlertingProfilesAttachOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAlertingProfilesAttachBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAlertingProfilesAttachUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAlertingProfilesAttachForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAlertingProfilesAttachNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAlertingProfilesAttachInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAlertingProfilesAttachOK creates a AlertingProfilesAttachOK with default headers values
func NewAlertingProfilesAttachOK() *AlertingProfilesAttachOK {
	return &AlertingProfilesAttachOK{}
}

/*
AlertingProfilesAttachOK describes a response with status code 200, with default header values.

Success
*/
type AlertingProfilesAttachOK struct {
	Payload interface{}
}

// IsSuccess returns true when this alerting profiles attach o k response has a 2xx status code
func (o *AlertingProfilesAttachOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this alerting profiles attach o k response has a 3xx status code
func (o *AlertingProfilesAttachOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this alerting profiles attach o k response has a 4xx status code
func (o *AlertingProfilesAttachOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this alerting profiles attach o k response has a 5xx status code
func (o *AlertingProfilesAttachOK) IsServerError() bool {
	return false
}

// IsCode returns true when this alerting profiles attach o k response a status code equal to that given
func (o *AlertingProfilesAttachOK) IsCode(code int) bool {
	return code == 200
}

func (o *AlertingProfilesAttachOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachOK  %+v", 200, o.Payload)
}

func (o *AlertingProfilesAttachOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachOK  %+v", 200, o.Payload)
}

func (o *AlertingProfilesAttachOK) GetPayload() interface{} {
	return o.Payload
}

func (o *AlertingProfilesAttachOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertingProfilesAttachBadRequest creates a AlertingProfilesAttachBadRequest with default headers values
func NewAlertingProfilesAttachBadRequest() *AlertingProfilesAttachBadRequest {
	return &AlertingProfilesAttachBadRequest{}
}

/*
AlertingProfilesAttachBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AlertingProfilesAttachBadRequest struct {
	Payload []*AlertingProfilesAttachBadRequestBodyItems0
}

// IsSuccess returns true when this alerting profiles attach bad request response has a 2xx status code
func (o *AlertingProfilesAttachBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this alerting profiles attach bad request response has a 3xx status code
func (o *AlertingProfilesAttachBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this alerting profiles attach bad request response has a 4xx status code
func (o *AlertingProfilesAttachBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this alerting profiles attach bad request response has a 5xx status code
func (o *AlertingProfilesAttachBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this alerting profiles attach bad request response a status code equal to that given
func (o *AlertingProfilesAttachBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AlertingProfilesAttachBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachBadRequest  %+v", 400, o.Payload)
}

func (o *AlertingProfilesAttachBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachBadRequest  %+v", 400, o.Payload)
}

func (o *AlertingProfilesAttachBadRequest) GetPayload() []*AlertingProfilesAttachBadRequestBodyItems0 {
	return o.Payload
}

func (o *AlertingProfilesAttachBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertingProfilesAttachUnauthorized creates a AlertingProfilesAttachUnauthorized with default headers values
func NewAlertingProfilesAttachUnauthorized() *AlertingProfilesAttachUnauthorized {
	return &AlertingProfilesAttachUnauthorized{}
}

/*
AlertingProfilesAttachUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AlertingProfilesAttachUnauthorized struct {
	Payload *AlertingProfilesAttachUnauthorizedBody
}

// IsSuccess returns true when this alerting profiles attach unauthorized response has a 2xx status code
func (o *AlertingProfilesAttachUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this alerting profiles attach unauthorized response has a 3xx status code
func (o *AlertingProfilesAttachUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this alerting profiles attach unauthorized response has a 4xx status code
func (o *AlertingProfilesAttachUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this alerting profiles attach unauthorized response has a 5xx status code
func (o *AlertingProfilesAttachUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this alerting profiles attach unauthorized response a status code equal to that given
func (o *AlertingProfilesAttachUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AlertingProfilesAttachUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachUnauthorized  %+v", 401, o.Payload)
}

func (o *AlertingProfilesAttachUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachUnauthorized  %+v", 401, o.Payload)
}

func (o *AlertingProfilesAttachUnauthorized) GetPayload() *AlertingProfilesAttachUnauthorizedBody {
	return o.Payload
}

func (o *AlertingProfilesAttachUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AlertingProfilesAttachUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertingProfilesAttachForbidden creates a AlertingProfilesAttachForbidden with default headers values
func NewAlertingProfilesAttachForbidden() *AlertingProfilesAttachForbidden {
	return &AlertingProfilesAttachForbidden{}
}

/*
AlertingProfilesAttachForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AlertingProfilesAttachForbidden struct {
	Payload *AlertingProfilesAttachForbiddenBody
}

// IsSuccess returns true when this alerting profiles attach forbidden response has a 2xx status code
func (o *AlertingProfilesAttachForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this alerting profiles attach forbidden response has a 3xx status code
func (o *AlertingProfilesAttachForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this alerting profiles attach forbidden response has a 4xx status code
func (o *AlertingProfilesAttachForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this alerting profiles attach forbidden response has a 5xx status code
func (o *AlertingProfilesAttachForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this alerting profiles attach forbidden response a status code equal to that given
func (o *AlertingProfilesAttachForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *AlertingProfilesAttachForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachForbidden  %+v", 403, o.Payload)
}

func (o *AlertingProfilesAttachForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachForbidden  %+v", 403, o.Payload)
}

func (o *AlertingProfilesAttachForbidden) GetPayload() *AlertingProfilesAttachForbiddenBody {
	return o.Payload
}

func (o *AlertingProfilesAttachForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AlertingProfilesAttachForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertingProfilesAttachNotFound creates a AlertingProfilesAttachNotFound with default headers values
func NewAlertingProfilesAttachNotFound() *AlertingProfilesAttachNotFound {
	return &AlertingProfilesAttachNotFound{}
}

/*
AlertingProfilesAttachNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AlertingProfilesAttachNotFound struct {
	Payload *AlertingProfilesAttachNotFoundBody
}

// IsSuccess returns true when this alerting profiles attach not found response has a 2xx status code
func (o *AlertingProfilesAttachNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this alerting profiles attach not found response has a 3xx status code
func (o *AlertingProfilesAttachNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this alerting profiles attach not found response has a 4xx status code
func (o *AlertingProfilesAttachNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this alerting profiles attach not found response has a 5xx status code
func (o *AlertingProfilesAttachNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this alerting profiles attach not found response a status code equal to that given
func (o *AlertingProfilesAttachNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *AlertingProfilesAttachNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachNotFound  %+v", 404, o.Payload)
}

func (o *AlertingProfilesAttachNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachNotFound  %+v", 404, o.Payload)
}

func (o *AlertingProfilesAttachNotFound) GetPayload() *AlertingProfilesAttachNotFoundBody {
	return o.Payload
}

func (o *AlertingProfilesAttachNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AlertingProfilesAttachNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertingProfilesAttachInternalServerError creates a AlertingProfilesAttachInternalServerError with default headers values
func NewAlertingProfilesAttachInternalServerError() *AlertingProfilesAttachInternalServerError {
	return &AlertingProfilesAttachInternalServerError{}
}

/*
AlertingProfilesAttachInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AlertingProfilesAttachInternalServerError struct {
}

// IsSuccess returns true when this alerting profiles attach internal server error response has a 2xx status code
func (o *AlertingProfilesAttachInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this alerting profiles attach internal server error response has a 3xx status code
func (o *AlertingProfilesAttachInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this alerting profiles attach internal server error response has a 4xx status code
func (o *AlertingProfilesAttachInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this alerting profiles attach internal server error response has a 5xx status code
func (o *AlertingProfilesAttachInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this alerting profiles attach internal server error response a status code equal to that given
func (o *AlertingProfilesAttachInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AlertingProfilesAttachInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachInternalServerError ", 500)
}

func (o *AlertingProfilesAttachInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/attach][%d] alertingProfilesAttachInternalServerError ", 500)
}

func (o *AlertingProfilesAttachInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
AlertingProfilesAttachBadRequestBodyItems0 alerting profiles attach bad request body items0
swagger:model AlertingProfilesAttachBadRequestBodyItems0
*/
type AlertingProfilesAttachBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this alerting profiles attach bad request body items0
func (o *AlertingProfilesAttachBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this alerting profiles attach bad request body items0 based on context it is used
func (o *AlertingProfilesAttachBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AlertingProfilesAttachBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertingProfilesAttachBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res AlertingProfilesAttachBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AlertingProfilesAttachBody alerting profiles attach body
swagger:model AlertingProfilesAttachBody
*/
type AlertingProfilesAttachBody struct {

	// alerting profile Id
	AlertingProfileID int32 `json:"alertingProfileId,omitempty"`

	// project Id
	ProjectID int32 `json:"projectId,omitempty"`
}

// Validate validates this alerting profiles attach body
func (o *AlertingProfilesAttachBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this alerting profiles attach body based on context it is used
func (o *AlertingProfilesAttachBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AlertingProfilesAttachBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertingProfilesAttachBody) UnmarshalBinary(b []byte) error {
	var res AlertingProfilesAttachBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AlertingProfilesAttachForbiddenBody alerting profiles attach forbidden body
swagger:model AlertingProfilesAttachForbiddenBody
*/
type AlertingProfilesAttachForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this alerting profiles attach forbidden body
func (o *AlertingProfilesAttachForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this alerting profiles attach forbidden body based on context it is used
func (o *AlertingProfilesAttachForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AlertingProfilesAttachForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertingProfilesAttachForbiddenBody) UnmarshalBinary(b []byte) error {
	var res AlertingProfilesAttachForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AlertingProfilesAttachNotFoundBody alerting profiles attach not found body
swagger:model AlertingProfilesAttachNotFoundBody
*/
type AlertingProfilesAttachNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this alerting profiles attach not found body
func (o *AlertingProfilesAttachNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this alerting profiles attach not found body based on context it is used
func (o *AlertingProfilesAttachNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AlertingProfilesAttachNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertingProfilesAttachNotFoundBody) UnmarshalBinary(b []byte) error {
	var res AlertingProfilesAttachNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AlertingProfilesAttachUnauthorizedBody alerting profiles attach unauthorized body
swagger:model AlertingProfilesAttachUnauthorizedBody
*/
type AlertingProfilesAttachUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this alerting profiles attach unauthorized body
func (o *AlertingProfilesAttachUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this alerting profiles attach unauthorized body based on context it is used
func (o *AlertingProfilesAttachUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AlertingProfilesAttachUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertingProfilesAttachUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res AlertingProfilesAttachUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
