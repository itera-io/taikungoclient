// Code generated by go-swagger; DO NOT EDIT.

package alerting_profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AlertingProfilesDetachReader is a Reader for the AlertingProfilesDetach structure.
type AlertingProfilesDetachReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AlertingProfilesDetachReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAlertingProfilesDetachOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAlertingProfilesDetachBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAlertingProfilesDetachUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAlertingProfilesDetachForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAlertingProfilesDetachNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAlertingProfilesDetachInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAlertingProfilesDetachOK creates a AlertingProfilesDetachOK with default headers values
func NewAlertingProfilesDetachOK() *AlertingProfilesDetachOK {
	return &AlertingProfilesDetachOK{}
}

/*
AlertingProfilesDetachOK describes a response with status code 200, with default header values.

Success
*/
type AlertingProfilesDetachOK struct {
	Payload interface{}
}

// IsSuccess returns true when this alerting profiles detach o k response has a 2xx status code
func (o *AlertingProfilesDetachOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this alerting profiles detach o k response has a 3xx status code
func (o *AlertingProfilesDetachOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this alerting profiles detach o k response has a 4xx status code
func (o *AlertingProfilesDetachOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this alerting profiles detach o k response has a 5xx status code
func (o *AlertingProfilesDetachOK) IsServerError() bool {
	return false
}

// IsCode returns true when this alerting profiles detach o k response a status code equal to that given
func (o *AlertingProfilesDetachOK) IsCode(code int) bool {
	return code == 200
}

func (o *AlertingProfilesDetachOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/detach][%d] alertingProfilesDetachOK  %+v", 200, o.Payload)
}

func (o *AlertingProfilesDetachOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/detach][%d] alertingProfilesDetachOK  %+v", 200, o.Payload)
}

func (o *AlertingProfilesDetachOK) GetPayload() interface{} {
	return o.Payload
}

func (o *AlertingProfilesDetachOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertingProfilesDetachBadRequest creates a AlertingProfilesDetachBadRequest with default headers values
func NewAlertingProfilesDetachBadRequest() *AlertingProfilesDetachBadRequest {
	return &AlertingProfilesDetachBadRequest{}
}

/*
AlertingProfilesDetachBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AlertingProfilesDetachBadRequest struct {
	Payload []*AlertingProfilesDetachBadRequestBodyItems0
}

// IsSuccess returns true when this alerting profiles detach bad request response has a 2xx status code
func (o *AlertingProfilesDetachBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this alerting profiles detach bad request response has a 3xx status code
func (o *AlertingProfilesDetachBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this alerting profiles detach bad request response has a 4xx status code
func (o *AlertingProfilesDetachBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this alerting profiles detach bad request response has a 5xx status code
func (o *AlertingProfilesDetachBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this alerting profiles detach bad request response a status code equal to that given
func (o *AlertingProfilesDetachBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AlertingProfilesDetachBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/detach][%d] alertingProfilesDetachBadRequest  %+v", 400, o.Payload)
}

func (o *AlertingProfilesDetachBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/detach][%d] alertingProfilesDetachBadRequest  %+v", 400, o.Payload)
}

func (o *AlertingProfilesDetachBadRequest) GetPayload() []*AlertingProfilesDetachBadRequestBodyItems0 {
	return o.Payload
}

func (o *AlertingProfilesDetachBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertingProfilesDetachUnauthorized creates a AlertingProfilesDetachUnauthorized with default headers values
func NewAlertingProfilesDetachUnauthorized() *AlertingProfilesDetachUnauthorized {
	return &AlertingProfilesDetachUnauthorized{}
}

/*
AlertingProfilesDetachUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AlertingProfilesDetachUnauthorized struct {
	Payload *AlertingProfilesDetachUnauthorizedBody
}

// IsSuccess returns true when this alerting profiles detach unauthorized response has a 2xx status code
func (o *AlertingProfilesDetachUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this alerting profiles detach unauthorized response has a 3xx status code
func (o *AlertingProfilesDetachUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this alerting profiles detach unauthorized response has a 4xx status code
func (o *AlertingProfilesDetachUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this alerting profiles detach unauthorized response has a 5xx status code
func (o *AlertingProfilesDetachUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this alerting profiles detach unauthorized response a status code equal to that given
func (o *AlertingProfilesDetachUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AlertingProfilesDetachUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/detach][%d] alertingProfilesDetachUnauthorized  %+v", 401, o.Payload)
}

func (o *AlertingProfilesDetachUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/detach][%d] alertingProfilesDetachUnauthorized  %+v", 401, o.Payload)
}

func (o *AlertingProfilesDetachUnauthorized) GetPayload() *AlertingProfilesDetachUnauthorizedBody {
	return o.Payload
}

func (o *AlertingProfilesDetachUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AlertingProfilesDetachUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertingProfilesDetachForbidden creates a AlertingProfilesDetachForbidden with default headers values
func NewAlertingProfilesDetachForbidden() *AlertingProfilesDetachForbidden {
	return &AlertingProfilesDetachForbidden{}
}

/*
AlertingProfilesDetachForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AlertingProfilesDetachForbidden struct {
	Payload *AlertingProfilesDetachForbiddenBody
}

// IsSuccess returns true when this alerting profiles detach forbidden response has a 2xx status code
func (o *AlertingProfilesDetachForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this alerting profiles detach forbidden response has a 3xx status code
func (o *AlertingProfilesDetachForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this alerting profiles detach forbidden response has a 4xx status code
func (o *AlertingProfilesDetachForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this alerting profiles detach forbidden response has a 5xx status code
func (o *AlertingProfilesDetachForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this alerting profiles detach forbidden response a status code equal to that given
func (o *AlertingProfilesDetachForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *AlertingProfilesDetachForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/detach][%d] alertingProfilesDetachForbidden  %+v", 403, o.Payload)
}

func (o *AlertingProfilesDetachForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/detach][%d] alertingProfilesDetachForbidden  %+v", 403, o.Payload)
}

func (o *AlertingProfilesDetachForbidden) GetPayload() *AlertingProfilesDetachForbiddenBody {
	return o.Payload
}

func (o *AlertingProfilesDetachForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AlertingProfilesDetachForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertingProfilesDetachNotFound creates a AlertingProfilesDetachNotFound with default headers values
func NewAlertingProfilesDetachNotFound() *AlertingProfilesDetachNotFound {
	return &AlertingProfilesDetachNotFound{}
}

/*
AlertingProfilesDetachNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AlertingProfilesDetachNotFound struct {
	Payload *AlertingProfilesDetachNotFoundBody
}

// IsSuccess returns true when this alerting profiles detach not found response has a 2xx status code
func (o *AlertingProfilesDetachNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this alerting profiles detach not found response has a 3xx status code
func (o *AlertingProfilesDetachNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this alerting profiles detach not found response has a 4xx status code
func (o *AlertingProfilesDetachNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this alerting profiles detach not found response has a 5xx status code
func (o *AlertingProfilesDetachNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this alerting profiles detach not found response a status code equal to that given
func (o *AlertingProfilesDetachNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *AlertingProfilesDetachNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/detach][%d] alertingProfilesDetachNotFound  %+v", 404, o.Payload)
}

func (o *AlertingProfilesDetachNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/detach][%d] alertingProfilesDetachNotFound  %+v", 404, o.Payload)
}

func (o *AlertingProfilesDetachNotFound) GetPayload() *AlertingProfilesDetachNotFoundBody {
	return o.Payload
}

func (o *AlertingProfilesDetachNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AlertingProfilesDetachNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertingProfilesDetachInternalServerError creates a AlertingProfilesDetachInternalServerError with default headers values
func NewAlertingProfilesDetachInternalServerError() *AlertingProfilesDetachInternalServerError {
	return &AlertingProfilesDetachInternalServerError{}
}

/*
AlertingProfilesDetachInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AlertingProfilesDetachInternalServerError struct {
}

// IsSuccess returns true when this alerting profiles detach internal server error response has a 2xx status code
func (o *AlertingProfilesDetachInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this alerting profiles detach internal server error response has a 3xx status code
func (o *AlertingProfilesDetachInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this alerting profiles detach internal server error response has a 4xx status code
func (o *AlertingProfilesDetachInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this alerting profiles detach internal server error response has a 5xx status code
func (o *AlertingProfilesDetachInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this alerting profiles detach internal server error response a status code equal to that given
func (o *AlertingProfilesDetachInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AlertingProfilesDetachInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/detach][%d] alertingProfilesDetachInternalServerError ", 500)
}

func (o *AlertingProfilesDetachInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AlertingProfiles/detach][%d] alertingProfilesDetachInternalServerError ", 500)
}

func (o *AlertingProfilesDetachInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
AlertingProfilesDetachBadRequestBodyItems0 alerting profiles detach bad request body items0
swagger:model AlertingProfilesDetachBadRequestBodyItems0
*/
type AlertingProfilesDetachBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this alerting profiles detach bad request body items0
func (o *AlertingProfilesDetachBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this alerting profiles detach bad request body items0 based on context it is used
func (o *AlertingProfilesDetachBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AlertingProfilesDetachBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertingProfilesDetachBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res AlertingProfilesDetachBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AlertingProfilesDetachBody alerting profiles detach body
swagger:model AlertingProfilesDetachBody
*/
type AlertingProfilesDetachBody struct {

	// alerting profile Id
	AlertingProfileID int32 `json:"alertingProfileId,omitempty"`

	// project Id
	ProjectID int32 `json:"projectId,omitempty"`
}

// Validate validates this alerting profiles detach body
func (o *AlertingProfilesDetachBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this alerting profiles detach body based on context it is used
func (o *AlertingProfilesDetachBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AlertingProfilesDetachBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertingProfilesDetachBody) UnmarshalBinary(b []byte) error {
	var res AlertingProfilesDetachBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AlertingProfilesDetachForbiddenBody alerting profiles detach forbidden body
swagger:model AlertingProfilesDetachForbiddenBody
*/
type AlertingProfilesDetachForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this alerting profiles detach forbidden body
func (o *AlertingProfilesDetachForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this alerting profiles detach forbidden body based on context it is used
func (o *AlertingProfilesDetachForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AlertingProfilesDetachForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertingProfilesDetachForbiddenBody) UnmarshalBinary(b []byte) error {
	var res AlertingProfilesDetachForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AlertingProfilesDetachNotFoundBody alerting profiles detach not found body
swagger:model AlertingProfilesDetachNotFoundBody
*/
type AlertingProfilesDetachNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this alerting profiles detach not found body
func (o *AlertingProfilesDetachNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this alerting profiles detach not found body based on context it is used
func (o *AlertingProfilesDetachNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AlertingProfilesDetachNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertingProfilesDetachNotFoundBody) UnmarshalBinary(b []byte) error {
	var res AlertingProfilesDetachNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AlertingProfilesDetachUnauthorizedBody alerting profiles detach unauthorized body
swagger:model AlertingProfilesDetachUnauthorizedBody
*/
type AlertingProfilesDetachUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this alerting profiles detach unauthorized body
func (o *AlertingProfilesDetachUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this alerting profiles detach unauthorized body based on context it is used
func (o *AlertingProfilesDetachUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AlertingProfilesDetachUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertingProfilesDetachUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res AlertingProfilesDetachUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
