/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the ProjectMonitoringAlertsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectMonitoringAlertsDto{}

// ProjectMonitoringAlertsDto struct for ProjectMonitoringAlertsDto
type ProjectMonitoringAlertsDto struct {
	Status *string `json:"status,omitempty"`
	Data *AlertData `json:"data,omitempty"`
}

// NewProjectMonitoringAlertsDto instantiates a new ProjectMonitoringAlertsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectMonitoringAlertsDto() *ProjectMonitoringAlertsDto {
	this := ProjectMonitoringAlertsDto{}
	return &this
}

// NewProjectMonitoringAlertsDtoWithDefaults instantiates a new ProjectMonitoringAlertsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectMonitoringAlertsDtoWithDefaults() *ProjectMonitoringAlertsDto {
	this := ProjectMonitoringAlertsDto{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ProjectMonitoringAlertsDto) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectMonitoringAlertsDto) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ProjectMonitoringAlertsDto) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ProjectMonitoringAlertsDto) SetStatus(v string) {
	o.Status = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ProjectMonitoringAlertsDto) GetData() AlertData {
	if o == nil || IsNil(o.Data) {
		var ret AlertData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectMonitoringAlertsDto) GetDataOk() (*AlertData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ProjectMonitoringAlertsDto) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given AlertData and assigns it to the Data field.
func (o *ProjectMonitoringAlertsDto) SetData(v AlertData) {
	o.Data = &v
}

func (o ProjectMonitoringAlertsDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectMonitoringAlertsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableProjectMonitoringAlertsDto struct {
	value *ProjectMonitoringAlertsDto
	isSet bool
}

func (v NullableProjectMonitoringAlertsDto) Get() *ProjectMonitoringAlertsDto {
	return v.value
}

func (v *NullableProjectMonitoringAlertsDto) Set(val *ProjectMonitoringAlertsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectMonitoringAlertsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectMonitoringAlertsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectMonitoringAlertsDto(val *ProjectMonitoringAlertsDto) *NullableProjectMonitoringAlertsDto {
	return &NullableProjectMonitoringAlertsDto{value: val, isSet: true}
}

func (v NullableProjectMonitoringAlertsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectMonitoringAlertsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


