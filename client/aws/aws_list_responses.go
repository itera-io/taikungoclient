// Code generated by go-swagger; DO NOT EDIT.

package aws

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AwsListReader is a Reader for the AwsList structure.
type AwsListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AwsListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAwsListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAwsListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAwsListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAwsListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAwsListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAwsListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAwsListOK creates a AwsListOK with default headers values
func NewAwsListOK() *AwsListOK {
	return &AwsListOK{}
}

/*
AwsListOK describes a response with status code 200, with default header values.

Success
*/
type AwsListOK struct {
	Payload *AwsListOKBody
}

// IsSuccess returns true when this aws list o k response has a 2xx status code
func (o *AwsListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this aws list o k response has a 3xx status code
func (o *AwsListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this aws list o k response has a 4xx status code
func (o *AwsListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this aws list o k response has a 5xx status code
func (o *AwsListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this aws list o k response a status code equal to that given
func (o *AwsListOK) IsCode(code int) bool {
	return code == 200
}

func (o *AwsListOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Aws/list][%d] awsListOK  %+v", 200, o.Payload)
}

func (o *AwsListOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Aws/list][%d] awsListOK  %+v", 200, o.Payload)
}

func (o *AwsListOK) GetPayload() *AwsListOKBody {
	return o.Payload
}

func (o *AwsListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AwsListOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAwsListBadRequest creates a AwsListBadRequest with default headers values
func NewAwsListBadRequest() *AwsListBadRequest {
	return &AwsListBadRequest{}
}

/*
AwsListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AwsListBadRequest struct {
	Payload []*AwsListBadRequestBodyItems0
}

// IsSuccess returns true when this aws list bad request response has a 2xx status code
func (o *AwsListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this aws list bad request response has a 3xx status code
func (o *AwsListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this aws list bad request response has a 4xx status code
func (o *AwsListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this aws list bad request response has a 5xx status code
func (o *AwsListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this aws list bad request response a status code equal to that given
func (o *AwsListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AwsListBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Aws/list][%d] awsListBadRequest  %+v", 400, o.Payload)
}

func (o *AwsListBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Aws/list][%d] awsListBadRequest  %+v", 400, o.Payload)
}

func (o *AwsListBadRequest) GetPayload() []*AwsListBadRequestBodyItems0 {
	return o.Payload
}

func (o *AwsListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAwsListUnauthorized creates a AwsListUnauthorized with default headers values
func NewAwsListUnauthorized() *AwsListUnauthorized {
	return &AwsListUnauthorized{}
}

/*
AwsListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AwsListUnauthorized struct {
	Payload *AwsListUnauthorizedBody
}

// IsSuccess returns true when this aws list unauthorized response has a 2xx status code
func (o *AwsListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this aws list unauthorized response has a 3xx status code
func (o *AwsListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this aws list unauthorized response has a 4xx status code
func (o *AwsListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this aws list unauthorized response has a 5xx status code
func (o *AwsListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this aws list unauthorized response a status code equal to that given
func (o *AwsListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AwsListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Aws/list][%d] awsListUnauthorized  %+v", 401, o.Payload)
}

func (o *AwsListUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Aws/list][%d] awsListUnauthorized  %+v", 401, o.Payload)
}

func (o *AwsListUnauthorized) GetPayload() *AwsListUnauthorizedBody {
	return o.Payload
}

func (o *AwsListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AwsListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAwsListForbidden creates a AwsListForbidden with default headers values
func NewAwsListForbidden() *AwsListForbidden {
	return &AwsListForbidden{}
}

/*
AwsListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AwsListForbidden struct {
	Payload *AwsListForbiddenBody
}

// IsSuccess returns true when this aws list forbidden response has a 2xx status code
func (o *AwsListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this aws list forbidden response has a 3xx status code
func (o *AwsListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this aws list forbidden response has a 4xx status code
func (o *AwsListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this aws list forbidden response has a 5xx status code
func (o *AwsListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this aws list forbidden response a status code equal to that given
func (o *AwsListForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *AwsListForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Aws/list][%d] awsListForbidden  %+v", 403, o.Payload)
}

func (o *AwsListForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Aws/list][%d] awsListForbidden  %+v", 403, o.Payload)
}

func (o *AwsListForbidden) GetPayload() *AwsListForbiddenBody {
	return o.Payload
}

func (o *AwsListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AwsListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAwsListNotFound creates a AwsListNotFound with default headers values
func NewAwsListNotFound() *AwsListNotFound {
	return &AwsListNotFound{}
}

/*
AwsListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AwsListNotFound struct {
	Payload *AwsListNotFoundBody
}

// IsSuccess returns true when this aws list not found response has a 2xx status code
func (o *AwsListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this aws list not found response has a 3xx status code
func (o *AwsListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this aws list not found response has a 4xx status code
func (o *AwsListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this aws list not found response has a 5xx status code
func (o *AwsListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this aws list not found response a status code equal to that given
func (o *AwsListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *AwsListNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Aws/list][%d] awsListNotFound  %+v", 404, o.Payload)
}

func (o *AwsListNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Aws/list][%d] awsListNotFound  %+v", 404, o.Payload)
}

func (o *AwsListNotFound) GetPayload() *AwsListNotFoundBody {
	return o.Payload
}

func (o *AwsListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AwsListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAwsListInternalServerError creates a AwsListInternalServerError with default headers values
func NewAwsListInternalServerError() *AwsListInternalServerError {
	return &AwsListInternalServerError{}
}

/*
AwsListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AwsListInternalServerError struct {
}

// IsSuccess returns true when this aws list internal server error response has a 2xx status code
func (o *AwsListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this aws list internal server error response has a 3xx status code
func (o *AwsListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this aws list internal server error response has a 4xx status code
func (o *AwsListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this aws list internal server error response has a 5xx status code
func (o *AwsListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this aws list internal server error response a status code equal to that given
func (o *AwsListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AwsListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Aws/list][%d] awsListInternalServerError ", 500)
}

func (o *AwsListInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Aws/list][%d] awsListInternalServerError ", 500)
}

func (o *AwsListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
AwsListBadRequestBodyItems0 aws list bad request body items0
swagger:model AwsListBadRequestBodyItems0
*/
type AwsListBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this aws list bad request body items0
func (o *AwsListBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this aws list bad request body items0 based on context it is used
func (o *AwsListBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AwsListBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AwsListBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res AwsListBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AwsListForbiddenBody aws list forbidden body
swagger:model AwsListForbiddenBody
*/
type AwsListForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this aws list forbidden body
func (o *AwsListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this aws list forbidden body based on context it is used
func (o *AwsListForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AwsListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AwsListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res AwsListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AwsListNotFoundBody aws list not found body
swagger:model AwsListNotFoundBody
*/
type AwsListNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this aws list not found body
func (o *AwsListNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this aws list not found body based on context it is used
func (o *AwsListNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AwsListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AwsListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res AwsListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AwsListOKBody aws list o k body
swagger:model AwsListOKBody
*/
type AwsListOKBody struct {

	// data
	Data []*AwsListOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this aws list o k body
func (o *AwsListOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AwsListOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("awsListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("awsListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this aws list o k body based on the context it is used
func (o *AwsListOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AwsListOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("awsListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("awsListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *AwsListOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AwsListOKBody) UnmarshalBinary(b []byte) error {
	var res AwsListOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AwsListOKBodyDataItems0 aws list o k body data items0
swagger:model AwsListOKBodyDataItems0
*/
type AwsListOKBodyDataItems0 struct {

	// availability zones
	AvailabilityZones []string `json:"availabilityZones"`

	// continent name
	ContinentName string `json:"continentName,omitempty"`

	// created at
	CreatedAt string `json:"createdAt,omitempty"`

	// created by
	CreatedBy string `json:"createdBy,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// is default
	IsDefault bool `json:"isDefault"`

	// is locked
	IsLocked bool `json:"isLocked"`

	// last modified
	LastModified string `json:"lastModified,omitempty"`

	// last modified by
	LastModifiedBy string `json:"lastModifiedBy,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// organization name
	OrganizationName string `json:"organizationName,omitempty"`

	// project count
	ProjectCount int32 `json:"projectCount,omitempty"`

	// projects
	Projects []*AwsListOKBodyDataItems0ProjectsItems0 `json:"projects"`

	// region
	Region string `json:"region,omitempty"`
}

// Validate validates this aws list o k body data items0
func (o *AwsListOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateProjects(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AwsListOKBodyDataItems0) validateProjects(formats strfmt.Registry) error {
	if swag.IsZero(o.Projects) { // not required
		return nil
	}

	for i := 0; i < len(o.Projects); i++ {
		if swag.IsZero(o.Projects[i]) { // not required
			continue
		}

		if o.Projects[i] != nil {
			if err := o.Projects[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("projects" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("projects" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this aws list o k body data items0 based on the context it is used
func (o *AwsListOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateProjects(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AwsListOKBodyDataItems0) contextValidateProjects(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Projects); i++ {

		if o.Projects[i] != nil {
			if err := o.Projects[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("projects" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("projects" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *AwsListOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AwsListOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res AwsListOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AwsListOKBodyDataItems0ProjectsItems0 aws list o k body data items0 projects items0
swagger:model AwsListOKBodyDataItems0ProjectsItems0
*/
type AwsListOKBodyDataItems0ProjectsItems0 struct {

	// id
	ID int32 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this aws list o k body data items0 projects items0
func (o *AwsListOKBodyDataItems0ProjectsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this aws list o k body data items0 projects items0 based on context it is used
func (o *AwsListOKBodyDataItems0ProjectsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AwsListOKBodyDataItems0ProjectsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AwsListOKBodyDataItems0ProjectsItems0) UnmarshalBinary(b []byte) error {
	var res AwsListOKBodyDataItems0ProjectsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AwsListUnauthorizedBody aws list unauthorized body
swagger:model AwsListUnauthorizedBody
*/
type AwsListUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this aws list unauthorized body
func (o *AwsListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this aws list unauthorized body based on context it is used
func (o *AwsListUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AwsListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AwsListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res AwsListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
