// Code generated by go-swagger; DO NOT EDIT.

package aws

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AwsAwsZoneListReader is a Reader for the AwsAwsZoneList structure.
type AwsAwsZoneListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AwsAwsZoneListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAwsAwsZoneListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAwsAwsZoneListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAwsAwsZoneListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAwsAwsZoneListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAwsAwsZoneListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAwsAwsZoneListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAwsAwsZoneListOK creates a AwsAwsZoneListOK with default headers values
func NewAwsAwsZoneListOK() *AwsAwsZoneListOK {
	return &AwsAwsZoneListOK{}
}

/*
AwsAwsZoneListOK describes a response with status code 200, with default header values.

Success
*/
type AwsAwsZoneListOK struct {
	Payload *AwsAwsZoneListOKBody
}

// IsSuccess returns true when this aws aws zone list o k response has a 2xx status code
func (o *AwsAwsZoneListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this aws aws zone list o k response has a 3xx status code
func (o *AwsAwsZoneListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this aws aws zone list o k response has a 4xx status code
func (o *AwsAwsZoneListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this aws aws zone list o k response has a 5xx status code
func (o *AwsAwsZoneListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this aws aws zone list o k response a status code equal to that given
func (o *AwsAwsZoneListOK) IsCode(code int) bool {
	return code == 200
}

func (o *AwsAwsZoneListOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Aws/zones][%d] awsAwsZoneListOK  %+v", 200, o.Payload)
}

func (o *AwsAwsZoneListOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Aws/zones][%d] awsAwsZoneListOK  %+v", 200, o.Payload)
}

func (o *AwsAwsZoneListOK) GetPayload() *AwsAwsZoneListOKBody {
	return o.Payload
}

func (o *AwsAwsZoneListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AwsAwsZoneListOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAwsAwsZoneListBadRequest creates a AwsAwsZoneListBadRequest with default headers values
func NewAwsAwsZoneListBadRequest() *AwsAwsZoneListBadRequest {
	return &AwsAwsZoneListBadRequest{}
}

/*
AwsAwsZoneListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AwsAwsZoneListBadRequest struct {
	Payload []*AwsAwsZoneListBadRequestBodyItems0
}

// IsSuccess returns true when this aws aws zone list bad request response has a 2xx status code
func (o *AwsAwsZoneListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this aws aws zone list bad request response has a 3xx status code
func (o *AwsAwsZoneListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this aws aws zone list bad request response has a 4xx status code
func (o *AwsAwsZoneListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this aws aws zone list bad request response has a 5xx status code
func (o *AwsAwsZoneListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this aws aws zone list bad request response a status code equal to that given
func (o *AwsAwsZoneListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AwsAwsZoneListBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Aws/zones][%d] awsAwsZoneListBadRequest  %+v", 400, o.Payload)
}

func (o *AwsAwsZoneListBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Aws/zones][%d] awsAwsZoneListBadRequest  %+v", 400, o.Payload)
}

func (o *AwsAwsZoneListBadRequest) GetPayload() []*AwsAwsZoneListBadRequestBodyItems0 {
	return o.Payload
}

func (o *AwsAwsZoneListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAwsAwsZoneListUnauthorized creates a AwsAwsZoneListUnauthorized with default headers values
func NewAwsAwsZoneListUnauthorized() *AwsAwsZoneListUnauthorized {
	return &AwsAwsZoneListUnauthorized{}
}

/*
AwsAwsZoneListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AwsAwsZoneListUnauthorized struct {
	Payload *AwsAwsZoneListUnauthorizedBody
}

// IsSuccess returns true when this aws aws zone list unauthorized response has a 2xx status code
func (o *AwsAwsZoneListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this aws aws zone list unauthorized response has a 3xx status code
func (o *AwsAwsZoneListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this aws aws zone list unauthorized response has a 4xx status code
func (o *AwsAwsZoneListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this aws aws zone list unauthorized response has a 5xx status code
func (o *AwsAwsZoneListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this aws aws zone list unauthorized response a status code equal to that given
func (o *AwsAwsZoneListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AwsAwsZoneListUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Aws/zones][%d] awsAwsZoneListUnauthorized  %+v", 401, o.Payload)
}

func (o *AwsAwsZoneListUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Aws/zones][%d] awsAwsZoneListUnauthorized  %+v", 401, o.Payload)
}

func (o *AwsAwsZoneListUnauthorized) GetPayload() *AwsAwsZoneListUnauthorizedBody {
	return o.Payload
}

func (o *AwsAwsZoneListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AwsAwsZoneListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAwsAwsZoneListForbidden creates a AwsAwsZoneListForbidden with default headers values
func NewAwsAwsZoneListForbidden() *AwsAwsZoneListForbidden {
	return &AwsAwsZoneListForbidden{}
}

/*
AwsAwsZoneListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AwsAwsZoneListForbidden struct {
	Payload *AwsAwsZoneListForbiddenBody
}

// IsSuccess returns true when this aws aws zone list forbidden response has a 2xx status code
func (o *AwsAwsZoneListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this aws aws zone list forbidden response has a 3xx status code
func (o *AwsAwsZoneListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this aws aws zone list forbidden response has a 4xx status code
func (o *AwsAwsZoneListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this aws aws zone list forbidden response has a 5xx status code
func (o *AwsAwsZoneListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this aws aws zone list forbidden response a status code equal to that given
func (o *AwsAwsZoneListForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *AwsAwsZoneListForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Aws/zones][%d] awsAwsZoneListForbidden  %+v", 403, o.Payload)
}

func (o *AwsAwsZoneListForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Aws/zones][%d] awsAwsZoneListForbidden  %+v", 403, o.Payload)
}

func (o *AwsAwsZoneListForbidden) GetPayload() *AwsAwsZoneListForbiddenBody {
	return o.Payload
}

func (o *AwsAwsZoneListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AwsAwsZoneListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAwsAwsZoneListNotFound creates a AwsAwsZoneListNotFound with default headers values
func NewAwsAwsZoneListNotFound() *AwsAwsZoneListNotFound {
	return &AwsAwsZoneListNotFound{}
}

/*
AwsAwsZoneListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AwsAwsZoneListNotFound struct {
	Payload *AwsAwsZoneListNotFoundBody
}

// IsSuccess returns true when this aws aws zone list not found response has a 2xx status code
func (o *AwsAwsZoneListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this aws aws zone list not found response has a 3xx status code
func (o *AwsAwsZoneListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this aws aws zone list not found response has a 4xx status code
func (o *AwsAwsZoneListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this aws aws zone list not found response has a 5xx status code
func (o *AwsAwsZoneListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this aws aws zone list not found response a status code equal to that given
func (o *AwsAwsZoneListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *AwsAwsZoneListNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Aws/zones][%d] awsAwsZoneListNotFound  %+v", 404, o.Payload)
}

func (o *AwsAwsZoneListNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Aws/zones][%d] awsAwsZoneListNotFound  %+v", 404, o.Payload)
}

func (o *AwsAwsZoneListNotFound) GetPayload() *AwsAwsZoneListNotFoundBody {
	return o.Payload
}

func (o *AwsAwsZoneListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AwsAwsZoneListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAwsAwsZoneListInternalServerError creates a AwsAwsZoneListInternalServerError with default headers values
func NewAwsAwsZoneListInternalServerError() *AwsAwsZoneListInternalServerError {
	return &AwsAwsZoneListInternalServerError{}
}

/*
AwsAwsZoneListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AwsAwsZoneListInternalServerError struct {
}

// IsSuccess returns true when this aws aws zone list internal server error response has a 2xx status code
func (o *AwsAwsZoneListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this aws aws zone list internal server error response has a 3xx status code
func (o *AwsAwsZoneListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this aws aws zone list internal server error response has a 4xx status code
func (o *AwsAwsZoneListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this aws aws zone list internal server error response has a 5xx status code
func (o *AwsAwsZoneListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this aws aws zone list internal server error response a status code equal to that given
func (o *AwsAwsZoneListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AwsAwsZoneListInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Aws/zones][%d] awsAwsZoneListInternalServerError ", 500)
}

func (o *AwsAwsZoneListInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Aws/zones][%d] awsAwsZoneListInternalServerError ", 500)
}

func (o *AwsAwsZoneListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
AwsAwsZoneListBadRequestBodyItems0 aws aws zone list bad request body items0
swagger:model AwsAwsZoneListBadRequestBodyItems0
*/
type AwsAwsZoneListBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this aws aws zone list bad request body items0
func (o *AwsAwsZoneListBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this aws aws zone list bad request body items0 based on context it is used
func (o *AwsAwsZoneListBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AwsAwsZoneListBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AwsAwsZoneListBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res AwsAwsZoneListBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AwsAwsZoneListBody aws aws zone list body
swagger:model AwsAwsZoneListBody
*/
type AwsAwsZoneListBody struct {

	// aws access key Id
	AwsAccessKeyID string `json:"awsAccessKeyId,omitempty"`

	// aws secret access key
	AwsSecretAccessKey string `json:"awsSecretAccessKey,omitempty"`

	// cloud Id
	CloudID int32 `json:"cloudId,omitempty"`

	// region
	Region string `json:"region,omitempty"`
}

// Validate validates this aws aws zone list body
func (o *AwsAwsZoneListBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this aws aws zone list body based on context it is used
func (o *AwsAwsZoneListBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AwsAwsZoneListBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AwsAwsZoneListBody) UnmarshalBinary(b []byte) error {
	var res AwsAwsZoneListBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AwsAwsZoneListForbiddenBody aws aws zone list forbidden body
swagger:model AwsAwsZoneListForbiddenBody
*/
type AwsAwsZoneListForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this aws aws zone list forbidden body
func (o *AwsAwsZoneListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this aws aws zone list forbidden body based on context it is used
func (o *AwsAwsZoneListForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AwsAwsZoneListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AwsAwsZoneListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res AwsAwsZoneListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AwsAwsZoneListNotFoundBody aws aws zone list not found body
swagger:model AwsAwsZoneListNotFoundBody
*/
type AwsAwsZoneListNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this aws aws zone list not found body
func (o *AwsAwsZoneListNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this aws aws zone list not found body based on context it is used
func (o *AwsAwsZoneListNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AwsAwsZoneListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AwsAwsZoneListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res AwsAwsZoneListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AwsAwsZoneListOKBody aws aws zone list o k body
swagger:model AwsAwsZoneListOKBody
*/
type AwsAwsZoneListOKBody struct {

	// list
	List []string `json:"list"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this aws aws zone list o k body
func (o *AwsAwsZoneListOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this aws aws zone list o k body based on context it is used
func (o *AwsAwsZoneListOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AwsAwsZoneListOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AwsAwsZoneListOKBody) UnmarshalBinary(b []byte) error {
	var res AwsAwsZoneListOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AwsAwsZoneListUnauthorizedBody aws aws zone list unauthorized body
swagger:model AwsAwsZoneListUnauthorizedBody
*/
type AwsAwsZoneListUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this aws aws zone list unauthorized body
func (o *AwsAwsZoneListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this aws aws zone list unauthorized body based on context it is used
func (o *AwsAwsZoneListUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AwsAwsZoneListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AwsAwsZoneListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res AwsAwsZoneListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
