// Code generated by go-swagger; DO NOT EDIT.

package slack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// SlackVerifySlackCredentialsReader is a Reader for the SlackVerifySlackCredentials structure.
type SlackVerifySlackCredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SlackVerifySlackCredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSlackVerifySlackCredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSlackVerifySlackCredentialsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSlackVerifySlackCredentialsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSlackVerifySlackCredentialsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSlackVerifySlackCredentialsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSlackVerifySlackCredentialsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSlackVerifySlackCredentialsOK creates a SlackVerifySlackCredentialsOK with default headers values
func NewSlackVerifySlackCredentialsOK() *SlackVerifySlackCredentialsOK {
	return &SlackVerifySlackCredentialsOK{}
}

/* SlackVerifySlackCredentialsOK describes a response with status code 200, with default header values.

Success
*/
type SlackVerifySlackCredentialsOK struct {
	Payload models.Unit
}

func (o *SlackVerifySlackCredentialsOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/verify][%d] slackVerifySlackCredentialsOK  %+v", 200, o.Payload)
}
func (o *SlackVerifySlackCredentialsOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *SlackVerifySlackCredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSlackVerifySlackCredentialsBadRequest creates a SlackVerifySlackCredentialsBadRequest with default headers values
func NewSlackVerifySlackCredentialsBadRequest() *SlackVerifySlackCredentialsBadRequest {
	return &SlackVerifySlackCredentialsBadRequest{}
}

/* SlackVerifySlackCredentialsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SlackVerifySlackCredentialsBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *SlackVerifySlackCredentialsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/verify][%d] slackVerifySlackCredentialsBadRequest  %+v", 400, o.Payload)
}
func (o *SlackVerifySlackCredentialsBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *SlackVerifySlackCredentialsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSlackVerifySlackCredentialsUnauthorized creates a SlackVerifySlackCredentialsUnauthorized with default headers values
func NewSlackVerifySlackCredentialsUnauthorized() *SlackVerifySlackCredentialsUnauthorized {
	return &SlackVerifySlackCredentialsUnauthorized{}
}

/* SlackVerifySlackCredentialsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SlackVerifySlackCredentialsUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *SlackVerifySlackCredentialsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/verify][%d] slackVerifySlackCredentialsUnauthorized  %+v", 401, o.Payload)
}
func (o *SlackVerifySlackCredentialsUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SlackVerifySlackCredentialsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSlackVerifySlackCredentialsForbidden creates a SlackVerifySlackCredentialsForbidden with default headers values
func NewSlackVerifySlackCredentialsForbidden() *SlackVerifySlackCredentialsForbidden {
	return &SlackVerifySlackCredentialsForbidden{}
}

/* SlackVerifySlackCredentialsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SlackVerifySlackCredentialsForbidden struct {
	Payload *models.ProblemDetails
}

func (o *SlackVerifySlackCredentialsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/verify][%d] slackVerifySlackCredentialsForbidden  %+v", 403, o.Payload)
}
func (o *SlackVerifySlackCredentialsForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SlackVerifySlackCredentialsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSlackVerifySlackCredentialsNotFound creates a SlackVerifySlackCredentialsNotFound with default headers values
func NewSlackVerifySlackCredentialsNotFound() *SlackVerifySlackCredentialsNotFound {
	return &SlackVerifySlackCredentialsNotFound{}
}

/* SlackVerifySlackCredentialsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SlackVerifySlackCredentialsNotFound struct {
	Payload *models.ProblemDetails
}

func (o *SlackVerifySlackCredentialsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/verify][%d] slackVerifySlackCredentialsNotFound  %+v", 404, o.Payload)
}
func (o *SlackVerifySlackCredentialsNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SlackVerifySlackCredentialsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSlackVerifySlackCredentialsInternalServerError creates a SlackVerifySlackCredentialsInternalServerError with default headers values
func NewSlackVerifySlackCredentialsInternalServerError() *SlackVerifySlackCredentialsInternalServerError {
	return &SlackVerifySlackCredentialsInternalServerError{}
}

/* SlackVerifySlackCredentialsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type SlackVerifySlackCredentialsInternalServerError struct {
}

func (o *SlackVerifySlackCredentialsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/verify][%d] slackVerifySlackCredentialsInternalServerError ", 500)
}

func (o *SlackVerifySlackCredentialsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
