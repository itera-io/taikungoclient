// Code generated by go-swagger; DO NOT EDIT.

package slack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SlackCreateReader is a Reader for the SlackCreate structure.
type SlackCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SlackCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSlackCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSlackCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSlackCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSlackCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSlackCreateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSlackCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSlackCreateOK creates a SlackCreateOK with default headers values
func NewSlackCreateOK() *SlackCreateOK {
	return &SlackCreateOK{}
}

/*
SlackCreateOK describes a response with status code 200, with default header values.

Success
*/
type SlackCreateOK struct {
	Payload *SlackCreateOKBody
}

// IsSuccess returns true when this slack create o k response has a 2xx status code
func (o *SlackCreateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this slack create o k response has a 3xx status code
func (o *SlackCreateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this slack create o k response has a 4xx status code
func (o *SlackCreateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this slack create o k response has a 5xx status code
func (o *SlackCreateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this slack create o k response a status code equal to that given
func (o *SlackCreateOK) IsCode(code int) bool {
	return code == 200
}

func (o *SlackCreateOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/create][%d] slackCreateOK  %+v", 200, o.Payload)
}

func (o *SlackCreateOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/create][%d] slackCreateOK  %+v", 200, o.Payload)
}

func (o *SlackCreateOK) GetPayload() *SlackCreateOKBody {
	return o.Payload
}

func (o *SlackCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SlackCreateOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSlackCreateBadRequest creates a SlackCreateBadRequest with default headers values
func NewSlackCreateBadRequest() *SlackCreateBadRequest {
	return &SlackCreateBadRequest{}
}

/*
SlackCreateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SlackCreateBadRequest struct {
	Payload []*SlackCreateBadRequestBodyItems0
}

// IsSuccess returns true when this slack create bad request response has a 2xx status code
func (o *SlackCreateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this slack create bad request response has a 3xx status code
func (o *SlackCreateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this slack create bad request response has a 4xx status code
func (o *SlackCreateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this slack create bad request response has a 5xx status code
func (o *SlackCreateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this slack create bad request response a status code equal to that given
func (o *SlackCreateBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SlackCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/create][%d] slackCreateBadRequest  %+v", 400, o.Payload)
}

func (o *SlackCreateBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/create][%d] slackCreateBadRequest  %+v", 400, o.Payload)
}

func (o *SlackCreateBadRequest) GetPayload() []*SlackCreateBadRequestBodyItems0 {
	return o.Payload
}

func (o *SlackCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSlackCreateUnauthorized creates a SlackCreateUnauthorized with default headers values
func NewSlackCreateUnauthorized() *SlackCreateUnauthorized {
	return &SlackCreateUnauthorized{}
}

/*
SlackCreateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SlackCreateUnauthorized struct {
	Payload *SlackCreateUnauthorizedBody
}

// IsSuccess returns true when this slack create unauthorized response has a 2xx status code
func (o *SlackCreateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this slack create unauthorized response has a 3xx status code
func (o *SlackCreateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this slack create unauthorized response has a 4xx status code
func (o *SlackCreateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this slack create unauthorized response has a 5xx status code
func (o *SlackCreateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this slack create unauthorized response a status code equal to that given
func (o *SlackCreateUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SlackCreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/create][%d] slackCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *SlackCreateUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/create][%d] slackCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *SlackCreateUnauthorized) GetPayload() *SlackCreateUnauthorizedBody {
	return o.Payload
}

func (o *SlackCreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SlackCreateUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSlackCreateForbidden creates a SlackCreateForbidden with default headers values
func NewSlackCreateForbidden() *SlackCreateForbidden {
	return &SlackCreateForbidden{}
}

/*
SlackCreateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SlackCreateForbidden struct {
	Payload *SlackCreateForbiddenBody
}

// IsSuccess returns true when this slack create forbidden response has a 2xx status code
func (o *SlackCreateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this slack create forbidden response has a 3xx status code
func (o *SlackCreateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this slack create forbidden response has a 4xx status code
func (o *SlackCreateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this slack create forbidden response has a 5xx status code
func (o *SlackCreateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this slack create forbidden response a status code equal to that given
func (o *SlackCreateForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SlackCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/create][%d] slackCreateForbidden  %+v", 403, o.Payload)
}

func (o *SlackCreateForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/create][%d] slackCreateForbidden  %+v", 403, o.Payload)
}

func (o *SlackCreateForbidden) GetPayload() *SlackCreateForbiddenBody {
	return o.Payload
}

func (o *SlackCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SlackCreateForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSlackCreateNotFound creates a SlackCreateNotFound with default headers values
func NewSlackCreateNotFound() *SlackCreateNotFound {
	return &SlackCreateNotFound{}
}

/*
SlackCreateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SlackCreateNotFound struct {
	Payload *SlackCreateNotFoundBody
}

// IsSuccess returns true when this slack create not found response has a 2xx status code
func (o *SlackCreateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this slack create not found response has a 3xx status code
func (o *SlackCreateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this slack create not found response has a 4xx status code
func (o *SlackCreateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this slack create not found response has a 5xx status code
func (o *SlackCreateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this slack create not found response a status code equal to that given
func (o *SlackCreateNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SlackCreateNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/create][%d] slackCreateNotFound  %+v", 404, o.Payload)
}

func (o *SlackCreateNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/create][%d] slackCreateNotFound  %+v", 404, o.Payload)
}

func (o *SlackCreateNotFound) GetPayload() *SlackCreateNotFoundBody {
	return o.Payload
}

func (o *SlackCreateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SlackCreateNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSlackCreateInternalServerError creates a SlackCreateInternalServerError with default headers values
func NewSlackCreateInternalServerError() *SlackCreateInternalServerError {
	return &SlackCreateInternalServerError{}
}

/*
SlackCreateInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type SlackCreateInternalServerError struct {
}

// IsSuccess returns true when this slack create internal server error response has a 2xx status code
func (o *SlackCreateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this slack create internal server error response has a 3xx status code
func (o *SlackCreateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this slack create internal server error response has a 4xx status code
func (o *SlackCreateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this slack create internal server error response has a 5xx status code
func (o *SlackCreateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this slack create internal server error response a status code equal to that given
func (o *SlackCreateInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SlackCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/create][%d] slackCreateInternalServerError ", 500)
}

func (o *SlackCreateInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/create][%d] slackCreateInternalServerError ", 500)
}

func (o *SlackCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
SlackCreateBadRequestBodyItems0 slack create bad request body items0
swagger:model SlackCreateBadRequestBodyItems0
*/
type SlackCreateBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this slack create bad request body items0
func (o *SlackCreateBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this slack create bad request body items0 based on context it is used
func (o *SlackCreateBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SlackCreateBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SlackCreateBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res SlackCreateBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SlackCreateBody slack create body
swagger:model SlackCreateBody
*/
type SlackCreateBody struct {

	// channel
	Channel string `json:"channel,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// slack type
	// Enum: [100 200]
	SlackType int32 `json:"slackType,omitempty"`

	// url
	URL string `json:"url,omitempty"`
}

// Validate validates this slack create body
func (o *SlackCreateBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSlackType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var slackCreateBodyTypeSlackTypePropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[100,200]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		slackCreateBodyTypeSlackTypePropEnum = append(slackCreateBodyTypeSlackTypePropEnum, v)
	}
}

// prop value enum
func (o *SlackCreateBody) validateSlackTypeEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, slackCreateBodyTypeSlackTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *SlackCreateBody) validateSlackType(formats strfmt.Registry) error {
	if swag.IsZero(o.SlackType) { // not required
		return nil
	}

	// value enum
	if err := o.validateSlackTypeEnum("body"+"."+"slackType", "body", o.SlackType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this slack create body based on context it is used
func (o *SlackCreateBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SlackCreateBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SlackCreateBody) UnmarshalBinary(b []byte) error {
	var res SlackCreateBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SlackCreateForbiddenBody slack create forbidden body
swagger:model SlackCreateForbiddenBody
*/
type SlackCreateForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this slack create forbidden body
func (o *SlackCreateForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this slack create forbidden body based on context it is used
func (o *SlackCreateForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SlackCreateForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SlackCreateForbiddenBody) UnmarshalBinary(b []byte) error {
	var res SlackCreateForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SlackCreateNotFoundBody slack create not found body
swagger:model SlackCreateNotFoundBody
*/
type SlackCreateNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this slack create not found body
func (o *SlackCreateNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this slack create not found body based on context it is used
func (o *SlackCreateNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SlackCreateNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SlackCreateNotFoundBody) UnmarshalBinary(b []byte) error {
	var res SlackCreateNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SlackCreateOKBody slack create o k body
swagger:model SlackCreateOKBody
*/
type SlackCreateOKBody struct {

	// id
	ID string `json:"id,omitempty"`

	// is error
	IsError bool `json:"isError"`

	// message
	Message string `json:"message,omitempty"`

	// result
	Result interface{} `json:"result,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`
}

// Validate validates this slack create o k body
func (o *SlackCreateOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this slack create o k body based on context it is used
func (o *SlackCreateOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SlackCreateOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SlackCreateOKBody) UnmarshalBinary(b []byte) error {
	var res SlackCreateOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SlackCreateUnauthorizedBody slack create unauthorized body
swagger:model SlackCreateUnauthorizedBody
*/
type SlackCreateUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this slack create unauthorized body
func (o *SlackCreateUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this slack create unauthorized body based on context it is used
func (o *SlackCreateUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SlackCreateUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SlackCreateUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res SlackCreateUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
