// Code generated by go-swagger; DO NOT EDIT.

package slack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// SlackDeleteReader is a Reader for the SlackDelete structure.
type SlackDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SlackDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSlackDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewSlackDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSlackDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSlackDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSlackDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSlackDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSlackDeleteTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSlackDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSlackDeleteOK creates a SlackDeleteOK with default headers values
func NewSlackDeleteOK() *SlackDeleteOK {
	return &SlackDeleteOK{}
}

/* SlackDeleteOK describes a response with status code 200, with default header values.

Success
*/
type SlackDeleteOK struct {
	Payload models.Unit
}

func (o *SlackDeleteOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/delete][%d] slackDeleteOK  %+v", 200, o.Payload)
}
func (o *SlackDeleteOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *SlackDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSlackDeleteNoContent creates a SlackDeleteNoContent with default headers values
func NewSlackDeleteNoContent() *SlackDeleteNoContent {
	return &SlackDeleteNoContent{}
}

/* SlackDeleteNoContent describes a response with status code 204, with default header values.

Success
*/
type SlackDeleteNoContent struct {
}

func (o *SlackDeleteNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/delete][%d] slackDeleteNoContent ", 204)
}

func (o *SlackDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSlackDeleteBadRequest creates a SlackDeleteBadRequest with default headers values
func NewSlackDeleteBadRequest() *SlackDeleteBadRequest {
	return &SlackDeleteBadRequest{}
}

/* SlackDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SlackDeleteBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *SlackDeleteBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/delete][%d] slackDeleteBadRequest  %+v", 400, o.Payload)
}
func (o *SlackDeleteBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *SlackDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSlackDeleteUnauthorized creates a SlackDeleteUnauthorized with default headers values
func NewSlackDeleteUnauthorized() *SlackDeleteUnauthorized {
	return &SlackDeleteUnauthorized{}
}

/* SlackDeleteUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SlackDeleteUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *SlackDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/delete][%d] slackDeleteUnauthorized  %+v", 401, o.Payload)
}
func (o *SlackDeleteUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SlackDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSlackDeleteForbidden creates a SlackDeleteForbidden with default headers values
func NewSlackDeleteForbidden() *SlackDeleteForbidden {
	return &SlackDeleteForbidden{}
}

/* SlackDeleteForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SlackDeleteForbidden struct {
	Payload *models.ProblemDetails
}

func (o *SlackDeleteForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/delete][%d] slackDeleteForbidden  %+v", 403, o.Payload)
}
func (o *SlackDeleteForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SlackDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSlackDeleteNotFound creates a SlackDeleteNotFound with default headers values
func NewSlackDeleteNotFound() *SlackDeleteNotFound {
	return &SlackDeleteNotFound{}
}

/* SlackDeleteNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SlackDeleteNotFound struct {
	Payload *models.ProblemDetails
}

func (o *SlackDeleteNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/delete][%d] slackDeleteNotFound  %+v", 404, o.Payload)
}
func (o *SlackDeleteNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SlackDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSlackDeleteTooManyRequests creates a SlackDeleteTooManyRequests with default headers values
func NewSlackDeleteTooManyRequests() *SlackDeleteTooManyRequests {
	return &SlackDeleteTooManyRequests{}
}

/* SlackDeleteTooManyRequests describes a response with status code 429, with default header values.

Client Error
*/
type SlackDeleteTooManyRequests struct {
	Payload *models.ProblemDetails
}

func (o *SlackDeleteTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/delete][%d] slackDeleteTooManyRequests  %+v", 429, o.Payload)
}
func (o *SlackDeleteTooManyRequests) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SlackDeleteTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSlackDeleteInternalServerError creates a SlackDeleteInternalServerError with default headers values
func NewSlackDeleteInternalServerError() *SlackDeleteInternalServerError {
	return &SlackDeleteInternalServerError{}
}

/* SlackDeleteInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type SlackDeleteInternalServerError struct {
}

func (o *SlackDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Slack/delete][%d] slackDeleteInternalServerError ", 500)
}

func (o *SlackDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
