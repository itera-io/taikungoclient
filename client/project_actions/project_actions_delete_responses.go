// Code generated by go-swagger; DO NOT EDIT.

package project_actions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProjectActionsDeleteReader is a Reader for the ProjectActionsDelete structure.
type ProjectActionsDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectActionsDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectActionsDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewProjectActionsDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProjectActionsDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProjectActionsDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProjectActionsDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectActionsDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProjectActionsDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProjectActionsDeleteOK creates a ProjectActionsDeleteOK with default headers values
func NewProjectActionsDeleteOK() *ProjectActionsDeleteOK {
	return &ProjectActionsDeleteOK{}
}

/*
ProjectActionsDeleteOK describes a response with status code 200, with default header values.

Success
*/
type ProjectActionsDeleteOK struct {
}

// IsSuccess returns true when this project actions delete o k response has a 2xx status code
func (o *ProjectActionsDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this project actions delete o k response has a 3xx status code
func (o *ProjectActionsDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project actions delete o k response has a 4xx status code
func (o *ProjectActionsDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this project actions delete o k response has a 5xx status code
func (o *ProjectActionsDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this project actions delete o k response a status code equal to that given
func (o *ProjectActionsDeleteOK) IsCode(code int) bool {
	return code == 200
}

func (o *ProjectActionsDeleteOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectActions/delete][%d] projectActionsDeleteOK ", 200)
}

func (o *ProjectActionsDeleteOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectActions/delete][%d] projectActionsDeleteOK ", 200)
}

func (o *ProjectActionsDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewProjectActionsDeleteNoContent creates a ProjectActionsDeleteNoContent with default headers values
func NewProjectActionsDeleteNoContent() *ProjectActionsDeleteNoContent {
	return &ProjectActionsDeleteNoContent{}
}

/*
ProjectActionsDeleteNoContent describes a response with status code 204, with default header values.

Success
*/
type ProjectActionsDeleteNoContent struct {
}

// IsSuccess returns true when this project actions delete no content response has a 2xx status code
func (o *ProjectActionsDeleteNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this project actions delete no content response has a 3xx status code
func (o *ProjectActionsDeleteNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project actions delete no content response has a 4xx status code
func (o *ProjectActionsDeleteNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this project actions delete no content response has a 5xx status code
func (o *ProjectActionsDeleteNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this project actions delete no content response a status code equal to that given
func (o *ProjectActionsDeleteNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *ProjectActionsDeleteNoContent) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectActions/delete][%d] projectActionsDeleteNoContent ", 204)
}

func (o *ProjectActionsDeleteNoContent) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectActions/delete][%d] projectActionsDeleteNoContent ", 204)
}

func (o *ProjectActionsDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewProjectActionsDeleteBadRequest creates a ProjectActionsDeleteBadRequest with default headers values
func NewProjectActionsDeleteBadRequest() *ProjectActionsDeleteBadRequest {
	return &ProjectActionsDeleteBadRequest{}
}

/*
ProjectActionsDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProjectActionsDeleteBadRequest struct {
	Payload []*ProjectActionsDeleteBadRequestBodyItems0
}

// IsSuccess returns true when this project actions delete bad request response has a 2xx status code
func (o *ProjectActionsDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project actions delete bad request response has a 3xx status code
func (o *ProjectActionsDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project actions delete bad request response has a 4xx status code
func (o *ProjectActionsDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this project actions delete bad request response has a 5xx status code
func (o *ProjectActionsDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this project actions delete bad request response a status code equal to that given
func (o *ProjectActionsDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ProjectActionsDeleteBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectActions/delete][%d] projectActionsDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectActionsDeleteBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectActions/delete][%d] projectActionsDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectActionsDeleteBadRequest) GetPayload() []*ProjectActionsDeleteBadRequestBodyItems0 {
	return o.Payload
}

func (o *ProjectActionsDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectActionsDeleteUnauthorized creates a ProjectActionsDeleteUnauthorized with default headers values
func NewProjectActionsDeleteUnauthorized() *ProjectActionsDeleteUnauthorized {
	return &ProjectActionsDeleteUnauthorized{}
}

/*
ProjectActionsDeleteUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProjectActionsDeleteUnauthorized struct {
	Payload *ProjectActionsDeleteUnauthorizedBody
}

// IsSuccess returns true when this project actions delete unauthorized response has a 2xx status code
func (o *ProjectActionsDeleteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project actions delete unauthorized response has a 3xx status code
func (o *ProjectActionsDeleteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project actions delete unauthorized response has a 4xx status code
func (o *ProjectActionsDeleteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this project actions delete unauthorized response has a 5xx status code
func (o *ProjectActionsDeleteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this project actions delete unauthorized response a status code equal to that given
func (o *ProjectActionsDeleteUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ProjectActionsDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectActions/delete][%d] projectActionsDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectActionsDeleteUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectActions/delete][%d] projectActionsDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectActionsDeleteUnauthorized) GetPayload() *ProjectActionsDeleteUnauthorizedBody {
	return o.Payload
}

func (o *ProjectActionsDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ProjectActionsDeleteUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectActionsDeleteForbidden creates a ProjectActionsDeleteForbidden with default headers values
func NewProjectActionsDeleteForbidden() *ProjectActionsDeleteForbidden {
	return &ProjectActionsDeleteForbidden{}
}

/*
ProjectActionsDeleteForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ProjectActionsDeleteForbidden struct {
	Payload *ProjectActionsDeleteForbiddenBody
}

// IsSuccess returns true when this project actions delete forbidden response has a 2xx status code
func (o *ProjectActionsDeleteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project actions delete forbidden response has a 3xx status code
func (o *ProjectActionsDeleteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project actions delete forbidden response has a 4xx status code
func (o *ProjectActionsDeleteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this project actions delete forbidden response has a 5xx status code
func (o *ProjectActionsDeleteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this project actions delete forbidden response a status code equal to that given
func (o *ProjectActionsDeleteForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ProjectActionsDeleteForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectActions/delete][%d] projectActionsDeleteForbidden  %+v", 403, o.Payload)
}

func (o *ProjectActionsDeleteForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectActions/delete][%d] projectActionsDeleteForbidden  %+v", 403, o.Payload)
}

func (o *ProjectActionsDeleteForbidden) GetPayload() *ProjectActionsDeleteForbiddenBody {
	return o.Payload
}

func (o *ProjectActionsDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ProjectActionsDeleteForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectActionsDeleteNotFound creates a ProjectActionsDeleteNotFound with default headers values
func NewProjectActionsDeleteNotFound() *ProjectActionsDeleteNotFound {
	return &ProjectActionsDeleteNotFound{}
}

/*
ProjectActionsDeleteNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProjectActionsDeleteNotFound struct {
	Payload *ProjectActionsDeleteNotFoundBody
}

// IsSuccess returns true when this project actions delete not found response has a 2xx status code
func (o *ProjectActionsDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project actions delete not found response has a 3xx status code
func (o *ProjectActionsDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project actions delete not found response has a 4xx status code
func (o *ProjectActionsDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this project actions delete not found response has a 5xx status code
func (o *ProjectActionsDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this project actions delete not found response a status code equal to that given
func (o *ProjectActionsDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ProjectActionsDeleteNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectActions/delete][%d] projectActionsDeleteNotFound  %+v", 404, o.Payload)
}

func (o *ProjectActionsDeleteNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectActions/delete][%d] projectActionsDeleteNotFound  %+v", 404, o.Payload)
}

func (o *ProjectActionsDeleteNotFound) GetPayload() *ProjectActionsDeleteNotFoundBody {
	return o.Payload
}

func (o *ProjectActionsDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ProjectActionsDeleteNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectActionsDeleteInternalServerError creates a ProjectActionsDeleteInternalServerError with default headers values
func NewProjectActionsDeleteInternalServerError() *ProjectActionsDeleteInternalServerError {
	return &ProjectActionsDeleteInternalServerError{}
}

/*
ProjectActionsDeleteInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ProjectActionsDeleteInternalServerError struct {
}

// IsSuccess returns true when this project actions delete internal server error response has a 2xx status code
func (o *ProjectActionsDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project actions delete internal server error response has a 3xx status code
func (o *ProjectActionsDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project actions delete internal server error response has a 4xx status code
func (o *ProjectActionsDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this project actions delete internal server error response has a 5xx status code
func (o *ProjectActionsDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this project actions delete internal server error response a status code equal to that given
func (o *ProjectActionsDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ProjectActionsDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectActions/delete][%d] projectActionsDeleteInternalServerError ", 500)
}

func (o *ProjectActionsDeleteInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectActions/delete][%d] projectActionsDeleteInternalServerError ", 500)
}

func (o *ProjectActionsDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
ProjectActionsDeleteBadRequestBodyItems0 project actions delete bad request body items0
swagger:model ProjectActionsDeleteBadRequestBodyItems0
*/
type ProjectActionsDeleteBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this project actions delete bad request body items0
func (o *ProjectActionsDeleteBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project actions delete bad request body items0 based on context it is used
func (o *ProjectActionsDeleteBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectActionsDeleteBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectActionsDeleteBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res ProjectActionsDeleteBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectActionsDeleteBody project actions delete body
swagger:model ProjectActionsDeleteBody
*/
type ProjectActionsDeleteBody struct {

	// project Id
	ProjectID int32 `json:"projectId,omitempty"`
}

// Validate validates this project actions delete body
func (o *ProjectActionsDeleteBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project actions delete body based on context it is used
func (o *ProjectActionsDeleteBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectActionsDeleteBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectActionsDeleteBody) UnmarshalBinary(b []byte) error {
	var res ProjectActionsDeleteBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectActionsDeleteForbiddenBody project actions delete forbidden body
swagger:model ProjectActionsDeleteForbiddenBody
*/
type ProjectActionsDeleteForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this project actions delete forbidden body
func (o *ProjectActionsDeleteForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project actions delete forbidden body based on context it is used
func (o *ProjectActionsDeleteForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectActionsDeleteForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectActionsDeleteForbiddenBody) UnmarshalBinary(b []byte) error {
	var res ProjectActionsDeleteForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectActionsDeleteNotFoundBody project actions delete not found body
swagger:model ProjectActionsDeleteNotFoundBody
*/
type ProjectActionsDeleteNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this project actions delete not found body
func (o *ProjectActionsDeleteNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project actions delete not found body based on context it is used
func (o *ProjectActionsDeleteNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectActionsDeleteNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectActionsDeleteNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ProjectActionsDeleteNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectActionsDeleteUnauthorizedBody project actions delete unauthorized body
swagger:model ProjectActionsDeleteUnauthorizedBody
*/
type ProjectActionsDeleteUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this project actions delete unauthorized body
func (o *ProjectActionsDeleteUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project actions delete unauthorized body based on context it is used
func (o *ProjectActionsDeleteUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectActionsDeleteUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectActionsDeleteUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res ProjectActionsDeleteUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
