/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"time"
)

// checks if the InfraOrganizationsListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InfraOrganizationsListDto{}

// InfraOrganizationsListDto struct for InfraOrganizationsListDto
type InfraOrganizationsListDto struct {
	OrganizationId   *int32         `json:"organizationId,omitempty"`
	OrganizationName NullableString `json:"organizationName,omitempty"`
	CreatedAt        *time.Time     `json:"createdAt,omitempty"`
	SubscriptionId   NullableString `json:"subscriptionId,omitempty"`
	BillingStartDate NullableTime   `json:"billingStartDate,omitempty"`
	Yearly           *bool          `json:"yearly,omitempty"`
}

// NewInfraOrganizationsListDto instantiates a new InfraOrganizationsListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInfraOrganizationsListDto() *InfraOrganizationsListDto {
	this := InfraOrganizationsListDto{}
	return &this
}

// NewInfraOrganizationsListDtoWithDefaults instantiates a new InfraOrganizationsListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInfraOrganizationsListDtoWithDefaults() *InfraOrganizationsListDto {
	this := InfraOrganizationsListDto{}
	return &this
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *InfraOrganizationsListDto) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfraOrganizationsListDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *InfraOrganizationsListDto) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *InfraOrganizationsListDto) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InfraOrganizationsListDto) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizationName.Get()
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InfraOrganizationsListDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationName.Get(), o.OrganizationName.IsSet()
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *InfraOrganizationsListDto) HasOrganizationName() bool {
	if o != nil && o.OrganizationName.IsSet() {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given NullableString and assigns it to the OrganizationName field.
func (o *InfraOrganizationsListDto) SetOrganizationName(v string) {
	o.OrganizationName.Set(&v)
}

// SetOrganizationNameNil sets the value for OrganizationName to be an explicit nil
func (o *InfraOrganizationsListDto) SetOrganizationNameNil() {
	o.OrganizationName.Set(nil)
}

// UnsetOrganizationName ensures that no value is present for OrganizationName, not even an explicit nil
func (o *InfraOrganizationsListDto) UnsetOrganizationName() {
	o.OrganizationName.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *InfraOrganizationsListDto) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfraOrganizationsListDto) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *InfraOrganizationsListDto) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *InfraOrganizationsListDto) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InfraOrganizationsListDto) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId.Get()) {
		var ret string
		return ret
	}
	return *o.SubscriptionId.Get()
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InfraOrganizationsListDto) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubscriptionId.Get(), o.SubscriptionId.IsSet()
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *InfraOrganizationsListDto) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given NullableString and assigns it to the SubscriptionId field.
func (o *InfraOrganizationsListDto) SetSubscriptionId(v string) {
	o.SubscriptionId.Set(&v)
}

// SetSubscriptionIdNil sets the value for SubscriptionId to be an explicit nil
func (o *InfraOrganizationsListDto) SetSubscriptionIdNil() {
	o.SubscriptionId.Set(nil)
}

// UnsetSubscriptionId ensures that no value is present for SubscriptionId, not even an explicit nil
func (o *InfraOrganizationsListDto) UnsetSubscriptionId() {
	o.SubscriptionId.Unset()
}

// GetBillingStartDate returns the BillingStartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InfraOrganizationsListDto) GetBillingStartDate() time.Time {
	if o == nil || IsNil(o.BillingStartDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.BillingStartDate.Get()
}

// GetBillingStartDateOk returns a tuple with the BillingStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InfraOrganizationsListDto) GetBillingStartDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingStartDate.Get(), o.BillingStartDate.IsSet()
}

// HasBillingStartDate returns a boolean if a field has been set.
func (o *InfraOrganizationsListDto) HasBillingStartDate() bool {
	if o != nil && o.BillingStartDate.IsSet() {
		return true
	}

	return false
}

// SetBillingStartDate gets a reference to the given NullableTime and assigns it to the BillingStartDate field.
func (o *InfraOrganizationsListDto) SetBillingStartDate(v time.Time) {
	o.BillingStartDate.Set(&v)
}

// SetBillingStartDateNil sets the value for BillingStartDate to be an explicit nil
func (o *InfraOrganizationsListDto) SetBillingStartDateNil() {
	o.BillingStartDate.Set(nil)
}

// UnsetBillingStartDate ensures that no value is present for BillingStartDate, not even an explicit nil
func (o *InfraOrganizationsListDto) UnsetBillingStartDate() {
	o.BillingStartDate.Unset()
}

// GetYearly returns the Yearly field value if set, zero value otherwise.
func (o *InfraOrganizationsListDto) GetYearly() bool {
	if o == nil || IsNil(o.Yearly) {
		var ret bool
		return ret
	}
	return *o.Yearly
}

// GetYearlyOk returns a tuple with the Yearly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfraOrganizationsListDto) GetYearlyOk() (*bool, bool) {
	if o == nil || IsNil(o.Yearly) {
		return nil, false
	}
	return o.Yearly, true
}

// HasYearly returns a boolean if a field has been set.
func (o *InfraOrganizationsListDto) HasYearly() bool {
	if o != nil && !IsNil(o.Yearly) {
		return true
	}

	return false
}

// SetYearly gets a reference to the given bool and assigns it to the Yearly field.
func (o *InfraOrganizationsListDto) SetYearly(v bool) {
	o.Yearly = &v
}

func (o InfraOrganizationsListDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InfraOrganizationsListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if o.OrganizationName.IsSet() {
		toSerialize["organizationName"] = o.OrganizationName.Get()
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.SubscriptionId.IsSet() {
		toSerialize["subscriptionId"] = o.SubscriptionId.Get()
	}
	if o.BillingStartDate.IsSet() {
		toSerialize["billingStartDate"] = o.BillingStartDate.Get()
	}
	if !IsNil(o.Yearly) {
		toSerialize["yearly"] = o.Yearly
	}
	return toSerialize, nil
}

type NullableInfraOrganizationsListDto struct {
	value *InfraOrganizationsListDto
	isSet bool
}

func (v NullableInfraOrganizationsListDto) Get() *InfraOrganizationsListDto {
	return v.value
}

func (v *NullableInfraOrganizationsListDto) Set(val *InfraOrganizationsListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableInfraOrganizationsListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableInfraOrganizationsListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInfraOrganizationsListDto(val *InfraOrganizationsListDto) *NullableInfraOrganizationsListDto {
	return &NullableInfraOrganizationsListDto{value: val, isSet: true}
}

func (v NullableInfraOrganizationsListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInfraOrganizationsListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
