// Code generated by go-swagger; DO NOT EDIT.

package project_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ProjectGroupsProjectListByProjectGroupIDReader is a Reader for the ProjectGroupsProjectListByProjectGroupID structure.
type ProjectGroupsProjectListByProjectGroupIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectGroupsProjectListByProjectGroupIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectGroupsProjectListByProjectGroupIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProjectGroupsProjectListByProjectGroupIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProjectGroupsProjectListByProjectGroupIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProjectGroupsProjectListByProjectGroupIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectGroupsProjectListByProjectGroupIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProjectGroupsProjectListByProjectGroupIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProjectGroupsProjectListByProjectGroupIDOK creates a ProjectGroupsProjectListByProjectGroupIDOK with default headers values
func NewProjectGroupsProjectListByProjectGroupIDOK() *ProjectGroupsProjectListByProjectGroupIDOK {
	return &ProjectGroupsProjectListByProjectGroupIDOK{}
}

/*
ProjectGroupsProjectListByProjectGroupIDOK describes a response with status code 200, with default header values.

Success
*/
type ProjectGroupsProjectListByProjectGroupIDOK struct {
	Payload []*models.ProjectListForProjectGroupDto
}

// IsSuccess returns true when this project groups project list by project group Id o k response has a 2xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this project groups project list by project group Id o k response has a 3xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project groups project list by project group Id o k response has a 4xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this project groups project list by project group Id o k response has a 5xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this project groups project list by project group Id o k response a status code equal to that given
func (o *ProjectGroupsProjectListByProjectGroupIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the project groups project list by project group Id o k response
func (o *ProjectGroupsProjectListByProjectGroupIDOK) Code() int {
	return 200
}

func (o *ProjectGroupsProjectListByProjectGroupIDOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectGroups/{projectGroupId}/projects][%d] projectGroupsProjectListByProjectGroupIdOK  %+v", 200, o.Payload)
}

func (o *ProjectGroupsProjectListByProjectGroupIDOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectGroups/{projectGroupId}/projects][%d] projectGroupsProjectListByProjectGroupIdOK  %+v", 200, o.Payload)
}

func (o *ProjectGroupsProjectListByProjectGroupIDOK) GetPayload() []*models.ProjectListForProjectGroupDto {
	return o.Payload
}

func (o *ProjectGroupsProjectListByProjectGroupIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGroupsProjectListByProjectGroupIDBadRequest creates a ProjectGroupsProjectListByProjectGroupIDBadRequest with default headers values
func NewProjectGroupsProjectListByProjectGroupIDBadRequest() *ProjectGroupsProjectListByProjectGroupIDBadRequest {
	return &ProjectGroupsProjectListByProjectGroupIDBadRequest{}
}

/*
ProjectGroupsProjectListByProjectGroupIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProjectGroupsProjectListByProjectGroupIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this project groups project list by project group Id bad request response has a 2xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project groups project list by project group Id bad request response has a 3xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project groups project list by project group Id bad request response has a 4xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this project groups project list by project group Id bad request response has a 5xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this project groups project list by project group Id bad request response a status code equal to that given
func (o *ProjectGroupsProjectListByProjectGroupIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the project groups project list by project group Id bad request response
func (o *ProjectGroupsProjectListByProjectGroupIDBadRequest) Code() int {
	return 400
}

func (o *ProjectGroupsProjectListByProjectGroupIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectGroups/{projectGroupId}/projects][%d] projectGroupsProjectListByProjectGroupIdBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectGroupsProjectListByProjectGroupIDBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectGroups/{projectGroupId}/projects][%d] projectGroupsProjectListByProjectGroupIdBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectGroupsProjectListByProjectGroupIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectGroupsProjectListByProjectGroupIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGroupsProjectListByProjectGroupIDUnauthorized creates a ProjectGroupsProjectListByProjectGroupIDUnauthorized with default headers values
func NewProjectGroupsProjectListByProjectGroupIDUnauthorized() *ProjectGroupsProjectListByProjectGroupIDUnauthorized {
	return &ProjectGroupsProjectListByProjectGroupIDUnauthorized{}
}

/*
ProjectGroupsProjectListByProjectGroupIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProjectGroupsProjectListByProjectGroupIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this project groups project list by project group Id unauthorized response has a 2xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project groups project list by project group Id unauthorized response has a 3xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project groups project list by project group Id unauthorized response has a 4xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this project groups project list by project group Id unauthorized response has a 5xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this project groups project list by project group Id unauthorized response a status code equal to that given
func (o *ProjectGroupsProjectListByProjectGroupIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the project groups project list by project group Id unauthorized response
func (o *ProjectGroupsProjectListByProjectGroupIDUnauthorized) Code() int {
	return 401
}

func (o *ProjectGroupsProjectListByProjectGroupIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectGroups/{projectGroupId}/projects][%d] projectGroupsProjectListByProjectGroupIdUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectGroupsProjectListByProjectGroupIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectGroups/{projectGroupId}/projects][%d] projectGroupsProjectListByProjectGroupIdUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectGroupsProjectListByProjectGroupIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectGroupsProjectListByProjectGroupIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGroupsProjectListByProjectGroupIDForbidden creates a ProjectGroupsProjectListByProjectGroupIDForbidden with default headers values
func NewProjectGroupsProjectListByProjectGroupIDForbidden() *ProjectGroupsProjectListByProjectGroupIDForbidden {
	return &ProjectGroupsProjectListByProjectGroupIDForbidden{}
}

/*
ProjectGroupsProjectListByProjectGroupIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ProjectGroupsProjectListByProjectGroupIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this project groups project list by project group Id forbidden response has a 2xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project groups project list by project group Id forbidden response has a 3xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project groups project list by project group Id forbidden response has a 4xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this project groups project list by project group Id forbidden response has a 5xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this project groups project list by project group Id forbidden response a status code equal to that given
func (o *ProjectGroupsProjectListByProjectGroupIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the project groups project list by project group Id forbidden response
func (o *ProjectGroupsProjectListByProjectGroupIDForbidden) Code() int {
	return 403
}

func (o *ProjectGroupsProjectListByProjectGroupIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectGroups/{projectGroupId}/projects][%d] projectGroupsProjectListByProjectGroupIdForbidden  %+v", 403, o.Payload)
}

func (o *ProjectGroupsProjectListByProjectGroupIDForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectGroups/{projectGroupId}/projects][%d] projectGroupsProjectListByProjectGroupIdForbidden  %+v", 403, o.Payload)
}

func (o *ProjectGroupsProjectListByProjectGroupIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectGroupsProjectListByProjectGroupIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGroupsProjectListByProjectGroupIDNotFound creates a ProjectGroupsProjectListByProjectGroupIDNotFound with default headers values
func NewProjectGroupsProjectListByProjectGroupIDNotFound() *ProjectGroupsProjectListByProjectGroupIDNotFound {
	return &ProjectGroupsProjectListByProjectGroupIDNotFound{}
}

/*
ProjectGroupsProjectListByProjectGroupIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProjectGroupsProjectListByProjectGroupIDNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this project groups project list by project group Id not found response has a 2xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project groups project list by project group Id not found response has a 3xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project groups project list by project group Id not found response has a 4xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this project groups project list by project group Id not found response has a 5xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this project groups project list by project group Id not found response a status code equal to that given
func (o *ProjectGroupsProjectListByProjectGroupIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the project groups project list by project group Id not found response
func (o *ProjectGroupsProjectListByProjectGroupIDNotFound) Code() int {
	return 404
}

func (o *ProjectGroupsProjectListByProjectGroupIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectGroups/{projectGroupId}/projects][%d] projectGroupsProjectListByProjectGroupIdNotFound  %+v", 404, o.Payload)
}

func (o *ProjectGroupsProjectListByProjectGroupIDNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectGroups/{projectGroupId}/projects][%d] projectGroupsProjectListByProjectGroupIdNotFound  %+v", 404, o.Payload)
}

func (o *ProjectGroupsProjectListByProjectGroupIDNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectGroupsProjectListByProjectGroupIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGroupsProjectListByProjectGroupIDInternalServerError creates a ProjectGroupsProjectListByProjectGroupIDInternalServerError with default headers values
func NewProjectGroupsProjectListByProjectGroupIDInternalServerError() *ProjectGroupsProjectListByProjectGroupIDInternalServerError {
	return &ProjectGroupsProjectListByProjectGroupIDInternalServerError{}
}

/*
ProjectGroupsProjectListByProjectGroupIDInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ProjectGroupsProjectListByProjectGroupIDInternalServerError struct {
}

// IsSuccess returns true when this project groups project list by project group Id internal server error response has a 2xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project groups project list by project group Id internal server error response has a 3xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project groups project list by project group Id internal server error response has a 4xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this project groups project list by project group Id internal server error response has a 5xx status code
func (o *ProjectGroupsProjectListByProjectGroupIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this project groups project list by project group Id internal server error response a status code equal to that given
func (o *ProjectGroupsProjectListByProjectGroupIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the project groups project list by project group Id internal server error response
func (o *ProjectGroupsProjectListByProjectGroupIDInternalServerError) Code() int {
	return 500
}

func (o *ProjectGroupsProjectListByProjectGroupIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectGroups/{projectGroupId}/projects][%d] projectGroupsProjectListByProjectGroupIdInternalServerError ", 500)
}

func (o *ProjectGroupsProjectListByProjectGroupIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectGroups/{projectGroupId}/projects][%d] projectGroupsProjectListByProjectGroupIdInternalServerError ", 500)
}

func (o *ProjectGroupsProjectListByProjectGroupIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
