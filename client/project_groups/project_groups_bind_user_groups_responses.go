// Code generated by go-swagger; DO NOT EDIT.

package project_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ProjectGroupsBindUserGroupsReader is a Reader for the ProjectGroupsBindUserGroups structure.
type ProjectGroupsBindUserGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectGroupsBindUserGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectGroupsBindUserGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProjectGroupsBindUserGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProjectGroupsBindUserGroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProjectGroupsBindUserGroupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectGroupsBindUserGroupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProjectGroupsBindUserGroupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProjectGroupsBindUserGroupsOK creates a ProjectGroupsBindUserGroupsOK with default headers values
func NewProjectGroupsBindUserGroupsOK() *ProjectGroupsBindUserGroupsOK {
	return &ProjectGroupsBindUserGroupsOK{}
}

/*
ProjectGroupsBindUserGroupsOK describes a response with status code 200, with default header values.

Success
*/
type ProjectGroupsBindUserGroupsOK struct {
	Payload models.Unit
}

// IsSuccess returns true when this project groups bind user groups o k response has a 2xx status code
func (o *ProjectGroupsBindUserGroupsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this project groups bind user groups o k response has a 3xx status code
func (o *ProjectGroupsBindUserGroupsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project groups bind user groups o k response has a 4xx status code
func (o *ProjectGroupsBindUserGroupsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this project groups bind user groups o k response has a 5xx status code
func (o *ProjectGroupsBindUserGroupsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this project groups bind user groups o k response a status code equal to that given
func (o *ProjectGroupsBindUserGroupsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the project groups bind user groups o k response
func (o *ProjectGroupsBindUserGroupsOK) Code() int {
	return 200
}

func (o *ProjectGroupsBindUserGroupsOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectGroups/bind-user-groups][%d] projectGroupsBindUserGroupsOK  %+v", 200, o.Payload)
}

func (o *ProjectGroupsBindUserGroupsOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectGroups/bind-user-groups][%d] projectGroupsBindUserGroupsOK  %+v", 200, o.Payload)
}

func (o *ProjectGroupsBindUserGroupsOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *ProjectGroupsBindUserGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGroupsBindUserGroupsBadRequest creates a ProjectGroupsBindUserGroupsBadRequest with default headers values
func NewProjectGroupsBindUserGroupsBadRequest() *ProjectGroupsBindUserGroupsBadRequest {
	return &ProjectGroupsBindUserGroupsBadRequest{}
}

/*
ProjectGroupsBindUserGroupsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProjectGroupsBindUserGroupsBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this project groups bind user groups bad request response has a 2xx status code
func (o *ProjectGroupsBindUserGroupsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project groups bind user groups bad request response has a 3xx status code
func (o *ProjectGroupsBindUserGroupsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project groups bind user groups bad request response has a 4xx status code
func (o *ProjectGroupsBindUserGroupsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this project groups bind user groups bad request response has a 5xx status code
func (o *ProjectGroupsBindUserGroupsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this project groups bind user groups bad request response a status code equal to that given
func (o *ProjectGroupsBindUserGroupsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the project groups bind user groups bad request response
func (o *ProjectGroupsBindUserGroupsBadRequest) Code() int {
	return 400
}

func (o *ProjectGroupsBindUserGroupsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectGroups/bind-user-groups][%d] projectGroupsBindUserGroupsBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectGroupsBindUserGroupsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectGroups/bind-user-groups][%d] projectGroupsBindUserGroupsBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectGroupsBindUserGroupsBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectGroupsBindUserGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGroupsBindUserGroupsUnauthorized creates a ProjectGroupsBindUserGroupsUnauthorized with default headers values
func NewProjectGroupsBindUserGroupsUnauthorized() *ProjectGroupsBindUserGroupsUnauthorized {
	return &ProjectGroupsBindUserGroupsUnauthorized{}
}

/*
ProjectGroupsBindUserGroupsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProjectGroupsBindUserGroupsUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this project groups bind user groups unauthorized response has a 2xx status code
func (o *ProjectGroupsBindUserGroupsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project groups bind user groups unauthorized response has a 3xx status code
func (o *ProjectGroupsBindUserGroupsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project groups bind user groups unauthorized response has a 4xx status code
func (o *ProjectGroupsBindUserGroupsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this project groups bind user groups unauthorized response has a 5xx status code
func (o *ProjectGroupsBindUserGroupsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this project groups bind user groups unauthorized response a status code equal to that given
func (o *ProjectGroupsBindUserGroupsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the project groups bind user groups unauthorized response
func (o *ProjectGroupsBindUserGroupsUnauthorized) Code() int {
	return 401
}

func (o *ProjectGroupsBindUserGroupsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectGroups/bind-user-groups][%d] projectGroupsBindUserGroupsUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectGroupsBindUserGroupsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectGroups/bind-user-groups][%d] projectGroupsBindUserGroupsUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectGroupsBindUserGroupsUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectGroupsBindUserGroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGroupsBindUserGroupsForbidden creates a ProjectGroupsBindUserGroupsForbidden with default headers values
func NewProjectGroupsBindUserGroupsForbidden() *ProjectGroupsBindUserGroupsForbidden {
	return &ProjectGroupsBindUserGroupsForbidden{}
}

/*
ProjectGroupsBindUserGroupsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ProjectGroupsBindUserGroupsForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this project groups bind user groups forbidden response has a 2xx status code
func (o *ProjectGroupsBindUserGroupsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project groups bind user groups forbidden response has a 3xx status code
func (o *ProjectGroupsBindUserGroupsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project groups bind user groups forbidden response has a 4xx status code
func (o *ProjectGroupsBindUserGroupsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this project groups bind user groups forbidden response has a 5xx status code
func (o *ProjectGroupsBindUserGroupsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this project groups bind user groups forbidden response a status code equal to that given
func (o *ProjectGroupsBindUserGroupsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the project groups bind user groups forbidden response
func (o *ProjectGroupsBindUserGroupsForbidden) Code() int {
	return 403
}

func (o *ProjectGroupsBindUserGroupsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectGroups/bind-user-groups][%d] projectGroupsBindUserGroupsForbidden  %+v", 403, o.Payload)
}

func (o *ProjectGroupsBindUserGroupsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectGroups/bind-user-groups][%d] projectGroupsBindUserGroupsForbidden  %+v", 403, o.Payload)
}

func (o *ProjectGroupsBindUserGroupsForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectGroupsBindUserGroupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGroupsBindUserGroupsNotFound creates a ProjectGroupsBindUserGroupsNotFound with default headers values
func NewProjectGroupsBindUserGroupsNotFound() *ProjectGroupsBindUserGroupsNotFound {
	return &ProjectGroupsBindUserGroupsNotFound{}
}

/*
ProjectGroupsBindUserGroupsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProjectGroupsBindUserGroupsNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this project groups bind user groups not found response has a 2xx status code
func (o *ProjectGroupsBindUserGroupsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project groups bind user groups not found response has a 3xx status code
func (o *ProjectGroupsBindUserGroupsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project groups bind user groups not found response has a 4xx status code
func (o *ProjectGroupsBindUserGroupsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this project groups bind user groups not found response has a 5xx status code
func (o *ProjectGroupsBindUserGroupsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this project groups bind user groups not found response a status code equal to that given
func (o *ProjectGroupsBindUserGroupsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the project groups bind user groups not found response
func (o *ProjectGroupsBindUserGroupsNotFound) Code() int {
	return 404
}

func (o *ProjectGroupsBindUserGroupsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectGroups/bind-user-groups][%d] projectGroupsBindUserGroupsNotFound  %+v", 404, o.Payload)
}

func (o *ProjectGroupsBindUserGroupsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectGroups/bind-user-groups][%d] projectGroupsBindUserGroupsNotFound  %+v", 404, o.Payload)
}

func (o *ProjectGroupsBindUserGroupsNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectGroupsBindUserGroupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGroupsBindUserGroupsInternalServerError creates a ProjectGroupsBindUserGroupsInternalServerError with default headers values
func NewProjectGroupsBindUserGroupsInternalServerError() *ProjectGroupsBindUserGroupsInternalServerError {
	return &ProjectGroupsBindUserGroupsInternalServerError{}
}

/*
ProjectGroupsBindUserGroupsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ProjectGroupsBindUserGroupsInternalServerError struct {
}

// IsSuccess returns true when this project groups bind user groups internal server error response has a 2xx status code
func (o *ProjectGroupsBindUserGroupsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project groups bind user groups internal server error response has a 3xx status code
func (o *ProjectGroupsBindUserGroupsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project groups bind user groups internal server error response has a 4xx status code
func (o *ProjectGroupsBindUserGroupsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this project groups bind user groups internal server error response has a 5xx status code
func (o *ProjectGroupsBindUserGroupsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this project groups bind user groups internal server error response a status code equal to that given
func (o *ProjectGroupsBindUserGroupsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the project groups bind user groups internal server error response
func (o *ProjectGroupsBindUserGroupsInternalServerError) Code() int {
	return 500
}

func (o *ProjectGroupsBindUserGroupsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectGroups/bind-user-groups][%d] projectGroupsBindUserGroupsInternalServerError ", 500)
}

func (o *ProjectGroupsBindUserGroupsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectGroups/bind-user-groups][%d] projectGroupsBindUserGroupsInternalServerError ", 500)
}

func (o *ProjectGroupsBindUserGroupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
