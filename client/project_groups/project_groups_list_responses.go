// Code generated by go-swagger; DO NOT EDIT.

package project_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ProjectGroupsListReader is a Reader for the ProjectGroupsList structure.
type ProjectGroupsListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectGroupsListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectGroupsListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProjectGroupsListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProjectGroupsListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProjectGroupsListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectGroupsListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProjectGroupsListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProjectGroupsListOK creates a ProjectGroupsListOK with default headers values
func NewProjectGroupsListOK() *ProjectGroupsListOK {
	return &ProjectGroupsListOK{}
}

/* ProjectGroupsListOK describes a response with status code 200, with default header values.

Success
*/
type ProjectGroupsListOK struct {
	Payload *models.ProjectGroupList
}

func (o *ProjectGroupsListOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectGroups/list][%d] projectGroupsListOK  %+v", 200, o.Payload)
}
func (o *ProjectGroupsListOK) GetPayload() *models.ProjectGroupList {
	return o.Payload
}

func (o *ProjectGroupsListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectGroupList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGroupsListBadRequest creates a ProjectGroupsListBadRequest with default headers values
func NewProjectGroupsListBadRequest() *ProjectGroupsListBadRequest {
	return &ProjectGroupsListBadRequest{}
}

/* ProjectGroupsListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProjectGroupsListBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *ProjectGroupsListBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectGroups/list][%d] projectGroupsListBadRequest  %+v", 400, o.Payload)
}
func (o *ProjectGroupsListBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *ProjectGroupsListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGroupsListUnauthorized creates a ProjectGroupsListUnauthorized with default headers values
func NewProjectGroupsListUnauthorized() *ProjectGroupsListUnauthorized {
	return &ProjectGroupsListUnauthorized{}
}

/* ProjectGroupsListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProjectGroupsListUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *ProjectGroupsListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectGroups/list][%d] projectGroupsListUnauthorized  %+v", 401, o.Payload)
}
func (o *ProjectGroupsListUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectGroupsListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGroupsListForbidden creates a ProjectGroupsListForbidden with default headers values
func NewProjectGroupsListForbidden() *ProjectGroupsListForbidden {
	return &ProjectGroupsListForbidden{}
}

/* ProjectGroupsListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ProjectGroupsListForbidden struct {
	Payload *models.ProblemDetails
}

func (o *ProjectGroupsListForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectGroups/list][%d] projectGroupsListForbidden  %+v", 403, o.Payload)
}
func (o *ProjectGroupsListForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectGroupsListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGroupsListNotFound creates a ProjectGroupsListNotFound with default headers values
func NewProjectGroupsListNotFound() *ProjectGroupsListNotFound {
	return &ProjectGroupsListNotFound{}
}

/* ProjectGroupsListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProjectGroupsListNotFound struct {
	Payload *models.ProblemDetails
}

func (o *ProjectGroupsListNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectGroups/list][%d] projectGroupsListNotFound  %+v", 404, o.Payload)
}
func (o *ProjectGroupsListNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectGroupsListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectGroupsListInternalServerError creates a ProjectGroupsListInternalServerError with default headers values
func NewProjectGroupsListInternalServerError() *ProjectGroupsListInternalServerError {
	return &ProjectGroupsListInternalServerError{}
}

/* ProjectGroupsListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ProjectGroupsListInternalServerError struct {
}

func (o *ProjectGroupsListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectGroups/list][%d] projectGroupsListInternalServerError ", 500)
}

func (o *ProjectGroupsListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
