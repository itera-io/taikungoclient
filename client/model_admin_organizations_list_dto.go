/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the AdminOrganizationsListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdminOrganizationsListDto{}

// AdminOrganizationsListDto struct for AdminOrganizationsListDto
type AdminOrganizationsListDto struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	CustomerId *string `json:"customerId,omitempty"`
	PartnerName *string `json:"partnerName,omitempty"`
	PartnerLogo *string `json:"partnerLogo,omitempty"`
}

// NewAdminOrganizationsListDto instantiates a new AdminOrganizationsListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminOrganizationsListDto() *AdminOrganizationsListDto {
	this := AdminOrganizationsListDto{}
	return &this
}

// NewAdminOrganizationsListDtoWithDefaults instantiates a new AdminOrganizationsListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminOrganizationsListDtoWithDefaults() *AdminOrganizationsListDto {
	this := AdminOrganizationsListDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AdminOrganizationsListDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminOrganizationsListDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AdminOrganizationsListDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *AdminOrganizationsListDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdminOrganizationsListDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminOrganizationsListDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdminOrganizationsListDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdminOrganizationsListDto) SetName(v string) {
	o.Name = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *AdminOrganizationsListDto) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminOrganizationsListDto) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *AdminOrganizationsListDto) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *AdminOrganizationsListDto) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetPartnerName returns the PartnerName field value if set, zero value otherwise.
func (o *AdminOrganizationsListDto) GetPartnerName() string {
	if o == nil || IsNil(o.PartnerName) {
		var ret string
		return ret
	}
	return *o.PartnerName
}

// GetPartnerNameOk returns a tuple with the PartnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminOrganizationsListDto) GetPartnerNameOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerName) {
		return nil, false
	}
	return o.PartnerName, true
}

// HasPartnerName returns a boolean if a field has been set.
func (o *AdminOrganizationsListDto) HasPartnerName() bool {
	if o != nil && !IsNil(o.PartnerName) {
		return true
	}

	return false
}

// SetPartnerName gets a reference to the given string and assigns it to the PartnerName field.
func (o *AdminOrganizationsListDto) SetPartnerName(v string) {
	o.PartnerName = &v
}

// GetPartnerLogo returns the PartnerLogo field value if set, zero value otherwise.
func (o *AdminOrganizationsListDto) GetPartnerLogo() string {
	if o == nil || IsNil(o.PartnerLogo) {
		var ret string
		return ret
	}
	return *o.PartnerLogo
}

// GetPartnerLogoOk returns a tuple with the PartnerLogo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminOrganizationsListDto) GetPartnerLogoOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerLogo) {
		return nil, false
	}
	return o.PartnerLogo, true
}

// HasPartnerLogo returns a boolean if a field has been set.
func (o *AdminOrganizationsListDto) HasPartnerLogo() bool {
	if o != nil && !IsNil(o.PartnerLogo) {
		return true
	}

	return false
}

// SetPartnerLogo gets a reference to the given string and assigns it to the PartnerLogo field.
func (o *AdminOrganizationsListDto) SetPartnerLogo(v string) {
	o.PartnerLogo = &v
}

func (o AdminOrganizationsListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdminOrganizationsListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customerId"] = o.CustomerId
	}
	if !IsNil(o.PartnerName) {
		toSerialize["partnerName"] = o.PartnerName
	}
	if !IsNil(o.PartnerLogo) {
		toSerialize["partnerLogo"] = o.PartnerLogo
	}
	return toSerialize, nil
}

type NullableAdminOrganizationsListDto struct {
	value *AdminOrganizationsListDto
	isSet bool
}

func (v NullableAdminOrganizationsListDto) Get() *AdminOrganizationsListDto {
	return v.value
}

func (v *NullableAdminOrganizationsListDto) Set(val *AdminOrganizationsListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminOrganizationsListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminOrganizationsListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminOrganizationsListDto(val *AdminOrganizationsListDto) *NullableAdminOrganizationsListDto {
	return &NullableAdminOrganizationsListDto{value: val, isSet: true}
}

func (v NullableAdminOrganizationsListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminOrganizationsListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


