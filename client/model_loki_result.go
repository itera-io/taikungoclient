/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the LokiResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LokiResult{}

// LokiResult struct for LokiResult
type LokiResult struct {
	Stream *Stream `json:"stream,omitempty"`
	Values []string `json:"values,omitempty"`
}

// NewLokiResult instantiates a new LokiResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLokiResult() *LokiResult {
	this := LokiResult{}
	return &this
}

// NewLokiResultWithDefaults instantiates a new LokiResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLokiResultWithDefaults() *LokiResult {
	this := LokiResult{}
	return &this
}

// GetStream returns the Stream field value if set, zero value otherwise.
func (o *LokiResult) GetStream() Stream {
	if o == nil || IsNil(o.Stream) {
		var ret Stream
		return ret
	}
	return *o.Stream
}

// GetStreamOk returns a tuple with the Stream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LokiResult) GetStreamOk() (*Stream, bool) {
	if o == nil || IsNil(o.Stream) {
		return nil, false
	}
	return o.Stream, true
}

// HasStream returns a boolean if a field has been set.
func (o *LokiResult) HasStream() bool {
	if o != nil && !IsNil(o.Stream) {
		return true
	}

	return false
}

// SetStream gets a reference to the given Stream and assigns it to the Stream field.
func (o *LokiResult) SetStream(v Stream) {
	o.Stream = &v
}

// GetValues returns the Values field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LokiResult) GetValues() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LokiResult) GetValuesOk() ([]string, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *LokiResult) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []string and assigns it to the Values field.
func (o *LokiResult) SetValues(v []string) {
	o.Values = v
}

func (o LokiResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LokiResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Stream) {
		toSerialize["stream"] = o.Stream
	}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	return toSerialize, nil
}

type NullableLokiResult struct {
	value *LokiResult
	isSet bool
}

func (v NullableLokiResult) Get() *LokiResult {
	return v.value
}

func (v *NullableLokiResult) Set(val *LokiResult) {
	v.value = val
	v.isSet = true
}

func (v NullableLokiResult) IsSet() bool {
	return v.isSet
}

func (v *NullableLokiResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLokiResult(val *LokiResult) *NullableLokiResult {
	return &NullableLokiResult{value: val, isSet: true}
}

func (v NullableLokiResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLokiResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


