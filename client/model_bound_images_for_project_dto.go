/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the BoundImagesForProjectDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BoundImagesForProjectDto{}

// BoundImagesForProjectDto struct for BoundImagesForProjectDto
type BoundImagesForProjectDto struct {
	Names []string `json:"names,omitempty"`
	Ids []string `json:"ids,omitempty"`
}

// NewBoundImagesForProjectDto instantiates a new BoundImagesForProjectDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBoundImagesForProjectDto() *BoundImagesForProjectDto {
	this := BoundImagesForProjectDto{}
	return &this
}

// NewBoundImagesForProjectDtoWithDefaults instantiates a new BoundImagesForProjectDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBoundImagesForProjectDtoWithDefaults() *BoundImagesForProjectDto {
	this := BoundImagesForProjectDto{}
	return &this
}

// GetNames returns the Names field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BoundImagesForProjectDto) GetNames() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Names
}

// GetNamesOk returns a tuple with the Names field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoundImagesForProjectDto) GetNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.Names) {
		return nil, false
	}
	return o.Names, true
}

// HasNames returns a boolean if a field has been set.
func (o *BoundImagesForProjectDto) HasNames() bool {
	if o != nil && IsNil(o.Names) {
		return true
	}

	return false
}

// SetNames gets a reference to the given []string and assigns it to the Names field.
func (o *BoundImagesForProjectDto) SetNames(v []string) {
	o.Names = v
}

// GetIds returns the Ids field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BoundImagesForProjectDto) GetIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoundImagesForProjectDto) GetIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.Ids) {
		return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *BoundImagesForProjectDto) HasIds() bool {
	if o != nil && IsNil(o.Ids) {
		return true
	}

	return false
}

// SetIds gets a reference to the given []string and assigns it to the Ids field.
func (o *BoundImagesForProjectDto) SetIds(v []string) {
	o.Ids = v
}

func (o BoundImagesForProjectDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BoundImagesForProjectDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Names != nil {
		toSerialize["names"] = o.Names
	}
	if o.Ids != nil {
		toSerialize["ids"] = o.Ids
	}
	return toSerialize, nil
}

type NullableBoundImagesForProjectDto struct {
	value *BoundImagesForProjectDto
	isSet bool
}

func (v NullableBoundImagesForProjectDto) Get() *BoundImagesForProjectDto {
	return v.value
}

func (v *NullableBoundImagesForProjectDto) Set(val *BoundImagesForProjectDto) {
	v.value = val
	v.isSet = true
}

func (v NullableBoundImagesForProjectDto) IsSet() bool {
	return v.isSet
}

func (v *NullableBoundImagesForProjectDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBoundImagesForProjectDto(val *BoundImagesForProjectDto) *NullableBoundImagesForProjectDto {
	return &NullableBoundImagesForProjectDto{value: val, isSet: true}
}

func (v NullableBoundImagesForProjectDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBoundImagesForProjectDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


