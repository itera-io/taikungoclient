// Code generated by go-swagger; DO NOT EDIT.

package flavors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// FlavorsPromoxFlavorsReader is a Reader for the FlavorsPromoxFlavors structure.
type FlavorsPromoxFlavorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FlavorsPromoxFlavorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFlavorsPromoxFlavorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFlavorsPromoxFlavorsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewFlavorsPromoxFlavorsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFlavorsPromoxFlavorsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFlavorsPromoxFlavorsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewFlavorsPromoxFlavorsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFlavorsPromoxFlavorsOK creates a FlavorsPromoxFlavorsOK with default headers values
func NewFlavorsPromoxFlavorsOK() *FlavorsPromoxFlavorsOK {
	return &FlavorsPromoxFlavorsOK{}
}

/*
FlavorsPromoxFlavorsOK describes a response with status code 200, with default header values.

Success
*/
type FlavorsPromoxFlavorsOK struct {
	Payload *models.ProxmoxFlavorList
}

// IsSuccess returns true when this flavors promox flavors o k response has a 2xx status code
func (o *FlavorsPromoxFlavorsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this flavors promox flavors o k response has a 3xx status code
func (o *FlavorsPromoxFlavorsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors promox flavors o k response has a 4xx status code
func (o *FlavorsPromoxFlavorsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this flavors promox flavors o k response has a 5xx status code
func (o *FlavorsPromoxFlavorsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors promox flavors o k response a status code equal to that given
func (o *FlavorsPromoxFlavorsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the flavors promox flavors o k response
func (o *FlavorsPromoxFlavorsOK) Code() int {
	return 200
}

func (o *FlavorsPromoxFlavorsOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsPromoxFlavorsOK  %+v", 200, o.Payload)
}

func (o *FlavorsPromoxFlavorsOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsPromoxFlavorsOK  %+v", 200, o.Payload)
}

func (o *FlavorsPromoxFlavorsOK) GetPayload() *models.ProxmoxFlavorList {
	return o.Payload
}

func (o *FlavorsPromoxFlavorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProxmoxFlavorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsPromoxFlavorsBadRequest creates a FlavorsPromoxFlavorsBadRequest with default headers values
func NewFlavorsPromoxFlavorsBadRequest() *FlavorsPromoxFlavorsBadRequest {
	return &FlavorsPromoxFlavorsBadRequest{}
}

/*
FlavorsPromoxFlavorsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type FlavorsPromoxFlavorsBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this flavors promox flavors bad request response has a 2xx status code
func (o *FlavorsPromoxFlavorsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors promox flavors bad request response has a 3xx status code
func (o *FlavorsPromoxFlavorsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors promox flavors bad request response has a 4xx status code
func (o *FlavorsPromoxFlavorsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this flavors promox flavors bad request response has a 5xx status code
func (o *FlavorsPromoxFlavorsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors promox flavors bad request response a status code equal to that given
func (o *FlavorsPromoxFlavorsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the flavors promox flavors bad request response
func (o *FlavorsPromoxFlavorsBadRequest) Code() int {
	return 400
}

func (o *FlavorsPromoxFlavorsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsPromoxFlavorsBadRequest  %+v", 400, o.Payload)
}

func (o *FlavorsPromoxFlavorsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsPromoxFlavorsBadRequest  %+v", 400, o.Payload)
}

func (o *FlavorsPromoxFlavorsBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *FlavorsPromoxFlavorsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsPromoxFlavorsUnauthorized creates a FlavorsPromoxFlavorsUnauthorized with default headers values
func NewFlavorsPromoxFlavorsUnauthorized() *FlavorsPromoxFlavorsUnauthorized {
	return &FlavorsPromoxFlavorsUnauthorized{}
}

/*
FlavorsPromoxFlavorsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type FlavorsPromoxFlavorsUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this flavors promox flavors unauthorized response has a 2xx status code
func (o *FlavorsPromoxFlavorsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors promox flavors unauthorized response has a 3xx status code
func (o *FlavorsPromoxFlavorsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors promox flavors unauthorized response has a 4xx status code
func (o *FlavorsPromoxFlavorsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this flavors promox flavors unauthorized response has a 5xx status code
func (o *FlavorsPromoxFlavorsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors promox flavors unauthorized response a status code equal to that given
func (o *FlavorsPromoxFlavorsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the flavors promox flavors unauthorized response
func (o *FlavorsPromoxFlavorsUnauthorized) Code() int {
	return 401
}

func (o *FlavorsPromoxFlavorsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsPromoxFlavorsUnauthorized  %+v", 401, o.Payload)
}

func (o *FlavorsPromoxFlavorsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsPromoxFlavorsUnauthorized  %+v", 401, o.Payload)
}

func (o *FlavorsPromoxFlavorsUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *FlavorsPromoxFlavorsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsPromoxFlavorsForbidden creates a FlavorsPromoxFlavorsForbidden with default headers values
func NewFlavorsPromoxFlavorsForbidden() *FlavorsPromoxFlavorsForbidden {
	return &FlavorsPromoxFlavorsForbidden{}
}

/*
FlavorsPromoxFlavorsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type FlavorsPromoxFlavorsForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this flavors promox flavors forbidden response has a 2xx status code
func (o *FlavorsPromoxFlavorsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors promox flavors forbidden response has a 3xx status code
func (o *FlavorsPromoxFlavorsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors promox flavors forbidden response has a 4xx status code
func (o *FlavorsPromoxFlavorsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this flavors promox flavors forbidden response has a 5xx status code
func (o *FlavorsPromoxFlavorsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors promox flavors forbidden response a status code equal to that given
func (o *FlavorsPromoxFlavorsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the flavors promox flavors forbidden response
func (o *FlavorsPromoxFlavorsForbidden) Code() int {
	return 403
}

func (o *FlavorsPromoxFlavorsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsPromoxFlavorsForbidden  %+v", 403, o.Payload)
}

func (o *FlavorsPromoxFlavorsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsPromoxFlavorsForbidden  %+v", 403, o.Payload)
}

func (o *FlavorsPromoxFlavorsForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *FlavorsPromoxFlavorsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsPromoxFlavorsNotFound creates a FlavorsPromoxFlavorsNotFound with default headers values
func NewFlavorsPromoxFlavorsNotFound() *FlavorsPromoxFlavorsNotFound {
	return &FlavorsPromoxFlavorsNotFound{}
}

/*
FlavorsPromoxFlavorsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type FlavorsPromoxFlavorsNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this flavors promox flavors not found response has a 2xx status code
func (o *FlavorsPromoxFlavorsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors promox flavors not found response has a 3xx status code
func (o *FlavorsPromoxFlavorsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors promox flavors not found response has a 4xx status code
func (o *FlavorsPromoxFlavorsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this flavors promox flavors not found response has a 5xx status code
func (o *FlavorsPromoxFlavorsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors promox flavors not found response a status code equal to that given
func (o *FlavorsPromoxFlavorsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the flavors promox flavors not found response
func (o *FlavorsPromoxFlavorsNotFound) Code() int {
	return 404
}

func (o *FlavorsPromoxFlavorsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsPromoxFlavorsNotFound  %+v", 404, o.Payload)
}

func (o *FlavorsPromoxFlavorsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsPromoxFlavorsNotFound  %+v", 404, o.Payload)
}

func (o *FlavorsPromoxFlavorsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *FlavorsPromoxFlavorsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsPromoxFlavorsInternalServerError creates a FlavorsPromoxFlavorsInternalServerError with default headers values
func NewFlavorsPromoxFlavorsInternalServerError() *FlavorsPromoxFlavorsInternalServerError {
	return &FlavorsPromoxFlavorsInternalServerError{}
}

/*
FlavorsPromoxFlavorsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type FlavorsPromoxFlavorsInternalServerError struct {
}

// IsSuccess returns true when this flavors promox flavors internal server error response has a 2xx status code
func (o *FlavorsPromoxFlavorsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors promox flavors internal server error response has a 3xx status code
func (o *FlavorsPromoxFlavorsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors promox flavors internal server error response has a 4xx status code
func (o *FlavorsPromoxFlavorsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this flavors promox flavors internal server error response has a 5xx status code
func (o *FlavorsPromoxFlavorsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this flavors promox flavors internal server error response a status code equal to that given
func (o *FlavorsPromoxFlavorsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the flavors promox flavors internal server error response
func (o *FlavorsPromoxFlavorsInternalServerError) Code() int {
	return 500
}

func (o *FlavorsPromoxFlavorsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsPromoxFlavorsInternalServerError ", 500)
}

func (o *FlavorsPromoxFlavorsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsPromoxFlavorsInternalServerError ", 500)
}

func (o *FlavorsPromoxFlavorsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
