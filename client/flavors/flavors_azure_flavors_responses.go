// Code generated by go-swagger; DO NOT EDIT.

package flavors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FlavorsAzureFlavorsReader is a Reader for the FlavorsAzureFlavors structure.
type FlavorsAzureFlavorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FlavorsAzureFlavorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFlavorsAzureFlavorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFlavorsAzureFlavorsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewFlavorsAzureFlavorsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFlavorsAzureFlavorsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFlavorsAzureFlavorsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewFlavorsAzureFlavorsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFlavorsAzureFlavorsOK creates a FlavorsAzureFlavorsOK with default headers values
func NewFlavorsAzureFlavorsOK() *FlavorsAzureFlavorsOK {
	return &FlavorsAzureFlavorsOK{}
}

/*
FlavorsAzureFlavorsOK describes a response with status code 200, with default header values.

Success
*/
type FlavorsAzureFlavorsOK struct {
	Payload *FlavorsAzureFlavorsOKBody
}

// IsSuccess returns true when this flavors azure flavors o k response has a 2xx status code
func (o *FlavorsAzureFlavorsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this flavors azure flavors o k response has a 3xx status code
func (o *FlavorsAzureFlavorsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors azure flavors o k response has a 4xx status code
func (o *FlavorsAzureFlavorsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this flavors azure flavors o k response has a 5xx status code
func (o *FlavorsAzureFlavorsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors azure flavors o k response a status code equal to that given
func (o *FlavorsAzureFlavorsOK) IsCode(code int) bool {
	return code == 200
}

func (o *FlavorsAzureFlavorsOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/azure/{cloudId}][%d] flavorsAzureFlavorsOK  %+v", 200, o.Payload)
}

func (o *FlavorsAzureFlavorsOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/azure/{cloudId}][%d] flavorsAzureFlavorsOK  %+v", 200, o.Payload)
}

func (o *FlavorsAzureFlavorsOK) GetPayload() *FlavorsAzureFlavorsOKBody {
	return o.Payload
}

func (o *FlavorsAzureFlavorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(FlavorsAzureFlavorsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsAzureFlavorsBadRequest creates a FlavorsAzureFlavorsBadRequest with default headers values
func NewFlavorsAzureFlavorsBadRequest() *FlavorsAzureFlavorsBadRequest {
	return &FlavorsAzureFlavorsBadRequest{}
}

/*
FlavorsAzureFlavorsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type FlavorsAzureFlavorsBadRequest struct {
	Payload []*FlavorsAzureFlavorsBadRequestBodyItems0
}

// IsSuccess returns true when this flavors azure flavors bad request response has a 2xx status code
func (o *FlavorsAzureFlavorsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors azure flavors bad request response has a 3xx status code
func (o *FlavorsAzureFlavorsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors azure flavors bad request response has a 4xx status code
func (o *FlavorsAzureFlavorsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this flavors azure flavors bad request response has a 5xx status code
func (o *FlavorsAzureFlavorsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors azure flavors bad request response a status code equal to that given
func (o *FlavorsAzureFlavorsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *FlavorsAzureFlavorsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/azure/{cloudId}][%d] flavorsAzureFlavorsBadRequest  %+v", 400, o.Payload)
}

func (o *FlavorsAzureFlavorsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/azure/{cloudId}][%d] flavorsAzureFlavorsBadRequest  %+v", 400, o.Payload)
}

func (o *FlavorsAzureFlavorsBadRequest) GetPayload() []*FlavorsAzureFlavorsBadRequestBodyItems0 {
	return o.Payload
}

func (o *FlavorsAzureFlavorsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsAzureFlavorsUnauthorized creates a FlavorsAzureFlavorsUnauthorized with default headers values
func NewFlavorsAzureFlavorsUnauthorized() *FlavorsAzureFlavorsUnauthorized {
	return &FlavorsAzureFlavorsUnauthorized{}
}

/*
FlavorsAzureFlavorsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type FlavorsAzureFlavorsUnauthorized struct {
	Payload *FlavorsAzureFlavorsUnauthorizedBody
}

// IsSuccess returns true when this flavors azure flavors unauthorized response has a 2xx status code
func (o *FlavorsAzureFlavorsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors azure flavors unauthorized response has a 3xx status code
func (o *FlavorsAzureFlavorsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors azure flavors unauthorized response has a 4xx status code
func (o *FlavorsAzureFlavorsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this flavors azure flavors unauthorized response has a 5xx status code
func (o *FlavorsAzureFlavorsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors azure flavors unauthorized response a status code equal to that given
func (o *FlavorsAzureFlavorsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *FlavorsAzureFlavorsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/azure/{cloudId}][%d] flavorsAzureFlavorsUnauthorized  %+v", 401, o.Payload)
}

func (o *FlavorsAzureFlavorsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/azure/{cloudId}][%d] flavorsAzureFlavorsUnauthorized  %+v", 401, o.Payload)
}

func (o *FlavorsAzureFlavorsUnauthorized) GetPayload() *FlavorsAzureFlavorsUnauthorizedBody {
	return o.Payload
}

func (o *FlavorsAzureFlavorsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(FlavorsAzureFlavorsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsAzureFlavorsForbidden creates a FlavorsAzureFlavorsForbidden with default headers values
func NewFlavorsAzureFlavorsForbidden() *FlavorsAzureFlavorsForbidden {
	return &FlavorsAzureFlavorsForbidden{}
}

/*
FlavorsAzureFlavorsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type FlavorsAzureFlavorsForbidden struct {
	Payload *FlavorsAzureFlavorsForbiddenBody
}

// IsSuccess returns true when this flavors azure flavors forbidden response has a 2xx status code
func (o *FlavorsAzureFlavorsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors azure flavors forbidden response has a 3xx status code
func (o *FlavorsAzureFlavorsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors azure flavors forbidden response has a 4xx status code
func (o *FlavorsAzureFlavorsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this flavors azure flavors forbidden response has a 5xx status code
func (o *FlavorsAzureFlavorsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors azure flavors forbidden response a status code equal to that given
func (o *FlavorsAzureFlavorsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *FlavorsAzureFlavorsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/azure/{cloudId}][%d] flavorsAzureFlavorsForbidden  %+v", 403, o.Payload)
}

func (o *FlavorsAzureFlavorsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/azure/{cloudId}][%d] flavorsAzureFlavorsForbidden  %+v", 403, o.Payload)
}

func (o *FlavorsAzureFlavorsForbidden) GetPayload() *FlavorsAzureFlavorsForbiddenBody {
	return o.Payload
}

func (o *FlavorsAzureFlavorsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(FlavorsAzureFlavorsForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsAzureFlavorsNotFound creates a FlavorsAzureFlavorsNotFound with default headers values
func NewFlavorsAzureFlavorsNotFound() *FlavorsAzureFlavorsNotFound {
	return &FlavorsAzureFlavorsNotFound{}
}

/*
FlavorsAzureFlavorsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type FlavorsAzureFlavorsNotFound struct {
	Payload *FlavorsAzureFlavorsNotFoundBody
}

// IsSuccess returns true when this flavors azure flavors not found response has a 2xx status code
func (o *FlavorsAzureFlavorsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors azure flavors not found response has a 3xx status code
func (o *FlavorsAzureFlavorsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors azure flavors not found response has a 4xx status code
func (o *FlavorsAzureFlavorsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this flavors azure flavors not found response has a 5xx status code
func (o *FlavorsAzureFlavorsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors azure flavors not found response a status code equal to that given
func (o *FlavorsAzureFlavorsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *FlavorsAzureFlavorsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/azure/{cloudId}][%d] flavorsAzureFlavorsNotFound  %+v", 404, o.Payload)
}

func (o *FlavorsAzureFlavorsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/azure/{cloudId}][%d] flavorsAzureFlavorsNotFound  %+v", 404, o.Payload)
}

func (o *FlavorsAzureFlavorsNotFound) GetPayload() *FlavorsAzureFlavorsNotFoundBody {
	return o.Payload
}

func (o *FlavorsAzureFlavorsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(FlavorsAzureFlavorsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsAzureFlavorsInternalServerError creates a FlavorsAzureFlavorsInternalServerError with default headers values
func NewFlavorsAzureFlavorsInternalServerError() *FlavorsAzureFlavorsInternalServerError {
	return &FlavorsAzureFlavorsInternalServerError{}
}

/*
FlavorsAzureFlavorsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type FlavorsAzureFlavorsInternalServerError struct {
}

// IsSuccess returns true when this flavors azure flavors internal server error response has a 2xx status code
func (o *FlavorsAzureFlavorsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors azure flavors internal server error response has a 3xx status code
func (o *FlavorsAzureFlavorsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors azure flavors internal server error response has a 4xx status code
func (o *FlavorsAzureFlavorsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this flavors azure flavors internal server error response has a 5xx status code
func (o *FlavorsAzureFlavorsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this flavors azure flavors internal server error response a status code equal to that given
func (o *FlavorsAzureFlavorsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *FlavorsAzureFlavorsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/azure/{cloudId}][%d] flavorsAzureFlavorsInternalServerError ", 500)
}

func (o *FlavorsAzureFlavorsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/azure/{cloudId}][%d] flavorsAzureFlavorsInternalServerError ", 500)
}

func (o *FlavorsAzureFlavorsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
FlavorsAzureFlavorsBadRequestBodyItems0 flavors azure flavors bad request body items0
swagger:model FlavorsAzureFlavorsBadRequestBodyItems0
*/
type FlavorsAzureFlavorsBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this flavors azure flavors bad request body items0
func (o *FlavorsAzureFlavorsBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this flavors azure flavors bad request body items0 based on context it is used
func (o *FlavorsAzureFlavorsBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *FlavorsAzureFlavorsBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *FlavorsAzureFlavorsBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res FlavorsAzureFlavorsBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
FlavorsAzureFlavorsForbiddenBody flavors azure flavors forbidden body
swagger:model FlavorsAzureFlavorsForbiddenBody
*/
type FlavorsAzureFlavorsForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this flavors azure flavors forbidden body
func (o *FlavorsAzureFlavorsForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this flavors azure flavors forbidden body based on context it is used
func (o *FlavorsAzureFlavorsForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *FlavorsAzureFlavorsForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *FlavorsAzureFlavorsForbiddenBody) UnmarshalBinary(b []byte) error {
	var res FlavorsAzureFlavorsForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
FlavorsAzureFlavorsNotFoundBody flavors azure flavors not found body
swagger:model FlavorsAzureFlavorsNotFoundBody
*/
type FlavorsAzureFlavorsNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this flavors azure flavors not found body
func (o *FlavorsAzureFlavorsNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this flavors azure flavors not found body based on context it is used
func (o *FlavorsAzureFlavorsNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *FlavorsAzureFlavorsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *FlavorsAzureFlavorsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res FlavorsAzureFlavorsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
FlavorsAzureFlavorsOKBody flavors azure flavors o k body
swagger:model FlavorsAzureFlavorsOKBody
*/
type FlavorsAzureFlavorsOKBody struct {

	// data
	Data []*FlavorsAzureFlavorsOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this flavors azure flavors o k body
func (o *FlavorsAzureFlavorsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *FlavorsAzureFlavorsOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("flavorsAzureFlavorsOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("flavorsAzureFlavorsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this flavors azure flavors o k body based on the context it is used
func (o *FlavorsAzureFlavorsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *FlavorsAzureFlavorsOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("flavorsAzureFlavorsOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("flavorsAzureFlavorsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *FlavorsAzureFlavorsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *FlavorsAzureFlavorsOKBody) UnmarshalBinary(b []byte) error {
	var res FlavorsAzureFlavorsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
FlavorsAzureFlavorsOKBodyDataItems0 flavors azure flavors o k body data items0
swagger:model FlavorsAzureFlavorsOKBodyDataItems0
*/
type FlavorsAzureFlavorsOKBodyDataItems0 struct {

	// cpu
	CPU int32 `json:"cpu,omitempty"`

	// description
	Description interface{} `json:"description,omitempty"`

	// linux price
	LinuxPrice string `json:"linuxPrice,omitempty"`

	// linux spot price
	LinuxSpotPrice string `json:"linuxSpotPrice,omitempty"`

	// max data disk count
	MaxDataDiskCount float64 `json:"maxDataDiskCount,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// ram
	RAM int64 `json:"ram,omitempty"`

	// windows price
	WindowsPrice string `json:"windowsPrice,omitempty"`

	// windows spot price
	WindowsSpotPrice string `json:"windowsSpotPrice,omitempty"`
}

// Validate validates this flavors azure flavors o k body data items0
func (o *FlavorsAzureFlavorsOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this flavors azure flavors o k body data items0 based on context it is used
func (o *FlavorsAzureFlavorsOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *FlavorsAzureFlavorsOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *FlavorsAzureFlavorsOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res FlavorsAzureFlavorsOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
FlavorsAzureFlavorsUnauthorizedBody flavors azure flavors unauthorized body
swagger:model FlavorsAzureFlavorsUnauthorizedBody
*/
type FlavorsAzureFlavorsUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this flavors azure flavors unauthorized body
func (o *FlavorsAzureFlavorsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this flavors azure flavors unauthorized body based on context it is used
func (o *FlavorsAzureFlavorsUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *FlavorsAzureFlavorsUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *FlavorsAzureFlavorsUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res FlavorsAzureFlavorsUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
