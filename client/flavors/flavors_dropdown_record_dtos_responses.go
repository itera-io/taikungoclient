// Code generated by go-swagger; DO NOT EDIT.

package flavors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FlavorsDropdownRecordDtosReader is a Reader for the FlavorsDropdownRecordDtos structure.
type FlavorsDropdownRecordDtosReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FlavorsDropdownRecordDtosReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFlavorsDropdownRecordDtosOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFlavorsDropdownRecordDtosBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewFlavorsDropdownRecordDtosUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFlavorsDropdownRecordDtosForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFlavorsDropdownRecordDtosNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewFlavorsDropdownRecordDtosInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFlavorsDropdownRecordDtosOK creates a FlavorsDropdownRecordDtosOK with default headers values
func NewFlavorsDropdownRecordDtosOK() *FlavorsDropdownRecordDtosOK {
	return &FlavorsDropdownRecordDtosOK{}
}

/*
FlavorsDropdownRecordDtosOK describes a response with status code 200, with default header values.

Success
*/
type FlavorsDropdownRecordDtosOK struct {
	Payload []*FlavorsDropdownRecordDtosOKBodyItems0
}

// IsSuccess returns true when this flavors dropdown record dtos o k response has a 2xx status code
func (o *FlavorsDropdownRecordDtosOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this flavors dropdown record dtos o k response has a 3xx status code
func (o *FlavorsDropdownRecordDtosOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors dropdown record dtos o k response has a 4xx status code
func (o *FlavorsDropdownRecordDtosOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this flavors dropdown record dtos o k response has a 5xx status code
func (o *FlavorsDropdownRecordDtosOK) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors dropdown record dtos o k response a status code equal to that given
func (o *FlavorsDropdownRecordDtosOK) IsCode(code int) bool {
	return code == 200
}

func (o *FlavorsDropdownRecordDtosOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosOK  %+v", 200, o.Payload)
}

func (o *FlavorsDropdownRecordDtosOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosOK  %+v", 200, o.Payload)
}

func (o *FlavorsDropdownRecordDtosOK) GetPayload() []*FlavorsDropdownRecordDtosOKBodyItems0 {
	return o.Payload
}

func (o *FlavorsDropdownRecordDtosOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsDropdownRecordDtosBadRequest creates a FlavorsDropdownRecordDtosBadRequest with default headers values
func NewFlavorsDropdownRecordDtosBadRequest() *FlavorsDropdownRecordDtosBadRequest {
	return &FlavorsDropdownRecordDtosBadRequest{}
}

/*
FlavorsDropdownRecordDtosBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type FlavorsDropdownRecordDtosBadRequest struct {
	Payload []*FlavorsDropdownRecordDtosBadRequestBodyItems0
}

// IsSuccess returns true when this flavors dropdown record dtos bad request response has a 2xx status code
func (o *FlavorsDropdownRecordDtosBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors dropdown record dtos bad request response has a 3xx status code
func (o *FlavorsDropdownRecordDtosBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors dropdown record dtos bad request response has a 4xx status code
func (o *FlavorsDropdownRecordDtosBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this flavors dropdown record dtos bad request response has a 5xx status code
func (o *FlavorsDropdownRecordDtosBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors dropdown record dtos bad request response a status code equal to that given
func (o *FlavorsDropdownRecordDtosBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *FlavorsDropdownRecordDtosBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosBadRequest  %+v", 400, o.Payload)
}

func (o *FlavorsDropdownRecordDtosBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosBadRequest  %+v", 400, o.Payload)
}

func (o *FlavorsDropdownRecordDtosBadRequest) GetPayload() []*FlavorsDropdownRecordDtosBadRequestBodyItems0 {
	return o.Payload
}

func (o *FlavorsDropdownRecordDtosBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsDropdownRecordDtosUnauthorized creates a FlavorsDropdownRecordDtosUnauthorized with default headers values
func NewFlavorsDropdownRecordDtosUnauthorized() *FlavorsDropdownRecordDtosUnauthorized {
	return &FlavorsDropdownRecordDtosUnauthorized{}
}

/*
FlavorsDropdownRecordDtosUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type FlavorsDropdownRecordDtosUnauthorized struct {
	Payload *FlavorsDropdownRecordDtosUnauthorizedBody
}

// IsSuccess returns true when this flavors dropdown record dtos unauthorized response has a 2xx status code
func (o *FlavorsDropdownRecordDtosUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors dropdown record dtos unauthorized response has a 3xx status code
func (o *FlavorsDropdownRecordDtosUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors dropdown record dtos unauthorized response has a 4xx status code
func (o *FlavorsDropdownRecordDtosUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this flavors dropdown record dtos unauthorized response has a 5xx status code
func (o *FlavorsDropdownRecordDtosUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors dropdown record dtos unauthorized response a status code equal to that given
func (o *FlavorsDropdownRecordDtosUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *FlavorsDropdownRecordDtosUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosUnauthorized  %+v", 401, o.Payload)
}

func (o *FlavorsDropdownRecordDtosUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosUnauthorized  %+v", 401, o.Payload)
}

func (o *FlavorsDropdownRecordDtosUnauthorized) GetPayload() *FlavorsDropdownRecordDtosUnauthorizedBody {
	return o.Payload
}

func (o *FlavorsDropdownRecordDtosUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(FlavorsDropdownRecordDtosUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsDropdownRecordDtosForbidden creates a FlavorsDropdownRecordDtosForbidden with default headers values
func NewFlavorsDropdownRecordDtosForbidden() *FlavorsDropdownRecordDtosForbidden {
	return &FlavorsDropdownRecordDtosForbidden{}
}

/*
FlavorsDropdownRecordDtosForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type FlavorsDropdownRecordDtosForbidden struct {
	Payload *FlavorsDropdownRecordDtosForbiddenBody
}

// IsSuccess returns true when this flavors dropdown record dtos forbidden response has a 2xx status code
func (o *FlavorsDropdownRecordDtosForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors dropdown record dtos forbidden response has a 3xx status code
func (o *FlavorsDropdownRecordDtosForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors dropdown record dtos forbidden response has a 4xx status code
func (o *FlavorsDropdownRecordDtosForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this flavors dropdown record dtos forbidden response has a 5xx status code
func (o *FlavorsDropdownRecordDtosForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors dropdown record dtos forbidden response a status code equal to that given
func (o *FlavorsDropdownRecordDtosForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *FlavorsDropdownRecordDtosForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosForbidden  %+v", 403, o.Payload)
}

func (o *FlavorsDropdownRecordDtosForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosForbidden  %+v", 403, o.Payload)
}

func (o *FlavorsDropdownRecordDtosForbidden) GetPayload() *FlavorsDropdownRecordDtosForbiddenBody {
	return o.Payload
}

func (o *FlavorsDropdownRecordDtosForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(FlavorsDropdownRecordDtosForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsDropdownRecordDtosNotFound creates a FlavorsDropdownRecordDtosNotFound with default headers values
func NewFlavorsDropdownRecordDtosNotFound() *FlavorsDropdownRecordDtosNotFound {
	return &FlavorsDropdownRecordDtosNotFound{}
}

/*
FlavorsDropdownRecordDtosNotFound describes a response with status code 404, with default header values.

Not Found
*/
type FlavorsDropdownRecordDtosNotFound struct {
	Payload *FlavorsDropdownRecordDtosNotFoundBody
}

// IsSuccess returns true when this flavors dropdown record dtos not found response has a 2xx status code
func (o *FlavorsDropdownRecordDtosNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors dropdown record dtos not found response has a 3xx status code
func (o *FlavorsDropdownRecordDtosNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors dropdown record dtos not found response has a 4xx status code
func (o *FlavorsDropdownRecordDtosNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this flavors dropdown record dtos not found response has a 5xx status code
func (o *FlavorsDropdownRecordDtosNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors dropdown record dtos not found response a status code equal to that given
func (o *FlavorsDropdownRecordDtosNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *FlavorsDropdownRecordDtosNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosNotFound  %+v", 404, o.Payload)
}

func (o *FlavorsDropdownRecordDtosNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosNotFound  %+v", 404, o.Payload)
}

func (o *FlavorsDropdownRecordDtosNotFound) GetPayload() *FlavorsDropdownRecordDtosNotFoundBody {
	return o.Payload
}

func (o *FlavorsDropdownRecordDtosNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(FlavorsDropdownRecordDtosNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsDropdownRecordDtosInternalServerError creates a FlavorsDropdownRecordDtosInternalServerError with default headers values
func NewFlavorsDropdownRecordDtosInternalServerError() *FlavorsDropdownRecordDtosInternalServerError {
	return &FlavorsDropdownRecordDtosInternalServerError{}
}

/*
FlavorsDropdownRecordDtosInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type FlavorsDropdownRecordDtosInternalServerError struct {
}

// IsSuccess returns true when this flavors dropdown record dtos internal server error response has a 2xx status code
func (o *FlavorsDropdownRecordDtosInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors dropdown record dtos internal server error response has a 3xx status code
func (o *FlavorsDropdownRecordDtosInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors dropdown record dtos internal server error response has a 4xx status code
func (o *FlavorsDropdownRecordDtosInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this flavors dropdown record dtos internal server error response has a 5xx status code
func (o *FlavorsDropdownRecordDtosInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this flavors dropdown record dtos internal server error response a status code equal to that given
func (o *FlavorsDropdownRecordDtosInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *FlavorsDropdownRecordDtosInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosInternalServerError ", 500)
}

func (o *FlavorsDropdownRecordDtosInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosInternalServerError ", 500)
}

func (o *FlavorsDropdownRecordDtosInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
FlavorsDropdownRecordDtosBadRequestBodyItems0 flavors dropdown record dtos bad request body items0
swagger:model FlavorsDropdownRecordDtosBadRequestBodyItems0
*/
type FlavorsDropdownRecordDtosBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this flavors dropdown record dtos bad request body items0
func (o *FlavorsDropdownRecordDtosBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this flavors dropdown record dtos bad request body items0 based on context it is used
func (o *FlavorsDropdownRecordDtosBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *FlavorsDropdownRecordDtosBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *FlavorsDropdownRecordDtosBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res FlavorsDropdownRecordDtosBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
FlavorsDropdownRecordDtosForbiddenBody flavors dropdown record dtos forbidden body
swagger:model FlavorsDropdownRecordDtosForbiddenBody
*/
type FlavorsDropdownRecordDtosForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this flavors dropdown record dtos forbidden body
func (o *FlavorsDropdownRecordDtosForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this flavors dropdown record dtos forbidden body based on context it is used
func (o *FlavorsDropdownRecordDtosForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *FlavorsDropdownRecordDtosForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *FlavorsDropdownRecordDtosForbiddenBody) UnmarshalBinary(b []byte) error {
	var res FlavorsDropdownRecordDtosForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
FlavorsDropdownRecordDtosNotFoundBody flavors dropdown record dtos not found body
swagger:model FlavorsDropdownRecordDtosNotFoundBody
*/
type FlavorsDropdownRecordDtosNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this flavors dropdown record dtos not found body
func (o *FlavorsDropdownRecordDtosNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this flavors dropdown record dtos not found body based on context it is used
func (o *FlavorsDropdownRecordDtosNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *FlavorsDropdownRecordDtosNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *FlavorsDropdownRecordDtosNotFoundBody) UnmarshalBinary(b []byte) error {
	var res FlavorsDropdownRecordDtosNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
FlavorsDropdownRecordDtosOKBodyItems0 flavors dropdown record dtos o k body items0
swagger:model FlavorsDropdownRecordDtosOKBodyItems0
*/
type FlavorsDropdownRecordDtosOKBodyItems0 struct {

	// cloud type
	CloudType string `json:"cloudType,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// projects
	Projects []*FlavorsDropdownRecordDtosOKBodyItems0ProjectsItems0 `json:"projects"`
}

// Validate validates this flavors dropdown record dtos o k body items0
func (o *FlavorsDropdownRecordDtosOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateProjects(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *FlavorsDropdownRecordDtosOKBodyItems0) validateProjects(formats strfmt.Registry) error {
	if swag.IsZero(o.Projects) { // not required
		return nil
	}

	for i := 0; i < len(o.Projects); i++ {
		if swag.IsZero(o.Projects[i]) { // not required
			continue
		}

		if o.Projects[i] != nil {
			if err := o.Projects[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("projects" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("projects" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this flavors dropdown record dtos o k body items0 based on the context it is used
func (o *FlavorsDropdownRecordDtosOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateProjects(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *FlavorsDropdownRecordDtosOKBodyItems0) contextValidateProjects(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Projects); i++ {

		if o.Projects[i] != nil {
			if err := o.Projects[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("projects" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("projects" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *FlavorsDropdownRecordDtosOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *FlavorsDropdownRecordDtosOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res FlavorsDropdownRecordDtosOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
FlavorsDropdownRecordDtosOKBodyItems0ProjectsItems0 flavors dropdown record dtos o k body items0 projects items0
swagger:model FlavorsDropdownRecordDtosOKBodyItems0ProjectsItems0
*/
type FlavorsDropdownRecordDtosOKBodyItems0ProjectsItems0 struct {

	// flavors
	Flavors []string `json:"flavors"`

	// id
	ID int32 `json:"id,omitempty"`

	// images
	Images []string `json:"images"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this flavors dropdown record dtos o k body items0 projects items0
func (o *FlavorsDropdownRecordDtosOKBodyItems0ProjectsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this flavors dropdown record dtos o k body items0 projects items0 based on context it is used
func (o *FlavorsDropdownRecordDtosOKBodyItems0ProjectsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *FlavorsDropdownRecordDtosOKBodyItems0ProjectsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *FlavorsDropdownRecordDtosOKBodyItems0ProjectsItems0) UnmarshalBinary(b []byte) error {
	var res FlavorsDropdownRecordDtosOKBodyItems0ProjectsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
FlavorsDropdownRecordDtosUnauthorizedBody flavors dropdown record dtos unauthorized body
swagger:model FlavorsDropdownRecordDtosUnauthorizedBody
*/
type FlavorsDropdownRecordDtosUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this flavors dropdown record dtos unauthorized body
func (o *FlavorsDropdownRecordDtosUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this flavors dropdown record dtos unauthorized body based on context it is used
func (o *FlavorsDropdownRecordDtosUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *FlavorsDropdownRecordDtosUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *FlavorsDropdownRecordDtosUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res FlavorsDropdownRecordDtosUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
