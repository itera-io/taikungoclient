// Code generated by go-swagger; DO NOT EDIT.

package flavors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// FlavorsDropdownRecordDtosReader is a Reader for the FlavorsDropdownRecordDtos structure.
type FlavorsDropdownRecordDtosReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FlavorsDropdownRecordDtosReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFlavorsDropdownRecordDtosOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFlavorsDropdownRecordDtosBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewFlavorsDropdownRecordDtosUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFlavorsDropdownRecordDtosForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFlavorsDropdownRecordDtosNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewFlavorsDropdownRecordDtosInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFlavorsDropdownRecordDtosOK creates a FlavorsDropdownRecordDtosOK with default headers values
func NewFlavorsDropdownRecordDtosOK() *FlavorsDropdownRecordDtosOK {
	return &FlavorsDropdownRecordDtosOK{}
}

/*
FlavorsDropdownRecordDtosOK describes a response with status code 200, with default header values.

Success
*/
type FlavorsDropdownRecordDtosOK struct {
	Payload []*models.CloudCredentialsDropdownRecordDto
}

// IsSuccess returns true when this flavors dropdown record dtos o k response has a 2xx status code
func (o *FlavorsDropdownRecordDtosOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this flavors dropdown record dtos o k response has a 3xx status code
func (o *FlavorsDropdownRecordDtosOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors dropdown record dtos o k response has a 4xx status code
func (o *FlavorsDropdownRecordDtosOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this flavors dropdown record dtos o k response has a 5xx status code
func (o *FlavorsDropdownRecordDtosOK) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors dropdown record dtos o k response a status code equal to that given
func (o *FlavorsDropdownRecordDtosOK) IsCode(code int) bool {
	return code == 200
}

func (o *FlavorsDropdownRecordDtosOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosOK  %+v", 200, o.Payload)
}

func (o *FlavorsDropdownRecordDtosOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosOK  %+v", 200, o.Payload)
}

func (o *FlavorsDropdownRecordDtosOK) GetPayload() []*models.CloudCredentialsDropdownRecordDto {
	return o.Payload
}

func (o *FlavorsDropdownRecordDtosOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsDropdownRecordDtosBadRequest creates a FlavorsDropdownRecordDtosBadRequest with default headers values
func NewFlavorsDropdownRecordDtosBadRequest() *FlavorsDropdownRecordDtosBadRequest {
	return &FlavorsDropdownRecordDtosBadRequest{}
}

/*
FlavorsDropdownRecordDtosBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type FlavorsDropdownRecordDtosBadRequest struct {
	Payload []*models.Error
}

// IsSuccess returns true when this flavors dropdown record dtos bad request response has a 2xx status code
func (o *FlavorsDropdownRecordDtosBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors dropdown record dtos bad request response has a 3xx status code
func (o *FlavorsDropdownRecordDtosBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors dropdown record dtos bad request response has a 4xx status code
func (o *FlavorsDropdownRecordDtosBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this flavors dropdown record dtos bad request response has a 5xx status code
func (o *FlavorsDropdownRecordDtosBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors dropdown record dtos bad request response a status code equal to that given
func (o *FlavorsDropdownRecordDtosBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *FlavorsDropdownRecordDtosBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosBadRequest  %+v", 400, o.Payload)
}

func (o *FlavorsDropdownRecordDtosBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosBadRequest  %+v", 400, o.Payload)
}

func (o *FlavorsDropdownRecordDtosBadRequest) GetPayload() []*models.Error {
	return o.Payload
}

func (o *FlavorsDropdownRecordDtosBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsDropdownRecordDtosUnauthorized creates a FlavorsDropdownRecordDtosUnauthorized with default headers values
func NewFlavorsDropdownRecordDtosUnauthorized() *FlavorsDropdownRecordDtosUnauthorized {
	return &FlavorsDropdownRecordDtosUnauthorized{}
}

/*
FlavorsDropdownRecordDtosUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type FlavorsDropdownRecordDtosUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this flavors dropdown record dtos unauthorized response has a 2xx status code
func (o *FlavorsDropdownRecordDtosUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors dropdown record dtos unauthorized response has a 3xx status code
func (o *FlavorsDropdownRecordDtosUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors dropdown record dtos unauthorized response has a 4xx status code
func (o *FlavorsDropdownRecordDtosUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this flavors dropdown record dtos unauthorized response has a 5xx status code
func (o *FlavorsDropdownRecordDtosUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors dropdown record dtos unauthorized response a status code equal to that given
func (o *FlavorsDropdownRecordDtosUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *FlavorsDropdownRecordDtosUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosUnauthorized  %+v", 401, o.Payload)
}

func (o *FlavorsDropdownRecordDtosUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosUnauthorized  %+v", 401, o.Payload)
}

func (o *FlavorsDropdownRecordDtosUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *FlavorsDropdownRecordDtosUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsDropdownRecordDtosForbidden creates a FlavorsDropdownRecordDtosForbidden with default headers values
func NewFlavorsDropdownRecordDtosForbidden() *FlavorsDropdownRecordDtosForbidden {
	return &FlavorsDropdownRecordDtosForbidden{}
}

/*
FlavorsDropdownRecordDtosForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type FlavorsDropdownRecordDtosForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this flavors dropdown record dtos forbidden response has a 2xx status code
func (o *FlavorsDropdownRecordDtosForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors dropdown record dtos forbidden response has a 3xx status code
func (o *FlavorsDropdownRecordDtosForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors dropdown record dtos forbidden response has a 4xx status code
func (o *FlavorsDropdownRecordDtosForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this flavors dropdown record dtos forbidden response has a 5xx status code
func (o *FlavorsDropdownRecordDtosForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors dropdown record dtos forbidden response a status code equal to that given
func (o *FlavorsDropdownRecordDtosForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *FlavorsDropdownRecordDtosForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosForbidden  %+v", 403, o.Payload)
}

func (o *FlavorsDropdownRecordDtosForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosForbidden  %+v", 403, o.Payload)
}

func (o *FlavorsDropdownRecordDtosForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *FlavorsDropdownRecordDtosForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsDropdownRecordDtosNotFound creates a FlavorsDropdownRecordDtosNotFound with default headers values
func NewFlavorsDropdownRecordDtosNotFound() *FlavorsDropdownRecordDtosNotFound {
	return &FlavorsDropdownRecordDtosNotFound{}
}

/*
FlavorsDropdownRecordDtosNotFound describes a response with status code 404, with default header values.

Not Found
*/
type FlavorsDropdownRecordDtosNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this flavors dropdown record dtos not found response has a 2xx status code
func (o *FlavorsDropdownRecordDtosNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors dropdown record dtos not found response has a 3xx status code
func (o *FlavorsDropdownRecordDtosNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors dropdown record dtos not found response has a 4xx status code
func (o *FlavorsDropdownRecordDtosNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this flavors dropdown record dtos not found response has a 5xx status code
func (o *FlavorsDropdownRecordDtosNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors dropdown record dtos not found response a status code equal to that given
func (o *FlavorsDropdownRecordDtosNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *FlavorsDropdownRecordDtosNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosNotFound  %+v", 404, o.Payload)
}

func (o *FlavorsDropdownRecordDtosNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosNotFound  %+v", 404, o.Payload)
}

func (o *FlavorsDropdownRecordDtosNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *FlavorsDropdownRecordDtosNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsDropdownRecordDtosInternalServerError creates a FlavorsDropdownRecordDtosInternalServerError with default headers values
func NewFlavorsDropdownRecordDtosInternalServerError() *FlavorsDropdownRecordDtosInternalServerError {
	return &FlavorsDropdownRecordDtosInternalServerError{}
}

/*
FlavorsDropdownRecordDtosInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type FlavorsDropdownRecordDtosInternalServerError struct {
}

// IsSuccess returns true when this flavors dropdown record dtos internal server error response has a 2xx status code
func (o *FlavorsDropdownRecordDtosInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors dropdown record dtos internal server error response has a 3xx status code
func (o *FlavorsDropdownRecordDtosInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors dropdown record dtos internal server error response has a 4xx status code
func (o *FlavorsDropdownRecordDtosInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this flavors dropdown record dtos internal server error response has a 5xx status code
func (o *FlavorsDropdownRecordDtosInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this flavors dropdown record dtos internal server error response a status code equal to that given
func (o *FlavorsDropdownRecordDtosInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *FlavorsDropdownRecordDtosInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosInternalServerError ", 500)
}

func (o *FlavorsDropdownRecordDtosInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/credentials/dropdown/list][%d] flavorsDropdownRecordDtosInternalServerError ", 500)
}

func (o *FlavorsDropdownRecordDtosInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
