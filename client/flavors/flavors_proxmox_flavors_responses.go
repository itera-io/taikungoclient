// Code generated by go-swagger; DO NOT EDIT.

package flavors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// FlavorsProxmoxFlavorsReader is a Reader for the FlavorsProxmoxFlavors structure.
type FlavorsProxmoxFlavorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FlavorsProxmoxFlavorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFlavorsProxmoxFlavorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFlavorsProxmoxFlavorsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewFlavorsProxmoxFlavorsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFlavorsProxmoxFlavorsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFlavorsProxmoxFlavorsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewFlavorsProxmoxFlavorsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFlavorsProxmoxFlavorsOK creates a FlavorsProxmoxFlavorsOK with default headers values
func NewFlavorsProxmoxFlavorsOK() *FlavorsProxmoxFlavorsOK {
	return &FlavorsProxmoxFlavorsOK{}
}

/*
FlavorsProxmoxFlavorsOK describes a response with status code 200, with default header values.

Success
*/
type FlavorsProxmoxFlavorsOK struct {
	Payload *models.ProxmoxFlavorList
}

// IsSuccess returns true when this flavors proxmox flavors o k response has a 2xx status code
func (o *FlavorsProxmoxFlavorsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this flavors proxmox flavors o k response has a 3xx status code
func (o *FlavorsProxmoxFlavorsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors proxmox flavors o k response has a 4xx status code
func (o *FlavorsProxmoxFlavorsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this flavors proxmox flavors o k response has a 5xx status code
func (o *FlavorsProxmoxFlavorsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors proxmox flavors o k response a status code equal to that given
func (o *FlavorsProxmoxFlavorsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the flavors proxmox flavors o k response
func (o *FlavorsProxmoxFlavorsOK) Code() int {
	return 200
}

func (o *FlavorsProxmoxFlavorsOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsProxmoxFlavorsOK  %+v", 200, o.Payload)
}

func (o *FlavorsProxmoxFlavorsOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsProxmoxFlavorsOK  %+v", 200, o.Payload)
}

func (o *FlavorsProxmoxFlavorsOK) GetPayload() *models.ProxmoxFlavorList {
	return o.Payload
}

func (o *FlavorsProxmoxFlavorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProxmoxFlavorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsProxmoxFlavorsBadRequest creates a FlavorsProxmoxFlavorsBadRequest with default headers values
func NewFlavorsProxmoxFlavorsBadRequest() *FlavorsProxmoxFlavorsBadRequest {
	return &FlavorsProxmoxFlavorsBadRequest{}
}

/*
FlavorsProxmoxFlavorsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type FlavorsProxmoxFlavorsBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this flavors proxmox flavors bad request response has a 2xx status code
func (o *FlavorsProxmoxFlavorsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors proxmox flavors bad request response has a 3xx status code
func (o *FlavorsProxmoxFlavorsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors proxmox flavors bad request response has a 4xx status code
func (o *FlavorsProxmoxFlavorsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this flavors proxmox flavors bad request response has a 5xx status code
func (o *FlavorsProxmoxFlavorsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors proxmox flavors bad request response a status code equal to that given
func (o *FlavorsProxmoxFlavorsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the flavors proxmox flavors bad request response
func (o *FlavorsProxmoxFlavorsBadRequest) Code() int {
	return 400
}

func (o *FlavorsProxmoxFlavorsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsProxmoxFlavorsBadRequest  %+v", 400, o.Payload)
}

func (o *FlavorsProxmoxFlavorsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsProxmoxFlavorsBadRequest  %+v", 400, o.Payload)
}

func (o *FlavorsProxmoxFlavorsBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *FlavorsProxmoxFlavorsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsProxmoxFlavorsUnauthorized creates a FlavorsProxmoxFlavorsUnauthorized with default headers values
func NewFlavorsProxmoxFlavorsUnauthorized() *FlavorsProxmoxFlavorsUnauthorized {
	return &FlavorsProxmoxFlavorsUnauthorized{}
}

/*
FlavorsProxmoxFlavorsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type FlavorsProxmoxFlavorsUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this flavors proxmox flavors unauthorized response has a 2xx status code
func (o *FlavorsProxmoxFlavorsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors proxmox flavors unauthorized response has a 3xx status code
func (o *FlavorsProxmoxFlavorsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors proxmox flavors unauthorized response has a 4xx status code
func (o *FlavorsProxmoxFlavorsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this flavors proxmox flavors unauthorized response has a 5xx status code
func (o *FlavorsProxmoxFlavorsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors proxmox flavors unauthorized response a status code equal to that given
func (o *FlavorsProxmoxFlavorsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the flavors proxmox flavors unauthorized response
func (o *FlavorsProxmoxFlavorsUnauthorized) Code() int {
	return 401
}

func (o *FlavorsProxmoxFlavorsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsProxmoxFlavorsUnauthorized  %+v", 401, o.Payload)
}

func (o *FlavorsProxmoxFlavorsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsProxmoxFlavorsUnauthorized  %+v", 401, o.Payload)
}

func (o *FlavorsProxmoxFlavorsUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *FlavorsProxmoxFlavorsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsProxmoxFlavorsForbidden creates a FlavorsProxmoxFlavorsForbidden with default headers values
func NewFlavorsProxmoxFlavorsForbidden() *FlavorsProxmoxFlavorsForbidden {
	return &FlavorsProxmoxFlavorsForbidden{}
}

/*
FlavorsProxmoxFlavorsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type FlavorsProxmoxFlavorsForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this flavors proxmox flavors forbidden response has a 2xx status code
func (o *FlavorsProxmoxFlavorsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors proxmox flavors forbidden response has a 3xx status code
func (o *FlavorsProxmoxFlavorsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors proxmox flavors forbidden response has a 4xx status code
func (o *FlavorsProxmoxFlavorsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this flavors proxmox flavors forbidden response has a 5xx status code
func (o *FlavorsProxmoxFlavorsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors proxmox flavors forbidden response a status code equal to that given
func (o *FlavorsProxmoxFlavorsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the flavors proxmox flavors forbidden response
func (o *FlavorsProxmoxFlavorsForbidden) Code() int {
	return 403
}

func (o *FlavorsProxmoxFlavorsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsProxmoxFlavorsForbidden  %+v", 403, o.Payload)
}

func (o *FlavorsProxmoxFlavorsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsProxmoxFlavorsForbidden  %+v", 403, o.Payload)
}

func (o *FlavorsProxmoxFlavorsForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *FlavorsProxmoxFlavorsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsProxmoxFlavorsNotFound creates a FlavorsProxmoxFlavorsNotFound with default headers values
func NewFlavorsProxmoxFlavorsNotFound() *FlavorsProxmoxFlavorsNotFound {
	return &FlavorsProxmoxFlavorsNotFound{}
}

/*
FlavorsProxmoxFlavorsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type FlavorsProxmoxFlavorsNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this flavors proxmox flavors not found response has a 2xx status code
func (o *FlavorsProxmoxFlavorsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors proxmox flavors not found response has a 3xx status code
func (o *FlavorsProxmoxFlavorsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors proxmox flavors not found response has a 4xx status code
func (o *FlavorsProxmoxFlavorsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this flavors proxmox flavors not found response has a 5xx status code
func (o *FlavorsProxmoxFlavorsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this flavors proxmox flavors not found response a status code equal to that given
func (o *FlavorsProxmoxFlavorsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the flavors proxmox flavors not found response
func (o *FlavorsProxmoxFlavorsNotFound) Code() int {
	return 404
}

func (o *FlavorsProxmoxFlavorsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsProxmoxFlavorsNotFound  %+v", 404, o.Payload)
}

func (o *FlavorsProxmoxFlavorsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsProxmoxFlavorsNotFound  %+v", 404, o.Payload)
}

func (o *FlavorsProxmoxFlavorsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *FlavorsProxmoxFlavorsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFlavorsProxmoxFlavorsInternalServerError creates a FlavorsProxmoxFlavorsInternalServerError with default headers values
func NewFlavorsProxmoxFlavorsInternalServerError() *FlavorsProxmoxFlavorsInternalServerError {
	return &FlavorsProxmoxFlavorsInternalServerError{}
}

/*
FlavorsProxmoxFlavorsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type FlavorsProxmoxFlavorsInternalServerError struct {
}

// IsSuccess returns true when this flavors proxmox flavors internal server error response has a 2xx status code
func (o *FlavorsProxmoxFlavorsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this flavors proxmox flavors internal server error response has a 3xx status code
func (o *FlavorsProxmoxFlavorsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this flavors proxmox flavors internal server error response has a 4xx status code
func (o *FlavorsProxmoxFlavorsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this flavors proxmox flavors internal server error response has a 5xx status code
func (o *FlavorsProxmoxFlavorsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this flavors proxmox flavors internal server error response a status code equal to that given
func (o *FlavorsProxmoxFlavorsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the flavors proxmox flavors internal server error response
func (o *FlavorsProxmoxFlavorsInternalServerError) Code() int {
	return 500
}

func (o *FlavorsProxmoxFlavorsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsProxmoxFlavorsInternalServerError ", 500)
}

func (o *FlavorsProxmoxFlavorsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Flavors/proxmox/{cloudId}][%d] flavorsProxmoxFlavorsInternalServerError ", 500)
}

func (o *FlavorsProxmoxFlavorsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
