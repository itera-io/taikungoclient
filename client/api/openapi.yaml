openapi: 3.0.4
info:
  contact:
    email: noreply@taikun.cloud
    name: taikun cloud
    url: http://taikun.cloud/
  description: This Api will be responsible for overall data distribution and authorization.
  title: Taikun - WebApi
  version: v1
servers:
- url: /
security:
- Bearer: []
paths:
  /api/v1/aws/validate-owners:
    post:
      operationId: aws-validate-owners
      requestBody:
        content:
          application/json:
            example:
              cloudId: 1
              owners:
              - amazon
            schema:
              $ref: "#/components/schemas/AwsValidateOwnerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Aws validate owners
      tags:
      - AWS cloud credential
  /api/v1/aws/zones:
    post:
      operationId: aws-zones
      requestBody:
        content:
          application/json:
            example:
              region: ap-south-1
              awsAccessKeyId: X9BZGP8TSTB7D4K6N9U8
              awsSecretAccessKey: rd98DUXrLkcxI5rqcimJD2BkrsRUZmbqBSwcAcIm
              cloudId: 1
            schema:
              $ref: "#/components/schemas/AmazonAvailabilityZonesCommand"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - eu-west-1a
                totalCount: 1
              schema:
                $ref: "#/components/schemas/AzResult"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch Aws zones
      tags:
      - AWS cloud credential
  /api/v1/aws/create:
    post:
      operationId: aws-create
      requestBody:
        content:
          application/json:
            example:
              name: taikun
              awsSecretAccessKey: rd98DUXrLkcxI5rqcimJD2BkrsRUZmbqBSwcAcIm
              awsAccessKeyId: X9BZGP8TSTB7D4K6N9U8
              azCount: 1
              awsRegion: ap-south-1
              organizationId: 1
            schema:
              $ref: "#/components/schemas/CreateAwsCloudCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add Aws credentials
      tags:
      - AWS cloud credential
  /api/v1/aws/eks-auth-info:
    post:
      operationId: aws-get-eks-auth-info
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetEksClusterAuthCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AwsEksClusterDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get EKS auth info
      tags:
      - AWS cloud credential
  /api/v1/aws/regions:
    post:
      operationId: aws-regionlist
      requestBody:
        content:
          application/json:
            example:
              awsAccessKeyId: X9BZGP8TSTB7D4K6N9U8
              awsSecretAccessKey: rd98DUXrLkcxI5rqcimJD2BkrsRUZmbqBSwcAcIm
              cloudId: 1
            schema:
              $ref: "#/components/schemas/RegionListCommand"
      responses:
        "200":
          content:
            application/json:
              example:
              - name: taikun
                region: ap-south-1
              schema:
                items:
                  $ref: "#/components/schemas/AwsRegionDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve aws regions list
      tags:
      - AWS cloud credential
  /api/v1/aws/update:
    post:
      operationId: aws-update
      requestBody:
        content:
          application/json:
            example:
              id: 1
              name: taikun
              awsSecretAccessKey: rd98DUXrLkcxI5rqcimJD2BkrsRUZmbqBSwcAcIm
              awsAccessKeyId: X9BZGP8TSTB7D4K6N9U8
            schema:
              $ref: "#/components/schemas/UpdateAwsCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update AWS credentials
      tags:
      - AWS cloud credential
  /api/v1/aws/owners:
    get:
      operationId: aws-owners
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1"
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonStringBasedDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve aws verified owner list
      tags:
      - AWS cloud credential
  /api/v1/aws/eks-clusters/{cloudId}:
    get:
      operationId: aws-eks-clusters
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Region
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve eks clusters list
      tags:
      - AWS cloud credential
  /api/v1/aws/eks-node-groups/{projectId}:
    get:
      operationId: aws-eks-node-groups
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AwsEksNodeGroupDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve eks node group list
      tags:
      - AWS cloud credential
  /api/v1/aws/list:
    get:
      description: |-
        <div style='font-family: Arial, sans-serif;'>
                                <h2 style='color: #4A90E2;'>Description</h2>
                                <ul><li><b>SortBy</b> - Options: <i>amazonRegion</i>, <i>organizationName</i>, <i>createdAt</i><li><b>SortDirection</b> - Options: <i>asc</i>, <i>desc</i><li><b>Search</b> - Options: <i>name</i>, <i>organizationName</i></ul></div>
      operationId: aws-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - id: 1
                  projectCount: 1
                  isLocked: false
                  name: taikun
                  region: taikun
                  availabilityZones: []
                  availabilityZonesCount: 0
                  projects:
                  - id: 1
                    name: taikun
                  createdBy: taikun
                  lastModified: 2023-11-21T12:09:23Z
                  lastModifiedBy: taikun
                  isDefault: false
                  organizationId: 1
                  organizationName: taikun.cloud a.s.
                  createdAt: 2023-11-21T12:09:23Z
                  continentName: Europe
                totalCount: 0
              schema:
                $ref: "#/components/schemas/AwsCredentialList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve list of aws cloud credentials
      tags:
      - AWS cloud credential
  /api/v1/accessprofiles/update/{id}:
    put:
      operationId: accessprofiles-update
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: taikun
              httpProxy: http://185.185.185.22
            schema:
              $ref: "#/components/schemas/UpdateAccessProfileDto"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update access profile
      tags:
      - Access Profiles
  /api/v1/accessprofiles/create:
    post:
      operationId: accessprofiles-create
      requestBody:
        content:
          application/json:
            example:
              name: taikun
              httpProxy: http://185.185.185.22
              organizationId: null
              sshUsers:
              - name: taikun
                sshPublicKey: |-
                  ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAklOUpkDHrfHY17SbrmTIpNLTGK9Tjom/BWDSU
                  GPl+nafzlHDTYW7hdI4yZ5ew18JH4JW9jbhUFrviQzM7xlELEVf4h9lFX5QVkbPppSwg0cda3
                  Pbv7kOdJ/MTyBlWXFCR+HAo3FXRitBqxiX1nKhXpHAZsMciLq8V6RjsNAQwdsdMFvSlVK/7XA
                  t3FaoJoAsncM1Q9x5+3V0Ww68/eIFmb1zuUFljQJKprrX88XypNDvjYNby6vw/Pb0rwert/En
                  mZ+AW4OZPnTPI89ZPmVMLuayrD2cE86Z/il8b+gw3r3+1nKatmIkjn2so1d01QraTlMqVSsbx
                  NrRFi9wrf+M7Q== taikun@taikun.local
              dnsServers:
              - address: 8.8.8.8
              ntpServers:
              - address: 8.8.8.8
              allowedHosts:
              - description: taikun
                ipAddress: 8.8.8.8
                maskBits: 24
            schema:
              $ref: "#/components/schemas/CreateAccessProfileCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create access profile
      tags:
      - Access Profiles
  /api/v1/accessprofiles/lockmanager:
    post:
      operationId: accessprofiles-lock-manager
      requestBody:
        content:
          application/json:
            example:
              id: 1
              mode: lock|unlock
            schema:
              $ref: "#/components/schemas/AccessProfilesLockManagementCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Lock/unlock access profiles
      tags:
      - Access Profiles
  /api/v1/accessprofiles/list:
    get:
      operationId: accessprofiles-dropdown
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          default: 1000
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve access profiles by organization Id
      tags:
      - Access Profiles
  /api/v1/accessprofiles:
    get:
      operationId: accessprofiles-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - id: 1
                  name: taikun
                  httpProxy: http://185.185.185.22
                  organizationId: 1
                  organizationName: taikun
                  isLocked: false
                  dnsServers:
                  - id: 1
                    address: 8.8.8.8
                  ntpServers:
                  - id: 1
                    address: 8.8.8.8
                  allowedHosts:
                  - id: 1
                    description: taikun
                    ipAddress: 8.8.8.8
                    maskBits: 24
                    accessProfileId: 1
                    accessProfileName: taikun
                  projects:
                  - id: 1
                    name: taikun
                  createdBy: taikun
                  lastModified: 2023-11-21T12:09:23Z
                  lastModifiedBy: taikun
                  createdAt: 2023-11-21T12:09:23Z
                totalCount: 0
              schema:
                $ref: "#/components/schemas/AccessProfilesList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all access profiles
      tags:
      - Access Profiles
  /api/v1/accessprofiles/{id}:
    delete:
      operationId: accessprofiles-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete access profile by Id
      tags:
      - Access Profiles
  /api/v1/admin/organizations/add/balance:
    post:
      operationId: admin-add-balance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminAddBalanceCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add balance for organization
      tags:
      - Admin
  /api/v1/admin/cloudcredentials/billing:
    post:
      operationId: admin-billing-operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminBillingOperationCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: "Billing operations: enable/disable billing "
      tags:
      - Admin
  /api/v1/admin/users/create:
    post:
      operationId: admin-create-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminUserCreateCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: User creation for admin
      tags:
      - Admin
  /api/v1/admin/organizations/delete:
    post:
      operationId: admin-delete-org
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminOrganizationsDeleteCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete organization
      tags:
      - Admin
  /api/v1/admin/organizations/extend/trial:
    post:
      operationId: admin-extend-trial-period
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExtendTrialPeriodCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Extend trial period
      tags:
      - Admin
  /api/v1/admin/users/make/csm:
    post:
      operationId: admin-make-csm
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MakeCsmCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: User csm update for admin
      tags:
      - Admin
  /api/v1/admin/users/make/owner:
    post:
      operationId: admin-make-owner
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MakeOwnerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Make owner
      tags:
      - Admin
  /api/v1/admin/users/remove/owner:
    post:
      operationId: admin-remove-owner
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoveOwnerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Remove owner
      tags:
      - Admin
  /api/v1/admin/users/{id}/unlock-2fa:
    post:
      operationId: admin-unlock-2fa
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
        "200":
          description: OK
      summary: Unlock 2FA
      tags:
      - Admin
  /api/v1/admin/projects/update/kubeconfig:
    post:
      operationId: admin-update-project-kube
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminUpdateProjectKubeConfigCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Projects update kube for admin
      tags:
      - Admin
  /api/v1/admin/projects/update/version:
    post:
      operationId: admin-update-project
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminProjectUpdateCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Projects update for admin
      tags:
      - Admin
  /api/v1/admin/users/update/email:
    post:
      operationId: admin-update-users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminUsersUpdateEmailCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: User email update for admin
      tags:
      - Admin
  /api/v1/admin/projects/update/userkube:
    post:
      operationId: admin-update-user-kube
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminUpdateUserKubeConfigCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Projects update kube for admin
      tags:
      - Admin
  /api/v1/admin/users/update/password:
    post:
      operationId: admin-update-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminUsersUpdatePasswordCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: User password update for admin
      tags:
      - Admin
  /api/v1/admin/keycloak/list:
    get:
      operationId: admin-keycloak-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminProjectsList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Keycloak list for admin
      tags:
      - Admin
  /api/v1/admin/organizations/list:
    get:
      operationId: admin-organizations
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: PartnerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminOrganizationsList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: ' Organizations for admin'
      tags:
      - Admin
  /api/v1/admin/projects/list:
    get:
      operationId: admin-project-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminProjectsList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Projects for admin
      tags:
      - Admin
  /api/v1/admin/users/list:
    get:
      operationId: admin-users-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminUsersList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Users for admin
      tags:
      - Admin
  /api/v1/ai-credential/create:
    post:
      operationId: ai-credential-create
      requestBody:
        content:
          application/json:
            example:
              name: taikun
              apiKey: sk-xxxxxxxxx
              organizationId: null
            schema:
              $ref: "#/components/schemas/CreateAiCredentialCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create ai credential
      tags:
      - Ai Credentials
  /api/v1/ai-credential:
    get:
      operationId: ai-credential-dropdown
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                url: null
                name: taikun
                type: Taikun
                isDefault: false
              schema:
                items:
                  $ref: "#/components/schemas/AiCredentialsForOrganizationEntity"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all AI credentials for organization
      tags:
      - Ai Credentials
  /api/v1/ai-credential/list:
    get:
      operationId: ai-credential-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - id: 1
                  url: https://www.google.com
                  name: taikun
                  type: Taikun
                  organizationId: 1
                  organizationName: taikun
                  projects:
                  - id: 1
                    name: taikun
                  isDefault: false
                totalCount: 0
              schema:
                $ref: "#/components/schemas/AiCredentials"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all AI credentials
      tags:
      - Ai Credentials
  /api/v1/ai-credential/{id}:
    delete:
      operationId: ai-credential-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Remove ai credential
      tags:
      - Ai Credentials
  /api/v1/documentation:
    get:
      operationId: documentation-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentationsList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all documentation links
      tags:
      - Alerting Integrations
  /api/v1/alertingintegrations/edit:
    put:
      operationId: alertingintegrations-edit
      requestBody:
        content:
          application/json:
            example:
              id: 1
              url: https://www.google.com
              token: Only if no microsoft teams type
              alertingIntegrationType: Opsgenie
              alertingProfileId: 1
            schema:
              $ref: "#/components/schemas/EditAlertingIntegrationCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Edit alerting profile alerting integration
      tags:
      - Alerting Integrations
  /api/v1/alertingintegrations/create:
    post:
      operationId: alertingintegrations-create
      requestBody:
        content:
          application/json:
            example:
              url: https://www.google.com
              token: Only if no microsoft teams type
              alertingIntegrationType: Opsgenie
              alertingProfileId: 1
            schema:
              $ref: "#/components/schemas/CreateAlertingIntegrationCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create alerting profile alerting integration
      tags:
      - Alerting Integrations
  /api/v1/alertingintegrations/{alertingProfileId}:
    get:
      operationId: alertingintegrations-list
      parameters:
      - explode: false
        in: path
        name: alertingProfileId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                url: https://www.google.com
                token: Only if no microsoft teams type
                alertingIntegrationType: Opsgenie
                alertingProfileName: taikun
              schema:
                items:
                  $ref: "#/components/schemas/AlertingIntegrationsListDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: List alerting integrations by profile id
      tags:
      - Alerting Integrations
  /api/v1/alertingintegrations/{id}:
    delete:
      operationId: alertingintegrations-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete alerting profile alerting integration
      tags:
      - Alerting Integrations
  /api/v1/alertingprofiles/assignemails/{id}:
    put:
      operationId: alertingprofiles-assign-email
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
            - email: taikun@taikun.cloud
            schema:
              items:
                $ref: "#/components/schemas/AlertingEmailDto"
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Assign Alerting emails
      tags:
      - Alerting Profiles
  /api/v1/alertingprofiles/assignwebhooks/{id}:
    put:
      operationId: alertingprofiles-assign-webhooks
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
            - id: 1
              url: https://www.google.com
              headers:
              - id: 1
                key: taikun
                value: taikun
            schema:
              items:
                $ref: "#/components/schemas/AlertingWebhookDto"
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Assign Alerting webhooks
      tags:
      - Alerting Profiles
  /api/v1/alertingprofiles/attach:
    post:
      operationId: alertingprofiles-attach
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttachDetachAlertingProfileCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Attach alerting profile to project
      tags:
      - Alerting Profiles
  /api/v1/alertingprofiles/create:
    post:
      operationId: alertingprofiles-create
      requestBody:
        content:
          application/json:
            example:
              name: taikun
              slackConfigurationId: null
              organizationId: null
              emails:
              - email: taikun@taikun.cloud
              webhooks:
              - id: 1
                url: https://www.google.com
                headers:
                - id: 1
                  key: taikun
                  value: taikun
              alertingIntegrations:
              - url: https://www.google.com
                token: Only if no microsoft teams type
                alertingIntegrationType: Opsgenie
              reminder: Daily
            schema:
              $ref: "#/components/schemas/CreateAlertingProfileCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add Alerting profile
      tags:
      - Alerting Profiles
  /api/v1/alertingprofiles/detach:
    post:
      operationId: alertingprofiles-detach
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttachDetachAlertingProfileCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Detach alerting profile from project
      tags:
      - Alerting Profiles
  /api/v1/alertingprofiles/edit:
    post:
      operationId: alertingprofiles-edit
      requestBody:
        content:
          application/json:
            example:
              id: 1
              name: taikun
              slackConfigurationId: null
              organizationId: null
              reminder: Daily
            schema:
              $ref: "#/components/schemas/UpdateAlertingProfileCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update Alerting profile
      tags:
      - Alerting Profiles
  /api/v1/alertingprofiles/lockmanager:
    post:
      operationId: alertingprofiles-lock-manager
      requestBody:
        content:
          application/json:
            example:
              id: 1
              mode: lock|unlock
            schema:
              $ref: "#/components/schemas/AlertingProfilesLockManagerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Lock/Unlock Alerting profiles
      tags:
      - Alerting Profiles
  /api/v1/alertingprofiles/verifywebhook:
    post:
      operationId: alertingprofiles-verify
      requestBody:
        content:
          application/json:
            example:
              url: https://www.google.com
            schema:
              $ref: "#/components/schemas/VerifyWebhookCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Verify webhook endpoint
      tags:
      - Alerting Profiles
  /api/v1/alertingprofiles/list:
    get:
      operationId: alertingprofiles-dropdown
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all Alerting profiles for organization
      tags:
      - Alerting Profiles
  /api/v1/alertingprofiles:
    get:
      operationId: alertingprofiles-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - id: 1
                  name: taikun
                  organizationId: 1
                  organizationName: taikun
                  slackConfigurationId: 1
                  slackConfigurationName: taikun
                  isLocked: false
                  emails:
                  - email: taikun@taikun.cloud
                  webhooks: []
                  projects: []
                  createdBy: taikun
                  lastModified: 2023-11-21T12:09:23Z
                  lastModifiedBy: taikun
                  reminder: None
                  createdAt: 2023-11-21T12:09:23Z
                totalCount: 0
              schema:
                $ref: "#/components/schemas/AlertingProfilesList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all Alerting profiles
      tags:
      - Alerting Profiles
  /api/v1/alertingprofiles/{id}:
    delete:
      operationId: alertingprofiles-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Remove Alerting profiles by Id
      tags:
      - Alerting Profiles
  /api/v1/allowedhost/edit/{id}:
    put:
      operationId: allowedhost-edit
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: taikun
              ipAddress: 8.8.8.8
              maskBits: 24
            schema:
              $ref: "#/components/schemas/EditAllowedHostDto"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Edit access profile allowed host
      tags:
      - Allowed Host
  /api/v1/allowedhost/create:
    post:
      operationId: allowedhost-create
      requestBody:
        content:
          application/json:
            example:
              accessProfileId: 1
              description: taikun
              ipAddress: 8.8.8.8
              maskBits: 24
            schema:
              $ref: "#/components/schemas/CreateAllowedHostCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create access profile allowed host
      tags:
      - Allowed Host
  /api/v1/allowedhost/list/{accessProfileId}:
    get:
      operationId: allowedhost-list
      parameters:
      - explode: false
        in: path
        name: accessProfileId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - id: 1
                  description: taikun
                  ipAddress: 8.8.8.8
                  maskBits: 24
                  accessProfileId: 1
                  accessProfileName: taikun
                totalCount: 0
              schema:
                $ref: "#/components/schemas/AllowedHostList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: List allowed hosts by access profile id
      tags:
      - Allowed Host
  /api/v1/allowedhost/{id}:
    delete:
      operationId: allowedhost-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete access profile allowed host
      tags:
      - Allowed Host
  /api/v1/repository/bind:
    post:
      operationId: repository-bind
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BindAppRepositoryCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Bind repo to organization
      tags:
      - App repositories
  /api/v1/repository/delete:
    post:
      operationId: repository-delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRepositoryCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Unbind repo from organization
      tags:
      - App repositories
  /api/v1/repository/import:
    post:
      operationId: repository-import
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportRepoCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Import repo to artifact
      tags:
      - App repositories
  /api/v1/repository/unbind:
    post:
      operationId: repository-unbind
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnbindAppRepositoryCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Unbind repo from organization
      tags:
      - App repositories
  /api/v1/repository/update-password:
    post:
      operationId: repository-update-password
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRepoPasswordCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update repo password
      tags:
      - App repositories
  /api/v1/repository/list:
    get:
      operationId: repository-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve repo names
      tags:
      - App repositories
  /api/v1/repository/available:
    get:
      operationId: repository-available-list
      parameters:
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: IsPrivate
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppRepositoryList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve available repositories
      tags:
      - App repositories
  /api/v1/repository/recommended:
    get:
      operationId: repository-recommended-list
      parameters:
      - explode: true
        in: query
        name: IsTaikun
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ArtifactRepositoryDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve taikun recommended repositories
      tags:
      - App repositories
  /api/v1/two-factor-auth/disable:
    post:
      operationId: two-factor-auth-disable
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisableTwoFactorAuthCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Disable 2fa by code
      tags:
      - Auth management
  /api/v1/two-factor-auth/complete:
    post:
      operationId: two-factor-auth-complete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnsureCodesDownloadedCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetToken"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Ensure recovery codes saved
      tags:
      - Auth management
  /api/v1/two-factor-auth/login:
    post:
      operationId: two-factor-auth-login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TwoFactorAuthLoginCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetToken"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Login with TOTP
      tags:
      - Auth management
  /api/v1/two-factor-auth/recovery:
    post:
      operationId: two-factor-auth-recovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TwoFactorAuthRecoveryCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetToken"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Login with recovery code
      tags:
      - Auth management
  /api/v1/two-factor-auth/setup:
    post:
      operationId: two-factor-auth-setup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TwoFactorAuthSetupCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TwoFactorAuthSetupResult"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Setup 2fa
      tags:
      - Auth management
  /api/v1/two-factor-auth/verify:
    post:
      operationId: two-factor-auth-verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TwoFactorAuthVerifyCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TwoFactorAuthVerifyResult"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Verify 2fa code
      tags:
      - Auth management
  /api/v1/auth/forgotpassword:
    post:
      operationId: auth-forgot-password
      requestBody:
        content:
          application/json:
            example:
              email: taikun@taikun.cloud
            schema:
              $ref: "#/components/schemas/ForgotPasswordCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Generate reset password token if you forgot password
      tags:
      - Auth management
  /api/v1/auth/google:
    get:
      operationId: auth-google
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/Void"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Consent to Google
      tags:
      - Auth management
  /api/v1/auth/login:
    post:
      operationId: auth-login
      requestBody:
        content:
          application/json:
            example:
              email: taikun@taikun.cloud
              password: P@ssw0rd!
              mode: token|autoscaling|keycloak
              accessKey: X9BZGP8TSTB7D4K6N9U8
              secretKey: rd98DUXrLkcxI5rqcimJD2BkrsRUZmbqBSwcAcIm
            schema:
              $ref: "#/components/schemas/LoginCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetToken"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Login to API
      tags:
      - Auth management
  /api/v1/auth/refresh:
    post:
      operationId: auth-refresh
      requestBody:
        content:
          application/json:
            example:
              token: eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.xxxxxx
              refreshToken: n2aofltwxksszt-hthvimg
            schema:
              $ref: "#/components/schemas/RefreshTokenCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetToken"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Refresh bearer token that generated automatically by API
      tags:
      - Auth management
  /api/v1/auth/trial:
    post:
      operationId: auth-trial
      requestBody:
        content:
          application/json:
            example:
              organizationName: taikun.cloud a.s.
              username: taikun
              email: taikun@taikun.cloud
            schema:
              $ref: "#/components/schemas/RegistrationCommand"
      responses:
        "200":
          description: OK
      summary: New registration
      tags:
      - Auth management
  /api/v1/auth/resetpassword:
    post:
      operationId: auth-reset-password
      requestBody:
        content:
          application/json:
            example:
              token: eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.xxxxxx
              email: taikun@taikun.cloud
              newPassword: P@ssw0rd!
            schema:
              $ref: "#/components/schemas/ResetPasswordCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Reset password
      tags:
      - Auth management
  /api/v1/autoscaling/disable:
    post:
      operationId: autoscaling-disable
      requestBody:
        content:
          application/json:
            example:
              projectId: 1
            schema:
              $ref: "#/components/schemas/DisableAutoscalingCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Disable autoscaling
      tags:
      - Autoscaling
  /api/v1/autoscaling/edit:
    post:
      operationId: autoscaling-edit
      requestBody:
        content:
          application/json:
            example:
              projectId: 1
              minSize: 1
              maxSize: 1
            schema:
              $ref: "#/components/schemas/EditAutoscalingCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Edit autoscaling
      tags:
      - Autoscaling
  /api/v1/autoscaling/enable:
    post:
      operationId: autoscaling-enable
      requestBody:
        content:
          application/json:
            example:
              id: 1
              minSize: 1
              maxSize: 1
              diskSize: 32212254720
              flavor: m1.medium
              spotEnabled: false
            schema:
              $ref: "#/components/schemas/EnableAutoscalingCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Enable autoscaling
      tags:
      - Autoscaling
  /api/v1/autoscaling/sync:
    post:
      operationId: autoscaling-sync
      requestBody:
        content:
          application/json:
            example:
              projectId: 1
            schema:
              $ref: "#/components/schemas/AutoscalingSyncCommand"
      responses:
        "200":
          description: OK
      summary: Sync autoscaling
      tags:
      - Autoscaling
  /api/v1/azure/aks-clusters:
    post:
      operationId: azure-aks-clusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AksClusterListCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AzureAksClusterDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch AKS cluster list
      tags:
      - Azure cloud credential
  /api/v1/azure/create:
    post:
      operationId: azure-create
      requestBody:
        content:
          application/json:
            example:
              name: taikun
              azureSubscriptionId: 8fc9a50d-d38d-4954-bec6-f1a82a88fd7a
              azureClientId: 10b66731-3ab9-4f50-be3c-c355c83b6c7m
              azureClientSecret: i1T8Q~Kzore4p61zGD3MZWWh1R~VmnrjlOWBsaxm
              azureTenantId: 8e15c4c4-8226-4a29-8ffc-9b4004bf3f4m
              azureLocation: Europe
              azCount: 1
              organizationId: 1
            schema:
              $ref: "#/components/schemas/CreateAzureCloudCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add Azure credentials
      tags:
      - Azure cloud credential
  /api/v1/azure/quota/list:
    post:
      description: |-
        <div style='font-family: Arial, sans-serif;'>
                                <h2 style='color: #4A90E2;'>Description</h2>
                                <ul><li><b>FilterBy</b> - Options: <i>cpu</i>, <i>storage</i>, <i>gallery</i>, <i>general</i></ul></div>
      operationId: azure-dashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AzureDashboardCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AzureQuotaListRecordDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch Azure quota list
      tags:
      - Azure cloud credential
  /api/v1/azure/locations:
    post:
      operationId: azure-locations
      requestBody:
        content:
          application/json:
            example:
              azureSubscriptionId: 8fc9a50d-d38d-4954-bec6-f1a82a88fd7a
              azureClientId: 10b66731-3ab9-4f50-be3c-c355c83b6c7m
              azureClientSecret: i1T8Q~Kzore4p61zGD3MZWWh1R~VmnrjlOWBsaxm
              azureTenantId: 8e15c4c4-8226-4a29-8ffc-9b4004bf3f4m
            schema:
              $ref: "#/components/schemas/AzureLocationsCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch Azure location list
      tags:
      - Azure cloud credential
  /api/v1/azure/subscriptions:
    post:
      operationId: azure-subscriptions
      requestBody:
        content:
          application/json:
            example:
              clientId: 10b66731-3ab9-4f50-be3c-c355c83b6c7m
              clientSecret: i1T8Q~Kzore4p61zGD3MZWWh1R~VmnrjlOWBsaxm
              tenantId: 8e15c4c4-8226-4a29-8ffc-9b4004bf3f4m
            schema:
              $ref: "#/components/schemas/AzureSubscriptionListCommand"
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1"
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonStringBasedDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Azure subscriptions list
      tags:
      - Azure cloud credential
  /api/v1/azure/update:
    post:
      operationId: azure-update
      requestBody:
        content:
          application/json:
            example:
              id: 1
              name: taikun
              azureClientSecret: i1T8Q~Kzore4p61zGD3MZWWh1R~VmnrjlOWBsaxm
              azureClientId: 10b66731-3ab9-4f50-be3c-c355c83b6c7m
            schema:
              $ref: "#/components/schemas/UpdateAzureCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update Azure credentials
      tags:
      - Azure cloud credential
  /api/v1/azure/zones:
    post:
      operationId: azure-zones
      requestBody:
        content:
          application/json:
            example:
              azureSubscriptionId: 8fc9a50d-d38d-4954-bec6-f1a82a88fd7a
              azureClientId: 10b66731-3ab9-4f50-be3c-c355c83b6c7m
              azureClientSecret: i1T8Q~Kzore4p61zGD3MZWWh1R~VmnrjlOWBsaxm
              azureTenantId: 8e15c4c4-8226-4a29-8ffc-9b4004bf3f4m
              azureLocation: 8e15c4c4-8226-4a29-8ffc-9b4004bf3f4m
              cloudId: 1
            schema:
              $ref: "#/components/schemas/AzureZonesCommand"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - eu-west-1a
                totalCount: 1
              schema:
                $ref: "#/components/schemas/AzResult"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch Azure zone list
      tags:
      - Azure cloud credential
  /api/v1/azure/list:
    get:
      description: |-
        <div style='font-family: Arial, sans-serif;'>
                                <h2 style='color: #4A90E2;'>Description</h2>
                                <ul><li><b>SortBy</b> - Options: <i>azureLocation</i>, <i>organizationName</i>, <i>createdAt</i><li><b>SortDirection</b> - Options: <i>asc</i>, <i>desc</i><li><b>Search</b> - Options: <i>name</i>, <i>organizationName</i></ul></div>
      operationId: azure-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - id: 1
                  projectCount: 1
                  isLocked: false
                  name: taikun
                  tenantId: 8e15c4c4-8226-4a29-8ffc-9b4004bf3f4m
                  location: 8e15c4c4-8226-4a29-8ffc-9b4004bf3f4m
                  availabilityZones:
                  - eu-west-1a
                  availabilityZonesCount: 1
                  projects:
                  - id: 1
                    name: taikun
                  createdBy: taikun
                  createdAt: 2023-11-21T12:09:23Z
                  lastModified: 2023-11-21T12:09:23Z
                  lastModifiedBy: taikun
                  isDefault: false
                  organizationId: 1
                  organizationName: taikun.cloud a.s.
                  continentName: Europe
                totalCount: 0
              schema:
                $ref: "#/components/schemas/AzureCredentialList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve list of azure cloud credentials
      tags:
      - Azure cloud credential
  /api/v1/azure/offers/{cloudId}/{publisher}:
    get:
      description: |-
        <div style='font-family: Arial, sans-serif;'>
                                <h2 style='color: #4A90E2;'>Description</h2>
                                <ul><li><b>SortBy</b> - Options: <i>name</i><li><b>SortDirection</b> - Options: <i>asc</i>, <i>desc</i><li><b>Search</b> - Options: <i>azureOffer</i></ul></div>
      operationId: azure-offers
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: publisher
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureOffersList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: List Azure offer list by publisher
      tags:
      - Azure cloud credential
  /api/v1/azure/publishers/{cloudId}:
    get:
      description: |-
        <div style='font-family: Arial, sans-serif;'>
                                <h2 style='color: #4A90E2;'>Description</h2>
                                <ul><li><b>SortBy</b> - Options: <i>name</i><li><b>SortDirection</b> - Options: <i>asc</i>, <i>desc</i><li><b>Search</b> - Options: <i>azurePublisher</i></ul></div>
      operationId: azure-publishers
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzurePublishersList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: List Azure publishers list
      tags:
      - Azure cloud credential
  /api/v1/azure/skus/{cloudId}/{publisher}/{offer}:
    get:
      description: |-
        <div style='font-family: Arial, sans-serif;'>
                                <h2 style='color: #4A90E2;'>Description</h2>
                                <ul><li><b>SortBy</b> - Options: <i>name</i><li><b>SortDirection</b> - Options: <i>asc</i>, <i>desc</i><li><b>Search</b> - Options: <i>azureSku</i></ul></div>
      operationId: azure-skus
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: publisher
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: offer
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureSkusList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: List Azure skus list by publisher and offer
      tags:
      - Azure cloud credential
  /api/v1/backup/create:
    post:
      operationId: backup-create
      requestBody:
        content:
          application/json:
            example:
              name: taikun
              includeNamespaces:
              - taikun.cloud/backup
              cronPeriod: 0 0 12 * * ?
              projectId: 1
              retentionPeriod: 720h
            schema:
              $ref: "#/components/schemas/CreateBackupPolicyCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add backup policy
      tags:
      - Backup policy
  /api/v1/backup/delete/backup:
    post:
      operationId: backup-delete-backup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteBackupCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Remove policy backup
      tags:
      - Backup policy
  /api/v1/backup/delete/location:
    post:
      operationId: backup-delete-backup-location
      requestBody:
        content:
          application/json:
            example:
              projectId: 1
              storageLocation: taikun
            schema:
              $ref: "#/components/schemas/DeleteBackupStorageLocationCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Remove backup location from project
      tags:
      - Backup policy
  /api/v1/backup/delete/restore:
    post:
      operationId: backup-delete-restore
      requestBody:
        content:
          application/json:
            example:
              projectId: 1
              name: taikun
            schema:
              $ref: "#/components/schemas/DeleteRestoreCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Remove policy restore
      tags:
      - Backup policy
  /api/v1/backup/delete/schedule:
    post:
      operationId: backup-delete-schedule
      requestBody:
        content:
          application/json:
            example:
              projectId: 1
              name: taikun
            schema:
              $ref: "#/components/schemas/DeleteScheduleCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Remove policy schedule
      tags:
      - Backup policy
  /api/v1/backup/location:
    post:
      operationId: backup-import-backup-storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportBackupStorageLocationCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Import backup storage from source project to target project
      tags:
      - Backup policy
  /api/v1/backup/restore:
    post:
      operationId: backup-restore-backup
      requestBody:
        content:
          application/json:
            example:
              projectId: 1
              backupName: test-20240109144001
              restoreName: taikun
              includeNamespaces:
              - taikun.cloud/backup
              excludeNamespaces:
              - taikun.cloud/backup
            schema:
              $ref: "#/components/schemas/RestoreBackupCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Restore backup
      tags:
      - Backup policy
  /api/v1/backup/{projectId}/{name}:
    get:
      operationId: backup-by-name
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                includedNamespace:
                - taikun.cloud/backup
                excludedNamespace:
                - taikun.cloud/backup
              schema:
                $ref: "#/components/schemas/BackupDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get backup info by name
      tags:
      - Backup policy
  /api/v1/backup/describe/backup/{projectId}/{name}:
    get:
      operationId: backup-describe-backup
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get backup info by name
      tags:
      - Backup policy
  /api/v1/backup/describe/restore/{projectId}/{name}:
    get:
      operationId: backup-describe-restore
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get restore info by name
      tags:
      - Backup policy
  /api/v1/backup/describe/schedule/{projectId}/{name}:
    get:
      operationId: backup-describe-schedule
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get schedule info by name
      tags:
      - Backup policy
  /api/v1/backup/location/{projectId}:
    get:
      description: |-
        <div style='font-family: Arial, sans-serif;'>
                                <h2 style='color: #4A90E2;'>Description</h2>
                                <ul><li><b>Search</b> - Options: <i>metadataName</i>, <i>namespace</i></ul></div>
      operationId: backup-list-all-backup-storages
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - metadataName: default
                  provider: taikun
                  namespace: velero
                  lastValidated: 2025-09-24T13:35:23.8671989Z
                  createdAt: 2025-09-24T13:35:23.8671989Z
                  accessMode: default
                  phase: Available
                  backupCredentialId: 1
                totalCount: 0
                projects:
                - 1
              schema:
                $ref: "#/components/schemas/ListAllBackupStorageLocations"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: List all backup locations
      tags:
      - Backup policy
  /api/v1/backup/schedules/{projectId}:
    get:
      description: |-
        <div style='font-family: Arial, sans-serif;'>
                                <h2 style='color: #4A90E2;'>Description</h2>
                                <ul><li><b>Search</b> - Options: <i>metadataName</i>, <i>namespace</i></ul></div>
      operationId: backup-list-all-schedules
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - status:
                    lastBackup: 2025-09-24T13:35:23.8671989Z
                    phase: Available
                  metadataName: default
                  namespace: velero
                  createdAt: 2025-09-24T13:35:23.8671989Z
                  schedule: 0 0 12 * * ?
                  ttl: 720h
                  lastBackup: 2025-09-24T13:35:23.8671989Z
                  phase: Available
                  excludedNamespaces:
                  - taikun.cloud/backup
                  includedNamespaces:
                  - taikun.cloud/backup
                totalCount: 0
              schema:
                $ref: "#/components/schemas/ListAllSchedules"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: List all schedules
      tags:
      - Backup policy
  /api/v1/backup/backups/{projectId}:
    get:
      description: |-
        <div style='font-family: Arial, sans-serif;'>
                                <h2 style='color: #4A90E2;'>Description</h2>
                                <ul><li><b>Search</b> - Options: <i>metadataName</i>, <i>namespace</i></ul></div>
      operationId: backup-list-all-backups
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - metadataName: default
                  createdAt: 2025-09-24T13:35:23.8671989Z
                  expiration: 2025-09-24T13:35:23.8671989Z
                  scheduleName: taikun
                  namespace: velero
                  location: storage-location
                  phase: Available
                totalCount: 0
              schema:
                $ref: "#/components/schemas/ListAllBackups"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: List all backups
      tags:
      - Backup policy
  /api/v1/backup/delete-requests/{projectId}:
    get:
      description: |-
        <div style='font-family: Arial, sans-serif;'>
                                <h2 style='color: #4A90E2;'>Description</h2>
                                <ul><li><b>Search</b> - Options: <i>metadataName</i>, <i>namespace</i></ul></div>
      operationId: backup-list-all-delete-backup-requests
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - metadataName: default
                  createdAt: 2025-09-24T13:35:23.8671989Z
                  backupName: test-20240109144001
                  namespace: velero
                  phase: Available
                totalCount: 0
              schema:
                $ref: "#/components/schemas/ListAllDeleteBackupRequests"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: List all delete backup requests
      tags:
      - Backup policy
  /api/v1/backup/restores/{projectId}:
    get:
      description: |-
        <div style='font-family: Arial, sans-serif;'>
                                <h2 style='color: #4A90E2;'>Description</h2>
                                <ul><li><b>Search</b> - Options: <i>metadataName</i>, <i>namespace</i></ul></div>
      operationId: backup-list-all-restores
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - metadataName: default
                  backupName: test-20240109144001
                  scheduleName: taikun
                  namespace: velero
                  excludeNamespaces:
                  - taikun.cloud/backup
                  includeNamespaces:
                  - taikun.cloud/backup
                  completionDateTime: 2025-09-24T13:35:23.8671989+00:00
                  startTimeStamp: 2025-09-24T13:35:23.8671989+00:00
                  createdAt: 2025-09-24T13:35:23.8671989Z
                  warnings: 1
                  phase: Available
                totalCount: 0
              schema:
                $ref: "#/components/schemas/ListAllRestores"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: List all restores
      tags:
      - Backup policy
  /api/v1/billing/create:
    post:
      operationId: billing-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBillingSummaryCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add billing summary
      tags:
      - Billing
  /api/v1/billing/export:
    get:
      operationId: billing-export-csv
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: StartDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: EndDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: IsDeleted
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: IsEmailEnabled
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CsvExporter"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Export Csv
      tags:
      - Billing
  /api/v1/billing/grouped:
    post:
      operationId: billing-grouped-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupedBillingListQuery"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/GroupedBillingInfo"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve a grouped list of billing summaries
      tags:
      - Billing
  /api/v1/billing:
    get:
      operationId: billing-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: StartDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: EndDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: IsDeleted
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingInfo"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve billing info
      tags:
      - Billing
  /api/v1/catalog/{id}/projects:
    post:
      operationId: catalog-add-project
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add projects to catalog
      tags:
      - Catalog
    put:
      operationId: catalog-delete-project
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Remove projects from catalog
      tags:
      - Catalog
  /api/v1/catalog/edit:
    put:
      operationId: catalog-edit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditCatalogCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Edit catalog
      tags:
      - Catalog
  /api/v1/catalog/create:
    post:
      operationId: catalog-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCatalogCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create catalog
      tags:
      - Catalog
  /api/v1/catalog/lockmanager:
    post:
      operationId: catalog-lock
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CatalogLockManagementCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Lock catalog
      tags:
      - Catalog
  /api/v1/catalog/makedefault:
    post:
      operationId: catalog-make-default
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CatalogMakeDefaultCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Make catalog default
      tags:
      - Catalog
  /api/v1/catalog/{id}/details:
    get:
      operationId: catalog-details
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CatalogDetails"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve catalog details by id
      tags:
      - Catalog
  /api/v1/catalog/list:
    get:
      operationId: catalog-dropdown
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CatalogDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Catalog dropdown list for organization
      tags:
      - Catalog
  /api/v1/catalog:
    get:
      operationId: catalog-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CatalogList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Catalog list for organization
      tags:
      - Catalog
  /api/v1/catalog/{id}:
    delete:
      operationId: catalog-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete catalog
      tags:
      - Catalog
  /api/v1/catalog-app/edit/params:
    put:
      operationId: catalog-app-edit-params
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditCatalogAppParamCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Edit catalog app params
      tags:
      - Catalog app
  /api/v1/catalog-app/edit/version:
    put:
      operationId: catalog-app-edit-version
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditCatalogAppVersionCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Edit catalog app version
      tags:
      - Catalog app
  /api/v1/catalog-app/create:
    post:
      operationId: catalog-app-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCatalogAppCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CatalogAppDetailsDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create catalog app
      tags:
      - Catalog app
  /api/v1/catalog-app/lockmanager:
    post:
      operationId: catalog-app-lock-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CatalogAppLockManagement"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Lock catalog app
      tags:
      - Catalog app
  /api/v1/catalog-app/{catalogAppId}:
    get:
      operationId: catalog-app-details
      parameters:
      - explode: false
        in: path
        name: catalogAppId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CatalogAppDetailsDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Catalog App details
      tags:
      - Catalog app
  /api/v1/catalog-app/list:
    get:
      operationId: catalog-app-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: CatalogId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CatalogAppList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Catalog App list
      tags:
      - Catalog app
  /api/v1/catalog-app/params/{catalogAppId}:
    get:
      operationId: catalog-app-param-details
      parameters:
      - explode: false
        in: path
        name: catalogAppId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: IsTaikunLink
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CatalogAppParamsDetailsDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Catalog App param details
      tags:
      - Catalog app
  /api/v1/catalog-app/{id}:
    delete:
      operationId: catalog-app-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete catalog app
      tags:
      - Catalog app
  /api/v1/checker/openai:
    post:
      operationId: checker-open-ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpenAiCheckerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check open-ai token
      tags:
      - Checker
  /api/v1/checker/artifact:
    post:
      operationId: checker-artifact
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArtifactUrlCheckerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check artifact url
      tags:
      - Checker
  /api/v1/checker/cidr:
    post:
      operationId: checker-cidr
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CidrCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check valid cidr format
      tags:
      - Checker
  /api/v1/checker/cron:
    post:
      operationId: checker-cron
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CronJobCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check valid cron job format
      tags:
      - Checker
  /api/v1/checker/dns:
    post:
      operationId: checker-dns
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DnsCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check valid dns format
      tags:
      - Checker
  /api/v1/checker/helm:
    post:
      operationId: checker-helm
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HelmCredentialCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check helm credential
      tags:
      - Checker
  /api/v1/checker/import-cluster-kube-config:
    post:
      operationId: checker-import-cluster-kube-config
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ImportClusterValidateKubeConfigCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check kube config
      tags:
      - Checker
  /api/v1/checker/keycloak:
    post:
      operationId: checker-keycloak
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeycloakCheckerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check keycloak credential
      tags:
      - Checker
  /api/v1/checker/kube-config:
    post:
      operationId: checker-kube-config
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CheckKubeConfigCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check kube config
      tags:
      - Checker
  /api/v1/checker/ntp:
    post:
      operationId: checker-ntp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NtpCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check valid ntp format
      tags:
      - Checker
  /api/v1/checker/prometheus:
    post:
      operationId: checker-prometheus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckPrometheusCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check prometheus credentials
      tags:
      - Checker
  /api/v1/checker/s3:
    post:
      operationId: checker-s3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckS3Command"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check s3 credential
      tags:
      - Checker
  /api/v1/checker/ssh:
    post:
      operationId: checker-ssh
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SshKeyCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check valid ssh key format
      tags:
      - Checker
  /api/v1/checker/yaml:
    post:
      operationId: checker-yaml
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/YamlValidatorCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check yaml file
      tags:
      - Checker
  /api/v1/checker/duplicate:
    post:
      operationId: checker-duplicate-name
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DuplicateNameCheckerCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Duplicate name
      tags:
      - Checker
  /api/v1/checker/project-app:
    post:
      operationId: checker-project-app
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DuplicateProjectAppCheckerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check duplicate project app
      tags:
      - Checker
  /api/v1/checker/node:
    post:
      operationId: checker-node
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NodeCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Duplicate server name checker
      tags:
      - Checker
  /api/v1/checker/organization:
    post:
      operationId: checker-organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationNameCheckerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check duplicate org name
      tags:
      - Checker
  /api/v1/checker/user:
    post:
      operationId: checker-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserExistCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check duplicate username
      tags:
      - Checker
  /api/v1/checker/aws:
    post:
      operationId: checker-aws
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckAwsCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check aws credential
      tags:
      - Checker
  /api/v1/checker/azure:
    post:
      operationId: checker-azure
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckAzureCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check azure credentials
      tags:
      - Checker
  /api/v1/checker/azure/quota/cpu:
    post:
      operationId: checker-azure-quota
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckAzureCpuQuotaCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check azure cpu quota
      tags:
      - Checker
  /api/v1/checker/google:
    post:
      operationId: checker-google
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CheckGoogleCloudCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check google credentials
      tags:
      - Checker
  /api/v1/checker/openstack:
    post:
      operationId: checker-openstack
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckOpenstackCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check openstack credential
      tags:
      - Checker
  /api/v1/checker/openstack-image/{id}:
    post:
      operationId: checker-openstack-taikun-image
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check openstack taikun image
      tags:
      - Checker
  /api/v1/checker/taikun-lb-image/{id}:
    post:
      operationId: checker-openstack-taikun-lb-image
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check openstack taikun lb image
      tags:
      - Checker
  /api/v1/checker/proxmox:
    post:
      operationId: checker-proxmox
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProxmoxCheckerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check proxmox credential
      tags:
      - Checker
  /api/v1/checker/tanzu:
    post:
      operationId: checker-tanzu
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckTanzuCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check tanzu credential
      tags:
      - Checker
  /api/v1/checker/zadara:
    post:
      operationId: checker-zadara
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckZadaraCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check zadara credential
      tags:
      - Checker
  /api/v1/checker/zededa:
    post:
      operationId: checker-zededa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZededaCheckerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Check zededa credential
      tags:
      - Checker
  /api/v1/cloudcredentials/lockmanager:
    post:
      operationId: cloudcredentials-lock-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloudLockManagerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Lock/Unlock cloud credential
      tags:
      - Cloud credential
  /api/v1/cloudcredentials/makedefault:
    post:
      operationId: cloudcredentials-make-default
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CredentialMakeDefaultCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Make cloud credentials default
      tags:
      - Cloud credential
  /api/v1/cloudcredentials/network/ip-addresses:
    post:
      operationId: cloudcredentials-update-ip-addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUsedIpAddressesCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update cloud credential's allocated ip addresses
      tags:
      - Cloud credential
  /api/v1/cloudcredentials/flavors/{cloudId}:
    get:
      operationId: cloudcredentials-all-flavors
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllFlavorsList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all flavors
      tags:
      - Cloud credential
  /api/v1/cloudcredentials:
    get:
      operationId: cloudcredentials-org-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: IsAdmin
        required: true
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: IsInfra
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: CloudType
        required: false
        schema:
          $ref: "#/components/schemas/CloudType"
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CloudCredentialsForOrganizationEntity"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve a list of cloud credentials by organization Id
      tags:
      - Cloud credential
  /api/v1/cloudcredentials/exceeded-quotas:
    get:
      operationId: cloudcredentials-exceeded
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExceededQuotaList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve cloud credentials exceeded quotas
      tags:
      - Cloud credential
  /api/v1/cloudcredentials/{cloudId}:
    delete:
      operationId: cloudcredentials-delete
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Remove cloud credential by cloud Id
      tags:
      - Cloud credential
  /api/v1/common/ip-range-count:
    post:
      operationId: common-ip-range-count
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IpAddressRangeCountCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve ip address range count
      tags:
      - Common
  /api/v1/common/ip-range-list:
    post:
      operationId: common-ip-range-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IpAddressRangeListCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve ip address range list
      tags:
      - Common
  /api/v1/common/enumvalues:
    get:
      operationId: common-enum-values
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnumList"
          description: OK
      summary: Retrieve enum values
      tags:
      - Common
  /api/v1/common/countries:
    get:
      operationId: common-countries
      parameters:
      - explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CountryListDto"
                type: array
          description: OK
      summary: Retrieve country list
      tags:
      - Common
  /api/v1/common/sorting-elements/{type}:
    get:
      operationId: common-sorting-elements
      parameters:
      - explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Retrieve sorting values
      tags:
      - Common
  /api/v1/cronjob/remind-users-by-alerting-profile:
    post:
      operationId: cronjob-remind-users-by-alerting-profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemindUsersByAlertingProfileCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Remind users by alerting profile
      tags:
      - Cron Job Service
  /api/v1/cronjob/auto-upgrade-projects:
    post:
      operationId: cronjob-auto-upgrade-projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AutoUpgradeProjectsCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Upgrade projects that auto-upgrade option enabled
      tags:
      - Cron Job Service
  /api/v1/cronjob/create-key-pool:
    post:
      operationId: cronjob-create-key-pool
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateKeyPoolCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create key pool
      tags:
      - Cron Job Service
  /api/v1/cronjob/delete-kube-configs:
    post:
      operationId: cronjob-delete-kube-configs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRemovedUsersKubeConfigCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Remove deleted user's kube config
      tags:
      - Cron Job Service
  /api/v1/cronjob/delete-removed-spot-instances:
    post:
      operationId: cronjob-delete-removed-spot-instances
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRemovedSpotInstancesCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete removed spot instances
      tags:
      - Cron Job Service
  /api/v1/cronjob/purge-expired-projects:
    post:
      operationId: cronjob-purge-expired-projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurgeExpiredProjectsCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Purge expired projects
      tags:
      - Cron Job Service
  /api/v1/cronjob/project-expiration:
    post:
      operationId: cronjob-email-for-project-expiration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendEmailAboutProjectExpirationCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Send email to the users about project expiration
      tags:
      - Cron Job Service
  /api/v1/cronjob/sync-backup-credentials:
    post:
      operationId: cronjob-sync-backup-credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SyncBackupCredentialsCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Sync backup credentials
      tags:
      - Cron Job Service
  /api/v1/cronjob/sync-opa-profiles:
    post:
      operationId: cronjob-sync-opa-profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SyncOpaProfilesCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Sync opa profiles
      tags:
      - Cron Job Service
  /api/v1/cronjob/sync-projects:
    post:
      operationId: cronjob-sync-projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SyncProjectsCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Sync projects
      tags:
      - Cron Job Service
  /api/v1/cronjob/tekton-pipelines:
    post:
      operationId: cronjob-tekton-pipelines
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TektonPipelinesCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Tekton pipelines
      tags:
      - Cron Job Service
  /api/v1/cronjob/update-project-quota-message:
    post:
      operationId: cronjob-update-project-quota-message
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProjectQuotaMessageCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update project quota message
      tags:
      - Cron Job Service
  /api/v1/cronjob/block-organization:
    post:
      operationId: cronjob-block-organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BlockOrganizationCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Block organization
      tags:
      - Cron Job Service
  /api/v1/cronjob/delete-expired-organizations:
    post:
      operationId: cronjob-delete-expired-orgs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRegisterExpiredOrganizationCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete registration expired organizations
      tags:
      - Cron Job Service
  /api/v1/cronjob/sync-organizations:
    post:
      operationId: cronjob-sync-organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SyncOrganizationsCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Sync organizations
      tags:
      - Cron Job Service
  /api/v1/cronjob/fetch-k8s-alert-data:
    post:
      operationId: cronjob-fetch-k8s-alert-data
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FetchKubernetesAlertDataCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch k8s alert data
      tags:
      - Cron Job Service
  /api/v1/cronjob/fetch-k8s-overview-data:
    post:
      operationId: cronjob-fetch-k8s-overview-data
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FetchKubernetesOverviewDataCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch k8s overview data
      tags:
      - Cron Job Service
  /api/v1/cronjob/cancel-expired-subscriptions:
    post:
      operationId: cronjob-cancel-expired-subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelExpiredSubscriptionsCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Cancel expired subscriptions
      tags:
      - Cron Job Service
  /api/v1/cronjob/alerts:
    post:
      operationId: cronjob-delete-expired-alerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteExpiredAlertsCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete expired alerts
      tags:
      - Cron Job Service
  /api/v1/cronjob/history-logs:
    post:
      operationId: cronjob-delete-expired-history-logs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteExpiredHistoryLogsCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete expired history logs
      tags:
      - Cron Job Service
  /api/v1/cronjob/refresh-tokens:
    post:
      operationId: cronjob-delete-expired-refresh-tokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteExpiredRefreshTokensCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete expired refresh tokens
      tags:
      - Cron Job Service
  /api/v1/cronjob/delete-expired-servers:
    post:
      operationId: cronjob-delete-expired-servers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteExpiredServersCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete expired servers
      tags:
      - Cron Job Service
  /api/v1/cronjob/project-actions:
    post:
      operationId: cronjob-delete-useless-project-actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRedundantProjectActionsCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete useless project actions
      tags:
      - Cron Job Service
  /api/v1/cronjob/backup-locations:
    post:
      operationId: cronjob-delete-imported-backup-location
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteImportedBackupLocationsCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete imported backup locations
      tags:
      - Cron Job Service
  /api/v1/cronjob/fetch-azure-flavor-prices:
    post:
      operationId: cronjob-fetch-azure-flavor-prices
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FetchAzureFlavorPricesCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch azure flavor prices
      tags:
      - Cron Job Service
  /api/v1/cronjob/fetch-artifact-organizations:
    post:
      operationId: cronjob-fetch-artifact-organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FillArtifacthubOrganizationCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch artifact hub organizations
      tags:
      - Cron Job Service
  /api/v1/cronjob/sync-project-apps:
    post:
      operationId: cronjob-sync-project-apps
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SyncProjectAppsCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Sync project apps
      tags:
      - Cron Job Service
  /api/v1/cronjob/update-project-app-status:
    post:
      operationId: cronjob-update-project-app-status
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProjectAppStatusCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update project app status
      tags:
      - Cron Job Service
  /api/v1/dnsservers/edit/{id}:
    put:
      operationId: dnsservers-edit
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              address: 8.8.8.8
            schema:
              $ref: "#/components/schemas/DnsNtpAddressEditDto"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Edit dns server
      tags:
      - Dns Servers
  /api/v1/dnsservers/create:
    post:
      operationId: dnsservers-create
      requestBody:
        content:
          application/json:
            example:
              address: 8.8.8.8
              accessProfileId: 1
            schema:
              $ref: "#/components/schemas/CreateDnsServerCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create dns servers for access profile
      tags:
      - Dns Servers
  /api/v1/dnsservers/{accessProfileId}:
    get:
      operationId: dnsservers-list
      parameters:
      - explode: false
        in: path
        name: accessProfileId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                address: 8.8.8.8
                accessProfileName: taikun
              schema:
                items:
                  $ref: "#/components/schemas/DnsServersListDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: List dns servers by profile id
      tags:
      - Dns Servers
  /api/v1/dnsservers/{id}:
    delete:
      operationId: dnsservers-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete DNS server
      tags:
      - Dns Servers
  /api/v1/executors/edit/health:
    put:
      operationId: executors-edit-health
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateExecutorHealthStatusCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update health status of the executor by Id
      tags:
      - Executors
  /api/v1/executors/create:
    post:
      operationId: executors-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateExecutorCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create an executor
      tags:
      - Executors
  /api/v1/executors/delete:
    post:
      operationId: executors-delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteExecutorCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete an executor
      tags:
      - Executors
  /api/v1/executors/toggle:
    post:
      operationId: executors-toggle
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ToggleExecutorCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Toggle an executor
      tags:
      - Executors
  /api/v1/executors:
    get:
      operationId: executors-list
      parameters:
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutorListResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve a list of kube configs of executors
      tags:
      - Executors
  /api/v1/flavors/bind:
    post:
      operationId: flavors-bind-to-project
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BindFlavorToProjectCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Bind flavors to project
      tags:
      - Flavors
  /api/v1/flavors/unbind:
    post:
      operationId: flavors-unbind-from-project
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnbindFlavorFromProjectCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Unbind flavors from project
      tags:
      - Flavors
  /api/v1/flavors/aws/{cloudId}:
    get:
      operationId: flavors-aws-instance-types
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AwsFlavorList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve awz instance types
      tags:
      - Flavors
  /api/v1/flavors/azure/{cloudId}:
    get:
      operationId: flavors-azure-vm-sizes
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureFlavorList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve azure vm sizes
      tags:
      - Flavors
  /api/v1/flavors/credentials/dropdown/list:
    get:
      operationId: flavors-dropdown-flavors
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: IsInfra
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CloudCredentialsDropdownRecordDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve cloud credentials dropdown list
      tags:
      - Flavors
  /api/v1/flavors/projects/list:
    get:
      operationId: flavors-selected-flavors-for-project
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: FlavorName
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: WithPrice
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BoundFlavorsForProjectsList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve selected flavors for project
      tags:
      - Flavors
  /api/v1/flavors/google/{cloudId}:
    get:
      operationId: flavors-google-machine-types
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleFlavorList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve google machine types
      tags:
      - Flavors
  /api/v1/flavors/openshift/{cloudId}:
    get:
      operationId: flavors-openshift-flavors
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpenshiftFlavorList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve openshift flavors
      tags:
      - Flavors
  /api/v1/flavors/openstack/{cloudId}:
    get:
      operationId: flavors-openstack-flavors
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpenstackFlavorList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve openstack flavors
      tags:
      - Flavors
  /api/v1/flavors/proxmox/{cloudId}:
    get:
      operationId: flavors-proxmox-flavors
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProxmoxFlavorList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve proxmox flavors
      tags:
      - Flavors
  /api/v1/flavors/tanzu/{cloudId}:
    get:
      operationId: flavors-tanzu-flavors
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TanzuFlavorList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve tanzu flavors
      tags:
      - Flavors
  /api/v1/flavors/vsphere/{cloudId}:
    get:
      operationId: flavors-vsphere-flavors
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VsphereFlavorList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve vsphere flavors
      tags:
      - Flavors
  /api/v1/flavors/zadara/{cloudId}:
    get:
      operationId: flavors-zadara-instance-types
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AwsFlavorList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve zadara instance types
      tags:
      - Flavors
  /api/v1/flavors/zededa/{cloudId}:
    get:
      operationId: flavors-zededa-flavors
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZededaFlavorList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve zededa flavors
      tags:
      - Flavors
  /api/v1/generic-kubernetes/update:
    put:
      operationId: generic-kubernetes-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateGenericKubernetesCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Void"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update Generic kubernetes credentials
      tags:
      - Generic kubernetes cloud credential
  /api/v1/generic-kubernetes/list:
    get:
      operationId: generic-kubernetes-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericKubernetesList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve list of generic kubernetes cloud credentials
      tags:
      - Generic kubernetes cloud credential
  /api/v1/googlecloud/billing-accounts:
    post:
      operationId: googlecloud-billing-account-list
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/GoogleBillingAccountListCommand"
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1"
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonStringBasedDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve google billing accounts list
      tags:
      - Google
  /api/v1/googlecloud/create:
    post:
      operationId: googlecloud-create
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreateGoogleCredentialCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create google cloud credential
      tags:
      - Google
  /api/v1/googlecloud/gke-clusters:
    post:
      operationId: googlecloud-gke-clusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GkeClustersListCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/GkeClusterDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: List of gke clusters
      tags:
      - Google
  /api/v1/googlecloud/regions:
    post:
      operationId: googlecloud-region-list
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/GoogleRegionListCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve google region list
      tags:
      - Google
  /api/v1/googlecloud/zones:
    post:
      operationId: googlecloud-zone-list
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/GoogleZoneListCommand"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - eu-west-1a
                totalCount: 1
              schema:
                $ref: "#/components/schemas/AzResult"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Google zones list
      tags:
      - Google
  /api/v1/googlecloud/list:
    get:
      operationId: googlecloud-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCredentialList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve list of google cloud credentials
      tags:
      - Google
  /api/v1/images/aws:
    post:
      operationId: images-aws-images-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AwsImagesPostListCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicImageList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve aws images
      tags:
      - Images
  /api/v1/images/bind:
    post:
      operationId: images-bind-images-to-project
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BindImageToProjectCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Bind images to project
      tags:
      - Images
  /api/v1/images/details:
    post:
      operationId: images-image-details
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageByIdCommand"
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get image details
      tags:
      - Images
  /api/v1/images/unbind:
    post:
      operationId: images-unbind-images-from-project
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteImageFromProjectCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Unbind images from project
      tags:
      - Images
  /api/v1/images/azure/{cloudId}/{publisherName}/{offer}/{sku}:
    get:
      operationId: images-azure-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: publisherName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: offer
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: sku
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Latest
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicImageList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve azure images
      tags:
      - Images
  /api/v1/images/aws/common/{cloudId}:
    get:
      operationId: images-aws-common-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1"
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonStringBasedDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Commonly used aws images
      tags:
      - Images
  /api/v1/images/azure/common/{cloudId}:
    get:
      operationId: images-azure-common-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1"
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonStringBasedDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Commonly used azure images
      tags:
      - Images
  /api/v1/images/google/common/{cloudId}:
    get:
      operationId: images-common-google-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1"
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonStringBasedDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Commonly used google images
      tags:
      - Images
  /api/v1/images/projects/list:
    get:
      operationId: images-selected-images-for-project
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BoundImagesForProjectsList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve selected images for projects
      tags:
      - Images
  /api/v1/images/google/{cloudId}/{type}:
    get:
      operationId: images-google-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Latest
        required: true
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicImageList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve google images
      tags:
      - Images
  /api/v1/images/openshift/{cloudId}:
    get:
      operationId: images-openshift-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicImageList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve openshift images
      tags:
      - Images
  /api/v1/images/openstack/{cloudId}:
    get:
      operationId: images-openstack-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Personal
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicImageList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve openstack images
      tags:
      - Images
  /api/v1/images/aws/personal/{cloudId}:
    get:
      operationId: images-aws-personal-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1"
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonStringBasedDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Aws personal images
      tags:
      - Images
  /api/v1/images/azure/personal/{cloudId}:
    get:
      operationId: images-azure-personal-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1"
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonStringBasedDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Azure personal images
      tags:
      - Images
  /api/v1/images/zadara/personal/{cloudId}:
    get:
      operationId: images-zadara-personal-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1"
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonStringBasedDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Zadara personal images
      tags:
      - Images
  /api/v1/images/proxmox/{cloudId}:
    get:
      operationId: images-proxmox-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicImageList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve proxmox images
      tags:
      - Images
  /api/v1/images/tanzu/{cloudId}:
    get:
      operationId: images-tanzu-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicImageList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve tanzu images
      tags:
      - Images
  /api/v1/images/vsphere/{cloudId}:
    get:
      operationId: images-vsphere-images
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicImageList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve vsphere images
      tags:
      - Images
  /api/v1/images/zadara/{cloudId}:
    post:
      operationId: images-zadara-images-list
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Latest
        required: true
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicImageList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve zadara images
      tags:
      - Images
  /api/v1/imported-cluster/delete:
    post:
      operationId: imported-cluster-delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteImportedProjectCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete imported cluster
      tags:
      - Imported Cluster
  /api/v1/imported-cluster/disable-ai:
    post:
      operationId: imported-cluster-disable-ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportedClusterDisableAiCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Disable ai for imported cluster
      tags:
      - Imported Cluster
  /api/v1/imported-cluster/disable-backup:
    post:
      operationId: imported-cluster-disable-backup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportedClusterDisableBackupCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Disable backup for imported cluster
      tags:
      - Imported Cluster
  /api/v1/imported-cluster/disable-monitoring:
    post:
      operationId: imported-cluster-disable-monitoring
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportedClusterDisableMonitoringCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Disable monitoring for imported cluster
      tags:
      - Imported Cluster
  /api/v1/imported-cluster/disable-opa:
    post:
      operationId: imported-cluster-disable-opa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportedClusterDisableOpaCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Disable opa for imported cluster
      tags:
      - Imported Cluster
  /api/v1/imported-cluster/enable-ai:
    post:
      operationId: imported-cluster-enable-ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportedClusterEnableAiCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Enable ai for imported cluster
      tags:
      - Imported Cluster
  /api/v1/imported-cluster/enable-backup:
    post:
      operationId: imported-cluster-enable-backup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportedClusterEnableBackupCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Enable backup for imported cluster
      tags:
      - Imported Cluster
  /api/v1/imported-cluster/enable-monitoring:
    post:
      operationId: imported-cluster-enable-monitoring
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportedClusterEnableMonitoringCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Enable monitoring for imported cluster
      tags:
      - Imported Cluster
  /api/v1/imported-cluster/enable-opa:
    post:
      operationId: imported-cluster-enable-opa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportedClusterEnableOpaCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Enable opa for imported cluster
      tags:
      - Imported Cluster
  /api/v1/imported-cluster/{id}:
    get:
      operationId: imported-cluster-details
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportedClusterList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve imported-cluster by given id
      tags:
      - Imported Cluster
  /api/v1/imported-cluster/as-cloud-credential/{projectId}:
    get:
      operationId: imported-cluster-as-cloud-credential
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportedAsCloudCredentialList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Imported cluster as cloud credential
      tags:
      - Imported Cluster
  /api/v1/imported-cluster/as-fully-managed/{projectId}:
    get:
      operationId: imported-cluster-as-fully-managed
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportedAsFullyManagedList"
          description: OK
      summary: Imported cluster as fully managed
      tags:
      - Imported Cluster
  /api/v1/imported-cluster/as-read-only/{projectId}:
    get:
      operationId: imported-cluster-as-read-only
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportedAsReadOnlyList"
          description: OK
      summary: Imported cluster as read only
      tags:
      - Imported Cluster
  /api/v1/infra/create:
    post:
      operationId: infra-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateInfraProductCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create infra product
      tags:
      - Infra
  /api/v1/infra/details:
    get:
      operationId: infra-details
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpenstackQuotaList"
          description: OK
      summary: Retrieve infra details
      tags:
      - Infra
  /api/v1/infra/list:
    get:
      operationId: infra-product-list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/InfraProductDto"
                type: array
          description: OK
      summary: Retrieve infra products list
      tags:
      - Infra
  /api/v1/infra/organizations-list:
    get:
      operationId: infra-organizations-list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/InfraOrganizationsListDto"
                type: array
          description: OK
      summary: Retrieve infra products list
      tags:
      - Infra
  /api/v1/infra-billing-summary/create:
    post:
      operationId: infra-billing-summary-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfraBillingSummariesCreateCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add infra billing summary
      tags:
      - Infra billing summary
  /api/v1/infra-billing-summary/list:
    post:
      operationId: infra-billing-summary-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InfraBillingListCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/InfraBillingSummaryDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve infra billing info
      tags:
      - Infra billing summary
  /api/v1/invoices/update/{invoiceId}:
    put:
      operationId: invoices-update
      parameters:
      - explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateInvoiceDto"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update invoice
      tags:
      - Invoices
  /api/v1/invoices/create:
    post:
      operationId: invoices-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateInvoiceCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create invoice
      tags:
      - Invoices
  /api/v1/invoices/download:
    post:
      operationId: invoices-download
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DownloadInvoiceCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CsvExporter"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Download invoice
      tags:
      - Invoices
  /api/v1/invoices/list:
    get:
      operationId: invoices-list
      parameters:
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: StartDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: EndDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: PartnerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoices"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Invoices list
      tags:
      - Invoices
  /api/v1/keycloak/edit:
    post:
      operationId: keycloak-edit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeycloakEditCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Edit keycloak configuration for organization
      tags:
      - Keycloak
  /api/v1/keycloak/create:
    post:
      operationId: keycloak-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeycloakCreateCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create keycloak configuration for organization
      tags:
      - Keycloak
  /api/v1/keycloak/delete:
    post:
      operationId: keycloak-delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeycloakDeleteCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete keycloak configuration
      tags:
      - Keycloak
  /api/v1/keycloak:
    get:
      operationId: keycloak-list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeycloakListDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get keycloak configuration
      tags:
      - Keycloak
  /api/v1/kubeconfig:
    get:
      operationId: kubeconfig-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubeConfigForUserList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve a list of kube configs for project
      tags:
      - Kube Config
    post:
      operationId: kubeconfig-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateKubeConfigCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create kube config
      tags:
      - Kube Config
  /api/v1/kubeconfig/delete:
    post:
      operationId: kubeconfig-delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteKubeConfigCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete kube config
      tags:
      - Kube Config
  /api/v1/kubeconfig/delete-by-project-id:
    post:
      operationId: kubeconfig-delete-by-project-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteKubeConfigByProjectIdCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete kube config by project id
      tags:
      - Kube Config
  /api/v1/kubeconfig/download:
    post:
      operationId: kubeconfig-download
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DownloadKubeConfigCommand"
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Download kube config file for user by project Id
      tags:
      - Kube Config
  /api/v1/kubeconfig/export:
    post:
      operationId: kubeconfig-export
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExportKubeConfigCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CsvExporter"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Export
      tags:
      - Kube Config
  /api/v1/kubeconfig/interactive-shell:
    post:
      operationId: kubeconfig-interactive-shell
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KubeConfigInteractiveShellCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InteractiveShellDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Interactive shell for user kube config
      tags:
      - Kube Config
  /api/v1/kubeconfigrole:
    get:
      operationId: kubeconfigrole-list
      parameters:
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubeConfigRoleResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve list of kube config role
      tags:
      - Kube Config role
  /api/v1/kubernetes/updatealert/{alertId}:
    put:
      operationId: kubernetes-update-alert
      parameters:
      - explode: false
        in: path
        name: alertId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateKubernetesAlertDto"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update k8s alert
      tags:
      - Kubernetes
  /api/v1/kubernetes/alert/{projectId}:
    post:
      operationId: kubernetes-add-k8s-alert
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAlertDto"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add k8s alert
      tags:
      - Kubernetes
  /api/v1/kubernetes/event/{projectId}:
    post:
      operationId: kubernetes-add-k8s-events
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KubernetesEventCreateDto"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add k8s event
      tags:
      - Kubernetes
  /api/v1/kubernetes/create-resource:
    post:
      operationId: kubernetes-create-resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateKubernetesResourceCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create kubernetes resource
      tags:
      - Kubernetes
  /api/v1/kubernetes/cronjob/actions:
    post:
      operationId: kubernetes-cronjob-actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CronjobActionCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubernetesActionResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Cronjob actions
      tags:
      - Kubernetes
  /api/v1/kubernetes/daemonset/actions:
    post:
      operationId: kubernetes-daemonset-actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DaemonsetActionCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Daemonset actions
      tags:
      - Kubernetes
  /api/v1/kubernetes/removealerts:
    post:
      operationId: kubernetes-removealerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteAlertCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Remove k8s alerts
      tags:
      - Kubernetes
  /api/v1/kubernetes/delete-resource:
    post:
      operationId: kubernetes-delete-resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteKubernetesResourceCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubernetesActionResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete kubernetes resource
      tags:
      - Kubernetes
  /api/v1/kubernetes/deployment/actions:
    post:
      operationId: kubernetes-deployment-actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeploymentActionCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Deployment actions
      tags:
      - Kubernetes
  /api/v1/kubernetes/describe-resource:
    post:
      operationId: kubernetes-describe-resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeKubernetesResourceCommand"
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Describe kubernetes resource
      tags:
      - Kubernetes
  /api/v1/kubernetes/download-manifest:
    post:
      operationId: kubernetes-download-manifest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DownloadKubernetesResourceCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CsvExporter"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Download manifest
      tags:
      - Kubernetes
  /api/v1/kubernetes/cli:
    post:
      operationId: kubernetes-cli
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KubernetesCliCommand"
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Execute k8s web socket namespaced pod
      tags:
      - Kubernetes
  /api/v1/kubernetes/podLogs:
    post:
      operationId: kubernetes-pod-logs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KubernetesPodLogsCommand"
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve k8s pod logs
      tags:
      - Kubernetes
  /api/v1/kubernetes/ingress-classes:
    post:
      operationId: kubernetes-ingress-classes
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/KubernetesIngressClassCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: List of ingress classes
      tags:
      - Kubernetes
  /api/v1/kubernetes/interactive-shell:
    post:
      operationId: kubernetes-interactive-shell
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InteractiveShellSendCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubernetesInteractiveShellDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Produce interactive shell command
      tags:
      - Kubernetes
  /api/v1/kubernetes/nodes/actions:
    post:
      operationId: kubernetes-node-actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NodeActionCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Node actions
      tags:
      - Kubernetes
  /api/v1/kubernetes/patch-resource:
    post:
      operationId: kubernetes-patch-resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchKubernetesResourceCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Patch kubernetes resource
      tags:
      - Kubernetes
  /api/v1/kubernetes/silencemanager:
    post:
      operationId: kubernetes-silence-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SilenceOperationsCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Silence management for k8s alerts
      tags:
      - Kubernetes
  /api/v1/kubernetes/sts/actions:
    post:
      operationId: kubernetes-sts-actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StsActionCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Stateful set actions
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/download:
    get:
      operationId: kubernetes-download
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Download kube config file
      tags:
      - Kubernetes
  /api/v1/kubernetes/export:
    get:
      operationId: kubernetes-export
      parameters:
      - explode: true
        in: query
        name: ProjectId
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CsvExporter"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Export
      tags:
      - Kubernetes
  /api/v1/kubernetes/forbidden-namespaces/{projectId}:
    get:
      operationId: kubernetes-forbidden-namespaces
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Forbidden namespaces for k8s actions
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/dashboard:
    get:
      operationId: kubernetes-dashboard-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubernetesDashboardDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve a list of crd
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/kubeconfig:
    get:
      operationId: kubernetes-kube-config
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubeConfigResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve kube config file
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/alerts:
    get:
      operationId: kubernetes-alert-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Type
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: StartDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: EndDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubernetesAlertList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve a list of alerts for project
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/namespaces:
    get:
      operationId: kubernetes-namespace-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Installation
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve kube config file
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/quota:
    get:
      operationId: kubernetes-quota
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubernetesQuotaListDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: K8s quota usage
      tags:
      - Kubernetes
  /api/v1/kubernetes/supported/list:
    get:
      operationId: kubernetes-get-supported-list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/KubernetesVersionListDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve Taikun supported kubernetes versions
      tags:
      - Kubernetes
  /api/v1/kubernetes/overview:
    get:
      operationId: kubernetes-overview
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/KubernetesOverviewDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Overview kubernetes nodes and pods by organization id
      tags:
      - Kubernetes
  /api/v1/kubernetes/{projectId}/resources:
    get:
      operationId: kubernetes-resources
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubernetesResourcesDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all total count
      tags:
      - Kubernetes
  /api/v1/kubernetesprofiles:
    get:
      operationId: kubernetesprofiles-dropdown
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: CloudId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          default: 1000
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/KubernetesProfilesEntity"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all kubernetes profiles for organization
      tags:
      - Kubernetes profiles
    post:
      operationId: kubernetesprofiles-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateKubernetesProfileCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add kubernetes profile
      tags:
      - Kubernetes profiles
  /api/v1/kubernetesprofiles/lockmanager:
    post:
      operationId: kubernetesprofiles-lock-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KubernetesProfilesLockManagerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Kubernetes profile lock/unlock
      tags:
      - Kubernetes profiles
  /api/v1/kubernetesprofiles/list:
    get:
      operationId: kubernetesprofiles-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubernetesProfilesList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all kubernetes profiles
      tags:
      - Kubernetes profiles
  /api/v1/kubernetesprofiles/{id}:
    delete:
      operationId: kubernetesprofiles-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete kubernetes profile
      tags:
      - Kubernetes profiles
  /api/v1/kubespray:
    post:
      operationId: kubespray-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KubesprayCreateCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add kubespray
      tags:
      - Kubespray
  /api/v1/kubespray/list:
    get:
      operationId: kubespray-list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Kubesprays"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all kubespray versions
      tags:
      - Kubespray
  /api/v1/kubespray/{id}:
    delete:
      operationId: kubespray-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete kubespray
      tags:
      - Kubespray
  /api/v1/notifications/add:
    post:
      operationId: notifications-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationSendCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create notification
      tags:
      - Notifications
  /api/v1/notifications/operations:
    post:
      operationId: notifications-operation-messages
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetProjectOperationCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get project operations
      tags:
      - Notifications
  /api/v1/notifications/notifyowner:
    post:
      operationId: notifications-notify-owner
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotifyOwnersCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Notify owner
      tags:
      - Notifications
  /api/v1/notifications/download:
    get:
      operationId: notifications-export-csv
      parameters:
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: StartDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: EndDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: UserId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: IsDeleted
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: IsEmailEnabled
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CsvExporter"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Export Csv
      tags:
      - Notifications
  /api/v1/notifications/list:
    get:
      operationId: notifications-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: StartDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: EndDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: UserId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: IsDeleted
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationHistory"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all notifications
      tags:
      - Notifications
  /api/v1/ntpservers/edit/{id}:
    put:
      operationId: ntpservers-edit
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              address: 8.8.8.8
            schema:
              $ref: "#/components/schemas/DnsNtpAddressEditDto"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Edit access profile ntp server
      tags:
      - Ntp servers
  /api/v1/ntpservers/create:
    post:
      operationId: ntpservers-create
      requestBody:
        content:
          application/json:
            example:
              address: 8.8.8.8
              accessProfileId: 1
            schema:
              $ref: "#/components/schemas/CreateNtpServerCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create access profile ntp server
      tags:
      - Ntp servers
  /api/v1/ntpservers/list/{accessProfileId}:
    get:
      operationId: ntpservers-list
      parameters:
      - explode: false
        in: path
        name: accessProfileId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                address: 8.8.8.8
                accessProfileName: taikun
              schema:
                items:
                  $ref: "#/components/schemas/NtpServersListDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: List ntp server by access profile id
      tags:
      - Ntp servers
  /api/v1/ntpservers/{id}:
    delete:
      operationId: ntpservers-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete access profile ntp server
      tags:
      - Ntp servers
  /api/v1/opaprofiles:
    get:
      operationId: opaprofiles-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpaProfileList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all policy profiles
      tags:
      - Opa Profiles
    put:
      operationId: opaprofiles-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpaProfileUpdateCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update policy profile
      tags:
      - Opa Profiles
  /api/v1/opaprofiles/create:
    post:
      operationId: opaprofiles-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOpaProfileCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add policy profile
      tags:
      - Opa Profiles
  /api/v1/opaprofiles/lockmanager:
    post:
      operationId: opaprofiles-lock-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpaProfileLockManagerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Lock/Unlock policy profile
      tags:
      - Opa Profiles
  /api/v1/opaprofiles/make-default:
    post:
      operationId: opaprofiles-make-default
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpaMakeDefaultCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Choose default policy profile
      tags:
      - Opa Profiles
  /api/v1/opaprofiles/sync:
    post:
      operationId: opaprofiles-sync
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpaProfileSyncCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Sync policy profile
      tags:
      - Opa Profiles
  /api/v1/opaprofiles/list:
    get:
      operationId: opaprofiles-dropdown
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CommonExtendedDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve policy profiles for organization
      tags:
      - Opa Profiles
  /api/v1/opaprofiles/{id}:
    delete:
      operationId: opaprofiles-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Remove Opa profile by Id
      tags:
      - Opa Profiles
  /api/v1/openshift/create:
    post:
      operationId: openshift-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpenshiftCreateCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add Openshift cloud credential
      tags:
      - Openshift
  /api/v1/openshift/pull-secret:
    post:
      operationId: openshift-pull-secret
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/OpenshiftPullSecretCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Validate openshift pull secret
      tags:
      - Openshift
  /api/v1/openshift/storage-class:
    post:
      operationId: openshift-storage-class
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/OpenshiftStorageListCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get openshift storage class list
      tags:
      - Openshift
  /api/v1/openshift/validate:
    post:
      operationId: openshift-validate
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/OpenshiftValidateCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Validate openshift kube config file
      tags:
      - Openshift
  /api/v1/openshift/list:
    get:
      operationId: openshift-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpenshiftList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all operation credentials
      tags:
      - Openshift
  /api/v1/openstack/create:
    post:
      operationId: openstack-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOpenstackCloudCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add Openstack credentials
      tags:
      - Openstack cloud credential
  /api/v1/openstack/networks:
    post:
      operationId: openstack-networks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpenStackNetworkListQuery"
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1"
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonStringBasedDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Openstack network list
      tags:
      - Openstack cloud credential
  /api/v1/openstack/projects:
    post:
      operationId: openstack-projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpenStackProjectListQuery"
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1"
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonStringBasedDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Openstack project list
      tags:
      - Openstack cloud credential
  /api/v1/openstack/quotas:
    post:
      operationId: openstack-quotas
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpenstackQuotasCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpenstackQuotaList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Openstack quota list
      tags:
      - Openstack cloud credential
  /api/v1/openstack/regions:
    post:
      operationId: openstack-region-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpenStackRegionListQuery"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve Openstack regions
      tags:
      - Openstack cloud credential
  /api/v1/openstack/subnets:
    post:
      operationId: openstack-subnet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpenstackSubnetListQuery"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Subnet"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve Openstack subnets
      tags:
      - Openstack cloud credential
  /api/v1/openstack/update:
    post:
      operationId: openstack-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOpenStackCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update Openstack credentials
      tags:
      - Openstack cloud credential
  /api/v1/openstack/volumes:
    post:
      operationId: openstack-volumes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpenstackVolumeTypeListQuery"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Openstack volume list
      tags:
      - Openstack cloud credential
  /api/v1/openstack/zones:
    post:
      operationId: openstack-zones
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpenStackZoneListQuery"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch Openstack zones
      tags:
      - Openstack cloud credential
  /api/v1/openstack/list:
    get:
      operationId: openstack-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: IsInfra
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpenstackCredentialList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve list of openstack cloud credentials
      tags:
      - Openstack cloud credential
  /api/v1/opscredentials:
    get:
      operationId: opscredentials-list-by-organizationId
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/OperationCredentialsForOrganizationEntity"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve operation credentials by organization Id
      tags:
      - Operation Credentials
    post:
      operationId: opscredentials-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperationCredentialsCreateCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add Operation credentials
      tags:
      - Operation Credentials
  /api/v1/opscredentials/lockmanager:
    post:
      operationId: opscredentials-lock-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperationCredentialLockManagerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Lock/Unlock operation credential
      tags:
      - Operation Credentials
  /api/v1/opscredentials/makedefault:
    post:
      operationId: opscredentials-make-default
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OperationCredentialsMakeDefaultCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Choose default operation credential
      tags:
      - Operation Credentials
  /api/v1/opscredentials/list:
    get:
      operationId: opscredentials-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationCredentials"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all operation credentials
      tags:
      - Operation Credentials
  /api/v1/opscredentials/{id}/metric/names:
    get:
      operationId: opscredentials-metric-names
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch prometheus metric names
      tags:
      - Operation Credentials
  /api/v1/opscredentials/{id}:
    delete:
      operationId: opscredentials-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Remove Operation credential by Id
      tags:
      - Operation Credentials
  /api/v1/organizationsubcriptions/update:
    post:
      operationId: organizationsubcriptions-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOrganizationSubscriptionCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LeaveTaikunDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update subscription
      tags:
      - Organization Subscriptions
  /api/v1/organizationsubcriptions:
    get:
      operationId: organizationsubcriptions-list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/OrganizationSubscriptionDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all organization subscriptions
      tags:
      - Organization Subscriptions
  /api/v1/organizations/{id}/prometheusrules:
    post:
      operationId: organizations-add-prometheusrules
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/AddPrometheusRulesToOrganizationDto"
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add prometheus rule(s) to organization
      tags:
      - Organizations
    put:
      operationId: organizations-delete-prometheusrules
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Unbind prometheus rule(s) from organization
      tags:
      - Organizations
  /api/v1/organizations/accept-offer:
    post:
      operationId: organizations-accept-offer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcceptOfferCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Accept discount offer
      tags:
      - Organizations
  /api/v1/organizations:
    get:
      operationId: organizations-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationsList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all organizations
      tags:
      - Organizations
    post:
      operationId: organizations-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationCreateCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add a new organization. Only available for admins.
      tags:
      - Organizations
  /api/v1/organizations/disable-2fa-management:
    post:
      operationId: organizations-disable-2fa-management
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisableTwoFaManagementCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Disable 2fa management
      tags:
      - Organizations
  /api/v1/organizations/enable-2fa-management:
    post:
      operationId: organizations-enable-2fa-management
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnableTwoFaManagementCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Enable 2fa management
      tags:
      - Organizations
  /api/v1/organizations/leave:
    post:
      operationId: organizations-leave
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LeaveTaikunCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LeaveTaikunDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Leave taikun
      tags:
      - Organizations
  /api/v1/organizations/toggle/keycloak:
    post:
      operationId: organizations-toggle
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ToggleKeycloakCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Toggle keycloak login option
      tags:
      - Organizations
  /api/v1/organizations/update:
    post:
      operationId: organizations-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOrganizationCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update organization by Id
      tags:
      - Organizations
  /api/v1/organizations/updatepaymentmethod:
    post:
      operationId: organizations-update-payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePaymentIdCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update organization payment Id
      tags:
      - Organizations
  /api/v1/organizations/details:
    get:
      operationId: organizations-details
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DashboardChart"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all data about current organization by Id
      tags:
      - Organizations
  /api/v1/organizations/export:
    get:
      operationId: organizations-export-csv
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CsvExporter"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Export Csv file
      tags:
      - Organizations
  /api/v1/organizations/list:
    get:
      operationId: organizations-organization-list
      parameters:
      - explode: true
        in: query
        name: PartnerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: IsInfra
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: PrometheusRuleId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/OrganizationDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve organizations
      tags:
      - Organizations
  /api/v1/organizations/{id}:
    delete:
      operationId: organizations-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete the specified organization. Only available for admins.
      tags:
      - Organizations
  /api/v1/package/value:
    post:
      operationId: package-value
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetCatalogAppValueCommand"
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get yaml based value
      tags:
      - Package
  /api/v1/package/value-autocomplete:
    post:
      operationId: package-value-autocomplete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetCatalogAppValueAutocompleteCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PackageAutocompleteDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get autocomplete dictionary
      tags:
      - Package
  /api/v1/package/versions:
    post:
      operationId: package-versions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListCatalogAppAvailableVersionsCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get available versions
      tags:
      - Package
  /api/v1/package/{repoName}/{packageName}:
    get:
      operationId: package-details
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: repoName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: packageName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AvailablePackageDetailsDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Available helm package details
      tags:
      - Package
  /api/v1/package/list:
    get:
      operationId: package-list
      parameters:
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: CatalogId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: IsPrivate
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AvailablePackagesList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all available packages
      tags:
      - Package
  /api/v1/partner/{id}/organizations:
    post:
      operationId: partner-add-organizations
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add organizations to a partner
      tags:
      - Partners
    put:
      operationId: partner-delete-organizations
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Unbind organizations from a partner
      tags:
      - Partners
  /api/v1/partner/add/whitelist/domain:
    post:
      operationId: partner-add/whitelist/domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WhiteListDomainCreateCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add white list domain
      tags:
      - Partners
  /api/v1/partner/become-a-partner:
    post:
      operationId: partner-become-a-partner
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BecomePartnerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Become a partner
      tags:
      - Partners
  /api/v1/partner/contact-us:
    post:
      operationId: partner-contact-us
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactUsCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Contact with us
      tags:
      - Partners
  /api/v1/partner/create:
    post:
      operationId: partner-create
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreatePartnerCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add a partner
      tags:
      - Partners
  /api/v1/partner/delete:
    post:
      operationId: partner-delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeletePartnerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete partner
      tags:
      - Partners
  /api/v1/partner/delete/whitelist/domain:
    post:
      operationId: partner-delete/whitelist/domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WhiteListDomainDeleteCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete white list domain
      tags:
      - Partners
  /api/v1/partner/update:
    put:
      operationId: partner-update
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdatePartnerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Edit partner's data by Id
      tags:
      - Partners
  /api/v1/partner/details:
    get:
      operationId: partner-details
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartnerDetailsDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Details of partners
      tags:
      - Partners
  /api/v1/partner:
    get:
      operationId: partner-list
      parameters:
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartnersList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get partners
      tags:
      - Partners
  /api/v1/partner/info:
    get:
      operationId: partner-info
      parameters:
      - explode: true
        in: query
        name: Domain
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartnerRecordDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get partner's registration info
      tags:
      - Partners
  /api/v1/partner/list:
    get:
      operationId: partner-dropdown
      parameters:
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PartnerEntity"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get partners dropdown
      tags:
      - Partners
  /api/v1/payment/clear:
    post:
      operationId: payment-clear
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClearCanceledPaymentMethodCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Clear payment
      tags:
      - Payments
  /api/v1/payment/createcustomer:
    post:
      operationId: payment-create-customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateStripeCustomerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create customer
      tags:
      - Payments
  /api/v1/payment/finalprice:
    post:
      operationId: payment-final-price
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FinalPriceCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FinalPriceDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch final price
      tags:
      - Payments
  /api/v1/payment/pay:
    post:
      operationId: payment-pay
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PayInvoiceCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvoiceSecret"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Pay invoice
      tags:
      - Payments
  /api/v1/payment/updatecard:
    post:
      operationId: payment-update-card
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeCardCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update payment card
      tags:
      - Payments
  /api/v1/payment/webhook:
    post:
      operationId: payment-webhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentWebhookCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Listen to payment webhook
      tags:
      - Payments
  /api/v1/payment/billing-info:
    get:
      operationId: payment-billing-info
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingInfoDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get billing info for organization
      tags:
      - Payments
  /api/v1/payment/cardinfo:
    get:
      operationId: payment-cardinfo
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardInformationDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get card information
      tags:
      - Payments
  /api/v1/payment/stripeinvoices/{subscriptionId}:
    get:
      operationId: payment-get-stripe-invoices
      parameters:
      - explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StripeInvoices"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get required stripe invoices by stripe subscription id
      tags:
      - Payments
  /api/v1/predefinedqueries/prometheus/dashboard/create:
    post:
      operationId: predefinedqueries-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrometheusDashboardCreateCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create prometheus dashboard pre defined query
      tags:
      - Pre-defined queries
  /api/v1/predefinedqueries/prometheus/dashboard/update:
    post:
      operationId: predefinedqueries-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrometheusDashboardUpdateCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update prometheus dashboard pre defined query
      tags:
      - Pre-defined queries
  /api/v1/predefinedqueries/prometheus/dashboard/common/{projectId}:
    get:
      operationId: predefinedqueries-prometheus-dashboard-common
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PrometheusDashboardListDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: et list of pre defined common prometheus dashboard elements
      tags:
      - Pre-defined queries
  /api/v1/predefinedqueries/prometheus/dashboard/list/{projectId}:
    get:
      operationId: predefinedqueries-list
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PrometheusDashboardListDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get list of pre defined organization prometheus dashboard elements
      tags:
      - Pre-defined queries
  /api/v1/predefinedqueries/prometheus/dashboard/delete/{id}:
    delete:
      operationId: predefinedqueries-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete prometheus dashboard pre defined query
      tags:
      - Pre-defined queries
  /api/v1/projectappparam/edit/{projectAppId}:
    put:
      operationId: projectappparam-edit
      parameters:
      - explode: false
        in: path
        name: projectAppId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/EditProjectAppParamsDto"
              type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationSyncResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Edit project app params
      tags:
      - Project app params
  /api/v1/projectapp/autosync:
    post:
      operationId: projectapp-autosync
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AutoSyncManagementCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: AutoSync management
      tags:
      - Project apps
  /api/v1/projectapp/cancel:
    post:
      operationId: projectapp-cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelProjectAppCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Cancel an application
      tags:
      - Project apps
  /api/v1/projectapp/install:
    post:
      operationId: projectapp-install
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProjectAppCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Install an application
      tags:
      - Project apps
  /api/v1/projectapp/lockmanager:
    post:
      operationId: projectapp-lock-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LockProjectAppCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Lock/Unlock project app
      tags:
      - Project apps
  /api/v1/projectapp/sync:
    post:
      operationId: projectapp-sync
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SyncProjectAppCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Sync an application
      tags:
      - Project apps
  /api/v1/projectapp/update:
    post:
      operationId: projectapp-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProjectAppCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Void"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update project app
      tags:
      - Project apps
  /api/v1/projectapp/update-extra-values:
    post:
      operationId: projectapp-update-extra-values
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditProjectAppExtraValuesCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationSyncResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update extra values
      tags:
      - Project apps
  /api/v1/projectapp/{id}:
    get:
      operationId: projectapp-details
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectAppDetailsDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve project app's details
      tags:
      - Project apps
  /api/v1/projectapp/list:
    get:
      operationId: projectapp-list
      parameters:
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectAppList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all project apps according to current organization
      tags:
      - Project apps
  /api/v1/projectapp/uninstall/{projectAppId}:
    post:
      operationId: projectapp-delete
      parameters:
      - explode: false
        in: path
        name: projectAppId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UninstallProjectAppResult"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Uninstall application
      tags:
      - Project apps
  /api/v1/project-deployment/commit:
    post:
      operationId: project-deployment-commit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectDeploymentCommitCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Commit
      tags:
      - Project deployment
  /api/v1/project-deployment/commit-vm:
    post:
      operationId: project-deployment-commit-vm
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeploymentCommitVmCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Commit
      tags:
      - Project deployment
  /api/v1/project-deployment/completed:
    post:
      operationId: project-deployment-completed
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeploymentCompletedCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update project fields
      tags:
      - Project deployment
  /api/v1/project-deployment/delete:
    post:
      operationId: project-deployment-delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectDeploymentDeleteServersCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete
      tags:
      - Project deployment
  /api/v1/project-deployment/delete-vms:
    post:
      operationId: project-deployment-delete-vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectDeploymentDeleteVmsCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete vms
      tags:
      - Project deployment
  /api/v1/project-deployment/delete-vm-disks:
    post:
      operationId: project-deployment-delete-vm-disks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteVmDiskCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete vm disks
      tags:
      - Project deployment
  /api/v1/project-deployment/disable-ai:
    post:
      operationId: project-deployment-disable-ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeploymentDisableAiCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Disable ai
      tags:
      - Project deployment
  /api/v1/project-deployment/disable-backup:
    post:
      operationId: project-deployment-disable-backup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeploymentDisableBackupCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Disable backup
      tags:
      - Project deployment
  /api/v1/project-deployment/disable-monitoring:
    post:
      operationId: project-deployment-disable-monitoring
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeploymentDisableMonitoringCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Disable monitoring
      tags:
      - Project deployment
  /api/v1/project-deployment/disable-opa:
    post:
      operationId: project-deployment-disable-opa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeploymentDisableOpaCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Disable opa
      tags:
      - Project deployment
  /api/v1/project-deployment/enable-ai:
    post:
      operationId: project-deployment-enable-ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeploymentEnableAiCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Enable ai
      tags:
      - Project deployment
  /api/v1/project-deployment/enable-backup:
    post:
      operationId: project-deployment-enable-backup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeploymentEnableBackupCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Enable backup
      tags:
      - Project deployment
  /api/v1/project-deployment/enable-monitoring:
    post:
      operationId: project-deployment-enable-monitoring
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeploymentEnableMonitoringCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Enable monitoring
      tags:
      - Project deployment
  /api/v1/project-deployment/enable-opa:
    post:
      operationId: project-deployment-enable-opa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeploymentOpaEnableCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Enable opa
      tags:
      - Project deployment
  /api/v1/project-deployment/import-cluster:
    post:
      operationId: project-deployment-import-cluster
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ImportClusterCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Import cluster
      tags:
      - Project deployment
  /api/v1/project-deployment/repair:
    post:
      operationId: project-deployment-repair
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectDeploymentRepairCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Repair
      tags:
      - Project deployment
  /api/v1/project-deployment/repair-vm:
    post:
      operationId: project-deployment-repair-vm
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectDeploymentRepairVmCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Repair Vm
      tags:
      - Project deployment
  /api/v1/project-deployment/tofu-migrate:
    post:
      operationId: project-deployment-tofu-migrate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TofuMigrateCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Tofu migrate
      tags:
      - Project deployment
  /api/v1/project-deployment/update:
    post:
      operationId: project-deployment-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateStageCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update stage of project
      tags:
      - Project deployment
  /api/v1/project-deployment/upgrade/{projectId}:
    post:
      operationId: project-deployment-upgrade
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Upgrade the project's Kubernetes to the next available version. Project
        must be READY.
      tags:
      - Project deployment
  /api/v1/projectgroups/bind-project:
    post:
      operationId: projectgroups-bind-project
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BindProjectsToProjectGroupCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Bind Projects to group
      tags:
      - Project groups
  /api/v1/projectgroups/bind-user-group:
    post:
      operationId: projectgroups-bind-user-group
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BindUserGroupsToProjectGroupCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Bind User groups
      tags:
      - Project groups
  /api/v1/projectgroups/create:
    post:
      operationId: projectgroups-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProjectGroupCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add Project groups
      tags:
      - Project groups
  /api/v1/projectgroups/unbind-project:
    post:
      operationId: projectgroups-unbind-project
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnbindProjectFromProjectGroupCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Unbind Projects from group
      tags:
      - Project groups
  /api/v1/projectgroups/unbind-user-group:
    post:
      operationId: projectgroups-unbind-user-group
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnbindUserGroupFromProjectGroupCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Unbind user group from project group
      tags:
      - Project groups
  /api/v1/projectgroups/list:
    get:
      operationId: projectgroups-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectGroupList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve list of Project groups
      tags:
      - Project groups
  /api/v1/projectgroups/list/{userGroupId}:
    get:
      operationId: projectgroups-list-by-user-id
      parameters:
      - explode: false
        in: path
        name: userGroupId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve list of Project groups by user group id for dropdown
      tags:
      - Project groups
  /api/v1/projectgroups/{projectGroupId}/projects:
    get:
      operationId: projectgroups-project-list
      parameters:
      - explode: false
        in: path
        name: projectGroupId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve list of projects by project group id
      tags:
      - Project groups
  /api/v1/projectgroups:
    post:
      operationId: projectgroups-delete
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Remove Project group(s)
      tags:
      - Project groups
  /api/v1/projectinfracosts/{projectId}:
    get:
      operationId: projectinfracosts-details
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EstimatedInfracost"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Project Infracost details
      tags:
      - Project infracosts
  /api/v1/projectquotas/update:
    post:
      operationId: projectquotas-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateQuotaCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Edit project quota
      tags:
      - Project quotas
  /api/v1/projectquotas:
    get:
      operationId: projectquotas-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: StartDiskSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: EndDiskSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectQuotaList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all project quotas
      tags:
      - Project quotas
  /api/v1/project-templates/create:
    post:
      operationId: project-templates-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProjectFromTemplateCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create project from template
      tags:
      - Project templates
  /api/v1/project-templates:
    get:
      operationId: project-templates-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectTemplateList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all project templates
      tags:
      - Project templates
  /api/v1/project-templates/list:
    get:
      operationId: project-templates-dropdown
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProjectTemplateDropdownListDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve project template by organization Id
      tags:
      - Project templates
  /api/v1/project-templates/{id}:
    delete:
      operationId: project-templates-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete project template by Id
      tags:
      - Project templates
  /api/v1/projects/{id}/users:
    post:
      operationId: projects-add-project-users
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add users to project
      tags:
      - Projects
    put:
      operationId: projects-delete-project-users
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Unbind users from project
      tags:
      - Projects
  /api/v1/projects/edit/health:
    put:
      operationId: projects-edit-health
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateHealthStatusCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update health status of the project by Id
      tags:
      - Projects
  /api/v1/projects/edit/status:
    put:
      operationId: projects-edit-status
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetProjectStatusCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Change the project status for the given project. Only available for
        admin.
      tags:
      - Projects
  /api/v1/projects/chat/completions:
    post:
      operationId: projects-chat-completions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatCompletionsCommand"
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: AI Chat completions
      tags:
      - Projects
  /api/v1/projects:
    get:
      operationId: projects-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: UpdatedAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: BackupCredentialId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Healthy
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectsList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all projects
      tags:
      - Projects
    post:
      operationId: projects-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProjectCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create a new project
      tags:
      - Projects
  /api/v1/projects/delete:
    post:
      operationId: projects-delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteProjectCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete the project. The project must be empty (no server) and in READY
        state
      tags:
      - Projects
  /api/v1/projects/loki-logs/export:
    post:
      operationId: projects-export-loki-logs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExportLokiLogsCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CsvExporter"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Export loki logs
      tags:
      - Projects
  /api/v1/projects/extend/lifetime:
    post:
      operationId: projects-extend-lifetime
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectExtendLifeTimeCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Extend life time of project
      tags:
      - Projects
  /api/v1/projects/toggle-full-spot:
    post:
      operationId: projects-toggle-full-spot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FullSpotOperationCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Full spot operations enable/disable
      tags:
      - Projects
  /api/v1/projects/lockmanager:
    post:
      operationId: projects-lock-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectLockManagerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Lock/Unlock project
      tags:
      - Projects
  /api/v1/projects/loki-logs:
    post:
      operationId: projects-loki-logs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectsLogsCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LokiResult"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve loki logs
      tags:
      - Projects
  /api/v1/projects/maintenance-manager:
    post:
      operationId: projects-maintenance-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectMaintenanceModeCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Enable/disable project's maintenance mode
      tags:
      - Projects
  /api/v1/projects/monitoringalerts:
    post:
      operationId: projects-monitoring-alerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectsMonitoringAlertsCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectMonitoringAlertsDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Monitoring alerts for project
      tags:
      - Projects
  /api/v1/projects/prometheusmetrics/autocomplete:
    post:
      operationId: projects-prometheus-metrics-autocomplete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrometheusMetricsAutocompleteCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Prometheus metrics autocomplete values
      tags:
      - Projects
  /api/v1/projects/prometheusmetrics:
    post:
      operationId: projects-prometheus-metrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrometheusMetricsCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrometheusMetricListDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Prometheus metrics data project
      tags:
      - Projects
  /api/v1/projects/toggle-spot-vms:
    post:
      operationId: projects-toggle-spot-vms
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpotVmOperationCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Spot vm(s) operations enable/disable
      tags:
      - Projects
  /api/v1/projects/toggle-spot-workers:
    post:
      operationId: projects-toggle-spot-workers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpotWorkerOperationCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Spot worker(s) operations enable/disable
      tags:
      - Projects
  /api/v1/projects/ai-analyze/{projectId}:
    get:
      operationId: projects-ai-analyzer
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AiListDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Analyze cluster by AI model
      tags:
      - Projects
  /api/v1/projects/catalogs/{projectId}:
    get:
      operationId: projects-catalogs
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CatalogsForProjectDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Catalogs for project
      tags:
      - Projects
  /api/v1/projects/describe/{projectId}:
    get:
      operationId: projects-describe
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectDescribeDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Describe project by Id
      tags:
      - Projects
  /api/v1/projects/list:
    get:
      operationId: projects-dropdown
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: CatalogId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Healthy
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: UserId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Ready
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: IsBoundToCatalog
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CommonDropdownIsBoundDtoForProject"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve list of projects for dropdown
      tags:
      - Projects
  /api/v1/projects/imported/details/{projectId}:
    get:
      operationId: projects-imported-cluster-details
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportedClusterDetailsDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Imported cluster details
      tags:
      - Projects
  /api/v1/projects/forbilling:
    get:
      operationId: projects-for-billing
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProjectsForBillingDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve a list of projects for billing
      tags:
      - Projects
  /api/v1/projects/foralerting:
    get:
      operationId: projects-for-alerting
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Status
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProjectListForAlert"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve a list of projects for alert poller. Only available for admins.
      tags:
      - Projects
  /api/v1/projects/visibility/{projectId}:
    get:
      operationId: projects-visibility
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectActionVisibilityDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Visibility of project actions
      tags:
      - Projects
  /api/v1/projects/alerts:
    post:
      operationId: projects-alerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectAlertsQuery"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProjectDetailsErrorListDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Project alerts
      tags:
      - Projects
  /api/v1/projects/can-add-vcluster/{projectId}:
    get:
      operationId: projects-can-add-vcluster
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectCanAddVClusterDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Visibility of adding vcluster
      tags:
      - Projects
  /api/v1/prometheusbillings:
    get:
      operationId: prometheusbillings-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: StartDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: EndDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrometheusBillingInfo"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all prometheus billing
      tags:
      - Prometheus Billings
    post:
      operationId: prometheusbillings-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrometheusBillingCreateCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add prometheus billing
      tags:
      - Prometheus Billings
  /api/v1/prometheusbillings/export:
    get:
      operationId: prometheusbillings-export-csv
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: StartDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: EndDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: IsEmailEnabled
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CsvExporter"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Export Csv
      tags:
      - Prometheus Billings
  /api/v1/prometheusbillings/grouped:
    post:
      operationId: prometheusbillings-grouped-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupedPrometheusBillingListQuery"
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve a list of grouped prometheus billing
      tags:
      - Prometheus Billings
  /api/v1/prometheusrules/{id}/organizations:
    post:
      operationId: prometheusrules-add-organizations
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/AddOrganizationsToRuleDto"
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add organizations to prometheus rule
      tags:
      - Prometheus Rules
    put:
      operationId: prometheusrules-delete-organizations
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Unbind organizations from prometheus rule
      tags:
      - Prometheus Rules
  /api/v1/prometheusrules/edit/{id}:
    put:
      operationId: prometheusrules-update
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RuleForUpdateDto"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Edit prometheus rule
      tags:
      - Prometheus Rules
  /api/v1/prometheusrules:
    get:
      operationId: prometheusrules-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: PartnerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrometheusRulesList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve a list of prometheus rules
      tags:
      - Prometheus Rules
    post:
      operationId: prometheusrules-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RuleCreateCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add prometheus rule
      tags:
      - Prometheus Rules
  /api/v1/prometheusrules/details:
    get:
      operationId: prometheusrules-details
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CommonDropdownIsBoundDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all prometheus rules with detailed info
      tags:
      - Prometheus Rules
  /api/v1/prometheusrules/{id}:
    delete:
      operationId: prometheusrules-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Remove prometheus rule
      tags:
      - Prometheus Rules
  /api/v1/proxmox/bridge-list:
    post:
      operationId: proxmox-bridge-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BridgeListCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch proxmox bridge list
      tags:
      - Proxmox cloud credential
  /api/v1/proxmox/create:
    post:
      operationId: proxmox-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProxmoxCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add Proxmox credentials
      tags:
      - Proxmox cloud credential
  /api/v1/proxmox/hypervisor-list:
    post:
      operationId: proxmox-hypervisor-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HypervisorListCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProxmoxHypervisorDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch proxmox hypervisor list
      tags:
      - Proxmox cloud credential
  /api/v1/proxmox/storage-list:
    post:
      operationId: proxmox-storage-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StorageListCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch proxmox storage list
      tags:
      - Proxmox cloud credential
  /api/v1/proxmox/update:
    post:
      operationId: proxmox-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProxmoxCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update proxmox credentials
      tags:
      - Proxmox cloud credential
  /api/v1/proxmox/update/hypervisors:
    post:
      operationId: proxmox-update-hypervisors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateHypervisorsCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update proxmox credentials
      tags:
      - Proxmox cloud credential
  /api/v1/proxmox/update/ip-addresses:
    post:
      operationId: proxmox-update-ip-addresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUsedIpAddressesCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update proxmox network used ip addresses
      tags:
      - Proxmox cloud credential
  /api/v1/proxmox/vm-template-list:
    post:
      operationId: proxmox-vm-template-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VmTemplateListCommand"
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch proxmox vm template list
      tags:
      - Proxmox cloud credential
  /api/v1/proxmox/list:
    get:
      operationId: proxmox-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProxmoxList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve list of proxmox cloud credentials
      tags:
      - Proxmox cloud credential
  /api/v1/s3credentials:
    get:
      description: |-
        <div style='font-family: Arial, sans-serif;'>
                                <h2 style='color: #4A90E2;'>Description</h2>
                                <ul><li><b>Search</b> - Options: <i>name</i></ul></div>
      operationId: s3credentials-dropdown
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - backupCredentialId: 1
                name: taikun
                isDefault: false
                isInfra: false
              schema:
                items:
                  $ref: "#/components/schemas/BackupCredentialsForOrganizationEntity"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all S3 credentials for organization
      tags:
      - S3 Credentials
    post:
      operationId: s3credentials-create
      requestBody:
        content:
          application/json:
            example:
              s3Name: taikun
              s3AccessKeyId: X9BZGP8TSTB7D4K6N9U8
              s3SecretKey: rd98DUXrLkcxI5rqcimJD2BkrsRUZmbqBSwcAcIm
              s3Endpoint: ec2.ap-south-1.amazonaws.com
              s3Region: ap-south-1
              organizationId: 1
            schema:
              $ref: "#/components/schemas/BackupCredentialsCreateCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add s3 credential
      tags:
      - S3 Credentials
    put:
      operationId: s3credentials-update
      requestBody:
        content:
          application/json:
            example:
              id: 1
              s3Name: taikun
              s3AccessKeyId: X9BZGP8TSTB7D4K6N9U8
              s3SecretKey: rd98DUXrLkcxI5rqcimJD2BkrsRUZmbqBSwcAcIm
            schema:
              $ref: "#/components/schemas/BackupCredentialsUpdateCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update s3 credential
      tags:
      - S3 Credentials
  /api/v1/s3credentials/lockmanager:
    post:
      operationId: s3credentials-lock-management
      requestBody:
        content:
          application/json:
            example:
              id: 1
              mode: lock|unlock
            schema:
              $ref: "#/components/schemas/BackupLockManagerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Lock/unlock s3 credential
      tags:
      - S3 Credentials
  /api/v1/s3credentials/makedefault:
    post:
      operationId: s3credentials-make-default
      requestBody:
        content:
          application/json:
            example:
              id: 1
            schema:
              $ref: "#/components/schemas/BackupMakeDefaultCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Make default s3 credential
      tags:
      - S3 Credentials
  /api/v1/s3credentials/list:
    get:
      description: |-
        <div style='font-family: Arial, sans-serif;'>
                                <h2 style='color: #4A90E2;'>Description</h2>
                                <ul><li><b>SortBy</b> - Options: <i>name</i>, <i>url</i>, <i>region</i>, <i>organizationName</i>, <i>createdAt</i><li><b>SortDirection</b> - Options: <i>asc</i>, <i>desc</i><li><b>Search</b> - Options: <i>name</i>, <i>organizationName</i></ul></div>
      operationId: s3credentials-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - id: 1
                  s3Name: taikun
                  s3AccessKeyId: X9BZGP8TSTB7D4K6N9U8
                  s3Endpoint: ec2.ap-south-1.amazonaws.com
                  s3Region: ap-south-1
                  organizationId: 1
                  organizationName: taikun.cloud a.s.
                  projects:
                  - id: 1
                    name: taikun
                  isLocked: false
                  createdBy: taikun
                  lastModified: 2023-11-21T12:09:23Z
                  lastModifiedBy: taikun
                  createdAt: 2023-11-21T12:09:23Z
                  isDefault: false
                  isInfra: false
                totalCount: 0
              schema:
                $ref: "#/components/schemas/BackupCredentials"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all S3 credentials
      tags:
      - S3 Credentials
  /api/v1/s3credentials/{id}:
    delete:
      operationId: s3credentials-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete s3 credential
      tags:
      - S3 Credentials
  /api/v1/search/access-profiles:
    post:
      operationId: search-access-profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccessProfilesSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessProfilesSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for access-profiles
      tags:
      - Search
  /api/v1/search/backup-credentials:
    post:
      operationId: search-backup-credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BackupCredentialsSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupCredentialsSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for backup-credentials
      tags:
      - Search
  /api/v1/search/billing-credentials:
    post:
      operationId: search-billing-credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingCredentialsSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingCredentialsSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for billing-credentials
      tags:
      - Search
  /api/v1/search/cloud-credentials:
    post:
      operationId: search-cloud-credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloudCredentialsSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudCredentialsSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for cloud-credentials
      tags:
      - Search
  /api/v1/search/config-maps:
    post:
      operationId: search-config-maps
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigMapSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigMapSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for config-maps
      tags:
      - Search
  /api/v1/search/crds:
    post:
      operationId: search-crds
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrdSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CrdSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for crds
      tags:
      - Search
  /api/v1/search/cronjobs:
    post:
      operationId: search-cron-jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CronjobsSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CronjobsSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for jobs
      tags:
      - Search
  /api/v1/search/daemon-sets:
    post:
      operationId: search-daemon-sets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DaemonSetSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DaemonSetSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for daemon-sets
      tags:
      - Search
  /api/v1/search/deployments:
    post:
      operationId: search-deployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeploymentSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for deployments
      tags:
      - Search
  /api/v1/search/helm-releases:
    post:
      operationId: search-helm-releases
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HelmReleasesSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelmReleasesSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for helm-releases
      tags:
      - Search
  /api/v1/search/ingress:
    post:
      operationId: search-ingress
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IngressSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IngressSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for ingress
      tags:
      - Search
  /api/v1/search/jobs:
    post:
      operationId: search-jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JobsSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobsSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for jobs
      tags:
      - Search
  /api/v1/search/pdb:
    post:
      operationId: search-pdb
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PdbSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PdbSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for pdb
      tags:
      - Search
  /api/v1/search/kubernetes-profiles:
    post:
      operationId: search-kubernetes-profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KubernetesProfilesSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubernetesProfilesSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for kubernetes-profiles
      tags:
      - Search
  /api/v1/search/namespaces:
    post:
      operationId: search-namespaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NamespaceSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NamespaceSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for namespaces
      tags:
      - Search
  /api/v1/search/network-policies:
    post:
      operationId: search-network-policies
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworkPoliciesSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkPoliciesSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for namespaces
      tags:
      - Search
  /api/v1/search/nodes:
    post:
      operationId: search-nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NodesSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodesSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for nodes
      tags:
      - Search
  /api/v1/search/organizations:
    post:
      operationId: search-organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for organizations
      tags:
      - Search
  /api/v1/search/partners:
    post:
      operationId: search-partners
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PartnersSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartnersSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for partners
      tags:
      - Search
  /api/v1/search/pvcs:
    post:
      operationId: search-pvcs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PvcSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PvcSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for pvcs
      tags:
      - Search
  /api/v1/search/pods:
    post:
      operationId: search-pods
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PodsSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PodsSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for pods
      tags:
      - Search
  /api/v1/search/projects:
    post:
      operationId: search-projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectsSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectsSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for projects
      tags:
      - Search
  /api/v1/search/prometheus-rules:
    post:
      operationId: search-prometheus-rules
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrometheusRulesSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrometheusRulesSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for prometheus-rules
      tags:
      - Search
  /api/v1/search/secrets:
    post:
      operationId: search-secrets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SecretSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecretSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for secrets
      tags:
      - Search
  /api/v1/search/servers:
    post:
      operationId: search-servers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServersSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServersSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for servers
      tags:
      - Search
  /api/v1/search/services:
    post:
      operationId: search-services
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for services
      tags:
      - Search
  /api/v1/search/stand-alone-profiles:
    post:
      operationId: search-stand-alone-profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StandAloneProfilesSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandAloneProfilesSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for stand-alone-profiles
      tags:
      - Search
  /api/v1/search/storage-classes:
    post:
      operationId: search-storage-classes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StorageClassesSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StorageClassesSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for storage classes.
      tags:
      - Search
  /api/v1/search/sts:
    post:
      operationId: search-sts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StsSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StsSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for sts
      tags:
      - Search
  /api/v1/search/users:
    post:
      operationId: search-users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UsersSearchCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersSearchList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Global search for users
      tags:
      - Search
  /api/v1/securitygroup/edit:
    put:
      operationId: securitygroup-edit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditSecurityGroupCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Edit standalone profile security group
      tags:
      - Security group
  /api/v1/securitygroup/create:
    post:
      operationId: securitygroup-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSecurityGroupCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create standalone profile security group
      tags:
      - Security group
  /api/v1/securitygroup/list/{standAloneProfileId}:
    get:
      operationId: securitygroup-list
      parameters:
      - explode: false
        in: path
        name: standAloneProfileId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SecurityGroupListDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: List stand alone security group by profile id
      tags:
      - Security group
  /api/v1/securitygroup/{id}:
    delete:
      operationId: securitygroup-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete standalone profile security group
      tags:
      - Security group
  /api/v1/servers/update/{projectId}:
    put:
      operationId: servers-update-by-project-id
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/UpdateServerHealthDto"
              type: array
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update server by projectId
      tags:
      - Servers
  /api/v1/servers/console:
    post:
      operationId: servers-console
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsoleScreenshotCommand"
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Console screenshot or terminal access for server
      tags:
      - Servers
  /api/v1/servers/create:
    post:
      operationId: servers-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServerForCreateDto"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create a new server in the given project.
      tags:
      - Servers
  /api/v1/servers/reboot:
    post:
      operationId: servers-reboot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RebootServerCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Reboot server
      tags:
      - Servers
  /api/v1/servers/reset:
    post:
      operationId: servers-reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetServerStatusCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update server(s) status(es)
      tags:
      - Servers
  /api/v1/servers/{projectId}:
    get:
      operationId: servers-details
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: WithAutoscalingGroup
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServersListForDetails"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all servers by given project
      tags:
      - Servers
  /api/v1/servers:
    get:
      operationId: servers-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: StartDiskSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: EndDiskSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: AutoscalingGroup
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServersList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all servers
      tags:
      - Servers
  /api/v1/servers/status/{serverId}:
    get:
      operationId: servers-status
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Show server status
      tags:
      - Servers
  /api/v1/slack/update/{id}:
    put:
      operationId: slack-update
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSlackConfigurationDto"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update slack configuration
      tags:
      - Slack
  /api/v1/slack/create:
    post:
      operationId: slack-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSlackConfigurationCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create slack configuration
      tags:
      - Slack
  /api/v1/slack/delete-multiple:
    post:
      operationId: slack-delete-multiple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteSlackConfigCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete slack configuration(s)
      tags:
      - Slack
  /api/v1/slack/verify:
    post:
      operationId: slack-verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifySlackCredentialsCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Verify slack configuration
      tags:
      - Slack
  /api/v1/slack/list:
    get:
      operationId: slack-dropdown
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all slack configs for organization
      tags:
      - Slack
  /api/v1/slack:
    get:
      operationId: slack-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SlackConfigurationList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all slack configs
      tags:
      - Slack
  /api/v1/sshusers/create:
    post:
      operationId: sshusers-create
      requestBody:
        content:
          application/json:
            example:
              name: taikun
              sshPublicKey: |-
                ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAklOUpkDHrfHY17SbrmTIpNLTGK9Tjom/BWDSU
                GPl+nafzlHDTYW7hdI4yZ5ew18JH4JW9jbhUFrviQzM7xlELEVf4h9lFX5QVkbPppSwg0cda3
                Pbv7kOdJ/MTyBlWXFCR+HAo3FXRitBqxiX1nKhXpHAZsMciLq8V6RjsNAQwdsdMFvSlVK/7XA
                t3FaoJoAsncM1Q9x5+3V0Ww68/eIFmb1zuUFljQJKprrX88XypNDvjYNby6vw/Pb0rwert/En
                mZ+AW4OZPnTPI89ZPmVMLuayrD2cE86Z/il8b+gw3r3+1nKatmIkjn2so1d01QraTlMqVSsbx
                NrRFi9wrf+M7Q== taikun@taikun.local
              accessProfileId: 1
            schema:
              $ref: "#/components/schemas/CreateSshUserCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create access profile ssh user
      tags:
      - Ssh Users
  /api/v1/sshusers/delete:
    post:
      operationId: sshusers-delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteSshUserCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete access profile ssh user
      tags:
      - Ssh Users
  /api/v1/sshusers/edit:
    post:
      operationId: sshusers-edit
      requestBody:
        content:
          application/json:
            example:
              id: 1
              name: taikun
              sshPublicKey: |-
                ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAklOUpkDHrfHY17SbrmTIpNLTGK9Tjom/BWDSU
                GPl+nafzlHDTYW7hdI4yZ5ew18JH4JW9jbhUFrviQzM7xlELEVf4h9lFX5QVkbPppSwg0cda3
                Pbv7kOdJ/MTyBlWXFCR+HAo3FXRitBqxiX1nKhXpHAZsMciLq8V6RjsNAQwdsdMFvSlVK/7XA
                t3FaoJoAsncM1Q9x5+3V0Ww68/eIFmb1zuUFljQJKprrX88XypNDvjYNby6vw/Pb0rwert/En
                mZ+AW4OZPnTPI89ZPmVMLuayrD2cE86Z/il8b+gw3r3+1nKatmIkjn2so1d01QraTlMqVSsbx
                NrRFi9wrf+M7Q== taikun@taikun.local
              accessProfileId: 1
            schema:
              $ref: "#/components/schemas/EditSshUserCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Edit access profile ssh user
      tags:
      - Ssh Users
  /api/v1/sshusers/list/{accessProfileId}:
    get:
      operationId: sshusers-list
      parameters:
      - explode: false
        in: path
        name: accessProfileId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                name: taikun
                sshPublicKey: |-
                  ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAklOUpkDHrfHY17SbrmTIpNLTGK9Tjom/BWDSU
                  GPl+nafzlHDTYW7hdI4yZ5ew18JH4JW9jbhUFrviQzM7xlELEVf4h9lFX5QVkbPppSwg0cda3
                  Pbv7kOdJ/MTyBlWXFCR+HAo3FXRitBqxiX1nKhXpHAZsMciLq8V6RjsNAQwdsdMFvSlVK/7XA
                  t3FaoJoAsncM1Q9x5+3V0Ww68/eIFmb1zuUFljQJKprrX88XypNDvjYNby6vw/Pb0rwert/En
                  mZ+AW4OZPnTPI89ZPmVMLuayrD2cE86Z/il8b+gw3r3+1nKatmIkjn2so1d01QraTlMqVSsbx
                  NrRFi9wrf+M7Q== taikun@taikun.local
                accessProfileName: taikun
              schema:
                items:
                  $ref: "#/components/schemas/SshUsersListDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: List ssh user by access profile id
      tags:
      - Ssh Users
  /api/v1/standalone/create:
    post:
      operationId: standalone-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateStandAloneVmCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create a new vm in the given project.
      tags:
      - Standalone
  /api/v1/standalone/ip/management:
    post:
      operationId: standalone-ip-management
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StandAloneVmIpManagementCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Enable/Disable stand alone public ip
      tags:
      - Standalone
  /api/v1/standalone/reset:
    post:
      operationId: standalone-reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetStandAloneVmStatusCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Reset vm status
      tags:
      - Standalone
  /api/v1/standalone/update/flavor:
    post:
      operationId: standalone-update-flavor
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateStandAloneVmFlavorCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update standalone vm flavor
      tags:
      - Standalone
  /api/v1/standalone/{projectId}:
    get:
      operationId: standalone-details
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandAloneVmListForDetails"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve a list of standalone vm with detailed info
      tags:
      - Standalone
  /api/v1/standalone:
    get:
      operationId: standalone-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: StartRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: EndRam
        required: false
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: StartVolumeSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: EndVolumeSize
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: StartCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: EndCpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandaloneVmsList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all vms
      tags:
      - Standalone
  /api/v1/standalonevmdisks/create:
    post:
      operationId: standalonevmdisks-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateStandAloneDiskCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add disk for standalone vm
      tags:
      - Standalone VM disks
  /api/v1/standalonevmdisks/update-size:
    post:
      operationId: standalonevmdisks-update-size
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateStandaloneVmDiskSizeCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update disk size
      tags:
      - Standalone VM disks
  /api/v1/standaloneactions/console:
    post:
      operationId: standaloneactions-console
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VmConsoleScreenshotCommand"
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Console screenshot or terminal for vm
      tags:
      - Standalone actions
  /api/v1/standaloneactions/password:
    post:
      operationId: standaloneactions-windows-instance-password
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/WindowsInstancePasswordCommand"
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve aws windows admin instance password
      tags:
      - Standalone actions
  /api/v1/standaloneactions/reboot:
    post:
      operationId: standaloneactions-reboot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RebootStandAloneVmCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Reboot standalone vm
      tags:
      - Standalone actions
  /api/v1/standaloneactions/shelve:
    post:
      operationId: standaloneactions-shelve
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShelveStandAloneVmCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Shelve standalone vm
      tags:
      - Standalone actions
  /api/v1/standaloneactions/start:
    post:
      operationId: standaloneactions-start
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartStandaloneVmCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Start standalone vm
      tags:
      - Standalone actions
  /api/v1/standaloneactions/stop:
    post:
      operationId: standaloneactions-stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopStandaloneVmCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Stop standalone vm
      tags:
      - Standalone actions
  /api/v1/standaloneactions/unshelve:
    post:
      operationId: standaloneactions-unshelve
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnshelveStandaloneVmCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Unshelve standalone vm
      tags:
      - Standalone actions
  /api/v1/standaloneactions/download/rdp/{id}:
    get:
      operationId: standaloneactions-download-rdp
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CsvExporter"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Download RDP file
      tags:
      - Standalone actions
  /api/v1/standaloneactions/status/{id}:
    get:
      operationId: standaloneactions-status
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Show standalone vm status
      tags:
      - Standalone actions
  /api/v1/standaloneprofile/create:
    post:
      operationId: standaloneprofile-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StandAloneProfileCreateCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create standalone profile.
      tags:
      - Standalone profile
  /api/v1/standaloneprofile/delete:
    post:
      operationId: standaloneprofile-delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteStandAloneProfileCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete standalone profile.
      tags:
      - Standalone profile
  /api/v1/standaloneprofile/edit:
    post:
      operationId: standaloneprofile-edit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StandAloneProfileUpdateCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Edit standalone profile.
      tags:
      - Standalone profile
  /api/v1/standaloneprofile/lockmanager:
    post:
      operationId: standaloneprofile-lock-management
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StandAloneProfileLockManagementCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Lock/unlock standalone profile.
      tags:
      - Standalone profile
  /api/v1/standaloneprofile/list:
    get:
      operationId: standaloneprofile-dropdown
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all standalone profiles for organization
      tags:
      - Standalone profile
  /api/v1/standaloneprofile:
    get:
      operationId: standaloneprofile-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StandAloneProfiles"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all standalone profiles
      tags:
      - Standalone profile
  /api/v1/stripe/{subscriptionId}:
    get:
      operationId: stripe-subscription-item-list
      parameters:
      - explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/StripeSubscriptionItemDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get subscription item list
      tags:
      - Stripe
  /api/v1/subscription/bind:
    post:
      operationId: subscription-bind
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BindSubscriptionCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BindSubscriptionResponseDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Bind subscription
      tags:
      - Subscription
  /api/v1/subscription/create:
    post:
      operationId: subscription-subscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSubscriptionCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add new subscription package
      tags:
      - Subscription
  /api/v1/subscription/delete:
    post:
      operationId: subscription-delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteSubscriptionCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete subscription package
      tags:
      - Subscription
  /api/v1/subscription/update:
    post:
      operationId: subscription-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSubscriptionCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update subscription
      tags:
      - Subscription
  /api/v1/subscription:
    get:
      operationId: subscription-list
      parameters:
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrivateSubscriptionList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve private subscription list for partners
      tags:
      - Subscription
  /api/v1/subscription/public:
    get:
      operationId: subscription-public
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ListForLandingPageDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve subscription for organization bound
      tags:
      - Subscription
  /api/v1/subscription/boundlist:
    get:
      operationId: subscription-bound-list
      parameters:
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ListForOrganizationEditDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve subscription for organization bound
      tags:
      - Subscription
  /api/v1/taikun-lb/create/{projectId}:
    post:
      operationId: taikun-lb-create-taikun-lb
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGenericTaikunLbDto"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaikunLbResponseDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create Taikun LB
      tags:
      - Taikun LB
  /api/v1/taikun-lb/delete/{projectId}:
    post:
      operationId: taikun-lb-delete-taikun-lb
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGenericTaikunLbDto"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete Taikun LB
      tags:
      - Taikun LB
  /api/v1/taikun-lb/list/{projectId}:
    get:
      operationId: taikun-lb-list-taikun-lb
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: SvcName
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SvcNameSpace
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TaikunLbResponseDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve taikun lbs for project
      tags:
      - Taikun LB
  /api/v1/tanzu/create:
    post:
      operationId: tanzu-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTanzuCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create tanzu credentials
      tags:
      - Tanzu
  /api/v1/tanzu/storage-list:
    post:
      operationId: tanzu-storage-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TanzuStorageListCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Tanzu storage list
      tags:
      - Tanzu
  /api/v1/tanzu/update:
    post:
      operationId: tanzu-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTanzuCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update tanzu credentials
      tags:
      - Tanzu
  /api/v1/tanzu/kubernetes-versions/{cloudId}:
    get:
      operationId: tanzu-kubernetes-versions
      parameters:
      - explode: false
        in: path
        name: cloudId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Tanzu available k8s version list
      tags:
      - Tanzu
  /api/v1/tanzu/list:
    get:
      operationId: tanzu-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TanzuCredentialsList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve list of tanzu cloud credentials
      tags:
      - Tanzu
  /api/v1/ticket/archive:
    post:
      operationId: ticket-archive
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArchiveTicketCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Archive ticket
      tags:
      - Ticket
  /api/v1/ticket/close:
    post:
      operationId: ticket-close
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloseTicketCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Close ticket
      tags:
      - Ticket
  /api/v1/ticket/create:
    post:
      operationId: ticket-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTicketCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create ticket
      tags:
      - Ticket
  /api/v1/ticket/edit:
    post:
      operationId: ticket-edit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditTicketCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Edit ticket
      tags:
      - Ticket
  /api/v1/ticket/open:
    post:
      operationId: ticket-open
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpenTicketCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Open ticket
      tags:
      - Ticket
  /api/v1/ticket/reply:
    post:
      operationId: ticket-reply
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReplyTicketCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Reply message
      tags:
      - Ticket
  /api/v1/ticket/set-priority:
    post:
      operationId: ticket-set-priority
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetTicketPriorityCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Set priority
      tags:
      - Ticket
  /api/v1/ticket/transfer:
    post:
      operationId: ticket-transfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferTicketCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Transfer ticket
      tags:
      - Ticket
  /api/v1/ticket/edit/message:
    post:
      operationId: ticket-edit-message
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditArticleCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Edit ticket message
      tags:
      - Ticket
  /api/v1/ticket/{ticketId}/messages:
    get:
      operationId: ticket-messages
      parameters:
      - explode: false
        in: path
        name: ticketId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArticleList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve articles of ticket
      tags:
      - Ticket
  /api/v1/ticket/transfer/list:
    get:
      operationId: ticket-transfer-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TransferList"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve organization managers
      tags:
      - Ticket
  /api/v1/ticket/list:
    get:
      operationId: ticket-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: StartDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: EndDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: TicketId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllTicketsList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve list of tickets
      tags:
      - Ticket
  /api/v1/ticket/delete/{ticketId}:
    delete:
      operationId: ticket-delete
      parameters:
      - explode: false
        in: path
        name: ticketId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
        "200":
          description: OK
      summary: Delete ticket
      tags:
      - Ticket
  /api/v1/ticket/delete/message/{messageId}:
    delete:
      operationId: ticket-delete-message
      parameters:
      - explode: false
        in: path
        name: messageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
        "200":
          description: OK
      summary: Delete ticket message
      tags:
      - Ticket
  /api/v1/usergroups/update/{userGroupId}:
    put:
      operationId: usergroups-update
      parameters:
      - explode: false
        in: path
        name: userGroupId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserGroupDto"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update user groups
      tags:
      - User group
  /api/v1/usergroups/bind-project-groups:
    post:
      operationId: usergroups-bind-projects-group
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BindProjectGroupsToUserGroupCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Bind project groups
      tags:
      - User group
  /api/v1/usergroups/bind-user:
    post:
      operationId: usergroups-bind-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BindUsersToUserGroupCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Bind Users to group
      tags:
      - User group
  /api/v1/usergroups/create:
    post:
      operationId: usergroups-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserGroupCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add user groups
      tags:
      - User group
  /api/v1/projectgroups/unbind-project-group:
    post:
      operationId: projectgroups-unbind-project-group
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnbindProjectGroupFromUserGroupCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Unbind project group from user group
      tags:
      - User group
  /api/v1/usergroups/unbind-user:
    post:
      operationId: usergroups-unbind-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnbindUserFromUserGroupCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Unbind Users from group
      tags:
      - User group
  /api/v1/usergroups/list:
    get:
      operationId: usergroups-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroupList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve list of user groups
      tags:
      - User group
  /api/v1/usergroups/list/{projectGroupId}:
    get:
      operationId: usergroups-list-by-project-group-id
      parameters:
      - explode: false
        in: path
        name: projectGroupId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Dropdown list
      tags:
      - User group
  /api/v1/usergroups/{userGroupId}/users:
    get:
      operationId: usergroups-user-group-users
      parameters:
      - explode: false
        in: path
        name: userGroupId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1"
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonStringBasedDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve list of users by user group id
      tags:
      - User group
  /api/v1/usergroups:
    post:
      operationId: usergroups-delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteUserGroupCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Remove user group(s)
      tags:
      - User group
  /api/v1/userprojects/projects/list:
    get:
      operationId: userprojects-project-list-by-user
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 1
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Projects list for user
      tags:
      - User projects
  /api/v1/userprojects/users/list/{projectId}:
    get:
      operationId: userprojects-user-list-by-project
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1"
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonStringBasedDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Users list by project id
      tags:
      - User projects
  /api/v1/usertoken/bind-unbind:
    post:
      operationId: usertoken-bind-unbind
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BindUnbindEndpointToTokenCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Bind and unbind endpoints
      tags:
      - User token
  /api/v1/usertoken/create:
    post:
      operationId: usertoken-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserTokenCreateCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserTokenCreateDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create a new user token
      tags:
      - User token
  /api/v1/usertoken/available-endpoints:
    get:
      operationId: usertoken-available-endpoints
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: IsAdd
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: IsReadonly
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AvailableEndpointsList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get available endpoint list
      tags:
      - User token
  /api/v1/usertoken/list:
    get:
      operationId: usertoken-list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/UserTokensListDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Get user token list
      tags:
      - User token
  /api/v1/usertoken/delete/{id}:
    delete:
      operationId: usertoken-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
        "200":
          description: OK
      summary: Delete user token
      tags:
      - User token
  /api/v1/users/{id}/projects:
    post:
      operationId: users-add-user-projects
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
        "200":
          description: OK
      summary: Add projects to user
      tags:
      - Users
    put:
      operationId: users-delete-user-projects
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
        "200":
          description: OK
      summary: Delete projects from user
      tags:
      - Users
  /api/v1/users/changepassword:
    post:
      operationId: users-change-password
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Change user password
      tags:
      - Users
  /api/v1/users/confirmemail:
    post:
      operationId: users-confirm-email
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfirmEmailCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Confirm user email
      tags:
      - Users
  /api/v1/users/create:
    post:
      operationId: users-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create user
      tags:
      - Users
  /api/v1/users/delete:
    post:
      operationId: users-delete-my-account
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteMyAccountCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete my account
      tags:
      - Users
  /api/v1/users/disable:
    post:
      operationId: users-disable
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisableUserCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Disable user
      tags:
      - Users
  /api/v1/users/force-to-reset:
    post:
      operationId: users-force-to-reset-password
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ForceToResetPasswordCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Force to reset password
      tags:
      - Users
  /api/v1/users/togglemaintenancemode:
    post:
      operationId: users-toggle-maintenance-mode
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ToggleMaintenanceModeCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Toggle maintenance mode
      tags:
      - Users
  /api/v1/users/togglenotificationmode:
    post:
      operationId: users-toggle-notification-mode
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ToggleNotificationModeCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Toggle notification mode
      tags:
      - Users
  /api/v1/users/update:
    post:
      operationId: users-update-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update user
      tags:
      - Users
  /api/v1/users/verifyemail:
    post:
      operationId: users-verify-email
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyEmailCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Verify user email
      tags:
      - Users
  /api/v1/users/userinfo:
    get:
      operationId: users-user-info
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDetails"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve user info
      tags:
      - Users
  /api/v1/users/list:
    get:
      operationId: users-dropdown
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ProjectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CommonStringDropdownIsBoundDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve users as dropdown
      tags:
      - Users
  /api/v1/users/export:
    get:
      operationId: users-export-csv
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CsvExporter"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Export Csv
      tags:
      - Users
  /api/v1/users:
    get:
      operationId: users-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: FilterBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all users
      tags:
      - Users
  /api/v1/users/{id}:
    delete:
      operationId: users-delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
        "200":
          description: OK
      summary: Delete user
      tags:
      - Users
  /api/v1/virtual-cluster/create:
    post:
      operationId: virtual-cluster-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateVirtualClusterCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create virtual cluster
      tags:
      - Virtual Cluster
  /api/v1/virtual-cluster/delete:
    post:
      operationId: virtual-cluster-delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteVirtualClusterCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Delete virtual cluster
      tags:
      - Virtual Cluster
  /api/v1/virtual-cluster/disable-ai:
    post:
      operationId: virtual-cluster-disable-ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VirtualClusterDisableAiCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Disable ai for virtual cluster
      tags:
      - Virtual Cluster
  /api/v1/virtual-cluster/disable-backup:
    post:
      operationId: virtual-cluster-disable-backup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VirtualClusterDisableBackupCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Disable backup for virtual cluster
      tags:
      - Virtual Cluster
  /api/v1/virtual-cluster/disable-monitoring:
    post:
      operationId: virtual-cluster-disable-monitoring
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VirtualClusterDisableMonitoringCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Disable monitoring for virtual cluster
      tags:
      - Virtual Cluster
  /api/v1/virtual-cluster/disable-opa:
    post:
      operationId: virtual-cluster-disable-opa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VirtualClusterDisableOpaCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Disable opa for virtual cluster
      tags:
      - Virtual Cluster
  /api/v1/virtual-cluster/edit/quotas:
    post:
      operationId: virtual-cluster-edit-quotas
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditVirtualClusterQuotasCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Edit virtual cluster resource quotas and limit ranges
      tags:
      - Virtual Cluster
  /api/v1/virtual-cluster/enable-ai:
    post:
      operationId: virtual-cluster-enable-ai
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VirtualClusterEnableAiCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Enable ai for virtual cluster
      tags:
      - Virtual Cluster
  /api/v1/virtual-cluster/enable-backup:
    post:
      operationId: virtual-cluster-enable-backup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VirtualClusterEnableBackupCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Enable backup for virtual cluster
      tags:
      - Virtual Cluster
  /api/v1/virtual-cluster/enable-monitoring:
    post:
      operationId: virtual-cluster-enable-monitoring
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VirtualClusterEnableMonitoringCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Enable monitoring for virtual cluster
      tags:
      - Virtual Cluster
  /api/v1/virtual-cluster/enable-opa:
    post:
      operationId: virtual-cluster-enable-opa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VirtualClusterEnableOpaCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Enable opa for virtual cluster
      tags:
      - Virtual Cluster
  /api/v1/virtual-cluster/{parentProjectId}:
    get:
      operationId: virtual-cluster-list
      parameters:
      - explode: false
        in: path
        name: parentProjectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VClusterList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve all vCluster by given project
      tags:
      - Virtual Cluster
  /api/v1/virtual-cluster/quota/{projectId}:
    get:
      operationId: virtual-cluster-quota
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KubernetesQuotaListDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve vcluster quota details
      tags:
      - Virtual Cluster
  /api/v1/virtual-cluster/quota-presets:
    get:
      operationId: virtual-cluster-quota-presets
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualClusterQuotasDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve vCluster quota presets
      tags:
      - Virtual Cluster
  /api/v1/virtual-cluster/visibility/{projectId}:
    get:
      operationId: virtual-cluster-visibility
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VClusterActionVisibilityDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Create button condition visibility
      tags:
      - Virtual Cluster
  /api/v1/vsphere/create:
    post:
      operationId: vsphere-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateVsphereCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add Vsphere credentials
      tags:
      - Vsphere cloud credential
  /api/v1/vsphere/datacenter-list:
    post:
      operationId: vsphere-datacenter-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatacenterListCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/DatacenterSummary"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch Vsphere datacenter list
      tags:
      - Vsphere cloud credential
  /api/v1/vsphere/datastore-list:
    post:
      operationId: vsphere-datastore-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatastoreListCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/DatastoreSummary"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch Vsphere datastore list
      tags:
      - Vsphere cloud credential
  /api/v1/vsphere/hypervisor-list:
    post:
      operationId: vsphere-hypervisor-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VsphereHypervisorListCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProxmoxHypervisorDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch Vsphere hypervisor list
      tags:
      - Vsphere cloud credential
  /api/v1/vsphere/network-list:
    post:
      operationId: vsphere-network-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworkListCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/NetworkSummary"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch Vsphere network list
      tags:
      - Vsphere cloud credential
  /api/v1/vsphere/resource-pool-list:
    post:
      operationId: vsphere-resource-pool-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourcePoolListCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ResourcePoolSummary"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch Vsphere resource pool list
      tags:
      - Vsphere cloud credential
  /api/v1/vsphere/update:
    post:
      operationId: vsphere-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateVsphereCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update Vsphere credentials
      tags:
      - Vsphere cloud credential
  /api/v1/vsphere/update/hypervisors:
    post:
      operationId: vsphere-update-vsphere-hypervisors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateVsphereHypervisorsCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update Vsphere credentials
      tags:
      - Vsphere cloud credential
  /api/v1/vsphere/validate:
    post:
      operationId: vsphere-validate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidateVsphereCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Validate Vsphere credentials
      tags:
      - Vsphere cloud credential
  /api/v1/vsphere/vm-template-list:
    post:
      operationId: vsphere-vm-template-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VsphereVmTemplateListCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/VsphereVmTemplateData"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch Vsphere vm template list
      tags:
      - Vsphere cloud credential
  /api/v1/vsphere/list:
    get:
      operationId: vsphere-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VsphereList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve list of vsphere cloud credentials
      tags:
      - Vsphere cloud credential
  /api/v1/zadara/create:
    post:
      operationId: zadara-create
      requestBody:
        content:
          application/json:
            example:
              name: taikun
              zadaraUrl: https://www.google.com
              zadaraSecretAccessKey: rd98DUXrLkcxI5rqcimJD2BkrsRUZmbqBSwcAcIm
              zadaraAccessKeyId: X9BZGP8TSTB7D4K6N9U8
              zadaraRegion: ap-south-1
              organizationId: 1
              azCount: 1
              zadaraContinent: Europe
              zadaraVolumeType: taikun
            schema:
              $ref: "#/components/schemas/CreateZadaraCloudCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add Zadara credentials
      tags:
      - Zadara cloud credential
  /api/v1/zadara/regions:
    post:
      operationId: zadara-regionlist
      requestBody:
        content:
          application/json:
            example:
              url: https://www.google.com
              zadaraAccessKeyId: X9BZGP8TSTB7D4K6N9U8
              zadaraSecretAccessKey: rd98DUXrLkcxI5rqcimJD2BkrsRUZmbqBSwcAcIm
            schema:
              $ref: "#/components/schemas/ZadaraRegionListCommand"
      responses:
        "200":
          content:
            application/json:
              example:
              - name: taikun
                region: ap-south-1
              schema:
                items:
                  $ref: "#/components/schemas/AwsRegionDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve zadara regions list
      tags:
      - Zadara cloud credential
  /api/v1/zadara/update:
    post:
      operationId: zadara-update
      requestBody:
        content:
          application/json:
            example:
              id: 1
              name: taikun
              zadaraSecretAccessKey: rd98DUXrLkcxI5rqcimJD2BkrsRUZmbqBSwcAcIm
              zadaraAccessKeyId: X9BZGP8TSTB7D4K6N9U8
            schema:
              $ref: "#/components/schemas/UpdateZadaraCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update zadara cloud credential
      tags:
      - Zadara cloud credential
  /api/v1/zadara/zones:
    post:
      operationId: zadara-zonelist
      requestBody:
        content:
          application/json:
            example:
              url: https://www.google.com
              zadaraAccessKeyId: X9BZGP8TSTB7D4K6N9U8
              zadaraSecretAccessKey: rd98DUXrLkcxI5rqcimJD2BkrsRUZmbqBSwcAcIm
              cloudId: 1
            schema:
              $ref: "#/components/schemas/ZadaraAvailabilityZonesCommand"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - eu-west-1a
                totalCount: 1
              schema:
                $ref: "#/components/schemas/AzResult"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve zadara zone list
      tags:
      - Zadara cloud credential
  /api/v1/zadara/list:
    get:
      description: |-
        <div style='font-family: Arial, sans-serif;'>
                                <h2 style='color: #4A90E2;'>Description</h2>
                                <ul><li><b>SortBy</b> - Options: <i>zadaraRegion</i>, <i>organizationName</i>, <i>createdAt</i><li><b>SortDirection</b> - Options: <i>asc</i>, <i>desc</i><li><b>Search</b> - Options: <i>name</i>, <i>organizationName</i></ul></div>
      operationId: zadara-list
      parameters:
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - id: 1
                  projectCount: 1
                  isLocked: false
                  name: taikun
                  region: ""
                  availabilityZones: []
                  availabilityZonesCount: 0
                  projects:
                  - id: 1
                    name: taikun
                  createdBy: taikun
                  lastModified: 2023-11-21T12:09:23Z
                  lastModifiedBy: taikun
                  isDefault: false
                  organizationId: 1
                  organizationName: taikun.cloud a.s.
                  createdAt: 2023-11-21T12:09:23Z
                  continentName: Europe
                  zadaraApiUrl: ""
                  zadaraVolumeType: ""
                totalCount: 1
              schema:
                $ref: "#/components/schemas/ZadaraCredentialList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve list of Zadara cloud credentials
      tags:
      - Zadara cloud credential
  /api/v1/zadara/volume-types:
    get:
      operationId: zadara-volume-type-list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve volume type list
      tags:
      - Zadara cloud credential
  /api/v1/zededa/create:
    post:
      operationId: zededa-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateZededaCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Add Zededa credentials
      tags:
      - Zededa cloud credential
  /api/v1/zededa/edge-nodes:
    post:
      operationId: zededa-edge-nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZededaEdgeNodesCommand"
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1"
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonStringBasedDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch edge nodes for zededa cloud credential
      tags:
      - Zededa cloud credential
  /api/v1/zededa/interfaces:
    post:
      operationId: zededa-interfaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZededaInterfaceCommand"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch interfaces for zededa cloud credential
      tags:
      - Zededa cloud credential
  /api/v1/zededa/projects:
    post:
      operationId: zededa-projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZededaProjectsCommand"
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1"
                name: taikun
              schema:
                items:
                  $ref: "#/components/schemas/CommonStringBasedDropdownDto"
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Fetch projects for zededa cloud credential
      tags:
      - Zededa cloud credential
  /api/v1/zededa/update/edge-nodes:
    post:
      operationId: zededa-update-edge-nodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEdgeNodesCommand"
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Update zededa credentials
      tags:
      - Zededa cloud credential
  /api/v1/zededa/list:
    get:
      operationId: zededa-list
      parameters:
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: OrganizationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: SortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SortDirection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SearchId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZededaList"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Internal Server Error
      summary: Retrieve list of Zededa cloud credentials
      tags:
      - Zededa cloud credential
components:
  schemas:
    AcceptOfferCommand:
      additionalProperties: false
      type: object
    AccessProfilesList:
      additionalProperties: false
      example:
        data:
        - allowedHosts:
          - accessProfileName: accessProfileName
            ipAddress: ipAddress
            description: description
            accessProfileId: 7
            id: 5
            maskBits: 2
          - accessProfileName: accessProfileName
            ipAddress: ipAddress
            description: description
            accessProfileId: 7
            id: 5
            maskBits: 2
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          httpProxy: httpProxy
          lastModifiedBy: lastModifiedBy
          organizationId: 6
          createdAt: createdAt
          createdBy: createdBy
          ntpServers:
          - address: address
            id: 5
          - address: address
            id: 5
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
          dnsServers:
          - address: address
            id: 1
          - address: address
            id: 1
        - allowedHosts:
          - accessProfileName: accessProfileName
            ipAddress: ipAddress
            description: description
            accessProfileId: 7
            id: 5
            maskBits: 2
          - accessProfileName: accessProfileName
            ipAddress: ipAddress
            description: description
            accessProfileId: 7
            id: 5
            maskBits: 2
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          httpProxy: httpProxy
          lastModifiedBy: lastModifiedBy
          organizationId: 6
          createdAt: createdAt
          createdBy: createdBy
          ntpServers:
          - address: address
            id: 5
          - address: address
            id: 5
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
          dnsServers:
          - address: address
            id: 1
          - address: address
            id: 1
        totalCount: 9
      properties:
        data:
          items:
            $ref: "#/components/schemas/AccessProfilesListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    AccessProfilesListDto:
      additionalProperties: false
      example:
        allowedHosts:
        - accessProfileName: accessProfileName
          ipAddress: ipAddress
          description: description
          accessProfileId: 7
          id: 5
          maskBits: 2
        - accessProfileName: accessProfileName
          ipAddress: ipAddress
          description: description
          accessProfileId: 7
          id: 5
          maskBits: 2
        projects:
        - name: name
          id: 5
        - name: name
          id: 5
        organizationName: organizationName
        httpProxy: httpProxy
        lastModifiedBy: lastModifiedBy
        organizationId: 6
        createdAt: createdAt
        createdBy: createdBy
        ntpServers:
        - address: address
          id: 5
        - address: address
          id: 5
        isLocked: true
        name: name
        id: 0
        lastModified: lastModified
        dnsServers:
        - address: address
          id: 1
        - address: address
          id: 1
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        httpProxy:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        organizationName:
          type: string
        isLocked:
          type: boolean
        dnsServers:
          items:
            $ref: "#/components/schemas/DnsServerListDto"
          type: array
        ntpServers:
          items:
            $ref: "#/components/schemas/NtpServerListDto"
          type: array
        allowedHosts:
          items:
            $ref: "#/components/schemas/AllowedHostListDto"
          type: array
        projects:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          type: array
        createdBy:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        createdAt:
          type: string
      required:
      - allowedHosts
      - createdAt
      - createdBy
      - dnsServers
      - httpProxy
      - id
      - isLocked
      - lastModified
      - lastModifiedBy
      - name
      - ntpServers
      - organizationId
      - organizationName
      - projects
      type: object
    AccessProfilesLockManagementCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    AccessProfilesSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    AccessProfilesSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ActionStatus:
      enum:
      - succeeded
      - failed
      - warning
      type: string
    ActionType:
      enum:
      - StartAddServer
      - AddedServer
      - StartAddVm
      - StartAddVmDisk
      - AddedVmDisk
      - StartDeleteVmDisk
      - DeletedVmDisk
      - AddedVm
      - StartDeleteVm
      - DeletedVm
      - StartDeleteServer
      - DeletedServer
      - CommitChanges
      - CreatedProject
      - StartPurgeProject
      - PurgedProject
      - CapacityNotAvailable
      - SpotFailure
      - CreateInfraFailure
      - DestroyInfraFailure
      - LoginFailed
      - KubernetesError
      - StartUpgradeProject
      - UpgradedProject
      - StartUpdateCloudCredentials
      - UpdatedCloudCredentials
      - StartedEnableGatekeeper
      - StartedDisableGatekeeper
      - StartedEnableBackup
      - StartedDisableBackup
      - EnabledBackup
      - DisabledBackup
      - EnabledGatekeeper
      - DisabledGatekeeper
      - AddedBackupPolicy
      - DeletedBackupPolicy
      - StartEnableMonitoring
      - EnabledMonitoring
      - StartDisableMonitoring
      - DisabledMonitoring
      - HealthStatus
      - ServerRebooted
      - SilenceAlert
      - AddedProject
      - AddedUser
      - ServerStopped
      - ServerStarted
      - ServerShelved
      - ServerUnshelved
      - ServerConsole
      - ServerStatus
      - PatchKubernetes
      - InstallApplication
      - CancelApplication
      - UninstallApplication
      - EnableAutoscaling
      - DisableAutoscaling
      - BoundProject
      - LockUnlockProject
      - EnabledAi
      - StartedEnableAi
      - DisabledAi
      - StartedDisableAi
      - EnableDisableMaintenanceMode
      - UpdateVmFlavor
      - DeleteVirtualCluster
      - StartCommitChanges
      - StartPurgeServers
      - StartPurgeVms
      - StartCommitVmChanges
      - StartRepairServers
      - StartRepairVms
      - None
      - CommitVmChanges
      - RepairServers
      - RepairVms
      - ScaleUpServers
      - ScaleUpVms
      - StartAddingVCluster
      - AddingVCluster
      - StartImportCluster
      - StartMigrationCluster
      - KubernetesAction
      - DeletedProject
      type: string
    AddOrganizationsToRuleDto:
      additionalProperties: false
      example:
        organizationId: 0
        ruleDiscountRate: 6.027456183070403
      properties:
        organizationId:
          format: int32
          type: integer
        ruleDiscountRate:
          format: double
          nullable: true
          type: number
      type: object
    AddPrometheusRulesToOrganizationDto:
      additionalProperties: false
      example:
        discountRate: 6.027456183070403
        id: 0
      properties:
        id:
          format: int32
          type: integer
        discountRate:
          format: double
          nullable: true
          type: number
      type: object
    AdminAddBalanceCommand:
      additionalProperties: false
      example:
        balance: 0
        customerId: customerId
      properties:
        customerId:
          nullable: true
          type: string
        balance:
          format: int64
          type: integer
      type: object
    AdminBillingOperationCommand:
      additionalProperties: false
      example:
        cloudCredentialId: 0
      properties:
        cloudCredentialId:
          format: int32
          type: integer
      type: object
    AdminOrganizationsDeleteCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    AdminOrganizationsList:
      additionalProperties: false
      example:
        data:
        - trialEnds: trialEnds
          partnerName: partnerName
          partnerLogo: partnerLogo
          isLocked: true
          name: name
          customerId: customerId
          id: 0
        - trialEnds: trialEnds
          partnerName: partnerName
          partnerLogo: partnerLogo
          isLocked: true
          name: name
          customerId: customerId
          id: 0
        totalCount: 6
      properties:
        data:
          items:
            $ref: "#/components/schemas/AdminOrganizationsListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    AdminOrganizationsListDto:
      additionalProperties: false
      example:
        trialEnds: trialEnds
        partnerName: partnerName
        partnerLogo: partnerLogo
        isLocked: true
        name: name
        customerId: customerId
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        customerId:
          nullable: true
          type: string
        partnerName:
          type: string
        partnerLogo:
          nullable: true
          type: string
        trialEnds:
          nullable: true
          type: string
        isLocked:
          type: boolean
      required:
      - customerId
      - id
      - isLocked
      - name
      - partnerLogo
      - partnerName
      - trialEnds
      type: object
    AdminProjectUpdateCommand:
      additionalProperties: false
      example:
        kubernetesCurrentVersion: kubernetesCurrentVersion
        kubesprayCurrentVersion: kubesprayCurrentVersion
        id: 0
      properties:
        id:
          format: int32
          type: integer
        kubernetesCurrentVersion:
          nullable: true
          type: string
        kubesprayCurrentVersion:
          nullable: true
          type: string
      type: object
    AdminProjectsList:
      additionalProperties: false
      example:
        data:
        - createdAt: createdAt
          organizationName: organizationName
          cloudType: NONE
          isLocked: true
          tcu: 1
          name: name
          serversCount: 6
          kubernetesCurrentVersion: kubernetesCurrentVersion
          kubesprayCurrentVersion: kubesprayCurrentVersion
          id: 0
          status: "Null"
        - createdAt: createdAt
          organizationName: organizationName
          cloudType: NONE
          isLocked: true
          tcu: 1
          name: name
          serversCount: 6
          kubernetesCurrentVersion: kubernetesCurrentVersion
          kubesprayCurrentVersion: kubesprayCurrentVersion
          id: 0
          status: "Null"
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/AdminProjectsResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    AdminProjectsResponseData:
      additionalProperties: false
      example:
        createdAt: createdAt
        organizationName: organizationName
        cloudType: NONE
        isLocked: true
        tcu: 1
        name: name
        serversCount: 6
        kubernetesCurrentVersion: kubernetesCurrentVersion
        kubesprayCurrentVersion: kubesprayCurrentVersion
        id: 0
        status: "Null"
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        organizationName:
          nullable: true
          type: string
        isLocked:
          type: boolean
        kubernetesCurrentVersion:
          nullable: true
          type: string
        kubesprayCurrentVersion:
          nullable: true
          type: string
        status:
          $ref: "#/components/schemas/ProjectStatus"
        serversCount:
          format: int32
          type: integer
        tcu:
          format: int32
          type: integer
        createdAt:
          nullable: true
          type: string
        cloudType:
          $ref: "#/components/schemas/CloudType"
      required:
      - cloudType
      - createdAt
      - id
      - isLocked
      - kubernetesCurrentVersion
      - kubesprayCurrentVersion
      - name
      - organizationName
      - serversCount
      - status
      - tcu
      type: object
    AdminUpdateProjectKubeConfigCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    AdminUpdateUserKubeConfigCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    AdminUserCreateCommand:
      additionalProperties: false
      example:
        organizationId: 0
        password: password
        role: Admin
        email: email
        username: username
      properties:
        email:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        role:
          $ref: "#/components/schemas/UserRole"
        organizationId:
          format: int32
          nullable: true
          type: integer
      type: object
    AdminUsersList:
      additionalProperties: false
      example:
        data:
        - owner: true
          role: Admin
          organizationName: organizationName
          name: name
          id: id
          csm: true
          email: email
          is2FaEnabled: true
        - owner: true
          role: Admin
          organizationName: organizationName
          name: name
          id: id
          csm: true
          email: email
          is2FaEnabled: true
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/AdminUsersResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    AdminUsersResponseData:
      additionalProperties: false
      example:
        owner: true
        role: Admin
        organizationName: organizationName
        name: name
        id: id
        csm: true
        email: email
        is2FaEnabled: true
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        role:
          $ref: "#/components/schemas/UserRole"
        organizationName:
          nullable: true
          type: string
        owner:
          type: boolean
        csm:
          type: boolean
        is2FaEnabled:
          type: boolean
      required:
      - csm
      - email
      - id
      - is2FaEnabled
      - name
      - organizationName
      - owner
      - role
      type: object
    AdminUsersUpdateEmailCommand:
      additionalProperties: false
      example:
        id: id
        email: email
      properties:
        id:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
      type: object
    AdminUsersUpdatePasswordCommand:
      additionalProperties: false
      example:
        password: password
        id: id
      properties:
        id:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
      type: object
    AiCredentials:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          isDefault: true
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          name: name
          id: 0
          type: Taikun
          url: url
        - organizationId: 6
          isDefault: true
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          name: name
          id: 0
          type: Taikun
          url: url
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/AiCredentialsListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    AiCredentialsForOrganizationEntity:
      additionalProperties: false
      example:
        isDefault: true
        name: name
        id: 0
        type: Taikun
        url: url
      properties:
        id:
          format: int32
          type: integer
        url:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        type:
          $ref: "#/components/schemas/AiType"
        isDefault:
          type: boolean
      type: object
    AiCredentialsListDto:
      additionalProperties: false
      example:
        organizationId: 6
        isDefault: true
        projects:
        - name: name
          id: 5
        - name: name
          id: 5
        organizationName: organizationName
        name: name
        id: 0
        type: Taikun
        url: url
      properties:
        id:
          format: int32
          type: integer
        url:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        type:
          $ref: "#/components/schemas/AiType"
        organizationId:
          format: int32
          nullable: true
          type: integer
        organizationName:
          nullable: true
          type: string
        projects:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        isDefault:
          type: boolean
      required:
      - id
      - isDefault
      - name
      - organizationId
      - organizationName
      - projects
      - type
      - url
      type: object
    AiListDto:
      additionalProperties: false
      example:
        data: ""
        totalCount: 0
      properties:
        data:
          nullable: true
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    AiType:
      enum:
      - Taikun
      - OpenAi
      type: string
    AksClusterListCommand:
      additionalProperties: false
      example:
        cloudId: 0
      properties:
        cloudId:
          format: int32
          type: integer
      type: object
    Alert:
      additionalProperties: false
      example:
        activeAt: 2000-01-23T04:56:07.000+00:00
        annotations:
          description: description
          title: title
        state: state
        value: value
        labels:
          container: container
          severity: severity
          instance: instance
          pod: pod
          alertname: alertname
          daemonset: daemonset
          node: node
          condition: condition
          endpoint: endpoint
          service: service
          namespace: namespace
          job: job
          status: status
      properties:
        labels:
          $ref: "#/components/schemas/AlertLabels"
        annotations:
          $ref: "#/components/schemas/Annotations"
        state:
          nullable: true
          type: string
        activeAt:
          format: date-time
          type: string
        value:
          nullable: true
          type: string
      type: object
    AlertData:
      additionalProperties: false
      example:
        groups:
        - lastEvaluation: 2000-01-23T04:56:07.000+00:00
          file: file
          name: name
          rules:
          - duration: 0
            alerts:
            - activeAt: 2000-01-23T04:56:07.000+00:00
              annotations:
                description: description
                title: title
              state: state
              value: value
              labels:
                container: container
                severity: severity
                instance: instance
                pod: pod
                alertname: alertname
                daemonset: daemonset
                node: node
                condition: condition
                endpoint: endpoint
                service: service
                namespace: namespace
                job: job
                status: status
            - activeAt: 2000-01-23T04:56:07.000+00:00
              annotations:
                description: description
                title: title
              state: state
              value: value
              labels:
                container: container
                severity: severity
                instance: instance
                pod: pod
                alertname: alertname
                daemonset: daemonset
                node: node
                condition: condition
                endpoint: endpoint
                service: service
                namespace: namespace
                job: job
                status: status
            lastEvaluation: 2000-01-23T04:56:07.000+00:00
            query: query
            name: name
            annotations:
              description: description
              title: title
            health: health
            state: state
            evaluationTime: 6.027456183070403
            type: type
            labels:
              severity: severity
          - duration: 0
            alerts:
            - activeAt: 2000-01-23T04:56:07.000+00:00
              annotations:
                description: description
                title: title
              state: state
              value: value
              labels:
                container: container
                severity: severity
                instance: instance
                pod: pod
                alertname: alertname
                daemonset: daemonset
                node: node
                condition: condition
                endpoint: endpoint
                service: service
                namespace: namespace
                job: job
                status: status
            - activeAt: 2000-01-23T04:56:07.000+00:00
              annotations:
                description: description
                title: title
              state: state
              value: value
              labels:
                container: container
                severity: severity
                instance: instance
                pod: pod
                alertname: alertname
                daemonset: daemonset
                node: node
                condition: condition
                endpoint: endpoint
                service: service
                namespace: namespace
                job: job
                status: status
            lastEvaluation: 2000-01-23T04:56:07.000+00:00
            query: query
            name: name
            annotations:
              description: description
              title: title
            health: health
            state: state
            evaluationTime: 6.027456183070403
            type: type
            labels:
              severity: severity
          interval: 1
          evaluationTime: 5.962133916683182
        - lastEvaluation: 2000-01-23T04:56:07.000+00:00
          file: file
          name: name
          rules:
          - duration: 0
            alerts:
            - activeAt: 2000-01-23T04:56:07.000+00:00
              annotations:
                description: description
                title: title
              state: state
              value: value
              labels:
                container: container
                severity: severity
                instance: instance
                pod: pod
                alertname: alertname
                daemonset: daemonset
                node: node
                condition: condition
                endpoint: endpoint
                service: service
                namespace: namespace
                job: job
                status: status
            - activeAt: 2000-01-23T04:56:07.000+00:00
              annotations:
                description: description
                title: title
              state: state
              value: value
              labels:
                container: container
                severity: severity
                instance: instance
                pod: pod
                alertname: alertname
                daemonset: daemonset
                node: node
                condition: condition
                endpoint: endpoint
                service: service
                namespace: namespace
                job: job
                status: status
            lastEvaluation: 2000-01-23T04:56:07.000+00:00
            query: query
            name: name
            annotations:
              description: description
              title: title
            health: health
            state: state
            evaluationTime: 6.027456183070403
            type: type
            labels:
              severity: severity
          - duration: 0
            alerts:
            - activeAt: 2000-01-23T04:56:07.000+00:00
              annotations:
                description: description
                title: title
              state: state
              value: value
              labels:
                container: container
                severity: severity
                instance: instance
                pod: pod
                alertname: alertname
                daemonset: daemonset
                node: node
                condition: condition
                endpoint: endpoint
                service: service
                namespace: namespace
                job: job
                status: status
            - activeAt: 2000-01-23T04:56:07.000+00:00
              annotations:
                description: description
                title: title
              state: state
              value: value
              labels:
                container: container
                severity: severity
                instance: instance
                pod: pod
                alertname: alertname
                daemonset: daemonset
                node: node
                condition: condition
                endpoint: endpoint
                service: service
                namespace: namespace
                job: job
                status: status
            lastEvaluation: 2000-01-23T04:56:07.000+00:00
            query: query
            name: name
            annotations:
              description: description
              title: title
            health: health
            state: state
            evaluationTime: 6.027456183070403
            type: type
            labels:
              severity: severity
          interval: 1
          evaluationTime: 5.962133916683182
      properties:
        groups:
          items:
            $ref: "#/components/schemas/Group"
          nullable: true
          type: array
      type: object
    AlertLabels:
      additionalProperties: false
      example:
        container: container
        severity: severity
        instance: instance
        pod: pod
        alertname: alertname
        daemonset: daemonset
        node: node
        condition: condition
        endpoint: endpoint
        service: service
        namespace: namespace
        job: job
        status: status
      properties:
        alertname:
          nullable: true
          type: string
        condition:
          nullable: true
          type: string
        container:
          nullable: true
          type: string
        endpoint:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
        job:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        node:
          nullable: true
          type: string
        pod:
          nullable: true
          type: string
        service:
          nullable: true
          type: string
        severity:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        daemonset:
          nullable: true
          type: string
      type: object
    AlertingEmailDto:
      additionalProperties: false
      example:
        email: email
      properties:
        email:
          nullable: true
          type: string
      required:
      - email
      type: object
    AlertingIntegrationDto:
      additionalProperties: false
      example:
        url: url
        token: token
        alertingIntegrationType: Opsgenie
      properties:
        url:
          type: string
        token:
          nullable: true
          type: string
        alertingIntegrationType:
          $ref: "#/components/schemas/AlertingIntegrationType"
      required:
      - alertingIntegrationType
      - token
      - url
      type: object
    AlertingIntegrationType:
      enum:
      - Opsgenie
      - Pagerduty
      - Splunk
      - MicrosoftTeams
      type: string
    AlertingIntegrationsListDto:
      additionalProperties: false
      example:
        alertingProfileName: alertingProfileName
        id: 0
        url: url
        token: token
        alertingIntegrationType: Opsgenie
      properties:
        id:
          format: int32
          type: integer
        url:
          type: string
        token:
          nullable: true
          type: string
        alertingIntegrationType:
          $ref: "#/components/schemas/AlertingIntegrationType"
        alertingProfileName:
          type: string
      required:
      - alertingIntegrationType
      - alertingProfileName
      - id
      - token
      - url
      type: object
    AlertingProfilesList:
      additionalProperties: false
      example:
        data:
        - slackConfigurationId: 1
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          reminder: HalfHour
          slackConfigurationName: slackConfigurationName
          lastModifiedBy: lastModifiedBy
          organizationId: 6
          emails:
          - email: email
          - email: email
          createdAt: createdAt
          webhooks:
          - headers:
            - id: 6
              value: value
              key: key
            - id: 6
              value: value
              key: key
            id: 0
            url: url
          - headers:
            - id: 6
              value: value
              key: key
            - id: 6
              value: value
              key: key
            id: 0
            url: url
          createdBy: createdBy
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
        - slackConfigurationId: 1
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          reminder: HalfHour
          slackConfigurationName: slackConfigurationName
          lastModifiedBy: lastModifiedBy
          organizationId: 6
          emails:
          - email: email
          - email: email
          createdAt: createdAt
          webhooks:
          - headers:
            - id: 6
              value: value
              key: key
            - id: 6
              value: value
              key: key
            id: 0
            url: url
          - headers:
            - id: 6
              value: value
              key: key
            - id: 6
              value: value
              key: key
            id: 0
            url: url
          createdBy: createdBy
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/AlertingProfilesListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    AlertingProfilesListDto:
      additionalProperties: false
      example:
        slackConfigurationId: 1
        projects:
        - name: name
          id: 5
        - name: name
          id: 5
        organizationName: organizationName
        reminder: HalfHour
        slackConfigurationName: slackConfigurationName
        lastModifiedBy: lastModifiedBy
        organizationId: 6
        emails:
        - email: email
        - email: email
        createdAt: createdAt
        webhooks:
        - headers:
          - id: 6
            value: value
            key: key
          - id: 6
            value: value
            key: key
          id: 0
          url: url
        - headers:
          - id: 6
            value: value
            key: key
          - id: 6
            value: value
            key: key
          id: 0
          url: url
        createdBy: createdBy
        isLocked: true
        name: name
        id: 0
        lastModified: lastModified
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        organizationName:
          nullable: true
          type: string
        slackConfigurationId:
          format: int32
          nullable: true
          type: integer
        slackConfigurationName:
          nullable: true
          type: string
        isLocked:
          type: boolean
        emails:
          items:
            $ref: "#/components/schemas/AlertingEmailDto"
          type: array
        webhooks:
          items:
            $ref: "#/components/schemas/AlertingWebhookDto"
          type: array
        projects:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          type: array
        createdBy:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        reminder:
          $ref: "#/components/schemas/AlertingReminder"
        createdAt:
          type: string
      required:
      - createdAt
      - createdBy
      - emails
      - id
      - isLocked
      - lastModified
      - lastModifiedBy
      - name
      - organizationId
      - organizationName
      - projects
      - reminder
      - slackConfigurationId
      - slackConfigurationName
      - webhooks
      type: object
    AlertingProfilesLockManagerCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    AlertingReminder:
      enum:
      - HalfHour
      - Hourly
      - Daily
      - None
      type: string
    AlertingWebhookDto:
      additionalProperties: false
      example:
        headers:
        - id: 6
          value: value
          key: key
        - id: 6
          value: value
          key: key
        id: 0
        url: url
      properties:
        id:
          format: int32
          type: integer
        url:
          nullable: true
          type: string
        headers:
          items:
            $ref: "#/components/schemas/WebhookHeaderDto"
          nullable: true
          type: array
      type: object
    AllFlavorsList:
      additionalProperties: false
      example:
        data:
        - maxDataDiskCount: 1.4658129805029452
          name: name
          cpu: 6
          description: ""
          ram: 0.8008281904610115
        - maxDataDiskCount: 1.4658129805029452
          name: name
          cpu: 6
          description: ""
          ram: 0.8008281904610115
        cloudType: cloudType
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/FlavorsListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
        cloudType:
          nullable: true
          type: string
      required:
      - cloudType
      - data
      - totalCount
      type: object
    AllTicketsDto:
      additionalProperties: false
      example:
        organizationName: organizationName
        partnerName: partnerName
        partnerLogo: partnerLogo
        lastModifier: lastModifier
        description: description
        userId: userId
        organizationId: 0
        createdAt: createdAt
        number: 6
        createdBy: createdBy
        currentStatusDate: currentStatusDate
        name: name
        id: id
        status: status
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
        createdAt:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        createdBy:
          type: string
        currentStatusDate:
          nullable: true
          type: string
        lastModifier:
          nullable: true
          type: string
        number:
          format: int32
          type: integer
        partnerLogo:
          nullable: true
          type: string
        description:
          type: string
        partnerName:
          nullable: true
          type: string
        userId:
          type: string
      required:
      - createdAt
      - createdBy
      - currentStatusDate
      - description
      - id
      - lastModifier
      - name
      - number
      - organizationId
      - organizationName
      - partnerLogo
      - partnerName
      - status
      - userId
      type: object
    AllTicketsList:
      additionalProperties: false
      example:
        data:
        - organizationName: organizationName
          partnerName: partnerName
          partnerLogo: partnerLogo
          lastModifier: lastModifier
          description: description
          userId: userId
          organizationId: 0
          createdAt: createdAt
          number: 6
          createdBy: createdBy
          currentStatusDate: currentStatusDate
          name: name
          id: id
          status: status
        - organizationName: organizationName
          partnerName: partnerName
          partnerLogo: partnerLogo
          lastModifier: lastModifier
          description: description
          userId: userId
          organizationId: 0
          createdAt: createdAt
          number: 6
          createdBy: createdBy
          currentStatusDate: currentStatusDate
          name: name
          id: id
          status: status
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/AllTicketsDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    AllowedHostCreateDto:
      additionalProperties: false
      example:
        ipAddress: ipAddress
        description: description
        maskBits: 6
      properties:
        description:
          nullable: true
          type: string
        ipAddress:
          nullable: true
          type: string
        maskBits:
          format: int32
          type: integer
      type: object
    AllowedHostList:
      additionalProperties: false
      example:
        data:
        - accessProfileName: accessProfileName
          ipAddress: ipAddress
          description: description
          accessProfileId: 7
          id: 5
          maskBits: 2
        - accessProfileName: accessProfileName
          ipAddress: ipAddress
          description: description
          accessProfileId: 7
          id: 5
          maskBits: 2
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/AllowedHostListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    AllowedHostListDto:
      additionalProperties: false
      example:
        accessProfileName: accessProfileName
        ipAddress: ipAddress
        description: description
        accessProfileId: 7
        id: 5
        maskBits: 2
      properties:
        id:
          format: int32
          type: integer
        description:
          nullable: true
          type: string
        ipAddress:
          type: string
        maskBits:
          format: int32
          type: integer
        accessProfileId:
          format: int32
          type: integer
        accessProfileName:
          type: string
      required:
      - accessProfileId
      - accessProfileName
      - description
      - id
      - ipAddress
      - maskBits
      type: object
    AmazonAvailabilityZonesCommand:
      additionalProperties: false
      example:
        awsAccessKeyId: awsAccessKeyId
        cloudId: 0
        region: region
        awsSecretAccessKey: awsSecretAccessKey
      properties:
        region:
          nullable: true
          type: string
        awsAccessKeyId:
          nullable: true
          type: string
        awsSecretAccessKey:
          nullable: true
          type: string
        cloudId:
          format: int32
          nullable: true
          type: integer
      type: object
    AmazonCredentialsListDto:
      additionalProperties: false
      example:
        projectCount: 6
        projects:
        - name: name
          id: 5
        - name: name
          id: 5
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        availabilityZones:
        - availabilityZones
        - availabilityZones
        organizationId: 5
        createdAt: createdAt
        isDefault: true
        createdBy: createdBy
        isLocked: true
        name: name
        availabilityZonesCount: 1
        id: 0
        lastModified: lastModified
        region: region
        continentName: continentName
      properties:
        id:
          format: int32
          type: integer
        projectCount:
          format: int32
          type: integer
        isLocked:
          type: boolean
        name:
          type: string
        region:
          type: string
        availabilityZones:
          items:
            type: string
          type: array
        availabilityZonesCount:
          format: int32
          type: integer
        projects:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          type: array
        createdBy:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        isDefault:
          type: boolean
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        createdAt:
          nullable: true
          type: string
        continentName:
          nullable: true
          type: string
      required:
      - availabilityZones
      - availabilityZonesCount
      - continentName
      - createdAt
      - createdBy
      - id
      - isDefault
      - isLocked
      - lastModified
      - lastModifiedBy
      - name
      - organizationId
      - organizationName
      - projectCount
      - projects
      - region
      type: object
    Annotations:
      additionalProperties: false
      example:
        description: description
        title: title
      properties:
        description:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
      type: object
    ApiResponse:
      additionalProperties: false
      example:
        result: ""
        isError: true
        id: id
        message: message
        status: 0
      properties:
        id:
          nullable: true
          type: string
        status:
          format: int32
          type: integer
        message:
          nullable: true
          type: string
        isError:
          type: boolean
        result:
          nullable: true
      type: object
    AppRepositoryList:
      additionalProperties: false
      example:
        data:
        - organizationName: organizationName
          displayName: displayName
          official: true
          isPrivate: true
          hasCatalogApp: true
          verifiedPublisher: true
          url: url
          appRepoId: 0
          isBound: true
          isTaikun: true
          repositoryId: repositoryId
          name: name
          passwordProtected: true
          disabled: true
        - organizationName: organizationName
          displayName: displayName
          official: true
          isPrivate: true
          hasCatalogApp: true
          verifiedPublisher: true
          url: url
          appRepoId: 0
          isBound: true
          isTaikun: true
          repositoryId: repositoryId
          name: name
          passwordProtected: true
          disabled: true
        totalCount: 6
      properties:
        data:
          items:
            $ref: "#/components/schemas/ArtifactRepositoryDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    ApplicationSyncResponse:
      additionalProperties: false
      example:
        isSyncStarted: true
      properties:
        isSyncStarted:
          type: boolean
      type: object
    ArchiveTicketCommand:
      additionalProperties: false
      example:
        ticketId: ticketId
      properties:
        ticketId:
          nullable: true
          type: string
      type: object
    ArticleList:
      additionalProperties: false
      example:
        data:
        - senderName: senderName
          messageId: messageId
          body: body
          userId: userId
          createAt: createAt
          isCsm: true
        - senderName: senderName
          messageId: messageId
          body: body
          userId: userId
          createAt: createAt
          isCsm: true
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/ArticlesListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    ArticlesListDto:
      additionalProperties: false
      example:
        senderName: senderName
        messageId: messageId
        body: body
        userId: userId
        createAt: createAt
        isCsm: true
      properties:
        senderName:
          nullable: true
          type: string
        isCsm:
          type: boolean
        createAt:
          nullable: true
          type: string
        body:
          nullable: true
          type: string
        messageId:
          nullable: true
          type: string
        userId:
          nullable: true
          type: string
      required:
      - body
      - createAt
      - isCsm
      - messageId
      - senderName
      - userId
      type: object
    ArtifactRepositoryDto:
      additionalProperties: false
      example:
        organizationName: organizationName
        displayName: displayName
        official: true
        isPrivate: true
        hasCatalogApp: true
        verifiedPublisher: true
        url: url
        appRepoId: 0
        isBound: true
        isTaikun: true
        repositoryId: repositoryId
        name: name
        passwordProtected: true
        disabled: true
      properties:
        repositoryId:
          nullable: true
          type: string
        appRepoId:
          format: int32
          type: integer
        name:
          type: string
        displayName:
          nullable: true
          type: string
        url:
          type: string
        organizationName:
          type: string
        disabled:
          type: boolean
        verifiedPublisher:
          type: boolean
        official:
          type: boolean
        isBound:
          type: boolean
        isPrivate:
          type: boolean
        isTaikun:
          type: boolean
        hasCatalogApp:
          type: boolean
        passwordProtected:
          type: boolean
      required:
      - appRepoId
      - disabled
      - displayName
      - hasCatalogApp
      - isBound
      - isTaikun
      - name
      - official
      - organizationName
      - repositoryId
      - url
      - verifiedPublisher
      type: object
    ArtifactUrlCheckerCommand:
      additionalProperties: false
      example:
        organizationId: 0
        name: name
        url: url
      properties:
        url:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
      type: object
    AttachDetachAlertingProfileCommand:
      additionalProperties: false
      example:
        alertingProfileId: 6
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        alertingProfileId:
          format: int32
          nullable: true
          type: integer
      type: object
    AutoSyncManagementCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    AutoUpgradeProjectsCommand:
      additionalProperties: false
      type: object
    AutoscalingSyncCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    AvailableEndpointData:
      additionalProperties: false
      example:
        path: path
        controller: controller
        method: method
        description: description
        id: 0
      properties:
        id:
          format: int32
          type: integer
        path:
          nullable: true
          type: string
        method:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        controller:
          nullable: true
          type: string
      type: object
    AvailableEndpointsList:
      additionalProperties: false
      example:
        data:
        - path: path
          controller: controller
          method: method
          description: description
          id: 0
        - path: path
          controller: controller
          method: method
          description: description
          id: 0
        totalCount: 6
      properties:
        data:
          items:
            $ref: "#/components/schemas/EndpointElements"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    AvailablePackageDetailsDto:
      additionalProperties: false
      example:
        appVersion: appVersion
        packageId: packageId
        description: description
        securityReport:
          high: 7
          critical: 2
          low: 2
          medium: 9
          unknown: 3
        official: true
        readme: readme
        stars: 0
        version: version
        verifiedPublisher: true
        appRepoOrganizationName: appRepoOrganizationName
        appRepoName: appRepoName
        appRepoId: appRepoId
        hasJsonSchema: true
        name: name
        boundCatalogs:
        - name: name
          id: 5
        - name: name
          id: 5
        logoId: logoId
      properties:
        name:
          nullable: true
          type: string
        appRepoName:
          nullable: true
          type: string
        appRepoOrganizationName:
          nullable: true
          type: string
        appRepoId:
          nullable: true
          type: string
        packageId:
          nullable: true
          type: string
        logoId:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        readme:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
        securityReport:
          $ref: "#/components/schemas/SecurityReportSummaryDto"
        appVersion:
          nullable: true
          type: string
        stars:
          format: int32
          type: integer
        verifiedPublisher:
          type: boolean
        official:
          type: boolean
        boundCatalogs:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        hasJsonSchema:
          type: boolean
      type: object
    AvailablePackagesDto:
      additionalProperties: false
      example:
        appVersion: appVersion
        logoImageId: logoImageId
        deprecated: true
        packageId: packageId
        description: description
        signed: true
        stars: 7
        repository:
          scannerDisabled: true
          isImported: true
          organizationName: organizationName
          organizationDisplayName: organizationDisplayName
          kind: 1
          name: name
          repositoryId: repositoryId
          official: true
          verifiedPublisher: true
          url: url
        catalogAppId: 5
        version: version
        catalogId: 5
        installedInstanceCount: 2
        isLocked: true
        name: name
        isAdded: true
        normalizedName: normalizedName
        securityReportSummary:
          high: 3
          critical: 7
          low: 9
          medium: 2
          unknown: 4
        ts: ts
      properties:
        packageId:
          nullable: true
          type: string
        catalogId:
          format: int32
          type: integer
        catalogAppId:
          format: int32
          nullable: true
          type: integer
        installedInstanceCount:
          format: int32
          nullable: true
          type: integer
        name:
          nullable: true
          type: string
        normalizedName:
          nullable: true
          type: string
        logoImageId:
          nullable: true
          type: string
        stars:
          format: int64
          type: integer
        description:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
        appVersion:
          nullable: true
          type: string
        deprecated:
          type: boolean
        signed:
          type: boolean
        isLocked:
          type: boolean
        securityReportSummary:
          $ref: "#/components/schemas/SecurityReportSummary"
        ts:
          nullable: true
          type: string
        repository:
          $ref: "#/components/schemas/Repository"
        isAdded:
          nullable: true
          type: boolean
      type: object
    AvailablePackagesList:
      additionalProperties: false
      example:
        data:
        - appVersion: appVersion
          logoImageId: logoImageId
          deprecated: true
          packageId: packageId
          description: description
          signed: true
          stars: 7
          repository:
            scannerDisabled: true
            isImported: true
            organizationName: organizationName
            organizationDisplayName: organizationDisplayName
            kind: 1
            name: name
            repositoryId: repositoryId
            official: true
            verifiedPublisher: true
            url: url
          catalogAppId: 5
          version: version
          catalogId: 5
          installedInstanceCount: 2
          isLocked: true
          name: name
          isAdded: true
          normalizedName: normalizedName
          securityReportSummary:
            high: 3
            critical: 7
            low: 9
            medium: 2
            unknown: 4
          ts: ts
        - appVersion: appVersion
          logoImageId: logoImageId
          deprecated: true
          packageId: packageId
          description: description
          signed: true
          stars: 7
          repository:
            scannerDisabled: true
            isImported: true
            organizationName: organizationName
            organizationDisplayName: organizationDisplayName
            kind: 1
            name: name
            repositoryId: repositoryId
            official: true
            verifiedPublisher: true
            url: url
          catalogAppId: 5
          version: version
          catalogId: 5
          installedInstanceCount: 2
          isLocked: true
          name: name
          isAdded: true
          normalizedName: normalizedName
          securityReportSummary:
            high: 3
            critical: 7
            low: 9
            medium: 2
            unknown: 4
          ts: ts
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/AvailablePackagesDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    AwsCredentialList:
      additionalProperties: false
      example:
        data:
        - projectCount: 6
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          availabilityZonesCount: 1
          id: 0
          lastModified: lastModified
          region: region
          continentName: continentName
        - projectCount: 6
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          availabilityZonesCount: 1
          id: 0
          lastModified: lastModified
          region: region
          continentName: continentName
        totalCount: 2
      properties:
        data:
          items:
            $ref: "#/components/schemas/AmazonCredentialsListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    AwsEksClusterDto:
      additionalProperties: false
      example:
        certificate: certificate
        targetUrl: targetUrl
        token: token
      properties:
        token:
          nullable: true
          type: string
        targetUrl:
          nullable: true
          type: string
        certificate:
          nullable: true
          type: string
      type: object
    AwsEksNodeGroupDto:
      additionalProperties: false
      example:
        role: role
        capacityType: capacityType
        instanceTypes:
        - instanceTypes
        - instanceTypes
        created: created
        desiredSize: 6
        maxSize: 1
        version: version
        diskSize: 0
        healthIssues:
        - healthIssues
        - healthIssues
        name: name
        minSize: 5
        amiType: amiType
        amiReleaseVersion: amiReleaseVersion
        arn: arn
        status: status
      properties:
        name:
          nullable: true
          type: string
        role:
          nullable: true
          type: string
        amiType:
          nullable: true
          type: string
        amiReleaseVersion:
          nullable: true
          type: string
        arn:
          nullable: true
          type: string
        capacityType:
          nullable: true
          type: string
        healthIssues:
          items:
            type: string
          nullable: true
          type: array
        status:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
        created:
          nullable: true
          type: string
        diskSize:
          format: int32
          type: integer
        desiredSize:
          format: int32
          type: integer
        maxSize:
          format: int32
          type: integer
        minSize:
          format: int32
          type: integer
        instanceTypes:
          items:
            type: string
          nullable: true
          type: array
      type: object
    AwsFlavorList:
      additionalProperties: false
      example:
        data:
        - windowsSpotPrice: windowsSpotPrice
          name: name
          cpu: 6
          description: ""
          windowsPrice: windowsPrice
          linuxPrice: linuxPrice
          zones:
          - zones
          - zones
          ram: 0.8008281904610115
          linuxSpotPrice: linuxSpotPrice
        - windowsSpotPrice: windowsSpotPrice
          name: name
          cpu: 6
          description: ""
          windowsPrice: windowsPrice
          linuxPrice: linuxPrice
          zones:
          - zones
          - zones
          ram: 0.8008281904610115
          linuxSpotPrice: linuxSpotPrice
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/AwsFlavorListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    AwsFlavorListDto:
      additionalProperties: false
      example:
        windowsSpotPrice: windowsSpotPrice
        name: name
        cpu: 6
        description: ""
        windowsPrice: windowsPrice
        linuxPrice: linuxPrice
        zones:
        - zones
        - zones
        ram: 0.8008281904610115
        linuxSpotPrice: linuxSpotPrice
      properties:
        ram:
          format: double
          type: number
        cpu:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        description:
          nullable: true
        linuxPrice:
          nullable: true
          type: string
        windowsPrice:
          nullable: true
          type: string
        windowsSpotPrice:
          nullable: true
          type: string
        linuxSpotPrice:
          nullable: true
          type: string
        zones:
          items:
            type: string
          nullable: true
          type: array
      type: object
    AwsImagesPostListCommand:
      additionalProperties: false
      example:
        sortDirection: sortDirection
        search: search
        offset: 1
        cloudId: 0
        limit: 6
        sortBy: sortBy
        owners:
        - owners
        - owners
        projectId: 5
        latest: true
      properties:
        cloudId:
          format: int32
          type: integer
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        sortBy:
          nullable: true
          type: string
        sortDirection:
          nullable: true
          type: string
        search:
          nullable: true
          type: string
        latest:
          type: boolean
        owners:
          items:
            type: string
          nullable: true
          type: array
        projectId:
          format: int32
          nullable: true
          type: integer
      type: object
    AwsRegionDto:
      additionalProperties: false
      example:
        name: name
        region: region
      properties:
        name:
          nullable: true
          type: string
        region:
          nullable: true
          type: string
      type: object
    AwsValidateOwnerCommand:
      additionalProperties: false
      example:
        cloudId: 0
        owners:
        - owners
        - owners
      properties:
        cloudId:
          format: int32
          type: integer
        owners:
          items:
            type: string
          nullable: true
          type: array
      type: object
    AzResult:
      additionalProperties: false
      example:
        data:
        - data
        - data
        totalCount: 0
      properties:
        data:
          items:
            type: string
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    AzureAksClusterDto:
      additionalProperties: false
      example:
        resourceGroupName: resourceGroupName
        clusterName: clusterName
        location: location
      properties:
        resourceGroupName:
          nullable: true
          type: string
        clusterName:
          nullable: true
          type: string
        location:
          nullable: true
          type: string
      type: object
    AzureCredentialList:
      additionalProperties: false
      example:
        data:
        - projectCount: 6
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          tenantId: tenantId
          availabilityZonesCount: 1
          location: location
          id: 0
          lastModified: lastModified
          continentName: continentName
        - projectCount: 6
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          tenantId: tenantId
          availabilityZonesCount: 1
          location: location
          id: 0
          lastModified: lastModified
          continentName: continentName
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/AzureCredentialsListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    AzureCredentialsListDto:
      additionalProperties: false
      example:
        projectCount: 6
        projects:
        - name: name
          id: 5
        - name: name
          id: 5
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        availabilityZones:
        - availabilityZones
        - availabilityZones
        organizationId: 5
        createdAt: createdAt
        isDefault: true
        createdBy: createdBy
        isLocked: true
        name: name
        tenantId: tenantId
        availabilityZonesCount: 1
        location: location
        id: 0
        lastModified: lastModified
        continentName: continentName
      properties:
        id:
          format: int32
          type: integer
        projectCount:
          format: int32
          type: integer
        isLocked:
          type: boolean
        name:
          type: string
        tenantId:
          type: string
        location:
          type: string
        availabilityZones:
          items:
            type: string
          type: array
        availabilityZonesCount:
          format: int32
          type: integer
        projects:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          type: array
        createdBy:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        isDefault:
          type: boolean
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        continentName:
          nullable: true
          type: string
      required:
      - availabilityZones
      - availabilityZonesCount
      - continentName
      - createdAt
      - createdBy
      - id
      - isDefault
      - isLocked
      - lastModified
      - lastModifiedBy
      - location
      - name
      - organizationId
      - organizationName
      - projectCount
      - projects
      - tenantId
      type: object
    AzureDashboardCommand:
      additionalProperties: false
      example:
        cloudId: 0
        filterBy: filterBy
      properties:
        cloudId:
          format: int32
          type: integer
        filterBy:
          nullable: true
          type: string
      type: object
    AzureFlavorList:
      additionalProperties: false
      example:
        data:
        - maxDataDiskCount: 1.4658129805029452
          windowsSpotPrice: windowsSpotPrice
          name: name
          cpu: 0
          description: ""
          windowsPrice: windowsPrice
          linuxPrice: linuxPrice
          linuxSpotPrice: linuxSpotPrice
          ram: 6.027456183070403
        - maxDataDiskCount: 1.4658129805029452
          windowsSpotPrice: windowsSpotPrice
          name: name
          cpu: 0
          description: ""
          windowsPrice: windowsPrice
          linuxPrice: linuxPrice
          linuxSpotPrice: linuxSpotPrice
          ram: 6.027456183070403
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/AzureFlavorsWithPriceDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    AzureFlavorsWithPriceDto:
      additionalProperties: false
      example:
        maxDataDiskCount: 1.4658129805029452
        windowsSpotPrice: windowsSpotPrice
        name: name
        cpu: 0
        description: ""
        windowsPrice: windowsPrice
        linuxPrice: linuxPrice
        linuxSpotPrice: linuxSpotPrice
        ram: 6.027456183070403
      properties:
        name:
          nullable: true
          type: string
        windowsPrice:
          nullable: true
          type: string
        linuxPrice:
          nullable: true
          type: string
        windowsSpotPrice:
          nullable: true
          type: string
        linuxSpotPrice:
          nullable: true
          type: string
        cpu:
          format: int32
          type: integer
        ram:
          format: double
          type: number
        description:
          nullable: true
        maxDataDiskCount:
          format: double
          nullable: true
          type: number
      type: object
    AzureLocationsCommand:
      additionalProperties: false
      example:
        azureClientSecret: azureClientSecret
        azureClientId: azureClientId
        azureTenantId: azureTenantId
        azureSubscriptionId: azureSubscriptionId
      properties:
        azureSubscriptionId:
          nullable: true
          type: string
        azureClientId:
          nullable: true
          type: string
        azureClientSecret:
          nullable: true
          type: string
        azureTenantId:
          nullable: true
          type: string
      type: object
    AzureOffersList:
      additionalProperties: false
      example:
        data:
        - data
        - data
        totalCount: 0
      properties:
        data:
          items:
            type: string
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    AzurePublishersList:
      additionalProperties: false
      example:
        data:
        - data
        - data
        totalCount: 0
      properties:
        data:
          items:
            type: string
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    AzureQuotaListRecordDto:
      additionalProperties: false
      example:
        totalCores: 0
        currentUsage: 6
        name: name
      properties:
        totalCores:
          format: int64
          type: integer
        currentUsage:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    AzureSkusList:
      additionalProperties: false
      example:
        data:
        - data
        - data
        totalCount: 0
      properties:
        data:
          items:
            type: string
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    AzureSubscriptionListCommand:
      additionalProperties: false
      example:
        clientId: clientId
        tenantId: tenantId
        clientSecret: clientSecret
      properties:
        clientId:
          nullable: true
          type: string
        clientSecret:
          nullable: true
          type: string
        tenantId:
          nullable: true
          type: string
      type: object
    AzureZonesCommand:
      additionalProperties: false
      example:
        azureClientSecret: azureClientSecret
        azureClientId: azureClientId
        azureLocation: azureLocation
        cloudId: 0
        azureTenantId: azureTenantId
        azureSubscriptionId: azureSubscriptionId
      properties:
        azureSubscriptionId:
          nullable: true
          type: string
        azureClientId:
          nullable: true
          type: string
        azureClientSecret:
          nullable: true
          type: string
        azureTenantId:
          nullable: true
          type: string
        azureLocation:
          nullable: true
          type: string
        cloudId:
          format: int32
          nullable: true
          type: integer
      type: object
    BackupCredentials:
      additionalProperties: false
      example:
        data:
        - projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          isInfra: true
          s3Region: s3Region
          lastModifiedBy: lastModifiedBy
          organizationId: 6
          createdAt: createdAt
          isDefault: true
          s3Endpoint: s3Endpoint
          createdBy: createdBy
          s3AccessKeyId: s3AccessKeyId
          isLocked: true
          id: 0
          s3Name: s3Name
          lastModified: lastModified
        - projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          isInfra: true
          s3Region: s3Region
          lastModifiedBy: lastModifiedBy
          organizationId: 6
          createdAt: createdAt
          isDefault: true
          s3Endpoint: s3Endpoint
          createdBy: createdBy
          s3AccessKeyId: s3AccessKeyId
          isLocked: true
          id: 0
          s3Name: s3Name
          lastModified: lastModified
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/BackupCredentialsListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    BackupCredentialsCreateCommand:
      additionalProperties: false
      example:
        organizationId: 0
        s3SecretKey: s3SecretKey
        s3Endpoint: s3Endpoint
        s3AccessKeyId: s3AccessKeyId
        s3Region: s3Region
        s3Name: s3Name
      properties:
        s3Name:
          nullable: true
          type: string
        s3AccessKeyId:
          nullable: true
          type: string
        s3SecretKey:
          nullable: true
          type: string
        s3Endpoint:
          nullable: true
          type: string
        s3Region:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
      type: object
    BackupCredentialsForOrganizationEntity:
      additionalProperties: false
      example:
        isDefault: true
        isInfra: true
        name: name
        backupCredentialId: 0
      properties:
        backupCredentialId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        isDefault:
          type: boolean
        isInfra:
          type: boolean
      type: object
    BackupCredentialsListDto:
      additionalProperties: false
      example:
        projects:
        - name: name
          id: 5
        - name: name
          id: 5
        organizationName: organizationName
        isInfra: true
        s3Region: s3Region
        lastModifiedBy: lastModifiedBy
        organizationId: 6
        createdAt: createdAt
        isDefault: true
        s3Endpoint: s3Endpoint
        createdBy: createdBy
        s3AccessKeyId: s3AccessKeyId
        isLocked: true
        id: 0
        s3Name: s3Name
        lastModified: lastModified
      properties:
        id:
          format: int32
          type: integer
        s3Name:
          type: string
        s3AccessKeyId:
          type: string
        s3Endpoint:
          type: string
        s3Region:
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        organizationName:
          nullable: true
          type: string
        projects:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          type: array
        isLocked:
          type: boolean
        createdBy:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        isDefault:
          type: boolean
        isInfra:
          type: boolean
      required:
      - createdAt
      - createdBy
      - id
      - isDefault
      - isInfra
      - isLocked
      - lastModified
      - lastModifiedBy
      - organizationId
      - organizationName
      - projects
      - s3AccessKeyId
      - s3Endpoint
      - s3Name
      - s3Region
      type: object
    BackupCredentialsSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    BackupCredentialsSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    BackupCredentialsUpdateCommand:
      additionalProperties: false
      example:
        s3SecretKey: s3SecretKey
        s3AccessKeyId: s3AccessKeyId
        id: 0
        s3Name: s3Name
      properties:
        id:
          format: int32
          type: integer
        s3Name:
          nullable: true
          type: string
        s3AccessKeyId:
          nullable: true
          type: string
        s3SecretKey:
          nullable: true
          type: string
      type: object
    BackupDto:
      additionalProperties: false
      example:
        includedNamespace:
        - includedNamespace
        - includedNamespace
        excludedNamespace:
        - excludedNamespace
        - excludedNamespace
      properties:
        includedNamespace:
          items:
            type: string
          nullable: true
          type: array
        excludedNamespace:
          items:
            type: string
          nullable: true
          type: array
      required:
      - excludedNamespace
      - includedNamespace
      type: object
    BackupLockManagerCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    BackupMakeDefaultCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    BackupStorageLocationDto:
      additionalProperties: false
      example:
        phase: phase
        createdAt: 2000-01-23T04:56:07.000+00:00
        provider: provider
        namespace: namespace
        metadataName: metadataName
        accessMode: accessMode
        lastValidated: 2000-01-23T04:56:07.000+00:00
        backupCredentialId: 0
      properties:
        metadataName:
          type: string
        provider:
          type: string
        namespace:
          type: string
        lastValidated:
          format: date-time
          nullable: true
          type: string
        createdAt:
          format: date-time
          nullable: true
          type: string
        accessMode:
          type: string
        phase:
          nullable: true
          type: string
        backupCredentialId:
          format: int32
          nullable: true
          type: integer
      required:
      - accessMode
      - backupCredentialId
      - createdAt
      - lastValidated
      - metadataName
      - namespace
      - phase
      - provider
      type: object
    BecomePartnerCommand:
      additionalProperties: false
      example:
        fullName: fullName
        email: email
      properties:
        fullName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
      type: object
    BillingCredentialsSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    BillingCredentialsSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    BillingInfo:
      additionalProperties: false
      example:
        data:
        - isDeleted: true
          endDate: endDate
          tcu: 6.027456183070403
          projectName: projectName
          projectId: 0
          startDate: startDate
        - isDeleted: true
          endDate: endDate
          tcu: 6.027456183070403
          projectName: projectName
          projectId: 0
          startDate: startDate
        totalTcu: 1.4658129805029452
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/BillingSummaryDto"
          nullable: true
          type: array
        totalTcu:
          format: double
          type: number
        totalCount:
          format: int32
          type: integer
      type: object
    BillingInfoDto:
      additionalProperties: false
      example:
        legalName: legalName
        country: country
        address: address
        city: city
        billingEmail: billingEmail
        vatNumber: vatNumber
      properties:
        country:
          nullable: true
          type: string
        vatNumber:
          nullable: true
          type: string
        legalName:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        billingEmail:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
      required:
      - address
      - billingEmail
      - city
      - country
      - legalName
      - vatNumber
      type: object
    BillingPeriod:
      enum:
      - none
      - daily
      - monthly
      - yearly
      type: string
    BillingSummaryDto:
      additionalProperties: false
      example:
        isDeleted: true
        endDate: endDate
        tcu: 6.027456183070403
        projectName: projectName
        projectId: 0
        startDate: startDate
      properties:
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
        startDate:
          nullable: true
          type: string
        endDate:
          nullable: true
          type: string
        tcu:
          format: double
          type: number
        isDeleted:
          type: boolean
      type: object
    BindAppRepositoryCommand:
      additionalProperties: false
      example:
        organizationId: 0
        filteringElements:
        - organizationName: organizationName
          name: name
        - organizationName: organizationName
          name: name
      properties:
        filteringElements:
          items:
            $ref: "#/components/schemas/FilteringElementDto"
          nullable: true
          type: array
        organizationId:
          format: int32
          nullable: true
          type: integer
      type: object
    BindFlavorToProjectCommand:
      additionalProperties: false
      example:
        flavors:
        - flavors
        - flavors
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        flavors:
          items:
            type: string
          nullable: true
          type: array
      type: object
    BindImageToProjectCommand:
      additionalProperties: false
      example:
        images:
        - images
        - images
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        images:
          items:
            type: string
          nullable: true
          type: array
      type: object
    BindProjectGroupsToUserGroupCommand:
      additionalProperties: false
      example:
        userGroupId: 6
        projectGroups:
        - 0
        - 0
      properties:
        projectGroups:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        userGroupId:
          format: int32
          type: integer
      type: object
    BindProjectsToProjectGroupCommand:
      additionalProperties: false
      example:
        projectGroupId: 0
        projectIds:
        - 6
        - 6
      properties:
        projectGroupId:
          format: int32
          type: integer
        projectIds:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
      type: object
    BindSubscriptionCommand:
      additionalProperties: false
      example:
        id: 0
        yearly: true
      properties:
        id:
          format: int32
          type: integer
        yearly:
          type: boolean
      type: object
    BindSubscriptionResponseDto:
      additionalProperties: false
      example:
        paymentIntentId: paymentIntentId
        invoiceFailureCode: invoiceFailureCode
        invoiceFailureReason: invoiceFailureReason
        paymentIntentClientSecret: paymentIntentClientSecret
        invoiceFailureMessage: invoiceFailureMessage
        status: status
      properties:
        status:
          nullable: true
          type: string
        paymentIntentClientSecret:
          nullable: true
          type: string
        paymentIntentId:
          nullable: true
          type: string
        invoiceFailureCode:
          nullable: true
          type: string
        invoiceFailureMessage:
          nullable: true
          type: string
        invoiceFailureReason:
          nullable: true
          type: string
      type: object
    BindUnbindEndpointToTokenCommand:
      additionalProperties: false
      example:
        endpoints:
        - path: path
          controller: controller
          method: method
          description: description
          id: 0
        - path: path
          controller: controller
          method: method
          description: description
          id: 0
        tokenId: tokenId
        bindAll: true
      properties:
        tokenId:
          nullable: true
          type: string
        endpoints:
          items:
            $ref: "#/components/schemas/AvailableEndpointData"
          nullable: true
          type: array
        bindAll:
          type: boolean
      type: object
    BindUserGroupsToProjectGroupCommand:
      additionalProperties: false
      example:
        userGroups:
        - 0
        - 0
        projectGroupId: 6
      properties:
        userGroups:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        projectGroupId:
          format: int32
          type: integer
      type: object
    BindUsersToUserGroupCommand:
      additionalProperties: false
      example:
        userGroupId: 0
        userIds:
        - userIds
        - userIds
      properties:
        userGroupId:
          format: int32
          type: integer
        userIds:
          items:
            type: string
          nullable: true
          type: array
      type: object
    BlockOrganizationCommand:
      additionalProperties: false
      type: object
    BoundFlavorsForProjectsList:
      additionalProperties: false
      example:
        data:
        - cpu: 6
          windowsPrice: windowsPrice
          maxDataDiskCount: 5
          windowsSpotPrice: windowsSpotPrice
          cloudType: NONE
          existsLinuxSpotPrice: true
          name: name
          id: 0
          projectName: projectName
          linuxPrice: linuxPrice
          projectId: 5
          localDiskSize: 2
          ram: 1.4658129805029452
          existsWindowsSpotPrice: true
          linuxSpotPrice: linuxSpotPrice
        - cpu: 6
          windowsPrice: windowsPrice
          maxDataDiskCount: 5
          windowsSpotPrice: windowsSpotPrice
          cloudType: NONE
          existsLinuxSpotPrice: true
          name: name
          id: 0
          projectName: projectName
          linuxPrice: linuxPrice
          projectId: 5
          localDiskSize: 2
          ram: 1.4658129805029452
          existsWindowsSpotPrice: true
          linuxSpotPrice: linuxSpotPrice
        totalCount: 7
      properties:
        data:
          items:
            $ref: "#/components/schemas/BoundFlavorsForProjectsListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    BoundFlavorsForProjectsListDto:
      additionalProperties: false
      example:
        cpu: 6
        windowsPrice: windowsPrice
        maxDataDiskCount: 5
        windowsSpotPrice: windowsSpotPrice
        cloudType: NONE
        existsLinuxSpotPrice: true
        name: name
        id: 0
        projectName: projectName
        linuxPrice: linuxPrice
        projectId: 5
        localDiskSize: 2
        ram: 1.4658129805029452
        existsWindowsSpotPrice: true
        linuxSpotPrice: linuxSpotPrice
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        cpu:
          format: int32
          type: integer
        ram:
          format: double
          type: number
        projectId:
          format: int32
          nullable: true
          type: integer
        projectName:
          type: string
        maxDataDiskCount:
          format: int32
          nullable: true
          type: integer
        existsLinuxSpotPrice:
          type: boolean
        existsWindowsSpotPrice:
          type: boolean
        linuxSpotPrice:
          nullable: true
          type: string
        linuxPrice:
          nullable: true
          type: string
        windowsSpotPrice:
          nullable: true
          type: string
        windowsPrice:
          nullable: true
          type: string
        cloudType:
          $ref: "#/components/schemas/CloudType"
        localDiskSize:
          format: int32
          type: integer
      required:
      - cloudType
      - cpu
      - existsLinuxSpotPrice
      - existsWindowsSpotPrice
      - id
      - linuxPrice
      - linuxSpotPrice
      - maxDataDiskCount
      - name
      - projectId
      - projectName
      - ram
      - windowsPrice
      - windowsSpotPrice
      type: object
    BoundImagesForProjectsList:
      additionalProperties: false
      example:
        data:
        - imageId: imageId
          size: 1.4658129805029452
          cloudType: NONE
          cloudId: 5
          name: name
          isWindows: true
          id: 0
          projectName: projectName
          projectId: 6
        - imageId: imageId
          size: 1.4658129805029452
          cloudType: NONE
          cloudId: 5
          name: name
          isWindows: true
          id: 0
          projectName: projectName
          projectId: 6
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/BoundImagesForProjectsListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    BoundImagesForProjectsListDto:
      additionalProperties: false
      example:
        imageId: imageId
        size: 1.4658129805029452
        cloudType: NONE
        cloudId: 5
        name: name
        isWindows: true
        id: 0
        projectName: projectName
        projectId: 6
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        projectId:
          format: int32
          nullable: true
          type: integer
        projectName:
          nullable: true
          type: string
        size:
          format: double
          nullable: true
          type: number
        imageId:
          nullable: true
          type: string
        cloudId:
          format: int32
          nullable: true
          type: integer
        isWindows:
          type: boolean
        cloudType:
          $ref: "#/components/schemas/CloudType"
      required:
      - cloudId
      - cloudType
      - id
      - imageId
      - isWindows
      - name
      - projectId
      - projectName
      - size
      type: object
    Breakdown:
      additionalProperties: false
      example:
        totalMonthlyCost: totalMonthlyCost
        resources:
        - metadata:
            key: ""
          monthlyUsageCost: monthlyUsageCost
          name: name
          hourlyCost: hourlyCost
          subresources:
          - metadata:
              key: ""
            name: name
            hourlyCost: hourlyCost
            costComponents:
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            monthlyCost: monthlyCost
          - metadata:
              key: ""
            name: name
            hourlyCost: hourlyCost
            costComponents:
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            monthlyCost: monthlyCost
          costComponents:
          - unit: unit
            hourlyQuantity: hourlyQuantity
            price: price
            name: name
            hourlyCost: hourlyCost
            monthlyQuantity: monthlyQuantity
            usageBased: true
            priceNotFound: true
            monthlyCost: monthlyCost
          - unit: unit
            hourlyQuantity: hourlyQuantity
            price: price
            name: name
            hourlyCost: hourlyCost
            monthlyQuantity: monthlyQuantity
            usageBased: true
            priceNotFound: true
            monthlyCost: monthlyCost
          monthlyCost: monthlyCost
          resourceType: resourceType
          tags:
            key: tags
        - metadata:
            key: ""
          monthlyUsageCost: monthlyUsageCost
          name: name
          hourlyCost: hourlyCost
          subresources:
          - metadata:
              key: ""
            name: name
            hourlyCost: hourlyCost
            costComponents:
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            monthlyCost: monthlyCost
          - metadata:
              key: ""
            name: name
            hourlyCost: hourlyCost
            costComponents:
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            monthlyCost: monthlyCost
          costComponents:
          - unit: unit
            hourlyQuantity: hourlyQuantity
            price: price
            name: name
            hourlyCost: hourlyCost
            monthlyQuantity: monthlyQuantity
            usageBased: true
            priceNotFound: true
            monthlyCost: monthlyCost
          - unit: unit
            hourlyQuantity: hourlyQuantity
            price: price
            name: name
            hourlyCost: hourlyCost
            monthlyQuantity: monthlyQuantity
            usageBased: true
            priceNotFound: true
            monthlyCost: monthlyCost
          monthlyCost: monthlyCost
          resourceType: resourceType
          tags:
            key: tags
        totalHourlyCost: totalHourlyCost
        totalMonthlyUsageCost: totalMonthlyUsageCost
      properties:
        resources:
          items:
            $ref: "#/components/schemas/Resource"
          nullable: true
          type: array
        totalHourlyCost:
          nullable: true
          type: string
        totalMonthlyCost:
          nullable: true
          type: string
        totalMonthlyUsageCost:
          nullable: true
          type: string
      type: object
    BridgeListCommand:
      additionalProperties: false
      example:
        tokenId: tokenId
        hypervisor: hypervisor
        url: url
        tokenSecret: tokenSecret
      properties:
        url:
          nullable: true
          type: string
        tokenId:
          nullable: true
          type: string
        tokenSecret:
          nullable: true
          type: string
        hypervisor:
          nullable: true
          type: string
      type: object
    ButtonStatusDto:
      additionalProperties: false
      example:
        reasons:
        - reasons
        - reasons
        hidden: true
        enable: true
      properties:
        enable:
          type: boolean
        reasons:
          items:
            type: string
          nullable: true
          type: array
        hidden:
          type: boolean
      type: object
    CBackupDto:
      additionalProperties: false
      example:
        scheduleName: scheduleName
        phase: phase
        createdAt: 2000-01-23T04:56:07.000+00:00
        namespace: namespace
        metadataName: metadataName
        expiration: 2000-01-23T04:56:07.000+00:00
        location: location
      properties:
        metadataName:
          type: string
        createdAt:
          format: date-time
          nullable: true
          type: string
        expiration:
          format: date-time
          nullable: true
          type: string
        scheduleName:
          nullable: true
          type: string
        namespace:
          type: string
        location:
          nullable: true
          type: string
        phase:
          nullable: true
          type: string
      required:
      - createdAt
      - expiration
      - location
      - metadataName
      - namespace
      - phase
      - scheduleName
      type: object
    CDeleteBackupRequestDto:
      additionalProperties: false
      example:
        phase: phase
        createdAt: 2000-01-23T04:56:07.000+00:00
        namespace: namespace
        metadataName: metadataName
        backupName: backupName
      properties:
        metadataName:
          type: string
        createdAt:
          format: date-time
          nullable: true
          type: string
        backupName:
          type: string
        namespace:
          type: string
        phase:
          nullable: true
          type: string
      required:
      - backupName
      - createdAt
      - metadataName
      - namespace
      - phase
      type: object
    CNI:
      enum:
      - Default
      - Calico
      - Flannel
      type: string
    CRestoreDto:
      additionalProperties: false
      example:
        scheduleName: scheduleName
        phase: phase
        createdAt: 2000-01-23T04:56:07.000+00:00
        startTimeStamp: 2000-01-23T04:56:07.000+00:00
        warnings: 0
        namespace: namespace
        excludeNamespaces:
        - excludeNamespaces
        - excludeNamespaces
        completionDateTime: 2000-01-23T04:56:07.000+00:00
        metadataName: metadataName
        backupName: backupName
        includeNamespaces:
        - includeNamespaces
        - includeNamespaces
      properties:
        metadataName:
          type: string
        backupName:
          type: string
        scheduleName:
          type: string
        namespace:
          type: string
        excludeNamespaces:
          items:
            type: string
          type: array
        includeNamespaces:
          items:
            type: string
          type: array
        completionDateTime:
          format: date-time
          type: string
        startTimeStamp:
          format: date-time
          type: string
        createdAt:
          format: date-time
          nullable: true
          type: string
        warnings:
          format: int64
          type: integer
        phase:
          nullable: true
          type: string
      required:
      - backupName
      - completionDateTime
      - createdAt
      - excludeNamespaces
      - includeNamespaces
      - metadataName
      - namespace
      - phase
      - scheduleName
      - startTimeStamp
      - warnings
      type: object
    CScheduleDto:
      additionalProperties: false
      example:
        phase: phase
        createdAt: 2000-01-23T04:56:07.000+00:00
        schedule: schedule
        lastBackup: 2000-01-23T04:56:07.000+00:00
        namespace: namespace
        metadataName: metadataName
        includedNamespaces:
        - includedNamespaces
        - includedNamespaces
        excludedNamespaces:
        - excludedNamespaces
        - excludedNamespaces
        ttl: ttl
        status:
          phase: phase
          lastBackup: 2000-01-23T04:56:07.000+00:00
      properties:
        status:
          $ref: "#/components/schemas/Status"
        metadataName:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        createdAt:
          format: date-time
          nullable: true
          type: string
        schedule:
          nullable: true
          type: string
        ttl:
          nullable: true
          type: string
        lastBackup:
          format: date-time
          nullable: true
          type: string
        phase:
          nullable: true
          type: string
        excludedNamespaces:
          items:
            type: string
          nullable: true
          type: array
        includedNamespaces:
          items:
            type: string
          nullable: true
          type: array
      required:
      - createdAt
      - excludedNamespaces
      - includedNamespaces
      - lastBackup
      - metadataName
      - namespace
      - phase
      - schedule
      - ttl
      type: object
    CancelExpiredSubscriptionsCommand:
      additionalProperties: false
      type: object
    CancelProjectAppCommand:
      additionalProperties: false
      example:
        projectAppId: 0
      properties:
        projectAppId:
          format: int32
          type: integer
      type: object
    CardInformationDto:
      additionalProperties: false
      example:
        expirationYear: expirationYear
        last4: last4
        holderName: holderName
        balance: 0
        expirationMonth: expirationMonth
        brand: brand
      properties:
        expirationMonth:
          nullable: true
          type: string
        expirationYear:
          nullable: true
          type: string
        last4:
          nullable: true
          type: string
        brand:
          nullable: true
          type: string
        holderName:
          nullable: true
          type: string
        balance:
          format: int64
          type: integer
      required:
      - balance
      - brand
      - expirationMonth
      - expirationYear
      - holderName
      - last4
      type: object
    CatalogAppDetailsDto:
      additionalProperties: false
      example:
        appVersion: appVersion
        packageId: packageId
        description: description
        securityReport:
          high: 7
          critical: 2
          low: 2
          medium: 9
          unknown: 3
        official: true
        readme: readme
        stars: 4
        version: version
        verifiedPublisher: true
        appRepoOrganizationName: appRepoOrganizationName
        catalogName: catalogName
        appRepoName: appRepoName
        appRepoId: 6
        catalogId: 1
        hasJsonSchema: true
        name: name
        projectApps:
        - isLocked: true
          name: name
          namespace: namespace
          autoSync: true
          id: 5
          projectName: projectName
          projectId: 5
          version: version
          status: None
        - isLocked: true
          name: name
          namespace: namespace
          autoSync: true
          id: 5
          projectName: projectName
          projectId: 5
          version: version
          status: None
        id: 0
        logoId: logoId
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        appRepoName:
          nullable: true
          type: string
        appRepoOrganizationName:
          nullable: true
          type: string
        appRepoId:
          format: int32
          type: integer
        catalogName:
          nullable: true
          type: string
        catalogId:
          format: int32
          type: integer
        packageId:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
        logoId:
          nullable: true
          type: string
        projectApps:
          items:
            $ref: "#/components/schemas/ProjectAppDto"
          nullable: true
          type: array
        description:
          nullable: true
          type: string
        readme:
          nullable: true
          type: string
        securityReport:
          $ref: "#/components/schemas/SecurityReportSummaryDto"
        appVersion:
          nullable: true
          type: string
        stars:
          format: int32
          type: integer
        verifiedPublisher:
          type: boolean
        official:
          type: boolean
        hasJsonSchema:
          type: boolean
      type: object
    CatalogAppList:
      additionalProperties: false
      example:
        data:
        - repoId: 6
          appVersion: appVersion
          repoName: repoName
          logoImageId: logoImageId
          packageId: packageId
          description: description
          stars: 5
          repository:
            scannerDisabled: true
            isImported: true
            organizationName: organizationName
            organizationDisplayName: organizationDisplayName
            kind: 1
            name: name
            repositoryId: repositoryId
            official: true
            verifiedPublisher: true
            url: url
          catalogAppId: 0
          version: version
          catalogName: catalogName
          catalogId: 1
          installedInstanceCount: 5
          isLocked: true
          name: name
          securityReportSummary:
            high: 3
            critical: 7
            low: 9
            medium: 2
            unknown: 4
        - repoId: 6
          appVersion: appVersion
          repoName: repoName
          logoImageId: logoImageId
          packageId: packageId
          description: description
          stars: 5
          repository:
            scannerDisabled: true
            isImported: true
            organizationName: organizationName
            organizationDisplayName: organizationDisplayName
            kind: 1
            name: name
            repositoryId: repositoryId
            official: true
            verifiedPublisher: true
            url: url
          catalogAppId: 0
          version: version
          catalogName: catalogName
          catalogId: 1
          installedInstanceCount: 5
          isLocked: true
          name: name
          securityReportSummary:
            high: 3
            critical: 7
            low: 9
            medium: 2
            unknown: 4
        totalCount: 2
      properties:
        data:
          items:
            $ref: "#/components/schemas/CatalogAppListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    CatalogAppListDto:
      additionalProperties: false
      example:
        repoId: 6
        appVersion: appVersion
        repoName: repoName
        logoImageId: logoImageId
        packageId: packageId
        description: description
        stars: 5
        repository:
          scannerDisabled: true
          isImported: true
          organizationName: organizationName
          organizationDisplayName: organizationDisplayName
          kind: 1
          name: name
          repositoryId: repositoryId
          official: true
          verifiedPublisher: true
          url: url
        catalogAppId: 0
        version: version
        catalogName: catalogName
        catalogId: 1
        installedInstanceCount: 5
        isLocked: true
        name: name
        securityReportSummary:
          high: 3
          critical: 7
          low: 9
          medium: 2
          unknown: 4
      properties:
        catalogAppId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        repoId:
          format: int32
          type: integer
        repoName:
          nullable: true
          type: string
        catalogId:
          format: int32
          type: integer
        catalogName:
          nullable: true
          type: string
        packageId:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
        logoImageId:
          nullable: true
          type: string
        isLocked:
          type: boolean
        appVersion:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        securityReportSummary:
          $ref: "#/components/schemas/SecurityReportSummary"
        repository:
          $ref: "#/components/schemas/Repository"
        stars:
          format: int64
          type: integer
        installedInstanceCount:
          format: int32
          nullable: true
          type: integer
      type: object
    CatalogAppLockManagement:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    CatalogAppParamsDetailsDto:
      additionalProperties: false
      example:
        isTaikunLink: true
        catalogAppName: catalogAppName
        hasJsonSchema: true
        isEditableWhenInstalling: true
        id: 0
        value: value
        key: key
        isMandatory: true
        isEditableAfterInstallation: true
      properties:
        id:
          format: int32
          type: integer
        catalogAppName:
          nullable: true
          type: string
        key:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
        isEditableWhenInstalling:
          type: boolean
        isEditableAfterInstallation:
          type: boolean
        isMandatory:
          type: boolean
        hasJsonSchema:
          type: boolean
        isTaikunLink:
          type: boolean
      type: object
    CatalogAppParamsDto:
      additionalProperties: false
      example:
        isEditableWhenInstalling: true
        value: value
        key: key
        isMandatory: true
        isEditableAfterInstallation: true
      properties:
        key:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
        isEditableWhenInstalling:
          type: boolean
        isEditableAfterInstallation:
          type: boolean
        isMandatory:
          type: boolean
      type: object
    CatalogDetails:
      additionalProperties: false
      example:
        organizationId: 6
        boundApplications:
        - appVersion: appVersion
          logoImageId: logoImageId
          deprecated: true
          packageId: packageId
          description: description
          signed: true
          stars: 7
          repository:
            scannerDisabled: true
            isImported: true
            organizationName: organizationName
            organizationDisplayName: organizationDisplayName
            kind: 1
            name: name
            repositoryId: repositoryId
            official: true
            verifiedPublisher: true
            url: url
          catalogAppId: 5
          version: version
          catalogId: 5
          installedInstanceCount: 2
          isLocked: true
          name: name
          isAdded: true
          normalizedName: normalizedName
          securityReportSummary:
            high: 3
            critical: 7
            low: 9
            medium: 2
            unknown: 4
          ts: ts
        - appVersion: appVersion
          logoImageId: logoImageId
          deprecated: true
          packageId: packageId
          description: description
          signed: true
          stars: 7
          repository:
            scannerDisabled: true
            isImported: true
            organizationName: organizationName
            organizationDisplayName: organizationDisplayName
            kind: 1
            name: name
            repositoryId: repositoryId
            official: true
            verifiedPublisher: true
            url: url
          catalogAppId: 5
          version: version
          catalogId: 5
          installedInstanceCount: 2
          isLocked: true
          name: name
          isAdded: true
          normalizedName: normalizedName
          securityReportSummary:
            high: 3
            critical: 7
            low: 9
            medium: 2
            unknown: 4
          ts: ts
        isDefault: true
        isLocked: true
        name: name
        description: description
        boundProjects:
        - cloudType: AWS
          isLocked: true
          name: name
          health: "Null"
          id: 1
          isVirtualCluster: true
          maintenanceModeEnabled: true
          kubernetesVersion: kubernetesVersion
          status: "Null"
        - cloudType: AWS
          isLocked: true
          name: name
          health: "Null"
          id: 1
          isVirtualCluster: true
          maintenanceModeEnabled: true
          kubernetesVersion: kubernetesVersion
          status: "Null"
        id: 0
        packageIds:
        - packageIds
        - packageIds
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        isLocked:
          type: boolean
        isDefault:
          type: boolean
        organizationId:
          format: int32
          type: integer
        packageIds:
          items:
            type: string
          nullable: true
          type: array
        boundProjects:
          items:
            $ref: "#/components/schemas/ProjectCatalogDto"
          nullable: true
          type: array
        boundApplications:
          items:
            $ref: "#/components/schemas/AvailablePackagesDto"
          nullable: true
          type: array
      type: object
    CatalogDropdownDto:
      additionalProperties: false
      example:
        isDefault: true
        name: name
        id: 0
        packageIds:
        - packageIds
        - packageIds
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        packageIds:
          items:
            type: string
          nullable: true
          type: array
        isDefault:
          type: boolean
      type: object
    CatalogList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          boundApplications:
          - appVersion: appVersion
            logoImageId: logoImageId
            deprecated: true
            packageId: packageId
            description: description
            signed: true
            stars: 7
            repository:
              scannerDisabled: true
              isImported: true
              organizationName: organizationName
              organizationDisplayName: organizationDisplayName
              kind: 1
              name: name
              repositoryId: repositoryId
              official: true
              verifiedPublisher: true
              url: url
            catalogAppId: 5
            version: version
            catalogId: 5
            installedInstanceCount: 2
            isLocked: true
            name: name
            isAdded: true
            normalizedName: normalizedName
            securityReportSummary:
              high: 3
              critical: 7
              low: 9
              medium: 2
              unknown: 4
            ts: ts
          - appVersion: appVersion
            logoImageId: logoImageId
            deprecated: true
            packageId: packageId
            description: description
            signed: true
            stars: 7
            repository:
              scannerDisabled: true
              isImported: true
              organizationName: organizationName
              organizationDisplayName: organizationDisplayName
              kind: 1
              name: name
              repositoryId: repositoryId
              official: true
              verifiedPublisher: true
              url: url
            catalogAppId: 5
            version: version
            catalogId: 5
            installedInstanceCount: 2
            isLocked: true
            name: name
            isAdded: true
            normalizedName: normalizedName
            securityReportSummary:
              high: 3
              critical: 7
              low: 9
              medium: 2
              unknown: 4
            ts: ts
          isDefault: true
          isLocked: true
          name: name
          description: description
          boundProjects:
          - cloudType: AWS
            isLocked: true
            name: name
            health: "Null"
            id: 1
            isVirtualCluster: true
            maintenanceModeEnabled: true
            kubernetesVersion: kubernetesVersion
            status: "Null"
          - cloudType: AWS
            isLocked: true
            name: name
            health: "Null"
            id: 1
            isVirtualCluster: true
            maintenanceModeEnabled: true
            kubernetesVersion: kubernetesVersion
            status: "Null"
          id: 0
          packageIds:
          - packageIds
          - packageIds
        - organizationId: 6
          boundApplications:
          - appVersion: appVersion
            logoImageId: logoImageId
            deprecated: true
            packageId: packageId
            description: description
            signed: true
            stars: 7
            repository:
              scannerDisabled: true
              isImported: true
              organizationName: organizationName
              organizationDisplayName: organizationDisplayName
              kind: 1
              name: name
              repositoryId: repositoryId
              official: true
              verifiedPublisher: true
              url: url
            catalogAppId: 5
            version: version
            catalogId: 5
            installedInstanceCount: 2
            isLocked: true
            name: name
            isAdded: true
            normalizedName: normalizedName
            securityReportSummary:
              high: 3
              critical: 7
              low: 9
              medium: 2
              unknown: 4
            ts: ts
          - appVersion: appVersion
            logoImageId: logoImageId
            deprecated: true
            packageId: packageId
            description: description
            signed: true
            stars: 7
            repository:
              scannerDisabled: true
              isImported: true
              organizationName: organizationName
              organizationDisplayName: organizationDisplayName
              kind: 1
              name: name
              repositoryId: repositoryId
              official: true
              verifiedPublisher: true
              url: url
            catalogAppId: 5
            version: version
            catalogId: 5
            installedInstanceCount: 2
            isLocked: true
            name: name
            isAdded: true
            normalizedName: normalizedName
            securityReportSummary:
              high: 3
              critical: 7
              low: 9
              medium: 2
              unknown: 4
            ts: ts
          isDefault: true
          isLocked: true
          name: name
          description: description
          boundProjects:
          - cloudType: AWS
            isLocked: true
            name: name
            health: "Null"
            id: 1
            isVirtualCluster: true
            maintenanceModeEnabled: true
            kubernetesVersion: kubernetesVersion
            status: "Null"
          - cloudType: AWS
            isLocked: true
            name: name
            health: "Null"
            id: 1
            isVirtualCluster: true
            maintenanceModeEnabled: true
            kubernetesVersion: kubernetesVersion
            status: "Null"
          id: 0
          packageIds:
          - packageIds
          - packageIds
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/CatalogListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    CatalogListDto:
      additionalProperties: false
      example:
        organizationId: 6
        boundApplications:
        - appVersion: appVersion
          logoImageId: logoImageId
          deprecated: true
          packageId: packageId
          description: description
          signed: true
          stars: 7
          repository:
            scannerDisabled: true
            isImported: true
            organizationName: organizationName
            organizationDisplayName: organizationDisplayName
            kind: 1
            name: name
            repositoryId: repositoryId
            official: true
            verifiedPublisher: true
            url: url
          catalogAppId: 5
          version: version
          catalogId: 5
          installedInstanceCount: 2
          isLocked: true
          name: name
          isAdded: true
          normalizedName: normalizedName
          securityReportSummary:
            high: 3
            critical: 7
            low: 9
            medium: 2
            unknown: 4
          ts: ts
        - appVersion: appVersion
          logoImageId: logoImageId
          deprecated: true
          packageId: packageId
          description: description
          signed: true
          stars: 7
          repository:
            scannerDisabled: true
            isImported: true
            organizationName: organizationName
            organizationDisplayName: organizationDisplayName
            kind: 1
            name: name
            repositoryId: repositoryId
            official: true
            verifiedPublisher: true
            url: url
          catalogAppId: 5
          version: version
          catalogId: 5
          installedInstanceCount: 2
          isLocked: true
          name: name
          isAdded: true
          normalizedName: normalizedName
          securityReportSummary:
            high: 3
            critical: 7
            low: 9
            medium: 2
            unknown: 4
          ts: ts
        isDefault: true
        isLocked: true
        name: name
        description: description
        boundProjects:
        - cloudType: AWS
          isLocked: true
          name: name
          health: "Null"
          id: 1
          isVirtualCluster: true
          maintenanceModeEnabled: true
          kubernetesVersion: kubernetesVersion
          status: "Null"
        - cloudType: AWS
          isLocked: true
          name: name
          health: "Null"
          id: 1
          isVirtualCluster: true
          maintenanceModeEnabled: true
          kubernetesVersion: kubernetesVersion
          status: "Null"
        id: 0
        packageIds:
        - packageIds
        - packageIds
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        isLocked:
          type: boolean
        isDefault:
          type: boolean
        organizationId:
          format: int32
          type: integer
        packageIds:
          items:
            type: string
          nullable: true
          type: array
        boundProjects:
          items:
            $ref: "#/components/schemas/ProjectCatalogDto"
          nullable: true
          type: array
        boundApplications:
          items:
            $ref: "#/components/schemas/AvailablePackagesDto"
          nullable: true
          type: array
      type: object
    CatalogLockManagementCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    CatalogMakeDefaultCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    CatalogsForProjectDto:
      additionalProperties: false
      example:
        catalogName: catalogName
        catalogId: 0
        isBound: true
      properties:
        catalogId:
          format: int32
          type: integer
        catalogName:
          nullable: true
          type: string
        isBound:
          type: boolean
      required:
      - catalogId
      - catalogName
      - isBound
      type: object
    ChangeCardCommand:
      additionalProperties: false
      example:
        paymentMethodId: paymentMethodId
      properties:
        paymentMethodId:
          nullable: true
          type: string
      type: object
    ChangePasswordCommand:
      additionalProperties: false
      example:
        password: password
        newPassword: newPassword
      properties:
        password:
          nullable: true
          type: string
        newPassword:
          nullable: true
          type: string
      type: object
    ChatCompletionsCommand:
      additionalProperties: false
      example:
        messages: ""
      properties:
        messages:
          nullable: true
      type: object
    CheckAwsCommand:
      additionalProperties: false
      example:
        awsAccessKeyId: awsAccessKeyId
        awsSecretAccessKey: awsSecretAccessKey
      properties:
        awsAccessKeyId:
          nullable: true
          type: string
        awsSecretAccessKey:
          nullable: true
          type: string
      type: object
    CheckAzureCommand:
      additionalProperties: false
      example:
        azureClientSecret: azureClientSecret
        azureClientId: azureClientId
        azureTenantId: azureTenantId
      properties:
        azureClientId:
          nullable: true
          type: string
        azureClientSecret:
          nullable: true
          type: string
        azureTenantId:
          nullable: true
          type: string
      type: object
    CheckAzureCpuQuotaCommand:
      additionalProperties: false
      example:
        cloudId: 0
      properties:
        cloudId:
          format: int32
          type: integer
      type: object
    CheckGoogleCloudCommand:
      additionalProperties: false
      properties:
        config:
          format: binary
          nullable: true
          type: string
      type: object
    CheckKubeConfigCommand:
      additionalProperties: false
      properties:
        config:
          format: binary
          nullable: true
          type: string
      type: object
    CheckOpenstackCommand:
      additionalProperties: false
      example:
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackUser: openStackUser
        isAdmin: true
      properties:
        openStackUser:
          nullable: true
          type: string
        openStackPassword:
          nullable: true
          type: string
        openStackUrl:
          nullable: true
          type: string
        openStackDomain:
          nullable: true
          type: string
        isAdmin:
          type: boolean
        applicationCredEnabled:
          nullable: true
          type: boolean
      type: object
    CheckPrometheusCommand:
      additionalProperties: false
      example:
        password: password
        userName: userName
        url: url
      properties:
        password:
          nullable: true
          type: string
        userName:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
      type: object
    CheckS3Command:
      additionalProperties: false
      example:
        s3SecretKey: s3SecretKey
        s3Endpoint: s3Endpoint
        s3AccessKeyId: s3AccessKeyId
        s3Region: s3Region
      properties:
        s3AccessKeyId:
          nullable: true
          type: string
        s3SecretKey:
          nullable: true
          type: string
        s3Endpoint:
          nullable: true
          type: string
        s3Region:
          nullable: true
          type: string
      type: object
    CheckTanzuCommand:
      additionalProperties: false
      example:
        volumeType: volumeType
        password: password
        port: 0
        namespace: namespace
        url: url
        username: username
      properties:
        username:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        port:
          format: int32
          nullable: true
          type: integer
        volumeType:
          nullable: true
          type: string
      type: object
    CheckZadaraCommand:
      additionalProperties: false
      example:
        zadaraAccessKeyId: zadaraAccessKeyId
        zadaraSecretAccessKey: zadaraSecretAccessKey
        zadaraUrl: zadaraUrl
      properties:
        zadaraSecretAccessKey:
          nullable: true
          type: string
        zadaraAccessKeyId:
          nullable: true
          type: string
        zadaraUrl:
          nullable: true
          type: string
      type: object
    CidrCommand:
      additionalProperties: false
      example:
        cidr: cidr
      properties:
        cidr:
          nullable: true
          type: string
      type: object
    ClearCanceledPaymentMethodCommand:
      additionalProperties: false
      type: object
    CloseTicketCommand:
      additionalProperties: false
      example:
        ticketId: ticketId
      properties:
        ticketId:
          nullable: true
          type: string
      type: object
    CloudCredentialsDropdownRecordDto:
      additionalProperties: false
      example:
        projects:
        - flavors:
          - flavors
          - flavors
          images:
          - images
          - images
          imageNames:
          - imageNames
          - imageNames
          isReady: true
          name: name
          id: 6
        - flavors:
          - flavors
          - flavors
          images:
          - images
          - images
          imageNames:
          - imageNames
          - imageNames
          isReady: true
          name: name
          id: 6
        cloudType: NONE
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        cloudType:
          $ref: "#/components/schemas/CloudType"
        projects:
          items:
            $ref: "#/components/schemas/ProjectWithFlavorsAndImagesDto"
          nullable: true
          type: array
      required:
      - cloudType
      - id
      - name
      - projects
      type: object
    CloudCredentialsForOrganizationEntity:
      additionalProperties: false
      example:
        organizationId: 6
        isDefault: true
        projects:
        - name: name
          id: 5
        - name: name
          id: 5
        cloudType: NONE
        fullName: fullName
        id: 0
      properties:
        id:
          format: int32
          type: integer
        projects:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        fullName:
          nullable: true
          type: string
        cloudType:
          $ref: "#/components/schemas/CloudType"
        isDefault:
          type: boolean
        organizationId:
          format: int32
          type: integer
      required:
      - cloudType
      - fullName
      - id
      - isDefault
      - projects
      type: object
    CloudCredentialsResponseData:
      additionalProperties: false
      example:
        organizationId: 6
        organizationName: organizationName
        cloudType: cloudType
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        organizationName:
          nullable: true
          type: string
        cloudType:
          nullable: true
          type: string
      type: object
    CloudCredentialsSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    CloudCredentialsSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          cloudType: cloudType
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          cloudType: cloudType
          name: name
          id: 0
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/CloudCredentialsResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    CloudLockManagerCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    CloudRole:
      enum:
      - Bastion
      - Kubemaster
      - Kubeworker
      - AllInOne
      type: string
    CloudStatus:
      enum:
      - Deleting
      - Failure
      - FailedUpgrade
      - Waiting
      - Ready
      - Updating
      - Upgrading
      - Repairing
      type: string
    CloudType:
      enum:
      - NONE
      - AWS
      - AZURE
      - GOOGLE
      - OPENSTACK
      - PROXMOX
      - TANZU
      - OPENSHIFT
      - VSPHERE
      - ZADARA
      - ZEDEDA
      - GENERICKUBERNETES
      type: string
    CommonAvailabilityDto:
      additionalProperties: false
      example:
        name: name
        id: true
      properties:
        id:
          type: boolean
        name:
          nullable: true
          type: string
      type: object
    CommonDropdownDto:
      additionalProperties: false
      example:
        name: name
        id: 5
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    CommonDropdownIsBoundDto:
      additionalProperties: false
      example:
        isBound: true
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        isBound:
          type: boolean
      type: object
    CommonDropdownIsBoundDtoForProject:
      additionalProperties: false
      example:
        importClusterType: None
        health: "Null"
        isVirtualCluster: true
        hasKubeConfigFile: true
        alertingProfileId: 6
        isBound: true
        cloudType: AWS
        isLocked: true
        name: name
        id: 0
        maintenanceModeEnabled: true
        kubernetesVersion: kubernetesVersion
        status: "Null"
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        isBound:
          type: boolean
        hasKubeConfigFile:
          type: boolean
        kubernetesVersion:
          nullable: true
          type: string
        isLocked:
          type: boolean
        maintenanceModeEnabled:
          type: boolean
        isVirtualCluster:
          type: boolean
        alertingProfileId:
          format: int32
          nullable: true
          type: integer
        cloudType:
          $ref: "#/components/schemas/ECloudCredentialType"
        status:
          $ref: "#/components/schemas/ProjectStatus"
        health:
          $ref: "#/components/schemas/ProjectHealth"
        importClusterType:
          $ref: "#/components/schemas/ImportClusterType"
      type: object
    CommonExtendedDropdownDto:
      additionalProperties: false
      example:
        isDefault: true
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        isDefault:
          type: boolean
      type: object
    CommonSearchKubernetesResponseData:
      additionalProperties: false
      example:
        organizationId: 6
        organizationName: organizationName
        namespace: namespace
        metadataName: metadataName
        projectName: projectName
        projectId: 0
      properties:
        metadataName:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
      type: object
    CommonSearchResponseData:
      additionalProperties: false
      example:
        organizationId: 6
        organizationName: organizationName
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        organizationName:
          nullable: true
          type: string
      type: object
    CommonStringBasedDropdownDto:
      additionalProperties: false
      example:
        name: name
        id: id
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    CommonStringDropdownIsBoundDto:
      additionalProperties: false
      example:
        isBound: true
        name: name
        id: id
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        isBound:
          type: boolean
      type: object
    ConfigMapSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        includePublicImportedClusters: true
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
        includePublicImportedClusters:
          nullable: true
          type: boolean
      type: object
    ConfigMapSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchKubernetesResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ConfirmEmailCommand:
      additionalProperties: false
      example:
        mode: Confirm
        newEmail: newEmail
      properties:
        newEmail:
          nullable: true
          type: string
        mode:
          $ref: "#/components/schemas/EmailMode"
      type: object
    ConsoleScreenshotCommand:
      additionalProperties: false
      example:
        serverId: 0
      properties:
        serverId:
          format: int32
          type: integer
      type: object
    ContactUsCommand:
      additionalProperties: false
      example:
        businessEmail: businessEmail
        companyName: companyName
        name: name
        comment: comment
      properties:
        name:
          nullable: true
          type: string
        businessEmail:
          nullable: true
          type: string
        companyName:
          nullable: true
          type: string
        comment:
          nullable: true
          type: string
      type: object
    CostComponent:
      additionalProperties: false
      example:
        unit: unit
        hourlyQuantity: hourlyQuantity
        price: price
        name: name
        hourlyCost: hourlyCost
        monthlyQuantity: monthlyQuantity
        usageBased: true
        priceNotFound: true
        monthlyCost: monthlyCost
      properties:
        name:
          nullable: true
          type: string
        unit:
          nullable: true
          type: string
        hourlyQuantity:
          nullable: true
          type: string
        monthlyQuantity:
          nullable: true
          type: string
        price:
          nullable: true
          type: string
        hourlyCost:
          nullable: true
          type: string
        monthlyCost:
          nullable: true
          type: string
        priceNotFound:
          type: boolean
        usageBased:
          nullable: true
          type: boolean
      type: object
    CountryListDto:
      additionalProperties: false
      example:
        name: name
        isEu: true
      properties:
        name:
          nullable: true
          type: string
        isEu:
          type: boolean
      required:
      - isEu
      - name
      type: object
    CpuLimitsDto:
      additionalProperties: false
      example:
        maxClusterLimits: 6.027456183070403
        defaultContainerRequest: 1.4658129805029452
        defaultContainerLimit: 5.962133916683182
        maxClusterRequests: 0.8008281904610115
      properties:
        maxClusterRequests:
          format: double
          type: number
        maxClusterLimits:
          format: double
          type: number
        defaultContainerRequest:
          format: double
          type: number
        defaultContainerLimit:
          format: double
          type: number
      required:
      - defaultContainerLimit
      - defaultContainerRequest
      - maxClusterLimits
      - maxClusterRequests
      type: object
    CrdSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        includePublicImportedClusters: true
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
        includePublicImportedClusters:
          nullable: true
          type: boolean
      type: object
    CrdSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchKubernetesResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    CreateAccessProfileCommand:
      additionalProperties: false
      example:
        organizationId: 0
        allowedHosts:
        - ipAddress: ipAddress
          description: description
          maskBits: 6
        - ipAddress: ipAddress
          description: description
          maskBits: 6
        httpProxy: httpProxy
        ntpServers:
        - address: address
        - address: address
        name: name
        dnsServers:
        - address: address
        - address: address
        sshUsers:
        - sshPublicKey: sshPublicKey
          name: name
        - sshPublicKey: sshPublicKey
          name: name
      properties:
        name:
          nullable: true
          type: string
        httpProxy:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        sshUsers:
          items:
            $ref: "#/components/schemas/SshUserCreateDto"
          nullable: true
          type: array
        dnsServers:
          items:
            $ref: "#/components/schemas/DnsServerCreateDto"
          nullable: true
          type: array
        ntpServers:
          items:
            $ref: "#/components/schemas/NtpServerCreateDto"
          nullable: true
          type: array
        allowedHosts:
          items:
            $ref: "#/components/schemas/AllowedHostCreateDto"
          nullable: true
          type: array
      type: object
    CreateAiCredentialCommand:
      additionalProperties: false
      example:
        organizationId: 0
        apiKey: apiKey
        name: name
      properties:
        name:
          nullable: true
          type: string
        apiKey:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
      type: object
    CreateAlertDto:
      additionalProperties: false
      example:
        alerts:
        - fingerprint: fingerprint
          annotations:
            description: description
            title: title
          startsAt: 2000-01-23T04:56:07.000+00:00
          endsAt: 2000-01-23T04:56:07.000+00:00
          status: status
          labels: ""
        - fingerprint: fingerprint
          annotations:
            description: description
            title: title
          startsAt: 2000-01-23T04:56:07.000+00:00
          endsAt: 2000-01-23T04:56:07.000+00:00
          status: status
          labels: ""
        status: status
      properties:
        alerts:
          items:
            $ref: "#/components/schemas/KubernetesAlertCreateDto"
          nullable: true
          type: array
        status:
          nullable: true
          type: string
      type: object
    CreateAlertingIntegrationCommand:
      additionalProperties: false
      example:
        alertingProfileId: 0
        url: url
        token: token
        alertingIntegrationType: Opsgenie
      properties:
        url:
          nullable: true
          type: string
        token:
          nullable: true
          type: string
        alertingIntegrationType:
          $ref: "#/components/schemas/AlertingIntegrationType"
        alertingProfileId:
          format: int32
          type: integer
      type: object
    CreateAlertingProfileCommand:
      additionalProperties: false
      example:
        organizationId: 6
        emails:
        - email: email
        - email: email
        slackConfigurationId: 0
        reminder: HalfHour
        webhooks:
        - headers:
          - id: 6
            value: value
            key: key
          - id: 6
            value: value
            key: key
          id: 0
          url: url
        - headers:
          - id: 6
            value: value
            key: key
          - id: 6
            value: value
            key: key
          id: 0
          url: url
        name: name
        alertingIntegrations:
        - url: url
          token: token
          alertingIntegrationType: Opsgenie
        - url: url
          token: token
          alertingIntegrationType: Opsgenie
      properties:
        name:
          nullable: true
          type: string
        slackConfigurationId:
          format: int32
          nullable: true
          type: integer
        organizationId:
          format: int32
          nullable: true
          type: integer
        emails:
          items:
            $ref: "#/components/schemas/AlertingEmailDto"
          nullable: true
          type: array
        webhooks:
          items:
            $ref: "#/components/schemas/AlertingWebhookDto"
          nullable: true
          type: array
        alertingIntegrations:
          items:
            $ref: "#/components/schemas/AlertingIntegrationDto"
          nullable: true
          type: array
        reminder:
          $ref: "#/components/schemas/AlertingReminder"
      type: object
    CreateAllowedHostCommand:
      additionalProperties: false
      example:
        ipAddress: ipAddress
        accessProfileId: 0
        description: description
        maskBits: 6
      properties:
        accessProfileId:
          format: int32
          type: integer
        description:
          nullable: true
          type: string
        ipAddress:
          nullable: true
          type: string
        maskBits:
          format: int32
          type: integer
      type: object
    CreateAwsCloudCommand:
      additionalProperties: false
      example:
        organizationId: 6
        awsRegion: awsRegion
        awsAccessKeyId: awsAccessKeyId
        azCount: 0
        name: name
        awsSecretAccessKey: awsSecretAccessKey
      properties:
        name:
          nullable: true
          type: string
        awsSecretAccessKey:
          nullable: true
          type: string
        awsAccessKeyId:
          nullable: true
          type: string
        azCount:
          format: int32
          type: integer
        awsRegion:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
      type: object
    CreateAzureCloudCommand:
      additionalProperties: false
      example:
        organizationId: 6
        azureClientSecret: azureClientSecret
        azureClientId: azureClientId
        azureLocation: azureLocation
        azCount: 0
        name: name
        azureTenantId: azureTenantId
        azureSubscriptionId: azureSubscriptionId
      properties:
        name:
          nullable: true
          type: string
        azureSubscriptionId:
          nullable: true
          type: string
        azureClientId:
          nullable: true
          type: string
        azureClientSecret:
          nullable: true
          type: string
        azureTenantId:
          nullable: true
          type: string
        azureLocation:
          nullable: true
          type: string
        azCount:
          format: int32
          type: integer
        organizationId:
          format: int32
          nullable: true
          type: integer
      type: object
    CreateBackupPolicyCommand:
      additionalProperties: false
      example:
        cronPeriod: cronPeriod
        name: name
        projectId: 0
        includeNamespaces:
        - includeNamespaces
        - includeNamespaces
        retentionPeriod: retentionPeriod
      properties:
        name:
          nullable: true
          type: string
        includeNamespaces:
          items:
            type: string
          nullable: true
          type: array
        cronPeriod:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
        retentionPeriod:
          nullable: true
          type: string
      type: object
    CreateBillingSummaryCommand:
      additionalProperties: false
      example:
        beginApply: 2000-01-23T04:56:07.000+00:00
        icu: 0
        projectId: 6
      properties:
        icu:
          format: int32
          type: integer
        beginApply:
          format: date-time
          type: string
        projectId:
          format: int32
          type: integer
      type: object
    CreateCatalogAppCommand:
      additionalProperties: false
      example:
        catalogId: 0
        repoName: repoName
        packageName: packageName
        version: version
        parameters:
        - isEditableWhenInstalling: true
          value: value
          key: key
          isMandatory: true
          isEditableAfterInstallation: true
        - isEditableWhenInstalling: true
          value: value
          key: key
          isMandatory: true
          isEditableAfterInstallation: true
      properties:
        repoName:
          nullable: true
          type: string
        packageName:
          nullable: true
          type: string
        catalogId:
          format: int32
          type: integer
        version:
          nullable: true
          type: string
        parameters:
          items:
            $ref: "#/components/schemas/CatalogAppParamsDto"
          nullable: true
          type: array
      type: object
    CreateCatalogCommand:
      additionalProperties: false
      example:
        organizationId: 0
        name: name
        description: description
      properties:
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
      type: object
    CreateDnsServerCommand:
      additionalProperties: false
      example:
        address: address
        accessProfileId: 0
      properties:
        address:
          nullable: true
          type: string
        accessProfileId:
          format: int32
          type: integer
      type: object
    CreateExecutorCommand:
      additionalProperties: false
      example:
        continent: continent
        name: name
        kubeConfig: kubeConfig
        localCluster: true
        enabled: true
      properties:
        name:
          nullable: true
          type: string
        enabled:
          type: boolean
        localCluster:
          type: boolean
        continent:
          nullable: true
          type: string
        kubeConfig:
          nullable: true
          type: string
      type: object
    CreateGenericTaikunLbDto:
      additionalProperties: false
      example:
        svcNamespace: svcNamespace
        svcName: svcName
      properties:
        svcName:
          nullable: true
          type: string
        svcNamespace:
          nullable: true
          type: string
      type: object
    CreateGoogleCredentialCommand:
      additionalProperties: false
      properties:
        config:
          format: binary
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        importProject:
          type: boolean
        folderId:
          nullable: true
          type: string
        billingAccountId:
          nullable: true
          type: string
        azCount:
          format: int32
          type: integer
        region:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
      type: object
    CreateInfraProductCommand:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          nullable: true
          type: string
      type: object
    CreateInvoiceCommand:
      additionalProperties: false
      example:
        isPaid: true
        endDate: 2000-01-23T04:56:07.000+00:00
        price: 6.027456183070403
        dueDate: 2000-01-23T04:56:07.000+00:00
        name: name
        organizationSubscriptionId: 0
        requiredPaymentAction: true
        stripeInvoiceId: stripeInvoiceId
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          nullable: true
          type: string
        organizationSubscriptionId:
          format: int32
          type: integer
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        dueDate:
          format: date-time
          type: string
        isPaid:
          type: boolean
        requiredPaymentAction:
          type: boolean
        stripeInvoiceId:
          nullable: true
          type: string
        price:
          format: double
          type: number
      type: object
    CreateKeyPoolCommand:
      additionalProperties: false
      type: object
    CreateKubeConfigCommand:
      additionalProperties: false
      example:
        isAccessibleForManager: true
        name: name
        namespace: namespace
        isAccessibleForAll: true
        kubeConfigRoleId: 6
        projectId: 0
        userId: userId
        ttl: 1
      properties:
        name:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
        isAccessibleForAll:
          type: boolean
        isAccessibleForManager:
          type: boolean
        kubeConfigRoleId:
          format: int32
          type: integer
        userId:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        ttl:
          format: int32
          nullable: true
          type: integer
      type: object
    CreateKubernetesProfileCommand:
      additionalProperties: false
      example:
        organizationId: 0
        proxmoxStorage: NFS
        wasmEnabled: true
        octaviaEnabled: true
        name: name
        exposeNodePortOnBastion: true
        allowSchedulingOnMaster: true
        nvidiaGpuOperatorEnabled: true
        uniqueClusterName: true
        taikunLBEnabled: true
      properties:
        name:
          nullable: true
          type: string
        octaviaEnabled:
          type: boolean
        exposeNodePortOnBastion:
          type: boolean
        organizationId:
          format: int32
          nullable: true
          type: integer
        taikunLBEnabled:
          type: boolean
        allowSchedulingOnMaster:
          type: boolean
        uniqueClusterName:
          type: boolean
        proxmoxStorage:
          $ref: "#/components/schemas/ProxmoxStorage"
        nvidiaGpuOperatorEnabled:
          type: boolean
        wasmEnabled:
          type: boolean
      type: object
    CreateKubernetesResourceCommand:
      additionalProperties: false
      example:
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          format: int32
          type: integer
        yaml:
          nullable: true
          type: string
      required:
      - projectId
      - yaml
      type: object
    CreateNtpServerCommand:
      additionalProperties: false
      example:
        address: address
        accessProfileId: 0
      properties:
        address:
          nullable: true
          type: string
        accessProfileId:
          format: int32
          type: integer
      type: object
    CreateOpaProfileCommand:
      additionalProperties: false
      example:
        isMasterTaintEnforced: true
        isNodeNameForbiddenInVC: true
        forbidSpecificTags:
        - forbidSpecificTags
        - forbidSpecificTags
        whitelistMasterTaintNamespaces:
        - whitelistMasterTaintNamespaces
        - whitelistMasterTaintNamespaces
        forbidNodePort: true
        ingressWhitelist:
        - ingressWhitelist
        - ingressWhitelist
        forcePodResource: true
        organizationId: 0
        forbidHttpIngress: true
        allowedRepo:
        - allowedRepo
        - allowedRepo
        requireProbe: true
        name: name
        uniqueServiceSelector: true
        uniqueIngresses: true
      properties:
        name:
          nullable: true
          type: string
        forbidNodePort:
          type: boolean
        forbidHttpIngress:
          type: boolean
        requireProbe:
          type: boolean
        uniqueIngresses:
          type: boolean
        uniqueServiceSelector:
          type: boolean
        forcePodResource:
          type: boolean
        isNodeNameForbiddenInVC:
          type: boolean
        isMasterTaintEnforced:
          type: boolean
        allowedRepo:
          items:
            type: string
          nullable: true
          type: array
        forbidSpecificTags:
          items:
            type: string
          nullable: true
          type: array
        ingressWhitelist:
          items:
            type: string
          nullable: true
          type: array
        whitelistMasterTaintNamespaces:
          items:
            type: string
          nullable: true
          type: array
        organizationId:
          format: int32
          nullable: true
          type: integer
      type: object
    CreateOpenstackCloudCommand:
      additionalProperties: false
      example:
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackUser: openStackUser
        isAdmin: true
        openStackVolumeType: openStackVolumeType
        openStackProject: openStackProject
        organizationId: 0
        openStackContinent: openStackContinent
        openStackDomain: openStackDomain
        openStackInternalSubnetId: openStackInternalSubnetId
        name: name
        skipTlsFlag: true
        openStackAvailabilityZone: openStackAvailabilityZone
        openStackRegion: openStackRegion
        openStackImportNetwork: true
        openStackPublicNetwork: openStackPublicNetwork
      properties:
        name:
          nullable: true
          type: string
        openStackUser:
          nullable: true
          type: string
        openStackPassword:
          nullable: true
          type: string
        openStackUrl:
          nullable: true
          type: string
        openStackProject:
          nullable: true
          type: string
        openStackPublicNetwork:
          nullable: true
          type: string
        openStackAvailabilityZone:
          nullable: true
          type: string
        openStackDomain:
          nullable: true
          type: string
        openStackRegion:
          nullable: true
          type: string
        openStackContinent:
          nullable: true
          type: string
        openStackVolumeType:
          nullable: true
          type: string
        openStackImportNetwork:
          type: boolean
        openStackInternalSubnetId:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        applicationCredEnabled:
          type: boolean
        isAdmin:
          type: boolean
        skipTlsFlag:
          type: boolean
      type: object
    CreatePartnerCommand:
      additionalProperties: false
      properties:
        logo:
          format: binary
          nullable: true
          type: string
        backgroundImage:
          format: binary
          nullable: true
          type: string
        allowRegistration:
          nullable: true
          type: boolean
        requiredUserApproval:
          nullable: true
          type: boolean
        paymentEnabled:
          nullable: true
          type: boolean
        name:
          nullable: true
          type: string
        domain:
          nullable: true
          type: string
        link:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        vatNumber:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
        bg:
          nullable: true
          type: string
        bgCollapsedSubItem:
          nullable: true
          type: string
        itemText:
          nullable: true
          type: string
        itemBg:
          nullable: true
          type: string
        itemBgHover:
          nullable: true
          type: string
        itemTextActive:
          nullable: true
          type: string
        itemBgActive:
          nullable: true
          type: string
        itemBgActiveHover:
          nullable: true
          type: string
        expanded:
          format: binary
          nullable: true
          type: string
        collapsed:
          format: binary
          nullable: true
          type: string
      type: object
    CreateProjectAppCommand:
      additionalProperties: false
      example:
        extraValues: extraValues
        taikunLinkEnabled: true
        name: name
        namespace: namespace
        autoSync: true
        projectId: 0
        catalogAppId: 6
        parameters:
        - value: value
          key: key
        - value: value
          key: key
        timeout: 1
      properties:
        name:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
        catalogAppId:
          format: int32
          type: integer
        extraValues:
          nullable: true
          type: string
        autoSync:
          type: boolean
        taikunLinkEnabled:
          type: boolean
        timeout:
          format: int32
          nullable: true
          type: integer
        parameters:
          items:
            $ref: "#/components/schemas/ProjectAppParamsDto"
          nullable: true
          type: array
      type: object
    CreateProjectCommand:
      additionalProperties: false
      example:
        flavors:
        - flavors
        - flavors
        taikunLBFlavor: taikunLBFlavor
        routerIdStartRange: 9
        accessProfileId: 1
        opaProfileId: 5
        maxSize: 7
        autoscalingEnabled: true
        expiredAt: 2000-01-23T04:56:07.000+00:00
        diskSize: 1.2315135367772556
        kubernetesProfileId: 5
        minSize: 4
        cidr: cidr
        autoscalingSpotEnabled: true
        kubernetesVersion: kubernetesVersion
        s3CredentialId: 6
        isAutoUpgrade: true
        isKubernetes: true
        routerIdEndRange: 3
        allowSpotVMs: true
        aiCredentialId: 2
        netMask: 1
        aiEnabled: true
        isMonitoringEnabled: true
        allowSpotWorkers: true
        maxSpotPrice: 2.027123023002322
        users:
        - users
        - users
        autoscalingFlavor: autoscalingFlavor
        alertingProfileId: 7
        deleteOnExpiration: true
        saveAsTemplate: true
        templateName: templateName
        name: name
        cloudCredentialId: 0
        isBackupEnabled: true
        allowFullSpotKubernetes: true
        serverTemplates:
        - flavor: flavor
          diskSize: 1.4894159098541704
          role: Bastion
          count: 6
        - flavor: flavor
          diskSize: 1.4894159098541704
          role: Bastion
          count: 6
      properties:
        name:
          nullable: true
          type: string
        kubernetesVersion:
          nullable: true
          type: string
        cloudCredentialId:
          format: int32
          type: integer
        s3CredentialId:
          format: int32
          nullable: true
          type: integer
        accessProfileId:
          format: int32
          nullable: true
          type: integer
        opaProfileId:
          format: int32
          nullable: true
          type: integer
        kubernetesProfileId:
          format: int32
          nullable: true
          type: integer
        isKubernetes:
          type: boolean
        isAutoUpgrade:
          type: boolean
        isBackupEnabled:
          type: boolean
        isMonitoringEnabled:
          type: boolean
        aiEnabled:
          type: boolean
        aiCredentialId:
          format: int32
          nullable: true
          type: integer
        flavors:
          items:
            type: string
          nullable: true
          type: array
        users:
          items:
            type: string
          nullable: true
          type: array
        alertingProfileId:
          format: int32
          nullable: true
          type: integer
        taikunLBFlavor:
          nullable: true
          type: string
        routerIdStartRange:
          format: int32
          nullable: true
          type: integer
        routerIdEndRange:
          format: int32
          nullable: true
          type: integer
        expiredAt:
          format: date-time
          nullable: true
          type: string
        deleteOnExpiration:
          type: boolean
        allowFullSpotKubernetes:
          type: boolean
        allowSpotWorkers:
          type: boolean
        allowSpotVMs:
          type: boolean
        maxSpotPrice:
          format: double
          nullable: true
          type: number
        autoscalingEnabled:
          type: boolean
        minSize:
          format: int32
          type: integer
        maxSize:
          format: int32
          type: integer
        diskSize:
          format: double
          type: number
        autoscalingFlavor:
          nullable: true
          type: string
        autoscalingSpotEnabled:
          type: boolean
        cidr:
          nullable: true
          type: string
        netMask:
          format: int32
          nullable: true
          type: integer
        saveAsTemplate:
          type: boolean
        templateName:
          nullable: true
          type: string
        serverTemplates:
          items:
            $ref: "#/components/schemas/ServerTemplateDto"
          nullable: true
          type: array
      type: object
    CreateProjectFromTemplateCommand:
      additionalProperties: false
      example:
        id: 0
        projectName: projectName
        canCommit: true
      properties:
        id:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
        canCommit:
          type: boolean
      type: object
    CreateProjectGroupCommand:
      additionalProperties: false
      example:
        organizationId: 0
        name: name
        projectIds:
        - 6
        - 6
      properties:
        name:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        projectIds:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
      type: object
    CreateProxmoxCommand:
      additionalProperties: false
      example:
        continent: continent
        organizationId: 0
        tokenId: tokenId
        privateNetwork:
          endAllocationRange: endAllocationRange
          netMask: 6
          ipAddress: ipAddress
          bridge: bridge
          beginAllocationRange: beginAllocationRange
          gateway: gateway
        name: name
        skipTlsFlag: true
        hypervisors:
        - hypervisors
        - hypervisors
        storage: storage
        vmTemplateName: vmTemplateName
        url: url
        tokenSecret: tokenSecret
        publicNetwork:
          endAllocationRange: endAllocationRange
          netMask: 6
          ipAddress: ipAddress
          bridge: bridge
          beginAllocationRange: beginAllocationRange
          gateway: gateway
      properties:
        name:
          nullable: true
          type: string
        tokenId:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        tokenSecret:
          nullable: true
          type: string
        storage:
          nullable: true
          type: string
        vmTemplateName:
          nullable: true
          type: string
        continent:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        hypervisors:
          items:
            type: string
          nullable: true
          type: array
        publicNetwork:
          $ref: "#/components/schemas/CreateProxmoxNetworkDto"
        privateNetwork:
          $ref: "#/components/schemas/CreateProxmoxNetworkDto"
        skipTlsFlag:
          type: boolean
      type: object
    CreateProxmoxNetworkDto:
      additionalProperties: false
      example:
        endAllocationRange: endAllocationRange
        netMask: 6
        ipAddress: ipAddress
        bridge: bridge
        beginAllocationRange: beginAllocationRange
        gateway: gateway
      properties:
        bridge:
          nullable: true
          type: string
        gateway:
          nullable: true
          type: string
        ipAddress:
          nullable: true
          type: string
        netMask:
          format: int32
          type: integer
        beginAllocationRange:
          nullable: true
          type: string
        endAllocationRange:
          nullable: true
          type: string
      type: object
    CreateSecurityGroupCommand:
      additionalProperties: false
      example:
        protocol: ICMP
        name: name
        standAloneProfileId: 1
        portMinRange: 0
        portMaxRange: 6
        remoteIpPrefix: remoteIpPrefix
      properties:
        name:
          nullable: true
          type: string
        protocol:
          $ref: "#/components/schemas/SecurityGroupProtocol"
        portMinRange:
          format: int32
          type: integer
        portMaxRange:
          format: int32
          type: integer
        remoteIpPrefix:
          nullable: true
          type: string
        standAloneProfileId:
          format: int32
          type: integer
      type: object
    CreateSlackConfigurationCommand:
      additionalProperties: false
      example:
        organizationId: 0
        name: name
        channel: channel
        url: url
        slackType: Alert
      properties:
        organizationId:
          format: int32
          nullable: true
          type: integer
        name:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        channel:
          nullable: true
          type: string
        slackType:
          $ref: "#/components/schemas/SlackType"
      type: object
    CreateSshUserCommand:
      additionalProperties: false
      example:
        sshPublicKey: sshPublicKey
        name: name
        accessProfileId: 0
      properties:
        name:
          nullable: true
          type: string
        sshPublicKey:
          nullable: true
          type: string
        accessProfileId:
          format: int32
          type: integer
      type: object
    CreateStandAloneDiskCommand:
      additionalProperties: false
      example:
        volumeType: volumeType
        size: 6
        standaloneVmId: 0
        name: name
      properties:
        standaloneVmId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        size:
          format: int64
          type: integer
        volumeType:
          nullable: true
          type: string
      type: object
    CreateStandAloneVmCommand:
      additionalProperties: false
      example:
        standAloneVmDisks:
        - volumeType: volumeType
          size: 2
          name: name
          lunId: 7
          deviceName: deviceName
        - volumeType: volumeType
          size: 2
          name: name
          lunId: 7
          deviceName: deviceName
        flavorName: flavorName
        volumeType: volumeType
        image: image
        spotPrice: 5.637376656633329
        publicIpEnabled: true
        count: 5
        availabilityZone: availabilityZone
        volumeSize: 0
        standAloneMetaDatas:
        - value: value
          key: key
        - value: value
          key: key
        cloudInit: cloudInit
        spotInstance: true
        password: password
        hypervisor: hypervisor
        name: name
        standAloneProfileId: 6
        useLocalDisk: true
        projectId: 1
        username: username
      properties:
        name:
          nullable: true
          type: string
        flavorName:
          nullable: true
          type: string
        volumeSize:
          format: int64
          type: integer
        volumeType:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        publicIpEnabled:
          type: boolean
        image:
          nullable: true
          type: string
        cloudInit:
          nullable: true
          type: string
        standAloneProfileId:
          format: int32
          type: integer
        projectId:
          format: int32
          type: integer
        count:
          format: int32
          type: integer
        spotPrice:
          format: double
          nullable: true
          type: number
        spotInstance:
          type: boolean
        availabilityZone:
          nullable: true
          type: string
        hypervisor:
          nullable: true
          type: string
        useLocalDisk:
          type: boolean
        standAloneVmDisks:
          items:
            $ref: "#/components/schemas/StandAloneVmDiskDto"
          nullable: true
          type: array
        standAloneMetaDatas:
          items:
            $ref: "#/components/schemas/StandAloneMetaDataDto"
          nullable: true
          type: array
      type: object
    CreateStripeCustomerCommand:
      additionalProperties: false
      example:
        legalName: legalName
        country: country
        address: address
        billingEmail: billingEmail
        city: city
        vatNumber: vatNumber
      properties:
        legalName:
          nullable: true
          type: string
        billingEmail:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        vatNumber:
          nullable: true
          type: string
      type: object
    CreateSubscriptionCommand:
      additionalProperties: false
      example:
        serverLimit: 6
        yearlyPrice: 9.301444243932576
        projectLimit: 0
        trialDays: 5
        cloudCredentialLimit: 5
        tcuPrice: 7.061401241503109
        name: name
        userLimit: 1
        monthlyPrice: 2.3021358869347655
      properties:
        name:
          nullable: true
          type: string
        projectLimit:
          format: int32
          type: integer
        serverLimit:
          format: int32
          type: integer
        userLimit:
          format: int32
          type: integer
        cloudCredentialLimit:
          format: int32
          type: integer
        trialDays:
          format: int32
          type: integer
        monthlyPrice:
          format: double
          nullable: true
          type: number
        tcuPrice:
          format: double
          nullable: true
          type: number
        yearlyPrice:
          format: double
          nullable: true
          type: number
      type: object
    CreateTanzuCommand:
      additionalProperties: false
      example:
        organizationId: 0
        volumeType: volumeType
        password: password
        port: 6
        tanzuContinent: tanzuContinent
        name: name
        namespace: namespace
        url: url
        username: username
      properties:
        organizationId:
          format: int32
          nullable: true
          type: integer
        name:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        volumeType:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        tanzuContinent:
          nullable: true
          type: string
        port:
          format: int32
          nullable: true
          type: integer
      type: object
    CreateTicketCommand:
      additionalProperties: false
      example:
        organizationId: 0
        name: name
        description: description
        priority: Low
      properties:
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        priority:
          $ref: "#/components/schemas/TicketPriority"
      type: object
    CreateUserCommand:
      additionalProperties: false
      example:
        organizationId: 0
        role: Admin
        displayName: displayName
        email: email
        username: username
      properties:
        username:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        role:
          $ref: "#/components/schemas/UserRole"
      type: object
    CreateUserGroupCommand:
      additionalProperties: false
      example:
        organizationId: 0
        userIds:
        - userIds
        - userIds
        name: name
      properties:
        name:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        userIds:
          items:
            type: string
          nullable: true
          type: array
      type: object
    CreateVirtualClusterCommand:
      additionalProperties: false
      example:
        expiredAt: 2000-01-23T04:56:07.000+00:00
        exposeHostname: exposeHostname
        deleteOnExpiration: true
        alertingProfileId: 1
        ephemeralStorageLimits:
          maxClusterLimits: 2.027123023002322
          defaultContainerRequest: 7.386281948385884
          resourceUnit: Cores
          defaultContainerLimit: 4.145608029883936
          maxClusterRequests: 3.616076749251911
        cloudId: 0
        name: name
        ramLimits:
          maxClusterLimits: 2.027123023002322
          defaultContainerRequest: 7.386281948385884
          resourceUnit: Cores
          defaultContainerLimit: 4.145608029883936
          maxClusterRequests: 3.616076749251911
        workloadResources:
          maxIngresses: 7
          maxPvcs: 5
          maxLoadBalancers: 9
          maxPods: 5
          maxTotalPvcSize: 2
        projectId: 6
        cpuLimits:
          maxClusterLimits: 2.027123023002322
          defaultContainerRequest: 7.386281948385884
          resourceUnit: Cores
          defaultContainerLimit: 4.145608029883936
          maxClusterRequests: 3.616076749251911
      properties:
        cloudId:
          format: int32
          nullable: true
          type: integer
        projectId:
          format: int32
          type: integer
        name:
          type: string
        expiredAt:
          format: date-time
          nullable: true
          type: string
        deleteOnExpiration:
          type: boolean
        alertingProfileId:
          format: int32
          nullable: true
          type: integer
        exposeHostname:
          type: string
        workloadResources:
          $ref: "#/components/schemas/CreateVirtualClusterWorkloadResources"
        cpuLimits:
          $ref: "#/components/schemas/CreateVirtualClusterResourceLimits"
        ramLimits:
          $ref: "#/components/schemas/CreateVirtualClusterResourceLimits"
        ephemeralStorageLimits:
          $ref: "#/components/schemas/CreateVirtualClusterResourceLimits"
      type: object
    CreateVirtualClusterResourceLimits:
      additionalProperties: false
      example:
        maxClusterLimits: 2.027123023002322
        defaultContainerRequest: 7.386281948385884
        resourceUnit: Cores
        defaultContainerLimit: 4.145608029883936
        maxClusterRequests: 3.616076749251911
      properties:
        resourceUnit:
          $ref: "#/components/schemas/EProjectResourceUnit"
        maxClusterRequests:
          format: double
          type: number
        maxClusterLimits:
          format: double
          type: number
        defaultContainerLimit:
          format: double
          type: number
        defaultContainerRequest:
          format: double
          type: number
      required:
      - defaultContainerLimit
      - defaultContainerRequest
      - maxClusterLimits
      - maxClusterRequests
      - resourceUnit
      type: object
    CreateVirtualClusterWorkloadResources:
      additionalProperties: false
      example:
        maxIngresses: 7
        maxPvcs: 5
        maxLoadBalancers: 9
        maxPods: 5
        maxTotalPvcSize: 2
      properties:
        maxPods:
          format: int32
          type: integer
        maxPvcs:
          format: int32
          type: integer
        maxTotalPvcSize:
          format: int64
          type: integer
        maxIngresses:
          format: int32
          type: integer
        maxLoadBalancers:
          format: int32
          type: integer
      required:
      - maxIngresses
      - maxLoadBalancers
      - maxPods
      - maxPvcs
      - maxTotalPvcSize
      type: object
    CreateVsphereCommand:
      additionalProperties: false
      example:
        continent: continent
        datacenterName: datacenterName
        drsEnabled: true
        privateNetwork:
          endAllocationRange: endAllocationRange
          netMask: 6
          name: name
          ipAddress: ipAddress
          beginAllocationRange: beginAllocationRange
          gateway: gateway
        datacenterId: datacenterId
        datastoreName: datastoreName
        resourcePoolName: resourcePoolName
        url: url
        publicNetwork:
          endAllocationRange: endAllocationRange
          netMask: 6
          name: name
          ipAddress: ipAddress
          beginAllocationRange: beginAllocationRange
          gateway: gateway
        organizationId: 0
        password: password
        name: name
        skipTlsFlag: true
        hypervisors:
        - hypervisors
        - hypervisors
        vmTemplateName: vmTemplateName
        username: username
      properties:
        name:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        datacenterId:
          nullable: true
          type: string
        datacenterName:
          nullable: true
          type: string
        datastoreName:
          nullable: true
          type: string
        resourcePoolName:
          nullable: true
          type: string
        drsEnabled:
          type: boolean
        vmTemplateName:
          nullable: true
          type: string
        continent:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        hypervisors:
          items:
            type: string
          nullable: true
          type: array
        publicNetwork:
          $ref: "#/components/schemas/CreateVsphereNetworkDto"
        privateNetwork:
          $ref: "#/components/schemas/CreateVsphereNetworkDto"
        skipTlsFlag:
          type: boolean
      type: object
    CreateVsphereNetworkDto:
      additionalProperties: false
      example:
        endAllocationRange: endAllocationRange
        netMask: 6
        name: name
        ipAddress: ipAddress
        beginAllocationRange: beginAllocationRange
        gateway: gateway
      properties:
        name:
          nullable: true
          type: string
        gateway:
          nullable: true
          type: string
        ipAddress:
          nullable: true
          type: string
        netMask:
          format: int32
          type: integer
        beginAllocationRange:
          nullable: true
          type: string
        endAllocationRange:
          nullable: true
          type: string
      type: object
    CreateZadaraCloudCommand:
      additionalProperties: false
      example:
        organizationId: 0
        zadaraAccessKeyId: zadaraAccessKeyId
        azCount: 6
        name: name
        zadaraContinent: zadaraContinent
        zadaraRegion: zadaraRegion
        zadaraUrl: zadaraUrl
        zadaraSecretAccessKey: zadaraSecretAccessKey
        zadaraVolumeType: zadaraVolumeType
      properties:
        name:
          nullable: true
          type: string
        zadaraUrl:
          nullable: true
          type: string
        zadaraSecretAccessKey:
          nullable: true
          type: string
        zadaraAccessKeyId:
          nullable: true
          type: string
        zadaraRegion:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        azCount:
          format: int32
          type: integer
        zadaraContinent:
          nullable: true
          type: string
        zadaraVolumeType:
          nullable: true
          type: string
      type: object
    CreateZededaCommand:
      additionalProperties: false
      example:
        continent: continent
        organizationId: 0
        apiToken: apiToken
        apiUrl: apiUrl
        privateNetwork:
          vlanId: 1
          endAllocationRange: endAllocationRange
          netMask: 6
          ipAddress: ipAddress
          interface: interface
          beginAllocationRange: beginAllocationRange
          gateway: gateway
        name: name
        project: project
        edgeNodes:
        - edgeNodes
        - edgeNodes
        publicNetwork:
          vlanId: 1
          endAllocationRange: endAllocationRange
          netMask: 6
          ipAddress: ipAddress
          interface: interface
          beginAllocationRange: beginAllocationRange
          gateway: gateway
      properties:
        name:
          nullable: true
          type: string
        apiToken:
          nullable: true
          type: string
        apiUrl:
          nullable: true
          type: string
        project:
          nullable: true
          type: string
        continent:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        edgeNodes:
          items:
            type: string
          nullable: true
          type: array
        publicNetwork:
          $ref: "#/components/schemas/CreateZededaNetworkDto"
        privateNetwork:
          $ref: "#/components/schemas/CreateZededaNetworkDto"
      type: object
    CreateZededaNetworkDto:
      additionalProperties: false
      example:
        vlanId: 1
        endAllocationRange: endAllocationRange
        netMask: 6
        ipAddress: ipAddress
        interface: interface
        beginAllocationRange: beginAllocationRange
        gateway: gateway
      properties:
        interface:
          nullable: true
          type: string
        gateway:
          nullable: true
          type: string
        ipAddress:
          nullable: true
          type: string
        netMask:
          format: int32
          type: integer
        vlanId:
          format: int32
          nullable: true
          type: integer
        beginAllocationRange:
          nullable: true
          type: string
        endAllocationRange:
          nullable: true
          type: string
      type: object
    CredentialChartDto:
      additionalProperties: false
      example:
        vsphere: 7
        zededa: 1
        zadara: 1
        openshift: 4
        openstack: 7
        google: 9
        aws: 5
        tanzu: 3
        totalCount: 6
        proxmox: 2
        genericK8S: 1
        azure: 2
      properties:
        aws:
          format: int32
          type: integer
        azure:
          format: int32
          type: integer
        openstack:
          format: int32
          type: integer
        google:
          format: int32
          type: integer
        tanzu:
          format: int32
          type: integer
        proxmox:
          format: int32
          type: integer
        openshift:
          format: int32
          type: integer
        vsphere:
          format: int32
          type: integer
        zadara:
          format: int32
          type: integer
        zededa:
          format: int32
          type: integer
        genericK8S:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
      type: object
    CredentialMakeDefaultCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    CronJobCommand:
      additionalProperties: false
      example:
        cronPeriod: cronPeriod
      properties:
        cronPeriod:
          nullable: true
          type: string
      type: object
    CronjobActionCommand:
      additionalProperties: false
      example:
        data:
        - name: name
          namespace: namespace
        - name: name
          namespace: namespace
        action: Suspend
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        data:
          items:
            $ref: "#/components/schemas/KubernetesCronjobActionRequest"
          nullable: true
          type: array
        action:
          $ref: "#/components/schemas/ECronJobAction"
      required:
      - action
      - data
      - projectId
      type: object
    CronjobsSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        includePublicImportedClusters: true
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
        includePublicImportedClusters:
          nullable: true
          type: boolean
      type: object
    CronjobsSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchKubernetesResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    CsvExporter:
      additionalProperties: false
      example:
        fileName: fileName
        contentType: contentType
        content: content
      properties:
        fileName:
          type: string
        contentType:
          type: string
        content:
          format: byte
          type: string
      required:
      - content
      - contentType
      - fileName
      type: object
    DaemonSetSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        includePublicImportedClusters: true
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
        includePublicImportedClusters:
          nullable: true
          type: boolean
      type: object
    DaemonSetSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchKubernetesResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    DaemonsetActionCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        action: Restart
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        action:
          $ref: "#/components/schemas/EDaemonSetAction"
      required:
      - action
      - name
      - namespace
      - projectId
      type: object
    DashboardChart:
      additionalProperties: false
      example:
        projects:
          failedToImport:
          - expiredAt: expiredAt
            name: name
            id: 1
          - expiredAt: expiredAt
            name: name
            id: 1
          updating:
          - expiredAt: expiredAt
            name: name
            id: 1
          - expiredAt: expiredAt
            name: name
            id: 1
          deleting:
          - expiredAt: expiredAt
            name: name
            id: 1
          - expiredAt: expiredAt
            name: name
            id: 1
          failed:
          - expiredAt: expiredAt
            name: name
            id: 1
          - expiredAt: expiredAt
            name: name
            id: 1
          totalCount: 5
          succeeded:
          - expiredAt: expiredAt
            name: name
            id: 1
          - expiredAt: expiredAt
            name: name
            id: 1
          purging:
          - expiredAt: expiredAt
            name: name
            id: 1
          - expiredAt: expiredAt
            name: name
            id: 1
          importing:
          - expiredAt: expiredAt
            name: name
            id: 1
          - expiredAt: expiredAt
            name: name
            id: 1
        servers:
          totalOpenshiftCount: 6
          totalGenericK8SCount: 3
          zededa:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          waiting:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          openshift:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          totalGoogleCount: 1
          tanzu:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          totalCount: 1
          genericK8S:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          updating:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          totalCpu: 4
          totalZadaraCount: 6
          totalAzureCount: 3
          totalVsphereCount: 5
          totalZededaCount: 3
          proxmox:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          azure:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          totalUpdatingCount: 8
          totalDiskSize: 9
          zadara:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          google:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          failed:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          totalRam: 5
          totalSucceededCount: 6
          totalOpenstackCount: 6
          totalPendingCount: 9
          usedResources:
          - diskSize: 0
            maxRam: 0
            cpu: 6
            maxCpu: 4
            projectName: projectName
            maxDiskSize: 8
            projectId: 7
            ram: 7
          - diskSize: 0
            maxRam: 0
            cpu: 6
            maxCpu: 4
            projectName: projectName
            maxDiskSize: 8
            projectId: 7
            ram: 7
          totalProxmoxCount: 6
          deleting:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          totalFailedCount: 9
          vsphere:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          openstack:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          totalAwsCount: 6
          totalTanzuCount: 2
          aws:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          succeeded:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          purging:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
        standAloneVms:
          totalOpenshiftCount: 6
          totalGenericK8SCount: 3
          zededa:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          waiting:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          openshift:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          totalGoogleCount: 1
          tanzu:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          totalCount: 1
          genericK8S:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          updating:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          totalCpu: 4
          totalZadaraCount: 6
          totalAzureCount: 3
          totalVsphereCount: 5
          totalZededaCount: 3
          proxmox:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          azure:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          totalUpdatingCount: 8
          totalDiskSize: 9
          zadara:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          google:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          failed:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          totalRam: 5
          totalSucceededCount: 6
          totalOpenstackCount: 6
          totalPendingCount: 9
          usedResources:
          - diskSize: 0
            maxRam: 0
            cpu: 6
            maxCpu: 4
            projectName: projectName
            maxDiskSize: 8
            projectId: 7
            ram: 7
          - diskSize: 0
            maxRam: 0
            cpu: 6
            maxCpu: 4
            projectName: projectName
            maxDiskSize: 8
            projectId: 7
            ram: 7
          totalProxmoxCount: 6
          deleting:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          totalFailedCount: 9
          vsphere:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          openstack:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          totalAwsCount: 6
          totalTanzuCount: 2
          aws:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          succeeded:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          purging:
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
          - names:
            - names
            - names
            projectName: projectName
            projectId: 7
        organization:
          name: name
          id: 0
          users: 6
        cloudCredentials:
          vsphere: 7
          zededa: 1
          zadara: 1
          openshift: 4
          openstack: 7
          google: 9
          aws: 5
          tanzu: 3
          totalCount: 6
          proxmox: 2
          genericK8S: 1
          azure: 2
      properties:
        organization:
          $ref: "#/components/schemas/OrganizationEntityForDashboard"
        projects:
          $ref: "#/components/schemas/ProjectChartDto"
        cloudCredentials:
          $ref: "#/components/schemas/CredentialChartDto"
        servers:
          $ref: "#/components/schemas/ServerChartDto"
        standAloneVms:
          $ref: "#/components/schemas/ServerChartDto"
      type: object
    DatacenterListCommand:
      additionalProperties: false
      example:
        password: password
        datacenterName: datacenterName
        url: url
        username: username
      properties:
        url:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        datacenterName:
          nullable: true
          type: string
      type: object
    DatacenterSummary:
      additionalProperties: false
      example:
        name: name
        datacenter: datacenter
      properties:
        datacenter:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    DatastoreListCommand:
      additionalProperties: false
      example:
        password: password
        datacenterId: datacenterId
        url: url
        username: username
      properties:
        url:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        datacenterId:
          nullable: true
          type: string
      type: object
    DatastoreSummary:
      additionalProperties: false
      example:
        freeSpace: 6
        datastore: datastore
        name: name
        type: type
        capacity: 0
      properties:
        capacity:
          format: int64
          type: integer
        datastore:
          nullable: true
          type: string
        freeSpace:
          format: int64
          type: integer
        name:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
      type: object
    DateFilter:
      enum:
      - Monthly
      - ThreeMonthly
      - SixMonthly
      - Yearly
      type: string
    DateInterval:
      additionalProperties: false
      example:
        price: 6.027456183070403
        start: 2000-01-23T04:56:07.000+00:00
        end: 2000-01-23T04:56:07.000+00:00
      properties:
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
        price:
          format: double
          type: number
      type: object
    DeleteAlertCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DeleteBackupCommand:
      additionalProperties: false
      example:
        name: name
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    DeleteBackupStorageLocationCommand:
      additionalProperties: false
      example:
        storageLocation: storageLocation
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        storageLocation:
          nullable: true
          type: string
      type: object
    DeleteExecutorCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    DeleteExpiredAlertsCommand:
      additionalProperties: false
      type: object
    DeleteExpiredHistoryLogsCommand:
      additionalProperties: false
      type: object
    DeleteExpiredRefreshTokensCommand:
      additionalProperties: false
      type: object
    DeleteExpiredServersCommand:
      additionalProperties: false
      type: object
    DeleteImageFromProjectCommand:
      additionalProperties: false
      example:
        ids:
        - 0
        - 0
      properties:
        ids:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
      type: object
    DeleteImportedBackupLocationsCommand:
      additionalProperties: false
      type: object
    DeleteImportedProjectCommand:
      additionalProperties: false
      example:
        isForceDelete: true
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        isForceDelete:
          type: boolean
      type: object
    DeleteKubeConfigByProjectIdCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DeleteKubeConfigCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    DeleteKubernetesResourceCommand:
      additionalProperties: false
      example:
        data:
        - name: name
          namespace: namespace
        - name: name
          namespace: namespace
        kind: None
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        kind:
          $ref: "#/components/schemas/EKubernetesResource"
        data:
          items:
            $ref: "#/components/schemas/KubernetesActionRequest"
          type: array
      required:
      - data
      - kind
      - projectId
      type: object
    DeleteMyAccountCommand:
      additionalProperties: false
      type: object
    DeletePartnerCommand:
      additionalProperties: false
      example:
        partnerId: 0
      properties:
        partnerId:
          format: int32
          type: integer
      type: object
    DeleteProjectCommand:
      additionalProperties: false
      example:
        isForceDelete: true
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        isForceDelete:
          type: boolean
      type: object
    DeleteRedundantProjectActionsCommand:
      additionalProperties: false
      type: object
    DeleteRegisterExpiredOrganizationCommand:
      additionalProperties: false
      type: object
    DeleteRemovedSpotInstancesCommand:
      additionalProperties: false
      type: object
    DeleteRemovedUsersKubeConfigCommand:
      additionalProperties: false
      type: object
    DeleteRepositoryCommand:
      additionalProperties: false
      example:
        appRepoId: 0
      properties:
        appRepoId:
          format: int32
          type: integer
      type: object
    DeleteRestoreCommand:
      additionalProperties: false
      example:
        name: name
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    DeleteScheduleCommand:
      additionalProperties: false
      example:
        name: name
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    DeleteSlackConfigCommand:
      additionalProperties: false
      example:
        ids:
        - 0
        - 0
      properties:
        ids:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
      type: object
    DeleteSshUserCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    DeleteStandAloneProfileCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    DeleteSubscriptionCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    DeleteUserGroupCommand:
      additionalProperties: false
      example:
        userGroupIds:
        - 0
        - 0
      properties:
        userGroupIds:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
      type: object
    DeleteVirtualClusterCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DeleteVmDiskCommand:
      additionalProperties: false
      example:
        vmDiskIds:
        - 6
        - 6
        standaloneVmId: 0
      properties:
        standaloneVmId:
          format: int32
          type: integer
        vmDiskIds:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
      type: object
    DeploymentActionCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        action: Pause
        projectId: 0
        scaleReplicaCount: 6
      properties:
        projectId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        scaleReplicaCount:
          format: int32
          nullable: true
          type: integer
        action:
          $ref: "#/components/schemas/EDeploymentAction"
      required:
      - action
      - name
      - namespace
      - projectId
      type: object
    DeploymentCommitVmCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DeploymentCompletedCommand:
      additionalProperties: false
      example:
        result: result
        fromCronJob: true
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        result:
          nullable: true
          type: string
        fromCronJob:
          type: boolean
      type: object
    DeploymentDisableAiCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DeploymentDisableBackupCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DeploymentDisableMonitoringCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DeploymentDisableOpaCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DeploymentEnableAiCommand:
      additionalProperties: false
      example:
        aiCredentialId: 6
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        aiCredentialId:
          format: int32
          type: integer
      type: object
    DeploymentEnableBackupCommand:
      additionalProperties: false
      example:
        s3CredentialId: 6
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        s3CredentialId:
          format: int32
          type: integer
      type: object
    DeploymentEnableMonitoringCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DeploymentOpaEnableCommand:
      additionalProperties: false
      example:
        opaCredentialId: 6
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        opaCredentialId:
          format: int32
          type: integer
      type: object
    DeploymentSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        includePublicImportedClusters: true
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
        includePublicImportedClusters:
          nullable: true
          type: boolean
      type: object
    DeploymentSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchKubernetesResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    DescribeKubernetesResourceCommand:
      additionalProperties: false
      example:
        kind: None
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        name:
          type: string
        namespace:
          nullable: true
          type: string
        kind:
          $ref: "#/components/schemas/EKubernetesResource"
      required:
      - kind
      - name
      - projectId
      type: object
    Diff:
      additionalProperties: false
      example:
        totalMonthlyCost: totalMonthlyCost
        resources:
        - metadata:
            key: ""
          monthlyUsageCost: monthlyUsageCost
          name: name
          hourlyCost: hourlyCost
          subresources:
          - metadata:
              key: ""
            name: name
            hourlyCost: hourlyCost
            costComponents:
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            monthlyCost: monthlyCost
          - metadata:
              key: ""
            name: name
            hourlyCost: hourlyCost
            costComponents:
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            monthlyCost: monthlyCost
          costComponents:
          - unit: unit
            hourlyQuantity: hourlyQuantity
            price: price
            name: name
            hourlyCost: hourlyCost
            monthlyQuantity: monthlyQuantity
            usageBased: true
            priceNotFound: true
            monthlyCost: monthlyCost
          - unit: unit
            hourlyQuantity: hourlyQuantity
            price: price
            name: name
            hourlyCost: hourlyCost
            monthlyQuantity: monthlyQuantity
            usageBased: true
            priceNotFound: true
            monthlyCost: monthlyCost
          monthlyCost: monthlyCost
          resourceType: resourceType
          tags:
            key: tags
        - metadata:
            key: ""
          monthlyUsageCost: monthlyUsageCost
          name: name
          hourlyCost: hourlyCost
          subresources:
          - metadata:
              key: ""
            name: name
            hourlyCost: hourlyCost
            costComponents:
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            monthlyCost: monthlyCost
          - metadata:
              key: ""
            name: name
            hourlyCost: hourlyCost
            costComponents:
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            monthlyCost: monthlyCost
          costComponents:
          - unit: unit
            hourlyQuantity: hourlyQuantity
            price: price
            name: name
            hourlyCost: hourlyCost
            monthlyQuantity: monthlyQuantity
            usageBased: true
            priceNotFound: true
            monthlyCost: monthlyCost
          - unit: unit
            hourlyQuantity: hourlyQuantity
            price: price
            name: name
            hourlyCost: hourlyCost
            monthlyQuantity: monthlyQuantity
            usageBased: true
            priceNotFound: true
            monthlyCost: monthlyCost
          monthlyCost: monthlyCost
          resourceType: resourceType
          tags:
            key: tags
        totalHourlyCost: totalHourlyCost
        totalMonthlyUsageCost: totalMonthlyUsageCost
      properties:
        resources:
          items:
            $ref: "#/components/schemas/Resource"
          nullable: true
          type: array
        totalHourlyCost:
          nullable: true
          type: string
        totalMonthlyCost:
          nullable: true
          type: string
        totalMonthlyUsageCost:
          nullable: true
          type: string
      type: object
    DisableAutoscalingCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    DisableTwoFaManagementCommand:
      additionalProperties: false
      example:
        verificationCode: verificationCode
      properties:
        verificationCode:
          nullable: true
          type: string
      type: object
    DisableTwoFactorAuthCommand:
      additionalProperties: false
      example:
        code: code
        isRecoveryCode: true
      properties:
        code:
          nullable: true
          type: string
        isRecoveryCode:
          type: boolean
      type: object
    DisableUserCommand:
      additionalProperties: false
      example:
        disable: true
        id: id
      properties:
        id:
          nullable: true
          type: string
        disable:
          type: boolean
      type: object
    DnsCommand:
      additionalProperties: false
      example:
        address: address
      properties:
        address:
          nullable: true
          type: string
      type: object
    DnsNtpAddressEditDto:
      additionalProperties: false
      example:
        address: address
      properties:
        address:
          nullable: true
          type: string
      type: object
    DnsServerCreateDto:
      additionalProperties: false
      example:
        address: address
      properties:
        address:
          nullable: true
          type: string
      type: object
    DnsServerListDto:
      additionalProperties: false
      example:
        address: address
        id: 1
      properties:
        id:
          format: int32
          type: integer
        address:
          nullable: true
          type: string
      required:
      - address
      - id
      type: object
    DnsServersListDto:
      additionalProperties: false
      example:
        address: address
        accessProfileName: accessProfileName
        id: 0
      properties:
        id:
          format: int32
          type: integer
        address:
          nullable: true
          type: string
        accessProfileName:
          nullable: true
          type: string
      required:
      - accessProfileName
      - address
      - id
      type: object
    DocumentationData:
      additionalProperties: false
      example:
        role: role
        link: link
        id: 0
        key: key
      properties:
        id:
          format: int32
          type: integer
        key:
          nullable: true
          type: string
        link:
          nullable: true
          type: string
        role:
          nullable: true
          type: string
      type: object
    DocumentationsList:
      additionalProperties: false
      example:
        data:
        - role: role
          link: link
          id: 0
          key: key
        - role: role
          link: link
          id: 0
          key: key
        totalCount: 6
      properties:
        data:
          items:
            $ref: "#/components/schemas/DocumentationData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    DownloadInvoiceCommand:
      additionalProperties: false
      example:
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    DownloadKubeConfigCommand:
      additionalProperties: false
      example:
        id: 0
        projectId: 6
      properties:
        id:
          format: int32
          type: integer
        projectId:
          format: int32
          type: integer
      type: object
    DownloadKubernetesResourceCommand:
      additionalProperties: false
      example:
        kind: None
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        name:
          type: string
        namespace:
          nullable: true
          type: string
        kind:
          $ref: "#/components/schemas/EKubernetesResource"
      required:
      - kind
      - name
      - projectId
      type: object
    DuplicateNameCheckerCommand:
      additionalProperties: false
      example:
        organizationId: 0
        name: name
        type: type
      properties:
        organizationId:
          format: int32
          nullable: true
          type: integer
        type:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    DuplicateProjectAppCheckerCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
      type: object
    ECloudCredentialType:
      enum:
      - AWS
      - AZURE
      - GOOGLE
      - OPENSTACK
      - PROXMOX
      - TANZU
      - OPENSHIFT
      - VSPHERE
      - ZADARA
      - ZEDEDA
      - EKS
      - AKS
      - GKE
      - GENERICKUBERNETES
      type: string
    ECronJobAction:
      enum:
      - Suspend
      - Resume
      - Trigger
      type: string
    EDaemonSetAction:
      enum:
      - Restart
      - Rollback
      type: string
    EDeploymentAction:
      enum:
      - Pause
      - Resume
      - Restart
      - Scale
      - Rollback
      type: string
    EImportClusterType:
      enum:
      - CloudCredential
      - ReadOnly
      - FullyManaged
      type: string
    EInstanceStatus:
      enum:
      - None
      - Installing
      - Uninstalling
      - Ready
      - NotReady
      - Failure
      - Cancelled
      type: string
    EKubernetesResource:
      enum:
      - None
      - DaemonSet
      - Pvc
      - Deployment
      - ConfigMap
      - Secret
      - Sts
      - Service
      - Node
      - Crd
      - StorageClass
      - Pod
      - Ingress
      - Pdb
      - CronJob
      - Job
      - NetworkPolicy
      - Namespace
      - PersistentVolume
      - LimitRange
      - ResourceQuota
      type: string
    ENodeAction:
      enum:
      - Cordon
      - Uncordon
      - Drain
      type: string
    EProjectResourceUnit:
      enum:
      - Cores
      - Bytes
      type: string
    EStsAction:
      enum:
      - Restart
      - Scale
      - Rollback
      type: string
    EditAlertingIntegrationCommand:
      additionalProperties: false
      example:
        alertingProfileId: 6
        id: 0
        url: url
        token: token
        alertingIntegrationType: Opsgenie
      properties:
        id:
          format: int32
          type: integer
        url:
          nullable: true
          type: string
        token:
          nullable: true
          type: string
        alertingIntegrationType:
          $ref: "#/components/schemas/AlertingIntegrationType"
        alertingProfileId:
          format: int32
          type: integer
      type: object
    EditAllowedHostDto:
      additionalProperties: false
      example:
        ipAddress: ipAddress
        description: description
        maskBits: 0
      properties:
        description:
          nullable: true
          type: string
        ipAddress:
          nullable: true
          type: string
        maskBits:
          format: int32
          type: integer
      type: object
    EditArticleCommand:
      additionalProperties: false
      example:
        messageId: messageId
        body: body
      properties:
        messageId:
          nullable: true
          type: string
        body:
          nullable: true
          type: string
      type: object
    EditAutoscalingCommand:
      additionalProperties: false
      example:
        minSize: 6
        maxSize: 1
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        minSize:
          format: int32
          type: integer
        maxSize:
          format: int32
          type: integer
      type: object
    EditCatalogAppParamCommand:
      additionalProperties: false
      example:
        catalogAppId: 0
        parameters:
        - isEditableWhenInstalling: true
          value: value
          key: key
          isMandatory: true
          isEditableAfterInstallation: true
        - isEditableWhenInstalling: true
          value: value
          key: key
          isMandatory: true
          isEditableAfterInstallation: true
      properties:
        catalogAppId:
          format: int32
          type: integer
        parameters:
          items:
            $ref: "#/components/schemas/CatalogAppParamsDto"
          nullable: true
          type: array
      type: object
    EditCatalogAppVersionCommand:
      additionalProperties: false
      example:
        catalogAppId: 0
        version: version
      properties:
        catalogAppId:
          format: int32
          type: integer
        version:
          nullable: true
          type: string
      type: object
    EditCatalogCommand:
      additionalProperties: false
      example:
        name: name
        description: description
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
      type: object
    EditProjectAppExtraValuesCommand:
      additionalProperties: false
      example:
        extraValues: extraValues
        projectAppId: 0
        timeout: 6
      properties:
        projectAppId:
          format: int32
          type: integer
        extraValues:
          nullable: true
          type: string
        timeout:
          format: int32
          nullable: true
          type: integer
      type: object
    EditProjectAppParamsDto:
      additionalProperties: false
      example:
        value: value
        key: key
      properties:
        key:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    EditSecurityGroupCommand:
      additionalProperties: false
      example:
        protocol: protocol
        name: name
        id: 0
        portMinRange: 6
        portMaxRange: 1
        remoteIpPrefix: remoteIpPrefix
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        protocol:
          nullable: true
          type: string
        portMinRange:
          format: int32
          type: integer
        portMaxRange:
          format: int32
          type: integer
        remoteIpPrefix:
          nullable: true
          type: string
      type: object
    EditSshUserCommand:
      additionalProperties: false
      example:
        sshPublicKey: sshPublicKey
        name: name
        accessProfileId: 6
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        sshPublicKey:
          nullable: true
          type: string
        accessProfileId:
          format: int32
          type: integer
      type: object
    EditTicketCommand:
      additionalProperties: false
      example:
        name: name
        description: description
        ticketId: ticketId
      properties:
        ticketId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
      type: object
    EditVirtualClusterQuotasCommand:
      additionalProperties: false
      example:
        vClusterId: 0
        ephemeralStorageLimits:
          maxClusterLimits: 9.301444243932576
          defaultContainerRequest: 2.027123023002322
          resourceUnit: Cores
          defaultContainerLimit: 3.616076749251911
          maxClusterRequests: 7.061401241503109
        ramLimits:
          maxClusterLimits: 9.301444243932576
          defaultContainerRequest: 2.027123023002322
          resourceUnit: Cores
          defaultContainerLimit: 3.616076749251911
          maxClusterRequests: 7.061401241503109
        workloadResources:
          maxIngresses: 5
          maxPvcs: 1
          maxLoadBalancers: 2
          maxPods: 6
          maxTotalPvcSize: 5
        cpuLimits:
          maxClusterLimits: 9.301444243932576
          defaultContainerRequest: 2.027123023002322
          resourceUnit: Cores
          defaultContainerLimit: 3.616076749251911
          maxClusterRequests: 7.061401241503109
      properties:
        vClusterId:
          format: int32
          type: integer
        workloadResources:
          $ref: "#/components/schemas/EditVirtualClusterWorkloadResources"
        cpuLimits:
          $ref: "#/components/schemas/EditVirtualClusterResourceLimits"
        ramLimits:
          $ref: "#/components/schemas/EditVirtualClusterResourceLimits"
        ephemeralStorageLimits:
          $ref: "#/components/schemas/EditVirtualClusterResourceLimits"
      required:
      - cpuLimits
      - ephemeralStorageLimits
      - ramLimits
      - vClusterId
      - workloadResources
      type: object
    EditVirtualClusterResourceLimits:
      additionalProperties: false
      example:
        maxClusterLimits: 9.301444243932576
        defaultContainerRequest: 2.027123023002322
        resourceUnit: Cores
        defaultContainerLimit: 3.616076749251911
        maxClusterRequests: 7.061401241503109
      properties:
        resourceUnit:
          $ref: "#/components/schemas/EProjectResourceUnit"
        maxClusterRequests:
          format: double
          type: number
        maxClusterLimits:
          format: double
          type: number
        defaultContainerLimit:
          format: double
          type: number
        defaultContainerRequest:
          format: double
          type: number
      required:
      - defaultContainerLimit
      - defaultContainerRequest
      - maxClusterLimits
      - maxClusterRequests
      - resourceUnit
      type: object
    EditVirtualClusterWorkloadResources:
      additionalProperties: false
      example:
        maxIngresses: 5
        maxPvcs: 1
        maxLoadBalancers: 2
        maxPods: 6
        maxTotalPvcSize: 5
      properties:
        maxPods:
          format: int32
          type: integer
        maxPvcs:
          format: int32
          type: integer
        maxTotalPvcSize:
          format: int64
          type: integer
        maxIngresses:
          format: int32
          type: integer
        maxLoadBalancers:
          format: int32
          type: integer
      required:
      - maxIngresses
      - maxLoadBalancers
      - maxPods
      - maxPvcs
      - maxTotalPvcSize
      type: object
    EmailMode:
      enum:
      - Confirm
      - Change
      type: string
    EnableAutoscalingCommand:
      additionalProperties: false
      example:
        flavor: flavor
        diskSize: 5.962133916683182
        spotEnabled: true
        minSize: 6
        maxSize: 1
        id: 0
      properties:
        id:
          format: int32
          type: integer
        minSize:
          format: int32
          type: integer
        maxSize:
          format: int32
          type: integer
        diskSize:
          format: double
          type: number
        flavor:
          nullable: true
          type: string
        spotEnabled:
          type: boolean
      type: object
    EnableTwoFaManagementCommand:
      additionalProperties: false
      type: object
    EndpointElements:
      additionalProperties: false
      example:
        path: path
        controller: controller
        method: method
        description: description
        id: 0
      properties:
        id:
          format: int32
          type: integer
        controller:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        method:
          nullable: true
          type: string
        path:
          nullable: true
          type: string
      required:
      - controller
      - description
      - id
      - method
      - path
      type: object
    EnsureCodesDownloadedCommand:
      additionalProperties: false
      example:
        data:
          recoveryCodes:
          - recoveryCodes
          - recoveryCodes
      properties:
        data:
          $ref: "#/components/schemas/TwoFactorAuthVerifyResult"
      type: object
    EnumList:
      additionalProperties: false
      example:
        serverStatuses:
        - name: name
          id: 5
        - name: name
          id: 5
        prometheusTypes:
        - name: name
          id: 5
        - name: name
          id: 5
        availability:
        - name: name
          id: true
        - name: name
          id: true
        azureQuotas:
        - name: name
          id: 5
        - name: name
          id: 5
        auditLogs:
        - name: name
          id: 5
        - name: name
          id: 5
        showbackKinds:
        - name: name
          id: 5
        - name: name
          id: 5
        requestLogs:
        - name: name
          id: 5
        - name: name
          id: 5
        ticketPriorities:
        - name: name
          id: 5
        - name: name
          id: 5
        cloudTypes:
        - name: name
          id: 5
        - name: name
          id: 5
        openstackContinents:
        - name: name
          id: id
        - name: name
          id: id
        awsPlatforms:
        - name: name
          id: id
        - name: name
          id: id
        proxmoxRoles:
        - name: name
          id: 5
        - name: name
          id: 5
        projectStatuses:
        - name: name
          id: 5
        - name: name
          id: 5
        standaloneVmStatuses:
        - name: name
          id: 5
        - name: name
          id: 5
        reminderTypes:
        - name: name
          id: 5
        - name: name
          id: 5
        projectResourceTypes:
        - name: name
          id: 5
        - name: name
          id: 5
        alertTypes:
        - name: name
          id: 5
        - name: name
          id: 5
        retentionPeriods:
        - name: name
          id: id
        - name: name
          id: id
        googleImageTypes:
        - name: name
          id: 5
        - name: name
          id: 5
        slackTypes:
        - name: name
          id: 5
        - name: name
          id: 5
        userRoles:
        - name: name
          id: 5
        - name: name
          id: 5
        cronPeriods:
        - name: name
          id: id
        - name: name
          id: id
        serverRoles:
        - name: name
          id: 5
        - name: name
          id: 5
        projectResourceUnits:
        - name: name
          id: 5
        - name: name
          id: 5
        validityPeriods:
        - name: name
          id: 5
        - name: name
          id: 5
        securityGroupRules:
        - name: name
          id: 5
        - name: name
          id: 5
        alertingIntegrationTypes:
        - name: name
          id: 5
        - name: name
          id: 5
        rebootOptions:
        - name: name
          id: 5
        - name: name
          id: 5
      properties:
        cloudTypes:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        projectStatuses:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        serverRoles:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        serverStatuses:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        userRoles:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        securityGroupRules:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        prometheusTypes:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        auditLogs:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        rebootOptions:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        availability:
          items:
            $ref: "#/components/schemas/CommonAvailabilityDto"
          nullable: true
          type: array
        slackTypes:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        requestLogs:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        azureQuotas:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        showbackKinds:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        alertTypes:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        reminderTypes:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        awsPlatforms:
          items:
            $ref: "#/components/schemas/CommonStringBasedDropdownDto"
          nullable: true
          type: array
        cronPeriods:
          items:
            $ref: "#/components/schemas/CommonStringBasedDropdownDto"
          nullable: true
          type: array
        validityPeriods:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        alertingIntegrationTypes:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        googleImageTypes:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        standaloneVmStatuses:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        openstackContinents:
          items:
            $ref: "#/components/schemas/CommonStringBasedDropdownDto"
          nullable: true
          type: array
        retentionPeriods:
          items:
            $ref: "#/components/schemas/CommonStringBasedDropdownDto"
          nullable: true
          type: array
        ticketPriorities:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        proxmoxRoles:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        projectResourceTypes:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        projectResourceUnits:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
      required:
      - alertTypes
      - alertingIntegrationTypes
      - auditLogs
      - availability
      - awsPlatforms
      - azureQuotas
      - cloudTypes
      - cronPeriods
      - googleImageTypes
      - openstackContinents
      - projectResourceTypes
      - projectResourceUnits
      - projectStatuses
      - prometheusTypes
      - proxmoxRoles
      - rebootOptions
      - reminderTypes
      - requestLogs
      - retentionPeriods
      - securityGroupRules
      - serverRoles
      - serverStatuses
      - showbackKinds
      - slackTypes
      - standaloneVmStatuses
      - ticketPriorities
      - userRoles
      - validityPeriods
      type: object
    EphemeralStorageLimitsDto:
      additionalProperties: false
      example:
        maxClusterLimits: 2
        defaultContainerRequest: 4
        defaultContainerLimit: 7
        maxClusterRequests: 3
      properties:
        maxClusterRequests:
          format: int64
          type: integer
        maxClusterLimits:
          format: int64
          type: integer
        defaultContainerRequest:
          format: int64
          type: integer
        defaultContainerLimit:
          format: int64
          type: integer
      required:
      - defaultContainerLimit
      - defaultContainerRequest
      - maxClusterLimits
      - maxClusterRequests
      type: object
    EstimatedInfracost:
      additionalProperties: false
      example:
        timeGenerated: timeGenerated
        summary:
          totalUnsupportedResources: 1
          totalUsageBasedResources: 5
          totalNoPriceResources: 5
          noPriceResourceCounts:
            key: 7
          totalDetectedResources: 0
          totalSupportedResources: 6
          unsupportedResourceCounts:
            key: 2
        diffTotalHourlyCost: diffTotalHourlyCost
        metadata:
          vcsCommitTimestamp: vcsCommitTimestamp
          usageApiEnabled: true
          vcsCommitMessage: vcsCommitMessage
          vcsBranch: vcsBranch
          vcsCommitAuthorName: vcsCommitAuthorName
          infracostCommand: infracostCommand
          vcsCommitSha: vcsCommitSha
          vcsRepositoryUrl: vcsRepositoryUrl
          vcsCommitAuthorEmail: vcsCommitAuthorEmail
        projects:
        - pastBreakdown:
            totalMonthlyCost: totalMonthlyCost
            resources:
            - metadata:
                key: ""
              monthlyUsageCost: monthlyUsageCost
              name: name
              hourlyCost: hourlyCost
              subresources:
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
              resourceType: resourceType
              tags:
                key: tags
            - metadata:
                key: ""
              monthlyUsageCost: monthlyUsageCost
              name: name
              hourlyCost: hourlyCost
              subresources:
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
              resourceType: resourceType
              tags:
                key: tags
            totalHourlyCost: totalHourlyCost
            totalMonthlyUsageCost: totalMonthlyUsageCost
          summary:
            totalUnsupportedResources: 1
            totalUsageBasedResources: 5
            totalNoPriceResources: 5
            noPriceResourceCounts:
              key: 7
            totalDetectedResources: 0
            totalSupportedResources: 6
            unsupportedResourceCounts:
              key: 2
          metadata:
            vcsSubPath: vcsSubPath
            path: path
            type: type
            providers:
            - name: name
            - name: name
          displayName: displayName
          breakdown:
            totalMonthlyCost: totalMonthlyCost
            resources:
            - metadata:
                key: ""
              monthlyUsageCost: monthlyUsageCost
              name: name
              hourlyCost: hourlyCost
              subresources:
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
              resourceType: resourceType
              tags:
                key: tags
            - metadata:
                key: ""
              monthlyUsageCost: monthlyUsageCost
              name: name
              hourlyCost: hourlyCost
              subresources:
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
              resourceType: resourceType
              tags:
                key: tags
            totalHourlyCost: totalHourlyCost
            totalMonthlyUsageCost: totalMonthlyUsageCost
          name: name
          diff:
            totalMonthlyCost: totalMonthlyCost
            resources:
            - metadata:
                key: ""
              monthlyUsageCost: monthlyUsageCost
              name: name
              hourlyCost: hourlyCost
              subresources:
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
              resourceType: resourceType
              tags:
                key: tags
            - metadata:
                key: ""
              monthlyUsageCost: monthlyUsageCost
              name: name
              hourlyCost: hourlyCost
              subresources:
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
              resourceType: resourceType
              tags:
                key: tags
            totalHourlyCost: totalHourlyCost
            totalMonthlyUsageCost: totalMonthlyUsageCost
        - pastBreakdown:
            totalMonthlyCost: totalMonthlyCost
            resources:
            - metadata:
                key: ""
              monthlyUsageCost: monthlyUsageCost
              name: name
              hourlyCost: hourlyCost
              subresources:
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
              resourceType: resourceType
              tags:
                key: tags
            - metadata:
                key: ""
              monthlyUsageCost: monthlyUsageCost
              name: name
              hourlyCost: hourlyCost
              subresources:
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
              resourceType: resourceType
              tags:
                key: tags
            totalHourlyCost: totalHourlyCost
            totalMonthlyUsageCost: totalMonthlyUsageCost
          summary:
            totalUnsupportedResources: 1
            totalUsageBasedResources: 5
            totalNoPriceResources: 5
            noPriceResourceCounts:
              key: 7
            totalDetectedResources: 0
            totalSupportedResources: 6
            unsupportedResourceCounts:
              key: 2
          metadata:
            vcsSubPath: vcsSubPath
            path: path
            type: type
            providers:
            - name: name
            - name: name
          displayName: displayName
          breakdown:
            totalMonthlyCost: totalMonthlyCost
            resources:
            - metadata:
                key: ""
              monthlyUsageCost: monthlyUsageCost
              name: name
              hourlyCost: hourlyCost
              subresources:
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
              resourceType: resourceType
              tags:
                key: tags
            - metadata:
                key: ""
              monthlyUsageCost: monthlyUsageCost
              name: name
              hourlyCost: hourlyCost
              subresources:
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
              resourceType: resourceType
              tags:
                key: tags
            totalHourlyCost: totalHourlyCost
            totalMonthlyUsageCost: totalMonthlyUsageCost
          name: name
          diff:
            totalMonthlyCost: totalMonthlyCost
            resources:
            - metadata:
                key: ""
              monthlyUsageCost: monthlyUsageCost
              name: name
              hourlyCost: hourlyCost
              subresources:
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
              resourceType: resourceType
              tags:
                key: tags
            - metadata:
                key: ""
              monthlyUsageCost: monthlyUsageCost
              name: name
              hourlyCost: hourlyCost
              subresources:
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              - metadata:
                  key: ""
                name: name
                hourlyCost: hourlyCost
                costComponents:
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                - unit: unit
                  hourlyQuantity: hourlyQuantity
                  price: price
                  name: name
                  hourlyCost: hourlyCost
                  monthlyQuantity: monthlyQuantity
                  usageBased: true
                  priceNotFound: true
                  monthlyCost: monthlyCost
                monthlyCost: monthlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
              resourceType: resourceType
              tags:
                key: tags
            totalHourlyCost: totalHourlyCost
            totalMonthlyUsageCost: totalMonthlyUsageCost
        pastTotalMonthlyUsageCost: pastTotalMonthlyUsageCost
        diffTotalMonthlyUsageCost: diffTotalMonthlyUsageCost
        pastTotalMonthlyCost: pastTotalMonthlyCost
        version: version
        pastTotalHourlyCost: pastTotalHourlyCost
        totalMonthlyCost: totalMonthlyCost
        diffTotalMonthlyCost: diffTotalMonthlyCost
        currency: currency
        totalHourlyCost: totalHourlyCost
        totalMonthlyUsageCost: totalMonthlyUsageCost
      properties:
        version:
          nullable: true
          type: string
        metadata:
          $ref: "#/components/schemas/Metadata"
        currency:
          nullable: true
          type: string
        projects:
          items:
            $ref: "#/components/schemas/ProjectInfracost"
          nullable: true
          type: array
        totalHourlyCost:
          nullable: true
          type: string
        totalMonthlyCost:
          nullable: true
          type: string
        totalMonthlyUsageCost:
          nullable: true
          type: string
        pastTotalHourlyCost:
          nullable: true
          type: string
        pastTotalMonthlyCost:
          nullable: true
          type: string
        pastTotalMonthlyUsageCost:
          nullable: true
          type: string
        diffTotalHourlyCost:
          nullable: true
          type: string
        diffTotalMonthlyCost:
          nullable: true
          type: string
        diffTotalMonthlyUsageCost:
          nullable: true
          type: string
        timeGenerated:
          nullable: true
          type: string
        summary:
          $ref: "#/components/schemas/Summary"
      type: object
    ExceededQuotaDto:
      additionalProperties: false
      example:
        cloudId: 0
        name: name
      properties:
        cloudId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      required:
      - cloudId
      - name
      type: object
    ExceededQuotaList:
      additionalProperties: false
      example:
        data:
        - cloudId: 0
          name: name
        - cloudId: 0
          name: name
        totalCount: 6
      properties:
        data:
          items:
            $ref: "#/components/schemas/ExceededQuotaDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    ExecutorEntityDto:
      additionalProperties: false
      example:
        name: name
        health: None
        kubeConfig: kubeConfig
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        health:
          $ref: "#/components/schemas/ExecutorHealth"
        kubeConfig:
          nullable: true
          type: string
      type: object
    ExecutorHealth:
      enum:
      - None
      - Unknown
      - Healthy
      - Unhealthy
      - Warning
      type: string
    ExecutorListResponse:
      additionalProperties: false
      example:
        data:
        - name: name
          health: None
          kubeConfig: kubeConfig
          id: 0
        - name: name
          health: None
          kubeConfig: kubeConfig
          id: 0
        totalCount: 6
      properties:
        data:
          items:
            $ref: "#/components/schemas/ExecutorEntityDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    ExportKubeConfigCommand:
      additionalProperties: false
      example:
        id: 0
        projectId: 6
      properties:
        id:
          format: int32
          type: integer
        projectId:
          format: int32
          type: integer
      type: object
    ExportLokiLogsCommand:
      additionalProperties: false
      example:
        query:
          endDate: 2000-01-23T04:56:07.000+00:00
          limit: 6
          filters:
          - value: value
            operator: operator
          - value: value
            operator: operator
          projectId: 0
          parameters: parameters
          startDate: 2000-01-23T04:56:07.000+00:00
          direction: direction
      properties:
        query:
          $ref: "#/components/schemas/LokiLogsQuery"
      type: object
    ExtendTrialPeriodCommand:
      additionalProperties: false
      example:
        organizationId: 0
        dateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        organizationId:
          format: int32
          type: integer
        dateTime:
          format: date-time
          type: string
      type: object
    FetchAzureFlavorPricesCommand:
      additionalProperties: false
      type: object
    FetchKubernetesAlertDataCommand:
      additionalProperties: false
      type: object
    FetchKubernetesOverviewDataCommand:
      additionalProperties: false
      type: object
    FillArtifacthubOrganizationCommand:
      additionalProperties: false
      type: object
    Filter:
      additionalProperties: false
      example:
        value: value
        operator: operator
      properties:
        operator:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    FilteringElementDto:
      additionalProperties: false
      example:
        organizationName: organizationName
        name: name
      properties:
        organizationName:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    FinalPriceCommand:
      additionalProperties: false
      example:
        subscriptionId: 0
      properties:
        subscriptionId:
          format: int32
          type: integer
      type: object
    FinalPriceDto:
      additionalProperties: false
      example:
        yearlyFinalPrice: 0.8008281904610115
        monthlyFinalPrice: 6.027456183070403
      properties:
        yearlyFinalPrice:
          format: double
          type: number
        monthlyFinalPrice:
          format: double
          type: number
      type: object
    FlavorsListDto:
      additionalProperties: false
      example:
        maxDataDiskCount: 1.4658129805029452
        name: name
        cpu: 6
        description: ""
        ram: 0.8008281904610115
      properties:
        ram:
          format: double
          type: number
        cpu:
          format: int32
          type: integer
        name:
          type: string
        description:
          nullable: true
        maxDataDiskCount:
          format: double
          nullable: true
          type: number
      required:
      - cpu
      - description
      - maxDataDiskCount
      - name
      - ram
      type: object
    ForceToResetPasswordCommand:
      additionalProperties: false
      example:
        id: id
      properties:
        id:
          nullable: true
          type: string
      type: object
    ForgotPasswordCommand:
      additionalProperties: false
      example:
        email: email
      properties:
        email:
          nullable: true
          type: string
      type: object
    FullSpotOperationCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    GenericKubernetesList:
      additionalProperties: false
      example:
        data:
        - projectCount: 6
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          associatedVClusters:
          - name: name
            id: 5
          - name: name
            id: 5
          mainProject:
            name: name
            id: 1
            status: "Null"
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
          continentName: continentName
        - projectCount: 6
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          associatedVClusters:
          - name: name
            id: 5
          - name: name
            id: 5
          mainProject:
            name: name
            id: 1
            status: "Null"
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
          continentName: continentName
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/GenericKubernetesListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    GenericKubernetesListDto:
      additionalProperties: false
      example:
        projectCount: 6
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        associatedVClusters:
        - name: name
          id: 5
        - name: name
          id: 5
        mainProject:
          name: name
          id: 1
          status: "Null"
        organizationId: 5
        createdAt: createdAt
        isDefault: true
        createdBy: createdBy
        isLocked: true
        name: name
        id: 0
        lastModified: lastModified
        continentName: continentName
      properties:
        id:
          format: int32
          type: integer
        projectCount:
          format: int32
          type: integer
        isLocked:
          type: boolean
        name:
          nullable: true
          type: string
        mainProject:
          $ref: "#/components/schemas/MainProjectDto"
        associatedVClusters:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        createdBy:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        isDefault:
          type: boolean
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
        continentName:
          nullable: true
          type: string
      required:
      - associatedVClusters
      - continentName
      - createdAt
      - createdBy
      - id
      - isDefault
      - isLocked
      - lastModified
      - lastModifiedBy
      - mainProject
      - name
      - organizationId
      - organizationName
      - projectCount
      type: object
    GetCatalogAppValueAutocompleteCommand:
      additionalProperties: false
      example:
        packageId: packageId
        isQuestion: true
        version: version
        catalogAppId: 0
      properties:
        packageId:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
        catalogAppId:
          format: int32
          nullable: true
          type: integer
        isQuestion:
          nullable: true
          type: boolean
      type: object
    GetCatalogAppValueCommand:
      additionalProperties: false
      example:
        packageId: packageId
        version: version
      properties:
        packageId:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
      type: object
    GetEksClusterAuthCommand:
      additionalProperties: false
      example:
        kubeConfigName: kubeConfigName
        configToken: configToken
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        kubeConfigName:
          nullable: true
          type: string
        configToken:
          nullable: true
          type: string
      type: object
    GetProjectOperationCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    GetToken:
      additionalProperties: false
      example:
        isForcedToEnabled2Fa: true
        refreshTokenExpireTime: 2000-01-23T04:56:07.000+00:00
        twoFaEnabled: true
        token: token
        refreshToken: refreshToken
      properties:
        token:
          type: string
        refreshToken:
          nullable: true
          type: string
        refreshTokenExpireTime:
          format: date-time
          type: string
        twoFaEnabled:
          nullable: true
          type: boolean
        isForcedToEnabled2Fa:
          nullable: true
          type: boolean
      required:
      - token
      type: object
    GkeClusterDto:
      additionalProperties: false
      example:
        name: name
        location: location
      properties:
        location:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    GkeClustersListCommand:
      additionalProperties: false
      example:
        cloudId: 0
      properties:
        cloudId:
          format: int32
          type: integer
      type: object
    GoogleBillingAccountListCommand:
      additionalProperties: false
      properties:
        config:
          format: binary
          nullable: true
          type: string
      type: object
    GoogleCredentialList:
      additionalProperties: false
      example:
        data:
        - projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          partnerName: partnerName
          partnerLogo: partnerLogo
          billingAccountId: billingAccountId
          zones:
          - zones
          - zones
          folderId: folderId
          organizationId: 6
          createdAt: createdAt
          isDefault: true
          isLocked: true
          name: name
          availabilityZonesCount: 1
          billingAccountName: billingAccountName
          id: 0
          region: region
          continentName: continentName
          projectId: projectId
        - projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          partnerName: partnerName
          partnerLogo: partnerLogo
          billingAccountId: billingAccountId
          zones:
          - zones
          - zones
          folderId: folderId
          organizationId: 6
          createdAt: createdAt
          isDefault: true
          isLocked: true
          name: name
          availabilityZonesCount: 1
          billingAccountName: billingAccountName
          id: 0
          region: region
          continentName: continentName
          projectId: projectId
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/GoogleCredentialsListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    GoogleCredentialsListDto:
      additionalProperties: false
      example:
        projects:
        - name: name
          id: 5
        - name: name
          id: 5
        organizationName: organizationName
        partnerName: partnerName
        partnerLogo: partnerLogo
        billingAccountId: billingAccountId
        zones:
        - zones
        - zones
        folderId: folderId
        organizationId: 6
        createdAt: createdAt
        isDefault: true
        isLocked: true
        name: name
        availabilityZonesCount: 1
        billingAccountName: billingAccountName
        id: 0
        region: region
        continentName: continentName
        projectId: projectId
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        projects:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          type: array
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        partnerLogo:
          nullable: true
          type: string
        partnerName:
          nullable: true
          type: string
        folderId:
          nullable: true
          type: string
        projectId:
          nullable: true
          type: string
        billingAccountId:
          nullable: true
          type: string
        zones:
          items:
            type: string
          type: array
        availabilityZonesCount:
          format: int32
          type: integer
        region:
          type: string
        isLocked:
          type: boolean
        isDefault:
          type: boolean
        billingAccountName:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        continentName:
          nullable: true
          type: string
      required:
      - availabilityZonesCount
      - billingAccountId
      - billingAccountName
      - continentName
      - createdAt
      - folderId
      - id
      - isDefault
      - isLocked
      - name
      - organizationId
      - organizationName
      - partnerLogo
      - partnerName
      - projectId
      - projects
      - region
      - zones
      type: object
    GoogleFlavorDto:
      additionalProperties: false
      example:
        windowsSpotPrice: 2.3021358869347655
        name: name
        cpu: 0
        description: ""
        windowsPrice: 5.962133916683182
        linuxPrice: 1.4658129805029452
        ram: 6.027456183070403
        linuxSpotPrice: 5.637376656633329
      properties:
        name:
          type: string
        cpu:
          format: int32
          nullable: true
          type: integer
        ram:
          format: double
          nullable: true
          type: number
        description:
          nullable: true
        linuxPrice:
          format: double
          nullable: true
          type: number
        windowsPrice:
          format: double
          nullable: true
          type: number
        linuxSpotPrice:
          format: double
          nullable: true
          type: number
        windowsSpotPrice:
          format: double
          nullable: true
          type: number
      required:
      - cpu
      - description
      - linuxPrice
      - linuxSpotPrice
      - name
      - ram
      - windowsPrice
      - windowsSpotPrice
      type: object
    GoogleFlavorList:
      additionalProperties: false
      example:
        data:
        - windowsSpotPrice: 2.3021358869347655
          name: name
          cpu: 0
          description: ""
          windowsPrice: 5.962133916683182
          linuxPrice: 1.4658129805029452
          ram: 6.027456183070403
          linuxSpotPrice: 5.637376656633329
        - windowsSpotPrice: 2.3021358869347655
          name: name
          cpu: 0
          description: ""
          windowsPrice: 5.962133916683182
          linuxPrice: 1.4658129805029452
          ram: 6.027456183070403
          linuxSpotPrice: 5.637376656633329
        totalCount: 7
      properties:
        data:
          items:
            $ref: "#/components/schemas/GoogleFlavorDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    GoogleRegionListCommand:
      additionalProperties: false
      properties:
        config:
          format: binary
          nullable: true
          type: string
      type: object
    GoogleZoneListCommand:
      additionalProperties: false
      properties:
        config:
          format: binary
          nullable: true
          type: string
        region:
          nullable: true
          type: string
        cloudId:
          format: int32
          nullable: true
          type: integer
      type: object
    Group:
      additionalProperties: false
      example:
        lastEvaluation: 2000-01-23T04:56:07.000+00:00
        file: file
        name: name
        rules:
        - duration: 0
          alerts:
          - activeAt: 2000-01-23T04:56:07.000+00:00
            annotations:
              description: description
              title: title
            state: state
            value: value
            labels:
              container: container
              severity: severity
              instance: instance
              pod: pod
              alertname: alertname
              daemonset: daemonset
              node: node
              condition: condition
              endpoint: endpoint
              service: service
              namespace: namespace
              job: job
              status: status
          - activeAt: 2000-01-23T04:56:07.000+00:00
            annotations:
              description: description
              title: title
            state: state
            value: value
            labels:
              container: container
              severity: severity
              instance: instance
              pod: pod
              alertname: alertname
              daemonset: daemonset
              node: node
              condition: condition
              endpoint: endpoint
              service: service
              namespace: namespace
              job: job
              status: status
          lastEvaluation: 2000-01-23T04:56:07.000+00:00
          query: query
          name: name
          annotations:
            description: description
            title: title
          health: health
          state: state
          evaluationTime: 6.027456183070403
          type: type
          labels:
            severity: severity
        - duration: 0
          alerts:
          - activeAt: 2000-01-23T04:56:07.000+00:00
            annotations:
              description: description
              title: title
            state: state
            value: value
            labels:
              container: container
              severity: severity
              instance: instance
              pod: pod
              alertname: alertname
              daemonset: daemonset
              node: node
              condition: condition
              endpoint: endpoint
              service: service
              namespace: namespace
              job: job
              status: status
          - activeAt: 2000-01-23T04:56:07.000+00:00
            annotations:
              description: description
              title: title
            state: state
            value: value
            labels:
              container: container
              severity: severity
              instance: instance
              pod: pod
              alertname: alertname
              daemonset: daemonset
              node: node
              condition: condition
              endpoint: endpoint
              service: service
              namespace: namespace
              job: job
              status: status
          lastEvaluation: 2000-01-23T04:56:07.000+00:00
          query: query
          name: name
          annotations:
            description: description
            title: title
          health: health
          state: state
          evaluationTime: 6.027456183070403
          type: type
          labels:
            severity: severity
        interval: 1
        evaluationTime: 5.962133916683182
      properties:
        name:
          nullable: true
          type: string
        file:
          nullable: true
          type: string
        rules:
          items:
            $ref: "#/components/schemas/Rule"
          nullable: true
          type: array
        interval:
          format: int64
          type: integer
        evaluationTime:
          format: double
          type: number
        lastEvaluation:
          format: date-time
          type: string
      type: object
    GroupedBillingInfo:
      additionalProperties: false
      example:
        data:
        - tcu: 0
          startDate: startDate
        - tcu: 0
          startDate: startDate
        projectName: projectName
        projectId: 6
      properties:
        data:
          items:
            $ref: "#/components/schemas/GroupedBillings"
          nullable: true
          type: array
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
      type: object
    GroupedBillingListQuery:
      additionalProperties: false
      example:
        organizationId: 0
        periodDuration: none
        isDeleted: true
      properties:
        organizationId:
          format: int32
          nullable: true
          type: integer
        periodDuration:
          $ref: "#/components/schemas/BillingPeriod"
        isDeleted:
          nullable: true
          type: boolean
      type: object
    GroupedBillings:
      additionalProperties: false
      example:
        tcu: 0
        startDate: startDate
      properties:
        startDate:
          nullable: true
          type: string
        tcu:
          format: int64
          type: integer
      type: object
    GroupedPrometheusBillingListQuery:
      additionalProperties: false
      example:
        organizationId: 0
        periodDuration: none
      properties:
        organizationId:
          format: int32
          nullable: true
          type: integer
        periodDuration:
          $ref: "#/components/schemas/BillingPeriod"
      type: object
    HelmCredentialCommand:
      additionalProperties: false
      example:
        password: password
        url: url
        username: username
      properties:
        url:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
      type: object
    HelmReleasesSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        includePublicImportedClusters: true
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
        includePublicImportedClusters:
          nullable: true
          type: boolean
      type: object
    HelmReleasesSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchKubernetesResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    HypervisorListCommand:
      additionalProperties: false
      example:
        tokenId: tokenId
        cloudId: 0
        url: url
        tokenSecret: tokenSecret
      properties:
        url:
          nullable: true
          type: string
        tokenId:
          nullable: true
          type: string
        tokenSecret:
          nullable: true
          type: string
        cloudId:
          format: int32
          nullable: true
          type: integer
      type: object
    ImageByIdCommand:
      additionalProperties: false
      example:
        imageId: imageId
        cloudId: 0
      properties:
        cloudId:
          format: int32
          type: integer
        imageId:
          nullable: true
          type: string
      type: object
    ImportBackupStorageLocationCommand:
      additionalProperties: false
      example:
        targetProjectId: 0
        sourceProjectId: 6
      properties:
        targetProjectId:
          format: int32
          type: integer
        sourceProjectId:
          format: int32
          type: integer
      type: object
    ImportClusterCommand:
      additionalProperties: false
      properties:
        name:
          type: string
        config:
          format: binary
          nullable: true
          type: string
        isTaikunIngressController:
          type: boolean
        isExistingIngressController:
          type: boolean
        ingressClass:
          nullable: true
          type: string
        ingressHost:
          nullable: true
          type: string
        continent:
          nullable: true
          type: string
        importType:
          $ref: "#/components/schemas/EImportClusterType"
        organizationId:
          format: int32
          nullable: true
          type: integer
        cloudId:
          format: int32
          nullable: true
          type: integer
        importClusterName:
          nullable: true
          type: string
        resourceGroupName:
          nullable: true
          type: string
        region:
          nullable: true
          type: string
      required:
      - name
      type: object
    ImportClusterType:
      enum:
      - None
      - CloudCredential
      - ReadOnly
      - FullyManaged
      type: string
    ImportClusterValidateKubeConfigCommand:
      additionalProperties: false
      properties:
        config:
          format: binary
          nullable: true
          type: string
        cloudId:
          format: int32
          nullable: true
          type: integer
        region:
          nullable: true
          type: string
        importClusterName:
          nullable: true
          type: string
        resourceGroupName:
          nullable: true
          type: string
        importType:
          $ref: "#/components/schemas/EImportClusterType"
      type: object
    ImportRepoCommand:
      additionalProperties: false
      example:
        organizationId: 0
        password: password
        name: name
        url: url
        username: username
      properties:
        username:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
      type: object
    ImportedAsCloudCredentialList:
      additionalProperties: false
      example:
        visibility:
          unlock:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          lock:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          addVCluster:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
        data:
          s3CredentialId: 2
          accessIp: accessIp
          organizationName: organizationName
          alertsCount: 7
          isOpaEnabled: true
          aiCredentialId: 4
          importClusterType: None
          aiEnabled: true
          health: null
          isMonitoringEnabled: true
          opaProfileId: 3
          cloudCredentialName: cloudCredentialName
          organizationId: 2
          expiredAt: expiredAt
          alertingProfileName: alertingProfileName
          alertingProfileId: 9
          cloudType: AWS
          isLocked: true
          name: name
          cloudCredentialId: 7
          isBackupEnabled: true
          id: 5
          kubernetesVersion: kubernetesVersion
          status: null
      properties:
        visibility:
          $ref: "#/components/schemas/ImportedAsCloudCredentialVisibility"
        data:
          $ref: "#/components/schemas/ImportedClusterDetailsDto"
      required:
      - data
      - visibility
      type: object
    ImportedAsCloudCredentialVisibility:
      additionalProperties: false
      example:
        unlock:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        lock:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        addVCluster:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
      properties:
        lock:
          $ref: "#/components/schemas/ButtonStatusDto"
        unlock:
          $ref: "#/components/schemas/ButtonStatusDto"
        addVCluster:
          $ref: "#/components/schemas/ButtonStatusDto"
      required:
      - addVCluster
      - lock
      - unlock
      type: object
    ImportedAsFullyManagedList:
      additionalProperties: false
      example:
        visibility:
          unlock:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          enableMonitoring:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          disableMonitoring:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          enableOpa:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          aiAssistant:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          addVCluster:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          attachAlertingProfile:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          enableAi:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          disableBackup:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          disableAi:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          detachAlertingProfile:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          lock:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          disableOpa:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          enableBackup:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
        data:
          s3CredentialId: 2
          accessIp: accessIp
          organizationName: organizationName
          alertsCount: 7
          isOpaEnabled: true
          aiCredentialId: 4
          importClusterType: None
          aiEnabled: true
          health: null
          isMonitoringEnabled: true
          opaProfileId: 3
          cloudCredentialName: cloudCredentialName
          organizationId: 2
          expiredAt: expiredAt
          alertingProfileName: alertingProfileName
          alertingProfileId: 9
          cloudType: AWS
          isLocked: true
          name: name
          cloudCredentialId: 7
          isBackupEnabled: true
          id: 5
          kubernetesVersion: kubernetesVersion
          status: null
      properties:
        visibility:
          $ref: "#/components/schemas/ImportedAsFullyManagedVisibility"
        data:
          $ref: "#/components/schemas/ImportedClusterDetailsDto"
      required:
      - data
      - visibility
      type: object
    ImportedAsFullyManagedVisibility:
      additionalProperties: false
      example:
        unlock:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        enableMonitoring:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        disableMonitoring:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        enableOpa:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        aiAssistant:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        addVCluster:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        attachAlertingProfile:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        enableAi:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        disableBackup:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        disableAi:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        detachAlertingProfile:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        lock:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        disableOpa:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        enableBackup:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
      properties:
        lock:
          $ref: "#/components/schemas/ButtonStatusDto"
        unlock:
          $ref: "#/components/schemas/ButtonStatusDto"
        addVCluster:
          $ref: "#/components/schemas/ButtonStatusDto"
        attachAlertingProfile:
          $ref: "#/components/schemas/ButtonStatusDto"
        detachAlertingProfile:
          $ref: "#/components/schemas/ButtonStatusDto"
        enableMonitoring:
          $ref: "#/components/schemas/ButtonStatusDto"
        disableMonitoring:
          $ref: "#/components/schemas/ButtonStatusDto"
        enableAi:
          $ref: "#/components/schemas/ButtonStatusDto"
        disableAi:
          $ref: "#/components/schemas/ButtonStatusDto"
        enableOpa:
          $ref: "#/components/schemas/ButtonStatusDto"
        disableOpa:
          $ref: "#/components/schemas/ButtonStatusDto"
        enableBackup:
          $ref: "#/components/schemas/ButtonStatusDto"
        disableBackup:
          $ref: "#/components/schemas/ButtonStatusDto"
        aiAssistant:
          $ref: "#/components/schemas/ButtonStatusDto"
      required:
      - addVCluster
      - aiAssistant
      - attachAlertingProfile
      - detachAlertingProfile
      - disableAi
      - disableBackup
      - disableMonitoring
      - disableOpa
      - enableAi
      - enableBackup
      - enableMonitoring
      - enableOpa
      - lock
      - unlock
      type: object
    ImportedAsReadOnlyList:
      additionalProperties: false
      example:
        visibility:
          unlock:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          lock:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
        data:
          s3CredentialId: 2
          accessIp: accessIp
          organizationName: organizationName
          alertsCount: 7
          isOpaEnabled: true
          aiCredentialId: 4
          importClusterType: None
          aiEnabled: true
          health: null
          isMonitoringEnabled: true
          opaProfileId: 3
          cloudCredentialName: cloudCredentialName
          organizationId: 2
          expiredAt: expiredAt
          alertingProfileName: alertingProfileName
          alertingProfileId: 9
          cloudType: AWS
          isLocked: true
          name: name
          cloudCredentialId: 7
          isBackupEnabled: true
          id: 5
          kubernetesVersion: kubernetesVersion
          status: null
      properties:
        visibility:
          $ref: "#/components/schemas/ImportedAsReadOnlyVisibility"
        data:
          $ref: "#/components/schemas/ImportedClusterDetailsDto"
      required:
      - data
      - visibility
      type: object
    ImportedAsReadOnlyVisibility:
      additionalProperties: false
      example:
        unlock:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        lock:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
      properties:
        lock:
          $ref: "#/components/schemas/ButtonStatusDto"
        unlock:
          $ref: "#/components/schemas/ButtonStatusDto"
      required:
      - lock
      - unlock
      type: object
    ImportedClusterDetailsDto:
      additionalProperties: false
      example:
        s3CredentialId: 2
        accessIp: accessIp
        organizationName: organizationName
        alertsCount: 7
        isOpaEnabled: true
        aiCredentialId: 4
        importClusterType: None
        aiEnabled: true
        health: null
        isMonitoringEnabled: true
        opaProfileId: 3
        cloudCredentialName: cloudCredentialName
        organizationId: 2
        expiredAt: expiredAt
        alertingProfileName: alertingProfileName
        alertingProfileId: 9
        cloudType: AWS
        isLocked: true
        name: name
        cloudCredentialId: 7
        isBackupEnabled: true
        id: 5
        kubernetesVersion: kubernetesVersion
        status: null
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        isLocked:
          type: boolean
        accessIp:
          nullable: true
          type: string
        kubernetesVersion:
          nullable: true
          type: string
        importClusterType:
          $ref: "#/components/schemas/ImportClusterType"
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        cloudCredentialName:
          nullable: true
          type: string
        cloudCredentialId:
          format: int32
          nullable: true
          type: integer
        health:
          $ref: "#/components/schemas/ProjectHealth"
        cloudType:
          $ref: "#/components/schemas/ECloudCredentialType"
        status:
          $ref: "#/components/schemas/ProjectStatus"
        isMonitoringEnabled:
          type: boolean
        alertingProfileId:
          format: int32
          nullable: true
          type: integer
        alertingProfileName:
          nullable: true
          type: string
        isOpaEnabled:
          type: boolean
        opaProfileId:
          format: int32
          nullable: true
          type: integer
        isBackupEnabled:
          type: boolean
        s3CredentialId:
          format: int32
          nullable: true
          type: integer
        aiEnabled:
          type: boolean
        aiCredentialId:
          format: int32
          nullable: true
          type: integer
        expiredAt:
          type: string
        alertsCount:
          format: int32
          type: integer
      required:
      - accessIp
      - aiCredentialId
      - aiEnabled
      - alertingProfileId
      - alertingProfileName
      - alertsCount
      - cloudType
      - expiredAt
      - health
      - id
      - importClusterType
      - isBackupEnabled
      - isLocked
      - isMonitoringEnabled
      - isOpaEnabled
      - kubernetesVersion
      - name
      - opaProfileId
      - organizationId
      - organizationName
      - s3CredentialId
      - status
      type: object
    ImportedClusterDisableAiCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    ImportedClusterDisableBackupCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    ImportedClusterDisableMonitoringCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    ImportedClusterDisableOpaCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    ImportedClusterEnableAiCommand:
      additionalProperties: false
      example:
        aiCredentialId: 6
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        aiCredentialId:
          format: int32
          type: integer
      type: object
    ImportedClusterEnableBackupCommand:
      additionalProperties: false
      example:
        projectId: 0
        backupCredentialId: 6
      properties:
        projectId:
          format: int32
          type: integer
        backupCredentialId:
          format: int32
          type: integer
      type: object
    ImportedClusterEnableMonitoringCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    ImportedClusterEnableOpaCommand:
      additionalProperties: false
      example:
        opaProfileId: 6
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        opaProfileId:
          format: int32
          type: integer
      type: object
    ImportedClusterList:
      additionalProperties: false
      example:
        data:
        - organizationName: organizationName
          accessIp: accessIp
          alertsCount: 1
          lastModifiedBy: lastModifiedBy
          health: "Null"
          isVirtualCluster: true
          hasKubeConfigFile: true
          organizationId: 6
          createdAt: createdAt
          expiredAt: expiredAt
          alertingProfileName: alertingProfileName
          deleteOnExpiration: true
          alertingProfileId: 5
          wasmEnabled: true
          createdBy: createdBy
          cloudType: NONE
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
          isMaintenanceModeEnabled: true
          kubernetesVersion: kubernetesVersion
          status: "Null"
        - organizationName: organizationName
          accessIp: accessIp
          alertsCount: 1
          lastModifiedBy: lastModifiedBy
          health: "Null"
          isVirtualCluster: true
          hasKubeConfigFile: true
          organizationId: 6
          createdAt: createdAt
          expiredAt: expiredAt
          alertingProfileName: alertingProfileName
          deleteOnExpiration: true
          alertingProfileId: 5
          wasmEnabled: true
          createdBy: createdBy
          cloudType: NONE
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
          isMaintenanceModeEnabled: true
          kubernetesVersion: kubernetesVersion
          status: "Null"
        project:
          s3CredentialId: 2
          accessIp: accessIp
          organizationName: organizationName
          alertsCount: 7
          isOpaEnabled: true
          aiCredentialId: 4
          importClusterType: None
          aiEnabled: true
          health: null
          isMonitoringEnabled: true
          opaProfileId: 3
          cloudCredentialName: cloudCredentialName
          organizationId: 2
          expiredAt: expiredAt
          alertingProfileName: alertingProfileName
          alertingProfileId: 9
          cloudType: AWS
          isLocked: true
          name: name
          cloudCredentialId: 7
          isBackupEnabled: true
          id: 5
          kubernetesVersion: kubernetesVersion
          status: null
      properties:
        data:
          items:
            $ref: "#/components/schemas/ImportedClusterListDto"
          nullable: true
          type: array
        project:
          $ref: "#/components/schemas/ImportedClusterDetailsDto"
      required:
      - data
      - project
      type: object
    ImportedClusterListDto:
      additionalProperties: false
      example:
        organizationName: organizationName
        accessIp: accessIp
        alertsCount: 1
        lastModifiedBy: lastModifiedBy
        health: "Null"
        isVirtualCluster: true
        hasKubeConfigFile: true
        organizationId: 6
        createdAt: createdAt
        expiredAt: expiredAt
        alertingProfileName: alertingProfileName
        deleteOnExpiration: true
        alertingProfileId: 5
        wasmEnabled: true
        createdBy: createdBy
        cloudType: NONE
        isLocked: true
        name: name
        id: 0
        lastModified: lastModified
        isMaintenanceModeEnabled: true
        kubernetesVersion: kubernetesVersion
        status: "Null"
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        isVirtualCluster:
          type: boolean
        isLocked:
          type: boolean
        hasKubeConfigFile:
          type: boolean
        isMaintenanceModeEnabled:
          type: boolean
        organizationName:
          type: string
        organizationId:
          format: int32
          type: integer
        kubernetesVersion:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        lastModified:
          type: string
        lastModifiedBy:
          type: string
        alertsCount:
          format: int32
          type: integer
        expiredAt:
          type: string
        deleteOnExpiration:
          type: boolean
        wasmEnabled:
          type: boolean
        alertingProfileId:
          format: int32
          nullable: true
          type: integer
        alertingProfileName:
          nullable: true
          type: string
        accessIp:
          type: string
        cloudType:
          $ref: "#/components/schemas/CloudType"
        status:
          $ref: "#/components/schemas/ProjectStatus"
        health:
          $ref: "#/components/schemas/ProjectHealth"
      required:
      - accessIp
      - alertingProfileId
      - alertingProfileName
      - alertsCount
      - cloudType
      - createdAt
      - createdBy
      - deleteOnExpiration
      - expiredAt
      - hasKubeConfigFile
      - health
      - id
      - isLocked
      - isMaintenanceModeEnabled
      - isVirtualCluster
      - kubernetesVersion
      - lastModified
      - lastModifiedBy
      - name
      - organizationId
      - organizationName
      - status
      - wasmEnabled
      type: object
    InfraBillingListCommand:
      additionalProperties: false
      example:
        organizationId: 0
        filter: Monthly
      properties:
        organizationId:
          format: int32
          nullable: true
          type: integer
        filter:
          $ref: "#/components/schemas/DateFilter"
      type: object
    InfraBillingSummariesCreateCommand:
      additionalProperties: false
      example:
        organizationId: 6
        endApply: 2000-01-23T04:56:07.000+00:00
        productId: 1
        price: 0.8008281904610115
        beginApply: 2000-01-23T04:56:07.000+00:00
      properties:
        price:
          format: double
          type: number
        organizationId:
          format: int32
          type: integer
        beginApply:
          format: date-time
          nullable: true
          type: string
        endApply:
          format: date-time
          nullable: true
          type: string
        productId:
          format: int32
          type: integer
      type: object
    InfraBillingSummaryDto:
      additionalProperties: false
      example:
        infraProductId: 0
        intervals:
        - price: 6.027456183070403
          start: 2000-01-23T04:56:07.000+00:00
          end: 2000-01-23T04:56:07.000+00:00
        - price: 6.027456183070403
          start: 2000-01-23T04:56:07.000+00:00
          end: 2000-01-23T04:56:07.000+00:00
        totalPrice: 1.4658129805029452
        infraProductName: infraProductName
      properties:
        infraProductId:
          format: int32
          type: integer
        infraProductName:
          nullable: true
          type: string
        intervals:
          items:
            $ref: "#/components/schemas/DateInterval"
          nullable: true
          type: array
        totalPrice:
          format: double
          type: number
      type: object
    InfraOrganizationsListDto:
      additionalProperties: false
      example:
        organizationId: 0
        createdAt: 2000-01-23T04:56:07.000+00:00
        organizationName: organizationName
        subscriptionId: subscriptionId
        yearly: true
        billingStartDate: 2000-01-23T04:56:07.000+00:00
      properties:
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
        createdAt:
          format: date-time
          type: string
        subscriptionId:
          nullable: true
          type: string
        billingStartDate:
          format: date-time
          nullable: true
          type: string
        yearly:
          type: boolean
      type: object
    InfraProductDto:
      additionalProperties: false
      example:
        yearlyPriceId: yearlyPriceId
        productId: productId
        price: 6.027456183070403
        name: name
        id: 0
        priceId: priceId
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        price:
          format: double
          type: number
        priceId:
          nullable: true
          type: string
        yearlyPriceId:
          nullable: true
          type: string
        productId:
          nullable: true
          type: string
      type: object
    IngressSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        includePublicImportedClusters: true
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
        includePublicImportedClusters:
          nullable: true
          type: boolean
      type: object
    IngressSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchKubernetesResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    InstanceAppListDto:
      additionalProperties: false
      example:
        catalogAppName: catalogAppName
        created: created
        lastModifiedBy: lastModifiedBy
        autoSync: true
        version: version
        catalogAppId: 1
        catalogName: catalogName
        appRepoName: appRepoName
        catalogId: 6
        createdBy: createdBy
        name: name
        namespace: namespace
        logo: logo
        id: 0
        lastModified: lastModified
        projectName: projectName
        projectId: 5
        logs: logs
        status: None
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        status:
          $ref: "#/components/schemas/EInstanceStatus"
        version:
          nullable: true
          type: string
        catalogId:
          format: int32
          type: integer
        catalogName:
          nullable: true
          type: string
        catalogAppName:
          nullable: true
          type: string
        catalogAppId:
          format: int32
          type: integer
        appRepoName:
          nullable: true
          type: string
        logo:
          nullable: true
          type: string
        autoSync:
          type: boolean
        created:
          nullable: true
          type: string
        createdBy:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
        logs:
          nullable: true
          type: string
      required:
      - appRepoName
      - autoSync
      - catalogAppId
      - catalogAppName
      - catalogId
      - catalogName
      - created
      - createdBy
      - id
      - lastModified
      - lastModifiedBy
      - logo
      - logs
      - name
      - namespace
      - projectId
      - projectName
      - status
      - version
      type: object
    InteractiveShellDto:
      additionalProperties: false
      example:
        adminKubeConfig: adminKubeConfig
        kubeConfig: kubeConfig
      properties:
        kubeConfig:
          nullable: true
          type: string
        adminKubeConfig:
          nullable: true
          type: string
      type: object
    InteractiveShellSendCommand:
      additionalProperties: false
      example:
        instanceId: 6
        projectId: 0
        token: token
      properties:
        projectId:
          format: int32
          type: integer
        token:
          nullable: true
          type: string
        instanceId:
          format: int32
          nullable: true
          type: integer
      type: object
    InvoiceDto:
      additionalProperties: false
      example:
        isPaid: true
        endDate: 2000-01-23T04:56:07.000+00:00
        documentNumber: documentNumber
        price: 2.3021358869347655
        dueDate: 2000-01-23T04:56:07.000+00:00
        name: name
        organizationSubscriptionId: 5
        requiredPaymentAction: true
        stripeInvoiceId: stripeInvoiceId
        id: 5
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        documentNumber:
          nullable: true
          type: string
        organizationSubscriptionId:
          format: int32
          type: integer
        isPaid:
          type: boolean
        requiredPaymentAction:
          type: boolean
        stripeInvoiceId:
          nullable: true
          type: string
        price:
          format: double
          type: number
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        dueDate:
          format: date-time
          type: string
      required:
      - documentNumber
      - dueDate
      - endDate
      - id
      - isPaid
      - name
      - organizationSubscriptionId
      - price
      - requiredPaymentAction
      - startDate
      - stripeInvoiceId
      type: object
    InvoiceListDto:
      additionalProperties: false
      example:
        organizationName: organizationName
        endDate: endDate
        organizationSubscriptionId: 5
        requiredPaymentAction: true
        organizationId: 1
        isPaid: true
        subscriptionType: subscriptionType
        price: 6.027456183070403
        subscriptionName: subscriptionName
        name: name
        invoiceNumber: invoiceNumber
        invoiceId: invoiceId
        id: 0
        startDate: startDate
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        startDate:
          nullable: true
          type: string
        endDate:
          nullable: true
          type: string
        requiredPaymentAction:
          type: boolean
        isPaid:
          type: boolean
        invoiceId:
          type: string
        subscriptionType:
          type: string
        subscriptionName:
          type: string
        price:
          format: double
          type: number
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        invoiceNumber:
          type: string
        organizationSubscriptionId:
          format: int32
          type: integer
      required:
      - endDate
      - id
      - invoiceId
      - invoiceNumber
      - isPaid
      - name
      - organizationId
      - organizationName
      - organizationSubscriptionId
      - price
      - requiredPaymentAction
      - startDate
      - subscriptionName
      - subscriptionType
      type: object
    InvoiceSecret:
      additionalProperties: false
      example:
        secret: secret
      properties:
        secret:
          nullable: true
          type: string
      type: object
    Invoices:
      additionalProperties: false
      example:
        data:
        - organizationName: organizationName
          endDate: endDate
          organizationSubscriptionId: 5
          requiredPaymentAction: true
          organizationId: 1
          isPaid: true
          subscriptionType: subscriptionType
          price: 6.027456183070403
          subscriptionName: subscriptionName
          name: name
          invoiceNumber: invoiceNumber
          invoiceId: invoiceId
          id: 0
          startDate: startDate
        - organizationName: organizationName
          endDate: endDate
          organizationSubscriptionId: 5
          requiredPaymentAction: true
          organizationId: 1
          isPaid: true
          subscriptionType: subscriptionType
          price: 6.027456183070403
          subscriptionName: subscriptionName
          name: name
          invoiceNumber: invoiceNumber
          invoiceId: invoiceId
          id: 0
          startDate: startDate
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/InvoiceListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    IpAddressRangeCountCommand:
      additionalProperties: false
      example:
        end: end
        begin: begin
      properties:
        begin:
          nullable: true
          type: string
        end:
          nullable: true
          type: string
      type: object
    IpAddressRangeListCommand:
      additionalProperties: false
      example:
        netMask: 0
        ipAddress: ipAddress
        gateway: gateway
      properties:
        ipAddress:
          nullable: true
          type: string
        netMask:
          format: int32
          type: integer
        gateway:
          nullable: true
          type: string
      type: object
    JobsSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        includePublicImportedClusters: true
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
        includePublicImportedClusters:
          nullable: true
          type: boolean
      type: object
    JobsSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchKubernetesResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    KeycloakCheckerCommand:
      additionalProperties: false
      example:
        clientId: clientId
        name: name
        clientSecret: clientSecret
        url: url
        realmsName: realmsName
      properties:
        name:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        realmsName:
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
        clientSecret:
          nullable: true
          type: string
      type: object
    KeycloakCreateCommand:
      additionalProperties: false
      example:
        clientId: clientId
        name: name
        clientSecret: clientSecret
        url: url
        realmsName: realmsName
      properties:
        name:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        realmsName:
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
        clientSecret:
          nullable: true
          type: string
      type: object
    KeycloakDeleteCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    KeycloakEditCommand:
      additionalProperties: false
      example:
        clientId: clientId
        name: name
        clientSecret: clientSecret
        id: 0
        url: url
        realmsName: realmsName
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        realmsName:
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
        clientSecret:
          nullable: true
          type: string
      type: object
    KeycloakListDto:
      additionalProperties: false
      example:
        organizationId: 6
        clientId: clientId
        organizationName: organizationName
        partnerLogo: partnerLogo
        name: name
        clientSecret: clientSecret
        id: 0
        url: url
        enabled: true
        realmsName: realmsName
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        url:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        realmsName:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        partnerLogo:
          nullable: true
          type: string
        enabled:
          type: boolean
      required:
      - clientId
      - clientSecret
      - enabled
      - id
      - name
      - organizationId
      - organizationName
      - partnerLogo
      - realmsName
      - url
      type: object
    KubeConfigForUserDto:
      additionalProperties: false
      example:
        isAccessibleForManager: true
        canAccessTerminal: true
        displayName: displayName
        isAccessibleForAll: true
        userId: userId
        organizationId: 1
        createdAt: createdAt
        createdBy: createdBy
        namespace: namespace
        canDownload: true
        canDelete: true
        id: 0
        partnerId: 5
        projectName: projectName
        projectId: 6
        kubeConfigRoleName: kubeConfigRoleName
        expirationDate: expirationDate
      properties:
        id:
          format: int32
          type: integer
        userId:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
        organizationId:
          format: int32
          type: integer
        partnerId:
          format: int32
          type: integer
        projectName:
          type: string
        isAccessibleForAll:
          type: boolean
        isAccessibleForManager:
          type: boolean
        kubeConfigRoleName:
          type: string
        createdBy:
          type: string
        createdAt:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        expirationDate:
          nullable: true
          type: string
        canDownload:
          type: boolean
        canAccessTerminal:
          type: boolean
        canDelete:
          type: boolean
      required:
      - canAccessTerminal
      - canDelete
      - canDownload
      - createdAt
      - createdBy
      - displayName
      - expirationDate
      - id
      - isAccessibleForAll
      - isAccessibleForManager
      - kubeConfigRoleName
      - namespace
      - organizationId
      - partnerId
      - projectId
      - projectName
      - userId
      type: object
    KubeConfigForUserList:
      additionalProperties: false
      example:
        data:
        - isAccessibleForManager: true
          canAccessTerminal: true
          displayName: displayName
          isAccessibleForAll: true
          userId: userId
          organizationId: 1
          createdAt: createdAt
          createdBy: createdBy
          namespace: namespace
          canDownload: true
          canDelete: true
          id: 0
          partnerId: 5
          projectName: projectName
          projectId: 6
          kubeConfigRoleName: kubeConfigRoleName
          expirationDate: expirationDate
        - isAccessibleForManager: true
          canAccessTerminal: true
          displayName: displayName
          isAccessibleForAll: true
          userId: userId
          organizationId: 1
          createdAt: createdAt
          createdBy: createdBy
          namespace: namespace
          canDownload: true
          canDelete: true
          id: 0
          partnerId: 5
          projectName: projectName
          projectId: 6
          kubeConfigRoleName: kubeConfigRoleName
          expirationDate: expirationDate
        canAdd:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/KubeConfigForUserDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
        canAdd:
          $ref: "#/components/schemas/ButtonStatusDto"
      required:
      - canAdd
      - data
      - totalCount
      type: object
    KubeConfigInteractiveShellCommand:
      additionalProperties: false
      example:
        kubeConfigId: 0
        projectId: 6
        token: token
      properties:
        kubeConfigId:
          format: int32
          type: integer
        token:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
      type: object
    KubeConfigResponse:
      additionalProperties: false
      example:
        data: data
      properties:
        data:
          nullable: true
          type: string
      required:
      - data
      type: object
    KubeConfigRoleResponse:
      additionalProperties: false
      example:
        data:
        - name: name
          id: 5
        - name: name
          id: 5
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    KubernetesActionRequest:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
      properties:
        name:
          type: string
        namespace:
          nullable: true
          type: string
      required:
      - name
      type: object
    KubernetesActionResponse:
      additionalProperties: false
      example:
        failed:
        - failed
        - failed
        succeeded:
        - succeeded
        - succeeded
      properties:
        succeeded:
          items:
            type: string
          nullable: true
          type: array
        failed:
          items:
            type: string
          nullable: true
          type: array
      type: object
    KubernetesAlertCreateDto:
      additionalProperties: false
      example:
        fingerprint: fingerprint
        annotations:
          description: description
          title: title
        startsAt: 2000-01-23T04:56:07.000+00:00
        endsAt: 2000-01-23T04:56:07.000+00:00
        status: status
        labels: ""
      properties:
        status:
          nullable: true
          type: string
        labels:
          nullable: true
        annotations:
          $ref: "#/components/schemas/KubernetesAnnotations"
        startsAt:
          format: date-time
          type: string
        endsAt:
          format: date-time
          type: string
        fingerprint:
          nullable: true
          type: string
      type: object
    KubernetesAlertDto:
      additionalProperties: false
      example:
        severity: severity
        lastModifiedBy: lastModifiedBy
        description: description
        isMonitoringEnabled: true
        title: title
        endAt: endAt
        silenceReason: silenceReason
        labels: ""
        isSolved: true
        isSilenced: true
        fingerprint: fingerprint
        startsAt: startsAt
        id: 0
        projectName: projectName
        projectId: 6
        status: status
      properties:
        id:
          format: int32
          type: integer
        labels:
          nullable: true
        description:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        severity:
          nullable: true
          type: string
        fingerprint:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        startsAt:
          nullable: true
          type: string
        endAt:
          nullable: true
          type: string
        isSolved:
          type: boolean
        projectId:
          format: int32
          type: integer
        projectName:
          type: string
        isSilenced:
          type: boolean
        silenceReason:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        isMonitoringEnabled:
          type: boolean
      required:
      - description
      - endAt
      - fingerprint
      - id
      - isMonitoringEnabled
      - isSilenced
      - isSolved
      - labels
      - lastModifiedBy
      - projectId
      - projectName
      - severity
      - silenceReason
      - startsAt
      - status
      - title
      type: object
    KubernetesAlertDtoForPoller:
      additionalProperties: false
      example:
        severity: severity
        lastModifiedBy: lastModifiedBy
        description: description
        title: title
        endAt: endAt
        silenceReason: silenceReason
        labels: ""
        isSolved: true
        isSilenced: true
        fingerprint: fingerprint
        startsAt: startsAt
        id: 1
        projectName: projectName
        projectId: 5
        status: status
      properties:
        id:
          format: int32
          type: integer
        labels:
          nullable: true
        description:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        severity:
          nullable: true
          type: string
        fingerprint:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        startsAt:
          nullable: true
          type: string
        endAt:
          nullable: true
          type: string
        isSolved:
          type: boolean
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
        isSilenced:
          type: boolean
        silenceReason:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
      required:
      - description
      - endAt
      - fingerprint
      - id
      - isSilenced
      - isSolved
      - labels
      - lastModifiedBy
      - projectId
      - projectName
      - severity
      - silenceReason
      - startsAt
      - status
      - title
      type: object
    KubernetesAlertList:
      additionalProperties: false
      example:
        data:
        - severity: severity
          lastModifiedBy: lastModifiedBy
          description: description
          isMonitoringEnabled: true
          title: title
          endAt: endAt
          silenceReason: silenceReason
          labels: ""
          isSolved: true
          isSilenced: true
          fingerprint: fingerprint
          startsAt: startsAt
          id: 0
          projectName: projectName
          projectId: 6
          status: status
        - severity: severity
          lastModifiedBy: lastModifiedBy
          description: description
          isMonitoringEnabled: true
          title: title
          endAt: endAt
          silenceReason: silenceReason
          labels: ""
          isSolved: true
          isSilenced: true
          fingerprint: fingerprint
          startsAt: startsAt
          id: 0
          projectName: projectName
          projectId: 6
          status: status
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/KubernetesAlertDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    KubernetesAnnotations:
      additionalProperties: false
      example:
        description: description
        title: title
      properties:
        description:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
      type: object
    KubernetesCliCommand:
      additionalProperties: false
      example:
        kubeConfigId: 6
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        kubeConfigId:
          format: int32
          nullable: true
          type: integer
      type: object
    KubernetesCronjobActionRequest:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
      properties:
        name:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
      required:
      - name
      - namespace
      type: object
    KubernetesDashboardDto:
      additionalProperties: false
      example:
        nodes:
        - kubeletDiskPressure: ""
          kubeletMemory: ""
          metadataName: ""
          kubeletReady: ""
          kubeletSufficient: ""
        - kubeletDiskPressure: ""
          kubeletMemory: ""
          metadataName: ""
          kubeletReady: ""
          kubeletSufficient: ""
        pods:
        - phase: phase
          node: node
          restartCount: 0
          namespace: namespace
          metadataName: metadataName
          age: 2000-01-23T04:56:07.000+00:00
          status: status
        - phase: phase
          node: node
          restartCount: 0
          namespace: namespace
          metadataName: metadataName
          age: 2000-01-23T04:56:07.000+00:00
          status: status
      properties:
        pods:
          items:
            $ref: "#/components/schemas/PodDto"
          nullable: true
          type: array
        nodes:
          items:
            $ref: "#/components/schemas/NodeDto"
          nullable: true
          type: array
      required:
      - nodes
      - pods
      type: object
    KubernetesEventCreateDto:
      additionalProperties: false
      example:
        reason: reason
        metadata: ""
        lastTimeStamp: 2000-01-23T04:56:07.000+00:00
        involvedObject: ""
        firstTimeStamp: 2000-01-23T04:56:07.000+00:00
        count: 0
        source: ""
        type: type
        message: message
      properties:
        type:
          nullable: true
          type: string
        reason:
          nullable: true
          type: string
        message:
          nullable: true
          type: string
        metadata:
          nullable: true
        source:
          nullable: true
        involvedObject:
          nullable: true
        firstTimeStamp:
          format: date-time
          nullable: true
          type: string
        lastTimeStamp:
          format: date-time
          nullable: true
          type: string
        count:
          format: int32
          type: integer
      type: object
    KubernetesIngressClassCommand:
      additionalProperties: false
      properties:
        config:
          format: binary
          nullable: true
          type: string
        cloudId:
          format: int32
          nullable: true
          type: integer
        region:
          nullable: true
          type: string
        importClusterName:
          nullable: true
          type: string
        resourceGroupName:
          nullable: true
          type: string
      type: object
    KubernetesInteractiveShellDto:
      additionalProperties: false
      example:
        kubeConfig: kubeConfig
        podName: podName
      properties:
        kubeConfig:
          nullable: true
          type: string
        podName:
          nullable: true
          type: string
      type: object
    KubernetesNodeLabelsDto:
      additionalProperties: false
      example:
        value: value
        key: key
      properties:
        key:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      required:
      - key
      - value
      type: object
    KubernetesOverviewDto:
      additionalProperties: false
      example:
        unhealthyNodes: 5
        healthyPods: 6
        unhealthyPods: 1
        kubernetesHealth: kubernetesHealth
        alertsCount: 2
        healthyNodes: 5
        projectName: projectName
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        projectName:
          type: string
        healthyPods:
          format: int32
          type: integer
        unhealthyPods:
          format: int32
          type: integer
        healthyNodes:
          format: int32
          type: integer
        unhealthyNodes:
          format: int32
          type: integer
        alertsCount:
          format: int32
          type: integer
        kubernetesHealth:
          nullable: true
          type: string
      required:
      - alertsCount
      - healthyNodes
      - healthyPods
      - kubernetesHealth
      - projectId
      - projectName
      - unhealthyNodes
      - unhealthyPods
      type: object
    KubernetesPodLogsCommand:
      additionalProperties: false
      example:
        container: container
        name: name
        namespace: namespace
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        container:
          nullable: true
          type: string
      type: object
    KubernetesProfilesEntity:
      additionalProperties: false
      example:
        name: name
        id: 0
        taikunLBEnabled: true
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        taikunLBEnabled:
          type: boolean
      type: object
    KubernetesProfilesList:
      additionalProperties: false
      example:
        data:
        - projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          exposeNodePortOnBastion: true
          taikunLBEnabled: true
          organizationId: 6
          createdAt: createdAt
          proxmoxStorage: NFS
          wasmEnabled: true
          createdBy: createdBy
          octaviaEnabled: true
          isLocked: true
          name: name
          allowSchedulingOnMaster: true
          id: 0
          lastModified: lastModified
          nvidiaGpuOperatorEnabled: true
          uniqueClusterName: true
          cni: Default
        - projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          exposeNodePortOnBastion: true
          taikunLBEnabled: true
          organizationId: 6
          createdAt: createdAt
          proxmoxStorage: NFS
          wasmEnabled: true
          createdBy: createdBy
          octaviaEnabled: true
          isLocked: true
          name: name
          allowSchedulingOnMaster: true
          id: 0
          lastModified: lastModified
          nvidiaGpuOperatorEnabled: true
          uniqueClusterName: true
          cni: Default
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/KubernetesProfilesListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    KubernetesProfilesListDto:
      additionalProperties: false
      example:
        projects:
        - name: name
          id: 5
        - name: name
          id: 5
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        exposeNodePortOnBastion: true
        taikunLBEnabled: true
        organizationId: 6
        createdAt: createdAt
        proxmoxStorage: NFS
        wasmEnabled: true
        createdBy: createdBy
        octaviaEnabled: true
        isLocked: true
        name: name
        allowSchedulingOnMaster: true
        id: 0
        lastModified: lastModified
        nvidiaGpuOperatorEnabled: true
        uniqueClusterName: true
        cni: Default
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        organizationName:
          type: string
        cni:
          $ref: "#/components/schemas/CNI"
        octaviaEnabled:
          type: boolean
        exposeNodePortOnBastion:
          type: boolean
        isLocked:
          type: boolean
        taikunLBEnabled:
          type: boolean
        allowSchedulingOnMaster:
          type: boolean
        uniqueClusterName:
          type: boolean
        projects:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          type: array
        createdBy:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        proxmoxStorage:
          $ref: "#/components/schemas/ProxmoxStorage"
        nvidiaGpuOperatorEnabled:
          type: boolean
        wasmEnabled:
          type: boolean
      required:
      - allowSchedulingOnMaster
      - cni
      - createdAt
      - createdBy
      - exposeNodePortOnBastion
      - id
      - isLocked
      - lastModified
      - lastModifiedBy
      - name
      - nvidiaGpuOperatorEnabled
      - octaviaEnabled
      - organizationId
      - organizationName
      - projects
      - proxmoxStorage
      - taikunLBEnabled
      - uniqueClusterName
      - wasmEnabled
      type: object
    KubernetesProfilesLockManagerCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    KubernetesProfilesSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    KubernetesProfilesSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    KubernetesQuotaListDto:
      additionalProperties: false
      example:
        sumOfRamRequestsUsage: 9.301444243932576
        sumOfRamRequestsInGb: 7.061401241503109
        sumOfCpuUsage: 6.027456183070403
        sumOfCpuRequestsUsage: 5.962133916683182
        podsCapacity: 3
        sumOfCpuRequests: 1.4658129805029452
        sumOfRamInGb: 5.637376656633329
        podsTotalCount: 2
        sumOfRamUsage: 2.3021358869347655
        sumOfCpu: 0.8008281904610115
      properties:
        sumOfCpu:
          format: double
          nullable: true
          type: number
        sumOfCpuUsage:
          format: double
          type: number
        sumOfCpuRequests:
          format: double
          nullable: true
          type: number
        sumOfCpuRequestsUsage:
          format: double
          type: number
        sumOfRamInGb:
          format: double
          nullable: true
          type: number
        sumOfRamUsage:
          format: double
          type: number
        sumOfRamRequestsInGb:
          format: double
          nullable: true
          type: number
        sumOfRamRequestsUsage:
          format: double
          type: number
        podsCapacity:
          format: int32
          nullable: true
          type: integer
        podsTotalCount:
          format: int32
          type: integer
      required:
      - podsCapacity
      - podsTotalCount
      - sumOfCpu
      - sumOfCpuRequests
      - sumOfCpuRequestsUsage
      - sumOfCpuUsage
      - sumOfRamInGb
      - sumOfRamRequestsInGb
      - sumOfRamRequestsUsage
      - sumOfRamUsage
      type: object
    KubernetesResourcesDto:
      additionalProperties: false
      example:
        storageClasses: 1
        ingresses: 1
        helmreleases: 1
        pvcs: 7
        jobs: 7
        statefulSets: 2
        services: 1
        secrets: 1
        daemonSets: 5
        crds: 6
        pdbs: 7
        deployments: 5
        cronJobs: 9
        nodes: 4
        configMaps: 3
        networkPolicies: 6
        pods: 0
        namespaces: 2
      properties:
        pods:
          format: int64
          type: integer
        crds:
          format: int64
          type: integer
        helmreleases:
          format: int64
          type: integer
        daemonSets:
          format: int64
          type: integer
        deployments:
          format: int64
          type: integer
        statefulSets:
          format: int64
          type: integer
        jobs:
          format: int64
          type: integer
        cronJobs:
          format: int64
          type: integer
        configMaps:
          format: int64
          type: integer
        namespaces:
          format: int64
          type: integer
        nodes:
          format: int64
          type: integer
        pvcs:
          format: int64
          type: integer
        secrets:
          format: int64
          type: integer
        services:
          format: int64
          type: integer
        ingresses:
          format: int64
          type: integer
        networkPolicies:
          format: int64
          type: integer
        pdbs:
          format: int64
          type: integer
        storageClasses:
          format: int64
          type: integer
      required:
      - configMaps
      - crds
      - cronJobs
      - daemonSets
      - deployments
      - helmreleases
      - ingresses
      - jobs
      - namespaces
      - networkPolicies
      - nodes
      - pdbs
      - pods
      - pvcs
      - secrets
      - services
      - statefulSets
      - storageClasses
      type: object
    KubernetesVersionListDto:
      additionalProperties: false
      example:
        isKubevapEnabled: true
        version: version
      properties:
        version:
          nullable: true
          type: string
        isKubevapEnabled:
          type: boolean
      type: object
    KubesprayCreateCommand:
      additionalProperties: false
      example:
        version: version
        kubernetesVersion: kubernetesVersion
      properties:
        version:
          nullable: true
          type: string
        kubernetesVersion:
          nullable: true
          type: string
      type: object
    KubesprayListDto:
      additionalProperties: false
      example:
        isDeprecated: true
        id: 0
        version: version
        kubernetesVersion: kubernetesVersion
      properties:
        id:
          format: int32
          type: integer
        version:
          nullable: true
          type: string
        kubernetesVersion:
          nullable: true
          type: string
        isDeprecated:
          type: boolean
      required:
      - id
      - isDeprecated
      - kubernetesVersion
      - version
      type: object
    Kubesprays:
      additionalProperties: false
      example:
        data:
        - isDeprecated: true
          id: 0
          version: version
          kubernetesVersion: kubernetesVersion
        - isDeprecated: true
          id: 0
          version: version
          kubernetesVersion: kubernetesVersion
        totalCount: 6
      properties:
        data:
          items:
            $ref: "#/components/schemas/KubesprayListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    LeaveTaikunCommand:
      additionalProperties: false
      example:
        reason: reason
        message: message
      properties:
        reason:
          nullable: true
          type: string
        message:
          nullable: true
          type: string
      type: object
    LeaveTaikunDto:
      additionalProperties: false
      example:
        paymentIntentId: paymentIntentId
        paymentClientSecret: paymentClientSecret
      properties:
        paymentIntentId:
          nullable: true
          type: string
        paymentClientSecret:
          nullable: true
          type: string
      type: object
    ListAllBackupStorageLocations:
      additionalProperties: false
      example:
        projects:
        - 1
        - 1
        data:
        - phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          provider: provider
          namespace: namespace
          metadataName: metadataName
          accessMode: accessMode
          lastValidated: 2000-01-23T04:56:07.000+00:00
          backupCredentialId: 0
        - phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          provider: provider
          namespace: namespace
          metadataName: metadataName
          accessMode: accessMode
          lastValidated: 2000-01-23T04:56:07.000+00:00
          backupCredentialId: 0
        totalCount: 6
      properties:
        data:
          items:
            $ref: "#/components/schemas/BackupStorageLocationDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
        projects:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
      required:
      - data
      - projects
      - totalCount
      type: object
    ListAllBackups:
      additionalProperties: false
      example:
        data:
        - scheduleName: scheduleName
          phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          metadataName: metadataName
          expiration: 2000-01-23T04:56:07.000+00:00
          location: location
        - scheduleName: scheduleName
          phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          metadataName: metadataName
          expiration: 2000-01-23T04:56:07.000+00:00
          location: location
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CBackupDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    ListAllDeleteBackupRequests:
      additionalProperties: false
      example:
        data:
        - phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          metadataName: metadataName
          backupName: backupName
        - phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          metadataName: metadataName
          backupName: backupName
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CDeleteBackupRequestDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    ListAllRestores:
      additionalProperties: false
      example:
        data:
        - scheduleName: scheduleName
          phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          startTimeStamp: 2000-01-23T04:56:07.000+00:00
          warnings: 0
          namespace: namespace
          excludeNamespaces:
          - excludeNamespaces
          - excludeNamespaces
          completionDateTime: 2000-01-23T04:56:07.000+00:00
          metadataName: metadataName
          backupName: backupName
          includeNamespaces:
          - includeNamespaces
          - includeNamespaces
        - scheduleName: scheduleName
          phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          startTimeStamp: 2000-01-23T04:56:07.000+00:00
          warnings: 0
          namespace: namespace
          excludeNamespaces:
          - excludeNamespaces
          - excludeNamespaces
          completionDateTime: 2000-01-23T04:56:07.000+00:00
          metadataName: metadataName
          backupName: backupName
          includeNamespaces:
          - includeNamespaces
          - includeNamespaces
        totalCount: 6
      properties:
        data:
          items:
            $ref: "#/components/schemas/CRestoreDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    ListAllSchedules:
      additionalProperties: false
      example:
        data:
        - phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          schedule: schedule
          lastBackup: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          metadataName: metadataName
          includedNamespaces:
          - includedNamespaces
          - includedNamespaces
          excludedNamespaces:
          - excludedNamespaces
          - excludedNamespaces
          ttl: ttl
          status:
            phase: phase
            lastBackup: 2000-01-23T04:56:07.000+00:00
        - phase: phase
          createdAt: 2000-01-23T04:56:07.000+00:00
          schedule: schedule
          lastBackup: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          metadataName: metadataName
          includedNamespaces:
          - includedNamespaces
          - includedNamespaces
          excludedNamespaces:
          - excludedNamespaces
          - excludedNamespaces
          ttl: ttl
          status:
            phase: phase
            lastBackup: 2000-01-23T04:56:07.000+00:00
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CScheduleDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    ListCatalogAppAvailableVersionsCommand:
      additionalProperties: false
      example:
        repoName: repoName
        packageName: packageName
        currentVersion: currentVersion
      properties:
        repoName:
          nullable: true
          type: string
        packageName:
          nullable: true
          type: string
        currentVersion:
          nullable: true
          type: string
      type: object
    ListForLandingPageDto:
      additionalProperties: false
      example:
        serverLimit: 1
        yearlyPrice: 7.061401241503109
        isDeprecated: true
        trialDays: 2
        cloudCredentialLimit: 5
        description: description
        monthlyPrice: 2.3021358869347655
        projectLimit: 6
        isFree: true
        tcuPrice: 9.301444243932576
        name: name
        isEnterprise: true
        currency: currency
        id: 0
        partnerId: 3
        userLimit: 5
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        projectLimit:
          format: int32
          type: integer
        serverLimit:
          format: int32
          type: integer
        userLimit:
          format: int32
          type: integer
        cloudCredentialLimit:
          format: int32
          type: integer
        monthlyPrice:
          format: double
          type: number
        yearlyPrice:
          format: double
          type: number
        tcuPrice:
          format: double
          type: number
        isDeprecated:
          type: boolean
        currency:
          nullable: true
          type: string
        partnerId:
          format: int32
          nullable: true
          type: integer
        trialDays:
          format: int32
          type: integer
        description:
          nullable: true
          type: string
        isFree:
          type: boolean
        isEnterprise:
          type: boolean
      required:
      - cloudCredentialLimit
      - currency
      - description
      - id
      - isDeprecated
      - isEnterprise
      - isFree
      - monthlyPrice
      - name
      - partnerId
      - projectLimit
      - serverLimit
      - tcuPrice
      - trialDays
      - userLimit
      - yearlyPrice
      type: object
    ListForOrganizationEditDto:
      additionalProperties: false
      example:
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    ListForPartnersDto:
      additionalProperties: false
      example:
        serverLimit: 1
        yearlyPrice: 7.061401241503109
        isDeprecated: true
        trialDays: 2
        cloudCredentialLimit: 5
        exceededCloudCredential: true
        exceededUser: true
        description: description
        monthlyPrice: 2.3021358869347655
        isActive: true
        isDemo: true
        isYearly: true
        projectLimit: 6
        partner:
          name: name
          link: link
          logo: logo
          id: 3
        exceededProject: true
        tcuPrice: 9.301444243932576
        name: name
        exceededServers: true
        isEnterprise: true
        currency: currency
        id: 0
        userLimit: 5
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        projectLimit:
          format: int32
          type: integer
        serverLimit:
          format: int32
          type: integer
        userLimit:
          format: int32
          type: integer
        cloudCredentialLimit:
          format: int32
          type: integer
        monthlyPrice:
          format: double
          type: number
        yearlyPrice:
          format: double
          type: number
        tcuPrice:
          format: double
          type: number
        isDeprecated:
          type: boolean
        currency:
          nullable: true
          type: string
        isEnterprise:
          type: boolean
        partner:
          $ref: "#/components/schemas/PartnerDetailsForSubscription"
        exceededUser:
          type: boolean
        exceededProject:
          type: boolean
        exceededCloudCredential:
          type: boolean
        exceededServers:
          type: boolean
        isActive:
          type: boolean
        isYearly:
          type: boolean
        trialDays:
          format: int32
          type: integer
        description:
          nullable: true
          type: string
        isDemo:
          type: boolean
      required:
      - cloudCredentialLimit
      - currency
      - description
      - exceededCloudCredential
      - exceededProject
      - exceededServers
      - exceededUser
      - id
      - isActive
      - isDemo
      - isDeprecated
      - isEnterprise
      - isYearly
      - monthlyPrice
      - name
      - partner
      - projectLimit
      - serverLimit
      - tcuPrice
      - trialDays
      - userLimit
      - yearlyPrice
      type: object
    LockProjectAppCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    LoginCommand:
      additionalProperties: false
      example:
        mode: mode
        password: password
        secretKey: secretKey
        accessKey: accessKey
        email: email
      properties:
        email:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        mode:
          nullable: true
          type: string
        accessKey:
          nullable: true
          type: string
        secretKey:
          nullable: true
          type: string
      type: object
    LokiLogsQuery:
      additionalProperties: false
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        limit: 6
        filters:
        - value: value
          operator: operator
        - value: value
          operator: operator
        projectId: 0
        parameters: parameters
        startDate: 2000-01-23T04:56:07.000+00:00
        direction: direction
      properties:
        projectId:
          format: int32
          type: integer
        parameters:
          nullable: true
          type: string
        filters:
          items:
            $ref: "#/components/schemas/Filter"
          nullable: true
          type: array
        startDate:
          format: date-time
          nullable: true
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
        limit:
          format: int32
          nullable: true
          type: integer
        direction:
          nullable: true
          type: string
      type: object
    LokiResult:
      additionalProperties: false
      example:
        stream:
          app: app
          container: container
          component: component
          filename: filename
          pod: pod
          tier: tier
          streamStream: streamStream
          namespace: namespace
          job: job
          podTemplateHash: podTemplateHash
        values:
        - values
        - values
      properties:
        stream:
          $ref: "#/components/schemas/Stream"
        values:
          items:
            type: string
          nullable: true
          type: array
      type: object
    MainProjectDto:
      additionalProperties: false
      example:
        name: name
        id: 1
        status: "Null"
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        status:
          $ref: "#/components/schemas/ProjectStatus"
      type: object
    MakeCsmCommand:
      additionalProperties: false
      example:
        mode: mode
        userId: userId
      properties:
        userId:
          nullable: true
          type: string
        mode:
          nullable: true
          type: string
      type: object
    MakeOwnerCommand:
      additionalProperties: false
      example:
        userId: userId
      properties:
        userId:
          nullable: true
          type: string
      type: object
    Metadata:
      additionalProperties: false
      example:
        vcsCommitTimestamp: vcsCommitTimestamp
        usageApiEnabled: true
        vcsCommitMessage: vcsCommitMessage
        vcsBranch: vcsBranch
        vcsCommitAuthorName: vcsCommitAuthorName
        infracostCommand: infracostCommand
        vcsCommitSha: vcsCommitSha
        vcsRepositoryUrl: vcsRepositoryUrl
        vcsCommitAuthorEmail: vcsCommitAuthorEmail
      properties:
        infracostCommand:
          nullable: true
          type: string
        vcsBranch:
          nullable: true
          type: string
        vcsCommitSha:
          nullable: true
          type: string
        vcsCommitAuthorName:
          nullable: true
          type: string
        vcsCommitAuthorEmail:
          nullable: true
          type: string
        vcsCommitTimestamp:
          nullable: true
          type: string
        vcsCommitMessage:
          nullable: true
          type: string
        vcsRepositoryUrl:
          nullable: true
          type: string
        usageApiEnabled:
          type: boolean
      type: object
    MetricData:
      additionalProperties: false
      example:
        result:
        - metric:
            key: metric
          values:
          - - 0.8008281904610115
            - 0.8008281904610115
          - - 0.8008281904610115
            - 0.8008281904610115
          value: ""
        - metric:
            key: metric
          values:
          - - 0.8008281904610115
            - 0.8008281904610115
          - - 0.8008281904610115
            - 0.8008281904610115
          value: ""
        resultType: resultType
      properties:
        resultType:
          nullable: true
          type: string
        result:
          items:
            $ref: "#/components/schemas/MetricResult"
          nullable: true
          type: array
      type: object
    MetricResult:
      additionalProperties: false
      example:
        metric:
          key: metric
        values:
        - - 0.8008281904610115
          - 0.8008281904610115
        - - 0.8008281904610115
          - 0.8008281904610115
        value: ""
      properties:
        metric:
          additionalProperties:
            nullable: true
            type: string
          nullable: true
          type: object
        value:
          nullable: true
        values:
          items:
            items:
              format: double
              type: number
            type: array
          nullable: true
          type: array
      type: object
    MonitoringCredentialsListDto:
      additionalProperties: false
      example:
        lokiUrl: lokiUrl
        password: password
        alertManagerUrl: alertManagerUrl
        prometheusUrl: prometheusUrl
        username: username
      properties:
        username:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        prometheusUrl:
          nullable: true
          type: string
        lokiUrl:
          nullable: true
          type: string
        alertManagerUrl:
          nullable: true
          type: string
      required:
      - alertManagerUrl
      - lokiUrl
      - password
      - prometheusUrl
      - username
      type: object
    NamespaceSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        includePublicImportedClusters: true
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
        includePublicImportedClusters:
          nullable: true
          type: boolean
      type: object
    NamespaceSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchKubernetesResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    NetworkListCommand:
      additionalProperties: false
      example:
        password: password
        datacenterId: datacenterId
        url: url
        username: username
      properties:
        url:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        datacenterId:
          nullable: true
          type: string
      type: object
    NetworkPoliciesSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        includePublicImportedClusters: true
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
        includePublicImportedClusters:
          nullable: true
          type: boolean
      type: object
    NetworkPoliciesSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchKubernetesResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    NetworkSummary:
      additionalProperties: false
      example:
        name: name
        type: type
        network: network
      properties:
        network:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
      type: object
    NodeActionCommand:
      additionalProperties: false
      example:
        name: name
        action: Cordon
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        action:
          $ref: "#/components/schemas/ENodeAction"
      required:
      - action
      - name
      - projectId
      type: object
    NodeCommand:
      additionalProperties: false
      example:
        name: name
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    NodeDto:
      additionalProperties: false
      example:
        kubeletDiskPressure: ""
        kubeletMemory: ""
        metadataName: ""
        kubeletReady: ""
        kubeletSufficient: ""
      properties:
        metadataName:
          nullable: true
        kubeletReady:
          nullable: true
        kubeletSufficient:
          nullable: true
        kubeletDiskPressure:
          nullable: true
        kubeletMemory:
          nullable: true
      required:
      - kubeletDiskPressure
      - kubeletMemory
      - kubeletReady
      - kubeletSufficient
      - metadataName
      type: object
    NodeSearchResponseData:
      additionalProperties: false
      example:
        organizationId: 6
        organizationName: organizationName
        metadataName: metadataName
        projectName: projectName
        projectId: 0
      properties:
        metadataName:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
      type: object
    NodesSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        includePublicImportedClusters: true
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
        includePublicImportedClusters:
          nullable: true
          type: boolean
      type: object
    NodesSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/NodeSearchResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    NotificationHistory:
      additionalProperties: false
      example:
        data:
        - createdAt: createdAt
          actionStatus: succeeded
          isDeleted: true
          actionMessage: actionMessage
          category: StartAddServer
          projectName: projectName
          projectId: 0
          username: username
        - createdAt: createdAt
          actionStatus: succeeded
          isDeleted: true
          actionMessage: actionMessage
          category: StartAddServer
          projectName: projectName
          projectId: 0
          username: username
        totalCount: 6
      properties:
        data:
          items:
            $ref: "#/components/schemas/NotificationListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    NotificationListDto:
      additionalProperties: false
      example:
        createdAt: createdAt
        actionStatus: succeeded
        isDeleted: true
        actionMessage: actionMessage
        category: StartAddServer
        projectName: projectName
        projectId: 0
        username: username
      properties:
        createdAt:
          nullable: true
          type: string
        actionMessage:
          type: string
        actionStatus:
          $ref: "#/components/schemas/ActionStatus"
        username:
          nullable: true
          type: string
        category:
          $ref: "#/components/schemas/ActionType"
        projectName:
          nullable: true
          type: string
        projectId:
          format: int32
          nullable: true
          type: integer
        isDeleted:
          type: boolean
      required:
      - actionMessage
      - actionStatus
      - category
      - createdAt
      - isDeleted
      - projectId
      - projectName
      - username
      type: object
    NotificationSendCommand:
      additionalProperties: false
      example:
        actionType: StartAddServer
        actionStatus: succeeded
        projectType: K8S
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        actionType:
          $ref: "#/components/schemas/ActionType"
        actionStatus:
          $ref: "#/components/schemas/ActionStatus"
        projectType:
          $ref: "#/components/schemas/ProjectType"
      type: object
    NotifyOwnersCommand:
      additionalProperties: false
      example:
        organizationId: 0
      properties:
        organizationId:
          format: int32
          type: integer
      type: object
    NtpCommand:
      additionalProperties: false
      example:
        address: address
      properties:
        address:
          nullable: true
          type: string
      type: object
    NtpServerCreateDto:
      additionalProperties: false
      example:
        address: address
      properties:
        address:
          nullable: true
          type: string
      type: object
    NtpServerListDto:
      additionalProperties: false
      example:
        address: address
        id: 5
      properties:
        id:
          format: int32
          type: integer
        address:
          nullable: true
          type: string
      required:
      - address
      - id
      type: object
    NtpServersListDto:
      additionalProperties: false
      example:
        address: address
        accessProfileName: accessProfileName
        id: 0
      properties:
        id:
          format: int32
          type: integer
        address:
          nullable: true
          type: string
        accessProfileName:
          nullable: true
          type: string
      required:
      - accessProfileName
      - address
      - id
      type: object
    OpaMakeDefaultCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    OpaProfileList:
      additionalProperties: false
      example:
        data:
        - projects:
          - name: name
            id: 5
          - name: name
            id: 5
          isMasterTaintEnforced: true
          organizationName: organizationName
          isNodeNameForbiddenInVC: true
          whitelistMasterTaintNamespaces:
          - whitelistMasterTaintNamespaces
          - whitelistMasterTaintNamespaces
          forbidSpecificTags:
          - forbidSpecificTags
          - forbidSpecificTags
          forbidNodePort: true
          ingressWhitelist:
          - ingressWhitelist
          - ingressWhitelist
          revision: 6
          forcePodResource: true
          organizationId: 1
          forbidHttpIngress: true
          allowedRepo:
          - allowedRepo
          - allowedRepo
          createdAt: createdAt
          isDefault: true
          requireProbe: true
          isLocked: true
          name: name
          uniqueServiceSelector: true
          id: 0
          uniqueIngresses: true
        - projects:
          - name: name
            id: 5
          - name: name
            id: 5
          isMasterTaintEnforced: true
          organizationName: organizationName
          isNodeNameForbiddenInVC: true
          whitelistMasterTaintNamespaces:
          - whitelistMasterTaintNamespaces
          - whitelistMasterTaintNamespaces
          forbidSpecificTags:
          - forbidSpecificTags
          - forbidSpecificTags
          forbidNodePort: true
          ingressWhitelist:
          - ingressWhitelist
          - ingressWhitelist
          revision: 6
          forcePodResource: true
          organizationId: 1
          forbidHttpIngress: true
          allowedRepo:
          - allowedRepo
          - allowedRepo
          createdAt: createdAt
          isDefault: true
          requireProbe: true
          isLocked: true
          name: name
          uniqueServiceSelector: true
          id: 0
          uniqueIngresses: true
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/OpaProfileListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    OpaProfileListDto:
      additionalProperties: false
      example:
        projects:
        - name: name
          id: 5
        - name: name
          id: 5
        isMasterTaintEnforced: true
        organizationName: organizationName
        isNodeNameForbiddenInVC: true
        whitelistMasterTaintNamespaces:
        - whitelistMasterTaintNamespaces
        - whitelistMasterTaintNamespaces
        forbidSpecificTags:
        - forbidSpecificTags
        - forbidSpecificTags
        forbidNodePort: true
        ingressWhitelist:
        - ingressWhitelist
        - ingressWhitelist
        revision: 6
        forcePodResource: true
        organizationId: 1
        forbidHttpIngress: true
        allowedRepo:
        - allowedRepo
        - allowedRepo
        createdAt: createdAt
        isDefault: true
        requireProbe: true
        isLocked: true
        name: name
        uniqueServiceSelector: true
        id: 0
        uniqueIngresses: true
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        forbidNodePort:
          type: boolean
        forbidHttpIngress:
          type: boolean
        requireProbe:
          type: boolean
        uniqueIngresses:
          type: boolean
        uniqueServiceSelector:
          type: boolean
        forcePodResource:
          type: boolean
        isNodeNameForbiddenInVC:
          type: boolean
        isMasterTaintEnforced:
          type: boolean
        whitelistMasterTaintNamespaces:
          items:
            type: string
          type: array
        allowedRepo:
          items:
            type: string
          type: array
        forbidSpecificTags:
          items:
            type: string
          type: array
        ingressWhitelist:
          items:
            type: string
          type: array
        isLocked:
          type: boolean
        revision:
          format: int32
          type: integer
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        createdAt:
          nullable: true
          type: string
        isDefault:
          type: boolean
        projects:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          type: array
      required:
      - allowedRepo
      - createdAt
      - forbidHttpIngress
      - forbidNodePort
      - forbidSpecificTags
      - forcePodResource
      - id
      - ingressWhitelist
      - isDefault
      - isLocked
      - isMasterTaintEnforced
      - isNodeNameForbiddenInVC
      - name
      - organizationId
      - organizationName
      - projects
      - requireProbe
      - revision
      - uniqueIngresses
      - uniqueServiceSelector
      - whitelistMasterTaintNamespaces
      type: object
    OpaProfileLockManagerCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    OpaProfileSyncCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    OpaProfileUpdateCommand:
      additionalProperties: false
      example:
        isMasterTaintEnforced: true
        isNodeNameForbiddenInVC: true
        forbidSpecificTags:
        - forbidSpecificTags
        - forbidSpecificTags
        whitelistMasterTaintNamespaces:
        - whitelistMasterTaintNamespaces
        - whitelistMasterTaintNamespaces
        forbidNodePort: true
        ingressWhitelist:
        - ingressWhitelist
        - ingressWhitelist
        forcePodResource: true
        forbidHttpIngress: true
        allowedRepo:
        - allowedRepo
        - allowedRepo
        requireProbe: true
        name: name
        uniqueServiceSelector: true
        id: 0
        uniqueIngresses: true
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        forbidNodePort:
          nullable: true
          type: boolean
        forbidHttpIngress:
          nullable: true
          type: boolean
        requireProbe:
          nullable: true
          type: boolean
        uniqueIngresses:
          nullable: true
          type: boolean
        uniqueServiceSelector:
          nullable: true
          type: boolean
        isNodeNameForbiddenInVC:
          nullable: true
          type: boolean
        isMasterTaintEnforced:
          nullable: true
          type: boolean
        forcePodResource:
          nullable: true
          type: boolean
        allowedRepo:
          items:
            type: string
          nullable: true
          type: array
        forbidSpecificTags:
          items:
            type: string
          nullable: true
          type: array
        ingressWhitelist:
          items:
            type: string
          nullable: true
          type: array
        whitelistMasterTaintNamespaces:
          items:
            type: string
          nullable: true
          type: array
      type: object
    OpenAiCheckerCommand:
      additionalProperties: false
      example:
        token: token
      properties:
        token:
          nullable: true
          type: string
      type: object
    OpenStackNetworkListQuery:
      additionalProperties: false
      example:
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackProjectId: openStackProjectId
        openStackUser: openStackUser
        openStackRegion: openStackRegion
        isAdmin: true
      properties:
        openStackUser:
          nullable: true
          type: string
        openStackPassword:
          nullable: true
          type: string
        openStackUrl:
          nullable: true
          type: string
        openStackProjectId:
          nullable: true
          type: string
        openStackDomain:
          nullable: true
          type: string
        openStackRegion:
          nullable: true
          type: string
        applicationCredEnabled:
          type: boolean
        isAdmin:
          type: boolean
      type: object
    OpenStackProjectListQuery:
      additionalProperties: false
      example:
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackUser: openStackUser
        isAdmin: true
      properties:
        openStackUser:
          nullable: true
          type: string
        openStackPassword:
          nullable: true
          type: string
        openStackUrl:
          nullable: true
          type: string
        openStackDomain:
          nullable: true
          type: string
        applicationCredEnabled:
          type: boolean
        isAdmin:
          type: boolean
      type: object
    OpenStackRegionListQuery:
      additionalProperties: false
      example:
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackUser: openStackUser
        isAdmin: true
      properties:
        openStackUser:
          nullable: true
          type: string
        openStackPassword:
          nullable: true
          type: string
        openStackUrl:
          nullable: true
          type: string
        openStackDomain:
          nullable: true
          type: string
        applicationCredEnabled:
          type: boolean
        isAdmin:
          type: boolean
      type: object
    OpenStackZoneListQuery:
      additionalProperties: false
      example:
        openstackProject: openstackProject
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackUser: openStackUser
        openStackRegion: openStackRegion
        isAdmin: true
      properties:
        openStackUser:
          nullable: true
          type: string
        openStackPassword:
          nullable: true
          type: string
        openStackUrl:
          nullable: true
          type: string
        openStackDomain:
          nullable: true
          type: string
        openStackRegion:
          nullable: true
          type: string
        applicationCredEnabled:
          type: boolean
        isAdmin:
          type: boolean
        openstackProject:
          nullable: true
          type: string
      type: object
    OpenTicketCommand:
      additionalProperties: false
      example:
        ticketId: ticketId
      properties:
        ticketId:
          nullable: true
          type: string
      type: object
    OpenshiftCreateCommand:
      additionalProperties: false
      example:
        organizationId: 0
        storageClass: storageClass
        baseDomain: baseDomain
        name: name
        kubeConfig: kubeConfig
        pullSecret: pullSecret
      properties:
        name:
          nullable: true
          type: string
        kubeConfig:
          nullable: true
          type: string
        pullSecret:
          nullable: true
          type: string
        storageClass:
          nullable: true
          type: string
        baseDomain:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
      type: object
    OpenshiftFlavorData:
      additionalProperties: false
      example:
        name: name
        cpu: 0
        ram: 6.027456183070403
      properties:
        name:
          nullable: true
          type: string
        cpu:
          format: int32
          type: integer
        ram:
          format: double
          type: number
      required:
      - cpu
      - name
      - ram
      type: object
    OpenshiftFlavorList:
      additionalProperties: false
      example:
        data:
        - name: name
          cpu: 0
          ram: 6.027456183070403
        - name: name
          cpu: 0
          ram: 6.027456183070403
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/OpenshiftFlavorData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    OpenshiftList:
      additionalProperties: false
      example:
        data:
        - projectCount: 1
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          organizationId: 6
          createdAt: createdAt
          storageClass: storageClass
          isDefault: true
          baseDomain: baseDomain
          createdBy: createdBy
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
          continentName: continentName
        - projectCount: 1
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          organizationId: 6
          createdAt: createdAt
          storageClass: storageClass
          isDefault: true
          baseDomain: baseDomain
          createdBy: createdBy
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
          continentName: continentName
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/OpenshiftListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    OpenshiftListDto:
      additionalProperties: false
      example:
        projectCount: 1
        projects:
        - name: name
          id: 5
        - name: name
          id: 5
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        organizationId: 6
        createdAt: createdAt
        storageClass: storageClass
        isDefault: true
        baseDomain: baseDomain
        createdBy: createdBy
        isLocked: true
        name: name
        id: 0
        lastModified: lastModified
        continentName: continentName
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        baseDomain:
          type: string
        storageClass:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        projects:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          type: array
        projectCount:
          format: int32
          type: integer
        isLocked:
          type: boolean
        createdBy:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        isDefault:
          type: boolean
        createdAt:
          nullable: true
          type: string
        continentName:
          type: string
      required:
      - baseDomain
      - continentName
      - createdAt
      - createdBy
      - id
      - isDefault
      - isLocked
      - lastModified
      - lastModifiedBy
      - name
      - organizationId
      - organizationName
      - projectCount
      - projects
      - storageClass
      type: object
    OpenshiftPullSecretCommand:
      additionalProperties: false
      properties:
        config:
          format: binary
          nullable: true
          type: string
      type: object
    OpenshiftStorageListCommand:
      additionalProperties: false
      properties:
        config:
          format: binary
          nullable: true
          type: string
      type: object
    OpenshiftValidateCommand:
      additionalProperties: false
      properties:
        config:
          format: binary
          nullable: true
          type: string
      type: object
    OpenstackComputeQuotaDto:
      additionalProperties: false
      example:
        maxTotalCores: 5
        maxTotalInstances: 1
        usedRamSize: 5
        maxServerGroups: 6
        usedServerGroups: 9
        maxTotalRamSize: 0
        usedCpuSize: 2
        usedInstanceSize: 7
      properties:
        maxTotalRamSize:
          format: int64
          type: integer
        maxServerGroups:
          format: int64
          type: integer
        maxTotalInstances:
          format: int64
          type: integer
        maxTotalCores:
          format: int64
          type: integer
        usedRamSize:
          format: int64
          type: integer
        usedCpuSize:
          format: int64
          type: integer
        usedInstanceSize:
          format: int64
          type: integer
        usedServerGroups:
          format: int64
          type: integer
      type: object
    OpenstackCredentialList:
      additionalProperties: false
      example:
        data:
        - volumeType: volumeType
          projectCount: 6
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          applicationCredEnabled: true
          project: project
          availabilityZone: availabilityZone
          publicNetwork: publicNetwork
          organizationId: 1
          createdAt: createdAt
          isLocked: true
          skipTlsFlag: true
          id: 0
          organizationName: organizationName
          isInfra: true
          internalSubnetId: internalSubnetId
          lastModifiedBy: lastModifiedBy
          importNetwork: true
          isAdmin: true
          url: url
          isDefault: true
          createdBy: createdBy
          domain: domain
          name: name
          tenantId: tenantId
          lastModified: lastModified
          region: region
          continentName: continentName
          user: user
        - volumeType: volumeType
          projectCount: 6
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          applicationCredEnabled: true
          project: project
          availabilityZone: availabilityZone
          publicNetwork: publicNetwork
          organizationId: 1
          createdAt: createdAt
          isLocked: true
          skipTlsFlag: true
          id: 0
          organizationName: organizationName
          isInfra: true
          internalSubnetId: internalSubnetId
          lastModifiedBy: lastModifiedBy
          importNetwork: true
          isAdmin: true
          url: url
          isDefault: true
          createdBy: createdBy
          domain: domain
          name: name
          tenantId: tenantId
          lastModified: lastModified
          region: region
          continentName: continentName
          user: user
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/OpenstackCredentialsListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    OpenstackCredentialsListDto:
      additionalProperties: false
      example:
        volumeType: volumeType
        projectCount: 6
        projects:
        - name: name
          id: 5
        - name: name
          id: 5
        applicationCredEnabled: true
        project: project
        availabilityZone: availabilityZone
        publicNetwork: publicNetwork
        organizationId: 1
        createdAt: createdAt
        isLocked: true
        skipTlsFlag: true
        id: 0
        organizationName: organizationName
        isInfra: true
        internalSubnetId: internalSubnetId
        lastModifiedBy: lastModifiedBy
        importNetwork: true
        isAdmin: true
        url: url
        isDefault: true
        createdBy: createdBy
        domain: domain
        name: name
        tenantId: tenantId
        lastModified: lastModified
        region: region
        continentName: continentName
        user: user
      properties:
        id:
          format: int32
          type: integer
        projectCount:
          format: int32
          type: integer
        isLocked:
          type: boolean
        name:
          type: string
        user:
          type: string
        url:
          type: string
        project:
          type: string
        domain:
          type: string
        region:
          type: string
        publicNetwork:
          type: string
        importNetwork:
          type: boolean
        tenantId:
          type: string
        availabilityZone:
          nullable: true
          type: string
        volumeType:
          nullable: true
          type: string
        internalSubnetId:
          nullable: true
          type: string
        projects:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          type: array
        createdBy:
          type: string
        lastModified:
          type: string
        lastModifiedBy:
          type: string
        isDefault:
          type: boolean
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        createdAt:
          type: string
        continentName:
          type: string
        isAdmin:
          type: boolean
        isInfra:
          type: boolean
        applicationCredEnabled:
          type: boolean
        skipTlsFlag:
          type: boolean
      required:
      - applicationCredEnabled
      - availabilityZone
      - continentName
      - createdAt
      - createdBy
      - domain
      - id
      - importNetwork
      - internalSubnetId
      - isAdmin
      - isDefault
      - isInfra
      - isLocked
      - lastModified
      - lastModifiedBy
      - name
      - organizationId
      - organizationName
      - project
      - projectCount
      - projects
      - publicNetwork
      - region
      - skipTlsFlag
      - tenantId
      - url
      - user
      - volumeType
      type: object
    OpenstackFlavorList:
      additionalProperties: false
      example:
        data:
        - name: name
          cpu: 6
          description: description
          ram: 0.8008281904610115
        - name: name
          cpu: 6
          description: description
          ram: 0.8008281904610115
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/OpenstackFlavorListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    OpenstackFlavorListDto:
      additionalProperties: false
      example:
        name: name
        cpu: 6
        description: description
        ram: 0.8008281904610115
      properties:
        ram:
          format: double
          type: number
        cpu:
          format: int64
          type: integer
        name:
          type: string
        description:
          nullable: true
          type: string
      required:
      - cpu
      - description
      - name
      - ram
      type: object
    OpenstackNetworkDto:
      additionalProperties: false
      example:
        routerUsed: 6
        floatingIpLimit: 1
        securityGroupRuleLimit: 1
        networkLimit: 1
        securityGroupRuleUsed: 6
        routerLimit: 6
        portLimit: 4
        securityGroupUsed: 8
        subnetUsed: 9
        securityGroupLimit: 7
        portUsed: 9
        subnetLimit: 1
        floatingIpUsed: 9
        networkUsed: 5
      properties:
        networkLimit:
          format: int64
          type: integer
        subnetLimit:
          format: int64
          type: integer
        floatingIpLimit:
          format: int64
          type: integer
        routerLimit:
          format: int64
          type: integer
        securityGroupLimit:
          format: int64
          type: integer
        securityGroupRuleLimit:
          format: int64
          type: integer
        portLimit:
          format: int64
          type: integer
        networkUsed:
          format: int64
          type: integer
        subnetUsed:
          format: int64
          type: integer
        floatingIpUsed:
          format: int64
          type: integer
        routerUsed:
          format: int64
          type: integer
        securityGroupUsed:
          format: int64
          type: integer
        portUsed:
          format: int64
          type: integer
        securityGroupRuleUsed:
          format: int64
          type: integer
      type: object
    OpenstackQuotaList:
      additionalProperties: false
      example:
        compute:
          maxTotalCores: 5
          maxTotalInstances: 1
          usedRamSize: 5
          maxServerGroups: 6
          usedServerGroups: 9
          maxTotalRamSize: 0
          usedCpuSize: 2
          usedInstanceSize: 7
        volume:
          usedVolumeSize: 2
          maxCountVolumeSize: 4
          countVolumeSize: 7
          maxTotalVolumeSize: 3
        isInfra: true
        network:
          routerUsed: 6
          floatingIpLimit: 1
          securityGroupRuleLimit: 1
          networkLimit: 1
          securityGroupRuleUsed: 6
          routerLimit: 6
          portLimit: 4
          securityGroupUsed: 8
          subnetUsed: 9
          securityGroupLimit: 7
          portUsed: 9
          subnetLimit: 1
          floatingIpUsed: 9
          networkUsed: 5
      properties:
        compute:
          $ref: "#/components/schemas/OpenstackComputeQuotaDto"
        volume:
          $ref: "#/components/schemas/OpenstackVolumeQuotaDto"
        network:
          $ref: "#/components/schemas/OpenstackNetworkDto"
        isInfra:
          type: boolean
      type: object
    OpenstackQuotasCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    OpenstackSubnetListQuery:
      additionalProperties: false
      example:
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackProjectId: openStackProjectId
        openStackUser: openStackUser
        openStackRegion: openStackRegion
        openStackProject: openStackProject
      properties:
        openStackUser:
          nullable: true
          type: string
        openStackPassword:
          nullable: true
          type: string
        openStackUrl:
          nullable: true
          type: string
        openStackProject:
          nullable: true
          type: string
        openStackProjectId:
          nullable: true
          type: string
        openStackDomain:
          nullable: true
          type: string
        openStackRegion:
          nullable: true
          type: string
        applicationCredEnabled:
          type: boolean
      type: object
    OpenstackVolumeQuotaDto:
      additionalProperties: false
      example:
        usedVolumeSize: 2
        maxCountVolumeSize: 4
        countVolumeSize: 7
        maxTotalVolumeSize: 3
      properties:
        maxTotalVolumeSize:
          format: int64
          type: integer
        usedVolumeSize:
          format: int64
          type: integer
        maxCountVolumeSize:
          format: int64
          type: integer
        countVolumeSize:
          format: int64
          type: integer
      type: object
    OpenstackVolumeTypeListQuery:
      additionalProperties: false
      example:
        openstackProject: openstackProject
        openStackUrl: openStackUrl
        applicationCredEnabled: true
        openStackPassword: openStackPassword
        openStackDomain: openStackDomain
        openStackUser: openStackUser
        openStackRegion: openStackRegion
        isAdmin: true
        projectId: 0
      properties:
        projectId:
          format: int32
          nullable: true
          type: integer
        openStackUser:
          nullable: true
          type: string
        openStackPassword:
          nullable: true
          type: string
        openStackUrl:
          nullable: true
          type: string
        openStackDomain:
          nullable: true
          type: string
        openStackRegion:
          nullable: true
          type: string
        applicationCredEnabled:
          type: boolean
        isAdmin:
          type: boolean
        openstackProject:
          nullable: true
          type: string
      type: object
    OperationCredentialLockManagerCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    OperationCredentials:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          isDefault: true
          organizationName: organizationName
          createdBy: createdBy
          isLocked: true
          lastModifiedBy: lastModifiedBy
          name: name
          prometheusUrl: prometheusUrl
          prometheusUsername: prometheusUsername
          rules:
          - prometheusRuleName: prometheusRuleName
            prometheusRuleId: 1
          - prometheusRuleName: prometheusRuleName
            prometheusRuleId: 1
          id: 0
          lastModified: lastModified
        - organizationId: 6
          isDefault: true
          organizationName: organizationName
          createdBy: createdBy
          isLocked: true
          lastModifiedBy: lastModifiedBy
          name: name
          prometheusUrl: prometheusUrl
          prometheusUsername: prometheusUsername
          rules:
          - prometheusRuleName: prometheusRuleName
            prometheusRuleId: 1
          - prometheusRuleName: prometheusRuleName
            prometheusRuleId: 1
          id: 0
          lastModified: lastModified
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/OperationCredentialsListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    OperationCredentialsCreateCommand:
      additionalProperties: false
      example:
        organizationId: 0
        name: name
        prometheusUrl: prometheusUrl
        prometheusUsername: prometheusUsername
        prometheusPassword: prometheusPassword
      properties:
        name:
          nullable: true
          type: string
        prometheusUsername:
          nullable: true
          type: string
        prometheusPassword:
          nullable: true
          type: string
        prometheusUrl:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
      type: object
    OperationCredentialsForOrganizationEntity:
      additionalProperties: false
      example:
        isDefault: true
        operationCredentialId: 0
        name: name
      properties:
        operationCredentialId:
          format: int32
          nullable: true
          type: integer
        name:
          nullable: true
          type: string
        isDefault:
          type: boolean
      required:
      - isDefault
      - name
      - operationCredentialId
      type: object
    OperationCredentialsListDto:
      additionalProperties: false
      example:
        organizationId: 6
        isDefault: true
        organizationName: organizationName
        createdBy: createdBy
        isLocked: true
        lastModifiedBy: lastModifiedBy
        name: name
        prometheusUrl: prometheusUrl
        prometheusUsername: prometheusUsername
        rules:
        - prometheusRuleName: prometheusRuleName
          prometheusRuleId: 1
        - prometheusRuleName: prometheusRuleName
          prometheusRuleId: 1
        id: 0
        lastModified: lastModified
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        prometheusUsername:
          type: string
        prometheusUrl:
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        organizationName:
          type: string
        isLocked:
          type: boolean
        rules:
          items:
            $ref: "#/components/schemas/SimplePrometheusEntity"
          type: array
        createdBy:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        isDefault:
          type: boolean
      required:
      - createdBy
      - id
      - isDefault
      - isLocked
      - lastModified
      - lastModifiedBy
      - name
      - organizationId
      - organizationName
      - prometheusUrl
      - prometheusUsername
      - rules
      type: object
    OperationCredentialsMakeDefaultCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    OperationDto:
      additionalProperties: false
      example:
        projectId: 0
        operation: operation
      properties:
        projectId:
          format: int32
          type: integer
        operation:
          nullable: true
          type: string
      type: object
    OrganizationCreateCommand:
      additionalProperties: false
      example:
        country: country
        discountRate: 0.8008281904610115
        adminCloudCredentialId: 6
        address: address
        phone: phone
        billingEmail: billingEmail
        city: city
        name: name
        fullName: fullName
        isEligibleUpdateSubscription: true
        email: email
        vatNumber: vatNumber
      properties:
        name:
          nullable: true
          type: string
        fullName:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        billingEmail:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        vatNumber:
          nullable: true
          type: string
        discountRate:
          format: double
          nullable: true
          type: number
        isEligibleUpdateSubscription:
          type: boolean
        adminCloudCredentialId:
          format: int32
          nullable: true
          type: integer
      type: object
    OrganizationDetailsDto:
      additionalProperties: false
      example:
        country: country
        discountRate: 9.301444243932576
        projects: 1
        city: city
        cloudCredentials: 5
        isEligibleUpdateSubscription: true
        createdAt: createdAt
        isReadOnly: true
        servers: 5
        billingEmail: billingEmail
        isLocked: true
        id: 0
        email: email
        address: address
        partnerName: partnerName
        boundRules:
        - prometheusRuleName: prometheusRuleName
          ruleDiscountRate: 2.027123023002322
          prometheusRuleId: 3
        - prometheusRuleName: prometheusRuleName
          ruleDiscountRate: 2.027123023002322
          prometheusRuleId: 3
        trialEnded: true
        fullName: fullName
        isNew: true
        users: 6
        partner:
          domain: domain
          name: name
          link: link
          logo: logo
          id: 7
        phone: phone
        name: name
        partnerId: 2
        vatNumber: vatNumber
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        fullName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        billingEmail:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        vatNumber:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
        isEligibleUpdateSubscription:
          type: boolean
        isLocked:
          type: boolean
        isReadOnly:
          type: boolean
        isNew:
          type: boolean
        trialEnded:
          type: boolean
        users:
          format: int32
          type: integer
        projects:
          format: int32
          type: integer
        servers:
          format: int32
          type: integer
        cloudCredentials:
          format: int32
          type: integer
        createdAt:
          nullable: true
          type: string
        partnerId:
          format: int32
          nullable: true
          type: integer
        partnerName:
          nullable: true
          type: string
        partner:
          $ref: "#/components/schemas/PartnerDetailsForOrganizationsDto"
        discountRate:
          format: double
          type: number
        boundRules:
          items:
            $ref: "#/components/schemas/PrometheusEntity"
          nullable: true
          type: array
      type: object
    OrganizationDropdownDto:
      additionalProperties: false
      example:
        discountRate: 6.027456183070403
        isInfra: true
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        isInfra:
          type: boolean
        discountRate:
          format: double
          type: number
      type: object
    OrganizationEntityForDashboard:
      additionalProperties: false
      example:
        name: name
        id: 0
        users: 6
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        users:
          format: int32
          type: integer
      required:
      - id
      - name
      - users
      type: object
    OrganizationNameCheckerCommand:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          nullable: true
          type: string
      type: object
    OrganizationSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    OrganizationSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    OrganizationSubscriptionDto:
      additionalProperties: false
      example:
        organizationId: 6
        stripeSubscriptionId: stripeSubscriptionId
        organizationName: organizationName
        invoices:
        - isPaid: true
          endDate: 2000-01-23T04:56:07.000+00:00
          documentNumber: documentNumber
          price: 2.3021358869347655
          dueDate: 2000-01-23T04:56:07.000+00:00
          name: name
          organizationSubscriptionId: 5
          requiredPaymentAction: true
          stripeInvoiceId: stripeInvoiceId
          id: 5
          startDate: 2000-01-23T04:56:07.000+00:00
        - isPaid: true
          endDate: 2000-01-23T04:56:07.000+00:00
          documentNumber: documentNumber
          price: 2.3021358869347655
          dueDate: 2000-01-23T04:56:07.000+00:00
          name: name
          organizationSubscriptionId: 5
          requiredPaymentAction: true
          stripeInvoiceId: stripeInvoiceId
          id: 5
          startDate: 2000-01-23T04:56:07.000+00:00
        subscriptionType: subscriptionType
        endDate: 2000-01-23T04:56:07.000+00:00
        subscriptionName: subscriptionName
        id: 0
        subscriptionId: 1
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int32
          type: integer
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
        subscriptionId:
          format: int32
          type: integer
        stripeSubscriptionId:
          nullable: true
          type: string
        subscriptionType:
          nullable: true
          type: string
        subscriptionName:
          nullable: true
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
        invoices:
          items:
            $ref: "#/components/schemas/InvoiceDto"
          nullable: true
          type: array
      type: object
    OrganizationsList:
      additionalProperties: false
      example:
        data:
        - country: country
          discountRate: 9.301444243932576
          projects: 1
          city: city
          cloudCredentials: 5
          isEligibleUpdateSubscription: true
          createdAt: createdAt
          isReadOnly: true
          servers: 5
          billingEmail: billingEmail
          isLocked: true
          id: 0
          email: email
          address: address
          partnerName: partnerName
          boundRules:
          - prometheusRuleName: prometheusRuleName
            ruleDiscountRate: 2.027123023002322
            prometheusRuleId: 3
          - prometheusRuleName: prometheusRuleName
            ruleDiscountRate: 2.027123023002322
            prometheusRuleId: 3
          trialEnded: true
          fullName: fullName
          isNew: true
          users: 6
          partner:
            domain: domain
            name: name
            link: link
            logo: logo
            id: 7
          phone: phone
          name: name
          partnerId: 2
          vatNumber: vatNumber
        - country: country
          discountRate: 9.301444243932576
          projects: 1
          city: city
          cloudCredentials: 5
          isEligibleUpdateSubscription: true
          createdAt: createdAt
          isReadOnly: true
          servers: 5
          billingEmail: billingEmail
          isLocked: true
          id: 0
          email: email
          address: address
          partnerName: partnerName
          boundRules:
          - prometheusRuleName: prometheusRuleName
            ruleDiscountRate: 2.027123023002322
            prometheusRuleId: 3
          - prometheusRuleName: prometheusRuleName
            ruleDiscountRate: 2.027123023002322
            prometheusRuleId: 3
          trialEnded: true
          fullName: fullName
          isNew: true
          users: 6
          partner:
            domain: domain
            name: name
            link: link
            logo: logo
            id: 7
          phone: phone
          name: name
          partnerId: 2
          vatNumber: vatNumber
        totalCount: 4
      properties:
        data:
          items:
            $ref: "#/components/schemas/OrganizationDetailsDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    PackageAutocompleteDto:
      additionalProperties: false
      example:
        isTaikunLink: true
        options:
        - options
        - options
        description: description
        isQuestion: true
        type: Unknown
        value: value
        key: key
      properties:
        key:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        type:
          $ref: "#/components/schemas/ParameterType"
        isQuestion:
          type: boolean
        options:
          items:
            type: string
          nullable: true
          type: array
        isTaikunLink:
          type: boolean
      type: object
    ParameterType:
      enum:
      - Unknown
      - String
      - Boolean
      - Integer
      - Object
      - Array
      - Multiline
      type: string
    PartnerColorSettingsDto:
      additionalProperties: false
      example:
        itemBgActive: itemBgActive
        itemBgActiveHover: itemBgActiveHover
        bg: bg
        itemBg: itemBg
        itemBgHover: itemBgHover
        bgCollapsedSubItem: bgCollapsedSubItem
        itemTextActive: itemTextActive
        itemText: itemText
      properties:
        bg:
          nullable: true
          type: string
        bgCollapsedSubItem:
          nullable: true
          type: string
        itemText:
          nullable: true
          type: string
        itemBg:
          nullable: true
          type: string
        itemBgHover:
          nullable: true
          type: string
        itemTextActive:
          nullable: true
          type: string
        itemBgActive:
          nullable: true
          type: string
        itemBgActiveHover:
          nullable: true
          type: string
      required:
      - bg
      - bgCollapsedSubItem
      - itemBg
      - itemBgActive
      - itemBgActiveHover
      - itemBgHover
      - itemText
      - itemTextActive
      type: object
    PartnerDetailsDto:
      additionalProperties: false
      example:
        whiteListDomains:
        - name: name
          id: 6
        - name: name
          id: 6
        country: country
        address: address
        city: city
        link: link
        partnerImageSettings:
          expanded: expanded
          collapsed: collapsed
        paymentEnabled: true
        phone: phone
        domain: domain
        partnerColorSettings:
          itemBgActive: itemBgActive
          itemBgActiveHover: itemBgActiveHover
          bg: bg
          itemBg: itemBg
          itemBgHover: itemBgHover
          bgCollapsedSubItem: bgCollapsedSubItem
          itemTextActive: itemTextActive
          itemText: itemText
        name: name
        organizations:
        - name: name
          id: 5
        - name: name
          id: 5
        logo: logo
        requiredUserApproval: true
        id: 0
        allowRegistration: true
        email: email
        vatNumber: vatNumber
        backgroundImageUrl: backgroundImageUrl
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        link:
          nullable: true
          type: string
        domain:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        vatNumber:
          nullable: true
          type: string
        backgroundImageUrl:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
        logo:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        paymentEnabled:
          nullable: true
          type: boolean
        allowRegistration:
          nullable: true
          type: boolean
        requiredUserApproval:
          nullable: true
          type: boolean
        organizations:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        whiteListDomains:
          items:
            $ref: "#/components/schemas/WhiteListDomainDto"
          nullable: true
          type: array
        partnerColorSettings:
          $ref: "#/components/schemas/PartnerColorSettingsDto"
        partnerImageSettings:
          $ref: "#/components/schemas/PartnerImageSettingsDto"
      required:
      - address
      - allowRegistration
      - backgroundImageUrl
      - city
      - country
      - domain
      - email
      - id
      - link
      - logo
      - name
      - organizations
      - paymentEnabled
      - phone
      - requiredUserApproval
      - vatNumber
      - whiteListDomains
      type: object
    PartnerDetailsForOrganizationsDto:
      additionalProperties: false
      example:
        domain: domain
        name: name
        link: link
        logo: logo
        id: 7
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        link:
          nullable: true
          type: string
        domain:
          nullable: true
          type: string
        logo:
          nullable: true
          type: string
      type: object
    PartnerDetailsForSubscription:
      additionalProperties: false
      example:
        name: name
        link: link
        logo: logo
        id: 3
      properties:
        name:
          type: string
        logo:
          nullable: true
          type: string
        link:
          nullable: true
          type: string
        id:
          format: int32
          type: integer
      required:
      - id
      - link
      - logo
      - name
      type: object
    PartnerDetailsForUserDto:
      additionalProperties: false
      example:
        domain: domain
        name: name
        link: link
        logo: logo
        id: 1
      properties:
        name:
          type: string
        logo:
          nullable: true
          type: string
        link:
          nullable: true
          type: string
        domain:
          nullable: true
          type: string
        id:
          format: int32
          type: integer
      required:
      - domain
      - id
      - link
      - logo
      - name
      type: object
    PartnerEntity:
      additionalProperties: false
      example:
        partnerName: partnerName
        logo: logo
        partnerId: 0
      properties:
        partnerId:
          format: int32
          type: integer
        partnerName:
          type: string
        logo:
          nullable: true
          type: string
      required:
      - partnerId
      - partnerName
      type: object
    PartnerImageSettingsDto:
      additionalProperties: false
      example:
        expanded: expanded
        collapsed: collapsed
      properties:
        expanded:
          nullable: true
          type: string
        collapsed:
          nullable: true
          type: string
      required:
      - collapsed
      - expanded
      type: object
    PartnerRecordDto:
      additionalProperties: false
      example:
        partnerColorSettings:
          itemBgActive: itemBgActive
          itemBgActiveHover: itemBgActiveHover
          bg: bg
          itemBg: itemBg
          itemBgHover: itemBgHover
          bgCollapsedSubItem: bgCollapsedSubItem
          itemTextActive: itemTextActive
          itemText: itemText
        partnerImageSettings:
          expanded: expanded
          collapsed: collapsed
        id: 0
        allowRegistration: true
        paymentEnabled: true
        logoUrl: logoUrl
        backgroundImageUrl: backgroundImageUrl
      properties:
        id:
          format: int32
          type: integer
        logoUrl:
          nullable: true
          type: string
        backgroundImageUrl:
          nullable: true
          type: string
        paymentEnabled:
          type: boolean
        allowRegistration:
          type: boolean
        partnerColorSettings:
          $ref: "#/components/schemas/PartnerColorSettingsDto"
        partnerImageSettings:
          $ref: "#/components/schemas/PartnerImageSettingsDto"
      required:
      - allowRegistration
      - backgroundImageUrl
      - id
      - logoUrl
      - paymentEnabled
      type: object
    PartnersList:
      additionalProperties: false
      example:
        data:
        - whiteListDomains:
          - name: name
            id: 6
          - name: name
            id: 6
          country: country
          address: address
          city: city
          link: link
          partnerImageSettings:
            expanded: expanded
            collapsed: collapsed
          paymentEnabled: true
          phone: phone
          domain: domain
          partnerColorSettings:
            itemBgActive: itemBgActive
            itemBgActiveHover: itemBgActiveHover
            bg: bg
            itemBg: itemBg
            itemBgHover: itemBgHover
            bgCollapsedSubItem: bgCollapsedSubItem
            itemTextActive: itemTextActive
            itemText: itemText
          name: name
          organizations:
          - name: name
            id: 5
          - name: name
            id: 5
          logo: logo
          requiredUserApproval: true
          id: 0
          allowRegistration: true
          email: email
          vatNumber: vatNumber
          backgroundImageUrl: backgroundImageUrl
        - whiteListDomains:
          - name: name
            id: 6
          - name: name
            id: 6
          country: country
          address: address
          city: city
          link: link
          partnerImageSettings:
            expanded: expanded
            collapsed: collapsed
          paymentEnabled: true
          phone: phone
          domain: domain
          partnerColorSettings:
            itemBgActive: itemBgActive
            itemBgActiveHover: itemBgActiveHover
            bg: bg
            itemBg: itemBg
            itemBgHover: itemBgHover
            bgCollapsedSubItem: bgCollapsedSubItem
            itemTextActive: itemTextActive
            itemText: itemText
          name: name
          organizations:
          - name: name
            id: 5
          - name: name
            id: 5
          logo: logo
          requiredUserApproval: true
          id: 0
          allowRegistration: true
          email: email
          vatNumber: vatNumber
          backgroundImageUrl: backgroundImageUrl
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/PartnerDetailsDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PartnersSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    PartnersSearchList:
      additionalProperties: false
      example:
        data:
        - name: name
          logo: logo
          id: 0
        - name: name
          logo: logo
          id: 0
        totalCount: 6
      properties:
        data:
          items:
            $ref: "#/components/schemas/PartnersSearchResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PartnersSearchResponseData:
      additionalProperties: false
      example:
        name: name
        logo: logo
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        logo:
          nullable: true
          type: string
      type: object
    PatchKubernetesResourceCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        projectId: 0
        yaml: yaml
      properties:
        projectId:
          format: int32
          type: integer
        yaml:
          type: string
        name:
          type: string
        namespace:
          nullable: true
          type: string
      required:
      - name
      - projectId
      - yaml
      type: object
    PayInvoiceCommand:
      additionalProperties: false
      example:
        invoiceId: invoiceId
      properties:
        invoiceId:
          nullable: true
          type: string
      type: object
    PaymentWebhookCommand:
      additionalProperties: false
      type: object
    PdbSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        includePublicImportedClusters: true
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
        includePublicImportedClusters:
          nullable: true
          type: boolean
      type: object
    PdbSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchKubernetesResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PodDto:
      additionalProperties: false
      example:
        phase: phase
        node: node
        restartCount: 0
        namespace: namespace
        metadataName: metadataName
        age: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        metadataName:
          type: string
        status:
          nullable: true
          type: string
        restartCount:
          format: int32
          type: integer
        namespace:
          type: string
        age:
          format: date-time
          nullable: true
          type: string
        node:
          nullable: true
          type: string
        phase:
          nullable: true
          type: string
      required:
      - age
      - metadataName
      - namespace
      - node
      - phase
      - restartCount
      - status
      type: object
    PodsSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        includePublicImportedClusters: true
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
        includePublicImportedClusters:
          nullable: true
          type: boolean
      type: object
    PodsSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchKubernetesResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PrivateSubscriptionList:
      additionalProperties: false
      example:
        isEligibleToSwitch: true
        activeSubscriptionStatus: activeSubscriptionStatus
        data:
        - serverLimit: 1
          yearlyPrice: 7.061401241503109
          isDeprecated: true
          trialDays: 2
          cloudCredentialLimit: 5
          exceededCloudCredential: true
          exceededUser: true
          description: description
          monthlyPrice: 2.3021358869347655
          isActive: true
          isDemo: true
          isYearly: true
          projectLimit: 6
          partner:
            name: name
            link: link
            logo: logo
            id: 3
          exceededProject: true
          tcuPrice: 9.301444243932576
          name: name
          exceededServers: true
          isEnterprise: true
          currency: currency
          id: 0
          userLimit: 5
        - serverLimit: 1
          yearlyPrice: 7.061401241503109
          isDeprecated: true
          trialDays: 2
          cloudCredentialLimit: 5
          exceededCloudCredential: true
          exceededUser: true
          description: description
          monthlyPrice: 2.3021358869347655
          isActive: true
          isDemo: true
          isYearly: true
          projectLimit: 6
          partner:
            name: name
            link: link
            logo: logo
            id: 3
          exceededProject: true
          tcuPrice: 9.301444243932576
          name: name
          exceededServers: true
          isEnterprise: true
          currency: currency
          id: 0
          userLimit: 5
        totalCount: 4
      properties:
        data:
          items:
            $ref: "#/components/schemas/ListForPartnersDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
        isEligibleToSwitch:
          type: boolean
        activeSubscriptionStatus:
          nullable: true
          type: string
      required:
      - activeSubscriptionStatus
      - data
      - isEligibleToSwitch
      - totalCount
      type: object
    ProblemDetails:
      additionalProperties: {}
      example:
        instance: instance
        detail: detail
        type: type
        title: title
        status: 0
      properties:
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
      type: object
    ProjectActionVisibilityDto:
      additionalProperties: false
      example:
        repair:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        enableFullSpot:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        disableSpotVm:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        enableMonitoring:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        disableMonitoring:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        enableOpa:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        commit:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        enableSpotVm:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        disableBackup:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        disableAi:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        projectMaintenanceMode:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        detachAlertingProfile:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        disableOpa:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        lock:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        disableAutoscaler:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        enableAutoscaler:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        unlock:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        upgrade:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        aiAssistant:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        vmRepair:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        disableFullSpot:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        attachAlertingProfile:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        enableAi:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        enableSpotWorker:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        disableSpotWorker:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        vmCommit:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        addServer:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        addVm:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        enableBackup:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
      properties:
        commit:
          $ref: "#/components/schemas/ButtonStatusDto"
        repair:
          $ref: "#/components/schemas/ButtonStatusDto"
        upgrade:
          $ref: "#/components/schemas/ButtonStatusDto"
        enableMonitoring:
          $ref: "#/components/schemas/ButtonStatusDto"
        disableMonitoring:
          $ref: "#/components/schemas/ButtonStatusDto"
        enableBackup:
          $ref: "#/components/schemas/ButtonStatusDto"
        disableBackup:
          $ref: "#/components/schemas/ButtonStatusDto"
        enableOpa:
          $ref: "#/components/schemas/ButtonStatusDto"
        disableOpa:
          $ref: "#/components/schemas/ButtonStatusDto"
        enableAutoscaler:
          $ref: "#/components/schemas/ButtonStatusDto"
        disableAutoscaler:
          $ref: "#/components/schemas/ButtonStatusDto"
        vmRepair:
          $ref: "#/components/schemas/ButtonStatusDto"
        vmCommit:
          $ref: "#/components/schemas/ButtonStatusDto"
        lock:
          $ref: "#/components/schemas/ButtonStatusDto"
        unlock:
          $ref: "#/components/schemas/ButtonStatusDto"
        enableSpotWorker:
          $ref: "#/components/schemas/ButtonStatusDto"
        disableSpotWorker:
          $ref: "#/components/schemas/ButtonStatusDto"
        enableFullSpot:
          $ref: "#/components/schemas/ButtonStatusDto"
        disableFullSpot:
          $ref: "#/components/schemas/ButtonStatusDto"
        enableSpotVm:
          $ref: "#/components/schemas/ButtonStatusDto"
        disableSpotVm:
          $ref: "#/components/schemas/ButtonStatusDto"
        attachAlertingProfile:
          $ref: "#/components/schemas/ButtonStatusDto"
        detachAlertingProfile:
          $ref: "#/components/schemas/ButtonStatusDto"
        enableAi:
          $ref: "#/components/schemas/ButtonStatusDto"
        disableAi:
          $ref: "#/components/schemas/ButtonStatusDto"
        aiAssistant:
          $ref: "#/components/schemas/ButtonStatusDto"
        projectMaintenanceMode:
          $ref: "#/components/schemas/ButtonStatusDto"
        addServer:
          $ref: "#/components/schemas/ButtonStatusDto"
        addVm:
          $ref: "#/components/schemas/ButtonStatusDto"
      required:
      - addServer
      - addVm
      - aiAssistant
      - attachAlertingProfile
      - commit
      - detachAlertingProfile
      - disableAi
      - disableAutoscaler
      - disableBackup
      - disableFullSpot
      - disableMonitoring
      - disableOpa
      - disableSpotVm
      - disableSpotWorker
      - enableAi
      - enableAutoscaler
      - enableBackup
      - enableFullSpot
      - enableMonitoring
      - enableOpa
      - enableSpotVm
      - enableSpotWorker
      - lock
      - projectMaintenanceMode
      - repair
      - unlock
      - upgrade
      - vmCommit
      - vmRepair
      type: object
    ProjectAlertsQuery:
      additionalProperties: false
      example:
        mode: K8S
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        mode:
          $ref: "#/components/schemas/ProjectType"
      type: object
    ProjectAppDetailsDto:
      additionalProperties: false
      example:
        projectAppParams:
        - isEditableWhenInstalling: true
          value: value
          key: key
          isMandatory: true
          isEditableAfterInstallation: true
        - isEditableWhenInstalling: true
          value: value
          key: key
          isMandatory: true
          isEditableAfterInstallation: true
        catalogAppName: catalogAppName
        values: values
        taikunLinkEnabled: true
        packageId: packageId
        autoSync: true
        version: version
        catalogAppId: 5
        catalogName: catalogName
        appRepoName: appRepoName
        taikunLinkUrl: taikunLinkUrl
        catalogId: 6
        releaseNotes: releaseNotes
        helmResult: helmResult
        hasJsonSchema: true
        name: name
        namespace: namespace
        logo: logo
        id: 0
        projectName: projectName
        projectId: 1
        logs: logs
        status: None
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        namespace:
          type: string
        status:
          $ref: "#/components/schemas/EInstanceStatus"
        version:
          type: string
        catalogId:
          format: int32
          type: integer
        catalogName:
          type: string
        catalogAppName:
          type: string
        appRepoName:
          type: string
        logo:
          nullable: true
          type: string
        values:
          type: string
        autoSync:
          type: boolean
        releaseNotes:
          nullable: true
          type: string
        projectName:
          type: string
        helmResult:
          type: string
        projectId:
          format: int32
          type: integer
        hasJsonSchema:
          type: boolean
        catalogAppId:
          format: int32
          type: integer
        packageId:
          type: string
        logs:
          nullable: true
          type: string
        taikunLinkUrl:
          nullable: true
          type: string
        taikunLinkEnabled:
          type: boolean
        projectAppParams:
          items:
            $ref: "#/components/schemas/ProjectAppParamDto"
          nullable: true
          type: array
      required:
      - appRepoName
      - autoSync
      - catalogAppId
      - catalogAppName
      - catalogId
      - catalogName
      - hasJsonSchema
      - helmResult
      - id
      - logo
      - logs
      - name
      - namespace
      - packageId
      - projectAppParams
      - projectId
      - projectName
      - releaseNotes
      - status
      - values
      - version
      type: object
    ProjectAppDto:
      additionalProperties: false
      example:
        isLocked: true
        name: name
        namespace: namespace
        autoSync: true
        id: 5
        projectName: projectName
        projectId: 5
        version: version
        status: None
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        projectName:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
        version:
          nullable: true
          type: string
        isLocked:
          type: boolean
        status:
          $ref: "#/components/schemas/EInstanceStatus"
        autoSync:
          type: boolean
      type: object
    ProjectAppList:
      additionalProperties: false
      example:
        data:
        - catalogAppName: catalogAppName
          created: created
          lastModifiedBy: lastModifiedBy
          autoSync: true
          version: version
          catalogAppId: 1
          catalogName: catalogName
          appRepoName: appRepoName
          catalogId: 6
          createdBy: createdBy
          name: name
          namespace: namespace
          logo: logo
          id: 0
          lastModified: lastModified
          projectName: projectName
          projectId: 5
          logs: logs
          status: None
        - catalogAppName: catalogAppName
          created: created
          lastModifiedBy: lastModifiedBy
          autoSync: true
          version: version
          catalogAppId: 1
          catalogName: catalogName
          appRepoName: appRepoName
          catalogId: 6
          createdBy: createdBy
          name: name
          namespace: namespace
          logo: logo
          id: 0
          lastModified: lastModified
          projectName: projectName
          projectId: 5
          logs: logs
          status: None
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/InstanceAppListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    ProjectAppParamDto:
      additionalProperties: false
      example:
        isEditableWhenInstalling: true
        value: value
        key: key
        isMandatory: true
        isEditableAfterInstallation: true
      properties:
        key:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
        isEditableWhenInstalling:
          type: boolean
        isEditableAfterInstallation:
          type: boolean
        isMandatory:
          type: boolean
      required:
      - isEditableAfterInstallation
      - isEditableWhenInstalling
      - isMandatory
      - key
      - value
      type: object
    ProjectAppParamsDto:
      additionalProperties: false
      example:
        value: value
        key: key
      properties:
        key:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    ProjectCanAddVClusterDto:
      additionalProperties: false
      example:
        addVCluster:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
      properties:
        addVCluster:
          $ref: "#/components/schemas/ButtonStatusDto"
      required:
      - addVCluster
      type: object
    ProjectCatalogDto:
      additionalProperties: false
      example:
        cloudType: AWS
        isLocked: true
        name: name
        health: "Null"
        id: 1
        isVirtualCluster: true
        maintenanceModeEnabled: true
        kubernetesVersion: kubernetesVersion
        status: "Null"
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        kubernetesVersion:
          nullable: true
          type: string
        isLocked:
          type: boolean
        maintenanceModeEnabled:
          type: boolean
        isVirtualCluster:
          type: boolean
        cloudType:
          $ref: "#/components/schemas/ECloudCredentialType"
        status:
          $ref: "#/components/schemas/ProjectStatus"
        health:
          $ref: "#/components/schemas/ProjectHealth"
      type: object
    ProjectChartDto:
      additionalProperties: false
      example:
        failedToImport:
        - expiredAt: expiredAt
          name: name
          id: 1
        - expiredAt: expiredAt
          name: name
          id: 1
        updating:
        - expiredAt: expiredAt
          name: name
          id: 1
        - expiredAt: expiredAt
          name: name
          id: 1
        deleting:
        - expiredAt: expiredAt
          name: name
          id: 1
        - expiredAt: expiredAt
          name: name
          id: 1
        failed:
        - expiredAt: expiredAt
          name: name
          id: 1
        - expiredAt: expiredAt
          name: name
          id: 1
        totalCount: 5
        succeeded:
        - expiredAt: expiredAt
          name: name
          id: 1
        - expiredAt: expiredAt
          name: name
          id: 1
        purging:
        - expiredAt: expiredAt
          name: name
          id: 1
        - expiredAt: expiredAt
          name: name
          id: 1
        importing:
        - expiredAt: expiredAt
          name: name
          id: 1
        - expiredAt: expiredAt
          name: name
          id: 1
      properties:
        succeeded:
          items:
            $ref: "#/components/schemas/ProjectCommonRecordDto"
          nullable: true
          type: array
        updating:
          items:
            $ref: "#/components/schemas/ProjectCommonRecordDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
        failed:
          items:
            $ref: "#/components/schemas/ProjectCommonRecordDto"
          nullable: true
          type: array
        purging:
          items:
            $ref: "#/components/schemas/ProjectCommonRecordDto"
          nullable: true
          type: array
        deleting:
          items:
            $ref: "#/components/schemas/ProjectCommonRecordDto"
          nullable: true
          type: array
        importing:
          items:
            $ref: "#/components/schemas/ProjectCommonRecordDto"
          nullable: true
          type: array
        failedToImport:
          items:
            $ref: "#/components/schemas/ProjectCommonRecordDto"
          nullable: true
          type: array
      type: object
    ProjectCommonRecordDto:
      additionalProperties: false
      example:
        expiredAt: expiredAt
        name: name
        id: 1
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        expiredAt:
          nullable: true
          type: string
      type: object
    ProjectDeploymentCommitCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    ProjectDeploymentDeleteServersCommand:
      additionalProperties: false
      example:
        forceDeleteVClusters: true
        deleteAutoscalingServers: true
        projectId: 0
        serverIds:
        - 6
        - 6
      properties:
        projectId:
          format: int32
          type: integer
        serverIds:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        forceDeleteVClusters:
          type: boolean
        deleteAutoscalingServers:
          type: boolean
      type: object
    ProjectDeploymentDeleteVmsCommand:
      additionalProperties: false
      example:
        vmIds:
        - 6
        - 6
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        vmIds:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
      type: object
    ProjectDeploymentRepairCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    ProjectDeploymentRepairVmCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    ProjectDescribeDto:
      additionalProperties: false
      example:
        vmsCount: 1
        flavors:
        - flavors
        - flavors
        images:
        - images
        - images
        accessIp: accessIp
        alertsCount: 5
        lastModifiedBy: lastModifiedBy
        isMonitoringEnabled: true
        createdBy: createdBy
        isAutoUpgradeEnabled: true
        isBackupEnabled: true
        serversCount: 6
        lastModified: lastModified
        projectName: projectName
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
        isMonitoringEnabled:
          type: boolean
        isBackupEnabled:
          type: boolean
        isAutoUpgradeEnabled:
          type: boolean
        serversCount:
          format: int32
          type: integer
        vmsCount:
          format: int32
          type: integer
        alertsCount:
          format: int32
          type: integer
        lastModifiedBy:
          nullable: true
          type: string
        createdBy:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        flavors:
          items:
            type: string
          nullable: true
          type: array
        images:
          items:
            type: string
          nullable: true
          type: array
        accessIp:
          nullable: true
          type: string
      type: object
    ProjectDetailsErrorListDto:
      additionalProperties: false
      example:
        kind: K8S
        type: danger
        message:
        - message
        - message
      properties:
        type:
          $ref: "#/components/schemas/ProjectDetailsErrorType"
        message:
          items:
            type: string
          nullable: true
          type: array
        kind:
          $ref: "#/components/schemas/ProjectType"
      type: object
    ProjectDetailsErrorType:
      enum:
      - danger
      - info
      - warning
      type: string
    ProjectDetailsForServersDto:
      additionalProperties: false
      example:
        spotEnabled: true
        isOpaEnabled: true
        opaProfileId: 3
        availabilityZones:
        - availabilityZones
        - availabilityZones
        organizationId: 7
        diskSize: 7.058770351582356
        usedRam: 9
        cloudType: AWS
        cloudId: 1
        isLocked: true
        accessProfileName: accessProfileName
        kubernetesProfileId: 6
        minSize: 7
        bastion: 7
        id: 1
        worker: 4
        kubernetesVersion: kubernetesVersion
        usedCpu: 9
        vmVolumeSizeLimit: 6
        isAutoscalingSpotEnabled: true
        isAutoscalingEnabled: true
        isAutoUpgrade: true
        kubernetesProfileName: kubernetesProfileName
        accessIp: accessIp
        organizationName: organizationName
        hasSelectedFlavors: true
        isDrsEnabled: true
        cpuLimit: 1
        quotaId: 6
        vmUsedCpu: 3
        allowSpotWorkers: true
        maxSpotPrice: 6.519180951018382
        vmRamLimit: 9
        flavor: flavor
        vmUsedRam: 6
        proxmoxStorage: NFS
        usedDiskSize: 6
        vmUsedVolumeSize: 1
        name: name
        allowFullSpotKubernetes: true
        status: "Null"
        accessProfileId: 2
        maxSize: 0
        autoscalingGroupName: autoscalingGroupName
        expiredAt: expiredAt
        alertingProfileName: alertingProfileName
        hasNfsServer: true
        totalHourlyCost: 3.0937452626664474
        ramLimit: 4
        opaProfileName: opaProfileName
        s3CredentialId: 5
        isProjectMaintenanceModeEnabled: true
        isDeprecated: true
        alertsCount: 2
        allowSpotVMs: true
        vmCpuLimit: 8
        aiCredentialId: 6
        aiEnabled: true
        isMonitoringEnabled: true
        health: "Null"
        diskSizeLimit: 5
        masterReady: 1
        hasKubeConfigFile: true
        alertingProfileId: 6
        wasmEnabled: true
        cloudName: cloudName
        isBackupEnabled: true
        hypervisors:
        - hypervisors
        - hypervisors
        certificationExpiredAt: certificationExpiredAt
        isMaintenanceModeEnabled: true
      properties:
        alertsCount:
          format: int32
          type: integer
        worker:
          format: int32
          type: integer
        bastion:
          format: int32
          type: integer
        status:
          $ref: "#/components/schemas/ProjectStatus"
        name:
          type: string
        accessIp:
          type: string
        id:
          format: int32
          type: integer
        masterReady:
          format: int32
          type: integer
        cloudType:
          $ref: "#/components/schemas/ECloudCredentialType"
        cloudName:
          type: string
        cloudId:
          format: int32
          type: integer
        quotaId:
          format: int32
          type: integer
        organizationName:
          type: string
        organizationId:
          format: int32
          type: integer
        kubernetesVersion:
          type: string
        isBackupEnabled:
          type: boolean
        aiEnabled:
          type: boolean
        isLocked:
          type: boolean
        isAutoUpgrade:
          type: boolean
        isMonitoringEnabled:
          type: boolean
        isOpaEnabled:
          type: boolean
        hasKubeConfigFile:
          type: boolean
        hasSelectedFlavors:
          type: boolean
        isMaintenanceModeEnabled:
          type: boolean
        isProjectMaintenanceModeEnabled:
          type: boolean
        isDeprecated:
          type: boolean
        cpuLimit:
          format: int64
          type: integer
        ramLimit:
          format: int64
          type: integer
        diskSizeLimit:
          format: int64
          type: integer
        usedCpu:
          format: int64
          type: integer
        usedRam:
          format: int64
          type: integer
        usedDiskSize:
          format: int64
          type: integer
        vmCpuLimit:
          format: int64
          type: integer
        vmRamLimit:
          format: int64
          type: integer
        vmVolumeSizeLimit:
          format: int64
          type: integer
        vmUsedCpu:
          format: int64
          type: integer
        vmUsedRam:
          format: int64
          type: integer
        vmUsedVolumeSize:
          format: int64
          type: integer
        accessProfileName:
          type: string
        accessProfileId:
          format: int32
          nullable: true
          type: integer
        kubernetesProfileName:
          type: string
        kubernetesProfileId:
          format: int32
          nullable: true
          type: integer
        alertingProfileName:
          type: string
        health:
          $ref: "#/components/schemas/ProjectHealth"
        alertingProfileId:
          format: int32
          nullable: true
          type: integer
        s3CredentialId:
          format: int32
          nullable: true
          type: integer
        aiCredentialId:
          format: int32
          nullable: true
          type: integer
        expiredAt:
          type: string
        certificationExpiredAt:
          type: string
        opaProfileId:
          format: int32
          nullable: true
          type: integer
        opaProfileName:
          type: string
        allowFullSpotKubernetes:
          type: boolean
        allowSpotWorkers:
          type: boolean
        allowSpotVMs:
          type: boolean
        totalHourlyCost:
          format: double
          type: number
        autoscalingGroupName:
          type: string
        minSize:
          format: int32
          nullable: true
          type: integer
        maxSize:
          format: int32
          nullable: true
          type: integer
        diskSize:
          format: double
          nullable: true
          type: number
        flavor:
          nullable: true
          type: string
        spotEnabled:
          nullable: true
          type: boolean
        isAutoscalingEnabled:
          type: boolean
        isAutoscalingSpotEnabled:
          type: boolean
        hasNfsServer:
          type: boolean
        wasmEnabled:
          type: boolean
        availabilityZones:
          items:
            type: string
          type: array
        hypervisors:
          items:
            type: string
          type: array
        proxmoxStorage:
          $ref: "#/components/schemas/ProxmoxStorage"
        isDrsEnabled:
          type: boolean
        maxSpotPrice:
          format: double
          nullable: true
          type: number
      required:
      - accessIp
      - accessProfileId
      - accessProfileName
      - aiCredentialId
      - aiEnabled
      - alertingProfileId
      - alertingProfileName
      - alertsCount
      - allowFullSpotKubernetes
      - allowSpotVMs
      - allowSpotWorkers
      - autoscalingGroupName
      - availabilityZones
      - bastion
      - certificationExpiredAt
      - cloudId
      - cloudName
      - cloudType
      - cpuLimit
      - diskSize
      - diskSizeLimit
      - expiredAt
      - flavor
      - hasKubeConfigFile
      - hasNfsServer
      - hasSelectedFlavors
      - health
      - hypervisors
      - id
      - isAutoUpgrade
      - isAutoscalingEnabled
      - isAutoscalingSpotEnabled
      - isBackupEnabled
      - isDeprecated
      - isDrsEnabled
      - isLocked
      - isMaintenanceModeEnabled
      - isMonitoringEnabled
      - isOpaEnabled
      - isProjectMaintenanceModeEnabled
      - kubernetesProfileId
      - kubernetesProfileName
      - kubernetesVersion
      - masterReady
      - maxSize
      - maxSpotPrice
      - minSize
      - name
      - opaProfileId
      - opaProfileName
      - organizationId
      - organizationName
      - proxmoxStorage
      - quotaId
      - ramLimit
      - s3CredentialId
      - spotEnabled
      - status
      - totalHourlyCost
      - usedCpu
      - usedDiskSize
      - usedRam
      - vmCpuLimit
      - vmRamLimit
      - vmUsedCpu
      - vmUsedRam
      - vmUsedVolumeSize
      - vmVolumeSizeLimit
      - wasmEnabled
      - worker
      type: object
    ProjectDetailsForVmsDto:
      additionalProperties: false
      example:
        isProjectMaintenanceModeEnabled: true
        organizationName: organizationName
        hasSelectedFlavors: true
        isDrsEnabled: true
        allowSpotVMs: true
        cloudCredentialRevision: 6
        availabilityZones:
        - availabilityZones
        - availabilityZones
        allowSpotWorkers: true
        maxSpotPrice: 7.457744773683766
        organizationId: 1
        expiredAt: expiredAt
        cloudType: AWS
        cloudName: cloudName
        cloudId: 1
        isLocked: true
        name: name
        allowFullSpotKubernetes: true
        hypervisors:
        - hypervisors
        - hypervisors
        id: 7
        totalHourlyCost: 1.1730742509559433
        projectCloudRevision: 1
        status: "Null"
        isMaintenanceModeEnabled: true
      properties:
        status:
          $ref: "#/components/schemas/ProjectStatus"
        name:
          type: string
        id:
          format: int32
          type: integer
        cloudType:
          $ref: "#/components/schemas/ECloudCredentialType"
        cloudName:
          type: string
        cloudId:
          format: int32
          nullable: true
          type: integer
        organizationName:
          type: string
        organizationId:
          format: int32
          type: integer
        isLocked:
          type: boolean
        isProjectMaintenanceModeEnabled:
          type: boolean
        hasSelectedFlavors:
          nullable: true
          type: boolean
        isMaintenanceModeEnabled:
          type: boolean
        isDrsEnabled:
          type: boolean
        projectCloudRevision:
          format: int32
          nullable: true
          type: integer
        cloudCredentialRevision:
          format: int32
          nullable: true
          type: integer
        allowFullSpotKubernetes:
          type: boolean
        allowSpotWorkers:
          type: boolean
        allowSpotVMs:
          type: boolean
        maxSpotPrice:
          format: double
          nullable: true
          type: number
        totalHourlyCost:
          format: double
          type: number
        availabilityZones:
          items:
            type: string
          nullable: true
          type: array
        hypervisors:
          items:
            type: string
          nullable: true
          type: array
        expiredAt:
          nullable: true
          type: string
      required:
      - allowFullSpotKubernetes
      - allowSpotVMs
      - allowSpotWorkers
      - availabilityZones
      - cloudCredentialRevision
      - cloudId
      - cloudName
      - cloudType
      - expiredAt
      - hasSelectedFlavors
      - hypervisors
      - id
      - isDrsEnabled
      - isLocked
      - isMaintenanceModeEnabled
      - isProjectMaintenanceModeEnabled
      - maxSpotPrice
      - name
      - organizationId
      - organizationName
      - projectCloudRevision
      - status
      - totalHourlyCost
      type: object
    ProjectDto:
      additionalProperties: false
      example:
        projectName: projectName
        projectId: 6
      properties:
        projectId:
          format: int32
          type: integer
        projectName:
          type: string
      required:
      - projectId
      - projectName
      type: object
    ProjectExtendLifeTimeCommand:
      additionalProperties: false
      example:
        deleteOnExpiration: true
        expireAt: 2000-01-23T04:56:07.000+00:00
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        expireAt:
          format: date-time
          nullable: true
          type: string
        deleteOnExpiration:
          type: boolean
      type: object
    ProjectGroupDetailsListDto:
      additionalProperties: false
      example:
        organizationId: 6
        userGroups:
        - name: name
          id: 5
        - name: name
          id: 5
        projects:
        - name: name
          id: 1
        - name: name
          id: 1
        organizationName: organizationName
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
        projects:
          items:
            $ref: "#/components/schemas/ProjectListDto"
          nullable: true
          type: array
        userGroups:
          items:
            $ref: "#/components/schemas/UserGroupEntityListDto"
          nullable: true
          type: array
      required:
      - id
      - name
      - organizationId
      - organizationName
      - projects
      - userGroups
      type: object
    ProjectGroupEntityListDto:
      additionalProperties: false
      example:
        name: name
        id: 1
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      required:
      - id
      - name
      type: object
    ProjectGroupList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          userGroups:
          - name: name
            id: 5
          - name: name
            id: 5
          projects:
          - name: name
            id: 1
          - name: name
            id: 1
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          userGroups:
          - name: name
            id: 5
          - name: name
            id: 5
          projects:
          - name: name
            id: 1
          - name: name
            id: 1
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/ProjectGroupDetailsListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    ProjectHealth:
      enum:
      - "Null"
      - Healthy
      - None
      - Unhealthy
      - Unknown
      - Warning
      type: string
    ProjectInfracost:
      additionalProperties: false
      example:
        pastBreakdown:
          totalMonthlyCost: totalMonthlyCost
          resources:
          - metadata:
              key: ""
            monthlyUsageCost: monthlyUsageCost
            name: name
            hourlyCost: hourlyCost
            subresources:
            - metadata:
                key: ""
              name: name
              hourlyCost: hourlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
            - metadata:
                key: ""
              name: name
              hourlyCost: hourlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
            costComponents:
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            monthlyCost: monthlyCost
            resourceType: resourceType
            tags:
              key: tags
          - metadata:
              key: ""
            monthlyUsageCost: monthlyUsageCost
            name: name
            hourlyCost: hourlyCost
            subresources:
            - metadata:
                key: ""
              name: name
              hourlyCost: hourlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
            - metadata:
                key: ""
              name: name
              hourlyCost: hourlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
            costComponents:
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            monthlyCost: monthlyCost
            resourceType: resourceType
            tags:
              key: tags
          totalHourlyCost: totalHourlyCost
          totalMonthlyUsageCost: totalMonthlyUsageCost
        summary:
          totalUnsupportedResources: 1
          totalUsageBasedResources: 5
          totalNoPriceResources: 5
          noPriceResourceCounts:
            key: 7
          totalDetectedResources: 0
          totalSupportedResources: 6
          unsupportedResourceCounts:
            key: 2
        metadata:
          vcsSubPath: vcsSubPath
          path: path
          type: type
          providers:
          - name: name
          - name: name
        displayName: displayName
        breakdown:
          totalMonthlyCost: totalMonthlyCost
          resources:
          - metadata:
              key: ""
            monthlyUsageCost: monthlyUsageCost
            name: name
            hourlyCost: hourlyCost
            subresources:
            - metadata:
                key: ""
              name: name
              hourlyCost: hourlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
            - metadata:
                key: ""
              name: name
              hourlyCost: hourlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
            costComponents:
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            monthlyCost: monthlyCost
            resourceType: resourceType
            tags:
              key: tags
          - metadata:
              key: ""
            monthlyUsageCost: monthlyUsageCost
            name: name
            hourlyCost: hourlyCost
            subresources:
            - metadata:
                key: ""
              name: name
              hourlyCost: hourlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
            - metadata:
                key: ""
              name: name
              hourlyCost: hourlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
            costComponents:
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            monthlyCost: monthlyCost
            resourceType: resourceType
            tags:
              key: tags
          totalHourlyCost: totalHourlyCost
          totalMonthlyUsageCost: totalMonthlyUsageCost
        name: name
        diff:
          totalMonthlyCost: totalMonthlyCost
          resources:
          - metadata:
              key: ""
            monthlyUsageCost: monthlyUsageCost
            name: name
            hourlyCost: hourlyCost
            subresources:
            - metadata:
                key: ""
              name: name
              hourlyCost: hourlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
            - metadata:
                key: ""
              name: name
              hourlyCost: hourlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
            costComponents:
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            monthlyCost: monthlyCost
            resourceType: resourceType
            tags:
              key: tags
          - metadata:
              key: ""
            monthlyUsageCost: monthlyUsageCost
            name: name
            hourlyCost: hourlyCost
            subresources:
            - metadata:
                key: ""
              name: name
              hourlyCost: hourlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
            - metadata:
                key: ""
              name: name
              hourlyCost: hourlyCost
              costComponents:
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              - unit: unit
                hourlyQuantity: hourlyQuantity
                price: price
                name: name
                hourlyCost: hourlyCost
                monthlyQuantity: monthlyQuantity
                usageBased: true
                priceNotFound: true
                monthlyCost: monthlyCost
              monthlyCost: monthlyCost
            costComponents:
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            - unit: unit
              hourlyQuantity: hourlyQuantity
              price: price
              name: name
              hourlyCost: hourlyCost
              monthlyQuantity: monthlyQuantity
              usageBased: true
              priceNotFound: true
              monthlyCost: monthlyCost
            monthlyCost: monthlyCost
            resourceType: resourceType
            tags:
              key: tags
          totalHourlyCost: totalHourlyCost
          totalMonthlyUsageCost: totalMonthlyUsageCost
      properties:
        name:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
        metadata:
          $ref: "#/components/schemas/ProjectMetadata"
        pastBreakdown:
          $ref: "#/components/schemas/Breakdown"
        breakdown:
          $ref: "#/components/schemas/Breakdown"
        diff:
          $ref: "#/components/schemas/Diff"
        summary:
          $ref: "#/components/schemas/Summary"
      type: object
    ProjectListDetailDto:
      additionalProperties: false
      example:
        boundUsers:
        - userName: userName
          userId: userId
        - userName: userName
          userId: userId
        deleteButton:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        lockButton:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        certificateExpiredAt: certificateExpiredAt
        opaProfileId: 4
        organizationId: 6
        createdAt: createdAt
        totalStandaloneVmsCount: 5
        parentProjectId: 3
        cloudType: AWS
        isLocked: true
        id: 0
        setExpirationDateButton:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        isAutoscalingSpotEnabled: true
        isAutoscalingEnabled: true
        isKubernetes: true
        organizationName: organizationName
        unlockButton:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        anyServer: true
        quotaId: 2
        isVirtualCluster: true
        cloudCredentialName: cloudCredentialName
        allowSpotWorkers: true
        maxSpotPrice: 7.061401241503109
        name: name
        kubernetesCurrentVersion: kubernetesCurrentVersion
        allowFullSpotKubernetes: true
        lastModified: lastModified
        status: "Null"
        allUsers:
        - allUsers
        - allUsers
        totalServersCount: 5
        importClusterType: None
        anyVm: true
        expiredAt: expiredAt
        projectAction: true
        totalHourlyCost: 9.301444243932576
        kubesprayTargetVersion: kubesprayTargetVersion
        isProjectMaintenanceModeEnabled: true
        alertsCount: 1
        allowSpotVMs: true
        kubernetesTargetVersion: kubernetesTargetVersion
        lastModifiedBy: lastModifiedBy
        aiEnabled: true
        isMonitoringEnabled: true
        health: "Null"
        kubesprayCurrentVersion: kubesprayCurrentVersion
        hasKubeConfigFile: true
        kubeInfoButton:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        deleteOnExpiration: true
        alertingProfileId: 2
        eImportClusterType: CloudCredential
        createdBy: createdBy
        isBackupEnabled: true
        hasExpirationWarning: true
        resetStatusButton:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        isMaintenanceModeEnabled: true
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        isKubernetes:
          type: boolean
        isLocked:
          type: boolean
        isVirtualCluster:
          type: boolean
        isMonitoringEnabled:
          type: boolean
        hasKubeConfigFile:
          type: boolean
        isMaintenanceModeEnabled:
          type: boolean
        cloudCredentialName:
          nullable: true
          type: string
        organizationName:
          type: string
        organizationId:
          format: int32
          type: integer
        status:
          $ref: "#/components/schemas/ProjectStatus"
        health:
          $ref: "#/components/schemas/ProjectHealth"
        cloudType:
          $ref: "#/components/schemas/ECloudCredentialType"
        kubesprayCurrentVersion:
          type: string
        kubesprayTargetVersion:
          type: string
        kubernetesCurrentVersion:
          type: string
        kubernetesTargetVersion:
          type: string
        createdAt:
          type: string
        alertsCount:
          format: int32
          type: integer
        totalServersCount:
          format: int32
          type: integer
        totalStandaloneVmsCount:
          format: int32
          type: integer
        boundUsers:
          items:
            $ref: "#/components/schemas/UserDto"
          type: array
        createdBy:
          type: string
        lastModified:
          nullable: true
          type: string
        expiredAt:
          nullable: true
          type: string
        deleteOnExpiration:
          type: boolean
        certificateExpiredAt:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        quotaId:
          format: int32
          type: integer
        allowFullSpotKubernetes:
          type: boolean
        allowSpotWorkers:
          type: boolean
        allowSpotVMs:
          type: boolean
        maxSpotPrice:
          format: double
          nullable: true
          type: number
        projectAction:
          type: boolean
        hasExpirationWarning:
          type: boolean
        totalHourlyCost:
          format: double
          type: number
        isAutoscalingEnabled:
          type: boolean
        isAutoscalingSpotEnabled:
          type: boolean
        aiEnabled:
          type: boolean
        anyServer:
          type: boolean
        anyVm:
          type: boolean
        isBackupEnabled:
          type: boolean
        isProjectMaintenanceModeEnabled:
          type: boolean
        allUsers:
          items:
            type: string
          type: array
        parentProjectId:
          format: int32
          nullable: true
          type: integer
        alertingProfileId:
          format: int32
          nullable: true
          type: integer
        opaProfileId:
          format: int32
          nullable: true
          type: integer
        lockButton:
          $ref: "#/components/schemas/ButtonStatusDto"
        unlockButton:
          $ref: "#/components/schemas/ButtonStatusDto"
        deleteButton:
          $ref: "#/components/schemas/ButtonStatusDto"
        kubeInfoButton:
          $ref: "#/components/schemas/ButtonStatusDto"
        setExpirationDateButton:
          $ref: "#/components/schemas/ButtonStatusDto"
        resetStatusButton:
          $ref: "#/components/schemas/ButtonStatusDto"
        importClusterType:
          $ref: "#/components/schemas/ImportClusterType"
        eImportClusterType:
          $ref: "#/components/schemas/EImportClusterType"
      required:
      - aiEnabled
      - alertingProfileId
      - alertsCount
      - allUsers
      - allowFullSpotKubernetes
      - allowSpotVMs
      - allowSpotWorkers
      - anyServer
      - anyVm
      - boundUsers
      - certificateExpiredAt
      - cloudType
      - createdAt
      - createdBy
      - deleteOnExpiration
      - expiredAt
      - hasExpirationWarning
      - hasKubeConfigFile
      - health
      - id
      - importClusterType
      - isAutoscalingEnabled
      - isAutoscalingSpotEnabled
      - isBackupEnabled
      - isKubernetes
      - isLocked
      - isMaintenanceModeEnabled
      - isMonitoringEnabled
      - isProjectMaintenanceModeEnabled
      - isVirtualCluster
      - kubernetesCurrentVersion
      - kubernetesTargetVersion
      - kubesprayCurrentVersion
      - kubesprayTargetVersion
      - lastModified
      - lastModifiedBy
      - maxSpotPrice
      - name
      - opaProfileId
      - organizationId
      - organizationName
      - parentProjectId
      - projectAction
      - quotaId
      - status
      - totalHourlyCost
      - totalServersCount
      - totalStandaloneVmsCount
      type: object
    ProjectListDto:
      additionalProperties: false
      example:
        name: name
        id: 1
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      required:
      - id
      - name
      type: object
    ProjectListForAlert:
      additionalProperties: false
      example:
        isKubernetes: true
        totalServersCount: 5
        health: health
        isMonitoringEnabled: true
        hasKubeConfigFile: true
        token: token
        organizationId: 6
        monitoringCredential:
          lokiUrl: lokiUrl
          password: password
          alertManagerUrl: alertManagerUrl
          prometheusUrl: prometheusUrl
          username: username
        isLocked: true
        name: name
        kubernetesAlerts:
        - severity: severity
          lastModifiedBy: lastModifiedBy
          description: description
          title: title
          endAt: endAt
          silenceReason: silenceReason
          labels: ""
          isSolved: true
          isSilenced: true
          fingerprint: fingerprint
          startsAt: startsAt
          id: 1
          projectName: projectName
          projectId: 5
          status: status
        - severity: severity
          lastModifiedBy: lastModifiedBy
          description: description
          title: title
          endAt: endAt
          silenceReason: silenceReason
          labels: ""
          isSolved: true
          isSilenced: true
          fingerprint: fingerprint
          startsAt: startsAt
          id: 1
          projectName: projectName
          projectId: 5
          status: status
        kubernetesCurrentVersion: kubernetesCurrentVersion
        id: 0
        status: status
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        token:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        organizationId:
          format: int32
          type: integer
        health:
          nullable: true
          type: string
        isKubernetes:
          type: boolean
        isLocked:
          type: boolean
        isMonitoringEnabled:
          type: boolean
        hasKubeConfigFile:
          type: boolean
        monitoringCredential:
          $ref: "#/components/schemas/MonitoringCredentialsListDto"
        kubernetesAlerts:
          items:
            $ref: "#/components/schemas/KubernetesAlertDtoForPoller"
          nullable: true
          type: array
        kubernetesCurrentVersion:
          nullable: true
          type: string
        totalServersCount:
          format: int32
          type: integer
      required:
      - hasKubeConfigFile
      - health
      - id
      - isKubernetes
      - isLocked
      - isMonitoringEnabled
      - kubernetesAlerts
      - kubernetesCurrentVersion
      - monitoringCredential
      - name
      - organizationId
      - status
      - token
      - totalServersCount
      type: object
    ProjectLockManagerCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    ProjectMaintenanceModeCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    ProjectMetadata:
      additionalProperties: false
      example:
        vcsSubPath: vcsSubPath
        path: path
        type: type
        providers:
        - name: name
        - name: name
      properties:
        path:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
        vcsSubPath:
          nullable: true
          type: string
        providers:
          items:
            $ref: "#/components/schemas/Provider"
          nullable: true
          type: array
      type: object
    ProjectMonitoringAlertsDto:
      additionalProperties: false
      example:
        data:
          groups:
          - lastEvaluation: 2000-01-23T04:56:07.000+00:00
            file: file
            name: name
            rules:
            - duration: 0
              alerts:
              - activeAt: 2000-01-23T04:56:07.000+00:00
                annotations:
                  description: description
                  title: title
                state: state
                value: value
                labels:
                  container: container
                  severity: severity
                  instance: instance
                  pod: pod
                  alertname: alertname
                  daemonset: daemonset
                  node: node
                  condition: condition
                  endpoint: endpoint
                  service: service
                  namespace: namespace
                  job: job
                  status: status
              - activeAt: 2000-01-23T04:56:07.000+00:00
                annotations:
                  description: description
                  title: title
                state: state
                value: value
                labels:
                  container: container
                  severity: severity
                  instance: instance
                  pod: pod
                  alertname: alertname
                  daemonset: daemonset
                  node: node
                  condition: condition
                  endpoint: endpoint
                  service: service
                  namespace: namespace
                  job: job
                  status: status
              lastEvaluation: 2000-01-23T04:56:07.000+00:00
              query: query
              name: name
              annotations:
                description: description
                title: title
              health: health
              state: state
              evaluationTime: 6.027456183070403
              type: type
              labels:
                severity: severity
            - duration: 0
              alerts:
              - activeAt: 2000-01-23T04:56:07.000+00:00
                annotations:
                  description: description
                  title: title
                state: state
                value: value
                labels:
                  container: container
                  severity: severity
                  instance: instance
                  pod: pod
                  alertname: alertname
                  daemonset: daemonset
                  node: node
                  condition: condition
                  endpoint: endpoint
                  service: service
                  namespace: namespace
                  job: job
                  status: status
              - activeAt: 2000-01-23T04:56:07.000+00:00
                annotations:
                  description: description
                  title: title
                state: state
                value: value
                labels:
                  container: container
                  severity: severity
                  instance: instance
                  pod: pod
                  alertname: alertname
                  daemonset: daemonset
                  node: node
                  condition: condition
                  endpoint: endpoint
                  service: service
                  namespace: namespace
                  job: job
                  status: status
              lastEvaluation: 2000-01-23T04:56:07.000+00:00
              query: query
              name: name
              annotations:
                description: description
                title: title
              health: health
              state: state
              evaluationTime: 6.027456183070403
              type: type
              labels:
                severity: severity
            interval: 1
            evaluationTime: 5.962133916683182
          - lastEvaluation: 2000-01-23T04:56:07.000+00:00
            file: file
            name: name
            rules:
            - duration: 0
              alerts:
              - activeAt: 2000-01-23T04:56:07.000+00:00
                annotations:
                  description: description
                  title: title
                state: state
                value: value
                labels:
                  container: container
                  severity: severity
                  instance: instance
                  pod: pod
                  alertname: alertname
                  daemonset: daemonset
                  node: node
                  condition: condition
                  endpoint: endpoint
                  service: service
                  namespace: namespace
                  job: job
                  status: status
              - activeAt: 2000-01-23T04:56:07.000+00:00
                annotations:
                  description: description
                  title: title
                state: state
                value: value
                labels:
                  container: container
                  severity: severity
                  instance: instance
                  pod: pod
                  alertname: alertname
                  daemonset: daemonset
                  node: node
                  condition: condition
                  endpoint: endpoint
                  service: service
                  namespace: namespace
                  job: job
                  status: status
              lastEvaluation: 2000-01-23T04:56:07.000+00:00
              query: query
              name: name
              annotations:
                description: description
                title: title
              health: health
              state: state
              evaluationTime: 6.027456183070403
              type: type
              labels:
                severity: severity
            - duration: 0
              alerts:
              - activeAt: 2000-01-23T04:56:07.000+00:00
                annotations:
                  description: description
                  title: title
                state: state
                value: value
                labels:
                  container: container
                  severity: severity
                  instance: instance
                  pod: pod
                  alertname: alertname
                  daemonset: daemonset
                  node: node
                  condition: condition
                  endpoint: endpoint
                  service: service
                  namespace: namespace
                  job: job
                  status: status
              - activeAt: 2000-01-23T04:56:07.000+00:00
                annotations:
                  description: description
                  title: title
                state: state
                value: value
                labels:
                  container: container
                  severity: severity
                  instance: instance
                  pod: pod
                  alertname: alertname
                  daemonset: daemonset
                  node: node
                  condition: condition
                  endpoint: endpoint
                  service: service
                  namespace: namespace
                  job: job
                  status: status
              lastEvaluation: 2000-01-23T04:56:07.000+00:00
              query: query
              name: name
              annotations:
                description: description
                title: title
              health: health
              state: state
              evaluationTime: 6.027456183070403
              type: type
              labels:
                severity: severity
            interval: 1
            evaluationTime: 5.962133916683182
        status: status
      properties:
        status:
          nullable: true
          type: string
        data:
          $ref: "#/components/schemas/AlertData"
      type: object
    ProjectQuotaList:
      additionalProperties: false
      example:
        data:
        - serverRam: 6.027456183070403
          vmCpu: 5
          serverDiskSize: 1.4658129805029452
          vmRam: 5.637376656633329
          vmVolumeSize: 2.3021358869347655
          projectName: projectName
          projectId: 7
          serverCpu: 0
        - serverRam: 6.027456183070403
          vmCpu: 5
          serverDiskSize: 1.4658129805029452
          vmRam: 5.637376656633329
          vmVolumeSize: 2.3021358869347655
          projectName: projectName
          projectId: 7
          serverCpu: 0
        totalCount: 9
      properties:
        data:
          items:
            $ref: "#/components/schemas/ProjectQuotaListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    ProjectQuotaListDto:
      additionalProperties: false
      example:
        serverRam: 6.027456183070403
        vmCpu: 5
        serverDiskSize: 1.4658129805029452
        vmRam: 5.637376656633329
        vmVolumeSize: 2.3021358869347655
        projectName: projectName
        projectId: 7
        serverCpu: 0
      properties:
        serverCpu:
          format: int64
          type: integer
        serverRam:
          format: double
          type: number
        serverDiskSize:
          format: double
          type: number
        vmCpu:
          format: int64
          type: integer
        vmRam:
          format: double
          type: number
        vmVolumeSize:
          format: double
          type: number
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
      required:
      - projectId
      - projectName
      - serverCpu
      - serverDiskSize
      - serverRam
      - vmCpu
      - vmRam
      - vmVolumeSize
      type: object
    ProjectStatus:
      enum:
      - "Null"
      - Deleting
      - DisableAi
      - DisableGatekeeper
      - DeletingBackupPolicies
      - DisableBackup
      - DisableMonitoring
      - EnableBackup
      - EnableMonitoring
      - EnableAi
      - EnableGatekeeper
      - Failure
      - FailedUpgrade
      - Purging
      - Ready
      - Updating
      - Upgrading
      - UpdatingCredentials
      - UninstallVirtualCluster
      - Repairing
      - Importing
      - FailedToImport
      - Migrating
      type: string
    ProjectTemplateDropdownListDto:
      additionalProperties: false
      example:
        name: name
        id: 0
        canCommit: true
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        canCommit:
          type: boolean
      type: object
    ProjectTemplateList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          backupEnabled: true
          allowSpotVms: true
          organizationName: organizationName
          name: name
          allowFullSpotKubernetes: true
          id: 0
          allowSpotWorkers: true
          monitoringEnabled: true
          kubernetesVersion: kubernetesVersion
        - organizationId: 6
          backupEnabled: true
          allowSpotVms: true
          organizationName: organizationName
          name: name
          allowFullSpotKubernetes: true
          id: 0
          allowSpotWorkers: true
          monitoringEnabled: true
          kubernetesVersion: kubernetesVersion
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/ProjectTemplateListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    ProjectTemplateListDto:
      additionalProperties: false
      example:
        organizationId: 6
        backupEnabled: true
        allowSpotVms: true
        organizationName: organizationName
        name: name
        allowFullSpotKubernetes: true
        id: 0
        allowSpotWorkers: true
        monitoringEnabled: true
        kubernetesVersion: kubernetesVersion
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        monitoringEnabled:
          type: boolean
        backupEnabled:
          type: boolean
        allowFullSpotKubernetes:
          type: boolean
        allowSpotVms:
          type: boolean
        allowSpotWorkers:
          type: boolean
        kubernetesVersion:
          nullable: true
          type: string
        organizationName:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
      required:
      - allowFullSpotKubernetes
      - allowSpotVms
      - allowSpotWorkers
      - backupEnabled
      - id
      - kubernetesVersion
      - monitoringEnabled
      - name
      - organizationId
      - organizationName
      type: object
    ProjectType:
      enum:
      - K8S
      - VM
      type: string
    ProjectWithFlavorsAndImagesDto:
      additionalProperties: false
      example:
        flavors:
        - flavors
        - flavors
        images:
        - images
        - images
        imageNames:
        - imageNames
        - imageNames
        isReady: true
        name: name
        id: 6
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        flavors:
          items:
            type: string
          nullable: true
          type: array
        images:
          items:
            type: string
          nullable: true
          type: array
        imageNames:
          items:
            type: string
          nullable: true
          type: array
        isReady:
          type: boolean
      required:
      - flavors
      - id
      - imageNames
      - images
      - isReady
      - name
      type: object
    ProjectsForBillingDto:
      additionalProperties: false
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        standaloneVms:
        - cpu: 5
          ram: 2
        - cpu: 5
          ram: 2
        servers:
        - cpu: 1
          ram: 5
        - cpu: 1
          ram: 5
        organizationName: organizationName
        price: 6.027456183070403
        name: name
        id: 0
        billingEnabled: true
        billingStartDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        createdAt:
          format: date-time
          nullable: true
          type: string
        billingStartDate:
          format: date-time
          nullable: true
          type: string
        organizationName:
          nullable: true
          type: string
        price:
          format: double
          type: number
        servers:
          items:
            $ref: "#/components/schemas/ServersForBillingDto"
          nullable: true
          type: array
        standaloneVms:
          items:
            $ref: "#/components/schemas/StandaloneVmsForBillingDto"
          nullable: true
          type: array
        billingEnabled:
          type: boolean
      required:
      - billingEnabled
      - billingStartDate
      - createdAt
      - id
      - name
      - organizationName
      - price
      - servers
      - standaloneVms
      type: object
    ProjectsList:
      additionalProperties: false
      example:
        data:
        - boundUsers:
          - userName: userName
            userId: userId
          - userName: userName
            userId: userId
          deleteButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          lockButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          certificateExpiredAt: certificateExpiredAt
          opaProfileId: 4
          organizationId: 6
          createdAt: createdAt
          totalStandaloneVmsCount: 5
          parentProjectId: 3
          cloudType: AWS
          isLocked: true
          id: 0
          setExpirationDateButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          isAutoscalingSpotEnabled: true
          isAutoscalingEnabled: true
          isKubernetes: true
          organizationName: organizationName
          unlockButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          anyServer: true
          quotaId: 2
          isVirtualCluster: true
          cloudCredentialName: cloudCredentialName
          allowSpotWorkers: true
          maxSpotPrice: 7.061401241503109
          name: name
          kubernetesCurrentVersion: kubernetesCurrentVersion
          allowFullSpotKubernetes: true
          lastModified: lastModified
          status: "Null"
          allUsers:
          - allUsers
          - allUsers
          totalServersCount: 5
          importClusterType: None
          anyVm: true
          expiredAt: expiredAt
          projectAction: true
          totalHourlyCost: 9.301444243932576
          kubesprayTargetVersion: kubesprayTargetVersion
          isProjectMaintenanceModeEnabled: true
          alertsCount: 1
          allowSpotVMs: true
          kubernetesTargetVersion: kubernetesTargetVersion
          lastModifiedBy: lastModifiedBy
          aiEnabled: true
          isMonitoringEnabled: true
          health: "Null"
          kubesprayCurrentVersion: kubesprayCurrentVersion
          hasKubeConfigFile: true
          kubeInfoButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          deleteOnExpiration: true
          alertingProfileId: 2
          eImportClusterType: CloudCredential
          createdBy: createdBy
          isBackupEnabled: true
          hasExpirationWarning: true
          resetStatusButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          isMaintenanceModeEnabled: true
        - boundUsers:
          - userName: userName
            userId: userId
          - userName: userName
            userId: userId
          deleteButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          lockButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          certificateExpiredAt: certificateExpiredAt
          opaProfileId: 4
          organizationId: 6
          createdAt: createdAt
          totalStandaloneVmsCount: 5
          parentProjectId: 3
          cloudType: AWS
          isLocked: true
          id: 0
          setExpirationDateButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          isAutoscalingSpotEnabled: true
          isAutoscalingEnabled: true
          isKubernetes: true
          organizationName: organizationName
          unlockButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          anyServer: true
          quotaId: 2
          isVirtualCluster: true
          cloudCredentialName: cloudCredentialName
          allowSpotWorkers: true
          maxSpotPrice: 7.061401241503109
          name: name
          kubernetesCurrentVersion: kubernetesCurrentVersion
          allowFullSpotKubernetes: true
          lastModified: lastModified
          status: "Null"
          allUsers:
          - allUsers
          - allUsers
          totalServersCount: 5
          importClusterType: None
          anyVm: true
          expiredAt: expiredAt
          projectAction: true
          totalHourlyCost: 9.301444243932576
          kubesprayTargetVersion: kubesprayTargetVersion
          isProjectMaintenanceModeEnabled: true
          alertsCount: 1
          allowSpotVMs: true
          kubernetesTargetVersion: kubernetesTargetVersion
          lastModifiedBy: lastModifiedBy
          aiEnabled: true
          isMonitoringEnabled: true
          health: "Null"
          kubesprayCurrentVersion: kubesprayCurrentVersion
          hasKubeConfigFile: true
          kubeInfoButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          deleteOnExpiration: true
          alertingProfileId: 2
          eImportClusterType: CloudCredential
          createdBy: createdBy
          isBackupEnabled: true
          hasExpirationWarning: true
          resetStatusButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          isMaintenanceModeEnabled: true
        totalCount: 7
      properties:
        data:
          items:
            $ref: "#/components/schemas/ProjectListDetailDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    ProjectsLogsCommand:
      additionalProperties: false
      example:
        query:
          endDate: 2000-01-23T04:56:07.000+00:00
          limit: 6
          filters:
          - value: value
            operator: operator
          - value: value
            operator: operator
          projectId: 0
          parameters: parameters
          startDate: 2000-01-23T04:56:07.000+00:00
          direction: direction
      properties:
        query:
          $ref: "#/components/schemas/LokiLogsQuery"
      type: object
    ProjectsMonitoringAlertsCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    ProjectsSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    ProjectsSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PrometheusBillingCreateCommand:
      additionalProperties: false
      example:
        organizationId: 0
        price: 1.4658129805029452
        startDate: 2000-01-23T04:56:07.000+00:00
        prometheusRuleId: 6
      properties:
        organizationId:
          format: int32
          type: integer
        prometheusRuleId:
          format: int32
          type: integer
        startDate:
          format: date-time
          type: string
        price:
          format: double
          type: number
      type: object
    PrometheusBillingInfo:
      additionalProperties: false
      example:
        data:
        - endDate: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          price: 0.8008281904610115
          lastModifiedBy: lastModifiedBy
          ruleName: ruleName
          lastModified: lastModified
          startDate: 2000-01-23T04:56:07.000+00:00
          prometheusRuleId: 6
        - endDate: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          price: 0.8008281904610115
          lastModifiedBy: lastModifiedBy
          ruleName: ruleName
          lastModified: lastModified
          startDate: 2000-01-23T04:56:07.000+00:00
          prometheusRuleId: 6
        totalPrice: 1.4658129805029452
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/PrometheusBillingSummaryDto"
          nullable: true
          type: array
        totalPrice:
          format: double
          type: number
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      - totalPrice
      type: object
    PrometheusBillingSummaryDto:
      additionalProperties: false
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        price: 0.8008281904610115
        lastModifiedBy: lastModifiedBy
        ruleName: ruleName
        lastModified: lastModified
        startDate: 2000-01-23T04:56:07.000+00:00
        prometheusRuleId: 6
      properties:
        price:
          format: double
          type: number
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
        prometheusRuleId:
          format: int32
          type: integer
        ruleName:
          type: string
        createdBy:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
      required:
      - createdBy
      - endDate
      - lastModified
      - lastModifiedBy
      - price
      - prometheusRuleId
      - ruleName
      - startDate
      type: object
    PrometheusDashboardCreateCommand:
      additionalProperties: false
      example:
        expression: expression
        name: name
        description: description
        projectId: 0
        categoryName: categoryName
      properties:
        projectId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        expression:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        categoryName:
          nullable: true
          type: string
      type: object
    PrometheusDashboardDto:
      additionalProperties: false
      example:
        isReadonly: true
        name: name
        expressionDecoded: expressionDecoded
        description: description
        id: 0
        expressionEncoded: expressionEncoded
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        expressionDecoded:
          nullable: true
          type: string
        expressionEncoded:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        isReadonly:
          type: boolean
      required:
      - description
      - expressionDecoded
      - expressionEncoded
      - id
      - isReadonly
      - name
      type: object
    PrometheusDashboardListDto:
      additionalProperties: false
      example:
        data:
        - isReadonly: true
          name: name
          expressionDecoded: expressionDecoded
          description: description
          id: 0
          expressionEncoded: expressionEncoded
        - isReadonly: true
          name: name
          expressionDecoded: expressionDecoded
          description: description
          id: 0
          expressionEncoded: expressionEncoded
        categoryName: categoryName
      properties:
        categoryName:
          nullable: true
          type: string
        data:
          items:
            $ref: "#/components/schemas/PrometheusDashboardDto"
          nullable: true
          type: array
      required:
      - categoryName
      - data
      type: object
    PrometheusDashboardUpdateCommand:
      additionalProperties: false
      example:
        expression: expression
        name: name
        description: description
        id: 0
        categoryName: categoryName
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        expression:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        categoryName:
          nullable: true
          type: string
      type: object
    PrometheusEntity:
      additionalProperties: false
      example:
        prometheusRuleName: prometheusRuleName
        ruleDiscountRate: 2.027123023002322
        prometheusRuleId: 3
      properties:
        prometheusRuleId:
          format: int32
          type: integer
        prometheusRuleName:
          nullable: true
          type: string
        ruleDiscountRate:
          format: double
          nullable: true
          type: number
      required:
      - prometheusRuleId
      - prometheusRuleName
      - ruleDiscountRate
      type: object
    PrometheusLabelListDto:
      additionalProperties: false
      example:
        label: label
        value: value
      properties:
        label:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      required:
      - label
      - value
      type: object
    PrometheusMetricListDto:
      additionalProperties: false
      example:
        data:
          result:
          - metric:
              key: metric
            values:
            - - 0.8008281904610115
              - 0.8008281904610115
            - - 0.8008281904610115
              - 0.8008281904610115
            value: ""
          - metric:
              key: metric
            values:
            - - 0.8008281904610115
              - 0.8008281904610115
            - - 0.8008281904610115
              - 0.8008281904610115
            value: ""
          resultType: resultType
        status: status
      properties:
        status:
          nullable: true
          type: string
        data:
          $ref: "#/components/schemas/MetricData"
      type: object
    PrometheusMetricsAutocompleteCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    PrometheusMetricsCommand:
      additionalProperties: false
      example:
        start: 2000-01-23T04:56:07.000+00:00
        end: 2000-01-23T04:56:07.000+00:00
        step: step
        time: 2000-01-23T04:56:07.000+00:00
        isGraphEnabled: true
        projectId: 0
        parameters: parameters
      properties:
        projectId:
          format: int32
          type: integer
        parameters:
          nullable: true
          type: string
        time:
          format: date-time
          nullable: true
          type: string
        start:
          format: date-time
          nullable: true
          type: string
        end:
          format: date-time
          nullable: true
          type: string
        isGraphEnabled:
          type: boolean
        step:
          nullable: true
          type: string
      type: object
    PrometheusOrganizationDiscountDto:
      additionalProperties: false
      example:
        globalDiscountRate: 5.962133916683182
        ruleDiscountRate: 1.4658129805029452
        name: name
        id: 6
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        ruleDiscountRate:
          format: double
          type: number
        globalDiscountRate:
          format: double
          type: number
      required:
      - globalDiscountRate
      - id
      - name
      - ruleDiscountRate
      type: object
    PrometheusRuleListDto:
      additionalProperties: false
      example:
        metricName: metricName
        lastModifiedBy: lastModifiedBy
        userName: userName
        type: Count
        url: url
        boundOrganizations:
        - globalDiscountRate: 5.962133916683182
          ruleDiscountRate: 1.4658129805029452
          name: name
          id: 6
        - globalDiscountRate: 5.962133916683182
          ruleDiscountRate: 1.4658129805029452
          name: name
          id: 6
        billingStartDate: billingStartDate
        labels:
        - label: label
          value: value
        - label: label
          value: value
        operationCredential:
          isDefault: true
          operationCredentialId: 0
          name: name
        createdAt: createdAt
        password: password
        partner:
          partnerName: partnerName
          logo: logo
          partnerId: 0
        createdBy: createdBy
        price: 5.637376656633329
        name: name
        id: 0
        lastModified: lastModified
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        password:
          type: string
        userName:
          type: string
        url:
          type: string
        metricName:
          nullable: true
          type: string
        labels:
          items:
            $ref: "#/components/schemas/PrometheusLabelListDto"
          nullable: true
          type: array
        boundOrganizations:
          items:
            $ref: "#/components/schemas/PrometheusOrganizationDiscountDto"
          nullable: true
          type: array
        type:
          $ref: "#/components/schemas/PrometheusType"
        price:
          format: double
          type: number
        billingStartDate:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        partner:
          $ref: "#/components/schemas/PartnerEntity"
        operationCredential:
          $ref: "#/components/schemas/OperationCredentialsForOrganizationEntity"
        createdBy:
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
      required:
      - billingStartDate
      - boundOrganizations
      - createdAt
      - createdBy
      - id
      - labels
      - lastModified
      - lastModifiedBy
      - metricName
      - name
      - operationCredential
      - partner
      - password
      - price
      - type
      - url
      - userName
      type: object
    PrometheusRulesList:
      additionalProperties: false
      example:
        data:
        - metricName: metricName
          lastModifiedBy: lastModifiedBy
          userName: userName
          type: Count
          url: url
          boundOrganizations:
          - globalDiscountRate: 5.962133916683182
            ruleDiscountRate: 1.4658129805029452
            name: name
            id: 6
          - globalDiscountRate: 5.962133916683182
            ruleDiscountRate: 1.4658129805029452
            name: name
            id: 6
          billingStartDate: billingStartDate
          labels:
          - label: label
            value: value
          - label: label
            value: value
          operationCredential:
            isDefault: true
            operationCredentialId: 0
            name: name
          createdAt: createdAt
          password: password
          partner:
            partnerName: partnerName
            logo: logo
            partnerId: 0
          createdBy: createdBy
          price: 5.637376656633329
          name: name
          id: 0
          lastModified: lastModified
        - metricName: metricName
          lastModifiedBy: lastModifiedBy
          userName: userName
          type: Count
          url: url
          boundOrganizations:
          - globalDiscountRate: 5.962133916683182
            ruleDiscountRate: 1.4658129805029452
            name: name
            id: 6
          - globalDiscountRate: 5.962133916683182
            ruleDiscountRate: 1.4658129805029452
            name: name
            id: 6
          billingStartDate: billingStartDate
          labels:
          - label: label
            value: value
          - label: label
            value: value
          operationCredential:
            isDefault: true
            operationCredentialId: 0
            name: name
          createdAt: createdAt
          password: password
          partner:
            partnerName: partnerName
            logo: logo
            partnerId: 0
          createdBy: createdBy
          price: 5.637376656633329
          name: name
          id: 0
          lastModified: lastModified
        totalCount: 2
      properties:
        data:
          items:
            $ref: "#/components/schemas/PrometheusRuleListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    PrometheusRulesSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    PrometheusRulesSearchList:
      additionalProperties: false
      example:
        data:
        - partner: 6
          name: name
          id: 0
        - partner: 6
          name: name
          id: 0
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/PrometheusRulesSearchResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    PrometheusRulesSearchResponseData:
      additionalProperties: false
      example:
        partner: 6
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        partner:
          format: int32
          type: integer
      type: object
    PrometheusType:
      enum:
      - Count
      - Sum
      type: string
    Provider:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          nullable: true
          type: string
      type: object
    ProxmoxCheckerCommand:
      additionalProperties: false
      example:
        tokenId: tokenId
        url: url
        tokenSecret: tokenSecret
      properties:
        url:
          nullable: true
          type: string
        tokenId:
          nullable: true
          type: string
        tokenSecret:
          nullable: true
          type: string
      type: object
    ProxmoxFlavorData:
      additionalProperties: false
      example:
        name: name
        cpu: 0
        ram: 6.027456183070403
      properties:
        name:
          nullable: true
          type: string
        cpu:
          format: int32
          type: integer
        ram:
          format: double
          type: number
      required:
      - cpu
      - name
      - ram
      type: object
    ProxmoxFlavorList:
      additionalProperties: false
      example:
        data:
        - name: name
          cpu: 0
          ram: 6.027456183070403
        - name: name
          cpu: 0
          ram: 6.027456183070403
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/ProxmoxFlavorData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    ProxmoxHypervisorDto:
      additionalProperties: false
      example:
        isBound: true
        name: name
        usedByServer: true
      properties:
        name:
          nullable: true
          type: string
        isBound:
          type: boolean
        usedByServer:
          type: boolean
      type: object
    ProxmoxList:
      additionalProperties: false
      example:
        data:
        - projectCount: 6
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          tokenId: tokenId
          lastModifiedBy: lastModifiedBy
          storage: storage
          url: url
          organizationId: 1
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          proxmoxNetworks:
          - endAllocationRange: endAllocationRange
            netMask: 5
            ipAddress: ipAddress
            bridge: bridge
            isPrivate: true
            beginAllocationRange: beginAllocationRange
            gateway: gateway
            isVirtualLbNetwork: true
          - endAllocationRange: endAllocationRange
            netMask: 5
            ipAddress: ipAddress
            bridge: bridge
            isPrivate: true
            beginAllocationRange: beginAllocationRange
            gateway: gateway
            isVirtualLbNetwork: true
          skipTlsFlag: true
          hypervisors:
          - name: name
            id: 5
          - name: name
            id: 5
          id: 0
          lastModified: lastModified
          continentName: continentName
          vmTemplateName: vmTemplateName
        - projectCount: 6
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          tokenId: tokenId
          lastModifiedBy: lastModifiedBy
          storage: storage
          url: url
          organizationId: 1
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          proxmoxNetworks:
          - endAllocationRange: endAllocationRange
            netMask: 5
            ipAddress: ipAddress
            bridge: bridge
            isPrivate: true
            beginAllocationRange: beginAllocationRange
            gateway: gateway
            isVirtualLbNetwork: true
          - endAllocationRange: endAllocationRange
            netMask: 5
            ipAddress: ipAddress
            bridge: bridge
            isPrivate: true
            beginAllocationRange: beginAllocationRange
            gateway: gateway
            isVirtualLbNetwork: true
          skipTlsFlag: true
          hypervisors:
          - name: name
            id: 5
          - name: name
            id: 5
          id: 0
          lastModified: lastModified
          continentName: continentName
          vmTemplateName: vmTemplateName
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/ProxmoxListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    ProxmoxListDto:
      additionalProperties: false
      example:
        projectCount: 6
        projects:
        - name: name
          id: 5
        - name: name
          id: 5
        organizationName: organizationName
        tokenId: tokenId
        lastModifiedBy: lastModifiedBy
        storage: storage
        url: url
        organizationId: 1
        createdAt: createdAt
        isDefault: true
        createdBy: createdBy
        isLocked: true
        name: name
        proxmoxNetworks:
        - endAllocationRange: endAllocationRange
          netMask: 5
          ipAddress: ipAddress
          bridge: bridge
          isPrivate: true
          beginAllocationRange: beginAllocationRange
          gateway: gateway
          isVirtualLbNetwork: true
        - endAllocationRange: endAllocationRange
          netMask: 5
          ipAddress: ipAddress
          bridge: bridge
          isPrivate: true
          beginAllocationRange: beginAllocationRange
          gateway: gateway
          isVirtualLbNetwork: true
        skipTlsFlag: true
        hypervisors:
        - name: name
          id: 5
        - name: name
          id: 5
        id: 0
        lastModified: lastModified
        continentName: continentName
        vmTemplateName: vmTemplateName
      properties:
        id:
          format: int32
          type: integer
        projectCount:
          format: int32
          type: integer
        isLocked:
          type: boolean
        name:
          nullable: true
          type: string
        projects:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        createdBy:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        isDefault:
          type: boolean
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
        continentName:
          nullable: true
          type: string
        hypervisors:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          nullable: true
          type: array
        tokenId:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        storage:
          nullable: true
          type: string
        vmTemplateName:
          nullable: true
          type: string
        proxmoxNetworks:
          items:
            $ref: "#/components/schemas/ProxmoxNetworkListDto"
          nullable: true
          type: array
        skipTlsFlag:
          type: boolean
      required:
      - continentName
      - createdAt
      - createdBy
      - hypervisors
      - id
      - isDefault
      - isLocked
      - lastModified
      - lastModifiedBy
      - name
      - organizationId
      - organizationName
      - projectCount
      - projects
      - proxmoxNetworks
      - skipTlsFlag
      - storage
      - tokenId
      - url
      - vmTemplateName
      type: object
    ProxmoxNetworkListDto:
      additionalProperties: false
      example:
        endAllocationRange: endAllocationRange
        netMask: 5
        ipAddress: ipAddress
        bridge: bridge
        isPrivate: true
        beginAllocationRange: beginAllocationRange
        gateway: gateway
        isVirtualLbNetwork: true
      properties:
        bridge:
          nullable: true
          type: string
        gateway:
          nullable: true
          type: string
        ipAddress:
          nullable: true
          type: string
        netMask:
          format: int32
          type: integer
        beginAllocationRange:
          nullable: true
          type: string
        endAllocationRange:
          nullable: true
          type: string
        isPrivate:
          type: boolean
        isVirtualLbNetwork:
          type: boolean
      required:
      - beginAllocationRange
      - bridge
      - endAllocationRange
      - gateway
      - ipAddress
      - isPrivate
      - isVirtualLbNetwork
      - netMask
      type: object
    ProxmoxRole:
      enum:
      - NONE
      - NFS
      - STORAGE
      type: string
    ProxmoxStorage:
      enum:
      - NFS
      - OpenEBS
      - Longhorn
      - LocalPath
      type: string
    PublicImageList:
      additionalProperties: false
      example:
        data:
        - name: name
          id: id
        - name: name
          id: id
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonStringBasedDropdownDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    PurgeExpiredProjectsCommand:
      additionalProperties: false
      type: object
    PvcSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        includePublicImportedClusters: true
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
        includePublicImportedClusters:
          nullable: true
          type: boolean
      type: object
    PvcSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchKubernetesResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    RamLimitsDto:
      additionalProperties: false
      example:
        maxClusterLimits: 2
        defaultContainerRequest: 7
        defaultContainerLimit: 9
        maxClusterRequests: 5
      properties:
        maxClusterRequests:
          format: int64
          type: integer
        maxClusterLimits:
          format: int64
          type: integer
        defaultContainerRequest:
          format: int64
          type: integer
        defaultContainerLimit:
          format: int64
          type: integer
      required:
      - defaultContainerLimit
      - defaultContainerRequest
      - maxClusterLimits
      - maxClusterRequests
      type: object
    RebootServerCommand:
      additionalProperties: false
      example:
        type: type
        serverId: 0
      properties:
        serverId:
          format: int32
          type: integer
        type:
          nullable: true
          type: string
      type: object
    RebootStandAloneVmCommand:
      additionalProperties: false
      example:
        id: 0
        type: type
      properties:
        id:
          format: int32
          type: integer
        type:
          nullable: true
          type: string
      type: object
    RefreshTokenCommand:
      additionalProperties: false
      example:
        token: token
        refreshToken: refreshToken
      properties:
        token:
          nullable: true
          type: string
        refreshToken:
          nullable: true
          type: string
      type: object
    RegionListCommand:
      additionalProperties: false
      example:
        awsAccessKeyId: awsAccessKeyId
        cloudId: 0
        awsSecretAccessKey: awsSecretAccessKey
      properties:
        awsAccessKeyId:
          nullable: true
          type: string
        awsSecretAccessKey:
          nullable: true
          type: string
        cloudId:
          format: int32
          nullable: true
          type: integer
      type: object
    RegistrationCommand:
      additionalProperties: false
      example:
        organizationName: organizationName
        email: email
        username: username
      properties:
        organizationName:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
      type: object
    RemindUsersByAlertingProfileCommand:
      additionalProperties: false
      example:
        reminder: HalfHour
      properties:
        reminder:
          $ref: "#/components/schemas/AlertingReminder"
      type: object
    RemoveOwnerCommand:
      additionalProperties: false
      example:
        userId: userId
      properties:
        userId:
          nullable: true
          type: string
      type: object
    ReplyTicketCommand:
      additionalProperties: false
      example:
        body: body
        ticketId: ticketId
      properties:
        ticketId:
          nullable: true
          type: string
        body:
          nullable: true
          type: string
      type: object
    Repository:
      additionalProperties: false
      example:
        scannerDisabled: true
        isImported: true
        organizationName: organizationName
        organizationDisplayName: organizationDisplayName
        kind: 1
        name: name
        repositoryId: repositoryId
        official: true
        verifiedPublisher: true
        url: url
      properties:
        url:
          nullable: true
          type: string
        kind:
          format: int64
          type: integer
        name:
          nullable: true
          type: string
        official:
          type: boolean
        repositoryId:
          nullable: true
          type: string
        scannerDisabled:
          type: boolean
        isImported:
          type: boolean
        organizationName:
          nullable: true
          type: string
        verifiedPublisher:
          type: boolean
        organizationDisplayName:
          nullable: true
          type: string
      type: object
    ResetPasswordCommand:
      additionalProperties: false
      example:
        newPassword: newPassword
        email: email
        token: token
      properties:
        token:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        newPassword:
          nullable: true
          type: string
      type: object
    ResetProjectStatusCommand:
      additionalProperties: false
      example:
        projectId: 0
        status: "Null"
      properties:
        projectId:
          format: int32
          type: integer
        status:
          $ref: "#/components/schemas/ProjectStatus"
      type: object
    ResetServerStatusCommand:
      additionalProperties: false
      example:
        projectId: 0
        serverIds:
        - 6
        - 6
        status: Deleting
      properties:
        projectId:
          format: int32
          type: integer
        serverIds:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        status:
          $ref: "#/components/schemas/CloudStatus"
      type: object
    ResetStandAloneVmStatusCommand:
      additionalProperties: false
      example:
        vmIds:
        - 6
        - 6
        projectId: 0
        status: Deleting
      properties:
        projectId:
          format: int32
          type: integer
        vmIds:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        status:
          $ref: "#/components/schemas/StandAloneVmStatus"
      type: object
    Resource:
      additionalProperties: false
      example:
        metadata:
          key: ""
        monthlyUsageCost: monthlyUsageCost
        name: name
        hourlyCost: hourlyCost
        subresources:
        - metadata:
            key: ""
          name: name
          hourlyCost: hourlyCost
          costComponents:
          - unit: unit
            hourlyQuantity: hourlyQuantity
            price: price
            name: name
            hourlyCost: hourlyCost
            monthlyQuantity: monthlyQuantity
            usageBased: true
            priceNotFound: true
            monthlyCost: monthlyCost
          - unit: unit
            hourlyQuantity: hourlyQuantity
            price: price
            name: name
            hourlyCost: hourlyCost
            monthlyQuantity: monthlyQuantity
            usageBased: true
            priceNotFound: true
            monthlyCost: monthlyCost
          monthlyCost: monthlyCost
        - metadata:
            key: ""
          name: name
          hourlyCost: hourlyCost
          costComponents:
          - unit: unit
            hourlyQuantity: hourlyQuantity
            price: price
            name: name
            hourlyCost: hourlyCost
            monthlyQuantity: monthlyQuantity
            usageBased: true
            priceNotFound: true
            monthlyCost: monthlyCost
          - unit: unit
            hourlyQuantity: hourlyQuantity
            price: price
            name: name
            hourlyCost: hourlyCost
            monthlyQuantity: monthlyQuantity
            usageBased: true
            priceNotFound: true
            monthlyCost: monthlyCost
          monthlyCost: monthlyCost
        costComponents:
        - unit: unit
          hourlyQuantity: hourlyQuantity
          price: price
          name: name
          hourlyCost: hourlyCost
          monthlyQuantity: monthlyQuantity
          usageBased: true
          priceNotFound: true
          monthlyCost: monthlyCost
        - unit: unit
          hourlyQuantity: hourlyQuantity
          price: price
          name: name
          hourlyCost: hourlyCost
          monthlyQuantity: monthlyQuantity
          usageBased: true
          priceNotFound: true
          monthlyCost: monthlyCost
        monthlyCost: monthlyCost
        resourceType: resourceType
        tags:
          key: tags
      properties:
        name:
          nullable: true
          type: string
        resourceType:
          nullable: true
          type: string
        tags:
          additionalProperties:
            nullable: true
            type: string
          nullable: true
          type: object
        metadata:
          additionalProperties:
            nullable: true
          nullable: true
          type: object
        hourlyCost:
          nullable: true
          type: string
        monthlyCost:
          nullable: true
          type: string
        monthlyUsageCost:
          nullable: true
          type: string
        costComponents:
          items:
            $ref: "#/components/schemas/CostComponent"
          nullable: true
          type: array
        subresources:
          items:
            $ref: "#/components/schemas/Subresource"
          nullable: true
          type: array
      type: object
    ResourcePoolListCommand:
      additionalProperties: false
      example:
        password: password
        datacenterId: datacenterId
        url: url
        username: username
      properties:
        url:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        datacenterId:
          nullable: true
          type: string
      type: object
    ResourcePoolSummary:
      additionalProperties: false
      example:
        name: name
        resourcePool: resourcePool
      properties:
        name:
          nullable: true
          type: string
        resourcePool:
          nullable: true
          type: string
      type: object
    ResourcePresetDto:
      additionalProperties: false
      example:
        ephemeralStorage:
          maxClusterLimits: 2
          defaultContainerRequest: 4
          defaultContainerLimit: 7
          maxClusterRequests: 3
        name: name
        cpu:
          maxClusterLimits: 6.027456183070403
          defaultContainerRequest: 1.4658129805029452
          defaultContainerLimit: 5.962133916683182
          maxClusterRequests: 0.8008281904610115
        workloadResources:
          maxIngresses: 6
          maxPvcs: 1
          maxLoadBalancers: 7
          maxPods: 1
          maxTotalPvcSize: 1
        ram:
          maxClusterLimits: 2
          defaultContainerRequest: 7
          defaultContainerLimit: 9
          maxClusterRequests: 5
      properties:
        name:
          nullable: true
          type: string
        cpu:
          $ref: "#/components/schemas/CpuLimitsDto"
        ram:
          $ref: "#/components/schemas/RamLimitsDto"
        ephemeralStorage:
          $ref: "#/components/schemas/EphemeralStorageLimitsDto"
        workloadResources:
          $ref: "#/components/schemas/WorkloadResourceLimitsDto"
      required:
      - cpu
      - ephemeralStorage
      - name
      - ram
      - workloadResources
      type: object
    RestoreBackupCommand:
      additionalProperties: false
      example:
        excludeNamespaces:
        - excludeNamespaces
        - excludeNamespaces
        projectId: 0
        backupName: backupName
        restoreName: restoreName
        includeNamespaces:
        - includeNamespaces
        - includeNamespaces
      properties:
        projectId:
          format: int32
          type: integer
        backupName:
          nullable: true
          type: string
        restoreName:
          nullable: true
          type: string
        includeNamespaces:
          items:
            type: string
          nullable: true
          type: array
        excludeNamespaces:
          items:
            type: string
          nullable: true
          type: array
      type: object
    Rule:
      additionalProperties: false
      example:
        duration: 0
        alerts:
        - activeAt: 2000-01-23T04:56:07.000+00:00
          annotations:
            description: description
            title: title
          state: state
          value: value
          labels:
            container: container
            severity: severity
            instance: instance
            pod: pod
            alertname: alertname
            daemonset: daemonset
            node: node
            condition: condition
            endpoint: endpoint
            service: service
            namespace: namespace
            job: job
            status: status
        - activeAt: 2000-01-23T04:56:07.000+00:00
          annotations:
            description: description
            title: title
          state: state
          value: value
          labels:
            container: container
            severity: severity
            instance: instance
            pod: pod
            alertname: alertname
            daemonset: daemonset
            node: node
            condition: condition
            endpoint: endpoint
            service: service
            namespace: namespace
            job: job
            status: status
        lastEvaluation: 2000-01-23T04:56:07.000+00:00
        query: query
        name: name
        annotations:
          description: description
          title: title
        health: health
        state: state
        evaluationTime: 6.027456183070403
        type: type
        labels:
          severity: severity
      properties:
        state:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        query:
          nullable: true
          type: string
        duration:
          format: int64
          type: integer
        labels:
          $ref: "#/components/schemas/RuleLabels"
        annotations:
          $ref: "#/components/schemas/Annotations"
        alerts:
          items:
            $ref: "#/components/schemas/Alert"
          nullable: true
          type: array
        health:
          nullable: true
          type: string
        evaluationTime:
          format: double
          type: number
        lastEvaluation:
          format: date-time
          type: string
        type:
          nullable: true
          type: string
      type: object
    RuleCreateCommand:
      additionalProperties: false
      example:
        organizationId:
        - 5
        - 5
        metricName: metricName
        price: 0.8008281904610115
        ruleDiscountRate: 5
        name: name
        operationCredentialId: 1
        partnerId: 6
        type: Count
        labels:
        - label: label
          value: value
        - label: label
          value: value
      properties:
        name:
          nullable: true
          type: string
        metricName:
          nullable: true
          type: string
        labels:
          items:
            $ref: "#/components/schemas/PrometheusLabelListDto"
          nullable: true
          type: array
        type:
          $ref: "#/components/schemas/PrometheusType"
        price:
          format: double
          type: number
        partnerId:
          format: int32
          nullable: true
          type: integer
        operationCredentialId:
          format: int32
          type: integer
        organizationId:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        ruleDiscountRate:
          format: int32
          nullable: true
          type: integer
      type: object
    RuleForUpdateDto:
      additionalProperties: false
      example:
        metricName: metricName
        price: 0.8008281904610115
        name: name
        operationCredentialId: 6
        type: Count
        labels:
        - label: label
          value: value
        - label: label
          value: value
      properties:
        name:
          nullable: true
          type: string
        metricName:
          nullable: true
          type: string
        type:
          $ref: "#/components/schemas/PrometheusType"
        price:
          format: double
          nullable: true
          type: number
        labels:
          items:
            $ref: "#/components/schemas/PrometheusLabelListDto"
          nullable: true
          type: array
        operationCredentialId:
          format: int32
          nullable: true
          type: integer
      type: object
    RuleLabels:
      additionalProperties: false
      example:
        severity: severity
      properties:
        severity:
          nullable: true
          type: string
      type: object
    SecretSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        includePublicImportedClusters: true
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
        includePublicImportedClusters:
          nullable: true
          type: boolean
      type: object
    SecretSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchKubernetesResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    SecurityGroupListDto:
      additionalProperties: false
      example:
        profileName: profileName
        protocol: protocol
        name: name
        id: 0
        portMinRange: 6
        portMaxRange: 1
        remoteIpPrefix: remoteIpPrefix
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        protocol:
          nullable: true
          type: string
        portMinRange:
          format: int32
          type: integer
        portMaxRange:
          format: int32
          type: integer
        remoteIpPrefix:
          nullable: true
          type: string
        profileName:
          nullable: true
          type: string
      required:
      - id
      - name
      - portMaxRange
      - portMinRange
      - profileName
      - protocol
      - remoteIpPrefix
      type: object
    SecurityGroupProtocol:
      enum:
      - ICMP
      - TCP
      - UDP
      type: string
    SecurityReportSummary:
      additionalProperties: false
      example:
        high: 3
        critical: 7
        low: 9
        medium: 2
        unknown: 4
      properties:
        low:
          format: int64
          nullable: true
          type: integer
        high:
          format: int64
          nullable: true
          type: integer
        medium:
          format: int64
          nullable: true
          type: integer
        unknown:
          format: int64
          nullable: true
          type: integer
        critical:
          format: int64
          nullable: true
          type: integer
      type: object
    SecurityReportSummaryDto:
      additionalProperties: false
      example:
        high: 7
        critical: 2
        low: 2
        medium: 9
        unknown: 3
      properties:
        low:
          format: int64
          type: integer
        high:
          format: int64
          type: integer
        medium:
          format: int64
          type: integer
        unknown:
          format: int64
          type: integer
        critical:
          format: int64
          type: integer
      type: object
    SendEmailAboutProjectExpirationCommand:
      additionalProperties: false
      type: object
    ServerActionButtonVisibilityDto:
      additionalProperties: false
      example:
        reboot: true
        console: true
        status: true
      properties:
        status:
          type: boolean
        reboot:
          type: boolean
        console:
          type: boolean
      type: object
    ServerChartDto:
      additionalProperties: false
      example:
        totalOpenshiftCount: 6
        totalGenericK8SCount: 3
        zededa:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        waiting:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        openshift:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        totalGoogleCount: 1
        tanzu:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        totalCount: 1
        genericK8S:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        updating:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        totalCpu: 4
        totalZadaraCount: 6
        totalAzureCount: 3
        totalVsphereCount: 5
        totalZededaCount: 3
        proxmox:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        azure:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        totalUpdatingCount: 8
        totalDiskSize: 9
        zadara:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        google:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        failed:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        totalRam: 5
        totalSucceededCount: 6
        totalOpenstackCount: 6
        totalPendingCount: 9
        usedResources:
        - diskSize: 0
          maxRam: 0
          cpu: 6
          maxCpu: 4
          projectName: projectName
          maxDiskSize: 8
          projectId: 7
          ram: 7
        - diskSize: 0
          maxRam: 0
          cpu: 6
          maxCpu: 4
          projectName: projectName
          maxDiskSize: 8
          projectId: 7
          ram: 7
        totalProxmoxCount: 6
        deleting:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        totalFailedCount: 9
        vsphere:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        openstack:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        totalAwsCount: 6
        totalTanzuCount: 2
        aws:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        succeeded:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        purging:
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
        - names:
          - names
          - names
          projectName: projectName
          projectId: 7
      properties:
        aws:
          items:
            $ref: "#/components/schemas/ServerCommonRecordDto"
          nullable: true
          type: array
        azure:
          items:
            $ref: "#/components/schemas/ServerCommonRecordDto"
          nullable: true
          type: array
        openstack:
          items:
            $ref: "#/components/schemas/ServerCommonRecordDto"
          nullable: true
          type: array
        google:
          items:
            $ref: "#/components/schemas/ServerCommonRecordDto"
          nullable: true
          type: array
        tanzu:
          items:
            $ref: "#/components/schemas/ServerCommonRecordDto"
          nullable: true
          type: array
        proxmox:
          items:
            $ref: "#/components/schemas/ServerCommonRecordDto"
          nullable: true
          type: array
        vsphere:
          items:
            $ref: "#/components/schemas/ServerCommonRecordDto"
          nullable: true
          type: array
        zadara:
          items:
            $ref: "#/components/schemas/ServerCommonRecordDto"
          nullable: true
          type: array
        openshift:
          items:
            $ref: "#/components/schemas/ServerCommonRecordDto"
          nullable: true
          type: array
        zededa:
          items:
            $ref: "#/components/schemas/ServerCommonRecordDto"
          nullable: true
          type: array
        genericK8S:
          items:
            $ref: "#/components/schemas/ServerCommonRecordDto"
          nullable: true
          type: array
        failed:
          items:
            $ref: "#/components/schemas/ServerCommonRecordDto"
          nullable: true
          type: array
        succeeded:
          items:
            $ref: "#/components/schemas/ServerCommonRecordDto"
          nullable: true
          type: array
        waiting:
          items:
            $ref: "#/components/schemas/ServerCommonRecordDto"
          nullable: true
          type: array
        updating:
          items:
            $ref: "#/components/schemas/ServerCommonRecordDto"
          nullable: true
          type: array
        deleting:
          items:
            $ref: "#/components/schemas/ServerCommonRecordDto"
          nullable: true
          type: array
        purging:
          items:
            $ref: "#/components/schemas/ServerCommonRecordDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
        totalCpu:
          format: int32
          type: integer
        totalRam:
          format: int64
          type: integer
        totalDiskSize:
          format: int64
          type: integer
        totalFailedCount:
          format: int32
          type: integer
        totalSucceededCount:
          format: int32
          type: integer
        totalUpdatingCount:
          format: int32
          type: integer
        totalPendingCount:
          format: int32
          type: integer
        totalAwsCount:
          format: int32
          type: integer
        totalAzureCount:
          format: int32
          type: integer
        totalOpenstackCount:
          format: int32
          type: integer
        totalGoogleCount:
          format: int32
          type: integer
        totalTanzuCount:
          format: int32
          type: integer
        totalOpenshiftCount:
          format: int32
          type: integer
        totalProxmoxCount:
          format: int32
          type: integer
        totalVsphereCount:
          format: int32
          type: integer
        totalZadaraCount:
          format: int32
          type: integer
        totalZededaCount:
          format: int32
          type: integer
        totalGenericK8SCount:
          format: int32
          type: integer
        usedResources:
          items:
            $ref: "#/components/schemas/UserResourceChartDto"
          nullable: true
          type: array
      type: object
    ServerCommonRecordDto:
      additionalProperties: false
      example:
        names:
        - names
        - names
        projectName: projectName
        projectId: 7
      properties:
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
        names:
          items:
            type: string
          nullable: true
          type: array
      type: object
    ServerForCreateDto:
      additionalProperties: false
      example:
        proxmoxExtraDiskSize: 5
        role: Bastion
        spotPrice: 5.962133916683182
        count: 1
        availabilityZone: availabilityZone
        proxmoxRole: NONE
        flavor: flavor
        spotInstance: true
        autoscalingGroup: autoscalingGroup
        diskSize: 6
        replicaCount: 2
        wasmEnabled: true
        hypervisor: hypervisor
        name: name
        useLocalDisk: true
        kubernetesNodeLabels:
        - value: value
          key: key
        - value: value
          key: key
        projectId: 0
      properties:
        name:
          nullable: true
          type: string
        role:
          $ref: "#/components/schemas/CloudRole"
        projectId:
          format: int32
          type: integer
        diskSize:
          format: int64
          type: integer
        flavor:
          nullable: true
          type: string
        count:
          format: int32
          type: integer
        spotPrice:
          format: double
          nullable: true
          type: number
        spotInstance:
          type: boolean
        wasmEnabled:
          type: boolean
        autoscalingGroup:
          nullable: true
          type: string
        availabilityZone:
          nullable: true
          type: string
        proxmoxExtraDiskSize:
          format: int32
          type: integer
        proxmoxRole:
          $ref: "#/components/schemas/ProxmoxRole"
        hypervisor:
          nullable: true
          type: string
        kubernetesNodeLabels:
          items:
            $ref: "#/components/schemas/KubernetesNodeLabelsDto"
          nullable: true
          type: array
        replicaCount:
          format: int32
          nullable: true
          type: integer
        useLocalDisk:
          type: boolean
      type: object
    ServerListDto:
      additionalProperties: false
      example:
        proxmoxExtraDiskSize: 9
        role: Bastion
        spotPrice: 7.061401241503109
        awsHostName: awsHostName
        actionButtons:
          reboot: true
          console: true
          status: true
        availabilityZone: availabilityZone
        proxmoxRole: NONE
        organizationId: 6
        shutOff: true
        createdAt: createdAt
        spotInstance: true
        autoscalingGroup: autoscalingGroup
        diskSize: 5.962133916683182
        replicaCount: 3
        kubernetesHealth: kubernetesHealth
        instanceId: instanceId
        cloudType: NONE
        hypervisor: hypervisor
        useLocalDisk: true
        id: 0
        kubernetesNodeLabels:
        - value: value
          key: key
        - value: value
          key: key
        ram: 2.3021358869347655
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        ipAddress: ipAddress
        cpu: 5
        hypervisorId: hypervisorId
        flavor: flavor
        wasmEnabled: true
        createdBy: createdBy
        providerID: providerID
        name: name
        lastModified: lastModified
        projectName: projectName
        projectId: 1
        status: status
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        projectName:
          type: string
        organizationName:
          type: string
        organizationId:
          format: int32
          type: integer
        projectId:
          format: int32
          type: integer
        ipAddress:
          nullable: true
          type: string
        diskSize:
          format: double
          type: number
        kubernetesHealth:
          type: string
        cpu:
          format: int32
          type: integer
        ram:
          format: double
          type: number
        role:
          $ref: "#/components/schemas/CloudRole"
        status:
          type: string
        createdAt:
          type: string
        cloudType:
          $ref: "#/components/schemas/CloudType"
        createdBy:
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        spotPrice:
          format: double
          type: number
        spotInstance:
          type: boolean
        shutOff:
          type: boolean
        useLocalDisk:
          type: boolean
        autoscalingGroup:
          nullable: true
          type: string
        providerID:
          nullable: true
          type: string
        instanceId:
          nullable: true
          type: string
        awsHostName:
          nullable: true
          type: string
        availabilityZone:
          nullable: true
          type: string
        hypervisor:
          nullable: true
          type: string
        hypervisorId:
          nullable: true
          type: string
        proxmoxRole:
          $ref: "#/components/schemas/ProxmoxRole"
        proxmoxExtraDiskSize:
          format: int32
          type: integer
        actionButtons:
          $ref: "#/components/schemas/ServerActionButtonVisibilityDto"
        kubernetesNodeLabels:
          items:
            $ref: "#/components/schemas/KubernetesNodeLabelsDto"
          type: array
        replicaCount:
          format: int32
          nullable: true
          type: integer
        wasmEnabled:
          type: boolean
        flavor:
          nullable: true
          type: string
      required:
      - autoscalingGroup
      - availabilityZone
      - awsHostName
      - cloudType
      - cpu
      - createdAt
      - createdBy
      - diskSize
      - flavor
      - hypervisor
      - hypervisorId
      - id
      - instanceId
      - ipAddress
      - kubernetesHealth
      - kubernetesNodeLabels
      - lastModified
      - lastModifiedBy
      - name
      - organizationId
      - organizationName
      - projectId
      - projectName
      - providerID
      - proxmoxExtraDiskSize
      - proxmoxRole
      - ram
      - replicaCount
      - role
      - shutOff
      - spotInstance
      - spotPrice
      - status
      - wasmEnabled
      type: object
    ServerTemplateDto:
      additionalProperties: false
      example:
        flavor: flavor
        diskSize: 1.4894159098541704
        role: Bastion
        count: 6
      properties:
        role:
          $ref: "#/components/schemas/CloudRole"
        flavor:
          nullable: true
          type: string
        diskSize:
          format: double
          type: number
        count:
          format: int32
          type: integer
      type: object
    ServersForBillingDto:
      additionalProperties: false
      example:
        cpu: 1
        ram: 5
      properties:
        cpu:
          format: int32
          type: integer
        ram:
          format: int64
          type: integer
      required:
      - cpu
      - ram
      type: object
    ServersList:
      additionalProperties: false
      example:
        data:
        - proxmoxExtraDiskSize: 9
          role: Bastion
          spotPrice: 7.061401241503109
          awsHostName: awsHostName
          actionButtons:
            reboot: true
            console: true
            status: true
          availabilityZone: availabilityZone
          proxmoxRole: NONE
          organizationId: 6
          shutOff: true
          createdAt: createdAt
          spotInstance: true
          autoscalingGroup: autoscalingGroup
          diskSize: 5.962133916683182
          replicaCount: 3
          kubernetesHealth: kubernetesHealth
          instanceId: instanceId
          cloudType: NONE
          hypervisor: hypervisor
          useLocalDisk: true
          id: 0
          kubernetesNodeLabels:
          - value: value
            key: key
          - value: value
            key: key
          ram: 2.3021358869347655
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          ipAddress: ipAddress
          cpu: 5
          hypervisorId: hypervisorId
          flavor: flavor
          wasmEnabled: true
          createdBy: createdBy
          providerID: providerID
          name: name
          lastModified: lastModified
          projectName: projectName
          projectId: 1
          status: status
        - proxmoxExtraDiskSize: 9
          role: Bastion
          spotPrice: 7.061401241503109
          awsHostName: awsHostName
          actionButtons:
            reboot: true
            console: true
            status: true
          availabilityZone: availabilityZone
          proxmoxRole: NONE
          organizationId: 6
          shutOff: true
          createdAt: createdAt
          spotInstance: true
          autoscalingGroup: autoscalingGroup
          diskSize: 5.962133916683182
          replicaCount: 3
          kubernetesHealth: kubernetesHealth
          instanceId: instanceId
          cloudType: NONE
          hypervisor: hypervisor
          useLocalDisk: true
          id: 0
          kubernetesNodeLabels:
          - value: value
            key: key
          - value: value
            key: key
          ram: 2.3021358869347655
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          ipAddress: ipAddress
          cpu: 5
          hypervisorId: hypervisorId
          flavor: flavor
          wasmEnabled: true
          createdBy: createdBy
          providerID: providerID
          name: name
          lastModified: lastModified
          projectName: projectName
          projectId: 1
          status: status
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/ServerListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    ServersListForDetails:
      additionalProperties: false
      example:
        data:
        - proxmoxExtraDiskSize: 9
          role: Bastion
          spotPrice: 7.061401241503109
          awsHostName: awsHostName
          actionButtons:
            reboot: true
            console: true
            status: true
          availabilityZone: availabilityZone
          proxmoxRole: NONE
          organizationId: 6
          shutOff: true
          createdAt: createdAt
          spotInstance: true
          autoscalingGroup: autoscalingGroup
          diskSize: 5.962133916683182
          replicaCount: 3
          kubernetesHealth: kubernetesHealth
          instanceId: instanceId
          cloudType: NONE
          hypervisor: hypervisor
          useLocalDisk: true
          id: 0
          kubernetesNodeLabels:
          - value: value
            key: key
          - value: value
            key: key
          ram: 2.3021358869347655
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          ipAddress: ipAddress
          cpu: 5
          hypervisorId: hypervisorId
          flavor: flavor
          wasmEnabled: true
          createdBy: createdBy
          providerID: providerID
          name: name
          lastModified: lastModified
          projectName: projectName
          projectId: 1
          status: status
        - proxmoxExtraDiskSize: 9
          role: Bastion
          spotPrice: 7.061401241503109
          awsHostName: awsHostName
          actionButtons:
            reboot: true
            console: true
            status: true
          availabilityZone: availabilityZone
          proxmoxRole: NONE
          organizationId: 6
          shutOff: true
          createdAt: createdAt
          spotInstance: true
          autoscalingGroup: autoscalingGroup
          diskSize: 5.962133916683182
          replicaCount: 3
          kubernetesHealth: kubernetesHealth
          instanceId: instanceId
          cloudType: NONE
          hypervisor: hypervisor
          useLocalDisk: true
          id: 0
          kubernetesNodeLabels:
          - value: value
            key: key
          - value: value
            key: key
          ram: 2.3021358869347655
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          ipAddress: ipAddress
          cpu: 5
          hypervisorId: hypervisorId
          flavor: flavor
          wasmEnabled: true
          createdBy: createdBy
          providerID: providerID
          name: name
          lastModified: lastModified
          projectName: projectName
          projectId: 1
          status: status
        project:
          spotEnabled: true
          isOpaEnabled: true
          opaProfileId: 3
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 7
          diskSize: 7.058770351582356
          usedRam: 9
          cloudType: AWS
          cloudId: 1
          isLocked: true
          accessProfileName: accessProfileName
          kubernetesProfileId: 6
          minSize: 7
          bastion: 7
          id: 1
          worker: 4
          kubernetesVersion: kubernetesVersion
          usedCpu: 9
          vmVolumeSizeLimit: 6
          isAutoscalingSpotEnabled: true
          isAutoscalingEnabled: true
          isAutoUpgrade: true
          kubernetesProfileName: kubernetesProfileName
          accessIp: accessIp
          organizationName: organizationName
          hasSelectedFlavors: true
          isDrsEnabled: true
          cpuLimit: 1
          quotaId: 6
          vmUsedCpu: 3
          allowSpotWorkers: true
          maxSpotPrice: 6.519180951018382
          vmRamLimit: 9
          flavor: flavor
          vmUsedRam: 6
          proxmoxStorage: NFS
          usedDiskSize: 6
          vmUsedVolumeSize: 1
          name: name
          allowFullSpotKubernetes: true
          status: "Null"
          accessProfileId: 2
          maxSize: 0
          autoscalingGroupName: autoscalingGroupName
          expiredAt: expiredAt
          alertingProfileName: alertingProfileName
          hasNfsServer: true
          totalHourlyCost: 3.0937452626664474
          ramLimit: 4
          opaProfileName: opaProfileName
          s3CredentialId: 5
          isProjectMaintenanceModeEnabled: true
          isDeprecated: true
          alertsCount: 2
          allowSpotVMs: true
          vmCpuLimit: 8
          aiCredentialId: 6
          aiEnabled: true
          isMonitoringEnabled: true
          health: "Null"
          diskSizeLimit: 5
          masterReady: 1
          hasKubeConfigFile: true
          alertingProfileId: 6
          wasmEnabled: true
          cloudName: cloudName
          isBackupEnabled: true
          hypervisors:
          - hypervisors
          - hypervisors
          certificationExpiredAt: certificationExpiredAt
          isMaintenanceModeEnabled: true
      properties:
        data:
          items:
            $ref: "#/components/schemas/ServerListDto"
          nullable: true
          type: array
        project:
          $ref: "#/components/schemas/ProjectDetailsForServersDto"
      required:
      - data
      - project
      type: object
    ServersSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    ServersSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
          projectName: projectName
          projectId: 1
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
          projectName: projectName
          projectId: 1
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/ServersSearchResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    ServersSearchResponseData:
      additionalProperties: false
      example:
        organizationId: 6
        organizationName: organizationName
        name: name
        id: 0
        projectName: projectName
        projectId: 1
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        organizationName:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
      type: object
    ServiceSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        includePublicImportedClusters: true
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
        includePublicImportedClusters:
          nullable: true
          type: boolean
      type: object
    ServiceSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchKubernetesResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    SetTicketPriorityCommand:
      additionalProperties: false
      example:
        id: id
        priority: Low
      properties:
        id:
          nullable: true
          type: string
        priority:
          $ref: "#/components/schemas/TicketPriority"
      type: object
    ShelveStandAloneVmCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    SilenceOperationsCommand:
      additionalProperties: false
      example:
        mode: mode
        reason: reason
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
        reason:
          nullable: true
          type: string
      type: object
    SimplePrometheusEntity:
      additionalProperties: false
      example:
        prometheusRuleName: prometheusRuleName
        prometheusRuleId: 1
      properties:
        prometheusRuleId:
          format: int32
          type: integer
        prometheusRuleName:
          nullable: true
          type: string
      required:
      - prometheusRuleId
      - prometheusRuleName
      type: object
    SlackConfigurationDto:
      additionalProperties: false
      example:
        organizationId: 6
        organizationName: organizationName
        name: name
        channel: channel
        id: 0
        url: url
        slackType: Alert
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        channel:
          nullable: true
          type: string
        organizationName:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        slackType:
          $ref: "#/components/schemas/SlackType"
      required:
      - channel
      - id
      - name
      - organizationId
      - organizationName
      - slackType
      - url
      type: object
    SlackConfigurationList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          channel: channel
          id: 0
          url: url
          slackType: Alert
        - organizationId: 6
          organizationName: organizationName
          name: name
          channel: channel
          id: 0
          url: url
          slackType: Alert
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/SlackConfigurationDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    SlackType:
      enum:
      - Alert
      - General
      type: string
    SpotVmOperationCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    SpotWorkerOperationCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    SshKeyCommand:
      additionalProperties: false
      example:
        sshPublicKey: sshPublicKey
      properties:
        sshPublicKey:
          nullable: true
          type: string
      type: object
    SshUserCreateDto:
      additionalProperties: false
      example:
        sshPublicKey: sshPublicKey
        name: name
      properties:
        name:
          nullable: true
          type: string
        sshPublicKey:
          nullable: true
          type: string
      type: object
    SshUsersListDto:
      additionalProperties: false
      example:
        sshPublicKey: sshPublicKey
        accessProfileName: accessProfileName
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        sshPublicKey:
          nullable: true
          type: string
        accessProfileName:
          nullable: true
          type: string
      required:
      - accessProfileName
      - id
      - name
      - sshPublicKey
      type: object
    StandAloneMetaDataDto:
      additionalProperties: false
      example:
        value: value
        key: key
      properties:
        key:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    StandAloneMetaDataDtoForVm:
      additionalProperties: false
      example:
        id: 7
        value: value
        key: key
      properties:
        id:
          format: int32
          type: integer
        key:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      required:
      - id
      - key
      - value
      type: object
    StandAloneProfileCreateCommand:
      additionalProperties: false
      example:
        organizationId: 1
        name: name
        securityGroups:
        - protocol: ICMP
          name: name
          portMinRange: 0
          portMaxRange: 6
          remoteIpPrefix: remoteIpPrefix
        - protocol: ICMP
          name: name
          portMinRange: 0
          portMaxRange: 6
          remoteIpPrefix: remoteIpPrefix
        publicKey: publicKey
      properties:
        name:
          nullable: true
          type: string
        publicKey:
          nullable: true
          type: string
        securityGroups:
          items:
            $ref: "#/components/schemas/StandAloneProfileSecurityGroupDto"
          nullable: true
          type: array
        organizationId:
          format: int32
          nullable: true
          type: integer
      type: object
    StandAloneProfileForDetailsDto:
      additionalProperties: false
      example:
        name: name
        securityGroups:
        - protocol: protocol
          name: name
          id: 3
          portMinRange: 2
          portMaxRange: 4
          isRdpPortEnabled: true
          remoteIpPrefix: remoteIpPrefix
        - protocol: protocol
          name: name
          id: 3
          portMinRange: 2
          portMaxRange: 4
          isRdpPortEnabled: true
          remoteIpPrefix: remoteIpPrefix
        id: 9
        publicKey: publicKey
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        publicKey:
          nullable: true
          type: string
        securityGroups:
          items:
            $ref: "#/components/schemas/StandAloneProfileSecurityGroupForDetailsDto"
          nullable: true
          type: array
      required:
      - id
      - name
      - publicKey
      - securityGroups
      type: object
    StandAloneProfileLockManagementCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    StandAloneProfileSecurityGroupDto:
      additionalProperties: false
      example:
        protocol: ICMP
        name: name
        portMinRange: 0
        portMaxRange: 6
        remoteIpPrefix: remoteIpPrefix
      properties:
        name:
          nullable: true
          type: string
        protocol:
          $ref: "#/components/schemas/SecurityGroupProtocol"
        portMinRange:
          format: int32
          type: integer
        portMaxRange:
          format: int32
          type: integer
        remoteIpPrefix:
          nullable: true
          type: string
      type: object
    StandAloneProfileSecurityGroupForDetailsDto:
      additionalProperties: false
      example:
        protocol: protocol
        name: name
        id: 3
        portMinRange: 2
        portMaxRange: 4
        isRdpPortEnabled: true
        remoteIpPrefix: remoteIpPrefix
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        protocol:
          nullable: true
          type: string
        portMinRange:
          format: int32
          type: integer
        portMaxRange:
          format: int32
          type: integer
        remoteIpPrefix:
          nullable: true
          type: string
        isRdpPortEnabled:
          type: boolean
      required:
      - id
      - isRdpPortEnabled
      - name
      - portMaxRange
      - portMinRange
      - protocol
      - remoteIpPrefix
      type: object
    StandAloneProfileUpdateCommand:
      additionalProperties: false
      example:
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    StandAloneProfiles:
      additionalProperties: false
      example:
        data:
        - organizationId: 5
          standaloneVms:
          - name: name
            id: 6
            projectId: 1
          - name: name
            id: 6
            projectId: 1
          createdAt: createdAt
          organizationName: organizationName
          partnerLogo: partnerLogo
          isLocked: true
          name: name
          id: 0
          publicKey: publicKey
        - organizationId: 5
          standaloneVms:
          - name: name
            id: 6
            projectId: 1
          - name: name
            id: 6
            projectId: 1
          createdAt: createdAt
          organizationName: organizationName
          partnerLogo: partnerLogo
          isLocked: true
          name: name
          id: 0
          publicKey: publicKey
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/StandAloneProfilesListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    StandAloneProfilesListDto:
      additionalProperties: false
      example:
        organizationId: 5
        standaloneVms:
        - name: name
          id: 6
          projectId: 1
        - name: name
          id: 6
          projectId: 1
        createdAt: createdAt
        organizationName: organizationName
        partnerLogo: partnerLogo
        isLocked: true
        name: name
        id: 0
        publicKey: publicKey
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        publicKey:
          nullable: true
          type: string
        isLocked:
          type: boolean
        standaloneVms:
          items:
            $ref: "#/components/schemas/StandAloneVmSmallDetailDto"
          nullable: true
          type: array
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
        partnerLogo:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
      required:
      - createdAt
      - id
      - isLocked
      - name
      - organizationId
      - organizationName
      - partnerLogo
      - publicKey
      - standaloneVms
      type: object
    StandAloneProfilesSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    StandAloneProfilesSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        - organizationId: 6
          organizationName: organizationName
          name: name
          id: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    StandAloneVmDiskDto:
      additionalProperties: false
      example:
        volumeType: volumeType
        size: 2
        name: name
        lunId: 7
        deviceName: deviceName
      properties:
        name:
          nullable: true
          type: string
        size:
          format: int64
          type: integer
        volumeType:
          nullable: true
          type: string
        deviceName:
          nullable: true
          type: string
        lunId:
          format: int32
          nullable: true
          type: integer
      type: object
    StandAloneVmDiskForDetailsDto:
      additionalProperties: false
      example:
        volumeType: volumeType
        targetSize: 2
        name: name
        lunId: lunId
        id: 5
        deviceName: deviceName
        currentSize: 5
        status: Deleting
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        currentSize:
          format: int64
          type: integer
        targetSize:
          format: int64
          type: integer
        volumeType:
          nullable: true
          type: string
        deviceName:
          nullable: true
          type: string
        lunId:
          nullable: true
          type: string
        status:
          $ref: "#/components/schemas/StandAloneVmDiskStatus"
      required:
      - currentSize
      - deviceName
      - id
      - lunId
      - name
      - status
      - targetSize
      - volumeType
      type: object
    StandAloneVmDiskStatus:
      enum:
      - Deleting
      - Failure
      - Waiting
      - Ready
      - Updating
      - Repairing
      type: string
    StandAloneVmIpManagementCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    StandAloneVmListForDetails:
      additionalProperties: false
      example:
        data:
        - volumeType: volumeType
          sshPublicKey: sshPublicKey
          spotPrice: 1.4658129805029452
          disks:
          - volumeType: volumeType
            targetSize: 2
            name: name
            lunId: lunId
            id: 5
            deviceName: deviceName
            currentSize: 5
            status: Deleting
          - volumeType: volumeType
            targetSize: 2
            name: name
            lunId: lunId
            id: 5
            deviceName: deviceName
            currentSize: 5
            status: Deleting
          publicIpEnabled: true
          actionButtons:
            reboot: true
            showConsole: true
            stop: true
            start: true
            unshelve: true
            showStatus: true
            shelve: true
          availabilityZone: availabilityZone
          volumeSize: 6
          createdAt: createdAt
          spotInstance: true
          hypervisor: hypervisor
          isWindows: true
          id: 0
          imageName: imageName
          imageId: imageId
          lastModifiedBy: lastModifiedBy
          profile:
            name: name
            securityGroups:
            - protocol: protocol
              name: name
              id: 3
              portMinRange: 2
              portMaxRange: 4
              isRdpPortEnabled: true
              remoteIpPrefix: remoteIpPrefix
            - protocol: protocol
              name: name
              id: 3
              portMinRange: 2
              portMaxRange: 4
              isRdpPortEnabled: true
              remoteIpPrefix: remoteIpPrefix
            id: 9
            publicKey: publicKey
          ipAddress: ipAddress
          publicIp: publicIp
          hypervisorId: hypervisorId
          standAloneMetaDatas:
          - id: 7
            value: value
            key: key
          - id: 7
            value: value
            key: key
          targetFlavor: targetFlavor
          cloudInit: cloudInit
          createdBy: createdBy
          name: name
          currentFlavor: currentFlavor
          lastModified: lastModified
          status: status
        - volumeType: volumeType
          sshPublicKey: sshPublicKey
          spotPrice: 1.4658129805029452
          disks:
          - volumeType: volumeType
            targetSize: 2
            name: name
            lunId: lunId
            id: 5
            deviceName: deviceName
            currentSize: 5
            status: Deleting
          - volumeType: volumeType
            targetSize: 2
            name: name
            lunId: lunId
            id: 5
            deviceName: deviceName
            currentSize: 5
            status: Deleting
          publicIpEnabled: true
          actionButtons:
            reboot: true
            showConsole: true
            stop: true
            start: true
            unshelve: true
            showStatus: true
            shelve: true
          availabilityZone: availabilityZone
          volumeSize: 6
          createdAt: createdAt
          spotInstance: true
          hypervisor: hypervisor
          isWindows: true
          id: 0
          imageName: imageName
          imageId: imageId
          lastModifiedBy: lastModifiedBy
          profile:
            name: name
            securityGroups:
            - protocol: protocol
              name: name
              id: 3
              portMinRange: 2
              portMaxRange: 4
              isRdpPortEnabled: true
              remoteIpPrefix: remoteIpPrefix
            - protocol: protocol
              name: name
              id: 3
              portMinRange: 2
              portMaxRange: 4
              isRdpPortEnabled: true
              remoteIpPrefix: remoteIpPrefix
            id: 9
            publicKey: publicKey
          ipAddress: ipAddress
          publicIp: publicIp
          hypervisorId: hypervisorId
          standAloneMetaDatas:
          - id: 7
            value: value
            key: key
          - id: 7
            value: value
            key: key
          targetFlavor: targetFlavor
          cloudInit: cloudInit
          createdBy: createdBy
          name: name
          currentFlavor: currentFlavor
          lastModified: lastModified
          status: status
        project:
          isProjectMaintenanceModeEnabled: true
          organizationName: organizationName
          hasSelectedFlavors: true
          isDrsEnabled: true
          allowSpotVMs: true
          cloudCredentialRevision: 6
          availabilityZones:
          - availabilityZones
          - availabilityZones
          allowSpotWorkers: true
          maxSpotPrice: 7.457744773683766
          organizationId: 1
          expiredAt: expiredAt
          cloudType: AWS
          cloudName: cloudName
          cloudId: 1
          isLocked: true
          name: name
          allowFullSpotKubernetes: true
          hypervisors:
          - hypervisors
          - hypervisors
          id: 7
          totalHourlyCost: 1.1730742509559433
          projectCloudRevision: 1
          status: "Null"
          isMaintenanceModeEnabled: true
      properties:
        data:
          items:
            $ref: "#/components/schemas/StandaloneVmsListForDetailsDto"
          nullable: true
          type: array
        project:
          $ref: "#/components/schemas/ProjectDetailsForVmsDto"
      required:
      - data
      - project
      type: object
    StandAloneVmSmallDetailDto:
      additionalProperties: false
      example:
        name: name
        id: 6
        projectId: 1
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
      required:
      - id
      - name
      - projectId
      type: object
    StandAloneVmStatus:
      enum:
      - Deleting
      - Failure
      - Waiting
      - Ready
      - Updating
      - Repairing
      type: string
    StandaloneProfileListDto:
      additionalProperties: false
      example:
        standAloneProfileSecurityGroups:
        - protocol: protocol
          name: name
          id: 2
          portMinRange: 4
          portMaxRange: 7
          remoteIpPrefix: remoteIpPrefix
        - protocol: protocol
          name: name
          id: 2
          portMinRange: 4
          portMaxRange: 7
          remoteIpPrefix: remoteIpPrefix
        isLocked: true
        name: name
        id: 9
        revision: 3
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        revision:
          format: int32
          type: integer
        isLocked:
          type: boolean
        standAloneProfileSecurityGroups:
          items:
            $ref: "#/components/schemas/StandaloneProfileSecurityGroupListDto"
          nullable: true
          type: array
      required:
      - id
      - isLocked
      - name
      - revision
      - standAloneProfileSecurityGroups
      type: object
    StandaloneProfileSecurityGroupListDto:
      additionalProperties: false
      example:
        protocol: protocol
        name: name
        id: 2
        portMinRange: 4
        portMaxRange: 7
        remoteIpPrefix: remoteIpPrefix
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        protocol:
          nullable: true
          type: string
        portMinRange:
          format: int32
          type: integer
        portMaxRange:
          format: int32
          type: integer
        remoteIpPrefix:
          nullable: true
          type: string
      required:
      - id
      - name
      - portMaxRange
      - portMinRange
      - protocol
      - remoteIpPrefix
      type: object
    StandaloneVisibilityDto:
      additionalProperties: false
      example:
        reboot: true
        showConsole: true
        stop: true
        start: true
        unshelve: true
        showStatus: true
        shelve: true
      properties:
        showStatus:
          type: boolean
        showConsole:
          type: boolean
        shelve:
          type: boolean
        unshelve:
          type: boolean
        start:
          type: boolean
        stop:
          type: boolean
        reboot:
          type: boolean
      required:
      - reboot
      - shelve
      - showConsole
      - showStatus
      - start
      - stop
      - unshelve
      type: object
    StandaloneVmListDto:
      additionalProperties: false
      example:
        volumeType: volumeType
        imageName: imageName
        organizationName: organizationName
        flavorId: flavorId
        publicIpEnabled: true
        ipAddress: ipAddress
        cpu: 5
        publicIp: publicIp
        volumeSize: 6
        revision: 2
        organizationId: 1
        createdAt: createdAt
        createdBy: createdBy
        cloudType: NONE
        name: name
        isWindows: true
        id: 0
        lastModified: lastModified
        projectName: projectName
        projectId: 7
        standAloneProfile:
          standAloneProfileSecurityGroups:
          - protocol: protocol
            name: name
            id: 2
            portMinRange: 4
            portMaxRange: 7
            remoteIpPrefix: remoteIpPrefix
          - protocol: protocol
            name: name
            id: 2
            portMinRange: 4
            portMaxRange: 7
            remoteIpPrefix: remoteIpPrefix
          isLocked: true
          name: name
          id: 9
          revision: 3
        ram: 5
        status: Deleting
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        flavorId:
          type: string
        volumeSize:
          format: int64
          type: integer
        organizationName:
          type: string
        organizationId:
          format: int32
          type: integer
        ram:
          format: int64
          type: integer
        cpu:
          format: int32
          type: integer
        volumeType:
          nullable: true
          type: string
        publicIpEnabled:
          type: boolean
        publicIp:
          nullable: true
          type: string
        ipAddress:
          nullable: true
          type: string
        cloudType:
          $ref: "#/components/schemas/CloudType"
        imageName:
          nullable: true
          type: string
        revision:
          format: int32
          type: integer
        isWindows:
          type: boolean
        status:
          $ref: "#/components/schemas/StandAloneVmStatus"
        projectName:
          type: string
        projectId:
          format: int32
          type: integer
        standAloneProfile:
          $ref: "#/components/schemas/StandaloneProfileListDto"
        createdAt:
          nullable: true
          type: string
        createdBy:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
      required:
      - cloudType
      - cpu
      - createdAt
      - createdBy
      - flavorId
      - id
      - imageName
      - ipAddress
      - isWindows
      - lastModified
      - name
      - organizationId
      - organizationName
      - projectId
      - projectName
      - publicIp
      - publicIpEnabled
      - ram
      - revision
      - standAloneProfile
      - status
      - volumeSize
      - volumeType
      type: object
    StandaloneVmsForBillingDto:
      additionalProperties: false
      example:
        cpu: 5
        ram: 2
      properties:
        cpu:
          format: int32
          type: integer
        ram:
          format: int64
          type: integer
      required:
      - cpu
      - ram
      type: object
    StandaloneVmsList:
      additionalProperties: false
      example:
        data:
        - volumeType: volumeType
          imageName: imageName
          organizationName: organizationName
          flavorId: flavorId
          publicIpEnabled: true
          ipAddress: ipAddress
          cpu: 5
          publicIp: publicIp
          volumeSize: 6
          revision: 2
          organizationId: 1
          createdAt: createdAt
          createdBy: createdBy
          cloudType: NONE
          name: name
          isWindows: true
          id: 0
          lastModified: lastModified
          projectName: projectName
          projectId: 7
          standAloneProfile:
            standAloneProfileSecurityGroups:
            - protocol: protocol
              name: name
              id: 2
              portMinRange: 4
              portMaxRange: 7
              remoteIpPrefix: remoteIpPrefix
            - protocol: protocol
              name: name
              id: 2
              portMinRange: 4
              portMaxRange: 7
              remoteIpPrefix: remoteIpPrefix
            isLocked: true
            name: name
            id: 9
            revision: 3
          ram: 5
          status: Deleting
        - volumeType: volumeType
          imageName: imageName
          organizationName: organizationName
          flavorId: flavorId
          publicIpEnabled: true
          ipAddress: ipAddress
          cpu: 5
          publicIp: publicIp
          volumeSize: 6
          revision: 2
          organizationId: 1
          createdAt: createdAt
          createdBy: createdBy
          cloudType: NONE
          name: name
          isWindows: true
          id: 0
          lastModified: lastModified
          projectName: projectName
          projectId: 7
          standAloneProfile:
            standAloneProfileSecurityGroups:
            - protocol: protocol
              name: name
              id: 2
              portMinRange: 4
              portMaxRange: 7
              remoteIpPrefix: remoteIpPrefix
            - protocol: protocol
              name: name
              id: 2
              portMinRange: 4
              portMaxRange: 7
              remoteIpPrefix: remoteIpPrefix
            isLocked: true
            name: name
            id: 9
            revision: 3
          ram: 5
          status: Deleting
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/StandaloneVmListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    StandaloneVmsListForDetailsDto:
      additionalProperties: false
      example:
        volumeType: volumeType
        sshPublicKey: sshPublicKey
        spotPrice: 1.4658129805029452
        disks:
        - volumeType: volumeType
          targetSize: 2
          name: name
          lunId: lunId
          id: 5
          deviceName: deviceName
          currentSize: 5
          status: Deleting
        - volumeType: volumeType
          targetSize: 2
          name: name
          lunId: lunId
          id: 5
          deviceName: deviceName
          currentSize: 5
          status: Deleting
        publicIpEnabled: true
        actionButtons:
          reboot: true
          showConsole: true
          stop: true
          start: true
          unshelve: true
          showStatus: true
          shelve: true
        availabilityZone: availabilityZone
        volumeSize: 6
        createdAt: createdAt
        spotInstance: true
        hypervisor: hypervisor
        isWindows: true
        id: 0
        imageName: imageName
        imageId: imageId
        lastModifiedBy: lastModifiedBy
        profile:
          name: name
          securityGroups:
          - protocol: protocol
            name: name
            id: 3
            portMinRange: 2
            portMaxRange: 4
            isRdpPortEnabled: true
            remoteIpPrefix: remoteIpPrefix
          - protocol: protocol
            name: name
            id: 3
            portMinRange: 2
            portMaxRange: 4
            isRdpPortEnabled: true
            remoteIpPrefix: remoteIpPrefix
          id: 9
          publicKey: publicKey
        ipAddress: ipAddress
        publicIp: publicIp
        hypervisorId: hypervisorId
        standAloneMetaDatas:
        - id: 7
          value: value
          key: key
        - id: 7
          value: value
          key: key
        targetFlavor: targetFlavor
        cloudInit: cloudInit
        createdBy: createdBy
        name: name
        currentFlavor: currentFlavor
        lastModified: lastModified
        status: status
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        imageName:
          type: string
        imageId:
          type: string
        status:
          type: string
        cloudInit:
          nullable: true
          type: string
        volumeType:
          type: string
        volumeSize:
          format: int64
          type: integer
        createdAt:
          type: string
        createdBy:
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        sshPublicKey:
          type: string
        currentFlavor:
          type: string
        targetFlavor:
          nullable: true
          type: string
        publicIpEnabled:
          type: boolean
        publicIp:
          nullable: true
          type: string
        hypervisor:
          nullable: true
          type: string
        hypervisorId:
          nullable: true
          type: string
        ipAddress:
          nullable: true
          type: string
        spotPrice:
          format: double
          type: number
        spotInstance:
          type: boolean
        availabilityZone:
          nullable: true
          type: string
        actionButtons:
          $ref: "#/components/schemas/StandaloneVisibilityDto"
        isWindows:
          type: boolean
        disks:
          items:
            $ref: "#/components/schemas/StandAloneVmDiskForDetailsDto"
          type: array
        standAloneMetaDatas:
          items:
            $ref: "#/components/schemas/StandAloneMetaDataDtoForVm"
          type: array
        profile:
          $ref: "#/components/schemas/StandAloneProfileForDetailsDto"
      required:
      - actionButtons
      - availabilityZone
      - cloudInit
      - createdAt
      - createdBy
      - currentFlavor
      - disks
      - hypervisor
      - hypervisorId
      - id
      - imageId
      - imageName
      - ipAddress
      - isWindows
      - lastModified
      - lastModifiedBy
      - name
      - profile
      - publicIp
      - publicIpEnabled
      - spotInstance
      - spotPrice
      - sshPublicKey
      - standAloneMetaDatas
      - status
      - targetFlavor
      - volumeSize
      - volumeType
      type: object
    StartStandaloneVmCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    Status:
      additionalProperties: false
      example:
        phase: phase
        lastBackup: 2000-01-23T04:56:07.000+00:00
      properties:
        lastBackup:
          format: date-time
          type: string
        phase:
          nullable: true
          type: string
      type: object
    StopStandaloneVmCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    StorageClassesSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        includePublicImportedClusters: true
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
        includePublicImportedClusters:
          nullable: true
          type: boolean
      type: object
    StorageClassesSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchKubernetesResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    StorageListCommand:
      additionalProperties: false
      example:
        tokenId: tokenId
        url: url
        tokenSecret: tokenSecret
      properties:
        url:
          nullable: true
          type: string
        tokenId:
          nullable: true
          type: string
        tokenSecret:
          nullable: true
          type: string
      type: object
    Stream:
      additionalProperties: false
      example:
        app: app
        container: container
        component: component
        filename: filename
        pod: pod
        tier: tier
        streamStream: streamStream
        namespace: namespace
        job: job
        podTemplateHash: podTemplateHash
      properties:
        job:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        pod:
          nullable: true
          type: string
        podTemplateHash:
          nullable: true
          type: string
        streamStream:
          nullable: true
          type: string
        app:
          nullable: true
          type: string
        container:
          nullable: true
          type: string
        filename:
          nullable: true
          type: string
        tier:
          nullable: true
          type: string
        component:
          nullable: true
          type: string
      type: object
    StripeInvoiceListDto:
      additionalProperties: false
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        price: 0.8008281904610115
        chargeReason: chargeReason
        id: id
        invoiceStatus: invoiceStatus
        chargeStatus: chargeStatus
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          nullable: true
          type: string
        invoiceStatus:
          nullable: true
          type: string
        chargeStatus:
          nullable: true
          type: string
        chargeReason:
          nullable: true
          type: string
        price:
          format: double
          type: number
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
      required:
      - chargeReason
      - chargeStatus
      - endDate
      - id
      - invoiceStatus
      - price
      - startDate
      type: object
    StripeInvoices:
      additionalProperties: false
      example:
        data:
        - endDate: 2000-01-23T04:56:07.000+00:00
          price: 0.8008281904610115
          chargeReason: chargeReason
          id: id
          invoiceStatus: invoiceStatus
          chargeStatus: chargeStatus
          startDate: 2000-01-23T04:56:07.000+00:00
        - endDate: 2000-01-23T04:56:07.000+00:00
          price: 0.8008281904610115
          chargeReason: chargeReason
          id: id
          invoiceStatus: invoiceStatus
          chargeStatus: chargeStatus
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: "#/components/schemas/StripeInvoiceListDto"
          nullable: true
          type: array
      required:
      - data
      type: object
    StripeSubscriptionItemDto:
      additionalProperties: false
      example:
        subscriptionItemId: subscriptionItemId
        productId: productId
        priceId: priceId
      properties:
        subscriptionItemId:
          nullable: true
          type: string
        priceId:
          nullable: true
          type: string
        productId:
          nullable: true
          type: string
      required:
      - priceId
      - productId
      - subscriptionItemId
      type: object
    StsActionCommand:
      additionalProperties: false
      example:
        name: name
        namespace: namespace
        action: Restart
        projectId: 0
        scaleReplicaCount: 6
      properties:
        projectId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        scaleReplicaCount:
          format: int32
          nullable: true
          type: integer
        action:
          $ref: "#/components/schemas/EStsAction"
      required:
      - action
      - name
      - namespace
      - projectId
      type: object
    StsSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        includePublicImportedClusters: true
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
        includePublicImportedClusters:
          nullable: true
          type: boolean
      type: object
    StsSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        - organizationId: 6
          organizationName: organizationName
          namespace: namespace
          metadataName: metadataName
          projectName: projectName
          projectId: 0
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/CommonSearchKubernetesResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    Subnet:
      additionalProperties: false
      example:
        name: name
        cidr: cidr
        id: id
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        cidr:
          nullable: true
          type: string
      type: object
    Subresource:
      additionalProperties: false
      example:
        metadata:
          key: ""
        name: name
        hourlyCost: hourlyCost
        costComponents:
        - unit: unit
          hourlyQuantity: hourlyQuantity
          price: price
          name: name
          hourlyCost: hourlyCost
          monthlyQuantity: monthlyQuantity
          usageBased: true
          priceNotFound: true
          monthlyCost: monthlyCost
        - unit: unit
          hourlyQuantity: hourlyQuantity
          price: price
          name: name
          hourlyCost: hourlyCost
          monthlyQuantity: monthlyQuantity
          usageBased: true
          priceNotFound: true
          monthlyCost: monthlyCost
        monthlyCost: monthlyCost
      properties:
        name:
          nullable: true
          type: string
        metadata:
          additionalProperties:
            nullable: true
          nullable: true
          type: object
        hourlyCost:
          nullable: true
          type: string
        monthlyCost:
          nullable: true
          type: string
        costComponents:
          items:
            $ref: "#/components/schemas/CostComponent"
          nullable: true
          type: array
      type: object
    Summary:
      additionalProperties: false
      example:
        totalUnsupportedResources: 1
        totalUsageBasedResources: 5
        totalNoPriceResources: 5
        noPriceResourceCounts:
          key: 7
        totalDetectedResources: 0
        totalSupportedResources: 6
        unsupportedResourceCounts:
          key: 2
      properties:
        totalDetectedResources:
          format: int32
          type: integer
        totalSupportedResources:
          format: int32
          type: integer
        totalUnsupportedResources:
          format: int32
          type: integer
        totalUsageBasedResources:
          format: int32
          type: integer
        totalNoPriceResources:
          format: int32
          type: integer
        unsupportedResourceCounts:
          additionalProperties:
            format: int32
            type: integer
          nullable: true
          type: object
        noPriceResourceCounts:
          additionalProperties:
            format: int32
            type: integer
          nullable: true
          type: object
      type: object
    SyncBackupCredentialsCommand:
      additionalProperties: false
      type: object
    SyncOpaProfilesCommand:
      additionalProperties: false
      type: object
    SyncOrganizationsCommand:
      additionalProperties: false
      type: object
    SyncProjectAppCommand:
      additionalProperties: false
      example:
        projectAppId: 0
        timeout: 6
      properties:
        projectAppId:
          format: int32
          type: integer
        timeout:
          format: int32
          nullable: true
          type: integer
      type: object
    SyncProjectAppsCommand:
      additionalProperties: false
      example:
        projectAppId: 0
      properties:
        projectAppId:
          format: int32
          nullable: true
          type: integer
      type: object
    SyncProjectsCommand:
      additionalProperties: false
      type: object
    TaikunLbResponseDto:
      additionalProperties: false
      example:
        privateIpFirst: privateIpFirst
        hypervisorSecond: hypervisorSecond
        virtualRouterId: virtualRouterId
        svcNamespace: svcNamespace
        publicIp: publicIp
        hypervisorFirst: hypervisorFirst
        id: 0
        svcName: svcName
        projectName: projectName
        virtualLbIpSecond: virtualLbIpSecond
        privateIpSecond: privateIpSecond
        virtualLbIpFirst: virtualLbIpFirst
      properties:
        id:
          format: int32
          type: integer
        publicIp:
          nullable: true
          type: string
        virtualLbIpFirst:
          nullable: true
          type: string
        virtualLbIpSecond:
          nullable: true
          type: string
        privateIpFirst:
          nullable: true
          type: string
        privateIpSecond:
          nullable: true
          type: string
        virtualRouterId:
          nullable: true
          type: string
        hypervisorFirst:
          nullable: true
          type: string
        hypervisorSecond:
          nullable: true
          type: string
        svcName:
          nullable: true
          type: string
        svcNamespace:
          nullable: true
          type: string
        projectName:
          nullable: true
          type: string
      required:
      - hypervisorFirst
      - hypervisorSecond
      - id
      - privateIpFirst
      - privateIpSecond
      - projectName
      - publicIp
      - svcName
      - svcNamespace
      - virtualLbIpFirst
      - virtualLbIpSecond
      - virtualRouterId
      type: object
    TanzuCredentialsList:
      additionalProperties: false
      example:
        data:
        - volumeType: volumeType
          projectCount: 6
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          url: url
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          port: 1
          createdBy: createdBy
          isLocked: true
          name: name
          namespace: namespace
          id: 0
          lastModified: lastModified
          continentName: continentName
          username: username
        - volumeType: volumeType
          projectCount: 6
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          url: url
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          port: 1
          createdBy: createdBy
          isLocked: true
          name: name
          namespace: namespace
          id: 0
          lastModified: lastModified
          continentName: continentName
          username: username
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/TanzuCredentialsListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    TanzuCredentialsListDto:
      additionalProperties: false
      example:
        volumeType: volumeType
        projectCount: 6
        projects:
        - name: name
          id: 5
        - name: name
          id: 5
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        url: url
        organizationId: 5
        createdAt: createdAt
        isDefault: true
        port: 1
        createdBy: createdBy
        isLocked: true
        name: name
        namespace: namespace
        id: 0
        lastModified: lastModified
        continentName: continentName
        username: username
      properties:
        id:
          format: int32
          type: integer
        projectCount:
          format: int32
          type: integer
        isLocked:
          type: boolean
        name:
          type: string
        username:
          type: string
        url:
          type: string
        volumeType:
          type: string
        namespace:
          type: string
        port:
          format: int32
          nullable: true
          type: integer
        projects:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          type: array
        createdBy:
          type: string
        createdAt:
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        isDefault:
          type: boolean
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        continentName:
          nullable: true
          type: string
      required:
      - continentName
      - createdAt
      - createdBy
      - id
      - isDefault
      - isLocked
      - lastModified
      - lastModifiedBy
      - name
      - namespace
      - organizationId
      - organizationName
      - port
      - projectCount
      - projects
      - url
      - username
      - volumeType
      type: object
    TanzuFlavorList:
      additionalProperties: false
      example:
        data:
        - name: name
          cpu: 0
          ram: 6.027456183070403
        - name: name
          cpu: 0
          ram: 6.027456183070403
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/TanzuFlavorsListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    TanzuFlavorsListDto:
      additionalProperties: false
      example:
        name: name
        cpu: 0
        ram: 6.027456183070403
      properties:
        name:
          nullable: true
          type: string
        cpu:
          format: int32
          type: integer
        ram:
          format: double
          type: number
      required:
      - cpu
      - name
      - ram
      type: object
    TanzuStorageListCommand:
      additionalProperties: false
      example:
        password: password
        port: 0
        namespace: namespace
        url: url
        username: username
      properties:
        username:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        namespace:
          nullable: true
          type: string
        port:
          format: int32
          nullable: true
          type: integer
      type: object
    TektonPipelinesCommand:
      additionalProperties: false
      type: object
    TicketPriority:
      enum:
      - Low
      - Medium
      - High
      type: string
    TofuMigrateCommand:
      additionalProperties: false
      example:
        force: true
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        force:
          type: boolean
      type: object
    ToggleExecutorCommand:
      additionalProperties: false
      example:
        mode: mode
        id: 0
      properties:
        id:
          format: int32
          type: integer
        mode:
          nullable: true
          type: string
      type: object
    ToggleKeycloakCommand:
      additionalProperties: false
      example:
        mode: mode
      properties:
        mode:
          nullable: true
          type: string
      type: object
    ToggleMaintenanceModeCommand:
      additionalProperties: false
      example:
        mode: mode
      properties:
        mode:
          nullable: true
          type: string
      type: object
    ToggleNotificationModeCommand:
      additionalProperties: false
      example:
        mode: mode
      properties:
        mode:
          nullable: true
          type: string
      type: object
    TransferList:
      additionalProperties: false
      example:
        role: Admin
        userName: userName
        userId: userId
      properties:
        userId:
          nullable: true
          type: string
        userName:
          nullable: true
          type: string
        role:
          $ref: "#/components/schemas/UserRole"
      required:
      - role
      - userId
      - userName
      type: object
    TransferTicketCommand:
      additionalProperties: false
      example:
        userId: userId
        ticketId: ticketId
      properties:
        ticketId:
          nullable: true
          type: string
        userId:
          nullable: true
          type: string
      type: object
    TwoFactorAuthLoginCommand:
      additionalProperties: false
      example:
        verificationCode: verificationCode
      properties:
        verificationCode:
          nullable: true
          type: string
      type: object
    TwoFactorAuthRecoveryCommand:
      additionalProperties: false
      example:
        recoveryCode: recoveryCode
      properties:
        recoveryCode:
          nullable: true
          type: string
      type: object
    TwoFactorAuthSetupCommand:
      additionalProperties: false
      type: object
    TwoFactorAuthSetupResult:
      additionalProperties: false
      example:
        sharedKey: sharedKey
        qrCodeUri: qrCodeUri
      properties:
        sharedKey:
          nullable: true
          type: string
        qrCodeUri:
          nullable: true
          type: string
      required:
      - qrCodeUri
      - sharedKey
      type: object
    TwoFactorAuthVerifyCommand:
      additionalProperties: false
      example:
        verificationCode: verificationCode
      properties:
        verificationCode:
          nullable: true
          type: string
      type: object
    TwoFactorAuthVerifyResult:
      additionalProperties: false
      example:
        recoveryCodes:
        - recoveryCodes
        - recoveryCodes
      properties:
        recoveryCodes:
          items:
            type: string
          nullable: true
          type: array
      type: object
    UnbindAppRepositoryCommand:
      additionalProperties: false
      example:
        organizationId: 0
        ids:
        - ids
        - ids
      properties:
        ids:
          items:
            type: string
          nullable: true
          type: array
        organizationId:
          format: int32
          nullable: true
          type: integer
      type: object
    UnbindFlavorFromProjectCommand:
      additionalProperties: false
      example:
        ids:
        - 0
        - 0
      properties:
        ids:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
      type: object
    UnbindProjectFromProjectGroupCommand:
      additionalProperties: false
      example:
        projectGroupId: 0
        projectIds:
        - 6
        - 6
      properties:
        projectGroupId:
          format: int32
          type: integer
        projectIds:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
      type: object
    UnbindProjectGroupFromUserGroupCommand:
      additionalProperties: false
      example:
        userGroupId: 0
        projectGroupIds:
        - 6
        - 6
      properties:
        userGroupId:
          format: int32
          type: integer
        projectGroupIds:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
      type: object
    UnbindUserFromUserGroupCommand:
      additionalProperties: false
      example:
        userGroupId: 0
        userIds:
        - userIds
        - userIds
      properties:
        userGroupId:
          format: int32
          type: integer
        userIds:
          items:
            type: string
          nullable: true
          type: array
      type: object
    UnbindUserGroupFromProjectGroupCommand:
      additionalProperties: false
      example:
        projectGroupId: 0
        userGroupIds:
        - 6
        - 6
      properties:
        projectGroupId:
          format: int32
          type: integer
        userGroupIds:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
      type: object
    UninstallProjectAppResult:
      additionalProperties: false
      example:
        isJobSkipped: true
      properties:
        isJobSkipped:
          type: boolean
      type: object
    UnshelveStandaloneVmCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    UpdateAccessProfileDto:
      additionalProperties: false
      example:
        httpProxy: httpProxy
        name: name
      properties:
        name:
          nullable: true
          type: string
        httpProxy:
          nullable: true
          type: string
      type: object
    UpdateAlertingProfileCommand:
      additionalProperties: false
      example:
        organizationId: 1
        slackConfigurationId: 6
        reminder: HalfHour
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        slackConfigurationId:
          format: int32
          nullable: true
          type: integer
        organizationId:
          format: int32
          nullable: true
          type: integer
        reminder:
          $ref: "#/components/schemas/AlertingReminder"
      type: object
    UpdateAwsCommand:
      additionalProperties: false
      example:
        awsAccessKeyId: awsAccessKeyId
        name: name
        id: 0
        awsSecretAccessKey: awsSecretAccessKey
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        awsSecretAccessKey:
          nullable: true
          type: string
        awsAccessKeyId:
          nullable: true
          type: string
      type: object
    UpdateAzureCommand:
      additionalProperties: false
      example:
        azureClientSecret: azureClientSecret
        azureClientId: azureClientId
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        azureClientSecret:
          nullable: true
          type: string
        azureClientId:
          nullable: true
          type: string
      type: object
    UpdateEdgeNodesCommand:
      additionalProperties: false
      example:
        id: 0
        edgeNodes:
        - edgeNodes
        - edgeNodes
      properties:
        id:
          format: int32
          type: integer
        edgeNodes:
          items:
            type: string
          nullable: true
          type: array
      type: object
    UpdateExecutorHealthStatusCommand:
      additionalProperties: false
      example:
        executorId: 0
        health: None
      properties:
        executorId:
          format: int32
          type: integer
        health:
          $ref: "#/components/schemas/ExecutorHealth"
      required:
      - executorId
      - health
      type: object
    UpdateGenericKubernetesCommand:
      additionalProperties: false
      example:
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      type: object
    UpdateHealthStatusCommand:
      additionalProperties: false
      example:
        health: "Null"
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        health:
          $ref: "#/components/schemas/ProjectHealth"
      type: object
    UpdateHypervisorsCommand:
      additionalProperties: false
      example:
        hypervisors:
        - hypervisors
        - hypervisors
        id: 0
      properties:
        id:
          format: int32
          type: integer
        hypervisors:
          items:
            type: string
          nullable: true
          type: array
      type: object
    UpdateInvoiceDto:
      additionalProperties: false
      example:
        isPaid: true
        endDate: 2000-01-23T04:56:07.000+00:00
        price: 6.027456183070403
        dueDate: 2000-01-23T04:56:07.000+00:00
        name: name
        organizationSubscriptionId: 0
        requiredPaymentAction: true
        stripeInvoiceId: stripeInvoiceId
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          nullable: true
          type: string
        organizationSubscriptionId:
          format: int32
          nullable: true
          type: integer
        startDate:
          format: date-time
          nullable: true
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
        dueDate:
          format: date-time
          nullable: true
          type: string
        isPaid:
          nullable: true
          type: boolean
        requiredPaymentAction:
          nullable: true
          type: boolean
        stripeInvoiceId:
          nullable: true
          type: string
        price:
          format: double
          nullable: true
          type: number
      type: object
    UpdateKubernetesAlertDto:
      additionalProperties: false
      example:
        isSilenced: true
        fingerprint: fingerprint
        startsAt: 2000-01-23T04:56:07.000+00:00
        silenceReason: silenceReason
        endsAt: 2000-01-23T04:56:07.000+00:00
        status: status
        labels: ""
      properties:
        status:
          nullable: true
          type: string
        labels:
          nullable: true
        startsAt:
          format: date-time
          type: string
        endsAt:
          format: date-time
          type: string
        fingerprint:
          nullable: true
          type: string
        isSilenced:
          nullable: true
          type: boolean
        silenceReason:
          nullable: true
          type: string
      type: object
    UpdateOpenStackCommand:
      additionalProperties: false
      example:
        openStackPassword: openStackPassword
        name: name
        id: 0
        openStackUser: openStackUser
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        openStackUser:
          nullable: true
          type: string
        openStackPassword:
          nullable: true
          type: string
      type: object
    UpdateOrganizationCommand:
      additionalProperties: false
      example:
        country: country
        discountRate: 6.027456183070403
        address: address
        city: city
        fullName: fullName
        isEligibleUpdateSubscription: true
        phone: phone
        billingEmail: billingEmail
        isLocked: true
        name: name
        id: 0
        email: email
        vatNumber: vatNumber
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        fullName:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        vatNumber:
          nullable: true
          type: string
        isLocked:
          type: boolean
        billingEmail:
          nullable: true
          type: string
        discountRate:
          format: double
          nullable: true
          type: number
        isEligibleUpdateSubscription:
          type: boolean
      type: object
    UpdateOrganizationSubscriptionCommand:
      additionalProperties: false
      example:
        isYearly: true
        subscriptionId: 0
      properties:
        subscriptionId:
          format: int32
          type: integer
        isYearly:
          type: boolean
      type: object
    UpdatePartnerCommand:
      additionalProperties: false
      properties:
        id:
          format: int32
          type: integer
        logo:
          format: binary
          nullable: true
          type: string
        backgroundImage:
          format: binary
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        domain:
          nullable: true
          type: string
        link:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        vatNumber:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
        allowRegistration:
          nullable: true
          type: boolean
        requiredUserApproval:
          nullable: true
          type: boolean
        paymentEnabled:
          nullable: true
          type: boolean
        bg:
          nullable: true
          type: string
        bgCollapsedSubItem:
          nullable: true
          type: string
        itemText:
          nullable: true
          type: string
        itemBg:
          nullable: true
          type: string
        itemBgHover:
          nullable: true
          type: string
        itemTextActive:
          nullable: true
          type: string
        itemBgActive:
          nullable: true
          type: string
        itemBgActiveHover:
          nullable: true
          type: string
        expanded:
          format: binary
          nullable: true
          type: string
        collapsed:
          format: binary
          nullable: true
          type: string
      type: object
    UpdatePaymentIdCommand:
      additionalProperties: false
      example:
        paymentIntentId: paymentIntentId
        paymentMethodId: paymentMethodId
      properties:
        paymentMethodId:
          nullable: true
          type: string
        paymentIntentId:
          nullable: true
          type: string
      type: object
    UpdateProjectAppCommand:
      additionalProperties: false
      example:
        projectAppId: 0
        status: status
      properties:
        projectAppId:
          format: int32
          type: integer
        status:
          nullable: true
          type: string
      type: object
    UpdateProjectAppStatusCommand:
      additionalProperties: false
      type: object
    UpdateProjectQuotaMessageCommand:
      additionalProperties: false
      type: object
    UpdateProxmoxCommand:
      additionalProperties: false
      example:
        tokenId: tokenId
        name: name
        id: 0
        tokenSecret: tokenSecret
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        tokenId:
          nullable: true
          type: string
        tokenSecret:
          nullable: true
          type: string
      type: object
    UpdateQuotaCommand:
      additionalProperties: false
      example:
        serverRam: 1.4658129805029452
        vmCpu: 5
        serverDiskSize: 5.962133916683182
        vmRam: 2.3021358869347655
        quotaId: 0
        vmVolumeSize: 7.061401241503109
        serverCpu: 6
      properties:
        quotaId:
          format: int32
          type: integer
        serverCpu:
          format: int64
          type: integer
        serverRam:
          format: double
          type: number
        serverDiskSize:
          format: double
          type: number
        vmCpu:
          format: int64
          type: integer
        vmRam:
          format: double
          type: number
        vmVolumeSize:
          format: double
          type: number
      type: object
    UpdateRepoPasswordCommand:
      additionalProperties: false
      example:
        organizationId: 0
        password: password
        repositoryId: repositoryId
        username: username
      properties:
        username:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        repositoryId:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
      type: object
    UpdateServerHealthDto:
      additionalProperties: false
      example:
        serverHealth: serverHealth
        ipAddress: ipAddress
      properties:
        ipAddress:
          nullable: true
          type: string
        serverHealth:
          nullable: true
          type: string
      type: object
    UpdateSlackConfigurationDto:
      additionalProperties: false
      example:
        organizationId: 0
        name: name
        channel: channel
        url: url
        slackType: Alert
      properties:
        organizationId:
          format: int32
          nullable: true
          type: integer
        name:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        channel:
          nullable: true
          type: string
        slackType:
          $ref: "#/components/schemas/SlackType"
      type: object
    UpdateStageCommand:
      additionalProperties: false
      example:
        stage: stage
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        stage:
          nullable: true
          type: string
      type: object
    UpdateStandAloneVmFlavorCommand:
      additionalProperties: false
      example:
        flavor: flavor
        id: 0
      properties:
        id:
          format: int32
          type: integer
        flavor:
          nullable: true
          type: string
      type: object
    UpdateStandaloneVmDiskSizeCommand:
      additionalProperties: false
      example:
        size: 6
        id: 0
      properties:
        id:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
      type: object
    UpdateSubscriptionCommand:
      additionalProperties: false
      example:
        serverLimit: 1
        yearlyPrice: 7.061401241503109
        projectLimit: 6
        trialDays: 3
        cloudCredentialLimit: 5
        tcuPrice: 9.301444243932576
        name: name
        id: 0
        userLimit: 5
        monthlyPrice: 2.3021358869347655
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        projectLimit:
          format: int32
          type: integer
        serverLimit:
          format: int32
          type: integer
        userLimit:
          format: int32
          type: integer
        cloudCredentialLimit:
          format: int32
          type: integer
        monthlyPrice:
          format: double
          type: number
        yearlyPrice:
          format: double
          type: number
        tcuPrice:
          format: double
          type: number
        trialDays:
          format: int32
          type: integer
      type: object
    UpdateTanzuCommand:
      additionalProperties: false
      example:
        password: password
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
      type: object
    UpdateUsedIpAddressesCommand:
      additionalProperties: false
      example:
        ipAddress:
        - ipAddress
        - ipAddress
      properties:
        ipAddress:
          items:
            type: string
          nullable: true
          type: array
      type: object
    UpdateUserCommand:
      additionalProperties: false
      example:
        role: Admin
        isApprovedByPartner: true
        displayName: displayName
        disable: true
        forceToResetPassword: true
        id: id
        email: email
        username: username
      properties:
        id:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        role:
          $ref: "#/components/schemas/UserRole"
        forceToResetPassword:
          type: boolean
        disable:
          type: boolean
        isApprovedByPartner:
          type: boolean
      type: object
    UpdateUserGroupDto:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          nullable: true
          type: string
      type: object
    UpdateVsphereCommand:
      additionalProperties: false
      example:
        password: password
        name: name
        id: 0
        username: username
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
      type: object
    UpdateVsphereHypervisorsCommand:
      additionalProperties: false
      example:
        hypervisors:
        - hypervisors
        - hypervisors
        id: 0
      properties:
        id:
          format: int32
          type: integer
        hypervisors:
          items:
            type: string
          nullable: true
          type: array
      type: object
    UpdateZadaraCommand:
      additionalProperties: false
      example:
        zadaraAccessKeyId: zadaraAccessKeyId
        name: name
        id: 0
        zadaraSecretAccessKey: zadaraSecretAccessKey
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        zadaraSecretAccessKey:
          nullable: true
          type: string
        zadaraAccessKeyId:
          nullable: true
          type: string
      type: object
    UserDetails:
      additionalProperties: false
      example:
        trialDays: 5
        data:
          role: Admin
          displayName: displayName
          hasCustomerId: true
          boundProjects:
          - projectName: projectName
            projectId: 6
          - projectName: projectName
            projectId: 6
          isEligibleUpdateSubscription: true
          isCsm: true
          organizationId: 0
          createdAt: createdAt
          isReadOnly: true
          isLocked: true
          id: id
          email: email
          isForcedToEnableTwoFactorAuthentication: true
          owner: true
          is2FAEnabled: true
          organizationName: organizationName
          hasRepo: true
          hasPaymentMethod: true
          isForcedToResetPassword: true
          isNewOrganization: true
          lastLoginAt: lastLoginAt
          isApprovedByPartner: true
          partner:
            domain: domain
            name: name
            link: link
            logo: logo
            id: 1
          isEmailNotificationEnabled: true
          username: username
          isEmailConfirmed: true
        isMaintenanceModeEnabled: true
      properties:
        data:
          $ref: "#/components/schemas/UserForListDto"
        isMaintenanceModeEnabled:
          type: boolean
        trialDays:
          format: int32
          nullable: true
          type: integer
      required:
      - data
      - isMaintenanceModeEnabled
      - trialDays
      type: object
    UserDto:
      additionalProperties: false
      example:
        userName: userName
        userId: userId
      properties:
        userId:
          nullable: true
          type: string
        userName:
          nullable: true
          type: string
      required:
      - userId
      - userName
      type: object
    UserExistCommand:
      additionalProperties: false
      example:
        userName: userName
        email: email
      properties:
        email:
          nullable: true
          type: string
        userName:
          nullable: true
          type: string
      type: object
    UserForListDto:
      additionalProperties: false
      example:
        role: Admin
        displayName: displayName
        hasCustomerId: true
        boundProjects:
        - projectName: projectName
          projectId: 6
        - projectName: projectName
          projectId: 6
        isEligibleUpdateSubscription: true
        isCsm: true
        organizationId: 0
        createdAt: createdAt
        isReadOnly: true
        isLocked: true
        id: id
        email: email
        isForcedToEnableTwoFactorAuthentication: true
        owner: true
        is2FAEnabled: true
        organizationName: organizationName
        hasRepo: true
        hasPaymentMethod: true
        isForcedToResetPassword: true
        isNewOrganization: true
        lastLoginAt: lastLoginAt
        isApprovedByPartner: true
        partner:
          domain: domain
          name: name
          link: link
          logo: logo
          id: 1
        isEmailNotificationEnabled: true
        username: username
        isEmailConfirmed: true
      properties:
        id:
          type: string
        username:
          type: string
        organizationName:
          type: string
        hasCustomerId:
          type: boolean
        hasPaymentMethod:
          type: boolean
        organizationId:
          format: int32
          type: integer
        email:
          type: string
        displayName:
          nullable: true
          type: string
        createdAt:
          type: string
        isEmailConfirmed:
          type: boolean
        isEmailNotificationEnabled:
          type: boolean
        isForcedToResetPassword:
          type: boolean
        isCsm:
          type: boolean
        isEligibleUpdateSubscription:
          type: boolean
        isLocked:
          type: boolean
        isApprovedByPartner:
          type: boolean
        owner:
          type: boolean
        isReadOnly:
          type: boolean
        hasRepo:
          type: boolean
        isNewOrganization:
          type: boolean
        is2FAEnabled:
          type: boolean
        lastLoginAt:
          nullable: true
          type: string
        isForcedToEnableTwoFactorAuthentication:
          type: boolean
        boundProjects:
          items:
            $ref: "#/components/schemas/ProjectDto"
          type: array
        partner:
          $ref: "#/components/schemas/PartnerDetailsForUserDto"
        role:
          $ref: "#/components/schemas/UserRole"
      required:
      - boundProjects
      - createdAt
      - displayName
      - email
      - hasCustomerId
      - hasPaymentMethod
      - hasRepo
      - id
      - is2FAEnabled
      - isApprovedByPartner
      - isCsm
      - isEligibleUpdateSubscription
      - isEmailConfirmed
      - isEmailNotificationEnabled
      - isForcedToEnableTwoFactorAuthentication
      - isForcedToResetPassword
      - isLocked
      - isNewOrganization
      - isReadOnly
      - organizationId
      - organizationName
      - owner
      - partner
      - role
      - username
      type: object
    UserGroupDetailsListDto:
      additionalProperties: false
      example:
        organizationId: 6
        organizationName: organizationName
        projectGroups:
        - name: name
          id: 1
        - name: name
          id: 1
        name: name
        id: 0
        users:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          nullable: true
          type: string
        users:
          items:
            $ref: "#/components/schemas/UserListDto"
          nullable: true
          type: array
        projectGroups:
          items:
            $ref: "#/components/schemas/ProjectGroupEntityListDto"
          nullable: true
          type: array
      required:
      - id
      - name
      - organizationId
      - organizationName
      - projectGroups
      - users
      type: object
    UserGroupEntityListDto:
      additionalProperties: false
      example:
        name: name
        id: 5
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      required:
      - id
      - name
      type: object
    UserGroupList:
      additionalProperties: false
      example:
        data:
        - organizationId: 6
          organizationName: organizationName
          projectGroups:
          - name: name
            id: 1
          - name: name
            id: 1
          name: name
          id: 0
          users:
          - name: name
            id: id
          - name: name
            id: id
        - organizationId: 6
          organizationName: organizationName
          projectGroups:
          - name: name
            id: 1
          - name: name
            id: 1
          name: name
          id: 0
          users:
          - name: name
            id: id
          - name: name
            id: id
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/UserGroupDetailsListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    UserListDto:
      additionalProperties: false
      example:
        name: name
        id: id
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      required:
      - id
      - name
      type: object
    UserResourceChartDto:
      additionalProperties: false
      example:
        diskSize: 0
        maxRam: 0
        cpu: 6
        maxCpu: 4
        projectName: projectName
        maxDiskSize: 8
        projectId: 7
        ram: 7
      properties:
        projectName:
          nullable: true
          type: string
        projectId:
          format: int32
          type: integer
        diskSize:
          format: int64
          type: integer
        ram:
          format: int64
          type: integer
        cpu:
          format: int64
          type: integer
        maxRam:
          format: int64
          type: integer
        maxCpu:
          format: int64
          type: integer
        maxDiskSize:
          format: int64
          type: integer
      type: object
    UserRole:
      enum:
      - Admin
      - Manager
      - Partner
      - User
      - Autoscaler
      type: string
    UserTokenCreateCommand:
      additionalProperties: false
      example:
        isReadonly: true
        endpoints:
        - path: path
          controller: controller
          method: method
          description: description
          id: 0
        - path: path
          controller: controller
          method: method
          description: description
          id: 0
        name: name
        bindALL: true
        expireDate: 2000-01-23T04:56:07.000+00:00
      properties:
        expireDate:
          format: date-time
          nullable: true
          type: string
        isReadonly:
          type: boolean
        name:
          nullable: true
          type: string
        endpoints:
          items:
            $ref: "#/components/schemas/AvailableEndpointData"
          nullable: true
          type: array
        bindALL:
          type: boolean
      type: object
    UserTokenCreateDto:
      additionalProperties: false
      example:
        secretKey: secretKey
        accessKey: accessKey
      properties:
        accessKey:
          nullable: true
          type: string
        secretKey:
          nullable: true
          type: string
      type: object
    UserTokensListDto:
      additionalProperties: false
      example:
        createdAt: createdAt
        isReadonly: true
        accessKey: accessKey
        name: name
        expireDate: expireDate
        id: id
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        isReadonly:
          type: boolean
        expireDate:
          nullable: true
          type: string
        accessKey:
          nullable: true
          type: string
      required:
      - accessKey
      - createdAt
      - expireDate
      - id
      - isReadonly
      - name
      type: object
    UsersList:
      additionalProperties: false
      example:
        data:
        - role: Admin
          displayName: displayName
          hasCustomerId: true
          boundProjects:
          - projectName: projectName
            projectId: 6
          - projectName: projectName
            projectId: 6
          isEligibleUpdateSubscription: true
          isCsm: true
          organizationId: 0
          createdAt: createdAt
          isReadOnly: true
          isLocked: true
          id: id
          email: email
          isForcedToEnableTwoFactorAuthentication: true
          owner: true
          is2FAEnabled: true
          organizationName: organizationName
          hasRepo: true
          hasPaymentMethod: true
          isForcedToResetPassword: true
          isNewOrganization: true
          lastLoginAt: lastLoginAt
          isApprovedByPartner: true
          partner:
            domain: domain
            name: name
            link: link
            logo: logo
            id: 1
          isEmailNotificationEnabled: true
          username: username
          isEmailConfirmed: true
        - role: Admin
          displayName: displayName
          hasCustomerId: true
          boundProjects:
          - projectName: projectName
            projectId: 6
          - projectName: projectName
            projectId: 6
          isEligibleUpdateSubscription: true
          isCsm: true
          organizationId: 0
          createdAt: createdAt
          isReadOnly: true
          isLocked: true
          id: id
          email: email
          isForcedToEnableTwoFactorAuthentication: true
          owner: true
          is2FAEnabled: true
          organizationName: organizationName
          hasRepo: true
          hasPaymentMethod: true
          isForcedToResetPassword: true
          isNewOrganization: true
          lastLoginAt: lastLoginAt
          isApprovedByPartner: true
          partner:
            domain: domain
            name: name
            link: link
            logo: logo
            id: 1
          isEmailNotificationEnabled: true
          username: username
          isEmailConfirmed: true
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/UserForListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    UsersSearchCommand:
      additionalProperties: false
      example:
        searchTerm: searchTerm
        offset: 6
        limit: 0
      properties:
        limit:
          format: int32
          nullable: true
          type: integer
        offset:
          format: int32
          nullable: true
          type: integer
        searchTerm:
          nullable: true
          type: string
      type: object
    UsersSearchList:
      additionalProperties: false
      example:
        data:
        - organizationId: 0
          organizationName: organizationName
          name: name
          id: id
          email: email
        - organizationId: 0
          organizationName: organizationName
          name: name
          id: id
          email: email
        totalCount: 6
      properties:
        data:
          items:
            $ref: "#/components/schemas/UsersSearchResponseData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      type: object
    UsersSearchResponseData:
      additionalProperties: false
      example:
        organizationId: 0
        organizationName: organizationName
        name: name
        id: id
        email: email
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        organizationId:
          format: int32
          nullable: true
          type: integer
        organizationName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
      type: object
    VClusterActionVisibilityDto:
      additionalProperties: false
      example:
        quotaPresets:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        projectMaintenanceMode:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        detachAlertingProfile:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        unlock:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        lock:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        attachAlertingProfile:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
      properties:
        attachAlertingProfile:
          $ref: "#/components/schemas/ButtonStatusDto"
        detachAlertingProfile:
          $ref: "#/components/schemas/ButtonStatusDto"
        projectMaintenanceMode:
          $ref: "#/components/schemas/ButtonStatusDto"
        lock:
          $ref: "#/components/schemas/ButtonStatusDto"
        unlock:
          $ref: "#/components/schemas/ButtonStatusDto"
        quotaPresets:
          $ref: "#/components/schemas/ButtonStatusDto"
      required:
      - attachAlertingProfile
      - detachAlertingProfile
      - lock
      - projectMaintenanceMode
      - quotaPresets
      - unlock
      type: object
    VClusterList:
      additionalProperties: false
      example:
        data:
        - deleteButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          lockButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          ephemeralStorageLimits:
            maxClusterLimits: 4.145608029883936
            defaultContainerRequest: 1.2315135367772556
            resourceUnit: resourceUnit
            defaultContainerLimit: 7.386281948385884
            maxClusterRequests: 2.027123023002322
          organizationId: 6
          createdAt: createdAt
          expiredAt: expiredAt
          alertingProfileName: alertingProfileName
          cloudType: AWS
          isLocked: true
          id: 0
          setExpirationDateButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          kubernetesVersion: kubernetesVersion
          organizationName: organizationName
          accessIp: accessIp
          alertsCount: 1
          unlockButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          lastModifiedBy: lastModifiedBy
          health: "Null"
          isVirtualCluster: true
          ramLimits:
            maxClusterLimits: 4.145608029883936
            defaultContainerRequest: 1.2315135367772556
            resourceUnit: resourceUnit
            defaultContainerLimit: 7.386281948385884
            maxClusterRequests: 2.027123023002322
          workloadResources:
            maxIngresses: 9
            maxPvcs: 2
            maxLoadBalancers: 3
            maxPods: 5
            maxTotalPvcSize: 7
          hasKubeConfigFile: true
          kubeInfoButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          deleteOnExpiration: true
          alertingProfileId: 5
          wasmEnabled: true
          createdBy: createdBy
          name: name
          lastModified: lastModified
          resetStatusButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          cpuLimits:
            maxClusterLimits: 4.145608029883936
            defaultContainerRequest: 1.2315135367772556
            resourceUnit: resourceUnit
            defaultContainerLimit: 7.386281948385884
            maxClusterRequests: 2.027123023002322
          isMaintenanceModeEnabled: true
          status: "Null"
        - deleteButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          lockButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          ephemeralStorageLimits:
            maxClusterLimits: 4.145608029883936
            defaultContainerRequest: 1.2315135367772556
            resourceUnit: resourceUnit
            defaultContainerLimit: 7.386281948385884
            maxClusterRequests: 2.027123023002322
          organizationId: 6
          createdAt: createdAt
          expiredAt: expiredAt
          alertingProfileName: alertingProfileName
          cloudType: AWS
          isLocked: true
          id: 0
          setExpirationDateButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          kubernetesVersion: kubernetesVersion
          organizationName: organizationName
          accessIp: accessIp
          alertsCount: 1
          unlockButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          lastModifiedBy: lastModifiedBy
          health: "Null"
          isVirtualCluster: true
          ramLimits:
            maxClusterLimits: 4.145608029883936
            defaultContainerRequest: 1.2315135367772556
            resourceUnit: resourceUnit
            defaultContainerLimit: 7.386281948385884
            maxClusterRequests: 2.027123023002322
          workloadResources:
            maxIngresses: 9
            maxPvcs: 2
            maxLoadBalancers: 3
            maxPods: 5
            maxTotalPvcSize: 7
          hasKubeConfigFile: true
          kubeInfoButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          deleteOnExpiration: true
          alertingProfileId: 5
          wasmEnabled: true
          createdBy: createdBy
          name: name
          lastModified: lastModified
          resetStatusButton:
            reasons:
            - reasons
            - reasons
            hidden: true
            enable: true
          cpuLimits:
            maxClusterLimits: 4.145608029883936
            defaultContainerRequest: 1.2315135367772556
            resourceUnit: resourceUnit
            defaultContainerLimit: 7.386281948385884
            maxClusterRequests: 2.027123023002322
          isMaintenanceModeEnabled: true
          status: "Null"
        project:
          isProjectMaintenanceModeEnabled: true
          organizationName: organizationName
          hasSelectedFlavors: true
          isDrsEnabled: true
          allowSpotVMs: true
          cloudCredentialRevision: 6
          availabilityZones:
          - availabilityZones
          - availabilityZones
          allowSpotWorkers: true
          maxSpotPrice: 7.457744773683766
          organizationId: 1
          expiredAt: expiredAt
          cloudType: AWS
          cloudName: cloudName
          cloudId: 1
          isLocked: true
          name: name
          allowFullSpotKubernetes: true
          hypervisors:
          - hypervisors
          - hypervisors
          id: 7
          totalHourlyCost: 1.1730742509559433
          projectCloudRevision: 1
          status: "Null"
          isMaintenanceModeEnabled: true
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/VClusterListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
        project:
          $ref: "#/components/schemas/ProjectDetailsForVmsDto"
      required:
      - data
      - project
      - totalCount
      type: object
    VClusterListDto:
      additionalProperties: false
      example:
        deleteButton:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        lockButton:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        ephemeralStorageLimits:
          maxClusterLimits: 4.145608029883936
          defaultContainerRequest: 1.2315135367772556
          resourceUnit: resourceUnit
          defaultContainerLimit: 7.386281948385884
          maxClusterRequests: 2.027123023002322
        organizationId: 6
        createdAt: createdAt
        expiredAt: expiredAt
        alertingProfileName: alertingProfileName
        cloudType: AWS
        isLocked: true
        id: 0
        setExpirationDateButton:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        kubernetesVersion: kubernetesVersion
        organizationName: organizationName
        accessIp: accessIp
        alertsCount: 1
        unlockButton:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        lastModifiedBy: lastModifiedBy
        health: "Null"
        isVirtualCluster: true
        ramLimits:
          maxClusterLimits: 4.145608029883936
          defaultContainerRequest: 1.2315135367772556
          resourceUnit: resourceUnit
          defaultContainerLimit: 7.386281948385884
          maxClusterRequests: 2.027123023002322
        workloadResources:
          maxIngresses: 9
          maxPvcs: 2
          maxLoadBalancers: 3
          maxPods: 5
          maxTotalPvcSize: 7
        hasKubeConfigFile: true
        kubeInfoButton:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        deleteOnExpiration: true
        alertingProfileId: 5
        wasmEnabled: true
        createdBy: createdBy
        name: name
        lastModified: lastModified
        resetStatusButton:
          reasons:
          - reasons
          - reasons
          hidden: true
          enable: true
        cpuLimits:
          maxClusterLimits: 4.145608029883936
          defaultContainerRequest: 1.2315135367772556
          resourceUnit: resourceUnit
          defaultContainerLimit: 7.386281948385884
          maxClusterRequests: 2.027123023002322
        isMaintenanceModeEnabled: true
        status: "Null"
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        isVirtualCluster:
          type: boolean
        isLocked:
          type: boolean
        hasKubeConfigFile:
          type: boolean
        isMaintenanceModeEnabled:
          type: boolean
        organizationName:
          type: string
        organizationId:
          format: int32
          type: integer
        kubernetesVersion:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        lastModified:
          type: string
        lastModifiedBy:
          type: string
        alertsCount:
          format: int32
          type: integer
        expiredAt:
          type: string
        deleteOnExpiration:
          type: boolean
        wasmEnabled:
          type: boolean
        alertingProfileId:
          format: int32
          nullable: true
          type: integer
        alertingProfileName:
          nullable: true
          type: string
        accessIp:
          type: string
        cloudType:
          $ref: "#/components/schemas/ECloudCredentialType"
        status:
          $ref: "#/components/schemas/ProjectStatus"
        health:
          $ref: "#/components/schemas/ProjectHealth"
        workloadResources:
          $ref: "#/components/schemas/VClusterWorkloadResourcesListDto"
        cpuLimits:
          $ref: "#/components/schemas/VClusterResourceLimitsListDto"
        ramLimits:
          $ref: "#/components/schemas/VClusterResourceLimitsListDto"
        ephemeralStorageLimits:
          $ref: "#/components/schemas/VClusterResourceLimitsListDto"
        lockButton:
          $ref: "#/components/schemas/ButtonStatusDto"
        unlockButton:
          $ref: "#/components/schemas/ButtonStatusDto"
        deleteButton:
          $ref: "#/components/schemas/ButtonStatusDto"
        kubeInfoButton:
          $ref: "#/components/schemas/ButtonStatusDto"
        setExpirationDateButton:
          $ref: "#/components/schemas/ButtonStatusDto"
        resetStatusButton:
          $ref: "#/components/schemas/ButtonStatusDto"
      required:
      - accessIp
      - alertingProfileId
      - alertingProfileName
      - alertsCount
      - cloudType
      - createdAt
      - createdBy
      - deleteButton
      - deleteOnExpiration
      - expiredAt
      - hasKubeConfigFile
      - health
      - id
      - isLocked
      - isMaintenanceModeEnabled
      - isVirtualCluster
      - kubeInfoButton
      - kubernetesVersion
      - lastModified
      - lastModifiedBy
      - lockButton
      - name
      - organizationId
      - organizationName
      - resetStatusButton
      - setExpirationDateButton
      - status
      - unlockButton
      - wasmEnabled
      type: object
    VClusterResourceLimitsListDto:
      additionalProperties: false
      example:
        maxClusterLimits: 4.145608029883936
        defaultContainerRequest: 1.2315135367772556
        resourceUnit: resourceUnit
        defaultContainerLimit: 7.386281948385884
        maxClusterRequests: 2.027123023002322
      properties:
        resourceUnit:
          nullable: true
          type: string
        maxClusterRequests:
          format: double
          type: number
        maxClusterLimits:
          format: double
          type: number
        defaultContainerLimit:
          format: double
          type: number
        defaultContainerRequest:
          format: double
          type: number
      required:
      - defaultContainerLimit
      - defaultContainerRequest
      - maxClusterLimits
      - maxClusterRequests
      - resourceUnit
      type: object
    VClusterWorkloadResourcesListDto:
      additionalProperties: false
      example:
        maxIngresses: 9
        maxPvcs: 2
        maxLoadBalancers: 3
        maxPods: 5
        maxTotalPvcSize: 7
      properties:
        maxPods:
          format: int32
          type: integer
        maxPvcs:
          format: int32
          type: integer
        maxTotalPvcSize:
          format: int64
          type: integer
        maxIngresses:
          format: int32
          type: integer
        maxLoadBalancers:
          format: int32
          type: integer
      required:
      - maxIngresses
      - maxLoadBalancers
      - maxPods
      - maxPvcs
      - maxTotalPvcSize
      type: object
    ValidateVsphereCommand:
      additionalProperties: false
      example:
        password: password
        url: url
        username: username
      properties:
        url:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
      type: object
    VerifyEmailCommand:
      additionalProperties: false
      example:
        mode: Confirm
        token: token
      properties:
        token:
          nullable: true
          type: string
        mode:
          $ref: "#/components/schemas/EmailMode"
      type: object
    VerifySlackCredentialsCommand:
      additionalProperties: false
      example:
        name: name
        channel: channel
        url: url
      properties:
        name:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        channel:
          nullable: true
          type: string
      type: object
    VerifyWebhookCommand:
      additionalProperties: false
      example:
        url: url
      properties:
        url:
          nullable: true
          type: string
      type: object
    VirtualClusterDisableAiCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    VirtualClusterDisableBackupCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    VirtualClusterDisableMonitoringCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    VirtualClusterDisableOpaCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    VirtualClusterEnableAiCommand:
      additionalProperties: false
      example:
        aiCredentialId: 6
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        aiCredentialId:
          format: int32
          type: integer
      type: object
    VirtualClusterEnableBackupCommand:
      additionalProperties: false
      example:
        projectId: 0
        backupCredentialId: 6
      properties:
        projectId:
          format: int32
          type: integer
        backupCredentialId:
          format: int32
          type: integer
      type: object
    VirtualClusterEnableMonitoringCommand:
      additionalProperties: false
      example:
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
      type: object
    VirtualClusterEnableOpaCommand:
      additionalProperties: false
      example:
        opaProfileId: 6
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        opaProfileId:
          format: int32
          type: integer
      type: object
    VirtualClusterQuotasDto:
      additionalProperties: false
      example:
        presets:
        - ephemeralStorage:
            maxClusterLimits: 2
            defaultContainerRequest: 4
            defaultContainerLimit: 7
            maxClusterRequests: 3
          name: name
          cpu:
            maxClusterLimits: 6.027456183070403
            defaultContainerRequest: 1.4658129805029452
            defaultContainerLimit: 5.962133916683182
            maxClusterRequests: 0.8008281904610115
          workloadResources:
            maxIngresses: 6
            maxPvcs: 1
            maxLoadBalancers: 7
            maxPods: 1
            maxTotalPvcSize: 1
          ram:
            maxClusterLimits: 2
            defaultContainerRequest: 7
            defaultContainerLimit: 9
            maxClusterRequests: 5
        - ephemeralStorage:
            maxClusterLimits: 2
            defaultContainerRequest: 4
            defaultContainerLimit: 7
            maxClusterRequests: 3
          name: name
          cpu:
            maxClusterLimits: 6.027456183070403
            defaultContainerRequest: 1.4658129805029452
            defaultContainerLimit: 5.962133916683182
            maxClusterRequests: 0.8008281904610115
          workloadResources:
            maxIngresses: 6
            maxPvcs: 1
            maxLoadBalancers: 7
            maxPods: 1
            maxTotalPvcSize: 1
          ram:
            maxClusterLimits: 2
            defaultContainerRequest: 7
            defaultContainerLimit: 9
            maxClusterRequests: 5
      properties:
        presets:
          items:
            $ref: "#/components/schemas/ResourcePresetDto"
          nullable: true
          type: array
      required:
      - presets
      type: object
    VmConsoleScreenshotCommand:
      additionalProperties: false
      example:
        serverId: 0
      properties:
        serverId:
          format: int32
          type: integer
      type: object
    VmTemplateListCommand:
      additionalProperties: false
      example:
        tokenId: tokenId
        cloudId: 0
        url: url
        tokenSecret: tokenSecret
      properties:
        cloudId:
          format: int32
          nullable: true
          type: integer
        url:
          nullable: true
          type: string
        tokenId:
          nullable: true
          type: string
        tokenSecret:
          nullable: true
          type: string
      type: object
    Void:
      additionalProperties: false
      type: object
    VsphereFlavorData:
      additionalProperties: false
      example:
        name: name
        cpu: 0
        ram: 6.027456183070403
      properties:
        name:
          nullable: true
          type: string
        cpu:
          format: int32
          type: integer
        ram:
          format: double
          type: number
      required:
      - cpu
      - name
      - ram
      type: object
    VsphereFlavorList:
      additionalProperties: false
      example:
        data:
        - name: name
          cpu: 0
          ram: 6.027456183070403
        - name: name
          cpu: 0
          ram: 6.027456183070403
        totalCount: 1
      properties:
        data:
          items:
            $ref: "#/components/schemas/VsphereFlavorData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    VsphereHypervisorListCommand:
      additionalProperties: false
      example:
        password: password
        cloudId: 0
        datacenterId: datacenterId
        url: url
        username: username
      properties:
        url:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        datacenterId:
          nullable: true
          type: string
        cloudId:
          format: int32
          nullable: true
          type: integer
      type: object
    VsphereList:
      additionalProperties: false
      example:
        data:
        - projectCount: 6
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          drsEnabled: true
          organizationName: organizationName
          datacenterName: datacenterName
          datastore: datastore
          lastModifiedBy: lastModifiedBy
          datacenterId: datacenterId
          url: url
          organizationId: 1
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          skipTlsFlag: true
          hypervisors:
          - name: name
            id: id
          - name: name
            id: id
          id: 0
          lastModified: lastModified
          continentName: continentName
          vmTemplateName: vmTemplateName
          vsphereNetworks:
          - endAllocationRange: endAllocationRange
            netMask: 5
            name: name
            ipAddress: ipAddress
            isPrivate: true
            beginAllocationRange: beginAllocationRange
            gateway: gateway
            isVirtualLbNetwork: true
          - endAllocationRange: endAllocationRange
            netMask: 5
            name: name
            ipAddress: ipAddress
            isPrivate: true
            beginAllocationRange: beginAllocationRange
            gateway: gateway
            isVirtualLbNetwork: true
          resourcePool: resourcePool
          username: username
        - projectCount: 6
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          drsEnabled: true
          organizationName: organizationName
          datacenterName: datacenterName
          datastore: datastore
          lastModifiedBy: lastModifiedBy
          datacenterId: datacenterId
          url: url
          organizationId: 1
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          skipTlsFlag: true
          hypervisors:
          - name: name
            id: id
          - name: name
            id: id
          id: 0
          lastModified: lastModified
          continentName: continentName
          vmTemplateName: vmTemplateName
          vsphereNetworks:
          - endAllocationRange: endAllocationRange
            netMask: 5
            name: name
            ipAddress: ipAddress
            isPrivate: true
            beginAllocationRange: beginAllocationRange
            gateway: gateway
            isVirtualLbNetwork: true
          - endAllocationRange: endAllocationRange
            netMask: 5
            name: name
            ipAddress: ipAddress
            isPrivate: true
            beginAllocationRange: beginAllocationRange
            gateway: gateway
            isVirtualLbNetwork: true
          resourcePool: resourcePool
          username: username
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/VsphereListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    VsphereListDto:
      additionalProperties: false
      example:
        projectCount: 6
        projects:
        - name: name
          id: 5
        - name: name
          id: 5
        drsEnabled: true
        organizationName: organizationName
        datacenterName: datacenterName
        datastore: datastore
        lastModifiedBy: lastModifiedBy
        datacenterId: datacenterId
        url: url
        organizationId: 1
        createdAt: createdAt
        isDefault: true
        createdBy: createdBy
        isLocked: true
        name: name
        skipTlsFlag: true
        hypervisors:
        - name: name
          id: id
        - name: name
          id: id
        id: 0
        lastModified: lastModified
        continentName: continentName
        vmTemplateName: vmTemplateName
        vsphereNetworks:
        - endAllocationRange: endAllocationRange
          netMask: 5
          name: name
          ipAddress: ipAddress
          isPrivate: true
          beginAllocationRange: beginAllocationRange
          gateway: gateway
          isVirtualLbNetwork: true
        - endAllocationRange: endAllocationRange
          netMask: 5
          name: name
          ipAddress: ipAddress
          isPrivate: true
          beginAllocationRange: beginAllocationRange
          gateway: gateway
          isVirtualLbNetwork: true
        resourcePool: resourcePool
        username: username
      properties:
        id:
          format: int32
          type: integer
        projectCount:
          format: int32
          type: integer
        isLocked:
          type: boolean
        name:
          type: string
        projects:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          type: array
        createdBy:
          type: string
        createdAt:
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        isDefault:
          type: boolean
        drsEnabled:
          type: boolean
        resourcePool:
          type: string
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        continentName:
          nullable: true
          type: string
        hypervisors:
          items:
            $ref: "#/components/schemas/CommonStringBasedDropdownDto"
          type: array
        username:
          type: string
        url:
          type: string
        datacenterId:
          type: string
        datacenterName:
          type: string
        datastore:
          type: string
        vmTemplateName:
          type: string
        vsphereNetworks:
          items:
            $ref: "#/components/schemas/VsphereNetworkListDto"
          type: array
        skipTlsFlag:
          type: boolean
      required:
      - continentName
      - createdAt
      - createdBy
      - datacenterId
      - datacenterName
      - datastore
      - drsEnabled
      - hypervisors
      - id
      - isDefault
      - isLocked
      - lastModified
      - lastModifiedBy
      - name
      - organizationId
      - organizationName
      - projectCount
      - projects
      - resourcePool
      - skipTlsFlag
      - url
      - username
      - vmTemplateName
      - vsphereNetworks
      type: object
    VsphereNetworkListDto:
      additionalProperties: false
      example:
        endAllocationRange: endAllocationRange
        netMask: 5
        name: name
        ipAddress: ipAddress
        isPrivate: true
        beginAllocationRange: beginAllocationRange
        gateway: gateway
        isVirtualLbNetwork: true
      properties:
        name:
          nullable: true
          type: string
        gateway:
          type: string
        ipAddress:
          type: string
        netMask:
          format: int32
          type: integer
        beginAllocationRange:
          type: string
        endAllocationRange:
          type: string
        isPrivate:
          type: boolean
        isVirtualLbNetwork:
          type: boolean
      required:
      - beginAllocationRange
      - endAllocationRange
      - gateway
      - ipAddress
      - isPrivate
      - isVirtualLbNetwork
      - name
      - netMask
      type: object
    VsphereVmTemplateData:
      additionalProperties: false
      example:
        size: 0
        name: name
        uuid: uuid
      properties:
        name:
          nullable: true
          type: string
        size:
          format: int32
          type: integer
        uuid:
          nullable: true
          type: string
      type: object
    VsphereVmTemplateListCommand:
      additionalProperties: false
      example:
        password: password
        datacenterId: datacenterId
        url: url
        username: username
      properties:
        url:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        datacenterId:
          nullable: true
          type: string
      type: object
    WebhookHeaderDto:
      additionalProperties: false
      example:
        id: 6
        value: value
        key: key
      properties:
        id:
          format: int32
          type: integer
        key:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    WhiteListDomainCreateCommand:
      additionalProperties: false
      example:
        whiteListDomains:
        - name: name
        - name: name
        partnerId: 0
      properties:
        whiteListDomains:
          items:
            $ref: "#/components/schemas/WhiteListDomainCreateDto"
          nullable: true
          type: array
        partnerId:
          format: int32
          nullable: true
          type: integer
      type: object
    WhiteListDomainCreateDto:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          nullable: true
          type: string
      type: object
    WhiteListDomainDeleteCommand:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    WhiteListDomainDto:
      additionalProperties: false
      example:
        name: name
        id: 6
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
      required:
      - id
      - name
      type: object
    WindowsInstancePasswordCommand:
      additionalProperties: false
      properties:
        id:
          format: int32
          type: integer
        key:
          nullable: true
          type: string
        config:
          format: binary
          nullable: true
          type: string
      type: object
    WorkloadResourceLimitsDto:
      additionalProperties: false
      example:
        maxIngresses: 6
        maxPvcs: 1
        maxLoadBalancers: 7
        maxPods: 1
        maxTotalPvcSize: 1
      properties:
        maxPods:
          format: int32
          type: integer
        maxPvcs:
          format: int32
          type: integer
        maxTotalPvcSize:
          format: int64
          type: integer
        maxIngresses:
          format: int32
          type: integer
        maxLoadBalancers:
          format: int32
          type: integer
      required:
      - maxIngresses
      - maxLoadBalancers
      - maxPods
      - maxPvcs
      - maxTotalPvcSize
      type: object
    YamlValidatorCommand:
      additionalProperties: false
      example:
        yaml: yaml
      properties:
        yaml:
          nullable: true
          type: string
      type: object
    ZadaraAvailabilityZonesCommand:
      additionalProperties: false
      example:
        zadaraAccessKeyId: zadaraAccessKeyId
        cloudId: 0
        zadaraSecretAccessKey: zadaraSecretAccessKey
        url: url
      properties:
        url:
          nullable: true
          type: string
        zadaraAccessKeyId:
          nullable: true
          type: string
        zadaraSecretAccessKey:
          nullable: true
          type: string
        cloudId:
          format: int32
          nullable: true
          type: integer
      type: object
    ZadaraCredentialList:
      additionalProperties: false
      example:
        data:
        - projectCount: 6
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          availabilityZonesCount: 1
          id: 0
          lastModified: lastModified
          region: region
          continentName: continentName
          zadaraVolumeType: zadaraVolumeType
          zadaraApiUrl: zadaraApiUrl
        - projectCount: 6
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          availabilityZones:
          - availabilityZones
          - availabilityZones
          organizationId: 5
          createdAt: createdAt
          isDefault: true
          createdBy: createdBy
          isLocked: true
          name: name
          availabilityZonesCount: 1
          id: 0
          lastModified: lastModified
          region: region
          continentName: continentName
          zadaraVolumeType: zadaraVolumeType
          zadaraApiUrl: zadaraApiUrl
        totalCount: 5
      properties:
        data:
          items:
            $ref: "#/components/schemas/ZadaraCredentialsListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    ZadaraCredentialsListDto:
      additionalProperties: false
      example:
        projectCount: 6
        projects:
        - name: name
          id: 5
        - name: name
          id: 5
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        availabilityZones:
        - availabilityZones
        - availabilityZones
        organizationId: 5
        createdAt: createdAt
        isDefault: true
        createdBy: createdBy
        isLocked: true
        name: name
        availabilityZonesCount: 1
        id: 0
        lastModified: lastModified
        region: region
        continentName: continentName
        zadaraVolumeType: zadaraVolumeType
        zadaraApiUrl: zadaraApiUrl
      properties:
        id:
          format: int32
          type: integer
        projectCount:
          format: int32
          type: integer
        isLocked:
          type: boolean
        name:
          type: string
        region:
          type: string
        availabilityZones:
          items:
            type: string
          type: array
        availabilityZonesCount:
          format: int32
          type: integer
        projects:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          type: array
        createdBy:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        isDefault:
          type: boolean
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        createdAt:
          nullable: true
          type: string
        continentName:
          nullable: true
          type: string
        zadaraApiUrl:
          type: string
        zadaraVolumeType:
          type: string
      required:
      - availabilityZones
      - availabilityZonesCount
      - continentName
      - createdAt
      - createdBy
      - id
      - isDefault
      - isLocked
      - lastModified
      - lastModifiedBy
      - name
      - organizationId
      - organizationName
      - projectCount
      - projects
      - region
      - zadaraApiUrl
      - zadaraVolumeType
      type: object
    ZadaraRegionListCommand:
      additionalProperties: false
      example:
        zadaraAccessKeyId: zadaraAccessKeyId
        zadaraSecretAccessKey: zadaraSecretAccessKey
        url: url
      properties:
        url:
          nullable: true
          type: string
        zadaraAccessKeyId:
          nullable: true
          type: string
        zadaraSecretAccessKey:
          nullable: true
          type: string
      type: object
    ZededaCheckerCommand:
      additionalProperties: false
      example:
        url: url
        token: token
      properties:
        url:
          nullable: true
          type: string
        token:
          nullable: true
          type: string
      type: object
    ZededaEdgeNodesCommand:
      additionalProperties: false
      example:
        apiToken: apiToken
        apiUrl: apiUrl
        project: project
      properties:
        apiUrl:
          nullable: true
          type: string
        apiToken:
          nullable: true
          type: string
        project:
          nullable: true
          type: string
      type: object
    ZededaFlavorList:
      additionalProperties: false
      example:
        data:
        - name: name
          cpu: 0
          ram: 6.027456183070403
        - name: name
          cpu: 0
          ram: 6.027456183070403
        totalCount: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/ProxmoxFlavorData"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    ZededaInterfaceCommand:
      additionalProperties: false
      example:
        edgeNode: edgeNode
        apiToken: apiToken
        apiUrl: apiUrl
        project: project
      properties:
        apiUrl:
          nullable: true
          type: string
        apiToken:
          nullable: true
          type: string
        project:
          nullable: true
          type: string
        edgeNode:
          nullable: true
          type: string
      type: object
    ZededaList:
      additionalProperties: false
      example:
        data:
        - projectCount: 6
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          project: project
          zededaNetworks:
          - endAllocationRange: endAllocationRange
            vlanId: 5
            netMask: 5
            ipAddress: ipAddress
            bridge: bridge
            isPrivate: true
            beginAllocationRange: beginAllocationRange
            gateway: gateway
            isVirtualLbNetwork: true
          - endAllocationRange: endAllocationRange
            vlanId: 5
            netMask: 5
            ipAddress: ipAddress
            bridge: bridge
            isPrivate: true
            beginAllocationRange: beginAllocationRange
            gateway: gateway
            isVirtualLbNetwork: true
          organizationId: 1
          createdAt: createdAt
          isDefault: true
          apiToken: apiToken
          apiUrl: apiUrl
          createdBy: createdBy
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
          edgeNodes:
          - name: name
            id: 5
          - name: name
            id: 5
          continentName: continentName
          projectId: projectId
        - projectCount: 6
          projects:
          - name: name
            id: 5
          - name: name
            id: 5
          organizationName: organizationName
          lastModifiedBy: lastModifiedBy
          project: project
          zededaNetworks:
          - endAllocationRange: endAllocationRange
            vlanId: 5
            netMask: 5
            ipAddress: ipAddress
            bridge: bridge
            isPrivate: true
            beginAllocationRange: beginAllocationRange
            gateway: gateway
            isVirtualLbNetwork: true
          - endAllocationRange: endAllocationRange
            vlanId: 5
            netMask: 5
            ipAddress: ipAddress
            bridge: bridge
            isPrivate: true
            beginAllocationRange: beginAllocationRange
            gateway: gateway
            isVirtualLbNetwork: true
          organizationId: 1
          createdAt: createdAt
          isDefault: true
          apiToken: apiToken
          apiUrl: apiUrl
          createdBy: createdBy
          isLocked: true
          name: name
          id: 0
          lastModified: lastModified
          edgeNodes:
          - name: name
            id: 5
          - name: name
            id: 5
          continentName: continentName
          projectId: projectId
        totalCount: 2
      properties:
        data:
          items:
            $ref: "#/components/schemas/ZededaListDto"
          nullable: true
          type: array
        totalCount:
          format: int32
          type: integer
      required:
      - data
      - totalCount
      type: object
    ZededaListDto:
      additionalProperties: false
      example:
        projectCount: 6
        projects:
        - name: name
          id: 5
        - name: name
          id: 5
        organizationName: organizationName
        lastModifiedBy: lastModifiedBy
        project: project
        zededaNetworks:
        - endAllocationRange: endAllocationRange
          vlanId: 5
          netMask: 5
          ipAddress: ipAddress
          bridge: bridge
          isPrivate: true
          beginAllocationRange: beginAllocationRange
          gateway: gateway
          isVirtualLbNetwork: true
        - endAllocationRange: endAllocationRange
          vlanId: 5
          netMask: 5
          ipAddress: ipAddress
          bridge: bridge
          isPrivate: true
          beginAllocationRange: beginAllocationRange
          gateway: gateway
          isVirtualLbNetwork: true
        organizationId: 1
        createdAt: createdAt
        isDefault: true
        apiToken: apiToken
        apiUrl: apiUrl
        createdBy: createdBy
        isLocked: true
        name: name
        id: 0
        lastModified: lastModified
        edgeNodes:
        - name: name
          id: 5
        - name: name
          id: 5
        continentName: continentName
        projectId: projectId
      properties:
        id:
          format: int32
          type: integer
        projectCount:
          format: int32
          type: integer
        isLocked:
          type: boolean
        name:
          type: string
        projects:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          type: array
        createdBy:
          nullable: true
          type: string
        createdAt:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: string
        lastModifiedBy:
          nullable: true
          type: string
        isDefault:
          type: boolean
        organizationId:
          format: int32
          type: integer
        organizationName:
          type: string
        continentName:
          nullable: true
          type: string
        edgeNodes:
          items:
            $ref: "#/components/schemas/CommonDropdownDto"
          type: array
        apiToken:
          type: string
        apiUrl:
          type: string
        project:
          type: string
        projectId:
          type: string
        zededaNetworks:
          items:
            $ref: "#/components/schemas/ZededaNetworkListDto"
          type: array
      required:
      - apiToken
      - apiUrl
      - continentName
      - createdAt
      - createdBy
      - edgeNodes
      - id
      - isDefault
      - isLocked
      - lastModified
      - lastModifiedBy
      - name
      - organizationId
      - organizationName
      - project
      - projectCount
      - projectId
      - projects
      - zededaNetworks
      type: object
    ZededaNetworkListDto:
      additionalProperties: false
      example:
        endAllocationRange: endAllocationRange
        vlanId: 5
        netMask: 5
        ipAddress: ipAddress
        bridge: bridge
        isPrivate: true
        beginAllocationRange: beginAllocationRange
        gateway: gateway
        isVirtualLbNetwork: true
      properties:
        bridge:
          nullable: true
          type: string
        gateway:
          type: string
        ipAddress:
          type: string
        netMask:
          format: int32
          type: integer
        beginAllocationRange:
          type: string
        endAllocationRange:
          type: string
        isPrivate:
          type: boolean
        isVirtualLbNetwork:
          type: boolean
        vlanId:
          format: int32
          nullable: true
          type: integer
      required:
      - beginAllocationRange
      - bridge
      - endAllocationRange
      - gateway
      - ipAddress
      - isPrivate
      - isVirtualLbNetwork
      - netMask
      - vlanId
      type: object
    ZededaProjectsCommand:
      additionalProperties: false
      example:
        apiToken: apiToken
        apiUrl: apiUrl
      properties:
        apiUrl:
          nullable: true
          type: string
        apiToken:
          nullable: true
          type: string
      type: object
  securitySchemes:
    Bearer:
      description: "Input your Bearer token in this format - Bearer {your token here}\
        \ to access this API"
      in: header
      name: Authorization
      type: apiKey
