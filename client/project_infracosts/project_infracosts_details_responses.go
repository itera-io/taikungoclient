// Code generated by go-swagger; DO NOT EDIT.

package project_infracosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ProjectInfracostsDetailsReader is a Reader for the ProjectInfracostsDetails structure.
type ProjectInfracostsDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectInfracostsDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectInfracostsDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProjectInfracostsDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProjectInfracostsDetailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProjectInfracostsDetailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectInfracostsDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProjectInfracostsDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProjectInfracostsDetailsOK creates a ProjectInfracostsDetailsOK with default headers values
func NewProjectInfracostsDetailsOK() *ProjectInfracostsDetailsOK {
	return &ProjectInfracostsDetailsOK{}
}

/*
ProjectInfracostsDetailsOK describes a response with status code 200, with default header values.

Success
*/
type ProjectInfracostsDetailsOK struct {
	Payload *models.EstimatedInfracost
}

// IsSuccess returns true when this project infracosts details o k response has a 2xx status code
func (o *ProjectInfracostsDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this project infracosts details o k response has a 3xx status code
func (o *ProjectInfracostsDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project infracosts details o k response has a 4xx status code
func (o *ProjectInfracostsDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this project infracosts details o k response has a 5xx status code
func (o *ProjectInfracostsDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this project infracosts details o k response a status code equal to that given
func (o *ProjectInfracostsDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ProjectInfracostsDetailsOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectInfracosts/{id}][%d] projectInfracostsDetailsOK  %+v", 200, o.Payload)
}

func (o *ProjectInfracostsDetailsOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectInfracosts/{id}][%d] projectInfracostsDetailsOK  %+v", 200, o.Payload)
}

func (o *ProjectInfracostsDetailsOK) GetPayload() *models.EstimatedInfracost {
	return o.Payload
}

func (o *ProjectInfracostsDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EstimatedInfracost)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectInfracostsDetailsBadRequest creates a ProjectInfracostsDetailsBadRequest with default headers values
func NewProjectInfracostsDetailsBadRequest() *ProjectInfracostsDetailsBadRequest {
	return &ProjectInfracostsDetailsBadRequest{}
}

/*
ProjectInfracostsDetailsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProjectInfracostsDetailsBadRequest struct {
	Payload []*models.Error
}

// IsSuccess returns true when this project infracosts details bad request response has a 2xx status code
func (o *ProjectInfracostsDetailsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project infracosts details bad request response has a 3xx status code
func (o *ProjectInfracostsDetailsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project infracosts details bad request response has a 4xx status code
func (o *ProjectInfracostsDetailsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this project infracosts details bad request response has a 5xx status code
func (o *ProjectInfracostsDetailsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this project infracosts details bad request response a status code equal to that given
func (o *ProjectInfracostsDetailsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ProjectInfracostsDetailsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectInfracosts/{id}][%d] projectInfracostsDetailsBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectInfracostsDetailsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectInfracosts/{id}][%d] projectInfracostsDetailsBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectInfracostsDetailsBadRequest) GetPayload() []*models.Error {
	return o.Payload
}

func (o *ProjectInfracostsDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectInfracostsDetailsUnauthorized creates a ProjectInfracostsDetailsUnauthorized with default headers values
func NewProjectInfracostsDetailsUnauthorized() *ProjectInfracostsDetailsUnauthorized {
	return &ProjectInfracostsDetailsUnauthorized{}
}

/*
ProjectInfracostsDetailsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProjectInfracostsDetailsUnauthorized struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this project infracosts details unauthorized response has a 2xx status code
func (o *ProjectInfracostsDetailsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project infracosts details unauthorized response has a 3xx status code
func (o *ProjectInfracostsDetailsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project infracosts details unauthorized response has a 4xx status code
func (o *ProjectInfracostsDetailsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this project infracosts details unauthorized response has a 5xx status code
func (o *ProjectInfracostsDetailsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this project infracosts details unauthorized response a status code equal to that given
func (o *ProjectInfracostsDetailsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ProjectInfracostsDetailsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectInfracosts/{id}][%d] projectInfracostsDetailsUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectInfracostsDetailsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectInfracosts/{id}][%d] projectInfracostsDetailsUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectInfracostsDetailsUnauthorized) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *ProjectInfracostsDetailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectInfracostsDetailsForbidden creates a ProjectInfracostsDetailsForbidden with default headers values
func NewProjectInfracostsDetailsForbidden() *ProjectInfracostsDetailsForbidden {
	return &ProjectInfracostsDetailsForbidden{}
}

/*
ProjectInfracostsDetailsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ProjectInfracostsDetailsForbidden struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this project infracosts details forbidden response has a 2xx status code
func (o *ProjectInfracostsDetailsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project infracosts details forbidden response has a 3xx status code
func (o *ProjectInfracostsDetailsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project infracosts details forbidden response has a 4xx status code
func (o *ProjectInfracostsDetailsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this project infracosts details forbidden response has a 5xx status code
func (o *ProjectInfracostsDetailsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this project infracosts details forbidden response a status code equal to that given
func (o *ProjectInfracostsDetailsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ProjectInfracostsDetailsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectInfracosts/{id}][%d] projectInfracostsDetailsForbidden  %+v", 403, o.Payload)
}

func (o *ProjectInfracostsDetailsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectInfracosts/{id}][%d] projectInfracostsDetailsForbidden  %+v", 403, o.Payload)
}

func (o *ProjectInfracostsDetailsForbidden) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *ProjectInfracostsDetailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectInfracostsDetailsNotFound creates a ProjectInfracostsDetailsNotFound with default headers values
func NewProjectInfracostsDetailsNotFound() *ProjectInfracostsDetailsNotFound {
	return &ProjectInfracostsDetailsNotFound{}
}

/*
ProjectInfracostsDetailsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProjectInfracostsDetailsNotFound struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this project infracosts details not found response has a 2xx status code
func (o *ProjectInfracostsDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project infracosts details not found response has a 3xx status code
func (o *ProjectInfracostsDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project infracosts details not found response has a 4xx status code
func (o *ProjectInfracostsDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this project infracosts details not found response has a 5xx status code
func (o *ProjectInfracostsDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this project infracosts details not found response a status code equal to that given
func (o *ProjectInfracostsDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ProjectInfracostsDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectInfracosts/{id}][%d] projectInfracostsDetailsNotFound  %+v", 404, o.Payload)
}

func (o *ProjectInfracostsDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectInfracosts/{id}][%d] projectInfracostsDetailsNotFound  %+v", 404, o.Payload)
}

func (o *ProjectInfracostsDetailsNotFound) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *ProjectInfracostsDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectInfracostsDetailsInternalServerError creates a ProjectInfracostsDetailsInternalServerError with default headers values
func NewProjectInfracostsDetailsInternalServerError() *ProjectInfracostsDetailsInternalServerError {
	return &ProjectInfracostsDetailsInternalServerError{}
}

/*
ProjectInfracostsDetailsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ProjectInfracostsDetailsInternalServerError struct {
}

// IsSuccess returns true when this project infracosts details internal server error response has a 2xx status code
func (o *ProjectInfracostsDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project infracosts details internal server error response has a 3xx status code
func (o *ProjectInfracostsDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project infracosts details internal server error response has a 4xx status code
func (o *ProjectInfracostsDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this project infracosts details internal server error response has a 5xx status code
func (o *ProjectInfracostsDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this project infracosts details internal server error response a status code equal to that given
func (o *ProjectInfracostsDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ProjectInfracostsDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectInfracosts/{id}][%d] projectInfracostsDetailsInternalServerError ", 500)
}

func (o *ProjectInfracostsDetailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectInfracosts/{id}][%d] projectInfracostsDetailsInternalServerError ", 500)
}

func (o *ProjectInfracostsDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
