// Code generated by go-swagger; DO NOT EDIT.

package catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CatalogDeleteCatalogReader is a Reader for the CatalogDeleteCatalog structure.
type CatalogDeleteCatalogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CatalogDeleteCatalogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCatalogDeleteCatalogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCatalogDeleteCatalogBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCatalogDeleteCatalogUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCatalogDeleteCatalogForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCatalogDeleteCatalogNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCatalogDeleteCatalogInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCatalogDeleteCatalogOK creates a CatalogDeleteCatalogOK with default headers values
func NewCatalogDeleteCatalogOK() *CatalogDeleteCatalogOK {
	return &CatalogDeleteCatalogOK{}
}

/*
CatalogDeleteCatalogOK describes a response with status code 200, with default header values.

Success
*/
type CatalogDeleteCatalogOK struct {
	Payload interface{}
}

// IsSuccess returns true when this catalog delete catalog o k response has a 2xx status code
func (o *CatalogDeleteCatalogOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this catalog delete catalog o k response has a 3xx status code
func (o *CatalogDeleteCatalogOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog delete catalog o k response has a 4xx status code
func (o *CatalogDeleteCatalogOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this catalog delete catalog o k response has a 5xx status code
func (o *CatalogDeleteCatalogOK) IsServerError() bool {
	return false
}

// IsCode returns true when this catalog delete catalog o k response a status code equal to that given
func (o *CatalogDeleteCatalogOK) IsCode(code int) bool {
	return code == 200
}

func (o *CatalogDeleteCatalogOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Catalog/delete/{id}][%d] catalogDeleteCatalogOK  %+v", 200, o.Payload)
}

func (o *CatalogDeleteCatalogOK) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Catalog/delete/{id}][%d] catalogDeleteCatalogOK  %+v", 200, o.Payload)
}

func (o *CatalogDeleteCatalogOK) GetPayload() interface{} {
	return o.Payload
}

func (o *CatalogDeleteCatalogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogDeleteCatalogBadRequest creates a CatalogDeleteCatalogBadRequest with default headers values
func NewCatalogDeleteCatalogBadRequest() *CatalogDeleteCatalogBadRequest {
	return &CatalogDeleteCatalogBadRequest{}
}

/*
CatalogDeleteCatalogBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CatalogDeleteCatalogBadRequest struct {
	Payload []*CatalogDeleteCatalogBadRequestBodyItems0
}

// IsSuccess returns true when this catalog delete catalog bad request response has a 2xx status code
func (o *CatalogDeleteCatalogBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this catalog delete catalog bad request response has a 3xx status code
func (o *CatalogDeleteCatalogBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog delete catalog bad request response has a 4xx status code
func (o *CatalogDeleteCatalogBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this catalog delete catalog bad request response has a 5xx status code
func (o *CatalogDeleteCatalogBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this catalog delete catalog bad request response a status code equal to that given
func (o *CatalogDeleteCatalogBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CatalogDeleteCatalogBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Catalog/delete/{id}][%d] catalogDeleteCatalogBadRequest  %+v", 400, o.Payload)
}

func (o *CatalogDeleteCatalogBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Catalog/delete/{id}][%d] catalogDeleteCatalogBadRequest  %+v", 400, o.Payload)
}

func (o *CatalogDeleteCatalogBadRequest) GetPayload() []*CatalogDeleteCatalogBadRequestBodyItems0 {
	return o.Payload
}

func (o *CatalogDeleteCatalogBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogDeleteCatalogUnauthorized creates a CatalogDeleteCatalogUnauthorized with default headers values
func NewCatalogDeleteCatalogUnauthorized() *CatalogDeleteCatalogUnauthorized {
	return &CatalogDeleteCatalogUnauthorized{}
}

/*
CatalogDeleteCatalogUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CatalogDeleteCatalogUnauthorized struct {
	Payload *CatalogDeleteCatalogUnauthorizedBody
}

// IsSuccess returns true when this catalog delete catalog unauthorized response has a 2xx status code
func (o *CatalogDeleteCatalogUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this catalog delete catalog unauthorized response has a 3xx status code
func (o *CatalogDeleteCatalogUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog delete catalog unauthorized response has a 4xx status code
func (o *CatalogDeleteCatalogUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this catalog delete catalog unauthorized response has a 5xx status code
func (o *CatalogDeleteCatalogUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this catalog delete catalog unauthorized response a status code equal to that given
func (o *CatalogDeleteCatalogUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CatalogDeleteCatalogUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Catalog/delete/{id}][%d] catalogDeleteCatalogUnauthorized  %+v", 401, o.Payload)
}

func (o *CatalogDeleteCatalogUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Catalog/delete/{id}][%d] catalogDeleteCatalogUnauthorized  %+v", 401, o.Payload)
}

func (o *CatalogDeleteCatalogUnauthorized) GetPayload() *CatalogDeleteCatalogUnauthorizedBody {
	return o.Payload
}

func (o *CatalogDeleteCatalogUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CatalogDeleteCatalogUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogDeleteCatalogForbidden creates a CatalogDeleteCatalogForbidden with default headers values
func NewCatalogDeleteCatalogForbidden() *CatalogDeleteCatalogForbidden {
	return &CatalogDeleteCatalogForbidden{}
}

/*
CatalogDeleteCatalogForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CatalogDeleteCatalogForbidden struct {
	Payload *CatalogDeleteCatalogForbiddenBody
}

// IsSuccess returns true when this catalog delete catalog forbidden response has a 2xx status code
func (o *CatalogDeleteCatalogForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this catalog delete catalog forbidden response has a 3xx status code
func (o *CatalogDeleteCatalogForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog delete catalog forbidden response has a 4xx status code
func (o *CatalogDeleteCatalogForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this catalog delete catalog forbidden response has a 5xx status code
func (o *CatalogDeleteCatalogForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this catalog delete catalog forbidden response a status code equal to that given
func (o *CatalogDeleteCatalogForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CatalogDeleteCatalogForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Catalog/delete/{id}][%d] catalogDeleteCatalogForbidden  %+v", 403, o.Payload)
}

func (o *CatalogDeleteCatalogForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Catalog/delete/{id}][%d] catalogDeleteCatalogForbidden  %+v", 403, o.Payload)
}

func (o *CatalogDeleteCatalogForbidden) GetPayload() *CatalogDeleteCatalogForbiddenBody {
	return o.Payload
}

func (o *CatalogDeleteCatalogForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CatalogDeleteCatalogForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogDeleteCatalogNotFound creates a CatalogDeleteCatalogNotFound with default headers values
func NewCatalogDeleteCatalogNotFound() *CatalogDeleteCatalogNotFound {
	return &CatalogDeleteCatalogNotFound{}
}

/*
CatalogDeleteCatalogNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CatalogDeleteCatalogNotFound struct {
	Payload *CatalogDeleteCatalogNotFoundBody
}

// IsSuccess returns true when this catalog delete catalog not found response has a 2xx status code
func (o *CatalogDeleteCatalogNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this catalog delete catalog not found response has a 3xx status code
func (o *CatalogDeleteCatalogNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog delete catalog not found response has a 4xx status code
func (o *CatalogDeleteCatalogNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this catalog delete catalog not found response has a 5xx status code
func (o *CatalogDeleteCatalogNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this catalog delete catalog not found response a status code equal to that given
func (o *CatalogDeleteCatalogNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CatalogDeleteCatalogNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Catalog/delete/{id}][%d] catalogDeleteCatalogNotFound  %+v", 404, o.Payload)
}

func (o *CatalogDeleteCatalogNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Catalog/delete/{id}][%d] catalogDeleteCatalogNotFound  %+v", 404, o.Payload)
}

func (o *CatalogDeleteCatalogNotFound) GetPayload() *CatalogDeleteCatalogNotFoundBody {
	return o.Payload
}

func (o *CatalogDeleteCatalogNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CatalogDeleteCatalogNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogDeleteCatalogInternalServerError creates a CatalogDeleteCatalogInternalServerError with default headers values
func NewCatalogDeleteCatalogInternalServerError() *CatalogDeleteCatalogInternalServerError {
	return &CatalogDeleteCatalogInternalServerError{}
}

/*
CatalogDeleteCatalogInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CatalogDeleteCatalogInternalServerError struct {
}

// IsSuccess returns true when this catalog delete catalog internal server error response has a 2xx status code
func (o *CatalogDeleteCatalogInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this catalog delete catalog internal server error response has a 3xx status code
func (o *CatalogDeleteCatalogInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog delete catalog internal server error response has a 4xx status code
func (o *CatalogDeleteCatalogInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this catalog delete catalog internal server error response has a 5xx status code
func (o *CatalogDeleteCatalogInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this catalog delete catalog internal server error response a status code equal to that given
func (o *CatalogDeleteCatalogInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CatalogDeleteCatalogInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Catalog/delete/{id}][%d] catalogDeleteCatalogInternalServerError ", 500)
}

func (o *CatalogDeleteCatalogInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/Catalog/delete/{id}][%d] catalogDeleteCatalogInternalServerError ", 500)
}

func (o *CatalogDeleteCatalogInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
CatalogDeleteCatalogBadRequestBodyItems0 catalog delete catalog bad request body items0
swagger:model CatalogDeleteCatalogBadRequestBodyItems0
*/
type CatalogDeleteCatalogBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this catalog delete catalog bad request body items0
func (o *CatalogDeleteCatalogBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this catalog delete catalog bad request body items0 based on context it is used
func (o *CatalogDeleteCatalogBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CatalogDeleteCatalogBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogDeleteCatalogBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res CatalogDeleteCatalogBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CatalogDeleteCatalogForbiddenBody catalog delete catalog forbidden body
swagger:model CatalogDeleteCatalogForbiddenBody
*/
type CatalogDeleteCatalogForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this catalog delete catalog forbidden body
func (o *CatalogDeleteCatalogForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this catalog delete catalog forbidden body based on context it is used
func (o *CatalogDeleteCatalogForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CatalogDeleteCatalogForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogDeleteCatalogForbiddenBody) UnmarshalBinary(b []byte) error {
	var res CatalogDeleteCatalogForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CatalogDeleteCatalogNotFoundBody catalog delete catalog not found body
swagger:model CatalogDeleteCatalogNotFoundBody
*/
type CatalogDeleteCatalogNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this catalog delete catalog not found body
func (o *CatalogDeleteCatalogNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this catalog delete catalog not found body based on context it is used
func (o *CatalogDeleteCatalogNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CatalogDeleteCatalogNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogDeleteCatalogNotFoundBody) UnmarshalBinary(b []byte) error {
	var res CatalogDeleteCatalogNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CatalogDeleteCatalogUnauthorizedBody catalog delete catalog unauthorized body
swagger:model CatalogDeleteCatalogUnauthorizedBody
*/
type CatalogDeleteCatalogUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this catalog delete catalog unauthorized body
func (o *CatalogDeleteCatalogUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this catalog delete catalog unauthorized body based on context it is used
func (o *CatalogDeleteCatalogUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CatalogDeleteCatalogUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogDeleteCatalogUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res CatalogDeleteCatalogUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
