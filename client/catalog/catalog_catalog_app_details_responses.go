// Code generated by go-swagger; DO NOT EDIT.

package catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CatalogCatalogAppDetailsReader is a Reader for the CatalogCatalogAppDetails structure.
type CatalogCatalogAppDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CatalogCatalogAppDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCatalogCatalogAppDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCatalogCatalogAppDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCatalogCatalogAppDetailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCatalogCatalogAppDetailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCatalogCatalogAppDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCatalogCatalogAppDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCatalogCatalogAppDetailsOK creates a CatalogCatalogAppDetailsOK with default headers values
func NewCatalogCatalogAppDetailsOK() *CatalogCatalogAppDetailsOK {
	return &CatalogCatalogAppDetailsOK{}
}

/*
CatalogCatalogAppDetailsOK describes a response with status code 200, with default header values.

Success
*/
type CatalogCatalogAppDetailsOK struct {
	Payload *CatalogCatalogAppDetailsOKBody
}

// IsSuccess returns true when this catalog catalog app details o k response has a 2xx status code
func (o *CatalogCatalogAppDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this catalog catalog app details o k response has a 3xx status code
func (o *CatalogCatalogAppDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog catalog app details o k response has a 4xx status code
func (o *CatalogCatalogAppDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this catalog catalog app details o k response has a 5xx status code
func (o *CatalogCatalogAppDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this catalog catalog app details o k response a status code equal to that given
func (o *CatalogCatalogAppDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *CatalogCatalogAppDetailsOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/catalog-app/{id}][%d] catalogCatalogAppDetailsOK  %+v", 200, o.Payload)
}

func (o *CatalogCatalogAppDetailsOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/catalog-app/{id}][%d] catalogCatalogAppDetailsOK  %+v", 200, o.Payload)
}

func (o *CatalogCatalogAppDetailsOK) GetPayload() *CatalogCatalogAppDetailsOKBody {
	return o.Payload
}

func (o *CatalogCatalogAppDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CatalogCatalogAppDetailsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCatalogAppDetailsBadRequest creates a CatalogCatalogAppDetailsBadRequest with default headers values
func NewCatalogCatalogAppDetailsBadRequest() *CatalogCatalogAppDetailsBadRequest {
	return &CatalogCatalogAppDetailsBadRequest{}
}

/*
CatalogCatalogAppDetailsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CatalogCatalogAppDetailsBadRequest struct {
	Payload []*CatalogCatalogAppDetailsBadRequestBodyItems0
}

// IsSuccess returns true when this catalog catalog app details bad request response has a 2xx status code
func (o *CatalogCatalogAppDetailsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this catalog catalog app details bad request response has a 3xx status code
func (o *CatalogCatalogAppDetailsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog catalog app details bad request response has a 4xx status code
func (o *CatalogCatalogAppDetailsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this catalog catalog app details bad request response has a 5xx status code
func (o *CatalogCatalogAppDetailsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this catalog catalog app details bad request response a status code equal to that given
func (o *CatalogCatalogAppDetailsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CatalogCatalogAppDetailsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/catalog-app/{id}][%d] catalogCatalogAppDetailsBadRequest  %+v", 400, o.Payload)
}

func (o *CatalogCatalogAppDetailsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/catalog-app/{id}][%d] catalogCatalogAppDetailsBadRequest  %+v", 400, o.Payload)
}

func (o *CatalogCatalogAppDetailsBadRequest) GetPayload() []*CatalogCatalogAppDetailsBadRequestBodyItems0 {
	return o.Payload
}

func (o *CatalogCatalogAppDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCatalogAppDetailsUnauthorized creates a CatalogCatalogAppDetailsUnauthorized with default headers values
func NewCatalogCatalogAppDetailsUnauthorized() *CatalogCatalogAppDetailsUnauthorized {
	return &CatalogCatalogAppDetailsUnauthorized{}
}

/*
CatalogCatalogAppDetailsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CatalogCatalogAppDetailsUnauthorized struct {
	Payload *CatalogCatalogAppDetailsUnauthorizedBody
}

// IsSuccess returns true when this catalog catalog app details unauthorized response has a 2xx status code
func (o *CatalogCatalogAppDetailsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this catalog catalog app details unauthorized response has a 3xx status code
func (o *CatalogCatalogAppDetailsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog catalog app details unauthorized response has a 4xx status code
func (o *CatalogCatalogAppDetailsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this catalog catalog app details unauthorized response has a 5xx status code
func (o *CatalogCatalogAppDetailsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this catalog catalog app details unauthorized response a status code equal to that given
func (o *CatalogCatalogAppDetailsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CatalogCatalogAppDetailsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/catalog-app/{id}][%d] catalogCatalogAppDetailsUnauthorized  %+v", 401, o.Payload)
}

func (o *CatalogCatalogAppDetailsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/catalog-app/{id}][%d] catalogCatalogAppDetailsUnauthorized  %+v", 401, o.Payload)
}

func (o *CatalogCatalogAppDetailsUnauthorized) GetPayload() *CatalogCatalogAppDetailsUnauthorizedBody {
	return o.Payload
}

func (o *CatalogCatalogAppDetailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CatalogCatalogAppDetailsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCatalogAppDetailsForbidden creates a CatalogCatalogAppDetailsForbidden with default headers values
func NewCatalogCatalogAppDetailsForbidden() *CatalogCatalogAppDetailsForbidden {
	return &CatalogCatalogAppDetailsForbidden{}
}

/*
CatalogCatalogAppDetailsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CatalogCatalogAppDetailsForbidden struct {
	Payload *CatalogCatalogAppDetailsForbiddenBody
}

// IsSuccess returns true when this catalog catalog app details forbidden response has a 2xx status code
func (o *CatalogCatalogAppDetailsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this catalog catalog app details forbidden response has a 3xx status code
func (o *CatalogCatalogAppDetailsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog catalog app details forbidden response has a 4xx status code
func (o *CatalogCatalogAppDetailsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this catalog catalog app details forbidden response has a 5xx status code
func (o *CatalogCatalogAppDetailsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this catalog catalog app details forbidden response a status code equal to that given
func (o *CatalogCatalogAppDetailsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CatalogCatalogAppDetailsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/catalog-app/{id}][%d] catalogCatalogAppDetailsForbidden  %+v", 403, o.Payload)
}

func (o *CatalogCatalogAppDetailsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/catalog-app/{id}][%d] catalogCatalogAppDetailsForbidden  %+v", 403, o.Payload)
}

func (o *CatalogCatalogAppDetailsForbidden) GetPayload() *CatalogCatalogAppDetailsForbiddenBody {
	return o.Payload
}

func (o *CatalogCatalogAppDetailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CatalogCatalogAppDetailsForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCatalogAppDetailsNotFound creates a CatalogCatalogAppDetailsNotFound with default headers values
func NewCatalogCatalogAppDetailsNotFound() *CatalogCatalogAppDetailsNotFound {
	return &CatalogCatalogAppDetailsNotFound{}
}

/*
CatalogCatalogAppDetailsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CatalogCatalogAppDetailsNotFound struct {
	Payload *CatalogCatalogAppDetailsNotFoundBody
}

// IsSuccess returns true when this catalog catalog app details not found response has a 2xx status code
func (o *CatalogCatalogAppDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this catalog catalog app details not found response has a 3xx status code
func (o *CatalogCatalogAppDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog catalog app details not found response has a 4xx status code
func (o *CatalogCatalogAppDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this catalog catalog app details not found response has a 5xx status code
func (o *CatalogCatalogAppDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this catalog catalog app details not found response a status code equal to that given
func (o *CatalogCatalogAppDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CatalogCatalogAppDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/catalog-app/{id}][%d] catalogCatalogAppDetailsNotFound  %+v", 404, o.Payload)
}

func (o *CatalogCatalogAppDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/catalog-app/{id}][%d] catalogCatalogAppDetailsNotFound  %+v", 404, o.Payload)
}

func (o *CatalogCatalogAppDetailsNotFound) GetPayload() *CatalogCatalogAppDetailsNotFoundBody {
	return o.Payload
}

func (o *CatalogCatalogAppDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CatalogCatalogAppDetailsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCatalogAppDetailsInternalServerError creates a CatalogCatalogAppDetailsInternalServerError with default headers values
func NewCatalogCatalogAppDetailsInternalServerError() *CatalogCatalogAppDetailsInternalServerError {
	return &CatalogCatalogAppDetailsInternalServerError{}
}

/*
CatalogCatalogAppDetailsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CatalogCatalogAppDetailsInternalServerError struct {
}

// IsSuccess returns true when this catalog catalog app details internal server error response has a 2xx status code
func (o *CatalogCatalogAppDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this catalog catalog app details internal server error response has a 3xx status code
func (o *CatalogCatalogAppDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog catalog app details internal server error response has a 4xx status code
func (o *CatalogCatalogAppDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this catalog catalog app details internal server error response has a 5xx status code
func (o *CatalogCatalogAppDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this catalog catalog app details internal server error response a status code equal to that given
func (o *CatalogCatalogAppDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CatalogCatalogAppDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/catalog-app/{id}][%d] catalogCatalogAppDetailsInternalServerError ", 500)
}

func (o *CatalogCatalogAppDetailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/catalog-app/{id}][%d] catalogCatalogAppDetailsInternalServerError ", 500)
}

func (o *CatalogCatalogAppDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
CatalogCatalogAppDetailsBadRequestBodyItems0 catalog catalog app details bad request body items0
swagger:model CatalogCatalogAppDetailsBadRequestBodyItems0
*/
type CatalogCatalogAppDetailsBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this catalog catalog app details bad request body items0
func (o *CatalogCatalogAppDetailsBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this catalog catalog app details bad request body items0 based on context it is used
func (o *CatalogCatalogAppDetailsBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CatalogCatalogAppDetailsBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogCatalogAppDetailsBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res CatalogCatalogAppDetailsBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CatalogCatalogAppDetailsForbiddenBody catalog catalog app details forbidden body
swagger:model CatalogCatalogAppDetailsForbiddenBody
*/
type CatalogCatalogAppDetailsForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this catalog catalog app details forbidden body
func (o *CatalogCatalogAppDetailsForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this catalog catalog app details forbidden body based on context it is used
func (o *CatalogCatalogAppDetailsForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CatalogCatalogAppDetailsForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogCatalogAppDetailsForbiddenBody) UnmarshalBinary(b []byte) error {
	var res CatalogCatalogAppDetailsForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CatalogCatalogAppDetailsNotFoundBody catalog catalog app details not found body
swagger:model CatalogCatalogAppDetailsNotFoundBody
*/
type CatalogCatalogAppDetailsNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this catalog catalog app details not found body
func (o *CatalogCatalogAppDetailsNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this catalog catalog app details not found body based on context it is used
func (o *CatalogCatalogAppDetailsNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CatalogCatalogAppDetailsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogCatalogAppDetailsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res CatalogCatalogAppDetailsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CatalogCatalogAppDetailsOKBody catalog catalog app details o k body
swagger:model CatalogCatalogAppDetailsOKBody
*/
type CatalogCatalogAppDetailsOKBody struct {

	// app repo Id
	AppRepoID int32 `json:"appRepoId,omitempty"`

	// app repo name
	AppRepoName string `json:"appRepoName,omitempty"`

	// app repo organization name
	AppRepoOrganizationName string `json:"appRepoOrganizationName,omitempty"`

	// app version
	AppVersion string `json:"appVersion,omitempty"`

	// catalog Id
	CatalogID int32 `json:"catalogId,omitempty"`

	// catalog name
	CatalogName string `json:"catalogName,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// logo Id
	LogoID string `json:"logoId,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// official
	Official bool `json:"official"`

	// package Id
	PackageID string `json:"packageId,omitempty"`

	// project apps
	ProjectApps []*CatalogCatalogAppDetailsOKBodyProjectAppsItems0 `json:"projectApps"`

	// readme
	Readme string `json:"readme,omitempty"`

	// security report
	SecurityReport *CatalogCatalogAppDetailsOKBodySecurityReport `json:"securityReport,omitempty"`

	// stars
	Stars int32 `json:"stars,omitempty"`

	// verified publisher
	VerifiedPublisher bool `json:"verifiedPublisher"`

	// version
	Version string `json:"version,omitempty"`
}

// Validate validates this catalog catalog app details o k body
func (o *CatalogCatalogAppDetailsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateProjectApps(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSecurityReport(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CatalogCatalogAppDetailsOKBody) validateProjectApps(formats strfmt.Registry) error {
	if swag.IsZero(o.ProjectApps) { // not required
		return nil
	}

	for i := 0; i < len(o.ProjectApps); i++ {
		if swag.IsZero(o.ProjectApps[i]) { // not required
			continue
		}

		if o.ProjectApps[i] != nil {
			if err := o.ProjectApps[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("catalogCatalogAppDetailsOK" + "." + "projectApps" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("catalogCatalogAppDetailsOK" + "." + "projectApps" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *CatalogCatalogAppDetailsOKBody) validateSecurityReport(formats strfmt.Registry) error {
	if swag.IsZero(o.SecurityReport) { // not required
		return nil
	}

	if o.SecurityReport != nil {
		if err := o.SecurityReport.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("catalogCatalogAppDetailsOK" + "." + "securityReport")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("catalogCatalogAppDetailsOK" + "." + "securityReport")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this catalog catalog app details o k body based on the context it is used
func (o *CatalogCatalogAppDetailsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateProjectApps(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateSecurityReport(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CatalogCatalogAppDetailsOKBody) contextValidateProjectApps(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.ProjectApps); i++ {

		if o.ProjectApps[i] != nil {
			if err := o.ProjectApps[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("catalogCatalogAppDetailsOK" + "." + "projectApps" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("catalogCatalogAppDetailsOK" + "." + "projectApps" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *CatalogCatalogAppDetailsOKBody) contextValidateSecurityReport(ctx context.Context, formats strfmt.Registry) error {

	if o.SecurityReport != nil {
		if err := o.SecurityReport.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("catalogCatalogAppDetailsOK" + "." + "securityReport")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("catalogCatalogAppDetailsOK" + "." + "securityReport")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CatalogCatalogAppDetailsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogCatalogAppDetailsOKBody) UnmarshalBinary(b []byte) error {
	var res CatalogCatalogAppDetailsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CatalogCatalogAppDetailsOKBodyProjectAppsItems0 catalog catalog app details o k body project apps items0
swagger:model CatalogCatalogAppDetailsOKBodyProjectAppsItems0
*/
type CatalogCatalogAppDetailsOKBodyProjectAppsItems0 struct {

	// id
	ID int32 `json:"id,omitempty"`

	// is locked
	IsLocked bool `json:"isLocked"`

	// name
	Name string `json:"name,omitempty"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// project Id
	ProjectID int32 `json:"projectId,omitempty"`

	// project name
	ProjectName string `json:"projectName,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// version
	Version string `json:"version,omitempty"`
}

// Validate validates this catalog catalog app details o k body project apps items0
func (o *CatalogCatalogAppDetailsOKBodyProjectAppsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this catalog catalog app details o k body project apps items0 based on context it is used
func (o *CatalogCatalogAppDetailsOKBodyProjectAppsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CatalogCatalogAppDetailsOKBodyProjectAppsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogCatalogAppDetailsOKBodyProjectAppsItems0) UnmarshalBinary(b []byte) error {
	var res CatalogCatalogAppDetailsOKBodyProjectAppsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CatalogCatalogAppDetailsOKBodySecurityReport catalog catalog app details o k body security report
swagger:model CatalogCatalogAppDetailsOKBodySecurityReport
*/
type CatalogCatalogAppDetailsOKBodySecurityReport struct {

	// critical
	Critical int64 `json:"critical,omitempty"`

	// high
	High int64 `json:"high,omitempty"`

	// low
	Low int64 `json:"low,omitempty"`

	// medium
	Medium int64 `json:"medium,omitempty"`

	// unknown
	Unknown int64 `json:"unknown,omitempty"`
}

// Validate validates this catalog catalog app details o k body security report
func (o *CatalogCatalogAppDetailsOKBodySecurityReport) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this catalog catalog app details o k body security report based on context it is used
func (o *CatalogCatalogAppDetailsOKBodySecurityReport) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CatalogCatalogAppDetailsOKBodySecurityReport) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogCatalogAppDetailsOKBodySecurityReport) UnmarshalBinary(b []byte) error {
	var res CatalogCatalogAppDetailsOKBodySecurityReport
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CatalogCatalogAppDetailsUnauthorizedBody catalog catalog app details unauthorized body
swagger:model CatalogCatalogAppDetailsUnauthorizedBody
*/
type CatalogCatalogAppDetailsUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this catalog catalog app details unauthorized body
func (o *CatalogCatalogAppDetailsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this catalog catalog app details unauthorized body based on context it is used
func (o *CatalogCatalogAppDetailsUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CatalogCatalogAppDetailsUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogCatalogAppDetailsUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res CatalogCatalogAppDetailsUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
