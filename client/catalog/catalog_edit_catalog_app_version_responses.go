// Code generated by go-swagger; DO NOT EDIT.

package catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// CatalogEditCatalogAppVersionReader is a Reader for the CatalogEditCatalogAppVersion structure.
type CatalogEditCatalogAppVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CatalogEditCatalogAppVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCatalogEditCatalogAppVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCatalogEditCatalogAppVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCatalogEditCatalogAppVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCatalogEditCatalogAppVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCatalogEditCatalogAppVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCatalogEditCatalogAppVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCatalogEditCatalogAppVersionOK creates a CatalogEditCatalogAppVersionOK with default headers values
func NewCatalogEditCatalogAppVersionOK() *CatalogEditCatalogAppVersionOK {
	return &CatalogEditCatalogAppVersionOK{}
}

/* CatalogEditCatalogAppVersionOK describes a response with status code 200, with default header values.

Success
*/
type CatalogEditCatalogAppVersionOK struct {
	Payload models.Unit
}

func (o *CatalogEditCatalogAppVersionOK) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/Catalog/edit-catalogapp-version][%d] catalogEditCatalogAppVersionOK  %+v", 200, o.Payload)
}
func (o *CatalogEditCatalogAppVersionOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *CatalogEditCatalogAppVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogEditCatalogAppVersionBadRequest creates a CatalogEditCatalogAppVersionBadRequest with default headers values
func NewCatalogEditCatalogAppVersionBadRequest() *CatalogEditCatalogAppVersionBadRequest {
	return &CatalogEditCatalogAppVersionBadRequest{}
}

/* CatalogEditCatalogAppVersionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CatalogEditCatalogAppVersionBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *CatalogEditCatalogAppVersionBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/Catalog/edit-catalogapp-version][%d] catalogEditCatalogAppVersionBadRequest  %+v", 400, o.Payload)
}
func (o *CatalogEditCatalogAppVersionBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *CatalogEditCatalogAppVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogEditCatalogAppVersionUnauthorized creates a CatalogEditCatalogAppVersionUnauthorized with default headers values
func NewCatalogEditCatalogAppVersionUnauthorized() *CatalogEditCatalogAppVersionUnauthorized {
	return &CatalogEditCatalogAppVersionUnauthorized{}
}

/* CatalogEditCatalogAppVersionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CatalogEditCatalogAppVersionUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *CatalogEditCatalogAppVersionUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/Catalog/edit-catalogapp-version][%d] catalogEditCatalogAppVersionUnauthorized  %+v", 401, o.Payload)
}
func (o *CatalogEditCatalogAppVersionUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CatalogEditCatalogAppVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogEditCatalogAppVersionForbidden creates a CatalogEditCatalogAppVersionForbidden with default headers values
func NewCatalogEditCatalogAppVersionForbidden() *CatalogEditCatalogAppVersionForbidden {
	return &CatalogEditCatalogAppVersionForbidden{}
}

/* CatalogEditCatalogAppVersionForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CatalogEditCatalogAppVersionForbidden struct {
	Payload *models.ProblemDetails
}

func (o *CatalogEditCatalogAppVersionForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/Catalog/edit-catalogapp-version][%d] catalogEditCatalogAppVersionForbidden  %+v", 403, o.Payload)
}
func (o *CatalogEditCatalogAppVersionForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CatalogEditCatalogAppVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogEditCatalogAppVersionNotFound creates a CatalogEditCatalogAppVersionNotFound with default headers values
func NewCatalogEditCatalogAppVersionNotFound() *CatalogEditCatalogAppVersionNotFound {
	return &CatalogEditCatalogAppVersionNotFound{}
}

/* CatalogEditCatalogAppVersionNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CatalogEditCatalogAppVersionNotFound struct {
	Payload *models.ProblemDetails
}

func (o *CatalogEditCatalogAppVersionNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/Catalog/edit-catalogapp-version][%d] catalogEditCatalogAppVersionNotFound  %+v", 404, o.Payload)
}
func (o *CatalogEditCatalogAppVersionNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CatalogEditCatalogAppVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogEditCatalogAppVersionInternalServerError creates a CatalogEditCatalogAppVersionInternalServerError with default headers values
func NewCatalogEditCatalogAppVersionInternalServerError() *CatalogEditCatalogAppVersionInternalServerError {
	return &CatalogEditCatalogAppVersionInternalServerError{}
}

/* CatalogEditCatalogAppVersionInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CatalogEditCatalogAppVersionInternalServerError struct {
}

func (o *CatalogEditCatalogAppVersionInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/Catalog/edit-catalogapp-version][%d] catalogEditCatalogAppVersionInternalServerError ", 500)
}

func (o *CatalogEditCatalogAppVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
