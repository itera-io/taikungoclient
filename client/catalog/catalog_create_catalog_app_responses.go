// Code generated by go-swagger; DO NOT EDIT.

package catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CatalogCreateCatalogAppReader is a Reader for the CatalogCreateCatalogApp structure.
type CatalogCreateCatalogAppReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CatalogCreateCatalogAppReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCatalogCreateCatalogAppOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCatalogCreateCatalogAppBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCatalogCreateCatalogAppUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCatalogCreateCatalogAppForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCatalogCreateCatalogAppNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCatalogCreateCatalogAppInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCatalogCreateCatalogAppOK creates a CatalogCreateCatalogAppOK with default headers values
func NewCatalogCreateCatalogAppOK() *CatalogCreateCatalogAppOK {
	return &CatalogCreateCatalogAppOK{}
}

/*
CatalogCreateCatalogAppOK describes a response with status code 200, with default header values.

Success
*/
type CatalogCreateCatalogAppOK struct {
	Payload interface{}
}

// IsSuccess returns true when this catalog create catalog app o k response has a 2xx status code
func (o *CatalogCreateCatalogAppOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this catalog create catalog app o k response has a 3xx status code
func (o *CatalogCreateCatalogAppOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog create catalog app o k response has a 4xx status code
func (o *CatalogCreateCatalogAppOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this catalog create catalog app o k response has a 5xx status code
func (o *CatalogCreateCatalogAppOK) IsServerError() bool {
	return false
}

// IsCode returns true when this catalog create catalog app o k response a status code equal to that given
func (o *CatalogCreateCatalogAppOK) IsCode(code int) bool {
	return code == 200
}

func (o *CatalogCreateCatalogAppOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Catalog/app-to-catalog][%d] catalogCreateCatalogAppOK  %+v", 200, o.Payload)
}

func (o *CatalogCreateCatalogAppOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Catalog/app-to-catalog][%d] catalogCreateCatalogAppOK  %+v", 200, o.Payload)
}

func (o *CatalogCreateCatalogAppOK) GetPayload() interface{} {
	return o.Payload
}

func (o *CatalogCreateCatalogAppOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCreateCatalogAppBadRequest creates a CatalogCreateCatalogAppBadRequest with default headers values
func NewCatalogCreateCatalogAppBadRequest() *CatalogCreateCatalogAppBadRequest {
	return &CatalogCreateCatalogAppBadRequest{}
}

/*
CatalogCreateCatalogAppBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CatalogCreateCatalogAppBadRequest struct {
	Payload []*CatalogCreateCatalogAppBadRequestBodyItems0
}

// IsSuccess returns true when this catalog create catalog app bad request response has a 2xx status code
func (o *CatalogCreateCatalogAppBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this catalog create catalog app bad request response has a 3xx status code
func (o *CatalogCreateCatalogAppBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog create catalog app bad request response has a 4xx status code
func (o *CatalogCreateCatalogAppBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this catalog create catalog app bad request response has a 5xx status code
func (o *CatalogCreateCatalogAppBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this catalog create catalog app bad request response a status code equal to that given
func (o *CatalogCreateCatalogAppBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CatalogCreateCatalogAppBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Catalog/app-to-catalog][%d] catalogCreateCatalogAppBadRequest  %+v", 400, o.Payload)
}

func (o *CatalogCreateCatalogAppBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Catalog/app-to-catalog][%d] catalogCreateCatalogAppBadRequest  %+v", 400, o.Payload)
}

func (o *CatalogCreateCatalogAppBadRequest) GetPayload() []*CatalogCreateCatalogAppBadRequestBodyItems0 {
	return o.Payload
}

func (o *CatalogCreateCatalogAppBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCreateCatalogAppUnauthorized creates a CatalogCreateCatalogAppUnauthorized with default headers values
func NewCatalogCreateCatalogAppUnauthorized() *CatalogCreateCatalogAppUnauthorized {
	return &CatalogCreateCatalogAppUnauthorized{}
}

/*
CatalogCreateCatalogAppUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CatalogCreateCatalogAppUnauthorized struct {
	Payload *CatalogCreateCatalogAppUnauthorizedBody
}

// IsSuccess returns true when this catalog create catalog app unauthorized response has a 2xx status code
func (o *CatalogCreateCatalogAppUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this catalog create catalog app unauthorized response has a 3xx status code
func (o *CatalogCreateCatalogAppUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog create catalog app unauthorized response has a 4xx status code
func (o *CatalogCreateCatalogAppUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this catalog create catalog app unauthorized response has a 5xx status code
func (o *CatalogCreateCatalogAppUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this catalog create catalog app unauthorized response a status code equal to that given
func (o *CatalogCreateCatalogAppUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CatalogCreateCatalogAppUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Catalog/app-to-catalog][%d] catalogCreateCatalogAppUnauthorized  %+v", 401, o.Payload)
}

func (o *CatalogCreateCatalogAppUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Catalog/app-to-catalog][%d] catalogCreateCatalogAppUnauthorized  %+v", 401, o.Payload)
}

func (o *CatalogCreateCatalogAppUnauthorized) GetPayload() *CatalogCreateCatalogAppUnauthorizedBody {
	return o.Payload
}

func (o *CatalogCreateCatalogAppUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CatalogCreateCatalogAppUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCreateCatalogAppForbidden creates a CatalogCreateCatalogAppForbidden with default headers values
func NewCatalogCreateCatalogAppForbidden() *CatalogCreateCatalogAppForbidden {
	return &CatalogCreateCatalogAppForbidden{}
}

/*
CatalogCreateCatalogAppForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CatalogCreateCatalogAppForbidden struct {
	Payload *CatalogCreateCatalogAppForbiddenBody
}

// IsSuccess returns true when this catalog create catalog app forbidden response has a 2xx status code
func (o *CatalogCreateCatalogAppForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this catalog create catalog app forbidden response has a 3xx status code
func (o *CatalogCreateCatalogAppForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog create catalog app forbidden response has a 4xx status code
func (o *CatalogCreateCatalogAppForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this catalog create catalog app forbidden response has a 5xx status code
func (o *CatalogCreateCatalogAppForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this catalog create catalog app forbidden response a status code equal to that given
func (o *CatalogCreateCatalogAppForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CatalogCreateCatalogAppForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Catalog/app-to-catalog][%d] catalogCreateCatalogAppForbidden  %+v", 403, o.Payload)
}

func (o *CatalogCreateCatalogAppForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Catalog/app-to-catalog][%d] catalogCreateCatalogAppForbidden  %+v", 403, o.Payload)
}

func (o *CatalogCreateCatalogAppForbidden) GetPayload() *CatalogCreateCatalogAppForbiddenBody {
	return o.Payload
}

func (o *CatalogCreateCatalogAppForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CatalogCreateCatalogAppForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCreateCatalogAppNotFound creates a CatalogCreateCatalogAppNotFound with default headers values
func NewCatalogCreateCatalogAppNotFound() *CatalogCreateCatalogAppNotFound {
	return &CatalogCreateCatalogAppNotFound{}
}

/*
CatalogCreateCatalogAppNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CatalogCreateCatalogAppNotFound struct {
	Payload *CatalogCreateCatalogAppNotFoundBody
}

// IsSuccess returns true when this catalog create catalog app not found response has a 2xx status code
func (o *CatalogCreateCatalogAppNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this catalog create catalog app not found response has a 3xx status code
func (o *CatalogCreateCatalogAppNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog create catalog app not found response has a 4xx status code
func (o *CatalogCreateCatalogAppNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this catalog create catalog app not found response has a 5xx status code
func (o *CatalogCreateCatalogAppNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this catalog create catalog app not found response a status code equal to that given
func (o *CatalogCreateCatalogAppNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CatalogCreateCatalogAppNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Catalog/app-to-catalog][%d] catalogCreateCatalogAppNotFound  %+v", 404, o.Payload)
}

func (o *CatalogCreateCatalogAppNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Catalog/app-to-catalog][%d] catalogCreateCatalogAppNotFound  %+v", 404, o.Payload)
}

func (o *CatalogCreateCatalogAppNotFound) GetPayload() *CatalogCreateCatalogAppNotFoundBody {
	return o.Payload
}

func (o *CatalogCreateCatalogAppNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CatalogCreateCatalogAppNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCreateCatalogAppInternalServerError creates a CatalogCreateCatalogAppInternalServerError with default headers values
func NewCatalogCreateCatalogAppInternalServerError() *CatalogCreateCatalogAppInternalServerError {
	return &CatalogCreateCatalogAppInternalServerError{}
}

/*
CatalogCreateCatalogAppInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CatalogCreateCatalogAppInternalServerError struct {
}

// IsSuccess returns true when this catalog create catalog app internal server error response has a 2xx status code
func (o *CatalogCreateCatalogAppInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this catalog create catalog app internal server error response has a 3xx status code
func (o *CatalogCreateCatalogAppInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog create catalog app internal server error response has a 4xx status code
func (o *CatalogCreateCatalogAppInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this catalog create catalog app internal server error response has a 5xx status code
func (o *CatalogCreateCatalogAppInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this catalog create catalog app internal server error response a status code equal to that given
func (o *CatalogCreateCatalogAppInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CatalogCreateCatalogAppInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Catalog/app-to-catalog][%d] catalogCreateCatalogAppInternalServerError ", 500)
}

func (o *CatalogCreateCatalogAppInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Catalog/app-to-catalog][%d] catalogCreateCatalogAppInternalServerError ", 500)
}

func (o *CatalogCreateCatalogAppInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
CatalogCreateCatalogAppBadRequestBodyItems0 catalog create catalog app bad request body items0
swagger:model CatalogCreateCatalogAppBadRequestBodyItems0
*/
type CatalogCreateCatalogAppBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this catalog create catalog app bad request body items0
func (o *CatalogCreateCatalogAppBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this catalog create catalog app bad request body items0 based on context it is used
func (o *CatalogCreateCatalogAppBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CatalogCreateCatalogAppBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogCreateCatalogAppBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res CatalogCreateCatalogAppBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CatalogCreateCatalogAppBody catalog create catalog app body
swagger:model CatalogCreateCatalogAppBody
*/
type CatalogCreateCatalogAppBody struct {

	// catalog Id
	CatalogID int32 `json:"catalogId,omitempty"`

	// package name
	PackageName string `json:"packageName,omitempty"`

	// parameters
	Parameters []*CatalogCreateCatalogAppParamsBodyParametersItems0 `json:"parameters"`

	// repo name
	RepoName string `json:"repoName,omitempty"`

	// version
	Version string `json:"version,omitempty"`
}

// Validate validates this catalog create catalog app body
func (o *CatalogCreateCatalogAppBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateParameters(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CatalogCreateCatalogAppBody) validateParameters(formats strfmt.Registry) error {
	if swag.IsZero(o.Parameters) { // not required
		return nil
	}

	for i := 0; i < len(o.Parameters); i++ {
		if swag.IsZero(o.Parameters[i]) { // not required
			continue
		}

		if o.Parameters[i] != nil {
			if err := o.Parameters[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "parameters" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "parameters" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this catalog create catalog app body based on the context it is used
func (o *CatalogCreateCatalogAppBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateParameters(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CatalogCreateCatalogAppBody) contextValidateParameters(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Parameters); i++ {

		if o.Parameters[i] != nil {
			if err := o.Parameters[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "parameters" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "parameters" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *CatalogCreateCatalogAppBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogCreateCatalogAppBody) UnmarshalBinary(b []byte) error {
	var res CatalogCreateCatalogAppBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CatalogCreateCatalogAppForbiddenBody catalog create catalog app forbidden body
swagger:model CatalogCreateCatalogAppForbiddenBody
*/
type CatalogCreateCatalogAppForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this catalog create catalog app forbidden body
func (o *CatalogCreateCatalogAppForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this catalog create catalog app forbidden body based on context it is used
func (o *CatalogCreateCatalogAppForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CatalogCreateCatalogAppForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogCreateCatalogAppForbiddenBody) UnmarshalBinary(b []byte) error {
	var res CatalogCreateCatalogAppForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CatalogCreateCatalogAppNotFoundBody catalog create catalog app not found body
swagger:model CatalogCreateCatalogAppNotFoundBody
*/
type CatalogCreateCatalogAppNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this catalog create catalog app not found body
func (o *CatalogCreateCatalogAppNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this catalog create catalog app not found body based on context it is used
func (o *CatalogCreateCatalogAppNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CatalogCreateCatalogAppNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogCreateCatalogAppNotFoundBody) UnmarshalBinary(b []byte) error {
	var res CatalogCreateCatalogAppNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CatalogCreateCatalogAppParamsBodyParametersItems0 catalog create catalog app params body parameters items0
swagger:model CatalogCreateCatalogAppParamsBodyParametersItems0
*/
type CatalogCreateCatalogAppParamsBodyParametersItems0 struct {

	// is changeable
	IsChangeable bool `json:"isChangeable"`

	// is readonly
	IsReadonly bool `json:"isReadonly"`

	// key
	Key string `json:"key,omitempty"`

	// value
	Value string `json:"value,omitempty"`
}

// Validate validates this catalog create catalog app params body parameters items0
func (o *CatalogCreateCatalogAppParamsBodyParametersItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this catalog create catalog app params body parameters items0 based on context it is used
func (o *CatalogCreateCatalogAppParamsBodyParametersItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CatalogCreateCatalogAppParamsBodyParametersItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogCreateCatalogAppParamsBodyParametersItems0) UnmarshalBinary(b []byte) error {
	var res CatalogCreateCatalogAppParamsBodyParametersItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CatalogCreateCatalogAppUnauthorizedBody catalog create catalog app unauthorized body
swagger:model CatalogCreateCatalogAppUnauthorizedBody
*/
type CatalogCreateCatalogAppUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this catalog create catalog app unauthorized body
func (o *CatalogCreateCatalogAppUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this catalog create catalog app unauthorized body based on context it is used
func (o *CatalogCreateCatalogAppUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CatalogCreateCatalogAppUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogCreateCatalogAppUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res CatalogCreateCatalogAppUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
