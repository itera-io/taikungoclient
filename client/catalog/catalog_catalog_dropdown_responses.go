// Code generated by go-swagger; DO NOT EDIT.

package catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CatalogCatalogDropdownReader is a Reader for the CatalogCatalogDropdown structure.
type CatalogCatalogDropdownReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CatalogCatalogDropdownReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCatalogCatalogDropdownOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCatalogCatalogDropdownBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCatalogCatalogDropdownUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCatalogCatalogDropdownForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCatalogCatalogDropdownNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCatalogCatalogDropdownInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCatalogCatalogDropdownOK creates a CatalogCatalogDropdownOK with default headers values
func NewCatalogCatalogDropdownOK() *CatalogCatalogDropdownOK {
	return &CatalogCatalogDropdownOK{}
}

/*
CatalogCatalogDropdownOK describes a response with status code 200, with default header values.

Success
*/
type CatalogCatalogDropdownOK struct {
	Payload []*CatalogCatalogDropdownOKBodyItems0
}

// IsSuccess returns true when this catalog catalog dropdown o k response has a 2xx status code
func (o *CatalogCatalogDropdownOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this catalog catalog dropdown o k response has a 3xx status code
func (o *CatalogCatalogDropdownOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog catalog dropdown o k response has a 4xx status code
func (o *CatalogCatalogDropdownOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this catalog catalog dropdown o k response has a 5xx status code
func (o *CatalogCatalogDropdownOK) IsServerError() bool {
	return false
}

// IsCode returns true when this catalog catalog dropdown o k response a status code equal to that given
func (o *CatalogCatalogDropdownOK) IsCode(code int) bool {
	return code == 200
}

func (o *CatalogCatalogDropdownOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/dropdown-list][%d] catalogCatalogDropdownOK  %+v", 200, o.Payload)
}

func (o *CatalogCatalogDropdownOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/dropdown-list][%d] catalogCatalogDropdownOK  %+v", 200, o.Payload)
}

func (o *CatalogCatalogDropdownOK) GetPayload() []*CatalogCatalogDropdownOKBodyItems0 {
	return o.Payload
}

func (o *CatalogCatalogDropdownOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCatalogDropdownBadRequest creates a CatalogCatalogDropdownBadRequest with default headers values
func NewCatalogCatalogDropdownBadRequest() *CatalogCatalogDropdownBadRequest {
	return &CatalogCatalogDropdownBadRequest{}
}

/*
CatalogCatalogDropdownBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CatalogCatalogDropdownBadRequest struct {
	Payload []*CatalogCatalogDropdownBadRequestBodyItems0
}

// IsSuccess returns true when this catalog catalog dropdown bad request response has a 2xx status code
func (o *CatalogCatalogDropdownBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this catalog catalog dropdown bad request response has a 3xx status code
func (o *CatalogCatalogDropdownBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog catalog dropdown bad request response has a 4xx status code
func (o *CatalogCatalogDropdownBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this catalog catalog dropdown bad request response has a 5xx status code
func (o *CatalogCatalogDropdownBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this catalog catalog dropdown bad request response a status code equal to that given
func (o *CatalogCatalogDropdownBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CatalogCatalogDropdownBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/dropdown-list][%d] catalogCatalogDropdownBadRequest  %+v", 400, o.Payload)
}

func (o *CatalogCatalogDropdownBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/dropdown-list][%d] catalogCatalogDropdownBadRequest  %+v", 400, o.Payload)
}

func (o *CatalogCatalogDropdownBadRequest) GetPayload() []*CatalogCatalogDropdownBadRequestBodyItems0 {
	return o.Payload
}

func (o *CatalogCatalogDropdownBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCatalogDropdownUnauthorized creates a CatalogCatalogDropdownUnauthorized with default headers values
func NewCatalogCatalogDropdownUnauthorized() *CatalogCatalogDropdownUnauthorized {
	return &CatalogCatalogDropdownUnauthorized{}
}

/*
CatalogCatalogDropdownUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CatalogCatalogDropdownUnauthorized struct {
	Payload *CatalogCatalogDropdownUnauthorizedBody
}

// IsSuccess returns true when this catalog catalog dropdown unauthorized response has a 2xx status code
func (o *CatalogCatalogDropdownUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this catalog catalog dropdown unauthorized response has a 3xx status code
func (o *CatalogCatalogDropdownUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog catalog dropdown unauthorized response has a 4xx status code
func (o *CatalogCatalogDropdownUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this catalog catalog dropdown unauthorized response has a 5xx status code
func (o *CatalogCatalogDropdownUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this catalog catalog dropdown unauthorized response a status code equal to that given
func (o *CatalogCatalogDropdownUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CatalogCatalogDropdownUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/dropdown-list][%d] catalogCatalogDropdownUnauthorized  %+v", 401, o.Payload)
}

func (o *CatalogCatalogDropdownUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/dropdown-list][%d] catalogCatalogDropdownUnauthorized  %+v", 401, o.Payload)
}

func (o *CatalogCatalogDropdownUnauthorized) GetPayload() *CatalogCatalogDropdownUnauthorizedBody {
	return o.Payload
}

func (o *CatalogCatalogDropdownUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CatalogCatalogDropdownUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCatalogDropdownForbidden creates a CatalogCatalogDropdownForbidden with default headers values
func NewCatalogCatalogDropdownForbidden() *CatalogCatalogDropdownForbidden {
	return &CatalogCatalogDropdownForbidden{}
}

/*
CatalogCatalogDropdownForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CatalogCatalogDropdownForbidden struct {
	Payload *CatalogCatalogDropdownForbiddenBody
}

// IsSuccess returns true when this catalog catalog dropdown forbidden response has a 2xx status code
func (o *CatalogCatalogDropdownForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this catalog catalog dropdown forbidden response has a 3xx status code
func (o *CatalogCatalogDropdownForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog catalog dropdown forbidden response has a 4xx status code
func (o *CatalogCatalogDropdownForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this catalog catalog dropdown forbidden response has a 5xx status code
func (o *CatalogCatalogDropdownForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this catalog catalog dropdown forbidden response a status code equal to that given
func (o *CatalogCatalogDropdownForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CatalogCatalogDropdownForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/dropdown-list][%d] catalogCatalogDropdownForbidden  %+v", 403, o.Payload)
}

func (o *CatalogCatalogDropdownForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/dropdown-list][%d] catalogCatalogDropdownForbidden  %+v", 403, o.Payload)
}

func (o *CatalogCatalogDropdownForbidden) GetPayload() *CatalogCatalogDropdownForbiddenBody {
	return o.Payload
}

func (o *CatalogCatalogDropdownForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CatalogCatalogDropdownForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCatalogDropdownNotFound creates a CatalogCatalogDropdownNotFound with default headers values
func NewCatalogCatalogDropdownNotFound() *CatalogCatalogDropdownNotFound {
	return &CatalogCatalogDropdownNotFound{}
}

/*
CatalogCatalogDropdownNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CatalogCatalogDropdownNotFound struct {
	Payload *CatalogCatalogDropdownNotFoundBody
}

// IsSuccess returns true when this catalog catalog dropdown not found response has a 2xx status code
func (o *CatalogCatalogDropdownNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this catalog catalog dropdown not found response has a 3xx status code
func (o *CatalogCatalogDropdownNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog catalog dropdown not found response has a 4xx status code
func (o *CatalogCatalogDropdownNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this catalog catalog dropdown not found response has a 5xx status code
func (o *CatalogCatalogDropdownNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this catalog catalog dropdown not found response a status code equal to that given
func (o *CatalogCatalogDropdownNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CatalogCatalogDropdownNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/dropdown-list][%d] catalogCatalogDropdownNotFound  %+v", 404, o.Payload)
}

func (o *CatalogCatalogDropdownNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/dropdown-list][%d] catalogCatalogDropdownNotFound  %+v", 404, o.Payload)
}

func (o *CatalogCatalogDropdownNotFound) GetPayload() *CatalogCatalogDropdownNotFoundBody {
	return o.Payload
}

func (o *CatalogCatalogDropdownNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CatalogCatalogDropdownNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCatalogDropdownInternalServerError creates a CatalogCatalogDropdownInternalServerError with default headers values
func NewCatalogCatalogDropdownInternalServerError() *CatalogCatalogDropdownInternalServerError {
	return &CatalogCatalogDropdownInternalServerError{}
}

/*
CatalogCatalogDropdownInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CatalogCatalogDropdownInternalServerError struct {
}

// IsSuccess returns true when this catalog catalog dropdown internal server error response has a 2xx status code
func (o *CatalogCatalogDropdownInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this catalog catalog dropdown internal server error response has a 3xx status code
func (o *CatalogCatalogDropdownInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this catalog catalog dropdown internal server error response has a 4xx status code
func (o *CatalogCatalogDropdownInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this catalog catalog dropdown internal server error response has a 5xx status code
func (o *CatalogCatalogDropdownInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this catalog catalog dropdown internal server error response a status code equal to that given
func (o *CatalogCatalogDropdownInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CatalogCatalogDropdownInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/dropdown-list][%d] catalogCatalogDropdownInternalServerError ", 500)
}

func (o *CatalogCatalogDropdownInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Catalog/dropdown-list][%d] catalogCatalogDropdownInternalServerError ", 500)
}

func (o *CatalogCatalogDropdownInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
CatalogCatalogDropdownBadRequestBodyItems0 catalog catalog dropdown bad request body items0
swagger:model CatalogCatalogDropdownBadRequestBodyItems0
*/
type CatalogCatalogDropdownBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this catalog catalog dropdown bad request body items0
func (o *CatalogCatalogDropdownBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this catalog catalog dropdown bad request body items0 based on context it is used
func (o *CatalogCatalogDropdownBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CatalogCatalogDropdownBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogCatalogDropdownBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res CatalogCatalogDropdownBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CatalogCatalogDropdownForbiddenBody catalog catalog dropdown forbidden body
swagger:model CatalogCatalogDropdownForbiddenBody
*/
type CatalogCatalogDropdownForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this catalog catalog dropdown forbidden body
func (o *CatalogCatalogDropdownForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this catalog catalog dropdown forbidden body based on context it is used
func (o *CatalogCatalogDropdownForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CatalogCatalogDropdownForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogCatalogDropdownForbiddenBody) UnmarshalBinary(b []byte) error {
	var res CatalogCatalogDropdownForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CatalogCatalogDropdownNotFoundBody catalog catalog dropdown not found body
swagger:model CatalogCatalogDropdownNotFoundBody
*/
type CatalogCatalogDropdownNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this catalog catalog dropdown not found body
func (o *CatalogCatalogDropdownNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this catalog catalog dropdown not found body based on context it is used
func (o *CatalogCatalogDropdownNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CatalogCatalogDropdownNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogCatalogDropdownNotFoundBody) UnmarshalBinary(b []byte) error {
	var res CatalogCatalogDropdownNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CatalogCatalogDropdownOKBodyItems0 catalog catalog dropdown o k body items0
swagger:model CatalogCatalogDropdownOKBodyItems0
*/
type CatalogCatalogDropdownOKBodyItems0 struct {

	// id
	ID int32 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// package ids
	PackageIds []string `json:"packageIds"`
}

// Validate validates this catalog catalog dropdown o k body items0
func (o *CatalogCatalogDropdownOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this catalog catalog dropdown o k body items0 based on context it is used
func (o *CatalogCatalogDropdownOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CatalogCatalogDropdownOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogCatalogDropdownOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res CatalogCatalogDropdownOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CatalogCatalogDropdownUnauthorizedBody catalog catalog dropdown unauthorized body
swagger:model CatalogCatalogDropdownUnauthorizedBody
*/
type CatalogCatalogDropdownUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this catalog catalog dropdown unauthorized body
func (o *CatalogCatalogDropdownUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this catalog catalog dropdown unauthorized body based on context it is used
func (o *CatalogCatalogDropdownUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CatalogCatalogDropdownUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogCatalogDropdownUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res CatalogCatalogDropdownUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
