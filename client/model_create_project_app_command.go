/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the CreateProjectAppCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProjectAppCommand{}

// CreateProjectAppCommand struct for CreateProjectAppCommand
type CreateProjectAppCommand struct {
	Name *string `json:"name,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	ProjectId *int32 `json:"projectId,omitempty"`
	CatalogAppId *int32 `json:"catalogAppId,omitempty"`
	ExtraValues *string `json:"extraValues,omitempty"`
	AutoSync *bool `json:"autoSync,omitempty"`
	Parameters []ProjectAppParamsDto `json:"parameters,omitempty"`
}

// NewCreateProjectAppCommand instantiates a new CreateProjectAppCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProjectAppCommand() *CreateProjectAppCommand {
	this := CreateProjectAppCommand{}
	return &this
}

// NewCreateProjectAppCommandWithDefaults instantiates a new CreateProjectAppCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProjectAppCommandWithDefaults() *CreateProjectAppCommand {
	this := CreateProjectAppCommand{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateProjectAppCommand) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectAppCommand) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateProjectAppCommand) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateProjectAppCommand) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *CreateProjectAppCommand) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectAppCommand) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *CreateProjectAppCommand) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *CreateProjectAppCommand) SetNamespace(v string) {
	o.Namespace = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *CreateProjectAppCommand) GetProjectId() int32 {
	if o == nil || IsNil(o.ProjectId) {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectAppCommand) GetProjectIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *CreateProjectAppCommand) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *CreateProjectAppCommand) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetCatalogAppId returns the CatalogAppId field value if set, zero value otherwise.
func (o *CreateProjectAppCommand) GetCatalogAppId() int32 {
	if o == nil || IsNil(o.CatalogAppId) {
		var ret int32
		return ret
	}
	return *o.CatalogAppId
}

// GetCatalogAppIdOk returns a tuple with the CatalogAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectAppCommand) GetCatalogAppIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CatalogAppId) {
		return nil, false
	}
	return o.CatalogAppId, true
}

// HasCatalogAppId returns a boolean if a field has been set.
func (o *CreateProjectAppCommand) HasCatalogAppId() bool {
	if o != nil && !IsNil(o.CatalogAppId) {
		return true
	}

	return false
}

// SetCatalogAppId gets a reference to the given int32 and assigns it to the CatalogAppId field.
func (o *CreateProjectAppCommand) SetCatalogAppId(v int32) {
	o.CatalogAppId = &v
}

// GetExtraValues returns the ExtraValues field value if set, zero value otherwise.
func (o *CreateProjectAppCommand) GetExtraValues() string {
	if o == nil || IsNil(o.ExtraValues) {
		var ret string
		return ret
	}
	return *o.ExtraValues
}

// GetExtraValuesOk returns a tuple with the ExtraValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectAppCommand) GetExtraValuesOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraValues) {
		return nil, false
	}
	return o.ExtraValues, true
}

// HasExtraValues returns a boolean if a field has been set.
func (o *CreateProjectAppCommand) HasExtraValues() bool {
	if o != nil && !IsNil(o.ExtraValues) {
		return true
	}

	return false
}

// SetExtraValues gets a reference to the given string and assigns it to the ExtraValues field.
func (o *CreateProjectAppCommand) SetExtraValues(v string) {
	o.ExtraValues = &v
}

// GetAutoSync returns the AutoSync field value if set, zero value otherwise.
func (o *CreateProjectAppCommand) GetAutoSync() bool {
	if o == nil || IsNil(o.AutoSync) {
		var ret bool
		return ret
	}
	return *o.AutoSync
}

// GetAutoSyncOk returns a tuple with the AutoSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectAppCommand) GetAutoSyncOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoSync) {
		return nil, false
	}
	return o.AutoSync, true
}

// HasAutoSync returns a boolean if a field has been set.
func (o *CreateProjectAppCommand) HasAutoSync() bool {
	if o != nil && !IsNil(o.AutoSync) {
		return true
	}

	return false
}

// SetAutoSync gets a reference to the given bool and assigns it to the AutoSync field.
func (o *CreateProjectAppCommand) SetAutoSync(v bool) {
	o.AutoSync = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *CreateProjectAppCommand) GetParameters() []ProjectAppParamsDto {
	if o == nil || IsNil(o.Parameters) {
		var ret []ProjectAppParamsDto
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectAppCommand) GetParametersOk() ([]ProjectAppParamsDto, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *CreateProjectAppCommand) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []ProjectAppParamsDto and assigns it to the Parameters field.
func (o *CreateProjectAppCommand) SetParameters(v []ProjectAppParamsDto) {
	o.Parameters = v
}

func (o CreateProjectAppCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProjectAppCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.CatalogAppId) {
		toSerialize["catalogAppId"] = o.CatalogAppId
	}
	if !IsNil(o.ExtraValues) {
		toSerialize["extraValues"] = o.ExtraValues
	}
	if !IsNil(o.AutoSync) {
		toSerialize["autoSync"] = o.AutoSync
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	return toSerialize, nil
}

type NullableCreateProjectAppCommand struct {
	value *CreateProjectAppCommand
	isSet bool
}

func (v NullableCreateProjectAppCommand) Get() *CreateProjectAppCommand {
	return v.value
}

func (v *NullableCreateProjectAppCommand) Set(val *CreateProjectAppCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProjectAppCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProjectAppCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProjectAppCommand(val *CreateProjectAppCommand) *NullableCreateProjectAppCommand {
	return &NullableCreateProjectAppCommand{value: val, isSet: true}
}

func (v NullableCreateProjectAppCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProjectAppCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


