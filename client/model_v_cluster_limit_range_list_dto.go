/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the VClusterLimitRangeListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VClusterLimitRangeListDto{}

// VClusterLimitRangeListDto struct for VClusterLimitRangeListDto
type VClusterLimitRangeListDto struct {
	ResourceType NullableString `json:"resourceType,omitempty"`
	ResourceUnit NullableString `json:"resourceUnit,omitempty"`
	MaxLimit *float64 `json:"maxLimit,omitempty"`
	MinRequest *float64 `json:"minRequest,omitempty"`
	DefaultLimit *float64 `json:"defaultLimit,omitempty"`
	DefaultRequest *float64 `json:"defaultRequest,omitempty"`
}

// NewVClusterLimitRangeListDto instantiates a new VClusterLimitRangeListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVClusterLimitRangeListDto() *VClusterLimitRangeListDto {
	this := VClusterLimitRangeListDto{}
	return &this
}

// NewVClusterLimitRangeListDtoWithDefaults instantiates a new VClusterLimitRangeListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVClusterLimitRangeListDtoWithDefaults() *VClusterLimitRangeListDto {
	this := VClusterLimitRangeListDto{}
	return &this
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VClusterLimitRangeListDto) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceType.Get()
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VClusterLimitRangeListDto) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceType.Get(), o.ResourceType.IsSet()
}

// HasResourceType returns a boolean if a field has been set.
func (o *VClusterLimitRangeListDto) HasResourceType() bool {
	if o != nil && o.ResourceType.IsSet() {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given NullableString and assigns it to the ResourceType field.
func (o *VClusterLimitRangeListDto) SetResourceType(v string) {
	o.ResourceType.Set(&v)
}
// SetResourceTypeNil sets the value for ResourceType to be an explicit nil
func (o *VClusterLimitRangeListDto) SetResourceTypeNil() {
	o.ResourceType.Set(nil)
}

// UnsetResourceType ensures that no value is present for ResourceType, not even an explicit nil
func (o *VClusterLimitRangeListDto) UnsetResourceType() {
	o.ResourceType.Unset()
}

// GetResourceUnit returns the ResourceUnit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VClusterLimitRangeListDto) GetResourceUnit() string {
	if o == nil || IsNil(o.ResourceUnit.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceUnit.Get()
}

// GetResourceUnitOk returns a tuple with the ResourceUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VClusterLimitRangeListDto) GetResourceUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceUnit.Get(), o.ResourceUnit.IsSet()
}

// HasResourceUnit returns a boolean if a field has been set.
func (o *VClusterLimitRangeListDto) HasResourceUnit() bool {
	if o != nil && o.ResourceUnit.IsSet() {
		return true
	}

	return false
}

// SetResourceUnit gets a reference to the given NullableString and assigns it to the ResourceUnit field.
func (o *VClusterLimitRangeListDto) SetResourceUnit(v string) {
	o.ResourceUnit.Set(&v)
}
// SetResourceUnitNil sets the value for ResourceUnit to be an explicit nil
func (o *VClusterLimitRangeListDto) SetResourceUnitNil() {
	o.ResourceUnit.Set(nil)
}

// UnsetResourceUnit ensures that no value is present for ResourceUnit, not even an explicit nil
func (o *VClusterLimitRangeListDto) UnsetResourceUnit() {
	o.ResourceUnit.Unset()
}

// GetMaxLimit returns the MaxLimit field value if set, zero value otherwise.
func (o *VClusterLimitRangeListDto) GetMaxLimit() float64 {
	if o == nil || IsNil(o.MaxLimit) {
		var ret float64
		return ret
	}
	return *o.MaxLimit
}

// GetMaxLimitOk returns a tuple with the MaxLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterLimitRangeListDto) GetMaxLimitOk() (*float64, bool) {
	if o == nil || IsNil(o.MaxLimit) {
		return nil, false
	}
	return o.MaxLimit, true
}

// HasMaxLimit returns a boolean if a field has been set.
func (o *VClusterLimitRangeListDto) HasMaxLimit() bool {
	if o != nil && !IsNil(o.MaxLimit) {
		return true
	}

	return false
}

// SetMaxLimit gets a reference to the given float64 and assigns it to the MaxLimit field.
func (o *VClusterLimitRangeListDto) SetMaxLimit(v float64) {
	o.MaxLimit = &v
}

// GetMinRequest returns the MinRequest field value if set, zero value otherwise.
func (o *VClusterLimitRangeListDto) GetMinRequest() float64 {
	if o == nil || IsNil(o.MinRequest) {
		var ret float64
		return ret
	}
	return *o.MinRequest
}

// GetMinRequestOk returns a tuple with the MinRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterLimitRangeListDto) GetMinRequestOk() (*float64, bool) {
	if o == nil || IsNil(o.MinRequest) {
		return nil, false
	}
	return o.MinRequest, true
}

// HasMinRequest returns a boolean if a field has been set.
func (o *VClusterLimitRangeListDto) HasMinRequest() bool {
	if o != nil && !IsNil(o.MinRequest) {
		return true
	}

	return false
}

// SetMinRequest gets a reference to the given float64 and assigns it to the MinRequest field.
func (o *VClusterLimitRangeListDto) SetMinRequest(v float64) {
	o.MinRequest = &v
}

// GetDefaultLimit returns the DefaultLimit field value if set, zero value otherwise.
func (o *VClusterLimitRangeListDto) GetDefaultLimit() float64 {
	if o == nil || IsNil(o.DefaultLimit) {
		var ret float64
		return ret
	}
	return *o.DefaultLimit
}

// GetDefaultLimitOk returns a tuple with the DefaultLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterLimitRangeListDto) GetDefaultLimitOk() (*float64, bool) {
	if o == nil || IsNil(o.DefaultLimit) {
		return nil, false
	}
	return o.DefaultLimit, true
}

// HasDefaultLimit returns a boolean if a field has been set.
func (o *VClusterLimitRangeListDto) HasDefaultLimit() bool {
	if o != nil && !IsNil(o.DefaultLimit) {
		return true
	}

	return false
}

// SetDefaultLimit gets a reference to the given float64 and assigns it to the DefaultLimit field.
func (o *VClusterLimitRangeListDto) SetDefaultLimit(v float64) {
	o.DefaultLimit = &v
}

// GetDefaultRequest returns the DefaultRequest field value if set, zero value otherwise.
func (o *VClusterLimitRangeListDto) GetDefaultRequest() float64 {
	if o == nil || IsNil(o.DefaultRequest) {
		var ret float64
		return ret
	}
	return *o.DefaultRequest
}

// GetDefaultRequestOk returns a tuple with the DefaultRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VClusterLimitRangeListDto) GetDefaultRequestOk() (*float64, bool) {
	if o == nil || IsNil(o.DefaultRequest) {
		return nil, false
	}
	return o.DefaultRequest, true
}

// HasDefaultRequest returns a boolean if a field has been set.
func (o *VClusterLimitRangeListDto) HasDefaultRequest() bool {
	if o != nil && !IsNil(o.DefaultRequest) {
		return true
	}

	return false
}

// SetDefaultRequest gets a reference to the given float64 and assigns it to the DefaultRequest field.
func (o *VClusterLimitRangeListDto) SetDefaultRequest(v float64) {
	o.DefaultRequest = &v
}

func (o VClusterLimitRangeListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VClusterLimitRangeListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ResourceType.IsSet() {
		toSerialize["resourceType"] = o.ResourceType.Get()
	}
	if o.ResourceUnit.IsSet() {
		toSerialize["resourceUnit"] = o.ResourceUnit.Get()
	}
	if !IsNil(o.MaxLimit) {
		toSerialize["maxLimit"] = o.MaxLimit
	}
	if !IsNil(o.MinRequest) {
		toSerialize["minRequest"] = o.MinRequest
	}
	if !IsNil(o.DefaultLimit) {
		toSerialize["defaultLimit"] = o.DefaultLimit
	}
	if !IsNil(o.DefaultRequest) {
		toSerialize["defaultRequest"] = o.DefaultRequest
	}
	return toSerialize, nil
}

type NullableVClusterLimitRangeListDto struct {
	value *VClusterLimitRangeListDto
	isSet bool
}

func (v NullableVClusterLimitRangeListDto) Get() *VClusterLimitRangeListDto {
	return v.value
}

func (v *NullableVClusterLimitRangeListDto) Set(val *VClusterLimitRangeListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableVClusterLimitRangeListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableVClusterLimitRangeListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVClusterLimitRangeListDto(val *VClusterLimitRangeListDto) *NullableVClusterLimitRangeListDto {
	return &NullableVClusterLimitRangeListDto{value: val, isSet: true}
}

func (v NullableVClusterLimitRangeListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVClusterLimitRangeListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


