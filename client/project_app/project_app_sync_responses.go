// Code generated by go-swagger; DO NOT EDIT.

package project_app

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProjectAppSyncReader is a Reader for the ProjectAppSync structure.
type ProjectAppSyncReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectAppSyncReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectAppSyncOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProjectAppSyncBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProjectAppSyncUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProjectAppSyncForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectAppSyncNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProjectAppSyncInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProjectAppSyncOK creates a ProjectAppSyncOK with default headers values
func NewProjectAppSyncOK() *ProjectAppSyncOK {
	return &ProjectAppSyncOK{}
}

/*
ProjectAppSyncOK describes a response with status code 200, with default header values.

Success
*/
type ProjectAppSyncOK struct {
	Payload interface{}
}

// IsSuccess returns true when this project app sync o k response has a 2xx status code
func (o *ProjectAppSyncOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this project app sync o k response has a 3xx status code
func (o *ProjectAppSyncOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project app sync o k response has a 4xx status code
func (o *ProjectAppSyncOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this project app sync o k response has a 5xx status code
func (o *ProjectAppSyncOK) IsServerError() bool {
	return false
}

// IsCode returns true when this project app sync o k response a status code equal to that given
func (o *ProjectAppSyncOK) IsCode(code int) bool {
	return code == 200
}

func (o *ProjectAppSyncOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectApp/sync][%d] projectAppSyncOK  %+v", 200, o.Payload)
}

func (o *ProjectAppSyncOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectApp/sync][%d] projectAppSyncOK  %+v", 200, o.Payload)
}

func (o *ProjectAppSyncOK) GetPayload() interface{} {
	return o.Payload
}

func (o *ProjectAppSyncOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectAppSyncBadRequest creates a ProjectAppSyncBadRequest with default headers values
func NewProjectAppSyncBadRequest() *ProjectAppSyncBadRequest {
	return &ProjectAppSyncBadRequest{}
}

/*
ProjectAppSyncBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProjectAppSyncBadRequest struct {
	Payload []*ProjectAppSyncBadRequestBodyItems0
}

// IsSuccess returns true when this project app sync bad request response has a 2xx status code
func (o *ProjectAppSyncBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project app sync bad request response has a 3xx status code
func (o *ProjectAppSyncBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project app sync bad request response has a 4xx status code
func (o *ProjectAppSyncBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this project app sync bad request response has a 5xx status code
func (o *ProjectAppSyncBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this project app sync bad request response a status code equal to that given
func (o *ProjectAppSyncBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ProjectAppSyncBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectApp/sync][%d] projectAppSyncBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectAppSyncBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectApp/sync][%d] projectAppSyncBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectAppSyncBadRequest) GetPayload() []*ProjectAppSyncBadRequestBodyItems0 {
	return o.Payload
}

func (o *ProjectAppSyncBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectAppSyncUnauthorized creates a ProjectAppSyncUnauthorized with default headers values
func NewProjectAppSyncUnauthorized() *ProjectAppSyncUnauthorized {
	return &ProjectAppSyncUnauthorized{}
}

/*
ProjectAppSyncUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProjectAppSyncUnauthorized struct {
	Payload *ProjectAppSyncUnauthorizedBody
}

// IsSuccess returns true when this project app sync unauthorized response has a 2xx status code
func (o *ProjectAppSyncUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project app sync unauthorized response has a 3xx status code
func (o *ProjectAppSyncUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project app sync unauthorized response has a 4xx status code
func (o *ProjectAppSyncUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this project app sync unauthorized response has a 5xx status code
func (o *ProjectAppSyncUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this project app sync unauthorized response a status code equal to that given
func (o *ProjectAppSyncUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ProjectAppSyncUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectApp/sync][%d] projectAppSyncUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectAppSyncUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectApp/sync][%d] projectAppSyncUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectAppSyncUnauthorized) GetPayload() *ProjectAppSyncUnauthorizedBody {
	return o.Payload
}

func (o *ProjectAppSyncUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ProjectAppSyncUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectAppSyncForbidden creates a ProjectAppSyncForbidden with default headers values
func NewProjectAppSyncForbidden() *ProjectAppSyncForbidden {
	return &ProjectAppSyncForbidden{}
}

/*
ProjectAppSyncForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ProjectAppSyncForbidden struct {
	Payload *ProjectAppSyncForbiddenBody
}

// IsSuccess returns true when this project app sync forbidden response has a 2xx status code
func (o *ProjectAppSyncForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project app sync forbidden response has a 3xx status code
func (o *ProjectAppSyncForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project app sync forbidden response has a 4xx status code
func (o *ProjectAppSyncForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this project app sync forbidden response has a 5xx status code
func (o *ProjectAppSyncForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this project app sync forbidden response a status code equal to that given
func (o *ProjectAppSyncForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ProjectAppSyncForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectApp/sync][%d] projectAppSyncForbidden  %+v", 403, o.Payload)
}

func (o *ProjectAppSyncForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectApp/sync][%d] projectAppSyncForbidden  %+v", 403, o.Payload)
}

func (o *ProjectAppSyncForbidden) GetPayload() *ProjectAppSyncForbiddenBody {
	return o.Payload
}

func (o *ProjectAppSyncForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ProjectAppSyncForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectAppSyncNotFound creates a ProjectAppSyncNotFound with default headers values
func NewProjectAppSyncNotFound() *ProjectAppSyncNotFound {
	return &ProjectAppSyncNotFound{}
}

/*
ProjectAppSyncNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProjectAppSyncNotFound struct {
	Payload *ProjectAppSyncNotFoundBody
}

// IsSuccess returns true when this project app sync not found response has a 2xx status code
func (o *ProjectAppSyncNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project app sync not found response has a 3xx status code
func (o *ProjectAppSyncNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project app sync not found response has a 4xx status code
func (o *ProjectAppSyncNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this project app sync not found response has a 5xx status code
func (o *ProjectAppSyncNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this project app sync not found response a status code equal to that given
func (o *ProjectAppSyncNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ProjectAppSyncNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectApp/sync][%d] projectAppSyncNotFound  %+v", 404, o.Payload)
}

func (o *ProjectAppSyncNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectApp/sync][%d] projectAppSyncNotFound  %+v", 404, o.Payload)
}

func (o *ProjectAppSyncNotFound) GetPayload() *ProjectAppSyncNotFoundBody {
	return o.Payload
}

func (o *ProjectAppSyncNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ProjectAppSyncNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectAppSyncInternalServerError creates a ProjectAppSyncInternalServerError with default headers values
func NewProjectAppSyncInternalServerError() *ProjectAppSyncInternalServerError {
	return &ProjectAppSyncInternalServerError{}
}

/*
ProjectAppSyncInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ProjectAppSyncInternalServerError struct {
}

// IsSuccess returns true when this project app sync internal server error response has a 2xx status code
func (o *ProjectAppSyncInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project app sync internal server error response has a 3xx status code
func (o *ProjectAppSyncInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project app sync internal server error response has a 4xx status code
func (o *ProjectAppSyncInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this project app sync internal server error response has a 5xx status code
func (o *ProjectAppSyncInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this project app sync internal server error response a status code equal to that given
func (o *ProjectAppSyncInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ProjectAppSyncInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectApp/sync][%d] projectAppSyncInternalServerError ", 500)
}

func (o *ProjectAppSyncInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/ProjectApp/sync][%d] projectAppSyncInternalServerError ", 500)
}

func (o *ProjectAppSyncInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
ProjectAppSyncBadRequestBodyItems0 project app sync bad request body items0
swagger:model ProjectAppSyncBadRequestBodyItems0
*/
type ProjectAppSyncBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this project app sync bad request body items0
func (o *ProjectAppSyncBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project app sync bad request body items0 based on context it is used
func (o *ProjectAppSyncBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectAppSyncBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectAppSyncBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res ProjectAppSyncBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectAppSyncBody project app sync body
swagger:model ProjectAppSyncBody
*/
type ProjectAppSyncBody struct {

	// project app Id
	ProjectAppID int32 `json:"projectAppId,omitempty"`
}

// Validate validates this project app sync body
func (o *ProjectAppSyncBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project app sync body based on context it is used
func (o *ProjectAppSyncBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectAppSyncBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectAppSyncBody) UnmarshalBinary(b []byte) error {
	var res ProjectAppSyncBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectAppSyncForbiddenBody project app sync forbidden body
swagger:model ProjectAppSyncForbiddenBody
*/
type ProjectAppSyncForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this project app sync forbidden body
func (o *ProjectAppSyncForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project app sync forbidden body based on context it is used
func (o *ProjectAppSyncForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectAppSyncForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectAppSyncForbiddenBody) UnmarshalBinary(b []byte) error {
	var res ProjectAppSyncForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectAppSyncNotFoundBody project app sync not found body
swagger:model ProjectAppSyncNotFoundBody
*/
type ProjectAppSyncNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this project app sync not found body
func (o *ProjectAppSyncNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project app sync not found body based on context it is used
func (o *ProjectAppSyncNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectAppSyncNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectAppSyncNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ProjectAppSyncNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectAppSyncUnauthorizedBody project app sync unauthorized body
swagger:model ProjectAppSyncUnauthorizedBody
*/
type ProjectAppSyncUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this project app sync unauthorized body
func (o *ProjectAppSyncUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project app sync unauthorized body based on context it is used
func (o *ProjectAppSyncUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectAppSyncUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectAppSyncUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res ProjectAppSyncUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
