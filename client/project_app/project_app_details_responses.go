// Code generated by go-swagger; DO NOT EDIT.

package project_app

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProjectAppDetailsReader is a Reader for the ProjectAppDetails structure.
type ProjectAppDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectAppDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectAppDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProjectAppDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProjectAppDetailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProjectAppDetailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectAppDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProjectAppDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProjectAppDetailsOK creates a ProjectAppDetailsOK with default headers values
func NewProjectAppDetailsOK() *ProjectAppDetailsOK {
	return &ProjectAppDetailsOK{}
}

/*
ProjectAppDetailsOK describes a response with status code 200, with default header values.

Success
*/
type ProjectAppDetailsOK struct {
	Payload *ProjectAppDetailsOKBody
}

// IsSuccess returns true when this project app details o k response has a 2xx status code
func (o *ProjectAppDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this project app details o k response has a 3xx status code
func (o *ProjectAppDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project app details o k response has a 4xx status code
func (o *ProjectAppDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this project app details o k response has a 5xx status code
func (o *ProjectAppDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this project app details o k response a status code equal to that given
func (o *ProjectAppDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ProjectAppDetailsOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectApp/{id}][%d] projectAppDetailsOK  %+v", 200, o.Payload)
}

func (o *ProjectAppDetailsOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectApp/{id}][%d] projectAppDetailsOK  %+v", 200, o.Payload)
}

func (o *ProjectAppDetailsOK) GetPayload() *ProjectAppDetailsOKBody {
	return o.Payload
}

func (o *ProjectAppDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ProjectAppDetailsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectAppDetailsBadRequest creates a ProjectAppDetailsBadRequest with default headers values
func NewProjectAppDetailsBadRequest() *ProjectAppDetailsBadRequest {
	return &ProjectAppDetailsBadRequest{}
}

/*
ProjectAppDetailsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProjectAppDetailsBadRequest struct {
	Payload []*ProjectAppDetailsBadRequestBodyItems0
}

// IsSuccess returns true when this project app details bad request response has a 2xx status code
func (o *ProjectAppDetailsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project app details bad request response has a 3xx status code
func (o *ProjectAppDetailsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project app details bad request response has a 4xx status code
func (o *ProjectAppDetailsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this project app details bad request response has a 5xx status code
func (o *ProjectAppDetailsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this project app details bad request response a status code equal to that given
func (o *ProjectAppDetailsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ProjectAppDetailsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectApp/{id}][%d] projectAppDetailsBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectAppDetailsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectApp/{id}][%d] projectAppDetailsBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectAppDetailsBadRequest) GetPayload() []*ProjectAppDetailsBadRequestBodyItems0 {
	return o.Payload
}

func (o *ProjectAppDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectAppDetailsUnauthorized creates a ProjectAppDetailsUnauthorized with default headers values
func NewProjectAppDetailsUnauthorized() *ProjectAppDetailsUnauthorized {
	return &ProjectAppDetailsUnauthorized{}
}

/*
ProjectAppDetailsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProjectAppDetailsUnauthorized struct {
	Payload *ProjectAppDetailsUnauthorizedBody
}

// IsSuccess returns true when this project app details unauthorized response has a 2xx status code
func (o *ProjectAppDetailsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project app details unauthorized response has a 3xx status code
func (o *ProjectAppDetailsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project app details unauthorized response has a 4xx status code
func (o *ProjectAppDetailsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this project app details unauthorized response has a 5xx status code
func (o *ProjectAppDetailsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this project app details unauthorized response a status code equal to that given
func (o *ProjectAppDetailsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ProjectAppDetailsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectApp/{id}][%d] projectAppDetailsUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectAppDetailsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectApp/{id}][%d] projectAppDetailsUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectAppDetailsUnauthorized) GetPayload() *ProjectAppDetailsUnauthorizedBody {
	return o.Payload
}

func (o *ProjectAppDetailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ProjectAppDetailsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectAppDetailsForbidden creates a ProjectAppDetailsForbidden with default headers values
func NewProjectAppDetailsForbidden() *ProjectAppDetailsForbidden {
	return &ProjectAppDetailsForbidden{}
}

/*
ProjectAppDetailsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ProjectAppDetailsForbidden struct {
	Payload *ProjectAppDetailsForbiddenBody
}

// IsSuccess returns true when this project app details forbidden response has a 2xx status code
func (o *ProjectAppDetailsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project app details forbidden response has a 3xx status code
func (o *ProjectAppDetailsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project app details forbidden response has a 4xx status code
func (o *ProjectAppDetailsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this project app details forbidden response has a 5xx status code
func (o *ProjectAppDetailsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this project app details forbidden response a status code equal to that given
func (o *ProjectAppDetailsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ProjectAppDetailsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectApp/{id}][%d] projectAppDetailsForbidden  %+v", 403, o.Payload)
}

func (o *ProjectAppDetailsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectApp/{id}][%d] projectAppDetailsForbidden  %+v", 403, o.Payload)
}

func (o *ProjectAppDetailsForbidden) GetPayload() *ProjectAppDetailsForbiddenBody {
	return o.Payload
}

func (o *ProjectAppDetailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ProjectAppDetailsForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectAppDetailsNotFound creates a ProjectAppDetailsNotFound with default headers values
func NewProjectAppDetailsNotFound() *ProjectAppDetailsNotFound {
	return &ProjectAppDetailsNotFound{}
}

/*
ProjectAppDetailsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProjectAppDetailsNotFound struct {
	Payload *ProjectAppDetailsNotFoundBody
}

// IsSuccess returns true when this project app details not found response has a 2xx status code
func (o *ProjectAppDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project app details not found response has a 3xx status code
func (o *ProjectAppDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project app details not found response has a 4xx status code
func (o *ProjectAppDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this project app details not found response has a 5xx status code
func (o *ProjectAppDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this project app details not found response a status code equal to that given
func (o *ProjectAppDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ProjectAppDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectApp/{id}][%d] projectAppDetailsNotFound  %+v", 404, o.Payload)
}

func (o *ProjectAppDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectApp/{id}][%d] projectAppDetailsNotFound  %+v", 404, o.Payload)
}

func (o *ProjectAppDetailsNotFound) GetPayload() *ProjectAppDetailsNotFoundBody {
	return o.Payload
}

func (o *ProjectAppDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ProjectAppDetailsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectAppDetailsInternalServerError creates a ProjectAppDetailsInternalServerError with default headers values
func NewProjectAppDetailsInternalServerError() *ProjectAppDetailsInternalServerError {
	return &ProjectAppDetailsInternalServerError{}
}

/*
ProjectAppDetailsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ProjectAppDetailsInternalServerError struct {
}

// IsSuccess returns true when this project app details internal server error response has a 2xx status code
func (o *ProjectAppDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project app details internal server error response has a 3xx status code
func (o *ProjectAppDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project app details internal server error response has a 4xx status code
func (o *ProjectAppDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this project app details internal server error response has a 5xx status code
func (o *ProjectAppDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this project app details internal server error response a status code equal to that given
func (o *ProjectAppDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ProjectAppDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectApp/{id}][%d] projectAppDetailsInternalServerError ", 500)
}

func (o *ProjectAppDetailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/ProjectApp/{id}][%d] projectAppDetailsInternalServerError ", 500)
}

func (o *ProjectAppDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
ProjectAppDetailsBadRequestBodyItems0 project app details bad request body items0
swagger:model ProjectAppDetailsBadRequestBodyItems0
*/
type ProjectAppDetailsBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this project app details bad request body items0
func (o *ProjectAppDetailsBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project app details bad request body items0 based on context it is used
func (o *ProjectAppDetailsBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectAppDetailsBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectAppDetailsBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res ProjectAppDetailsBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectAppDetailsForbiddenBody project app details forbidden body
swagger:model ProjectAppDetailsForbiddenBody
*/
type ProjectAppDetailsForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this project app details forbidden body
func (o *ProjectAppDetailsForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project app details forbidden body based on context it is used
func (o *ProjectAppDetailsForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectAppDetailsForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectAppDetailsForbiddenBody) UnmarshalBinary(b []byte) error {
	var res ProjectAppDetailsForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectAppDetailsNotFoundBody project app details not found body
swagger:model ProjectAppDetailsNotFoundBody
*/
type ProjectAppDetailsNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this project app details not found body
func (o *ProjectAppDetailsNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project app details not found body based on context it is used
func (o *ProjectAppDetailsNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectAppDetailsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectAppDetailsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ProjectAppDetailsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectAppDetailsOKBody project app details o k body
swagger:model ProjectAppDetailsOKBody
*/
type ProjectAppDetailsOKBody struct {

	// app repo name
	AppRepoName string `json:"appRepoName,omitempty"`

	// auto sync
	AutoSync bool `json:"autoSync"`

	// catalog app name
	CatalogAppName string `json:"catalogAppName,omitempty"`

	// catalog Id
	CatalogID int32 `json:"catalogId,omitempty"`

	// catalog name
	CatalogName string `json:"catalogName,omitempty"`

	// helm result
	HelmResult string `json:"helmResult,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// logo
	Logo string `json:"logo,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// project app params
	ProjectAppParams []*ProjectAppDetailsOKBodyProjectAppParamsItems0 `json:"projectAppParams"`

	// project Id
	ProjectID int32 `json:"projectId,omitempty"`

	// project name
	ProjectName string `json:"projectName,omitempty"`

	// release notes
	ReleaseNotes string `json:"releaseNotes,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// values
	Values string `json:"values,omitempty"`

	// version
	Version string `json:"version,omitempty"`
}

// Validate validates this project app details o k body
func (o *ProjectAppDetailsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateProjectAppParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ProjectAppDetailsOKBody) validateProjectAppParams(formats strfmt.Registry) error {
	if swag.IsZero(o.ProjectAppParams) { // not required
		return nil
	}

	for i := 0; i < len(o.ProjectAppParams); i++ {
		if swag.IsZero(o.ProjectAppParams[i]) { // not required
			continue
		}

		if o.ProjectAppParams[i] != nil {
			if err := o.ProjectAppParams[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("projectAppDetailsOK" + "." + "projectAppParams" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("projectAppDetailsOK" + "." + "projectAppParams" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this project app details o k body based on the context it is used
func (o *ProjectAppDetailsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateProjectAppParams(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ProjectAppDetailsOKBody) contextValidateProjectAppParams(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.ProjectAppParams); i++ {

		if o.ProjectAppParams[i] != nil {
			if err := o.ProjectAppParams[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("projectAppDetailsOK" + "." + "projectAppParams" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("projectAppDetailsOK" + "." + "projectAppParams" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ProjectAppDetailsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectAppDetailsOKBody) UnmarshalBinary(b []byte) error {
	var res ProjectAppDetailsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectAppDetailsOKBodyProjectAppParamsItems0 project app details o k body project app params items0
swagger:model ProjectAppDetailsOKBodyProjectAppParamsItems0
*/
type ProjectAppDetailsOKBodyProjectAppParamsItems0 struct {

	// is changeable
	IsChangeable bool `json:"isChangeable"`

	// is readonly
	IsReadonly bool `json:"isReadonly"`

	// key
	Key string `json:"key,omitempty"`

	// value
	Value string `json:"value,omitempty"`
}

// Validate validates this project app details o k body project app params items0
func (o *ProjectAppDetailsOKBodyProjectAppParamsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project app details o k body project app params items0 based on context it is used
func (o *ProjectAppDetailsOKBodyProjectAppParamsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectAppDetailsOKBodyProjectAppParamsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectAppDetailsOKBodyProjectAppParamsItems0) UnmarshalBinary(b []byte) error {
	var res ProjectAppDetailsOKBodyProjectAppParamsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ProjectAppDetailsUnauthorizedBody project app details unauthorized body
swagger:model ProjectAppDetailsUnauthorizedBody
*/
type ProjectAppDetailsUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this project app details unauthorized body
func (o *ProjectAppDetailsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this project app details unauthorized body based on context it is used
func (o *ProjectAppDetailsUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ProjectAppDetailsUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ProjectAppDetailsUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res ProjectAppDetailsUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
