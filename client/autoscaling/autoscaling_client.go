// Code generated by go-swagger; DO NOT EDIT.

package autoscaling

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new autoscaling API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for autoscaling API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	AutoscalingDisableAutoscaling(params *AutoscalingDisableAutoscalingParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AutoscalingDisableAutoscalingOK, error)

	AutoscalingEditAutoscaling(params *AutoscalingEditAutoscalingParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AutoscalingEditAutoscalingOK, error)

	AutoscalingEnableAutoscaling(params *AutoscalingEnableAutoscalingParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AutoscalingEnableAutoscalingOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
AutoscalingDisableAutoscaling disables autoscaling
*/
func (a *Client) AutoscalingDisableAutoscaling(params *AutoscalingDisableAutoscalingParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AutoscalingDisableAutoscalingOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAutoscalingDisableAutoscalingParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Autoscaling_DisableAutoscaling",
		Method:             "POST",
		PathPattern:        "/api/v{v}/Autoscaling/disable",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AutoscalingDisableAutoscalingReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AutoscalingDisableAutoscalingOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Autoscaling_DisableAutoscaling: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
AutoscalingEditAutoscaling edits autoscaling
*/
func (a *Client) AutoscalingEditAutoscaling(params *AutoscalingEditAutoscalingParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AutoscalingEditAutoscalingOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAutoscalingEditAutoscalingParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Autoscaling_EditAutoscaling",
		Method:             "POST",
		PathPattern:        "/api/v{v}/Autoscaling/edit",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AutoscalingEditAutoscalingReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AutoscalingEditAutoscalingOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Autoscaling_EditAutoscaling: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
AutoscalingEnableAutoscaling enables autoscaling
*/
func (a *Client) AutoscalingEnableAutoscaling(params *AutoscalingEnableAutoscalingParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AutoscalingEnableAutoscalingOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAutoscalingEnableAutoscalingParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "Autoscaling_EnableAutoscaling",
		Method:             "POST",
		PathPattern:        "/api/v{v}/Autoscaling/enable",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AutoscalingEnableAutoscalingReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AutoscalingEnableAutoscalingOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Autoscaling_EnableAutoscaling: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
