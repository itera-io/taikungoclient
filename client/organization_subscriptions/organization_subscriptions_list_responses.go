// Code generated by go-swagger; DO NOT EDIT.

package organization_subscriptions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OrganizationSubscriptionsListReader is a Reader for the OrganizationSubscriptionsList structure.
type OrganizationSubscriptionsListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrganizationSubscriptionsListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrganizationSubscriptionsListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOrganizationSubscriptionsListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewOrganizationSubscriptionsListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewOrganizationSubscriptionsListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOrganizationSubscriptionsListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewOrganizationSubscriptionsListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOrganizationSubscriptionsListOK creates a OrganizationSubscriptionsListOK with default headers values
func NewOrganizationSubscriptionsListOK() *OrganizationSubscriptionsListOK {
	return &OrganizationSubscriptionsListOK{}
}

/*
OrganizationSubscriptionsListOK describes a response with status code 200, with default header values.

Success
*/
type OrganizationSubscriptionsListOK struct {
	Payload *OrganizationSubscriptionsListOKBody
}

// IsSuccess returns true when this organization subscriptions list o k response has a 2xx status code
func (o *OrganizationSubscriptionsListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this organization subscriptions list o k response has a 3xx status code
func (o *OrganizationSubscriptionsListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organization subscriptions list o k response has a 4xx status code
func (o *OrganizationSubscriptionsListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this organization subscriptions list o k response has a 5xx status code
func (o *OrganizationSubscriptionsListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this organization subscriptions list o k response a status code equal to that given
func (o *OrganizationSubscriptionsListOK) IsCode(code int) bool {
	return code == 200
}

func (o *OrganizationSubscriptionsListOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/OrganizationSubscriptions][%d] organizationSubscriptionsListOK  %+v", 200, o.Payload)
}

func (o *OrganizationSubscriptionsListOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/OrganizationSubscriptions][%d] organizationSubscriptionsListOK  %+v", 200, o.Payload)
}

func (o *OrganizationSubscriptionsListOK) GetPayload() *OrganizationSubscriptionsListOKBody {
	return o.Payload
}

func (o *OrganizationSubscriptionsListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OrganizationSubscriptionsListOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationSubscriptionsListBadRequest creates a OrganizationSubscriptionsListBadRequest with default headers values
func NewOrganizationSubscriptionsListBadRequest() *OrganizationSubscriptionsListBadRequest {
	return &OrganizationSubscriptionsListBadRequest{}
}

/*
OrganizationSubscriptionsListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type OrganizationSubscriptionsListBadRequest struct {
	Payload []*OrganizationSubscriptionsListBadRequestBodyItems0
}

// IsSuccess returns true when this organization subscriptions list bad request response has a 2xx status code
func (o *OrganizationSubscriptionsListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organization subscriptions list bad request response has a 3xx status code
func (o *OrganizationSubscriptionsListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organization subscriptions list bad request response has a 4xx status code
func (o *OrganizationSubscriptionsListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this organization subscriptions list bad request response has a 5xx status code
func (o *OrganizationSubscriptionsListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this organization subscriptions list bad request response a status code equal to that given
func (o *OrganizationSubscriptionsListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *OrganizationSubscriptionsListBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/OrganizationSubscriptions][%d] organizationSubscriptionsListBadRequest  %+v", 400, o.Payload)
}

func (o *OrganizationSubscriptionsListBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/OrganizationSubscriptions][%d] organizationSubscriptionsListBadRequest  %+v", 400, o.Payload)
}

func (o *OrganizationSubscriptionsListBadRequest) GetPayload() []*OrganizationSubscriptionsListBadRequestBodyItems0 {
	return o.Payload
}

func (o *OrganizationSubscriptionsListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationSubscriptionsListUnauthorized creates a OrganizationSubscriptionsListUnauthorized with default headers values
func NewOrganizationSubscriptionsListUnauthorized() *OrganizationSubscriptionsListUnauthorized {
	return &OrganizationSubscriptionsListUnauthorized{}
}

/*
OrganizationSubscriptionsListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type OrganizationSubscriptionsListUnauthorized struct {
	Payload *OrganizationSubscriptionsListUnauthorizedBody
}

// IsSuccess returns true when this organization subscriptions list unauthorized response has a 2xx status code
func (o *OrganizationSubscriptionsListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organization subscriptions list unauthorized response has a 3xx status code
func (o *OrganizationSubscriptionsListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organization subscriptions list unauthorized response has a 4xx status code
func (o *OrganizationSubscriptionsListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this organization subscriptions list unauthorized response has a 5xx status code
func (o *OrganizationSubscriptionsListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this organization subscriptions list unauthorized response a status code equal to that given
func (o *OrganizationSubscriptionsListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *OrganizationSubscriptionsListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/OrganizationSubscriptions][%d] organizationSubscriptionsListUnauthorized  %+v", 401, o.Payload)
}

func (o *OrganizationSubscriptionsListUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/OrganizationSubscriptions][%d] organizationSubscriptionsListUnauthorized  %+v", 401, o.Payload)
}

func (o *OrganizationSubscriptionsListUnauthorized) GetPayload() *OrganizationSubscriptionsListUnauthorizedBody {
	return o.Payload
}

func (o *OrganizationSubscriptionsListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OrganizationSubscriptionsListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationSubscriptionsListForbidden creates a OrganizationSubscriptionsListForbidden with default headers values
func NewOrganizationSubscriptionsListForbidden() *OrganizationSubscriptionsListForbidden {
	return &OrganizationSubscriptionsListForbidden{}
}

/*
OrganizationSubscriptionsListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type OrganizationSubscriptionsListForbidden struct {
	Payload *OrganizationSubscriptionsListForbiddenBody
}

// IsSuccess returns true when this organization subscriptions list forbidden response has a 2xx status code
func (o *OrganizationSubscriptionsListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organization subscriptions list forbidden response has a 3xx status code
func (o *OrganizationSubscriptionsListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organization subscriptions list forbidden response has a 4xx status code
func (o *OrganizationSubscriptionsListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this organization subscriptions list forbidden response has a 5xx status code
func (o *OrganizationSubscriptionsListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this organization subscriptions list forbidden response a status code equal to that given
func (o *OrganizationSubscriptionsListForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *OrganizationSubscriptionsListForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/OrganizationSubscriptions][%d] organizationSubscriptionsListForbidden  %+v", 403, o.Payload)
}

func (o *OrganizationSubscriptionsListForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/OrganizationSubscriptions][%d] organizationSubscriptionsListForbidden  %+v", 403, o.Payload)
}

func (o *OrganizationSubscriptionsListForbidden) GetPayload() *OrganizationSubscriptionsListForbiddenBody {
	return o.Payload
}

func (o *OrganizationSubscriptionsListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OrganizationSubscriptionsListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationSubscriptionsListNotFound creates a OrganizationSubscriptionsListNotFound with default headers values
func NewOrganizationSubscriptionsListNotFound() *OrganizationSubscriptionsListNotFound {
	return &OrganizationSubscriptionsListNotFound{}
}

/*
OrganizationSubscriptionsListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type OrganizationSubscriptionsListNotFound struct {
	Payload *OrganizationSubscriptionsListNotFoundBody
}

// IsSuccess returns true when this organization subscriptions list not found response has a 2xx status code
func (o *OrganizationSubscriptionsListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organization subscriptions list not found response has a 3xx status code
func (o *OrganizationSubscriptionsListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organization subscriptions list not found response has a 4xx status code
func (o *OrganizationSubscriptionsListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this organization subscriptions list not found response has a 5xx status code
func (o *OrganizationSubscriptionsListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this organization subscriptions list not found response a status code equal to that given
func (o *OrganizationSubscriptionsListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *OrganizationSubscriptionsListNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/OrganizationSubscriptions][%d] organizationSubscriptionsListNotFound  %+v", 404, o.Payload)
}

func (o *OrganizationSubscriptionsListNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/OrganizationSubscriptions][%d] organizationSubscriptionsListNotFound  %+v", 404, o.Payload)
}

func (o *OrganizationSubscriptionsListNotFound) GetPayload() *OrganizationSubscriptionsListNotFoundBody {
	return o.Payload
}

func (o *OrganizationSubscriptionsListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OrganizationSubscriptionsListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationSubscriptionsListInternalServerError creates a OrganizationSubscriptionsListInternalServerError with default headers values
func NewOrganizationSubscriptionsListInternalServerError() *OrganizationSubscriptionsListInternalServerError {
	return &OrganizationSubscriptionsListInternalServerError{}
}

/*
OrganizationSubscriptionsListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type OrganizationSubscriptionsListInternalServerError struct {
}

// IsSuccess returns true when this organization subscriptions list internal server error response has a 2xx status code
func (o *OrganizationSubscriptionsListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organization subscriptions list internal server error response has a 3xx status code
func (o *OrganizationSubscriptionsListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organization subscriptions list internal server error response has a 4xx status code
func (o *OrganizationSubscriptionsListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this organization subscriptions list internal server error response has a 5xx status code
func (o *OrganizationSubscriptionsListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this organization subscriptions list internal server error response a status code equal to that given
func (o *OrganizationSubscriptionsListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *OrganizationSubscriptionsListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/OrganizationSubscriptions][%d] organizationSubscriptionsListInternalServerError ", 500)
}

func (o *OrganizationSubscriptionsListInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/OrganizationSubscriptions][%d] organizationSubscriptionsListInternalServerError ", 500)
}

func (o *OrganizationSubscriptionsListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
OrganizationSubscriptionsListBadRequestBodyItems0 organization subscriptions list bad request body items0
swagger:model OrganizationSubscriptionsListBadRequestBodyItems0
*/
type OrganizationSubscriptionsListBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this organization subscriptions list bad request body items0
func (o *OrganizationSubscriptionsListBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organization subscriptions list bad request body items0 based on context it is used
func (o *OrganizationSubscriptionsListBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationSubscriptionsListBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationSubscriptionsListBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res OrganizationSubscriptionsListBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationSubscriptionsListForbiddenBody organization subscriptions list forbidden body
swagger:model OrganizationSubscriptionsListForbiddenBody
*/
type OrganizationSubscriptionsListForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this organization subscriptions list forbidden body
func (o *OrganizationSubscriptionsListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organization subscriptions list forbidden body based on context it is used
func (o *OrganizationSubscriptionsListForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationSubscriptionsListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationSubscriptionsListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res OrganizationSubscriptionsListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationSubscriptionsListNotFoundBody organization subscriptions list not found body
swagger:model OrganizationSubscriptionsListNotFoundBody
*/
type OrganizationSubscriptionsListNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this organization subscriptions list not found body
func (o *OrganizationSubscriptionsListNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organization subscriptions list not found body based on context it is used
func (o *OrganizationSubscriptionsListNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationSubscriptionsListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationSubscriptionsListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res OrganizationSubscriptionsListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationSubscriptionsListOKBody organization subscriptions list o k body
swagger:model OrganizationSubscriptionsListOKBody
*/
type OrganizationSubscriptionsListOKBody struct {

	// data
	Data []*OrganizationSubscriptionsListOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this organization subscriptions list o k body
func (o *OrganizationSubscriptionsListOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *OrganizationSubscriptionsListOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("organizationSubscriptionsListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("organizationSubscriptionsListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this organization subscriptions list o k body based on the context it is used
func (o *OrganizationSubscriptionsListOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *OrganizationSubscriptionsListOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("organizationSubscriptionsListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("organizationSubscriptionsListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationSubscriptionsListOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationSubscriptionsListOKBody) UnmarshalBinary(b []byte) error {
	var res OrganizationSubscriptionsListOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationSubscriptionsListOKBodyDataItems0 organization subscriptions list o k body data items0
swagger:model OrganizationSubscriptionsListOKBodyDataItems0
*/
type OrganizationSubscriptionsListOKBodyDataItems0 struct {

	// end date
	// Format: date-time
	EndDate *strfmt.DateTime `json:"endDate,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// invoices
	Invoices []*OrganizationSubscriptionsListOKBodyDataItems0InvoicesItems0 `json:"invoices"`

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// organization name
	OrganizationName string `json:"organizationName,omitempty"`

	// start date
	// Format: date-time
	StartDate *strfmt.DateTime `json:"startDate,omitempty"`

	// stripe subscription Id
	StripeSubscriptionID string `json:"stripeSubscriptionId,omitempty"`

	// subscription Id
	SubscriptionID int32 `json:"subscriptionId,omitempty"`

	// subscription name
	SubscriptionName string `json:"subscriptionName,omitempty"`

	// subscription type
	SubscriptionType string `json:"subscriptionType,omitempty"`
}

// Validate validates this organization subscriptions list o k body data items0
func (o *OrganizationSubscriptionsListOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEndDate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateInvoices(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStartDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *OrganizationSubscriptionsListOKBodyDataItems0) validateEndDate(formats strfmt.Registry) error {
	if swag.IsZero(o.EndDate) { // not required
		return nil
	}

	if err := validate.FormatOf("endDate", "body", "date-time", o.EndDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *OrganizationSubscriptionsListOKBodyDataItems0) validateInvoices(formats strfmt.Registry) error {
	if swag.IsZero(o.Invoices) { // not required
		return nil
	}

	for i := 0; i < len(o.Invoices); i++ {
		if swag.IsZero(o.Invoices[i]) { // not required
			continue
		}

		if o.Invoices[i] != nil {
			if err := o.Invoices[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("invoices" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("invoices" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *OrganizationSubscriptionsListOKBodyDataItems0) validateStartDate(formats strfmt.Registry) error {
	if swag.IsZero(o.StartDate) { // not required
		return nil
	}

	if err := validate.FormatOf("startDate", "body", "date-time", o.StartDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this organization subscriptions list o k body data items0 based on the context it is used
func (o *OrganizationSubscriptionsListOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateInvoices(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *OrganizationSubscriptionsListOKBodyDataItems0) contextValidateInvoices(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Invoices); i++ {

		if o.Invoices[i] != nil {
			if err := o.Invoices[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("invoices" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("invoices" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationSubscriptionsListOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationSubscriptionsListOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res OrganizationSubscriptionsListOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationSubscriptionsListOKBodyDataItems0InvoicesItems0 organization subscriptions list o k body data items0 invoices items0
swagger:model OrganizationSubscriptionsListOKBodyDataItems0InvoicesItems0
*/
type OrganizationSubscriptionsListOKBodyDataItems0InvoicesItems0 struct {

	// document number
	DocumentNumber string `json:"documentNumber,omitempty"`

	// due date
	// Format: date-time
	DueDate *strfmt.DateTime `json:"dueDate,omitempty"`

	// end date
	// Format: date-time
	EndDate *strfmt.DateTime `json:"endDate,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// is paid
	IsPaid bool `json:"isPaid"`

	// name
	Name string `json:"name,omitempty"`

	// organization subscription Id
	OrganizationSubscriptionID int32 `json:"organizationSubscriptionId,omitempty"`

	// price
	Price float64 `json:"price,omitempty"`

	// required payment action
	RequiredPaymentAction bool `json:"requiredPaymentAction"`

	// start date
	// Format: date-time
	StartDate *strfmt.DateTime `json:"startDate,omitempty"`

	// stripe invoice Id
	StripeInvoiceID string `json:"stripeInvoiceId,omitempty"`
}

// Validate validates this organization subscriptions list o k body data items0 invoices items0
func (o *OrganizationSubscriptionsListOKBodyDataItems0InvoicesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDueDate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEndDate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStartDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *OrganizationSubscriptionsListOKBodyDataItems0InvoicesItems0) validateDueDate(formats strfmt.Registry) error {
	if swag.IsZero(o.DueDate) { // not required
		return nil
	}

	if err := validate.FormatOf("dueDate", "body", "date-time", o.DueDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *OrganizationSubscriptionsListOKBodyDataItems0InvoicesItems0) validateEndDate(formats strfmt.Registry) error {
	if swag.IsZero(o.EndDate) { // not required
		return nil
	}

	if err := validate.FormatOf("endDate", "body", "date-time", o.EndDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *OrganizationSubscriptionsListOKBodyDataItems0InvoicesItems0) validateStartDate(formats strfmt.Registry) error {
	if swag.IsZero(o.StartDate) { // not required
		return nil
	}

	if err := validate.FormatOf("startDate", "body", "date-time", o.StartDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this organization subscriptions list o k body data items0 invoices items0 based on context it is used
func (o *OrganizationSubscriptionsListOKBodyDataItems0InvoicesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationSubscriptionsListOKBodyDataItems0InvoicesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationSubscriptionsListOKBodyDataItems0InvoicesItems0) UnmarshalBinary(b []byte) error {
	var res OrganizationSubscriptionsListOKBodyDataItems0InvoicesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationSubscriptionsListUnauthorizedBody organization subscriptions list unauthorized body
swagger:model OrganizationSubscriptionsListUnauthorizedBody
*/
type OrganizationSubscriptionsListUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this organization subscriptions list unauthorized body
func (o *OrganizationSubscriptionsListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organization subscriptions list unauthorized body based on context it is used
func (o *OrganizationSubscriptionsListUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationSubscriptionsListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationSubscriptionsListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res OrganizationSubscriptionsListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
