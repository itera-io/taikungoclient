// Code generated by go-swagger; DO NOT EDIT.

package google_cloud

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// GoogleCloudRegionListReader is a Reader for the GoogleCloudRegionList structure.
type GoogleCloudRegionListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GoogleCloudRegionListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGoogleCloudRegionListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGoogleCloudRegionListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGoogleCloudRegionListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGoogleCloudRegionListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGoogleCloudRegionListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGoogleCloudRegionListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGoogleCloudRegionListOK creates a GoogleCloudRegionListOK with default headers values
func NewGoogleCloudRegionListOK() *GoogleCloudRegionListOK {
	return &GoogleCloudRegionListOK{}
}

/* GoogleCloudRegionListOK describes a response with status code 200, with default header values.

Success
*/
type GoogleCloudRegionListOK struct {
	Payload []string
}

func (o *GoogleCloudRegionListOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/GoogleCloud/regions][%d] googleCloudRegionListOK  %+v", 200, o.Payload)
}
func (o *GoogleCloudRegionListOK) GetPayload() []string {
	return o.Payload
}

func (o *GoogleCloudRegionListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGoogleCloudRegionListBadRequest creates a GoogleCloudRegionListBadRequest with default headers values
func NewGoogleCloudRegionListBadRequest() *GoogleCloudRegionListBadRequest {
	return &GoogleCloudRegionListBadRequest{}
}

/* GoogleCloudRegionListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GoogleCloudRegionListBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *GoogleCloudRegionListBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/GoogleCloud/regions][%d] googleCloudRegionListBadRequest  %+v", 400, o.Payload)
}
func (o *GoogleCloudRegionListBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *GoogleCloudRegionListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGoogleCloudRegionListUnauthorized creates a GoogleCloudRegionListUnauthorized with default headers values
func NewGoogleCloudRegionListUnauthorized() *GoogleCloudRegionListUnauthorized {
	return &GoogleCloudRegionListUnauthorized{}
}

/* GoogleCloudRegionListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GoogleCloudRegionListUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *GoogleCloudRegionListUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/GoogleCloud/regions][%d] googleCloudRegionListUnauthorized  %+v", 401, o.Payload)
}
func (o *GoogleCloudRegionListUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GoogleCloudRegionListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGoogleCloudRegionListForbidden creates a GoogleCloudRegionListForbidden with default headers values
func NewGoogleCloudRegionListForbidden() *GoogleCloudRegionListForbidden {
	return &GoogleCloudRegionListForbidden{}
}

/* GoogleCloudRegionListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GoogleCloudRegionListForbidden struct {
	Payload *models.ProblemDetails
}

func (o *GoogleCloudRegionListForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/GoogleCloud/regions][%d] googleCloudRegionListForbidden  %+v", 403, o.Payload)
}
func (o *GoogleCloudRegionListForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GoogleCloudRegionListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGoogleCloudRegionListNotFound creates a GoogleCloudRegionListNotFound with default headers values
func NewGoogleCloudRegionListNotFound() *GoogleCloudRegionListNotFound {
	return &GoogleCloudRegionListNotFound{}
}

/* GoogleCloudRegionListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GoogleCloudRegionListNotFound struct {
	Payload *models.ProblemDetails
}

func (o *GoogleCloudRegionListNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/GoogleCloud/regions][%d] googleCloudRegionListNotFound  %+v", 404, o.Payload)
}
func (o *GoogleCloudRegionListNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *GoogleCloudRegionListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGoogleCloudRegionListInternalServerError creates a GoogleCloudRegionListInternalServerError with default headers values
func NewGoogleCloudRegionListInternalServerError() *GoogleCloudRegionListInternalServerError {
	return &GoogleCloudRegionListInternalServerError{}
}

/* GoogleCloudRegionListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GoogleCloudRegionListInternalServerError struct {
}

func (o *GoogleCloudRegionListInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/GoogleCloud/regions][%d] googleCloudRegionListInternalServerError ", 500)
}

func (o *GoogleCloudRegionListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
