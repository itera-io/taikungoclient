// Code generated by go-swagger; DO NOT EDIT.

package google_cloud

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// GoogleCloudListReader is a Reader for the GoogleCloudList structure.
type GoogleCloudListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GoogleCloudListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGoogleCloudListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGoogleCloudListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGoogleCloudListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGoogleCloudListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGoogleCloudListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGoogleCloudListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGoogleCloudListOK creates a GoogleCloudListOK with default headers values
func NewGoogleCloudListOK() *GoogleCloudListOK {
	return &GoogleCloudListOK{}
}

/*
GoogleCloudListOK describes a response with status code 200, with default header values.

Success
*/
type GoogleCloudListOK struct {
	Payload *models.GoogleCredentialList
}

// IsSuccess returns true when this google cloud list o k response has a 2xx status code
func (o *GoogleCloudListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this google cloud list o k response has a 3xx status code
func (o *GoogleCloudListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this google cloud list o k response has a 4xx status code
func (o *GoogleCloudListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this google cloud list o k response has a 5xx status code
func (o *GoogleCloudListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this google cloud list o k response a status code equal to that given
func (o *GoogleCloudListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the google cloud list o k response
func (o *GoogleCloudListOK) Code() int {
	return 200
}

func (o *GoogleCloudListOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/GoogleCloud/list][%d] googleCloudListOK  %+v", 200, o.Payload)
}

func (o *GoogleCloudListOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/GoogleCloud/list][%d] googleCloudListOK  %+v", 200, o.Payload)
}

func (o *GoogleCloudListOK) GetPayload() *models.GoogleCredentialList {
	return o.Payload
}

func (o *GoogleCloudListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GoogleCredentialList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGoogleCloudListBadRequest creates a GoogleCloudListBadRequest with default headers values
func NewGoogleCloudListBadRequest() *GoogleCloudListBadRequest {
	return &GoogleCloudListBadRequest{}
}

/*
GoogleCloudListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GoogleCloudListBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this google cloud list bad request response has a 2xx status code
func (o *GoogleCloudListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this google cloud list bad request response has a 3xx status code
func (o *GoogleCloudListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this google cloud list bad request response has a 4xx status code
func (o *GoogleCloudListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this google cloud list bad request response has a 5xx status code
func (o *GoogleCloudListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this google cloud list bad request response a status code equal to that given
func (o *GoogleCloudListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the google cloud list bad request response
func (o *GoogleCloudListBadRequest) Code() int {
	return 400
}

func (o *GoogleCloudListBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/GoogleCloud/list][%d] googleCloudListBadRequest  %+v", 400, o.Payload)
}

func (o *GoogleCloudListBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/GoogleCloud/list][%d] googleCloudListBadRequest  %+v", 400, o.Payload)
}

func (o *GoogleCloudListBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *GoogleCloudListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGoogleCloudListUnauthorized creates a GoogleCloudListUnauthorized with default headers values
func NewGoogleCloudListUnauthorized() *GoogleCloudListUnauthorized {
	return &GoogleCloudListUnauthorized{}
}

/*
GoogleCloudListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GoogleCloudListUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this google cloud list unauthorized response has a 2xx status code
func (o *GoogleCloudListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this google cloud list unauthorized response has a 3xx status code
func (o *GoogleCloudListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this google cloud list unauthorized response has a 4xx status code
func (o *GoogleCloudListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this google cloud list unauthorized response has a 5xx status code
func (o *GoogleCloudListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this google cloud list unauthorized response a status code equal to that given
func (o *GoogleCloudListUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the google cloud list unauthorized response
func (o *GoogleCloudListUnauthorized) Code() int {
	return 401
}

func (o *GoogleCloudListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/GoogleCloud/list][%d] googleCloudListUnauthorized  %+v", 401, o.Payload)
}

func (o *GoogleCloudListUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/GoogleCloud/list][%d] googleCloudListUnauthorized  %+v", 401, o.Payload)
}

func (o *GoogleCloudListUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *GoogleCloudListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGoogleCloudListForbidden creates a GoogleCloudListForbidden with default headers values
func NewGoogleCloudListForbidden() *GoogleCloudListForbidden {
	return &GoogleCloudListForbidden{}
}

/*
GoogleCloudListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GoogleCloudListForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this google cloud list forbidden response has a 2xx status code
func (o *GoogleCloudListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this google cloud list forbidden response has a 3xx status code
func (o *GoogleCloudListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this google cloud list forbidden response has a 4xx status code
func (o *GoogleCloudListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this google cloud list forbidden response has a 5xx status code
func (o *GoogleCloudListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this google cloud list forbidden response a status code equal to that given
func (o *GoogleCloudListForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the google cloud list forbidden response
func (o *GoogleCloudListForbidden) Code() int {
	return 403
}

func (o *GoogleCloudListForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/GoogleCloud/list][%d] googleCloudListForbidden  %+v", 403, o.Payload)
}

func (o *GoogleCloudListForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/GoogleCloud/list][%d] googleCloudListForbidden  %+v", 403, o.Payload)
}

func (o *GoogleCloudListForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *GoogleCloudListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGoogleCloudListNotFound creates a GoogleCloudListNotFound with default headers values
func NewGoogleCloudListNotFound() *GoogleCloudListNotFound {
	return &GoogleCloudListNotFound{}
}

/*
GoogleCloudListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GoogleCloudListNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this google cloud list not found response has a 2xx status code
func (o *GoogleCloudListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this google cloud list not found response has a 3xx status code
func (o *GoogleCloudListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this google cloud list not found response has a 4xx status code
func (o *GoogleCloudListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this google cloud list not found response has a 5xx status code
func (o *GoogleCloudListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this google cloud list not found response a status code equal to that given
func (o *GoogleCloudListNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the google cloud list not found response
func (o *GoogleCloudListNotFound) Code() int {
	return 404
}

func (o *GoogleCloudListNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/GoogleCloud/list][%d] googleCloudListNotFound  %+v", 404, o.Payload)
}

func (o *GoogleCloudListNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/GoogleCloud/list][%d] googleCloudListNotFound  %+v", 404, o.Payload)
}

func (o *GoogleCloudListNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *GoogleCloudListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGoogleCloudListInternalServerError creates a GoogleCloudListInternalServerError with default headers values
func NewGoogleCloudListInternalServerError() *GoogleCloudListInternalServerError {
	return &GoogleCloudListInternalServerError{}
}

/*
GoogleCloudListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GoogleCloudListInternalServerError struct {
}

// IsSuccess returns true when this google cloud list internal server error response has a 2xx status code
func (o *GoogleCloudListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this google cloud list internal server error response has a 3xx status code
func (o *GoogleCloudListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this google cloud list internal server error response has a 4xx status code
func (o *GoogleCloudListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this google cloud list internal server error response has a 5xx status code
func (o *GoogleCloudListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this google cloud list internal server error response a status code equal to that given
func (o *GoogleCloudListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the google cloud list internal server error response
func (o *GoogleCloudListInternalServerError) Code() int {
	return 500
}

func (o *GoogleCloudListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/GoogleCloud/list][%d] googleCloudListInternalServerError ", 500)
}

func (o *GoogleCloudListInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/GoogleCloud/list][%d] googleCloudListInternalServerError ", 500)
}

func (o *GoogleCloudListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
