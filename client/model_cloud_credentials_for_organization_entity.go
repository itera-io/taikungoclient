/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CloudCredentialsForOrganizationEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudCredentialsForOrganizationEntity{}

// CloudCredentialsForOrganizationEntity struct for CloudCredentialsForOrganizationEntity
type CloudCredentialsForOrganizationEntity struct {
	Id int32 `json:"id"`
	Projects []CommonDropdownDto `json:"projects"`
	FullName NullableString `json:"fullName"`
	CloudType CloudType `json:"cloudType"`
	IsDefault bool `json:"isDefault"`
}

type _CloudCredentialsForOrganizationEntity CloudCredentialsForOrganizationEntity

// NewCloudCredentialsForOrganizationEntity instantiates a new CloudCredentialsForOrganizationEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudCredentialsForOrganizationEntity(id int32, projects []CommonDropdownDto, fullName NullableString, cloudType CloudType, isDefault bool) *CloudCredentialsForOrganizationEntity {
	this := CloudCredentialsForOrganizationEntity{}
	this.Id = id
	this.Projects = projects
	this.FullName = fullName
	this.CloudType = cloudType
	this.IsDefault = isDefault
	return &this
}

// NewCloudCredentialsForOrganizationEntityWithDefaults instantiates a new CloudCredentialsForOrganizationEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudCredentialsForOrganizationEntityWithDefaults() *CloudCredentialsForOrganizationEntity {
	this := CloudCredentialsForOrganizationEntity{}
	return &this
}

// GetId returns the Id field value
func (o *CloudCredentialsForOrganizationEntity) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CloudCredentialsForOrganizationEntity) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CloudCredentialsForOrganizationEntity) SetId(v int32) {
	o.Id = v
}

// GetProjects returns the Projects field value
// If the value is explicit nil, the zero value for []CommonDropdownDto will be returned
func (o *CloudCredentialsForOrganizationEntity) GetProjects() []CommonDropdownDto {
	if o == nil {
		var ret []CommonDropdownDto
		return ret
	}

	return o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudCredentialsForOrganizationEntity) GetProjectsOk() ([]CommonDropdownDto, bool) {
	if o == nil || IsNil(o.Projects) {
		return nil, false
	}
	return o.Projects, true
}

// SetProjects sets field value
func (o *CloudCredentialsForOrganizationEntity) SetProjects(v []CommonDropdownDto) {
	o.Projects = v
}

// GetFullName returns the FullName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CloudCredentialsForOrganizationEntity) GetFullName() string {
	if o == nil || o.FullName.Get() == nil {
		var ret string
		return ret
	}

	return *o.FullName.Get()
}

// GetFullNameOk returns a tuple with the FullName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudCredentialsForOrganizationEntity) GetFullNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FullName.Get(), o.FullName.IsSet()
}

// SetFullName sets field value
func (o *CloudCredentialsForOrganizationEntity) SetFullName(v string) {
	o.FullName.Set(&v)
}

// GetCloudType returns the CloudType field value
func (o *CloudCredentialsForOrganizationEntity) GetCloudType() CloudType {
	if o == nil {
		var ret CloudType
		return ret
	}

	return o.CloudType
}

// GetCloudTypeOk returns a tuple with the CloudType field value
// and a boolean to check if the value has been set.
func (o *CloudCredentialsForOrganizationEntity) GetCloudTypeOk() (*CloudType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudType, true
}

// SetCloudType sets field value
func (o *CloudCredentialsForOrganizationEntity) SetCloudType(v CloudType) {
	o.CloudType = v
}

// GetIsDefault returns the IsDefault field value
func (o *CloudCredentialsForOrganizationEntity) GetIsDefault() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value
// and a boolean to check if the value has been set.
func (o *CloudCredentialsForOrganizationEntity) GetIsDefaultOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDefault, true
}

// SetIsDefault sets field value
func (o *CloudCredentialsForOrganizationEntity) SetIsDefault(v bool) {
	o.IsDefault = v
}

func (o CloudCredentialsForOrganizationEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudCredentialsForOrganizationEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.Projects != nil {
		toSerialize["projects"] = o.Projects
	}
	toSerialize["fullName"] = o.FullName.Get()
	toSerialize["cloudType"] = o.CloudType
	toSerialize["isDefault"] = o.IsDefault
	return toSerialize, nil
}

func (o *CloudCredentialsForOrganizationEntity) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"projects",
		"fullName",
		"cloudType",
		"isDefault",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCloudCredentialsForOrganizationEntity := _CloudCredentialsForOrganizationEntity{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCloudCredentialsForOrganizationEntity)

	if err != nil {
		return err
	}

	*o = CloudCredentialsForOrganizationEntity(varCloudCredentialsForOrganizationEntity)

	return err
}

type NullableCloudCredentialsForOrganizationEntity struct {
	value *CloudCredentialsForOrganizationEntity
	isSet bool
}

func (v NullableCloudCredentialsForOrganizationEntity) Get() *CloudCredentialsForOrganizationEntity {
	return v.value
}

func (v *NullableCloudCredentialsForOrganizationEntity) Set(val *CloudCredentialsForOrganizationEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudCredentialsForOrganizationEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudCredentialsForOrganizationEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudCredentialsForOrganizationEntity(val *CloudCredentialsForOrganizationEntity) *NullableCloudCredentialsForOrganizationEntity {
	return &NullableCloudCredentialsForOrganizationEntity{value: val, isSet: true}
}

func (v NullableCloudCredentialsForOrganizationEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudCredentialsForOrganizationEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


