/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the ProjectsLogsCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectsLogsCommand{}

// ProjectsLogsCommand struct for ProjectsLogsCommand
type ProjectsLogsCommand struct {
	Query *LokiLogsQuery `json:"query,omitempty"`
}

// NewProjectsLogsCommand instantiates a new ProjectsLogsCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectsLogsCommand() *ProjectsLogsCommand {
	this := ProjectsLogsCommand{}
	return &this
}

// NewProjectsLogsCommandWithDefaults instantiates a new ProjectsLogsCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectsLogsCommandWithDefaults() *ProjectsLogsCommand {
	this := ProjectsLogsCommand{}
	return &this
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *ProjectsLogsCommand) GetQuery() LokiLogsQuery {
	if o == nil || IsNil(o.Query) {
		var ret LokiLogsQuery
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsLogsCommand) GetQueryOk() (*LokiLogsQuery, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *ProjectsLogsCommand) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given LokiLogsQuery and assigns it to the Query field.
func (o *ProjectsLogsCommand) SetQuery(v LokiLogsQuery) {
	o.Query = &v
}

func (o ProjectsLogsCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectsLogsCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	return toSerialize, nil
}

type NullableProjectsLogsCommand struct {
	value *ProjectsLogsCommand
	isSet bool
}

func (v NullableProjectsLogsCommand) Get() *ProjectsLogsCommand {
	return v.value
}

func (v *NullableProjectsLogsCommand) Set(val *ProjectsLogsCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectsLogsCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectsLogsCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectsLogsCommand(val *ProjectsLogsCommand) *NullableProjectsLogsCommand {
	return &NullableProjectsLogsCommand{value: val, isSet: true}
}

func (v NullableProjectsLogsCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectsLogsCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


