/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the ProjectListDetailDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectListDetailDto{}

// ProjectListDetailDto struct for ProjectListDetailDto
type ProjectListDetailDto struct {
	Id                       *int32          `json:"id,omitempty"`
	Name                     NullableString  `json:"name,omitempty"`
	IsKubernetes             *bool           `json:"isKubernetes,omitempty"`
	IsLocked                 *bool           `json:"isLocked,omitempty"`
	HasKubeConfigFile        *bool           `json:"hasKubeConfigFile,omitempty"`
	CloudCredentialName      NullableString  `json:"cloudCredentialName,omitempty"`
	OrganizationName         NullableString  `json:"organizationName,omitempty"`
	OrganizationId           *int32          `json:"organizationId,omitempty"`
	Status                   NullableString  `json:"status,omitempty"`
	Health                   NullableString  `json:"health,omitempty"`
	CloudType                NullableString  `json:"cloudType,omitempty"`
	KubesprayCurrentVersion  NullableString  `json:"kubesprayCurrentVersion,omitempty"`
	KubesprayTargetVersion   NullableString  `json:"kubesprayTargetVersion,omitempty"`
	KubernetesCurrentVersion NullableString  `json:"kubernetesCurrentVersion,omitempty"`
	KubernetesTargetVersion  NullableString  `json:"kubernetesTargetVersion,omitempty"`
	CreatedAt                NullableString  `json:"createdAt,omitempty"`
	AlertsCount              *int32          `json:"alertsCount,omitempty"`
	TotalServersCount        *int32          `json:"totalServersCount,omitempty"`
	TotalStandaloneVmsCount  *int32          `json:"totalStandaloneVmsCount,omitempty"`
	BoundUsers               []UserDto       `json:"boundUsers,omitempty"`
	CreatedBy                NullableString  `json:"createdBy,omitempty"`
	LastModified             NullableString  `json:"lastModified,omitempty"`
	ExpiredAt                NullableString  `json:"expiredAt,omitempty"`
	DeleteOnExpiration       *bool           `json:"deleteOnExpiration,omitempty"`
	CertificateExpiredAt     NullableString  `json:"certificateExpiredAt,omitempty"`
	LastModifiedBy           NullableString  `json:"lastModifiedBy,omitempty"`
	QuotaId                  *int32          `json:"quotaId,omitempty"`
	AllowFullSpotKubernetes  *bool           `json:"allowFullSpotKubernetes,omitempty"`
	AllowSpotWorkers         *bool           `json:"allowSpotWorkers,omitempty"`
	AllowSpotVMs             *bool           `json:"allowSpotVMs,omitempty"`
	MaxSpotPrice             NullableFloat64 `json:"maxSpotPrice,omitempty"`
	ProjectAction            *bool           `json:"projectAction,omitempty"`
	HasExpirationWarning     *bool           `json:"hasExpirationWarning,omitempty"`
	TotalHourlyCost          *float64        `json:"totalHourlyCost,omitempty"`
	IsAutoscalingEnabled     *bool           `json:"isAutoscalingEnabled,omitempty"`
	AiEnabled                *bool           `json:"aiEnabled,omitempty"`
}

// NewProjectListDetailDto instantiates a new ProjectListDetailDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectListDetailDto() *ProjectListDetailDto {
	this := ProjectListDetailDto{}
	return &this
}

// NewProjectListDetailDtoWithDefaults instantiates a new ProjectListDetailDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectListDetailDtoWithDefaults() *ProjectListDetailDto {
	this := ProjectListDetailDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ProjectListDetailDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectListDetailDto) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectListDetailDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ProjectListDetailDto) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *ProjectListDetailDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ProjectListDetailDto) UnsetName() {
	o.Name.Unset()
}

// GetIsKubernetes returns the IsKubernetes field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetIsKubernetes() bool {
	if o == nil || IsNil(o.IsKubernetes) {
		var ret bool
		return ret
	}
	return *o.IsKubernetes
}

// GetIsKubernetesOk returns a tuple with the IsKubernetes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetIsKubernetesOk() (*bool, bool) {
	if o == nil || IsNil(o.IsKubernetes) {
		return nil, false
	}
	return o.IsKubernetes, true
}

// HasIsKubernetes returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasIsKubernetes() bool {
	if o != nil && !IsNil(o.IsKubernetes) {
		return true
	}

	return false
}

// SetIsKubernetes gets a reference to the given bool and assigns it to the IsKubernetes field.
func (o *ProjectListDetailDto) SetIsKubernetes(v bool) {
	o.IsKubernetes = &v
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetIsLocked() bool {
	if o == nil || IsNil(o.IsLocked) {
		var ret bool
		return ret
	}
	return *o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetIsLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocked) {
		return nil, false
	}
	return o.IsLocked, true
}

// HasIsLocked returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasIsLocked() bool {
	if o != nil && !IsNil(o.IsLocked) {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given bool and assigns it to the IsLocked field.
func (o *ProjectListDetailDto) SetIsLocked(v bool) {
	o.IsLocked = &v
}

// GetHasKubeConfigFile returns the HasKubeConfigFile field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetHasKubeConfigFile() bool {
	if o == nil || IsNil(o.HasKubeConfigFile) {
		var ret bool
		return ret
	}
	return *o.HasKubeConfigFile
}

// GetHasKubeConfigFileOk returns a tuple with the HasKubeConfigFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetHasKubeConfigFileOk() (*bool, bool) {
	if o == nil || IsNil(o.HasKubeConfigFile) {
		return nil, false
	}
	return o.HasKubeConfigFile, true
}

// HasHasKubeConfigFile returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasHasKubeConfigFile() bool {
	if o != nil && !IsNil(o.HasKubeConfigFile) {
		return true
	}

	return false
}

// SetHasKubeConfigFile gets a reference to the given bool and assigns it to the HasKubeConfigFile field.
func (o *ProjectListDetailDto) SetHasKubeConfigFile(v bool) {
	o.HasKubeConfigFile = &v
}

// GetCloudCredentialName returns the CloudCredentialName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectListDetailDto) GetCloudCredentialName() string {
	if o == nil || IsNil(o.CloudCredentialName.Get()) {
		var ret string
		return ret
	}
	return *o.CloudCredentialName.Get()
}

// GetCloudCredentialNameOk returns a tuple with the CloudCredentialName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectListDetailDto) GetCloudCredentialNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloudCredentialName.Get(), o.CloudCredentialName.IsSet()
}

// HasCloudCredentialName returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasCloudCredentialName() bool {
	if o != nil && o.CloudCredentialName.IsSet() {
		return true
	}

	return false
}

// SetCloudCredentialName gets a reference to the given NullableString and assigns it to the CloudCredentialName field.
func (o *ProjectListDetailDto) SetCloudCredentialName(v string) {
	o.CloudCredentialName.Set(&v)
}

// SetCloudCredentialNameNil sets the value for CloudCredentialName to be an explicit nil
func (o *ProjectListDetailDto) SetCloudCredentialNameNil() {
	o.CloudCredentialName.Set(nil)
}

// UnsetCloudCredentialName ensures that no value is present for CloudCredentialName, not even an explicit nil
func (o *ProjectListDetailDto) UnsetCloudCredentialName() {
	o.CloudCredentialName.Unset()
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectListDetailDto) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizationName.Get()
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectListDetailDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationName.Get(), o.OrganizationName.IsSet()
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasOrganizationName() bool {
	if o != nil && o.OrganizationName.IsSet() {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given NullableString and assigns it to the OrganizationName field.
func (o *ProjectListDetailDto) SetOrganizationName(v string) {
	o.OrganizationName.Set(&v)
}

// SetOrganizationNameNil sets the value for OrganizationName to be an explicit nil
func (o *ProjectListDetailDto) SetOrganizationNameNil() {
	o.OrganizationName.Set(nil)
}

// UnsetOrganizationName ensures that no value is present for OrganizationName, not even an explicit nil
func (o *ProjectListDetailDto) UnsetOrganizationName() {
	o.OrganizationName.Unset()
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *ProjectListDetailDto) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectListDetailDto) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectListDetailDto) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *ProjectListDetailDto) SetStatus(v string) {
	o.Status.Set(&v)
}

// SetStatusNil sets the value for Status to be an explicit nil
func (o *ProjectListDetailDto) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *ProjectListDetailDto) UnsetStatus() {
	o.Status.Unset()
}

// GetHealth returns the Health field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectListDetailDto) GetHealth() string {
	if o == nil || IsNil(o.Health.Get()) {
		var ret string
		return ret
	}
	return *o.Health.Get()
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectListDetailDto) GetHealthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Health.Get(), o.Health.IsSet()
}

// HasHealth returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasHealth() bool {
	if o != nil && o.Health.IsSet() {
		return true
	}

	return false
}

// SetHealth gets a reference to the given NullableString and assigns it to the Health field.
func (o *ProjectListDetailDto) SetHealth(v string) {
	o.Health.Set(&v)
}

// SetHealthNil sets the value for Health to be an explicit nil
func (o *ProjectListDetailDto) SetHealthNil() {
	o.Health.Set(nil)
}

// UnsetHealth ensures that no value is present for Health, not even an explicit nil
func (o *ProjectListDetailDto) UnsetHealth() {
	o.Health.Unset()
}

// GetCloudType returns the CloudType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectListDetailDto) GetCloudType() string {
	if o == nil || IsNil(o.CloudType.Get()) {
		var ret string
		return ret
	}
	return *o.CloudType.Get()
}

// GetCloudTypeOk returns a tuple with the CloudType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectListDetailDto) GetCloudTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloudType.Get(), o.CloudType.IsSet()
}

// HasCloudType returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasCloudType() bool {
	if o != nil && o.CloudType.IsSet() {
		return true
	}

	return false
}

// SetCloudType gets a reference to the given NullableString and assigns it to the CloudType field.
func (o *ProjectListDetailDto) SetCloudType(v string) {
	o.CloudType.Set(&v)
}

// SetCloudTypeNil sets the value for CloudType to be an explicit nil
func (o *ProjectListDetailDto) SetCloudTypeNil() {
	o.CloudType.Set(nil)
}

// UnsetCloudType ensures that no value is present for CloudType, not even an explicit nil
func (o *ProjectListDetailDto) UnsetCloudType() {
	o.CloudType.Unset()
}

// GetKubesprayCurrentVersion returns the KubesprayCurrentVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectListDetailDto) GetKubesprayCurrentVersion() string {
	if o == nil || IsNil(o.KubesprayCurrentVersion.Get()) {
		var ret string
		return ret
	}
	return *o.KubesprayCurrentVersion.Get()
}

// GetKubesprayCurrentVersionOk returns a tuple with the KubesprayCurrentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectListDetailDto) GetKubesprayCurrentVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KubesprayCurrentVersion.Get(), o.KubesprayCurrentVersion.IsSet()
}

// HasKubesprayCurrentVersion returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasKubesprayCurrentVersion() bool {
	if o != nil && o.KubesprayCurrentVersion.IsSet() {
		return true
	}

	return false
}

// SetKubesprayCurrentVersion gets a reference to the given NullableString and assigns it to the KubesprayCurrentVersion field.
func (o *ProjectListDetailDto) SetKubesprayCurrentVersion(v string) {
	o.KubesprayCurrentVersion.Set(&v)
}

// SetKubesprayCurrentVersionNil sets the value for KubesprayCurrentVersion to be an explicit nil
func (o *ProjectListDetailDto) SetKubesprayCurrentVersionNil() {
	o.KubesprayCurrentVersion.Set(nil)
}

// UnsetKubesprayCurrentVersion ensures that no value is present for KubesprayCurrentVersion, not even an explicit nil
func (o *ProjectListDetailDto) UnsetKubesprayCurrentVersion() {
	o.KubesprayCurrentVersion.Unset()
}

// GetKubesprayTargetVersion returns the KubesprayTargetVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectListDetailDto) GetKubesprayTargetVersion() string {
	if o == nil || IsNil(o.KubesprayTargetVersion.Get()) {
		var ret string
		return ret
	}
	return *o.KubesprayTargetVersion.Get()
}

// GetKubesprayTargetVersionOk returns a tuple with the KubesprayTargetVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectListDetailDto) GetKubesprayTargetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KubesprayTargetVersion.Get(), o.KubesprayTargetVersion.IsSet()
}

// HasKubesprayTargetVersion returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasKubesprayTargetVersion() bool {
	if o != nil && o.KubesprayTargetVersion.IsSet() {
		return true
	}

	return false
}

// SetKubesprayTargetVersion gets a reference to the given NullableString and assigns it to the KubesprayTargetVersion field.
func (o *ProjectListDetailDto) SetKubesprayTargetVersion(v string) {
	o.KubesprayTargetVersion.Set(&v)
}

// SetKubesprayTargetVersionNil sets the value for KubesprayTargetVersion to be an explicit nil
func (o *ProjectListDetailDto) SetKubesprayTargetVersionNil() {
	o.KubesprayTargetVersion.Set(nil)
}

// UnsetKubesprayTargetVersion ensures that no value is present for KubesprayTargetVersion, not even an explicit nil
func (o *ProjectListDetailDto) UnsetKubesprayTargetVersion() {
	o.KubesprayTargetVersion.Unset()
}

// GetKubernetesCurrentVersion returns the KubernetesCurrentVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectListDetailDto) GetKubernetesCurrentVersion() string {
	if o == nil || IsNil(o.KubernetesCurrentVersion.Get()) {
		var ret string
		return ret
	}
	return *o.KubernetesCurrentVersion.Get()
}

// GetKubernetesCurrentVersionOk returns a tuple with the KubernetesCurrentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectListDetailDto) GetKubernetesCurrentVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KubernetesCurrentVersion.Get(), o.KubernetesCurrentVersion.IsSet()
}

// HasKubernetesCurrentVersion returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasKubernetesCurrentVersion() bool {
	if o != nil && o.KubernetesCurrentVersion.IsSet() {
		return true
	}

	return false
}

// SetKubernetesCurrentVersion gets a reference to the given NullableString and assigns it to the KubernetesCurrentVersion field.
func (o *ProjectListDetailDto) SetKubernetesCurrentVersion(v string) {
	o.KubernetesCurrentVersion.Set(&v)
}

// SetKubernetesCurrentVersionNil sets the value for KubernetesCurrentVersion to be an explicit nil
func (o *ProjectListDetailDto) SetKubernetesCurrentVersionNil() {
	o.KubernetesCurrentVersion.Set(nil)
}

// UnsetKubernetesCurrentVersion ensures that no value is present for KubernetesCurrentVersion, not even an explicit nil
func (o *ProjectListDetailDto) UnsetKubernetesCurrentVersion() {
	o.KubernetesCurrentVersion.Unset()
}

// GetKubernetesTargetVersion returns the KubernetesTargetVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectListDetailDto) GetKubernetesTargetVersion() string {
	if o == nil || IsNil(o.KubernetesTargetVersion.Get()) {
		var ret string
		return ret
	}
	return *o.KubernetesTargetVersion.Get()
}

// GetKubernetesTargetVersionOk returns a tuple with the KubernetesTargetVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectListDetailDto) GetKubernetesTargetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KubernetesTargetVersion.Get(), o.KubernetesTargetVersion.IsSet()
}

// HasKubernetesTargetVersion returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasKubernetesTargetVersion() bool {
	if o != nil && o.KubernetesTargetVersion.IsSet() {
		return true
	}

	return false
}

// SetKubernetesTargetVersion gets a reference to the given NullableString and assigns it to the KubernetesTargetVersion field.
func (o *ProjectListDetailDto) SetKubernetesTargetVersion(v string) {
	o.KubernetesTargetVersion.Set(&v)
}

// SetKubernetesTargetVersionNil sets the value for KubernetesTargetVersion to be an explicit nil
func (o *ProjectListDetailDto) SetKubernetesTargetVersionNil() {
	o.KubernetesTargetVersion.Set(nil)
}

// UnsetKubernetesTargetVersion ensures that no value is present for KubernetesTargetVersion, not even an explicit nil
func (o *ProjectListDetailDto) UnsetKubernetesTargetVersion() {
	o.KubernetesTargetVersion.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectListDetailDto) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectListDetailDto) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableString and assigns it to the CreatedAt field.
func (o *ProjectListDetailDto) SetCreatedAt(v string) {
	o.CreatedAt.Set(&v)
}

// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *ProjectListDetailDto) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *ProjectListDetailDto) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetAlertsCount returns the AlertsCount field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetAlertsCount() int32 {
	if o == nil || IsNil(o.AlertsCount) {
		var ret int32
		return ret
	}
	return *o.AlertsCount
}

// GetAlertsCountOk returns a tuple with the AlertsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetAlertsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AlertsCount) {
		return nil, false
	}
	return o.AlertsCount, true
}

// HasAlertsCount returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasAlertsCount() bool {
	if o != nil && !IsNil(o.AlertsCount) {
		return true
	}

	return false
}

// SetAlertsCount gets a reference to the given int32 and assigns it to the AlertsCount field.
func (o *ProjectListDetailDto) SetAlertsCount(v int32) {
	o.AlertsCount = &v
}

// GetTotalServersCount returns the TotalServersCount field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetTotalServersCount() int32 {
	if o == nil || IsNil(o.TotalServersCount) {
		var ret int32
		return ret
	}
	return *o.TotalServersCount
}

// GetTotalServersCountOk returns a tuple with the TotalServersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetTotalServersCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalServersCount) {
		return nil, false
	}
	return o.TotalServersCount, true
}

// HasTotalServersCount returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasTotalServersCount() bool {
	if o != nil && !IsNil(o.TotalServersCount) {
		return true
	}

	return false
}

// SetTotalServersCount gets a reference to the given int32 and assigns it to the TotalServersCount field.
func (o *ProjectListDetailDto) SetTotalServersCount(v int32) {
	o.TotalServersCount = &v
}

// GetTotalStandaloneVmsCount returns the TotalStandaloneVmsCount field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetTotalStandaloneVmsCount() int32 {
	if o == nil || IsNil(o.TotalStandaloneVmsCount) {
		var ret int32
		return ret
	}
	return *o.TotalStandaloneVmsCount
}

// GetTotalStandaloneVmsCountOk returns a tuple with the TotalStandaloneVmsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetTotalStandaloneVmsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalStandaloneVmsCount) {
		return nil, false
	}
	return o.TotalStandaloneVmsCount, true
}

// HasTotalStandaloneVmsCount returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasTotalStandaloneVmsCount() bool {
	if o != nil && !IsNil(o.TotalStandaloneVmsCount) {
		return true
	}

	return false
}

// SetTotalStandaloneVmsCount gets a reference to the given int32 and assigns it to the TotalStandaloneVmsCount field.
func (o *ProjectListDetailDto) SetTotalStandaloneVmsCount(v int32) {
	o.TotalStandaloneVmsCount = &v
}

// GetBoundUsers returns the BoundUsers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectListDetailDto) GetBoundUsers() []UserDto {
	if o == nil {
		var ret []UserDto
		return ret
	}
	return o.BoundUsers
}

// GetBoundUsersOk returns a tuple with the BoundUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectListDetailDto) GetBoundUsersOk() ([]UserDto, bool) {
	if o == nil || IsNil(o.BoundUsers) {
		return nil, false
	}
	return o.BoundUsers, true
}

// HasBoundUsers returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasBoundUsers() bool {
	if o != nil && IsNil(o.BoundUsers) {
		return true
	}

	return false
}

// SetBoundUsers gets a reference to the given []UserDto and assigns it to the BoundUsers field.
func (o *ProjectListDetailDto) SetBoundUsers(v []UserDto) {
	o.BoundUsers = v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectListDetailDto) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectListDetailDto) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasCreatedBy() bool {
	if o != nil && o.CreatedBy.IsSet() {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given NullableString and assigns it to the CreatedBy field.
func (o *ProjectListDetailDto) SetCreatedBy(v string) {
	o.CreatedBy.Set(&v)
}

// SetCreatedByNil sets the value for CreatedBy to be an explicit nil
func (o *ProjectListDetailDto) SetCreatedByNil() {
	o.CreatedBy.Set(nil)
}

// UnsetCreatedBy ensures that no value is present for CreatedBy, not even an explicit nil
func (o *ProjectListDetailDto) UnsetCreatedBy() {
	o.CreatedBy.Unset()
}

// GetLastModified returns the LastModified field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectListDetailDto) GetLastModified() string {
	if o == nil || IsNil(o.LastModified.Get()) {
		var ret string
		return ret
	}
	return *o.LastModified.Get()
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectListDetailDto) GetLastModifiedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModified.Get(), o.LastModified.IsSet()
}

// HasLastModified returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasLastModified() bool {
	if o != nil && o.LastModified.IsSet() {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given NullableString and assigns it to the LastModified field.
func (o *ProjectListDetailDto) SetLastModified(v string) {
	o.LastModified.Set(&v)
}

// SetLastModifiedNil sets the value for LastModified to be an explicit nil
func (o *ProjectListDetailDto) SetLastModifiedNil() {
	o.LastModified.Set(nil)
}

// UnsetLastModified ensures that no value is present for LastModified, not even an explicit nil
func (o *ProjectListDetailDto) UnsetLastModified() {
	o.LastModified.Unset()
}

// GetExpiredAt returns the ExpiredAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectListDetailDto) GetExpiredAt() string {
	if o == nil || IsNil(o.ExpiredAt.Get()) {
		var ret string
		return ret
	}
	return *o.ExpiredAt.Get()
}

// GetExpiredAtOk returns a tuple with the ExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectListDetailDto) GetExpiredAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiredAt.Get(), o.ExpiredAt.IsSet()
}

// HasExpiredAt returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasExpiredAt() bool {
	if o != nil && o.ExpiredAt.IsSet() {
		return true
	}

	return false
}

// SetExpiredAt gets a reference to the given NullableString and assigns it to the ExpiredAt field.
func (o *ProjectListDetailDto) SetExpiredAt(v string) {
	o.ExpiredAt.Set(&v)
}

// SetExpiredAtNil sets the value for ExpiredAt to be an explicit nil
func (o *ProjectListDetailDto) SetExpiredAtNil() {
	o.ExpiredAt.Set(nil)
}

// UnsetExpiredAt ensures that no value is present for ExpiredAt, not even an explicit nil
func (o *ProjectListDetailDto) UnsetExpiredAt() {
	o.ExpiredAt.Unset()
}

// GetDeleteOnExpiration returns the DeleteOnExpiration field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetDeleteOnExpiration() bool {
	if o == nil || IsNil(o.DeleteOnExpiration) {
		var ret bool
		return ret
	}
	return *o.DeleteOnExpiration
}

// GetDeleteOnExpirationOk returns a tuple with the DeleteOnExpiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetDeleteOnExpirationOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteOnExpiration) {
		return nil, false
	}
	return o.DeleteOnExpiration, true
}

// HasDeleteOnExpiration returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasDeleteOnExpiration() bool {
	if o != nil && !IsNil(o.DeleteOnExpiration) {
		return true
	}

	return false
}

// SetDeleteOnExpiration gets a reference to the given bool and assigns it to the DeleteOnExpiration field.
func (o *ProjectListDetailDto) SetDeleteOnExpiration(v bool) {
	o.DeleteOnExpiration = &v
}

// GetCertificateExpiredAt returns the CertificateExpiredAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectListDetailDto) GetCertificateExpiredAt() string {
	if o == nil || IsNil(o.CertificateExpiredAt.Get()) {
		var ret string
		return ret
	}
	return *o.CertificateExpiredAt.Get()
}

// GetCertificateExpiredAtOk returns a tuple with the CertificateExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectListDetailDto) GetCertificateExpiredAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CertificateExpiredAt.Get(), o.CertificateExpiredAt.IsSet()
}

// HasCertificateExpiredAt returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasCertificateExpiredAt() bool {
	if o != nil && o.CertificateExpiredAt.IsSet() {
		return true
	}

	return false
}

// SetCertificateExpiredAt gets a reference to the given NullableString and assigns it to the CertificateExpiredAt field.
func (o *ProjectListDetailDto) SetCertificateExpiredAt(v string) {
	o.CertificateExpiredAt.Set(&v)
}

// SetCertificateExpiredAtNil sets the value for CertificateExpiredAt to be an explicit nil
func (o *ProjectListDetailDto) SetCertificateExpiredAtNil() {
	o.CertificateExpiredAt.Set(nil)
}

// UnsetCertificateExpiredAt ensures that no value is present for CertificateExpiredAt, not even an explicit nil
func (o *ProjectListDetailDto) UnsetCertificateExpiredAt() {
	o.CertificateExpiredAt.Unset()
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectListDetailDto) GetLastModifiedBy() string {
	if o == nil || IsNil(o.LastModifiedBy.Get()) {
		var ret string
		return ret
	}
	return *o.LastModifiedBy.Get()
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectListDetailDto) GetLastModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModifiedBy.Get(), o.LastModifiedBy.IsSet()
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasLastModifiedBy() bool {
	if o != nil && o.LastModifiedBy.IsSet() {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given NullableString and assigns it to the LastModifiedBy field.
func (o *ProjectListDetailDto) SetLastModifiedBy(v string) {
	o.LastModifiedBy.Set(&v)
}

// SetLastModifiedByNil sets the value for LastModifiedBy to be an explicit nil
func (o *ProjectListDetailDto) SetLastModifiedByNil() {
	o.LastModifiedBy.Set(nil)
}

// UnsetLastModifiedBy ensures that no value is present for LastModifiedBy, not even an explicit nil
func (o *ProjectListDetailDto) UnsetLastModifiedBy() {
	o.LastModifiedBy.Unset()
}

// GetQuotaId returns the QuotaId field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetQuotaId() int32 {
	if o == nil || IsNil(o.QuotaId) {
		var ret int32
		return ret
	}
	return *o.QuotaId
}

// GetQuotaIdOk returns a tuple with the QuotaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetQuotaIdOk() (*int32, bool) {
	if o == nil || IsNil(o.QuotaId) {
		return nil, false
	}
	return o.QuotaId, true
}

// HasQuotaId returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasQuotaId() bool {
	if o != nil && !IsNil(o.QuotaId) {
		return true
	}

	return false
}

// SetQuotaId gets a reference to the given int32 and assigns it to the QuotaId field.
func (o *ProjectListDetailDto) SetQuotaId(v int32) {
	o.QuotaId = &v
}

// GetAllowFullSpotKubernetes returns the AllowFullSpotKubernetes field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetAllowFullSpotKubernetes() bool {
	if o == nil || IsNil(o.AllowFullSpotKubernetes) {
		var ret bool
		return ret
	}
	return *o.AllowFullSpotKubernetes
}

// GetAllowFullSpotKubernetesOk returns a tuple with the AllowFullSpotKubernetes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetAllowFullSpotKubernetesOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowFullSpotKubernetes) {
		return nil, false
	}
	return o.AllowFullSpotKubernetes, true
}

// HasAllowFullSpotKubernetes returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasAllowFullSpotKubernetes() bool {
	if o != nil && !IsNil(o.AllowFullSpotKubernetes) {
		return true
	}

	return false
}

// SetAllowFullSpotKubernetes gets a reference to the given bool and assigns it to the AllowFullSpotKubernetes field.
func (o *ProjectListDetailDto) SetAllowFullSpotKubernetes(v bool) {
	o.AllowFullSpotKubernetes = &v
}

// GetAllowSpotWorkers returns the AllowSpotWorkers field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetAllowSpotWorkers() bool {
	if o == nil || IsNil(o.AllowSpotWorkers) {
		var ret bool
		return ret
	}
	return *o.AllowSpotWorkers
}

// GetAllowSpotWorkersOk returns a tuple with the AllowSpotWorkers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetAllowSpotWorkersOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSpotWorkers) {
		return nil, false
	}
	return o.AllowSpotWorkers, true
}

// HasAllowSpotWorkers returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasAllowSpotWorkers() bool {
	if o != nil && !IsNil(o.AllowSpotWorkers) {
		return true
	}

	return false
}

// SetAllowSpotWorkers gets a reference to the given bool and assigns it to the AllowSpotWorkers field.
func (o *ProjectListDetailDto) SetAllowSpotWorkers(v bool) {
	o.AllowSpotWorkers = &v
}

// GetAllowSpotVMs returns the AllowSpotVMs field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetAllowSpotVMs() bool {
	if o == nil || IsNil(o.AllowSpotVMs) {
		var ret bool
		return ret
	}
	return *o.AllowSpotVMs
}

// GetAllowSpotVMsOk returns a tuple with the AllowSpotVMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetAllowSpotVMsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSpotVMs) {
		return nil, false
	}
	return o.AllowSpotVMs, true
}

// HasAllowSpotVMs returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasAllowSpotVMs() bool {
	if o != nil && !IsNil(o.AllowSpotVMs) {
		return true
	}

	return false
}

// SetAllowSpotVMs gets a reference to the given bool and assigns it to the AllowSpotVMs field.
func (o *ProjectListDetailDto) SetAllowSpotVMs(v bool) {
	o.AllowSpotVMs = &v
}

// GetMaxSpotPrice returns the MaxSpotPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectListDetailDto) GetMaxSpotPrice() float64 {
	if o == nil || IsNil(o.MaxSpotPrice.Get()) {
		var ret float64
		return ret
	}
	return *o.MaxSpotPrice.Get()
}

// GetMaxSpotPriceOk returns a tuple with the MaxSpotPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectListDetailDto) GetMaxSpotPriceOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxSpotPrice.Get(), o.MaxSpotPrice.IsSet()
}

// HasMaxSpotPrice returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasMaxSpotPrice() bool {
	if o != nil && o.MaxSpotPrice.IsSet() {
		return true
	}

	return false
}

// SetMaxSpotPrice gets a reference to the given NullableFloat64 and assigns it to the MaxSpotPrice field.
func (o *ProjectListDetailDto) SetMaxSpotPrice(v float64) {
	o.MaxSpotPrice.Set(&v)
}

// SetMaxSpotPriceNil sets the value for MaxSpotPrice to be an explicit nil
func (o *ProjectListDetailDto) SetMaxSpotPriceNil() {
	o.MaxSpotPrice.Set(nil)
}

// UnsetMaxSpotPrice ensures that no value is present for MaxSpotPrice, not even an explicit nil
func (o *ProjectListDetailDto) UnsetMaxSpotPrice() {
	o.MaxSpotPrice.Unset()
}

// GetProjectAction returns the ProjectAction field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetProjectAction() bool {
	if o == nil || IsNil(o.ProjectAction) {
		var ret bool
		return ret
	}
	return *o.ProjectAction
}

// GetProjectActionOk returns a tuple with the ProjectAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetProjectActionOk() (*bool, bool) {
	if o == nil || IsNil(o.ProjectAction) {
		return nil, false
	}
	return o.ProjectAction, true
}

// HasProjectAction returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasProjectAction() bool {
	if o != nil && !IsNil(o.ProjectAction) {
		return true
	}

	return false
}

// SetProjectAction gets a reference to the given bool and assigns it to the ProjectAction field.
func (o *ProjectListDetailDto) SetProjectAction(v bool) {
	o.ProjectAction = &v
}

// GetHasExpirationWarning returns the HasExpirationWarning field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetHasExpirationWarning() bool {
	if o == nil || IsNil(o.HasExpirationWarning) {
		var ret bool
		return ret
	}
	return *o.HasExpirationWarning
}

// GetHasExpirationWarningOk returns a tuple with the HasExpirationWarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetHasExpirationWarningOk() (*bool, bool) {
	if o == nil || IsNil(o.HasExpirationWarning) {
		return nil, false
	}
	return o.HasExpirationWarning, true
}

// HasHasExpirationWarning returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasHasExpirationWarning() bool {
	if o != nil && !IsNil(o.HasExpirationWarning) {
		return true
	}

	return false
}

// SetHasExpirationWarning gets a reference to the given bool and assigns it to the HasExpirationWarning field.
func (o *ProjectListDetailDto) SetHasExpirationWarning(v bool) {
	o.HasExpirationWarning = &v
}

// GetTotalHourlyCost returns the TotalHourlyCost field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetTotalHourlyCost() float64 {
	if o == nil || IsNil(o.TotalHourlyCost) {
		var ret float64
		return ret
	}
	return *o.TotalHourlyCost
}

// GetTotalHourlyCostOk returns a tuple with the TotalHourlyCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetTotalHourlyCostOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalHourlyCost) {
		return nil, false
	}
	return o.TotalHourlyCost, true
}

// HasTotalHourlyCost returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasTotalHourlyCost() bool {
	if o != nil && !IsNil(o.TotalHourlyCost) {
		return true
	}

	return false
}

// SetTotalHourlyCost gets a reference to the given float64 and assigns it to the TotalHourlyCost field.
func (o *ProjectListDetailDto) SetTotalHourlyCost(v float64) {
	o.TotalHourlyCost = &v
}

// GetIsAutoscalingEnabled returns the IsAutoscalingEnabled field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetIsAutoscalingEnabled() bool {
	if o == nil || IsNil(o.IsAutoscalingEnabled) {
		var ret bool
		return ret
	}
	return *o.IsAutoscalingEnabled
}

// GetIsAutoscalingEnabledOk returns a tuple with the IsAutoscalingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetIsAutoscalingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutoscalingEnabled) {
		return nil, false
	}
	return o.IsAutoscalingEnabled, true
}

// HasIsAutoscalingEnabled returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasIsAutoscalingEnabled() bool {
	if o != nil && !IsNil(o.IsAutoscalingEnabled) {
		return true
	}

	return false
}

// SetIsAutoscalingEnabled gets a reference to the given bool and assigns it to the IsAutoscalingEnabled field.
func (o *ProjectListDetailDto) SetIsAutoscalingEnabled(v bool) {
	o.IsAutoscalingEnabled = &v
}

// GetAiEnabled returns the AiEnabled field value if set, zero value otherwise.
func (o *ProjectListDetailDto) GetAiEnabled() bool {
	if o == nil || IsNil(o.AiEnabled) {
		var ret bool
		return ret
	}
	return *o.AiEnabled
}

// GetAiEnabledOk returns a tuple with the AiEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectListDetailDto) GetAiEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AiEnabled) {
		return nil, false
	}
	return o.AiEnabled, true
}

// HasAiEnabled returns a boolean if a field has been set.
func (o *ProjectListDetailDto) HasAiEnabled() bool {
	if o != nil && !IsNil(o.AiEnabled) {
		return true
	}

	return false
}

// SetAiEnabled gets a reference to the given bool and assigns it to the AiEnabled field.
func (o *ProjectListDetailDto) SetAiEnabled(v bool) {
	o.AiEnabled = &v
}

func (o ProjectListDetailDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectListDetailDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if !IsNil(o.IsKubernetes) {
		toSerialize["isKubernetes"] = o.IsKubernetes
	}
	if !IsNil(o.IsLocked) {
		toSerialize["isLocked"] = o.IsLocked
	}
	if !IsNil(o.HasKubeConfigFile) {
		toSerialize["hasKubeConfigFile"] = o.HasKubeConfigFile
	}
	if o.CloudCredentialName.IsSet() {
		toSerialize["cloudCredentialName"] = o.CloudCredentialName.Get()
	}
	if o.OrganizationName.IsSet() {
		toSerialize["organizationName"] = o.OrganizationName.Get()
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Health.IsSet() {
		toSerialize["health"] = o.Health.Get()
	}
	if o.CloudType.IsSet() {
		toSerialize["cloudType"] = o.CloudType.Get()
	}
	if o.KubesprayCurrentVersion.IsSet() {
		toSerialize["kubesprayCurrentVersion"] = o.KubesprayCurrentVersion.Get()
	}
	if o.KubesprayTargetVersion.IsSet() {
		toSerialize["kubesprayTargetVersion"] = o.KubesprayTargetVersion.Get()
	}
	if o.KubernetesCurrentVersion.IsSet() {
		toSerialize["kubernetesCurrentVersion"] = o.KubernetesCurrentVersion.Get()
	}
	if o.KubernetesTargetVersion.IsSet() {
		toSerialize["kubernetesTargetVersion"] = o.KubernetesTargetVersion.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["createdAt"] = o.CreatedAt.Get()
	}
	if !IsNil(o.AlertsCount) {
		toSerialize["alertsCount"] = o.AlertsCount
	}
	if !IsNil(o.TotalServersCount) {
		toSerialize["totalServersCount"] = o.TotalServersCount
	}
	if !IsNil(o.TotalStandaloneVmsCount) {
		toSerialize["totalStandaloneVmsCount"] = o.TotalStandaloneVmsCount
	}
	if o.BoundUsers != nil {
		toSerialize["boundUsers"] = o.BoundUsers
	}
	if o.CreatedBy.IsSet() {
		toSerialize["createdBy"] = o.CreatedBy.Get()
	}
	if o.LastModified.IsSet() {
		toSerialize["lastModified"] = o.LastModified.Get()
	}
	if o.ExpiredAt.IsSet() {
		toSerialize["expiredAt"] = o.ExpiredAt.Get()
	}
	if !IsNil(o.DeleteOnExpiration) {
		toSerialize["deleteOnExpiration"] = o.DeleteOnExpiration
	}
	if o.CertificateExpiredAt.IsSet() {
		toSerialize["certificateExpiredAt"] = o.CertificateExpiredAt.Get()
	}
	if o.LastModifiedBy.IsSet() {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy.Get()
	}
	if !IsNil(o.QuotaId) {
		toSerialize["quotaId"] = o.QuotaId
	}
	if !IsNil(o.AllowFullSpotKubernetes) {
		toSerialize["allowFullSpotKubernetes"] = o.AllowFullSpotKubernetes
	}
	if !IsNil(o.AllowSpotWorkers) {
		toSerialize["allowSpotWorkers"] = o.AllowSpotWorkers
	}
	if !IsNil(o.AllowSpotVMs) {
		toSerialize["allowSpotVMs"] = o.AllowSpotVMs
	}
	if o.MaxSpotPrice.IsSet() {
		toSerialize["maxSpotPrice"] = o.MaxSpotPrice.Get()
	}
	if !IsNil(o.ProjectAction) {
		toSerialize["projectAction"] = o.ProjectAction
	}
	if !IsNil(o.HasExpirationWarning) {
		toSerialize["hasExpirationWarning"] = o.HasExpirationWarning
	}
	if !IsNil(o.TotalHourlyCost) {
		toSerialize["totalHourlyCost"] = o.TotalHourlyCost
	}
	if !IsNil(o.IsAutoscalingEnabled) {
		toSerialize["isAutoscalingEnabled"] = o.IsAutoscalingEnabled
	}
	if !IsNil(o.AiEnabled) {
		toSerialize["aiEnabled"] = o.AiEnabled
	}
	return toSerialize, nil
}

type NullableProjectListDetailDto struct {
	value *ProjectListDetailDto
	isSet bool
}

func (v NullableProjectListDetailDto) Get() *ProjectListDetailDto {
	return v.value
}

func (v *NullableProjectListDetailDto) Set(val *ProjectListDetailDto) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectListDetailDto) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectListDetailDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectListDetailDto(val *ProjectListDetailDto) *NullableProjectListDetailDto {
	return &NullableProjectListDetailDto{value: val, isSet: true}
}

func (v NullableProjectListDetailDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectListDetailDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
