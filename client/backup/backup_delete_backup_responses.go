// Code generated by go-swagger; DO NOT EDIT.

package backup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// BackupDeleteBackupReader is a Reader for the BackupDeleteBackup structure.
type BackupDeleteBackupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BackupDeleteBackupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBackupDeleteBackupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBackupDeleteBackupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBackupDeleteBackupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewBackupDeleteBackupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBackupDeleteBackupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBackupDeleteBackupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewBackupDeleteBackupOK creates a BackupDeleteBackupOK with default headers values
func NewBackupDeleteBackupOK() *BackupDeleteBackupOK {
	return &BackupDeleteBackupOK{}
}

/*
BackupDeleteBackupOK describes a response with status code 200, with default header values.

Success
*/
type BackupDeleteBackupOK struct {
	Payload models.Unit
}

// IsSuccess returns true when this backup delete backup o k response has a 2xx status code
func (o *BackupDeleteBackupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this backup delete backup o k response has a 3xx status code
func (o *BackupDeleteBackupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup delete backup o k response has a 4xx status code
func (o *BackupDeleteBackupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this backup delete backup o k response has a 5xx status code
func (o *BackupDeleteBackupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this backup delete backup o k response a status code equal to that given
func (o *BackupDeleteBackupOK) IsCode(code int) bool {
	return code == 200
}

func (o *BackupDeleteBackupOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/backup][%d] backupDeleteBackupOK  %+v", 200, o.Payload)
}

func (o *BackupDeleteBackupOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/backup][%d] backupDeleteBackupOK  %+v", 200, o.Payload)
}

func (o *BackupDeleteBackupOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *BackupDeleteBackupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupDeleteBackupBadRequest creates a BackupDeleteBackupBadRequest with default headers values
func NewBackupDeleteBackupBadRequest() *BackupDeleteBackupBadRequest {
	return &BackupDeleteBackupBadRequest{}
}

/*
BackupDeleteBackupBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type BackupDeleteBackupBadRequest struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this backup delete backup bad request response has a 2xx status code
func (o *BackupDeleteBackupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup delete backup bad request response has a 3xx status code
func (o *BackupDeleteBackupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup delete backup bad request response has a 4xx status code
func (o *BackupDeleteBackupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup delete backup bad request response has a 5xx status code
func (o *BackupDeleteBackupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this backup delete backup bad request response a status code equal to that given
func (o *BackupDeleteBackupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *BackupDeleteBackupBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/backup][%d] backupDeleteBackupBadRequest  %+v", 400, o.Payload)
}

func (o *BackupDeleteBackupBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/backup][%d] backupDeleteBackupBadRequest  %+v", 400, o.Payload)
}

func (o *BackupDeleteBackupBadRequest) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *BackupDeleteBackupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupDeleteBackupUnauthorized creates a BackupDeleteBackupUnauthorized with default headers values
func NewBackupDeleteBackupUnauthorized() *BackupDeleteBackupUnauthorized {
	return &BackupDeleteBackupUnauthorized{}
}

/*
BackupDeleteBackupUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type BackupDeleteBackupUnauthorized struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this backup delete backup unauthorized response has a 2xx status code
func (o *BackupDeleteBackupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup delete backup unauthorized response has a 3xx status code
func (o *BackupDeleteBackupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup delete backup unauthorized response has a 4xx status code
func (o *BackupDeleteBackupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup delete backup unauthorized response has a 5xx status code
func (o *BackupDeleteBackupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this backup delete backup unauthorized response a status code equal to that given
func (o *BackupDeleteBackupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *BackupDeleteBackupUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/backup][%d] backupDeleteBackupUnauthorized  %+v", 401, o.Payload)
}

func (o *BackupDeleteBackupUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/backup][%d] backupDeleteBackupUnauthorized  %+v", 401, o.Payload)
}

func (o *BackupDeleteBackupUnauthorized) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *BackupDeleteBackupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupDeleteBackupForbidden creates a BackupDeleteBackupForbidden with default headers values
func NewBackupDeleteBackupForbidden() *BackupDeleteBackupForbidden {
	return &BackupDeleteBackupForbidden{}
}

/*
BackupDeleteBackupForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type BackupDeleteBackupForbidden struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this backup delete backup forbidden response has a 2xx status code
func (o *BackupDeleteBackupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup delete backup forbidden response has a 3xx status code
func (o *BackupDeleteBackupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup delete backup forbidden response has a 4xx status code
func (o *BackupDeleteBackupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup delete backup forbidden response has a 5xx status code
func (o *BackupDeleteBackupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this backup delete backup forbidden response a status code equal to that given
func (o *BackupDeleteBackupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *BackupDeleteBackupForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/backup][%d] backupDeleteBackupForbidden  %+v", 403, o.Payload)
}

func (o *BackupDeleteBackupForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/backup][%d] backupDeleteBackupForbidden  %+v", 403, o.Payload)
}

func (o *BackupDeleteBackupForbidden) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *BackupDeleteBackupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupDeleteBackupNotFound creates a BackupDeleteBackupNotFound with default headers values
func NewBackupDeleteBackupNotFound() *BackupDeleteBackupNotFound {
	return &BackupDeleteBackupNotFound{}
}

/*
BackupDeleteBackupNotFound describes a response with status code 404, with default header values.

Not Found
*/
type BackupDeleteBackupNotFound struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this backup delete backup not found response has a 2xx status code
func (o *BackupDeleteBackupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup delete backup not found response has a 3xx status code
func (o *BackupDeleteBackupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup delete backup not found response has a 4xx status code
func (o *BackupDeleteBackupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup delete backup not found response has a 5xx status code
func (o *BackupDeleteBackupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this backup delete backup not found response a status code equal to that given
func (o *BackupDeleteBackupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *BackupDeleteBackupNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/backup][%d] backupDeleteBackupNotFound  %+v", 404, o.Payload)
}

func (o *BackupDeleteBackupNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/backup][%d] backupDeleteBackupNotFound  %+v", 404, o.Payload)
}

func (o *BackupDeleteBackupNotFound) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *BackupDeleteBackupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupDeleteBackupInternalServerError creates a BackupDeleteBackupInternalServerError with default headers values
func NewBackupDeleteBackupInternalServerError() *BackupDeleteBackupInternalServerError {
	return &BackupDeleteBackupInternalServerError{}
}

/*
BackupDeleteBackupInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type BackupDeleteBackupInternalServerError struct {
}

// IsSuccess returns true when this backup delete backup internal server error response has a 2xx status code
func (o *BackupDeleteBackupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup delete backup internal server error response has a 3xx status code
func (o *BackupDeleteBackupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup delete backup internal server error response has a 4xx status code
func (o *BackupDeleteBackupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this backup delete backup internal server error response has a 5xx status code
func (o *BackupDeleteBackupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this backup delete backup internal server error response a status code equal to that given
func (o *BackupDeleteBackupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *BackupDeleteBackupInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/backup][%d] backupDeleteBackupInternalServerError ", 500)
}

func (o *BackupDeleteBackupInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/backup][%d] backupDeleteBackupInternalServerError ", 500)
}

func (o *BackupDeleteBackupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
