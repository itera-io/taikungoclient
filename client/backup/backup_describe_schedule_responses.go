// Code generated by go-swagger; DO NOT EDIT.

package backup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// BackupDescribeScheduleReader is a Reader for the BackupDescribeSchedule structure.
type BackupDescribeScheduleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BackupDescribeScheduleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBackupDescribeScheduleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBackupDescribeScheduleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBackupDescribeScheduleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewBackupDescribeScheduleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBackupDescribeScheduleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBackupDescribeScheduleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewBackupDescribeScheduleOK creates a BackupDescribeScheduleOK with default headers values
func NewBackupDescribeScheduleOK() *BackupDescribeScheduleOK {
	return &BackupDescribeScheduleOK{}
}

/*
BackupDescribeScheduleOK describes a response with status code 200, with default header values.

Success
*/
type BackupDescribeScheduleOK struct {
	Payload interface{}
}

// IsSuccess returns true when this backup describe schedule o k response has a 2xx status code
func (o *BackupDescribeScheduleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this backup describe schedule o k response has a 3xx status code
func (o *BackupDescribeScheduleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup describe schedule o k response has a 4xx status code
func (o *BackupDescribeScheduleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this backup describe schedule o k response has a 5xx status code
func (o *BackupDescribeScheduleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this backup describe schedule o k response a status code equal to that given
func (o *BackupDescribeScheduleOK) IsCode(code int) bool {
	return code == 200
}

func (o *BackupDescribeScheduleOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/describe/schedule/{projectId}/{name}][%d] backupDescribeScheduleOK  %+v", 200, o.Payload)
}

func (o *BackupDescribeScheduleOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/describe/schedule/{projectId}/{name}][%d] backupDescribeScheduleOK  %+v", 200, o.Payload)
}

func (o *BackupDescribeScheduleOK) GetPayload() interface{} {
	return o.Payload
}

func (o *BackupDescribeScheduleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupDescribeScheduleBadRequest creates a BackupDescribeScheduleBadRequest with default headers values
func NewBackupDescribeScheduleBadRequest() *BackupDescribeScheduleBadRequest {
	return &BackupDescribeScheduleBadRequest{}
}

/*
BackupDescribeScheduleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type BackupDescribeScheduleBadRequest struct {
	Payload []*BackupDescribeScheduleBadRequestBodyItems0
}

// IsSuccess returns true when this backup describe schedule bad request response has a 2xx status code
func (o *BackupDescribeScheduleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup describe schedule bad request response has a 3xx status code
func (o *BackupDescribeScheduleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup describe schedule bad request response has a 4xx status code
func (o *BackupDescribeScheduleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup describe schedule bad request response has a 5xx status code
func (o *BackupDescribeScheduleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this backup describe schedule bad request response a status code equal to that given
func (o *BackupDescribeScheduleBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *BackupDescribeScheduleBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/describe/schedule/{projectId}/{name}][%d] backupDescribeScheduleBadRequest  %+v", 400, o.Payload)
}

func (o *BackupDescribeScheduleBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/describe/schedule/{projectId}/{name}][%d] backupDescribeScheduleBadRequest  %+v", 400, o.Payload)
}

func (o *BackupDescribeScheduleBadRequest) GetPayload() []*BackupDescribeScheduleBadRequestBodyItems0 {
	return o.Payload
}

func (o *BackupDescribeScheduleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupDescribeScheduleUnauthorized creates a BackupDescribeScheduleUnauthorized with default headers values
func NewBackupDescribeScheduleUnauthorized() *BackupDescribeScheduleUnauthorized {
	return &BackupDescribeScheduleUnauthorized{}
}

/*
BackupDescribeScheduleUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type BackupDescribeScheduleUnauthorized struct {
	Payload *BackupDescribeScheduleUnauthorizedBody
}

// IsSuccess returns true when this backup describe schedule unauthorized response has a 2xx status code
func (o *BackupDescribeScheduleUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup describe schedule unauthorized response has a 3xx status code
func (o *BackupDescribeScheduleUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup describe schedule unauthorized response has a 4xx status code
func (o *BackupDescribeScheduleUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup describe schedule unauthorized response has a 5xx status code
func (o *BackupDescribeScheduleUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this backup describe schedule unauthorized response a status code equal to that given
func (o *BackupDescribeScheduleUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *BackupDescribeScheduleUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/describe/schedule/{projectId}/{name}][%d] backupDescribeScheduleUnauthorized  %+v", 401, o.Payload)
}

func (o *BackupDescribeScheduleUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/describe/schedule/{projectId}/{name}][%d] backupDescribeScheduleUnauthorized  %+v", 401, o.Payload)
}

func (o *BackupDescribeScheduleUnauthorized) GetPayload() *BackupDescribeScheduleUnauthorizedBody {
	return o.Payload
}

func (o *BackupDescribeScheduleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BackupDescribeScheduleUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupDescribeScheduleForbidden creates a BackupDescribeScheduleForbidden with default headers values
func NewBackupDescribeScheduleForbidden() *BackupDescribeScheduleForbidden {
	return &BackupDescribeScheduleForbidden{}
}

/*
BackupDescribeScheduleForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type BackupDescribeScheduleForbidden struct {
	Payload *BackupDescribeScheduleForbiddenBody
}

// IsSuccess returns true when this backup describe schedule forbidden response has a 2xx status code
func (o *BackupDescribeScheduleForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup describe schedule forbidden response has a 3xx status code
func (o *BackupDescribeScheduleForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup describe schedule forbidden response has a 4xx status code
func (o *BackupDescribeScheduleForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup describe schedule forbidden response has a 5xx status code
func (o *BackupDescribeScheduleForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this backup describe schedule forbidden response a status code equal to that given
func (o *BackupDescribeScheduleForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *BackupDescribeScheduleForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/describe/schedule/{projectId}/{name}][%d] backupDescribeScheduleForbidden  %+v", 403, o.Payload)
}

func (o *BackupDescribeScheduleForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/describe/schedule/{projectId}/{name}][%d] backupDescribeScheduleForbidden  %+v", 403, o.Payload)
}

func (o *BackupDescribeScheduleForbidden) GetPayload() *BackupDescribeScheduleForbiddenBody {
	return o.Payload
}

func (o *BackupDescribeScheduleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BackupDescribeScheduleForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupDescribeScheduleNotFound creates a BackupDescribeScheduleNotFound with default headers values
func NewBackupDescribeScheduleNotFound() *BackupDescribeScheduleNotFound {
	return &BackupDescribeScheduleNotFound{}
}

/*
BackupDescribeScheduleNotFound describes a response with status code 404, with default header values.

Not Found
*/
type BackupDescribeScheduleNotFound struct {
	Payload *BackupDescribeScheduleNotFoundBody
}

// IsSuccess returns true when this backup describe schedule not found response has a 2xx status code
func (o *BackupDescribeScheduleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup describe schedule not found response has a 3xx status code
func (o *BackupDescribeScheduleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup describe schedule not found response has a 4xx status code
func (o *BackupDescribeScheduleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup describe schedule not found response has a 5xx status code
func (o *BackupDescribeScheduleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this backup describe schedule not found response a status code equal to that given
func (o *BackupDescribeScheduleNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *BackupDescribeScheduleNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/describe/schedule/{projectId}/{name}][%d] backupDescribeScheduleNotFound  %+v", 404, o.Payload)
}

func (o *BackupDescribeScheduleNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/describe/schedule/{projectId}/{name}][%d] backupDescribeScheduleNotFound  %+v", 404, o.Payload)
}

func (o *BackupDescribeScheduleNotFound) GetPayload() *BackupDescribeScheduleNotFoundBody {
	return o.Payload
}

func (o *BackupDescribeScheduleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BackupDescribeScheduleNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupDescribeScheduleInternalServerError creates a BackupDescribeScheduleInternalServerError with default headers values
func NewBackupDescribeScheduleInternalServerError() *BackupDescribeScheduleInternalServerError {
	return &BackupDescribeScheduleInternalServerError{}
}

/*
BackupDescribeScheduleInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type BackupDescribeScheduleInternalServerError struct {
}

// IsSuccess returns true when this backup describe schedule internal server error response has a 2xx status code
func (o *BackupDescribeScheduleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup describe schedule internal server error response has a 3xx status code
func (o *BackupDescribeScheduleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup describe schedule internal server error response has a 4xx status code
func (o *BackupDescribeScheduleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this backup describe schedule internal server error response has a 5xx status code
func (o *BackupDescribeScheduleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this backup describe schedule internal server error response a status code equal to that given
func (o *BackupDescribeScheduleInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *BackupDescribeScheduleInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/describe/schedule/{projectId}/{name}][%d] backupDescribeScheduleInternalServerError ", 500)
}

func (o *BackupDescribeScheduleInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/describe/schedule/{projectId}/{name}][%d] backupDescribeScheduleInternalServerError ", 500)
}

func (o *BackupDescribeScheduleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
BackupDescribeScheduleBadRequestBodyItems0 backup describe schedule bad request body items0
swagger:model BackupDescribeScheduleBadRequestBodyItems0
*/
type BackupDescribeScheduleBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this backup describe schedule bad request body items0
func (o *BackupDescribeScheduleBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this backup describe schedule bad request body items0 based on context it is used
func (o *BackupDescribeScheduleBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BackupDescribeScheduleBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupDescribeScheduleBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res BackupDescribeScheduleBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
BackupDescribeScheduleForbiddenBody backup describe schedule forbidden body
swagger:model BackupDescribeScheduleForbiddenBody
*/
type BackupDescribeScheduleForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this backup describe schedule forbidden body
func (o *BackupDescribeScheduleForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this backup describe schedule forbidden body based on context it is used
func (o *BackupDescribeScheduleForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BackupDescribeScheduleForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupDescribeScheduleForbiddenBody) UnmarshalBinary(b []byte) error {
	var res BackupDescribeScheduleForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
BackupDescribeScheduleNotFoundBody backup describe schedule not found body
swagger:model BackupDescribeScheduleNotFoundBody
*/
type BackupDescribeScheduleNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this backup describe schedule not found body
func (o *BackupDescribeScheduleNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this backup describe schedule not found body based on context it is used
func (o *BackupDescribeScheduleNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BackupDescribeScheduleNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupDescribeScheduleNotFoundBody) UnmarshalBinary(b []byte) error {
	var res BackupDescribeScheduleNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
BackupDescribeScheduleUnauthorizedBody backup describe schedule unauthorized body
swagger:model BackupDescribeScheduleUnauthorizedBody
*/
type BackupDescribeScheduleUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this backup describe schedule unauthorized body
func (o *BackupDescribeScheduleUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this backup describe schedule unauthorized body based on context it is used
func (o *BackupDescribeScheduleUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BackupDescribeScheduleUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupDescribeScheduleUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res BackupDescribeScheduleUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
