// Code generated by go-swagger; DO NOT EDIT.

package backup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// BackupListAllBackupsReader is a Reader for the BackupListAllBackups structure.
type BackupListAllBackupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BackupListAllBackupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBackupListAllBackupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBackupListAllBackupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBackupListAllBackupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewBackupListAllBackupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBackupListAllBackupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBackupListAllBackupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewBackupListAllBackupsOK creates a BackupListAllBackupsOK with default headers values
func NewBackupListAllBackupsOK() *BackupListAllBackupsOK {
	return &BackupListAllBackupsOK{}
}

/*
BackupListAllBackupsOK describes a response with status code 200, with default header values.

Success
*/
type BackupListAllBackupsOK struct {
	Payload *models.ListAllBackups
}

// IsSuccess returns true when this backup list all backups o k response has a 2xx status code
func (o *BackupListAllBackupsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this backup list all backups o k response has a 3xx status code
func (o *BackupListAllBackupsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup list all backups o k response has a 4xx status code
func (o *BackupListAllBackupsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this backup list all backups o k response has a 5xx status code
func (o *BackupListAllBackupsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this backup list all backups o k response a status code equal to that given
func (o *BackupListAllBackupsOK) IsCode(code int) bool {
	return code == 200
}

func (o *BackupListAllBackupsOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsOK  %+v", 200, o.Payload)
}

func (o *BackupListAllBackupsOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsOK  %+v", 200, o.Payload)
}

func (o *BackupListAllBackupsOK) GetPayload() *models.ListAllBackups {
	return o.Payload
}

func (o *BackupListAllBackupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListAllBackups)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupListAllBackupsBadRequest creates a BackupListAllBackupsBadRequest with default headers values
func NewBackupListAllBackupsBadRequest() *BackupListAllBackupsBadRequest {
	return &BackupListAllBackupsBadRequest{}
}

/*
BackupListAllBackupsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type BackupListAllBackupsBadRequest struct {
	Payload *models.ValidationProblemDetails
}

// IsSuccess returns true when this backup list all backups bad request response has a 2xx status code
func (o *BackupListAllBackupsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup list all backups bad request response has a 3xx status code
func (o *BackupListAllBackupsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup list all backups bad request response has a 4xx status code
func (o *BackupListAllBackupsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup list all backups bad request response has a 5xx status code
func (o *BackupListAllBackupsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this backup list all backups bad request response a status code equal to that given
func (o *BackupListAllBackupsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *BackupListAllBackupsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsBadRequest  %+v", 400, o.Payload)
}

func (o *BackupListAllBackupsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsBadRequest  %+v", 400, o.Payload)
}

func (o *BackupListAllBackupsBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *BackupListAllBackupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupListAllBackupsUnauthorized creates a BackupListAllBackupsUnauthorized with default headers values
func NewBackupListAllBackupsUnauthorized() *BackupListAllBackupsUnauthorized {
	return &BackupListAllBackupsUnauthorized{}
}

/*
BackupListAllBackupsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type BackupListAllBackupsUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this backup list all backups unauthorized response has a 2xx status code
func (o *BackupListAllBackupsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup list all backups unauthorized response has a 3xx status code
func (o *BackupListAllBackupsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup list all backups unauthorized response has a 4xx status code
func (o *BackupListAllBackupsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup list all backups unauthorized response has a 5xx status code
func (o *BackupListAllBackupsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this backup list all backups unauthorized response a status code equal to that given
func (o *BackupListAllBackupsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *BackupListAllBackupsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsUnauthorized  %+v", 401, o.Payload)
}

func (o *BackupListAllBackupsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsUnauthorized  %+v", 401, o.Payload)
}

func (o *BackupListAllBackupsUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *BackupListAllBackupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupListAllBackupsForbidden creates a BackupListAllBackupsForbidden with default headers values
func NewBackupListAllBackupsForbidden() *BackupListAllBackupsForbidden {
	return &BackupListAllBackupsForbidden{}
}

/*
BackupListAllBackupsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type BackupListAllBackupsForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this backup list all backups forbidden response has a 2xx status code
func (o *BackupListAllBackupsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup list all backups forbidden response has a 3xx status code
func (o *BackupListAllBackupsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup list all backups forbidden response has a 4xx status code
func (o *BackupListAllBackupsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup list all backups forbidden response has a 5xx status code
func (o *BackupListAllBackupsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this backup list all backups forbidden response a status code equal to that given
func (o *BackupListAllBackupsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *BackupListAllBackupsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsForbidden  %+v", 403, o.Payload)
}

func (o *BackupListAllBackupsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsForbidden  %+v", 403, o.Payload)
}

func (o *BackupListAllBackupsForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *BackupListAllBackupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupListAllBackupsNotFound creates a BackupListAllBackupsNotFound with default headers values
func NewBackupListAllBackupsNotFound() *BackupListAllBackupsNotFound {
	return &BackupListAllBackupsNotFound{}
}

/*
BackupListAllBackupsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type BackupListAllBackupsNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this backup list all backups not found response has a 2xx status code
func (o *BackupListAllBackupsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup list all backups not found response has a 3xx status code
func (o *BackupListAllBackupsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup list all backups not found response has a 4xx status code
func (o *BackupListAllBackupsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup list all backups not found response has a 5xx status code
func (o *BackupListAllBackupsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this backup list all backups not found response a status code equal to that given
func (o *BackupListAllBackupsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *BackupListAllBackupsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsNotFound  %+v", 404, o.Payload)
}

func (o *BackupListAllBackupsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsNotFound  %+v", 404, o.Payload)
}

func (o *BackupListAllBackupsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *BackupListAllBackupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupListAllBackupsInternalServerError creates a BackupListAllBackupsInternalServerError with default headers values
func NewBackupListAllBackupsInternalServerError() *BackupListAllBackupsInternalServerError {
	return &BackupListAllBackupsInternalServerError{}
}

/*
BackupListAllBackupsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type BackupListAllBackupsInternalServerError struct {
}

// IsSuccess returns true when this backup list all backups internal server error response has a 2xx status code
func (o *BackupListAllBackupsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup list all backups internal server error response has a 3xx status code
func (o *BackupListAllBackupsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup list all backups internal server error response has a 4xx status code
func (o *BackupListAllBackupsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this backup list all backups internal server error response has a 5xx status code
func (o *BackupListAllBackupsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this backup list all backups internal server error response a status code equal to that given
func (o *BackupListAllBackupsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *BackupListAllBackupsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsInternalServerError ", 500)
}

func (o *BackupListAllBackupsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsInternalServerError ", 500)
}

func (o *BackupListAllBackupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
