// Code generated by go-swagger; DO NOT EDIT.

package backup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BackupListAllBackupsReader is a Reader for the BackupListAllBackups structure.
type BackupListAllBackupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BackupListAllBackupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBackupListAllBackupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBackupListAllBackupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBackupListAllBackupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewBackupListAllBackupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBackupListAllBackupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBackupListAllBackupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewBackupListAllBackupsOK creates a BackupListAllBackupsOK with default headers values
func NewBackupListAllBackupsOK() *BackupListAllBackupsOK {
	return &BackupListAllBackupsOK{}
}

/*
BackupListAllBackupsOK describes a response with status code 200, with default header values.

Success
*/
type BackupListAllBackupsOK struct {
	Payload *BackupListAllBackupsOKBody
}

// IsSuccess returns true when this backup list all backups o k response has a 2xx status code
func (o *BackupListAllBackupsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this backup list all backups o k response has a 3xx status code
func (o *BackupListAllBackupsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup list all backups o k response has a 4xx status code
func (o *BackupListAllBackupsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this backup list all backups o k response has a 5xx status code
func (o *BackupListAllBackupsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this backup list all backups o k response a status code equal to that given
func (o *BackupListAllBackupsOK) IsCode(code int) bool {
	return code == 200
}

func (o *BackupListAllBackupsOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsOK  %+v", 200, o.Payload)
}

func (o *BackupListAllBackupsOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsOK  %+v", 200, o.Payload)
}

func (o *BackupListAllBackupsOK) GetPayload() *BackupListAllBackupsOKBody {
	return o.Payload
}

func (o *BackupListAllBackupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BackupListAllBackupsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupListAllBackupsBadRequest creates a BackupListAllBackupsBadRequest with default headers values
func NewBackupListAllBackupsBadRequest() *BackupListAllBackupsBadRequest {
	return &BackupListAllBackupsBadRequest{}
}

/*
BackupListAllBackupsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type BackupListAllBackupsBadRequest struct {
	Payload []*BackupListAllBackupsBadRequestBodyItems0
}

// IsSuccess returns true when this backup list all backups bad request response has a 2xx status code
func (o *BackupListAllBackupsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup list all backups bad request response has a 3xx status code
func (o *BackupListAllBackupsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup list all backups bad request response has a 4xx status code
func (o *BackupListAllBackupsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup list all backups bad request response has a 5xx status code
func (o *BackupListAllBackupsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this backup list all backups bad request response a status code equal to that given
func (o *BackupListAllBackupsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *BackupListAllBackupsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsBadRequest  %+v", 400, o.Payload)
}

func (o *BackupListAllBackupsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsBadRequest  %+v", 400, o.Payload)
}

func (o *BackupListAllBackupsBadRequest) GetPayload() []*BackupListAllBackupsBadRequestBodyItems0 {
	return o.Payload
}

func (o *BackupListAllBackupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupListAllBackupsUnauthorized creates a BackupListAllBackupsUnauthorized with default headers values
func NewBackupListAllBackupsUnauthorized() *BackupListAllBackupsUnauthorized {
	return &BackupListAllBackupsUnauthorized{}
}

/*
BackupListAllBackupsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type BackupListAllBackupsUnauthorized struct {
	Payload *BackupListAllBackupsUnauthorizedBody
}

// IsSuccess returns true when this backup list all backups unauthorized response has a 2xx status code
func (o *BackupListAllBackupsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup list all backups unauthorized response has a 3xx status code
func (o *BackupListAllBackupsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup list all backups unauthorized response has a 4xx status code
func (o *BackupListAllBackupsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup list all backups unauthorized response has a 5xx status code
func (o *BackupListAllBackupsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this backup list all backups unauthorized response a status code equal to that given
func (o *BackupListAllBackupsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *BackupListAllBackupsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsUnauthorized  %+v", 401, o.Payload)
}

func (o *BackupListAllBackupsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsUnauthorized  %+v", 401, o.Payload)
}

func (o *BackupListAllBackupsUnauthorized) GetPayload() *BackupListAllBackupsUnauthorizedBody {
	return o.Payload
}

func (o *BackupListAllBackupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BackupListAllBackupsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupListAllBackupsForbidden creates a BackupListAllBackupsForbidden with default headers values
func NewBackupListAllBackupsForbidden() *BackupListAllBackupsForbidden {
	return &BackupListAllBackupsForbidden{}
}

/*
BackupListAllBackupsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type BackupListAllBackupsForbidden struct {
	Payload *BackupListAllBackupsForbiddenBody
}

// IsSuccess returns true when this backup list all backups forbidden response has a 2xx status code
func (o *BackupListAllBackupsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup list all backups forbidden response has a 3xx status code
func (o *BackupListAllBackupsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup list all backups forbidden response has a 4xx status code
func (o *BackupListAllBackupsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup list all backups forbidden response has a 5xx status code
func (o *BackupListAllBackupsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this backup list all backups forbidden response a status code equal to that given
func (o *BackupListAllBackupsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *BackupListAllBackupsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsForbidden  %+v", 403, o.Payload)
}

func (o *BackupListAllBackupsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsForbidden  %+v", 403, o.Payload)
}

func (o *BackupListAllBackupsForbidden) GetPayload() *BackupListAllBackupsForbiddenBody {
	return o.Payload
}

func (o *BackupListAllBackupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BackupListAllBackupsForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupListAllBackupsNotFound creates a BackupListAllBackupsNotFound with default headers values
func NewBackupListAllBackupsNotFound() *BackupListAllBackupsNotFound {
	return &BackupListAllBackupsNotFound{}
}

/*
BackupListAllBackupsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type BackupListAllBackupsNotFound struct {
	Payload *BackupListAllBackupsNotFoundBody
}

// IsSuccess returns true when this backup list all backups not found response has a 2xx status code
func (o *BackupListAllBackupsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup list all backups not found response has a 3xx status code
func (o *BackupListAllBackupsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup list all backups not found response has a 4xx status code
func (o *BackupListAllBackupsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup list all backups not found response has a 5xx status code
func (o *BackupListAllBackupsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this backup list all backups not found response a status code equal to that given
func (o *BackupListAllBackupsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *BackupListAllBackupsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsNotFound  %+v", 404, o.Payload)
}

func (o *BackupListAllBackupsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsNotFound  %+v", 404, o.Payload)
}

func (o *BackupListAllBackupsNotFound) GetPayload() *BackupListAllBackupsNotFoundBody {
	return o.Payload
}

func (o *BackupListAllBackupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BackupListAllBackupsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupListAllBackupsInternalServerError creates a BackupListAllBackupsInternalServerError with default headers values
func NewBackupListAllBackupsInternalServerError() *BackupListAllBackupsInternalServerError {
	return &BackupListAllBackupsInternalServerError{}
}

/*
BackupListAllBackupsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type BackupListAllBackupsInternalServerError struct {
}

// IsSuccess returns true when this backup list all backups internal server error response has a 2xx status code
func (o *BackupListAllBackupsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup list all backups internal server error response has a 3xx status code
func (o *BackupListAllBackupsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup list all backups internal server error response has a 4xx status code
func (o *BackupListAllBackupsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this backup list all backups internal server error response has a 5xx status code
func (o *BackupListAllBackupsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this backup list all backups internal server error response a status code equal to that given
func (o *BackupListAllBackupsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *BackupListAllBackupsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsInternalServerError ", 500)
}

func (o *BackupListAllBackupsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Backup/backups/{projectId}][%d] backupListAllBackupsInternalServerError ", 500)
}

func (o *BackupListAllBackupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
BackupListAllBackupsBadRequestBodyItems0 backup list all backups bad request body items0
swagger:model BackupListAllBackupsBadRequestBodyItems0
*/
type BackupListAllBackupsBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this backup list all backups bad request body items0
func (o *BackupListAllBackupsBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this backup list all backups bad request body items0 based on context it is used
func (o *BackupListAllBackupsBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BackupListAllBackupsBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupListAllBackupsBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res BackupListAllBackupsBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
BackupListAllBackupsForbiddenBody backup list all backups forbidden body
swagger:model BackupListAllBackupsForbiddenBody
*/
type BackupListAllBackupsForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this backup list all backups forbidden body
func (o *BackupListAllBackupsForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this backup list all backups forbidden body based on context it is used
func (o *BackupListAllBackupsForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BackupListAllBackupsForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupListAllBackupsForbiddenBody) UnmarshalBinary(b []byte) error {
	var res BackupListAllBackupsForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
BackupListAllBackupsNotFoundBody backup list all backups not found body
swagger:model BackupListAllBackupsNotFoundBody
*/
type BackupListAllBackupsNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this backup list all backups not found body
func (o *BackupListAllBackupsNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this backup list all backups not found body based on context it is used
func (o *BackupListAllBackupsNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BackupListAllBackupsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupListAllBackupsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res BackupListAllBackupsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
BackupListAllBackupsOKBody backup list all backups o k body
swagger:model BackupListAllBackupsOKBody
*/
type BackupListAllBackupsOKBody struct {

	// data
	Data []*BackupListAllBackupsOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this backup list all backups o k body
func (o *BackupListAllBackupsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *BackupListAllBackupsOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("backupListAllBackupsOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("backupListAllBackupsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this backup list all backups o k body based on the context it is used
func (o *BackupListAllBackupsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *BackupListAllBackupsOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("backupListAllBackupsOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("backupListAllBackupsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *BackupListAllBackupsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupListAllBackupsOKBody) UnmarshalBinary(b []byte) error {
	var res BackupListAllBackupsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
BackupListAllBackupsOKBodyDataItems0 backup list all backups o k body data items0
swagger:model BackupListAllBackupsOKBodyDataItems0
*/
type BackupListAllBackupsOKBodyDataItems0 struct {

	// created at
	// Format: date-time
	CreatedAt *strfmt.DateTime `json:"createdAt,omitempty"`

	// expiration
	// Format: date-time
	Expiration *strfmt.DateTime `json:"expiration,omitempty"`

	// location
	Location string `json:"location,omitempty"`

	// metadata name
	MetadataName string `json:"metadataName,omitempty"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// phase
	Phase string `json:"phase,omitempty"`

	// schedule name
	ScheduleName string `json:"scheduleName,omitempty"`
}

// Validate validates this backup list all backups o k body data items0
func (o *BackupListAllBackupsOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateExpiration(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *BackupListAllBackupsOKBodyDataItems0) validateCreatedAt(formats strfmt.Registry) error {
	if swag.IsZero(o.CreatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("createdAt", "body", "date-time", o.CreatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *BackupListAllBackupsOKBodyDataItems0) validateExpiration(formats strfmt.Registry) error {
	if swag.IsZero(o.Expiration) { // not required
		return nil
	}

	if err := validate.FormatOf("expiration", "body", "date-time", o.Expiration.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this backup list all backups o k body data items0 based on context it is used
func (o *BackupListAllBackupsOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BackupListAllBackupsOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupListAllBackupsOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res BackupListAllBackupsOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
BackupListAllBackupsUnauthorizedBody backup list all backups unauthorized body
swagger:model BackupListAllBackupsUnauthorizedBody
*/
type BackupListAllBackupsUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this backup list all backups unauthorized body
func (o *BackupListAllBackupsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this backup list all backups unauthorized body based on context it is used
func (o *BackupListAllBackupsUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BackupListAllBackupsUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupListAllBackupsUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res BackupListAllBackupsUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
