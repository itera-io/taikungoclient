// Code generated by go-swagger; DO NOT EDIT.

package backup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// BackupDeleteBackupLocationReader is a Reader for the BackupDeleteBackupLocation structure.
type BackupDeleteBackupLocationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BackupDeleteBackupLocationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBackupDeleteBackupLocationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBackupDeleteBackupLocationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBackupDeleteBackupLocationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewBackupDeleteBackupLocationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBackupDeleteBackupLocationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBackupDeleteBackupLocationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewBackupDeleteBackupLocationOK creates a BackupDeleteBackupLocationOK with default headers values
func NewBackupDeleteBackupLocationOK() *BackupDeleteBackupLocationOK {
	return &BackupDeleteBackupLocationOK{}
}

/*
BackupDeleteBackupLocationOK describes a response with status code 200, with default header values.

Success
*/
type BackupDeleteBackupLocationOK struct {
	Payload models.Unit
}

// IsSuccess returns true when this backup delete backup location o k response has a 2xx status code
func (o *BackupDeleteBackupLocationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this backup delete backup location o k response has a 3xx status code
func (o *BackupDeleteBackupLocationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup delete backup location o k response has a 4xx status code
func (o *BackupDeleteBackupLocationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this backup delete backup location o k response has a 5xx status code
func (o *BackupDeleteBackupLocationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this backup delete backup location o k response a status code equal to that given
func (o *BackupDeleteBackupLocationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the backup delete backup location o k response
func (o *BackupDeleteBackupLocationOK) Code() int {
	return 200
}

func (o *BackupDeleteBackupLocationOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/location][%d] backupDeleteBackupLocationOK  %+v", 200, o.Payload)
}

func (o *BackupDeleteBackupLocationOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/location][%d] backupDeleteBackupLocationOK  %+v", 200, o.Payload)
}

func (o *BackupDeleteBackupLocationOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *BackupDeleteBackupLocationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupDeleteBackupLocationBadRequest creates a BackupDeleteBackupLocationBadRequest with default headers values
func NewBackupDeleteBackupLocationBadRequest() *BackupDeleteBackupLocationBadRequest {
	return &BackupDeleteBackupLocationBadRequest{}
}

/*
BackupDeleteBackupLocationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type BackupDeleteBackupLocationBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this backup delete backup location bad request response has a 2xx status code
func (o *BackupDeleteBackupLocationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup delete backup location bad request response has a 3xx status code
func (o *BackupDeleteBackupLocationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup delete backup location bad request response has a 4xx status code
func (o *BackupDeleteBackupLocationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup delete backup location bad request response has a 5xx status code
func (o *BackupDeleteBackupLocationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this backup delete backup location bad request response a status code equal to that given
func (o *BackupDeleteBackupLocationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the backup delete backup location bad request response
func (o *BackupDeleteBackupLocationBadRequest) Code() int {
	return 400
}

func (o *BackupDeleteBackupLocationBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/location][%d] backupDeleteBackupLocationBadRequest  %+v", 400, o.Payload)
}

func (o *BackupDeleteBackupLocationBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/location][%d] backupDeleteBackupLocationBadRequest  %+v", 400, o.Payload)
}

func (o *BackupDeleteBackupLocationBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *BackupDeleteBackupLocationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupDeleteBackupLocationUnauthorized creates a BackupDeleteBackupLocationUnauthorized with default headers values
func NewBackupDeleteBackupLocationUnauthorized() *BackupDeleteBackupLocationUnauthorized {
	return &BackupDeleteBackupLocationUnauthorized{}
}

/*
BackupDeleteBackupLocationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type BackupDeleteBackupLocationUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this backup delete backup location unauthorized response has a 2xx status code
func (o *BackupDeleteBackupLocationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup delete backup location unauthorized response has a 3xx status code
func (o *BackupDeleteBackupLocationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup delete backup location unauthorized response has a 4xx status code
func (o *BackupDeleteBackupLocationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup delete backup location unauthorized response has a 5xx status code
func (o *BackupDeleteBackupLocationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this backup delete backup location unauthorized response a status code equal to that given
func (o *BackupDeleteBackupLocationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the backup delete backup location unauthorized response
func (o *BackupDeleteBackupLocationUnauthorized) Code() int {
	return 401
}

func (o *BackupDeleteBackupLocationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/location][%d] backupDeleteBackupLocationUnauthorized  %+v", 401, o.Payload)
}

func (o *BackupDeleteBackupLocationUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/location][%d] backupDeleteBackupLocationUnauthorized  %+v", 401, o.Payload)
}

func (o *BackupDeleteBackupLocationUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *BackupDeleteBackupLocationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupDeleteBackupLocationForbidden creates a BackupDeleteBackupLocationForbidden with default headers values
func NewBackupDeleteBackupLocationForbidden() *BackupDeleteBackupLocationForbidden {
	return &BackupDeleteBackupLocationForbidden{}
}

/*
BackupDeleteBackupLocationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type BackupDeleteBackupLocationForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this backup delete backup location forbidden response has a 2xx status code
func (o *BackupDeleteBackupLocationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup delete backup location forbidden response has a 3xx status code
func (o *BackupDeleteBackupLocationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup delete backup location forbidden response has a 4xx status code
func (o *BackupDeleteBackupLocationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup delete backup location forbidden response has a 5xx status code
func (o *BackupDeleteBackupLocationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this backup delete backup location forbidden response a status code equal to that given
func (o *BackupDeleteBackupLocationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the backup delete backup location forbidden response
func (o *BackupDeleteBackupLocationForbidden) Code() int {
	return 403
}

func (o *BackupDeleteBackupLocationForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/location][%d] backupDeleteBackupLocationForbidden  %+v", 403, o.Payload)
}

func (o *BackupDeleteBackupLocationForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/location][%d] backupDeleteBackupLocationForbidden  %+v", 403, o.Payload)
}

func (o *BackupDeleteBackupLocationForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *BackupDeleteBackupLocationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupDeleteBackupLocationNotFound creates a BackupDeleteBackupLocationNotFound with default headers values
func NewBackupDeleteBackupLocationNotFound() *BackupDeleteBackupLocationNotFound {
	return &BackupDeleteBackupLocationNotFound{}
}

/*
BackupDeleteBackupLocationNotFound describes a response with status code 404, with default header values.

Not Found
*/
type BackupDeleteBackupLocationNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this backup delete backup location not found response has a 2xx status code
func (o *BackupDeleteBackupLocationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup delete backup location not found response has a 3xx status code
func (o *BackupDeleteBackupLocationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup delete backup location not found response has a 4xx status code
func (o *BackupDeleteBackupLocationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup delete backup location not found response has a 5xx status code
func (o *BackupDeleteBackupLocationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this backup delete backup location not found response a status code equal to that given
func (o *BackupDeleteBackupLocationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the backup delete backup location not found response
func (o *BackupDeleteBackupLocationNotFound) Code() int {
	return 404
}

func (o *BackupDeleteBackupLocationNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/location][%d] backupDeleteBackupLocationNotFound  %+v", 404, o.Payload)
}

func (o *BackupDeleteBackupLocationNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/location][%d] backupDeleteBackupLocationNotFound  %+v", 404, o.Payload)
}

func (o *BackupDeleteBackupLocationNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *BackupDeleteBackupLocationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupDeleteBackupLocationInternalServerError creates a BackupDeleteBackupLocationInternalServerError with default headers values
func NewBackupDeleteBackupLocationInternalServerError() *BackupDeleteBackupLocationInternalServerError {
	return &BackupDeleteBackupLocationInternalServerError{}
}

/*
BackupDeleteBackupLocationInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type BackupDeleteBackupLocationInternalServerError struct {
}

// IsSuccess returns true when this backup delete backup location internal server error response has a 2xx status code
func (o *BackupDeleteBackupLocationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup delete backup location internal server error response has a 3xx status code
func (o *BackupDeleteBackupLocationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup delete backup location internal server error response has a 4xx status code
func (o *BackupDeleteBackupLocationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this backup delete backup location internal server error response has a 5xx status code
func (o *BackupDeleteBackupLocationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this backup delete backup location internal server error response a status code equal to that given
func (o *BackupDeleteBackupLocationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the backup delete backup location internal server error response
func (o *BackupDeleteBackupLocationInternalServerError) Code() int {
	return 500
}

func (o *BackupDeleteBackupLocationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/location][%d] backupDeleteBackupLocationInternalServerError ", 500)
}

func (o *BackupDeleteBackupLocationInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/delete/location][%d] backupDeleteBackupLocationInternalServerError ", 500)
}

func (o *BackupDeleteBackupLocationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
