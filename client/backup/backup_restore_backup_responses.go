// Code generated by go-swagger; DO NOT EDIT.

package backup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// BackupRestoreBackupReader is a Reader for the BackupRestoreBackup structure.
type BackupRestoreBackupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BackupRestoreBackupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBackupRestoreBackupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBackupRestoreBackupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBackupRestoreBackupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewBackupRestoreBackupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBackupRestoreBackupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBackupRestoreBackupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewBackupRestoreBackupOK creates a BackupRestoreBackupOK with default headers values
func NewBackupRestoreBackupOK() *BackupRestoreBackupOK {
	return &BackupRestoreBackupOK{}
}

/*
BackupRestoreBackupOK describes a response with status code 200, with default header values.

Success
*/
type BackupRestoreBackupOK struct {
	Payload interface{}
}

// IsSuccess returns true when this backup restore backup o k response has a 2xx status code
func (o *BackupRestoreBackupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this backup restore backup o k response has a 3xx status code
func (o *BackupRestoreBackupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup restore backup o k response has a 4xx status code
func (o *BackupRestoreBackupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this backup restore backup o k response has a 5xx status code
func (o *BackupRestoreBackupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this backup restore backup o k response a status code equal to that given
func (o *BackupRestoreBackupOK) IsCode(code int) bool {
	return code == 200
}

func (o *BackupRestoreBackupOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/restore][%d] backupRestoreBackupOK  %+v", 200, o.Payload)
}

func (o *BackupRestoreBackupOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/restore][%d] backupRestoreBackupOK  %+v", 200, o.Payload)
}

func (o *BackupRestoreBackupOK) GetPayload() interface{} {
	return o.Payload
}

func (o *BackupRestoreBackupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupRestoreBackupBadRequest creates a BackupRestoreBackupBadRequest with default headers values
func NewBackupRestoreBackupBadRequest() *BackupRestoreBackupBadRequest {
	return &BackupRestoreBackupBadRequest{}
}

/*
BackupRestoreBackupBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type BackupRestoreBackupBadRequest struct {
	Payload []*BackupRestoreBackupBadRequestBodyItems0
}

// IsSuccess returns true when this backup restore backup bad request response has a 2xx status code
func (o *BackupRestoreBackupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup restore backup bad request response has a 3xx status code
func (o *BackupRestoreBackupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup restore backup bad request response has a 4xx status code
func (o *BackupRestoreBackupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup restore backup bad request response has a 5xx status code
func (o *BackupRestoreBackupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this backup restore backup bad request response a status code equal to that given
func (o *BackupRestoreBackupBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *BackupRestoreBackupBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/restore][%d] backupRestoreBackupBadRequest  %+v", 400, o.Payload)
}

func (o *BackupRestoreBackupBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/restore][%d] backupRestoreBackupBadRequest  %+v", 400, o.Payload)
}

func (o *BackupRestoreBackupBadRequest) GetPayload() []*BackupRestoreBackupBadRequestBodyItems0 {
	return o.Payload
}

func (o *BackupRestoreBackupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupRestoreBackupUnauthorized creates a BackupRestoreBackupUnauthorized with default headers values
func NewBackupRestoreBackupUnauthorized() *BackupRestoreBackupUnauthorized {
	return &BackupRestoreBackupUnauthorized{}
}

/*
BackupRestoreBackupUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type BackupRestoreBackupUnauthorized struct {
	Payload *BackupRestoreBackupUnauthorizedBody
}

// IsSuccess returns true when this backup restore backup unauthorized response has a 2xx status code
func (o *BackupRestoreBackupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup restore backup unauthorized response has a 3xx status code
func (o *BackupRestoreBackupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup restore backup unauthorized response has a 4xx status code
func (o *BackupRestoreBackupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup restore backup unauthorized response has a 5xx status code
func (o *BackupRestoreBackupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this backup restore backup unauthorized response a status code equal to that given
func (o *BackupRestoreBackupUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *BackupRestoreBackupUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/restore][%d] backupRestoreBackupUnauthorized  %+v", 401, o.Payload)
}

func (o *BackupRestoreBackupUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/restore][%d] backupRestoreBackupUnauthorized  %+v", 401, o.Payload)
}

func (o *BackupRestoreBackupUnauthorized) GetPayload() *BackupRestoreBackupUnauthorizedBody {
	return o.Payload
}

func (o *BackupRestoreBackupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BackupRestoreBackupUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupRestoreBackupForbidden creates a BackupRestoreBackupForbidden with default headers values
func NewBackupRestoreBackupForbidden() *BackupRestoreBackupForbidden {
	return &BackupRestoreBackupForbidden{}
}

/*
BackupRestoreBackupForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type BackupRestoreBackupForbidden struct {
	Payload *BackupRestoreBackupForbiddenBody
}

// IsSuccess returns true when this backup restore backup forbidden response has a 2xx status code
func (o *BackupRestoreBackupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup restore backup forbidden response has a 3xx status code
func (o *BackupRestoreBackupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup restore backup forbidden response has a 4xx status code
func (o *BackupRestoreBackupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup restore backup forbidden response has a 5xx status code
func (o *BackupRestoreBackupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this backup restore backup forbidden response a status code equal to that given
func (o *BackupRestoreBackupForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *BackupRestoreBackupForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/restore][%d] backupRestoreBackupForbidden  %+v", 403, o.Payload)
}

func (o *BackupRestoreBackupForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/restore][%d] backupRestoreBackupForbidden  %+v", 403, o.Payload)
}

func (o *BackupRestoreBackupForbidden) GetPayload() *BackupRestoreBackupForbiddenBody {
	return o.Payload
}

func (o *BackupRestoreBackupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BackupRestoreBackupForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupRestoreBackupNotFound creates a BackupRestoreBackupNotFound with default headers values
func NewBackupRestoreBackupNotFound() *BackupRestoreBackupNotFound {
	return &BackupRestoreBackupNotFound{}
}

/*
BackupRestoreBackupNotFound describes a response with status code 404, with default header values.

Not Found
*/
type BackupRestoreBackupNotFound struct {
	Payload *BackupRestoreBackupNotFoundBody
}

// IsSuccess returns true when this backup restore backup not found response has a 2xx status code
func (o *BackupRestoreBackupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup restore backup not found response has a 3xx status code
func (o *BackupRestoreBackupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup restore backup not found response has a 4xx status code
func (o *BackupRestoreBackupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this backup restore backup not found response has a 5xx status code
func (o *BackupRestoreBackupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this backup restore backup not found response a status code equal to that given
func (o *BackupRestoreBackupNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *BackupRestoreBackupNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/restore][%d] backupRestoreBackupNotFound  %+v", 404, o.Payload)
}

func (o *BackupRestoreBackupNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/restore][%d] backupRestoreBackupNotFound  %+v", 404, o.Payload)
}

func (o *BackupRestoreBackupNotFound) GetPayload() *BackupRestoreBackupNotFoundBody {
	return o.Payload
}

func (o *BackupRestoreBackupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BackupRestoreBackupNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupRestoreBackupInternalServerError creates a BackupRestoreBackupInternalServerError with default headers values
func NewBackupRestoreBackupInternalServerError() *BackupRestoreBackupInternalServerError {
	return &BackupRestoreBackupInternalServerError{}
}

/*
BackupRestoreBackupInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type BackupRestoreBackupInternalServerError struct {
}

// IsSuccess returns true when this backup restore backup internal server error response has a 2xx status code
func (o *BackupRestoreBackupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this backup restore backup internal server error response has a 3xx status code
func (o *BackupRestoreBackupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this backup restore backup internal server error response has a 4xx status code
func (o *BackupRestoreBackupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this backup restore backup internal server error response has a 5xx status code
func (o *BackupRestoreBackupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this backup restore backup internal server error response a status code equal to that given
func (o *BackupRestoreBackupInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *BackupRestoreBackupInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/restore][%d] backupRestoreBackupInternalServerError ", 500)
}

func (o *BackupRestoreBackupInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/restore][%d] backupRestoreBackupInternalServerError ", 500)
}

func (o *BackupRestoreBackupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
BackupRestoreBackupBadRequestBodyItems0 backup restore backup bad request body items0
swagger:model BackupRestoreBackupBadRequestBodyItems0
*/
type BackupRestoreBackupBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this backup restore backup bad request body items0
func (o *BackupRestoreBackupBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this backup restore backup bad request body items0 based on context it is used
func (o *BackupRestoreBackupBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BackupRestoreBackupBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupRestoreBackupBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res BackupRestoreBackupBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
BackupRestoreBackupBody backup restore backup body
swagger:model BackupRestoreBackupBody
*/
type BackupRestoreBackupBody struct {

	// backup name
	BackupName string `json:"backupName,omitempty"`

	// exclude namespaces
	ExcludeNamespaces []string `json:"excludeNamespaces"`

	// include namespaces
	IncludeNamespaces []string `json:"includeNamespaces"`

	// project Id
	ProjectID int32 `json:"projectId,omitempty"`

	// restore name
	RestoreName string `json:"restoreName,omitempty"`
}

// Validate validates this backup restore backup body
func (o *BackupRestoreBackupBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this backup restore backup body based on context it is used
func (o *BackupRestoreBackupBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BackupRestoreBackupBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupRestoreBackupBody) UnmarshalBinary(b []byte) error {
	var res BackupRestoreBackupBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
BackupRestoreBackupForbiddenBody backup restore backup forbidden body
swagger:model BackupRestoreBackupForbiddenBody
*/
type BackupRestoreBackupForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this backup restore backup forbidden body
func (o *BackupRestoreBackupForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this backup restore backup forbidden body based on context it is used
func (o *BackupRestoreBackupForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BackupRestoreBackupForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupRestoreBackupForbiddenBody) UnmarshalBinary(b []byte) error {
	var res BackupRestoreBackupForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
BackupRestoreBackupNotFoundBody backup restore backup not found body
swagger:model BackupRestoreBackupNotFoundBody
*/
type BackupRestoreBackupNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this backup restore backup not found body
func (o *BackupRestoreBackupNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this backup restore backup not found body based on context it is used
func (o *BackupRestoreBackupNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BackupRestoreBackupNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupRestoreBackupNotFoundBody) UnmarshalBinary(b []byte) error {
	var res BackupRestoreBackupNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
BackupRestoreBackupUnauthorizedBody backup restore backup unauthorized body
swagger:model BackupRestoreBackupUnauthorizedBody
*/
type BackupRestoreBackupUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this backup restore backup unauthorized body
func (o *BackupRestoreBackupUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this backup restore backup unauthorized body based on context it is used
func (o *BackupRestoreBackupUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BackupRestoreBackupUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupRestoreBackupUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res BackupRestoreBackupUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
