// Code generated by go-swagger; DO NOT EDIT.

package backup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// BackupDisableBackupReader is a Reader for the BackupDisableBackup structure.
type BackupDisableBackupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BackupDisableBackupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBackupDisableBackupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBackupDisableBackupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBackupDisableBackupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewBackupDisableBackupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBackupDisableBackupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBackupDisableBackupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewBackupDisableBackupOK creates a BackupDisableBackupOK with default headers values
func NewBackupDisableBackupOK() *BackupDisableBackupOK {
	return &BackupDisableBackupOK{}
}

/* BackupDisableBackupOK describes a response with status code 200, with default header values.

Success
*/
type BackupDisableBackupOK struct {
	Payload models.Unit
}

func (o *BackupDisableBackupOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/disablebackup][%d] backupDisableBackupOK  %+v", 200, o.Payload)
}
func (o *BackupDisableBackupOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *BackupDisableBackupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupDisableBackupBadRequest creates a BackupDisableBackupBadRequest with default headers values
func NewBackupDisableBackupBadRequest() *BackupDisableBackupBadRequest {
	return &BackupDisableBackupBadRequest{}
}

/* BackupDisableBackupBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type BackupDisableBackupBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *BackupDisableBackupBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/disablebackup][%d] backupDisableBackupBadRequest  %+v", 400, o.Payload)
}
func (o *BackupDisableBackupBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *BackupDisableBackupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupDisableBackupUnauthorized creates a BackupDisableBackupUnauthorized with default headers values
func NewBackupDisableBackupUnauthorized() *BackupDisableBackupUnauthorized {
	return &BackupDisableBackupUnauthorized{}
}

/* BackupDisableBackupUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type BackupDisableBackupUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *BackupDisableBackupUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/disablebackup][%d] backupDisableBackupUnauthorized  %+v", 401, o.Payload)
}
func (o *BackupDisableBackupUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *BackupDisableBackupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupDisableBackupForbidden creates a BackupDisableBackupForbidden with default headers values
func NewBackupDisableBackupForbidden() *BackupDisableBackupForbidden {
	return &BackupDisableBackupForbidden{}
}

/* BackupDisableBackupForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type BackupDisableBackupForbidden struct {
	Payload *models.ProblemDetails
}

func (o *BackupDisableBackupForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/disablebackup][%d] backupDisableBackupForbidden  %+v", 403, o.Payload)
}
func (o *BackupDisableBackupForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *BackupDisableBackupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupDisableBackupNotFound creates a BackupDisableBackupNotFound with default headers values
func NewBackupDisableBackupNotFound() *BackupDisableBackupNotFound {
	return &BackupDisableBackupNotFound{}
}

/* BackupDisableBackupNotFound describes a response with status code 404, with default header values.

Not Found
*/
type BackupDisableBackupNotFound struct {
	Payload *models.ProblemDetails
}

func (o *BackupDisableBackupNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/disablebackup][%d] backupDisableBackupNotFound  %+v", 404, o.Payload)
}
func (o *BackupDisableBackupNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *BackupDisableBackupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupDisableBackupInternalServerError creates a BackupDisableBackupInternalServerError with default headers values
func NewBackupDisableBackupInternalServerError() *BackupDisableBackupInternalServerError {
	return &BackupDisableBackupInternalServerError{}
}

/* BackupDisableBackupInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type BackupDisableBackupInternalServerError struct {
}

func (o *BackupDisableBackupInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Backup/disablebackup][%d] backupDisableBackupInternalServerError ", 500)
}

func (o *BackupDisableBackupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
