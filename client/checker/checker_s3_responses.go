// Code generated by go-swagger; DO NOT EDIT.

package checker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// CheckerS3Reader is a Reader for the CheckerS3 structure.
type CheckerS3Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CheckerS3Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCheckerS3OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCheckerS3BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCheckerS3Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCheckerS3Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCheckerS3NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCheckerS3TooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCheckerS3InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCheckerS3OK creates a CheckerS3OK with default headers values
func NewCheckerS3OK() *CheckerS3OK {
	return &CheckerS3OK{}
}

/* CheckerS3OK describes a response with status code 200, with default header values.

Success
*/
type CheckerS3OK struct {
	Payload models.Unit
}

func (o *CheckerS3OK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/s3][%d] checkerS3OK  %+v", 200, o.Payload)
}
func (o *CheckerS3OK) GetPayload() models.Unit {
	return o.Payload
}

func (o *CheckerS3OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerS3BadRequest creates a CheckerS3BadRequest with default headers values
func NewCheckerS3BadRequest() *CheckerS3BadRequest {
	return &CheckerS3BadRequest{}
}

/* CheckerS3BadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CheckerS3BadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *CheckerS3BadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/s3][%d] checkerS3BadRequest  %+v", 400, o.Payload)
}
func (o *CheckerS3BadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *CheckerS3BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerS3Unauthorized creates a CheckerS3Unauthorized with default headers values
func NewCheckerS3Unauthorized() *CheckerS3Unauthorized {
	return &CheckerS3Unauthorized{}
}

/* CheckerS3Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CheckerS3Unauthorized struct {
	Payload *models.ProblemDetails
}

func (o *CheckerS3Unauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/s3][%d] checkerS3Unauthorized  %+v", 401, o.Payload)
}
func (o *CheckerS3Unauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CheckerS3Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerS3Forbidden creates a CheckerS3Forbidden with default headers values
func NewCheckerS3Forbidden() *CheckerS3Forbidden {
	return &CheckerS3Forbidden{}
}

/* CheckerS3Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CheckerS3Forbidden struct {
	Payload *models.ProblemDetails
}

func (o *CheckerS3Forbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/s3][%d] checkerS3Forbidden  %+v", 403, o.Payload)
}
func (o *CheckerS3Forbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CheckerS3Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerS3NotFound creates a CheckerS3NotFound with default headers values
func NewCheckerS3NotFound() *CheckerS3NotFound {
	return &CheckerS3NotFound{}
}

/* CheckerS3NotFound describes a response with status code 404, with default header values.

Not Found
*/
type CheckerS3NotFound struct {
	Payload *models.ProblemDetails
}

func (o *CheckerS3NotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/s3][%d] checkerS3NotFound  %+v", 404, o.Payload)
}
func (o *CheckerS3NotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CheckerS3NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerS3TooManyRequests creates a CheckerS3TooManyRequests with default headers values
func NewCheckerS3TooManyRequests() *CheckerS3TooManyRequests {
	return &CheckerS3TooManyRequests{}
}

/* CheckerS3TooManyRequests describes a response with status code 429, with default header values.

Client Error
*/
type CheckerS3TooManyRequests struct {
	Payload *models.ProblemDetails
}

func (o *CheckerS3TooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/s3][%d] checkerS3TooManyRequests  %+v", 429, o.Payload)
}
func (o *CheckerS3TooManyRequests) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CheckerS3TooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerS3InternalServerError creates a CheckerS3InternalServerError with default headers values
func NewCheckerS3InternalServerError() *CheckerS3InternalServerError {
	return &CheckerS3InternalServerError{}
}

/* CheckerS3InternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CheckerS3InternalServerError struct {
}

func (o *CheckerS3InternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/s3][%d] checkerS3InternalServerError ", 500)
}

func (o *CheckerS3InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
