// Code generated by go-swagger; DO NOT EDIT.

package checker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// CheckerGoogleReader is a Reader for the CheckerGoogle structure.
type CheckerGoogleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CheckerGoogleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCheckerGoogleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCheckerGoogleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCheckerGoogleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCheckerGoogleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCheckerGoogleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCheckerGoogleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCheckerGoogleOK creates a CheckerGoogleOK with default headers values
func NewCheckerGoogleOK() *CheckerGoogleOK {
	return &CheckerGoogleOK{}
}

/* CheckerGoogleOK describes a response with status code 200, with default header values.

Success
*/
type CheckerGoogleOK struct {
	Payload models.Unit
}

func (o *CheckerGoogleOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/google][%d] checkerGoogleOK  %+v", 200, o.Payload)
}
func (o *CheckerGoogleOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *CheckerGoogleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerGoogleBadRequest creates a CheckerGoogleBadRequest with default headers values
func NewCheckerGoogleBadRequest() *CheckerGoogleBadRequest {
	return &CheckerGoogleBadRequest{}
}

/* CheckerGoogleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CheckerGoogleBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *CheckerGoogleBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/google][%d] checkerGoogleBadRequest  %+v", 400, o.Payload)
}
func (o *CheckerGoogleBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *CheckerGoogleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerGoogleUnauthorized creates a CheckerGoogleUnauthorized with default headers values
func NewCheckerGoogleUnauthorized() *CheckerGoogleUnauthorized {
	return &CheckerGoogleUnauthorized{}
}

/* CheckerGoogleUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CheckerGoogleUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *CheckerGoogleUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/google][%d] checkerGoogleUnauthorized  %+v", 401, o.Payload)
}
func (o *CheckerGoogleUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CheckerGoogleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerGoogleForbidden creates a CheckerGoogleForbidden with default headers values
func NewCheckerGoogleForbidden() *CheckerGoogleForbidden {
	return &CheckerGoogleForbidden{}
}

/* CheckerGoogleForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CheckerGoogleForbidden struct {
	Payload *models.ProblemDetails
}

func (o *CheckerGoogleForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/google][%d] checkerGoogleForbidden  %+v", 403, o.Payload)
}
func (o *CheckerGoogleForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CheckerGoogleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerGoogleNotFound creates a CheckerGoogleNotFound with default headers values
func NewCheckerGoogleNotFound() *CheckerGoogleNotFound {
	return &CheckerGoogleNotFound{}
}

/* CheckerGoogleNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CheckerGoogleNotFound struct {
	Payload *models.ProblemDetails
}

func (o *CheckerGoogleNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/google][%d] checkerGoogleNotFound  %+v", 404, o.Payload)
}
func (o *CheckerGoogleNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CheckerGoogleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerGoogleInternalServerError creates a CheckerGoogleInternalServerError with default headers values
func NewCheckerGoogleInternalServerError() *CheckerGoogleInternalServerError {
	return &CheckerGoogleInternalServerError{}
}

/* CheckerGoogleInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CheckerGoogleInternalServerError struct {
}

func (o *CheckerGoogleInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/google][%d] checkerGoogleInternalServerError ", 500)
}

func (o *CheckerGoogleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
