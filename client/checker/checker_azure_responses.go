// Code generated by go-swagger; DO NOT EDIT.

package checker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CheckerAzureReader is a Reader for the CheckerAzure structure.
type CheckerAzureReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CheckerAzureReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCheckerAzureOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCheckerAzureBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCheckerAzureUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCheckerAzureForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCheckerAzureNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCheckerAzureInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCheckerAzureOK creates a CheckerAzureOK with default headers values
func NewCheckerAzureOK() *CheckerAzureOK {
	return &CheckerAzureOK{}
}

/*
CheckerAzureOK describes a response with status code 200, with default header values.

Success
*/
type CheckerAzureOK struct {
	Payload interface{}
}

// IsSuccess returns true when this checker azure o k response has a 2xx status code
func (o *CheckerAzureOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this checker azure o k response has a 3xx status code
func (o *CheckerAzureOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this checker azure o k response has a 4xx status code
func (o *CheckerAzureOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this checker azure o k response has a 5xx status code
func (o *CheckerAzureOK) IsServerError() bool {
	return false
}

// IsCode returns true when this checker azure o k response a status code equal to that given
func (o *CheckerAzureOK) IsCode(code int) bool {
	return code == 200
}

func (o *CheckerAzureOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/azure][%d] checkerAzureOK  %+v", 200, o.Payload)
}

func (o *CheckerAzureOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/azure][%d] checkerAzureOK  %+v", 200, o.Payload)
}

func (o *CheckerAzureOK) GetPayload() interface{} {
	return o.Payload
}

func (o *CheckerAzureOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerAzureBadRequest creates a CheckerAzureBadRequest with default headers values
func NewCheckerAzureBadRequest() *CheckerAzureBadRequest {
	return &CheckerAzureBadRequest{}
}

/*
CheckerAzureBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CheckerAzureBadRequest struct {
	Payload []*CheckerAzureBadRequestBodyItems0
}

// IsSuccess returns true when this checker azure bad request response has a 2xx status code
func (o *CheckerAzureBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this checker azure bad request response has a 3xx status code
func (o *CheckerAzureBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this checker azure bad request response has a 4xx status code
func (o *CheckerAzureBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this checker azure bad request response has a 5xx status code
func (o *CheckerAzureBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this checker azure bad request response a status code equal to that given
func (o *CheckerAzureBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CheckerAzureBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/azure][%d] checkerAzureBadRequest  %+v", 400, o.Payload)
}

func (o *CheckerAzureBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/azure][%d] checkerAzureBadRequest  %+v", 400, o.Payload)
}

func (o *CheckerAzureBadRequest) GetPayload() []*CheckerAzureBadRequestBodyItems0 {
	return o.Payload
}

func (o *CheckerAzureBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerAzureUnauthorized creates a CheckerAzureUnauthorized with default headers values
func NewCheckerAzureUnauthorized() *CheckerAzureUnauthorized {
	return &CheckerAzureUnauthorized{}
}

/*
CheckerAzureUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CheckerAzureUnauthorized struct {
	Payload *CheckerAzureUnauthorizedBody
}

// IsSuccess returns true when this checker azure unauthorized response has a 2xx status code
func (o *CheckerAzureUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this checker azure unauthorized response has a 3xx status code
func (o *CheckerAzureUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this checker azure unauthorized response has a 4xx status code
func (o *CheckerAzureUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this checker azure unauthorized response has a 5xx status code
func (o *CheckerAzureUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this checker azure unauthorized response a status code equal to that given
func (o *CheckerAzureUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CheckerAzureUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/azure][%d] checkerAzureUnauthorized  %+v", 401, o.Payload)
}

func (o *CheckerAzureUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/azure][%d] checkerAzureUnauthorized  %+v", 401, o.Payload)
}

func (o *CheckerAzureUnauthorized) GetPayload() *CheckerAzureUnauthorizedBody {
	return o.Payload
}

func (o *CheckerAzureUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CheckerAzureUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerAzureForbidden creates a CheckerAzureForbidden with default headers values
func NewCheckerAzureForbidden() *CheckerAzureForbidden {
	return &CheckerAzureForbidden{}
}

/*
CheckerAzureForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CheckerAzureForbidden struct {
	Payload *CheckerAzureForbiddenBody
}

// IsSuccess returns true when this checker azure forbidden response has a 2xx status code
func (o *CheckerAzureForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this checker azure forbidden response has a 3xx status code
func (o *CheckerAzureForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this checker azure forbidden response has a 4xx status code
func (o *CheckerAzureForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this checker azure forbidden response has a 5xx status code
func (o *CheckerAzureForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this checker azure forbidden response a status code equal to that given
func (o *CheckerAzureForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CheckerAzureForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/azure][%d] checkerAzureForbidden  %+v", 403, o.Payload)
}

func (o *CheckerAzureForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/azure][%d] checkerAzureForbidden  %+v", 403, o.Payload)
}

func (o *CheckerAzureForbidden) GetPayload() *CheckerAzureForbiddenBody {
	return o.Payload
}

func (o *CheckerAzureForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CheckerAzureForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerAzureNotFound creates a CheckerAzureNotFound with default headers values
func NewCheckerAzureNotFound() *CheckerAzureNotFound {
	return &CheckerAzureNotFound{}
}

/*
CheckerAzureNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CheckerAzureNotFound struct {
	Payload *CheckerAzureNotFoundBody
}

// IsSuccess returns true when this checker azure not found response has a 2xx status code
func (o *CheckerAzureNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this checker azure not found response has a 3xx status code
func (o *CheckerAzureNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this checker azure not found response has a 4xx status code
func (o *CheckerAzureNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this checker azure not found response has a 5xx status code
func (o *CheckerAzureNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this checker azure not found response a status code equal to that given
func (o *CheckerAzureNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CheckerAzureNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/azure][%d] checkerAzureNotFound  %+v", 404, o.Payload)
}

func (o *CheckerAzureNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/azure][%d] checkerAzureNotFound  %+v", 404, o.Payload)
}

func (o *CheckerAzureNotFound) GetPayload() *CheckerAzureNotFoundBody {
	return o.Payload
}

func (o *CheckerAzureNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CheckerAzureNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerAzureInternalServerError creates a CheckerAzureInternalServerError with default headers values
func NewCheckerAzureInternalServerError() *CheckerAzureInternalServerError {
	return &CheckerAzureInternalServerError{}
}

/*
CheckerAzureInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CheckerAzureInternalServerError struct {
}

// IsSuccess returns true when this checker azure internal server error response has a 2xx status code
func (o *CheckerAzureInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this checker azure internal server error response has a 3xx status code
func (o *CheckerAzureInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this checker azure internal server error response has a 4xx status code
func (o *CheckerAzureInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this checker azure internal server error response has a 5xx status code
func (o *CheckerAzureInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this checker azure internal server error response a status code equal to that given
func (o *CheckerAzureInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CheckerAzureInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/azure][%d] checkerAzureInternalServerError ", 500)
}

func (o *CheckerAzureInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/azure][%d] checkerAzureInternalServerError ", 500)
}

func (o *CheckerAzureInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
CheckerAzureBadRequestBodyItems0 checker azure bad request body items0
swagger:model CheckerAzureBadRequestBodyItems0
*/
type CheckerAzureBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this checker azure bad request body items0
func (o *CheckerAzureBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this checker azure bad request body items0 based on context it is used
func (o *CheckerAzureBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CheckerAzureBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CheckerAzureBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res CheckerAzureBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CheckerAzureBody checker azure body
swagger:model CheckerAzureBody
*/
type CheckerAzureBody struct {

	// azure client Id
	AzureClientID string `json:"azureClientId,omitempty"`

	// azure client secret
	AzureClientSecret string `json:"azureClientSecret,omitempty"`

	// azure tenant Id
	AzureTenantID string `json:"azureTenantId,omitempty"`
}

// Validate validates this checker azure body
func (o *CheckerAzureBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this checker azure body based on context it is used
func (o *CheckerAzureBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CheckerAzureBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CheckerAzureBody) UnmarshalBinary(b []byte) error {
	var res CheckerAzureBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CheckerAzureForbiddenBody checker azure forbidden body
swagger:model CheckerAzureForbiddenBody
*/
type CheckerAzureForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this checker azure forbidden body
func (o *CheckerAzureForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this checker azure forbidden body based on context it is used
func (o *CheckerAzureForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CheckerAzureForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CheckerAzureForbiddenBody) UnmarshalBinary(b []byte) error {
	var res CheckerAzureForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CheckerAzureNotFoundBody checker azure not found body
swagger:model CheckerAzureNotFoundBody
*/
type CheckerAzureNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this checker azure not found body
func (o *CheckerAzureNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this checker azure not found body based on context it is used
func (o *CheckerAzureNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CheckerAzureNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CheckerAzureNotFoundBody) UnmarshalBinary(b []byte) error {
	var res CheckerAzureNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CheckerAzureUnauthorizedBody checker azure unauthorized body
swagger:model CheckerAzureUnauthorizedBody
*/
type CheckerAzureUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this checker azure unauthorized body
func (o *CheckerAzureUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this checker azure unauthorized body based on context it is used
func (o *CheckerAzureUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CheckerAzureUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CheckerAzureUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res CheckerAzureUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
