// Code generated by go-swagger; DO NOT EDIT.

package checker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CheckerArtifactReader is a Reader for the CheckerArtifact structure.
type CheckerArtifactReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CheckerArtifactReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCheckerArtifactOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCheckerArtifactBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCheckerArtifactUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCheckerArtifactForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCheckerArtifactNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCheckerArtifactInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCheckerArtifactOK creates a CheckerArtifactOK with default headers values
func NewCheckerArtifactOK() *CheckerArtifactOK {
	return &CheckerArtifactOK{}
}

/*
CheckerArtifactOK describes a response with status code 200, with default header values.

Success
*/
type CheckerArtifactOK struct {
}

// IsSuccess returns true when this checker artifact o k response has a 2xx status code
func (o *CheckerArtifactOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this checker artifact o k response has a 3xx status code
func (o *CheckerArtifactOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this checker artifact o k response has a 4xx status code
func (o *CheckerArtifactOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this checker artifact o k response has a 5xx status code
func (o *CheckerArtifactOK) IsServerError() bool {
	return false
}

// IsCode returns true when this checker artifact o k response a status code equal to that given
func (o *CheckerArtifactOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the checker artifact o k response
func (o *CheckerArtifactOK) Code() int {
	return 200
}

func (o *CheckerArtifactOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/artifact][%d] checkerArtifactOK ", 200)
}

func (o *CheckerArtifactOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/artifact][%d] checkerArtifactOK ", 200)
}

func (o *CheckerArtifactOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCheckerArtifactBadRequest creates a CheckerArtifactBadRequest with default headers values
func NewCheckerArtifactBadRequest() *CheckerArtifactBadRequest {
	return &CheckerArtifactBadRequest{}
}

/*
CheckerArtifactBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CheckerArtifactBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this checker artifact bad request response has a 2xx status code
func (o *CheckerArtifactBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this checker artifact bad request response has a 3xx status code
func (o *CheckerArtifactBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this checker artifact bad request response has a 4xx status code
func (o *CheckerArtifactBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this checker artifact bad request response has a 5xx status code
func (o *CheckerArtifactBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this checker artifact bad request response a status code equal to that given
func (o *CheckerArtifactBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the checker artifact bad request response
func (o *CheckerArtifactBadRequest) Code() int {
	return 400
}

func (o *CheckerArtifactBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/artifact][%d] checkerArtifactBadRequest  %+v", 400, o.Payload)
}

func (o *CheckerArtifactBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/artifact][%d] checkerArtifactBadRequest  %+v", 400, o.Payload)
}

func (o *CheckerArtifactBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *CheckerArtifactBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerArtifactUnauthorized creates a CheckerArtifactUnauthorized with default headers values
func NewCheckerArtifactUnauthorized() *CheckerArtifactUnauthorized {
	return &CheckerArtifactUnauthorized{}
}

/*
CheckerArtifactUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CheckerArtifactUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this checker artifact unauthorized response has a 2xx status code
func (o *CheckerArtifactUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this checker artifact unauthorized response has a 3xx status code
func (o *CheckerArtifactUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this checker artifact unauthorized response has a 4xx status code
func (o *CheckerArtifactUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this checker artifact unauthorized response has a 5xx status code
func (o *CheckerArtifactUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this checker artifact unauthorized response a status code equal to that given
func (o *CheckerArtifactUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the checker artifact unauthorized response
func (o *CheckerArtifactUnauthorized) Code() int {
	return 401
}

func (o *CheckerArtifactUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/artifact][%d] checkerArtifactUnauthorized  %+v", 401, o.Payload)
}

func (o *CheckerArtifactUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/artifact][%d] checkerArtifactUnauthorized  %+v", 401, o.Payload)
}

func (o *CheckerArtifactUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *CheckerArtifactUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerArtifactForbidden creates a CheckerArtifactForbidden with default headers values
func NewCheckerArtifactForbidden() *CheckerArtifactForbidden {
	return &CheckerArtifactForbidden{}
}

/*
CheckerArtifactForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CheckerArtifactForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this checker artifact forbidden response has a 2xx status code
func (o *CheckerArtifactForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this checker artifact forbidden response has a 3xx status code
func (o *CheckerArtifactForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this checker artifact forbidden response has a 4xx status code
func (o *CheckerArtifactForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this checker artifact forbidden response has a 5xx status code
func (o *CheckerArtifactForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this checker artifact forbidden response a status code equal to that given
func (o *CheckerArtifactForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the checker artifact forbidden response
func (o *CheckerArtifactForbidden) Code() int {
	return 403
}

func (o *CheckerArtifactForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/artifact][%d] checkerArtifactForbidden  %+v", 403, o.Payload)
}

func (o *CheckerArtifactForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/artifact][%d] checkerArtifactForbidden  %+v", 403, o.Payload)
}

func (o *CheckerArtifactForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *CheckerArtifactForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerArtifactNotFound creates a CheckerArtifactNotFound with default headers values
func NewCheckerArtifactNotFound() *CheckerArtifactNotFound {
	return &CheckerArtifactNotFound{}
}

/*
CheckerArtifactNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CheckerArtifactNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this checker artifact not found response has a 2xx status code
func (o *CheckerArtifactNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this checker artifact not found response has a 3xx status code
func (o *CheckerArtifactNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this checker artifact not found response has a 4xx status code
func (o *CheckerArtifactNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this checker artifact not found response has a 5xx status code
func (o *CheckerArtifactNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this checker artifact not found response a status code equal to that given
func (o *CheckerArtifactNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the checker artifact not found response
func (o *CheckerArtifactNotFound) Code() int {
	return 404
}

func (o *CheckerArtifactNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/artifact][%d] checkerArtifactNotFound  %+v", 404, o.Payload)
}

func (o *CheckerArtifactNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/artifact][%d] checkerArtifactNotFound  %+v", 404, o.Payload)
}

func (o *CheckerArtifactNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *CheckerArtifactNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerArtifactInternalServerError creates a CheckerArtifactInternalServerError with default headers values
func NewCheckerArtifactInternalServerError() *CheckerArtifactInternalServerError {
	return &CheckerArtifactInternalServerError{}
}

/*
CheckerArtifactInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CheckerArtifactInternalServerError struct {
}

// IsSuccess returns true when this checker artifact internal server error response has a 2xx status code
func (o *CheckerArtifactInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this checker artifact internal server error response has a 3xx status code
func (o *CheckerArtifactInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this checker artifact internal server error response has a 4xx status code
func (o *CheckerArtifactInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this checker artifact internal server error response has a 5xx status code
func (o *CheckerArtifactInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this checker artifact internal server error response a status code equal to that given
func (o *CheckerArtifactInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the checker artifact internal server error response
func (o *CheckerArtifactInternalServerError) Code() int {
	return 500
}

func (o *CheckerArtifactInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/artifact][%d] checkerArtifactInternalServerError ", 500)
}

func (o *CheckerArtifactInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/artifact][%d] checkerArtifactInternalServerError ", 500)
}

func (o *CheckerArtifactInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
