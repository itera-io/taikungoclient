// Code generated by go-swagger; DO NOT EDIT.

package checker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// CheckerCronReader is a Reader for the CheckerCron structure.
type CheckerCronReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CheckerCronReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCheckerCronOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCheckerCronBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCheckerCronUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCheckerCronForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCheckerCronNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCheckerCronInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCheckerCronOK creates a CheckerCronOK with default headers values
func NewCheckerCronOK() *CheckerCronOK {
	return &CheckerCronOK{}
}

/* CheckerCronOK describes a response with status code 200, with default header values.

Success
*/
type CheckerCronOK struct {
	Payload models.Unit
}

func (o *CheckerCronOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/cron][%d] checkerCronOK  %+v", 200, o.Payload)
}
func (o *CheckerCronOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *CheckerCronOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerCronBadRequest creates a CheckerCronBadRequest with default headers values
func NewCheckerCronBadRequest() *CheckerCronBadRequest {
	return &CheckerCronBadRequest{}
}

/* CheckerCronBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CheckerCronBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *CheckerCronBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/cron][%d] checkerCronBadRequest  %+v", 400, o.Payload)
}
func (o *CheckerCronBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *CheckerCronBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerCronUnauthorized creates a CheckerCronUnauthorized with default headers values
func NewCheckerCronUnauthorized() *CheckerCronUnauthorized {
	return &CheckerCronUnauthorized{}
}

/* CheckerCronUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CheckerCronUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *CheckerCronUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/cron][%d] checkerCronUnauthorized  %+v", 401, o.Payload)
}
func (o *CheckerCronUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CheckerCronUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerCronForbidden creates a CheckerCronForbidden with default headers values
func NewCheckerCronForbidden() *CheckerCronForbidden {
	return &CheckerCronForbidden{}
}

/* CheckerCronForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CheckerCronForbidden struct {
	Payload *models.ProblemDetails
}

func (o *CheckerCronForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/cron][%d] checkerCronForbidden  %+v", 403, o.Payload)
}
func (o *CheckerCronForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CheckerCronForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerCronNotFound creates a CheckerCronNotFound with default headers values
func NewCheckerCronNotFound() *CheckerCronNotFound {
	return &CheckerCronNotFound{}
}

/* CheckerCronNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CheckerCronNotFound struct {
	Payload *models.ProblemDetails
}

func (o *CheckerCronNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/cron][%d] checkerCronNotFound  %+v", 404, o.Payload)
}
func (o *CheckerCronNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CheckerCronNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerCronInternalServerError creates a CheckerCronInternalServerError with default headers values
func NewCheckerCronInternalServerError() *CheckerCronInternalServerError {
	return &CheckerCronInternalServerError{}
}

/* CheckerCronInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CheckerCronInternalServerError struct {
}

func (o *CheckerCronInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/cron][%d] checkerCronInternalServerError ", 500)
}

func (o *CheckerCronInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
