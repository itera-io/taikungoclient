// Code generated by go-swagger; DO NOT EDIT.

package checker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// CheckerSSHReader is a Reader for the CheckerSSH structure.
type CheckerSSHReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CheckerSSHReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCheckerSSHOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCheckerSSHBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCheckerSSHUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCheckerSSHForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCheckerSSHNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCheckerSSHInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCheckerSSHOK creates a CheckerSSHOK with default headers values
func NewCheckerSSHOK() *CheckerSSHOK {
	return &CheckerSSHOK{}
}

/* CheckerSSHOK describes a response with status code 200, with default header values.

Success
*/
type CheckerSSHOK struct {
	Payload models.Unit
}

func (o *CheckerSSHOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/ssh][%d] checkerSshOK  %+v", 200, o.Payload)
}
func (o *CheckerSSHOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *CheckerSSHOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerSSHBadRequest creates a CheckerSSHBadRequest with default headers values
func NewCheckerSSHBadRequest() *CheckerSSHBadRequest {
	return &CheckerSSHBadRequest{}
}

/* CheckerSSHBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CheckerSSHBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *CheckerSSHBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/ssh][%d] checkerSshBadRequest  %+v", 400, o.Payload)
}
func (o *CheckerSSHBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *CheckerSSHBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerSSHUnauthorized creates a CheckerSSHUnauthorized with default headers values
func NewCheckerSSHUnauthorized() *CheckerSSHUnauthorized {
	return &CheckerSSHUnauthorized{}
}

/* CheckerSSHUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CheckerSSHUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *CheckerSSHUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/ssh][%d] checkerSshUnauthorized  %+v", 401, o.Payload)
}
func (o *CheckerSSHUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CheckerSSHUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerSSHForbidden creates a CheckerSSHForbidden with default headers values
func NewCheckerSSHForbidden() *CheckerSSHForbidden {
	return &CheckerSSHForbidden{}
}

/* CheckerSSHForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CheckerSSHForbidden struct {
	Payload *models.ProblemDetails
}

func (o *CheckerSSHForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/ssh][%d] checkerSshForbidden  %+v", 403, o.Payload)
}
func (o *CheckerSSHForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CheckerSSHForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerSSHNotFound creates a CheckerSSHNotFound with default headers values
func NewCheckerSSHNotFound() *CheckerSSHNotFound {
	return &CheckerSSHNotFound{}
}

/* CheckerSSHNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CheckerSSHNotFound struct {
	Payload *models.ProblemDetails
}

func (o *CheckerSSHNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/ssh][%d] checkerSshNotFound  %+v", 404, o.Payload)
}
func (o *CheckerSSHNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CheckerSSHNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckerSSHInternalServerError creates a CheckerSSHInternalServerError with default headers values
func NewCheckerSSHInternalServerError() *CheckerSSHInternalServerError {
	return &CheckerSSHInternalServerError{}
}

/* CheckerSSHInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CheckerSSHInternalServerError struct {
}

func (o *CheckerSSHInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Checker/ssh][%d] checkerSshInternalServerError ", 500)
}

func (o *CheckerSSHInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
