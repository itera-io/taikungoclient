/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the ProjectDescribeDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectDescribeDto{}

// ProjectDescribeDto struct for ProjectDescribeDto
type ProjectDescribeDto struct {
	ProjectId *int32 `json:"projectId,omitempty"`
	ProjectName NullableString `json:"projectName,omitempty"`
	IsMonitoringEnabled *bool `json:"isMonitoringEnabled,omitempty"`
	IsBackupEnabled *bool `json:"isBackupEnabled,omitempty"`
	IsAutoUpgradeEnabled *bool `json:"isAutoUpgradeEnabled,omitempty"`
	ServersCount *int32 `json:"serversCount,omitempty"`
	VmsCount *int32 `json:"vmsCount,omitempty"`
	AlertsCount *int32 `json:"alertsCount,omitempty"`
	LastModifiedBy NullableString `json:"lastModifiedBy,omitempty"`
	CreatedBy NullableString `json:"createdBy,omitempty"`
	LastModified NullableString `json:"lastModified,omitempty"`
	Flavors []string `json:"flavors,omitempty"`
	Images []string `json:"images,omitempty"`
	AccessIp NullableString `json:"accessIp,omitempty"`
}

// NewProjectDescribeDto instantiates a new ProjectDescribeDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectDescribeDto() *ProjectDescribeDto {
	this := ProjectDescribeDto{}
	return &this
}

// NewProjectDescribeDtoWithDefaults instantiates a new ProjectDescribeDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectDescribeDtoWithDefaults() *ProjectDescribeDto {
	this := ProjectDescribeDto{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ProjectDescribeDto) GetProjectId() int32 {
	if o == nil || IsNil(o.ProjectId) {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDescribeDto) GetProjectIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ProjectDescribeDto) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *ProjectDescribeDto) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDescribeDto) GetProjectName() string {
	if o == nil || IsNil(o.ProjectName.Get()) {
		var ret string
		return ret
	}
	return *o.ProjectName.Get()
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDescribeDto) GetProjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectName.Get(), o.ProjectName.IsSet()
}

// HasProjectName returns a boolean if a field has been set.
func (o *ProjectDescribeDto) HasProjectName() bool {
	if o != nil && o.ProjectName.IsSet() {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given NullableString and assigns it to the ProjectName field.
func (o *ProjectDescribeDto) SetProjectName(v string) {
	o.ProjectName.Set(&v)
}
// SetProjectNameNil sets the value for ProjectName to be an explicit nil
func (o *ProjectDescribeDto) SetProjectNameNil() {
	o.ProjectName.Set(nil)
}

// UnsetProjectName ensures that no value is present for ProjectName, not even an explicit nil
func (o *ProjectDescribeDto) UnsetProjectName() {
	o.ProjectName.Unset()
}

// GetIsMonitoringEnabled returns the IsMonitoringEnabled field value if set, zero value otherwise.
func (o *ProjectDescribeDto) GetIsMonitoringEnabled() bool {
	if o == nil || IsNil(o.IsMonitoringEnabled) {
		var ret bool
		return ret
	}
	return *o.IsMonitoringEnabled
}

// GetIsMonitoringEnabledOk returns a tuple with the IsMonitoringEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDescribeDto) GetIsMonitoringEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMonitoringEnabled) {
		return nil, false
	}
	return o.IsMonitoringEnabled, true
}

// HasIsMonitoringEnabled returns a boolean if a field has been set.
func (o *ProjectDescribeDto) HasIsMonitoringEnabled() bool {
	if o != nil && !IsNil(o.IsMonitoringEnabled) {
		return true
	}

	return false
}

// SetIsMonitoringEnabled gets a reference to the given bool and assigns it to the IsMonitoringEnabled field.
func (o *ProjectDescribeDto) SetIsMonitoringEnabled(v bool) {
	o.IsMonitoringEnabled = &v
}

// GetIsBackupEnabled returns the IsBackupEnabled field value if set, zero value otherwise.
func (o *ProjectDescribeDto) GetIsBackupEnabled() bool {
	if o == nil || IsNil(o.IsBackupEnabled) {
		var ret bool
		return ret
	}
	return *o.IsBackupEnabled
}

// GetIsBackupEnabledOk returns a tuple with the IsBackupEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDescribeDto) GetIsBackupEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBackupEnabled) {
		return nil, false
	}
	return o.IsBackupEnabled, true
}

// HasIsBackupEnabled returns a boolean if a field has been set.
func (o *ProjectDescribeDto) HasIsBackupEnabled() bool {
	if o != nil && !IsNil(o.IsBackupEnabled) {
		return true
	}

	return false
}

// SetIsBackupEnabled gets a reference to the given bool and assigns it to the IsBackupEnabled field.
func (o *ProjectDescribeDto) SetIsBackupEnabled(v bool) {
	o.IsBackupEnabled = &v
}

// GetIsAutoUpgradeEnabled returns the IsAutoUpgradeEnabled field value if set, zero value otherwise.
func (o *ProjectDescribeDto) GetIsAutoUpgradeEnabled() bool {
	if o == nil || IsNil(o.IsAutoUpgradeEnabled) {
		var ret bool
		return ret
	}
	return *o.IsAutoUpgradeEnabled
}

// GetIsAutoUpgradeEnabledOk returns a tuple with the IsAutoUpgradeEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDescribeDto) GetIsAutoUpgradeEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutoUpgradeEnabled) {
		return nil, false
	}
	return o.IsAutoUpgradeEnabled, true
}

// HasIsAutoUpgradeEnabled returns a boolean if a field has been set.
func (o *ProjectDescribeDto) HasIsAutoUpgradeEnabled() bool {
	if o != nil && !IsNil(o.IsAutoUpgradeEnabled) {
		return true
	}

	return false
}

// SetIsAutoUpgradeEnabled gets a reference to the given bool and assigns it to the IsAutoUpgradeEnabled field.
func (o *ProjectDescribeDto) SetIsAutoUpgradeEnabled(v bool) {
	o.IsAutoUpgradeEnabled = &v
}

// GetServersCount returns the ServersCount field value if set, zero value otherwise.
func (o *ProjectDescribeDto) GetServersCount() int32 {
	if o == nil || IsNil(o.ServersCount) {
		var ret int32
		return ret
	}
	return *o.ServersCount
}

// GetServersCountOk returns a tuple with the ServersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDescribeDto) GetServersCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ServersCount) {
		return nil, false
	}
	return o.ServersCount, true
}

// HasServersCount returns a boolean if a field has been set.
func (o *ProjectDescribeDto) HasServersCount() bool {
	if o != nil && !IsNil(o.ServersCount) {
		return true
	}

	return false
}

// SetServersCount gets a reference to the given int32 and assigns it to the ServersCount field.
func (o *ProjectDescribeDto) SetServersCount(v int32) {
	o.ServersCount = &v
}

// GetVmsCount returns the VmsCount field value if set, zero value otherwise.
func (o *ProjectDescribeDto) GetVmsCount() int32 {
	if o == nil || IsNil(o.VmsCount) {
		var ret int32
		return ret
	}
	return *o.VmsCount
}

// GetVmsCountOk returns a tuple with the VmsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDescribeDto) GetVmsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.VmsCount) {
		return nil, false
	}
	return o.VmsCount, true
}

// HasVmsCount returns a boolean if a field has been set.
func (o *ProjectDescribeDto) HasVmsCount() bool {
	if o != nil && !IsNil(o.VmsCount) {
		return true
	}

	return false
}

// SetVmsCount gets a reference to the given int32 and assigns it to the VmsCount field.
func (o *ProjectDescribeDto) SetVmsCount(v int32) {
	o.VmsCount = &v
}

// GetAlertsCount returns the AlertsCount field value if set, zero value otherwise.
func (o *ProjectDescribeDto) GetAlertsCount() int32 {
	if o == nil || IsNil(o.AlertsCount) {
		var ret int32
		return ret
	}
	return *o.AlertsCount
}

// GetAlertsCountOk returns a tuple with the AlertsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDescribeDto) GetAlertsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AlertsCount) {
		return nil, false
	}
	return o.AlertsCount, true
}

// HasAlertsCount returns a boolean if a field has been set.
func (o *ProjectDescribeDto) HasAlertsCount() bool {
	if o != nil && !IsNil(o.AlertsCount) {
		return true
	}

	return false
}

// SetAlertsCount gets a reference to the given int32 and assigns it to the AlertsCount field.
func (o *ProjectDescribeDto) SetAlertsCount(v int32) {
	o.AlertsCount = &v
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDescribeDto) GetLastModifiedBy() string {
	if o == nil || IsNil(o.LastModifiedBy.Get()) {
		var ret string
		return ret
	}
	return *o.LastModifiedBy.Get()
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDescribeDto) GetLastModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModifiedBy.Get(), o.LastModifiedBy.IsSet()
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *ProjectDescribeDto) HasLastModifiedBy() bool {
	if o != nil && o.LastModifiedBy.IsSet() {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given NullableString and assigns it to the LastModifiedBy field.
func (o *ProjectDescribeDto) SetLastModifiedBy(v string) {
	o.LastModifiedBy.Set(&v)
}
// SetLastModifiedByNil sets the value for LastModifiedBy to be an explicit nil
func (o *ProjectDescribeDto) SetLastModifiedByNil() {
	o.LastModifiedBy.Set(nil)
}

// UnsetLastModifiedBy ensures that no value is present for LastModifiedBy, not even an explicit nil
func (o *ProjectDescribeDto) UnsetLastModifiedBy() {
	o.LastModifiedBy.Unset()
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDescribeDto) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDescribeDto) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ProjectDescribeDto) HasCreatedBy() bool {
	if o != nil && o.CreatedBy.IsSet() {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given NullableString and assigns it to the CreatedBy field.
func (o *ProjectDescribeDto) SetCreatedBy(v string) {
	o.CreatedBy.Set(&v)
}
// SetCreatedByNil sets the value for CreatedBy to be an explicit nil
func (o *ProjectDescribeDto) SetCreatedByNil() {
	o.CreatedBy.Set(nil)
}

// UnsetCreatedBy ensures that no value is present for CreatedBy, not even an explicit nil
func (o *ProjectDescribeDto) UnsetCreatedBy() {
	o.CreatedBy.Unset()
}

// GetLastModified returns the LastModified field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDescribeDto) GetLastModified() string {
	if o == nil || IsNil(o.LastModified.Get()) {
		var ret string
		return ret
	}
	return *o.LastModified.Get()
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDescribeDto) GetLastModifiedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModified.Get(), o.LastModified.IsSet()
}

// HasLastModified returns a boolean if a field has been set.
func (o *ProjectDescribeDto) HasLastModified() bool {
	if o != nil && o.LastModified.IsSet() {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given NullableString and assigns it to the LastModified field.
func (o *ProjectDescribeDto) SetLastModified(v string) {
	o.LastModified.Set(&v)
}
// SetLastModifiedNil sets the value for LastModified to be an explicit nil
func (o *ProjectDescribeDto) SetLastModifiedNil() {
	o.LastModified.Set(nil)
}

// UnsetLastModified ensures that no value is present for LastModified, not even an explicit nil
func (o *ProjectDescribeDto) UnsetLastModified() {
	o.LastModified.Unset()
}

// GetFlavors returns the Flavors field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDescribeDto) GetFlavors() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Flavors
}

// GetFlavorsOk returns a tuple with the Flavors field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDescribeDto) GetFlavorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Flavors) {
		return nil, false
	}
	return o.Flavors, true
}

// HasFlavors returns a boolean if a field has been set.
func (o *ProjectDescribeDto) HasFlavors() bool {
	if o != nil && !IsNil(o.Flavors) {
		return true
	}

	return false
}

// SetFlavors gets a reference to the given []string and assigns it to the Flavors field.
func (o *ProjectDescribeDto) SetFlavors(v []string) {
	o.Flavors = v
}

// GetImages returns the Images field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDescribeDto) GetImages() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDescribeDto) GetImagesOk() ([]string, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *ProjectDescribeDto) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []string and assigns it to the Images field.
func (o *ProjectDescribeDto) SetImages(v []string) {
	o.Images = v
}

// GetAccessIp returns the AccessIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDescribeDto) GetAccessIp() string {
	if o == nil || IsNil(o.AccessIp.Get()) {
		var ret string
		return ret
	}
	return *o.AccessIp.Get()
}

// GetAccessIpOk returns a tuple with the AccessIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDescribeDto) GetAccessIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessIp.Get(), o.AccessIp.IsSet()
}

// HasAccessIp returns a boolean if a field has been set.
func (o *ProjectDescribeDto) HasAccessIp() bool {
	if o != nil && o.AccessIp.IsSet() {
		return true
	}

	return false
}

// SetAccessIp gets a reference to the given NullableString and assigns it to the AccessIp field.
func (o *ProjectDescribeDto) SetAccessIp(v string) {
	o.AccessIp.Set(&v)
}
// SetAccessIpNil sets the value for AccessIp to be an explicit nil
func (o *ProjectDescribeDto) SetAccessIpNil() {
	o.AccessIp.Set(nil)
}

// UnsetAccessIp ensures that no value is present for AccessIp, not even an explicit nil
func (o *ProjectDescribeDto) UnsetAccessIp() {
	o.AccessIp.Unset()
}

func (o ProjectDescribeDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectDescribeDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.ProjectName.IsSet() {
		toSerialize["projectName"] = o.ProjectName.Get()
	}
	if !IsNil(o.IsMonitoringEnabled) {
		toSerialize["isMonitoringEnabled"] = o.IsMonitoringEnabled
	}
	if !IsNil(o.IsBackupEnabled) {
		toSerialize["isBackupEnabled"] = o.IsBackupEnabled
	}
	if !IsNil(o.IsAutoUpgradeEnabled) {
		toSerialize["isAutoUpgradeEnabled"] = o.IsAutoUpgradeEnabled
	}
	if !IsNil(o.ServersCount) {
		toSerialize["serversCount"] = o.ServersCount
	}
	if !IsNil(o.VmsCount) {
		toSerialize["vmsCount"] = o.VmsCount
	}
	if !IsNil(o.AlertsCount) {
		toSerialize["alertsCount"] = o.AlertsCount
	}
	if o.LastModifiedBy.IsSet() {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy.Get()
	}
	if o.CreatedBy.IsSet() {
		toSerialize["createdBy"] = o.CreatedBy.Get()
	}
	if o.LastModified.IsSet() {
		toSerialize["lastModified"] = o.LastModified.Get()
	}
	if o.Flavors != nil {
		toSerialize["flavors"] = o.Flavors
	}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	if o.AccessIp.IsSet() {
		toSerialize["accessIp"] = o.AccessIp.Get()
	}
	return toSerialize, nil
}

type NullableProjectDescribeDto struct {
	value *ProjectDescribeDto
	isSet bool
}

func (v NullableProjectDescribeDto) Get() *ProjectDescribeDto {
	return v.value
}

func (v *NullableProjectDescribeDto) Set(val *ProjectDescribeDto) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectDescribeDto) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectDescribeDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectDescribeDto(val *ProjectDescribeDto) *NullableProjectDescribeDto {
	return &NullableProjectDescribeDto{value: val, isSet: true}
}

func (v NullableProjectDescribeDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectDescribeDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


