// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AdminAddBalanceReader is a Reader for the AdminAddBalance structure.
type AdminAddBalanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AdminAddBalanceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAdminAddBalanceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAdminAddBalanceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAdminAddBalanceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAdminAddBalanceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAdminAddBalanceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAdminAddBalanceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAdminAddBalanceOK creates a AdminAddBalanceOK with default headers values
func NewAdminAddBalanceOK() *AdminAddBalanceOK {
	return &AdminAddBalanceOK{}
}

/*
AdminAddBalanceOK describes a response with status code 200, with default header values.

Success
*/
type AdminAddBalanceOK struct {
	Payload interface{}
}

// IsSuccess returns true when this admin add balance o k response has a 2xx status code
func (o *AdminAddBalanceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this admin add balance o k response has a 3xx status code
func (o *AdminAddBalanceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin add balance o k response has a 4xx status code
func (o *AdminAddBalanceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this admin add balance o k response has a 5xx status code
func (o *AdminAddBalanceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this admin add balance o k response a status code equal to that given
func (o *AdminAddBalanceOK) IsCode(code int) bool {
	return code == 200
}

func (o *AdminAddBalanceOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/organizations/add/balance][%d] adminAddBalanceOK  %+v", 200, o.Payload)
}

func (o *AdminAddBalanceOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/organizations/add/balance][%d] adminAddBalanceOK  %+v", 200, o.Payload)
}

func (o *AdminAddBalanceOK) GetPayload() interface{} {
	return o.Payload
}

func (o *AdminAddBalanceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminAddBalanceBadRequest creates a AdminAddBalanceBadRequest with default headers values
func NewAdminAddBalanceBadRequest() *AdminAddBalanceBadRequest {
	return &AdminAddBalanceBadRequest{}
}

/*
AdminAddBalanceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AdminAddBalanceBadRequest struct {
	Payload []*AdminAddBalanceBadRequestBodyItems0
}

// IsSuccess returns true when this admin add balance bad request response has a 2xx status code
func (o *AdminAddBalanceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin add balance bad request response has a 3xx status code
func (o *AdminAddBalanceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin add balance bad request response has a 4xx status code
func (o *AdminAddBalanceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin add balance bad request response has a 5xx status code
func (o *AdminAddBalanceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this admin add balance bad request response a status code equal to that given
func (o *AdminAddBalanceBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AdminAddBalanceBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/organizations/add/balance][%d] adminAddBalanceBadRequest  %+v", 400, o.Payload)
}

func (o *AdminAddBalanceBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/organizations/add/balance][%d] adminAddBalanceBadRequest  %+v", 400, o.Payload)
}

func (o *AdminAddBalanceBadRequest) GetPayload() []*AdminAddBalanceBadRequestBodyItems0 {
	return o.Payload
}

func (o *AdminAddBalanceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminAddBalanceUnauthorized creates a AdminAddBalanceUnauthorized with default headers values
func NewAdminAddBalanceUnauthorized() *AdminAddBalanceUnauthorized {
	return &AdminAddBalanceUnauthorized{}
}

/*
AdminAddBalanceUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AdminAddBalanceUnauthorized struct {
	Payload *AdminAddBalanceUnauthorizedBody
}

// IsSuccess returns true when this admin add balance unauthorized response has a 2xx status code
func (o *AdminAddBalanceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin add balance unauthorized response has a 3xx status code
func (o *AdminAddBalanceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin add balance unauthorized response has a 4xx status code
func (o *AdminAddBalanceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin add balance unauthorized response has a 5xx status code
func (o *AdminAddBalanceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this admin add balance unauthorized response a status code equal to that given
func (o *AdminAddBalanceUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AdminAddBalanceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/organizations/add/balance][%d] adminAddBalanceUnauthorized  %+v", 401, o.Payload)
}

func (o *AdminAddBalanceUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/organizations/add/balance][%d] adminAddBalanceUnauthorized  %+v", 401, o.Payload)
}

func (o *AdminAddBalanceUnauthorized) GetPayload() *AdminAddBalanceUnauthorizedBody {
	return o.Payload
}

func (o *AdminAddBalanceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AdminAddBalanceUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminAddBalanceForbidden creates a AdminAddBalanceForbidden with default headers values
func NewAdminAddBalanceForbidden() *AdminAddBalanceForbidden {
	return &AdminAddBalanceForbidden{}
}

/*
AdminAddBalanceForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AdminAddBalanceForbidden struct {
	Payload *AdminAddBalanceForbiddenBody
}

// IsSuccess returns true when this admin add balance forbidden response has a 2xx status code
func (o *AdminAddBalanceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin add balance forbidden response has a 3xx status code
func (o *AdminAddBalanceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin add balance forbidden response has a 4xx status code
func (o *AdminAddBalanceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin add balance forbidden response has a 5xx status code
func (o *AdminAddBalanceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this admin add balance forbidden response a status code equal to that given
func (o *AdminAddBalanceForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *AdminAddBalanceForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/organizations/add/balance][%d] adminAddBalanceForbidden  %+v", 403, o.Payload)
}

func (o *AdminAddBalanceForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/organizations/add/balance][%d] adminAddBalanceForbidden  %+v", 403, o.Payload)
}

func (o *AdminAddBalanceForbidden) GetPayload() *AdminAddBalanceForbiddenBody {
	return o.Payload
}

func (o *AdminAddBalanceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AdminAddBalanceForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminAddBalanceNotFound creates a AdminAddBalanceNotFound with default headers values
func NewAdminAddBalanceNotFound() *AdminAddBalanceNotFound {
	return &AdminAddBalanceNotFound{}
}

/*
AdminAddBalanceNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AdminAddBalanceNotFound struct {
	Payload *AdminAddBalanceNotFoundBody
}

// IsSuccess returns true when this admin add balance not found response has a 2xx status code
func (o *AdminAddBalanceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin add balance not found response has a 3xx status code
func (o *AdminAddBalanceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin add balance not found response has a 4xx status code
func (o *AdminAddBalanceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin add balance not found response has a 5xx status code
func (o *AdminAddBalanceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this admin add balance not found response a status code equal to that given
func (o *AdminAddBalanceNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *AdminAddBalanceNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/organizations/add/balance][%d] adminAddBalanceNotFound  %+v", 404, o.Payload)
}

func (o *AdminAddBalanceNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/organizations/add/balance][%d] adminAddBalanceNotFound  %+v", 404, o.Payload)
}

func (o *AdminAddBalanceNotFound) GetPayload() *AdminAddBalanceNotFoundBody {
	return o.Payload
}

func (o *AdminAddBalanceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AdminAddBalanceNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminAddBalanceInternalServerError creates a AdminAddBalanceInternalServerError with default headers values
func NewAdminAddBalanceInternalServerError() *AdminAddBalanceInternalServerError {
	return &AdminAddBalanceInternalServerError{}
}

/*
AdminAddBalanceInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AdminAddBalanceInternalServerError struct {
}

// IsSuccess returns true when this admin add balance internal server error response has a 2xx status code
func (o *AdminAddBalanceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin add balance internal server error response has a 3xx status code
func (o *AdminAddBalanceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin add balance internal server error response has a 4xx status code
func (o *AdminAddBalanceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this admin add balance internal server error response has a 5xx status code
func (o *AdminAddBalanceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this admin add balance internal server error response a status code equal to that given
func (o *AdminAddBalanceInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AdminAddBalanceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/organizations/add/balance][%d] adminAddBalanceInternalServerError ", 500)
}

func (o *AdminAddBalanceInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/organizations/add/balance][%d] adminAddBalanceInternalServerError ", 500)
}

func (o *AdminAddBalanceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
AdminAddBalanceBadRequestBodyItems0 admin add balance bad request body items0
swagger:model AdminAddBalanceBadRequestBodyItems0
*/
type AdminAddBalanceBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this admin add balance bad request body items0
func (o *AdminAddBalanceBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin add balance bad request body items0 based on context it is used
func (o *AdminAddBalanceBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminAddBalanceBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminAddBalanceBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res AdminAddBalanceBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminAddBalanceBody admin add balance body
swagger:model AdminAddBalanceBody
*/
type AdminAddBalanceBody struct {

	// balance
	Balance int64 `json:"balance,omitempty"`

	// customer Id
	CustomerID string `json:"customerId,omitempty"`
}

// Validate validates this admin add balance body
func (o *AdminAddBalanceBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin add balance body based on context it is used
func (o *AdminAddBalanceBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminAddBalanceBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminAddBalanceBody) UnmarshalBinary(b []byte) error {
	var res AdminAddBalanceBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminAddBalanceForbiddenBody admin add balance forbidden body
swagger:model AdminAddBalanceForbiddenBody
*/
type AdminAddBalanceForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this admin add balance forbidden body
func (o *AdminAddBalanceForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin add balance forbidden body based on context it is used
func (o *AdminAddBalanceForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminAddBalanceForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminAddBalanceForbiddenBody) UnmarshalBinary(b []byte) error {
	var res AdminAddBalanceForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminAddBalanceNotFoundBody admin add balance not found body
swagger:model AdminAddBalanceNotFoundBody
*/
type AdminAddBalanceNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this admin add balance not found body
func (o *AdminAddBalanceNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin add balance not found body based on context it is used
func (o *AdminAddBalanceNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminAddBalanceNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminAddBalanceNotFoundBody) UnmarshalBinary(b []byte) error {
	var res AdminAddBalanceNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminAddBalanceUnauthorizedBody admin add balance unauthorized body
swagger:model AdminAddBalanceUnauthorizedBody
*/
type AdminAddBalanceUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this admin add balance unauthorized body
func (o *AdminAddBalanceUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin add balance unauthorized body based on context it is used
func (o *AdminAddBalanceUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminAddBalanceUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminAddBalanceUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res AdminAddBalanceUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
