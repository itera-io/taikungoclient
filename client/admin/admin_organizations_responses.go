// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AdminOrganizationsReader is a Reader for the AdminOrganizations structure.
type AdminOrganizationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AdminOrganizationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAdminOrganizationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAdminOrganizationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAdminOrganizationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAdminOrganizationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAdminOrganizationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAdminOrganizationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAdminOrganizationsOK creates a AdminOrganizationsOK with default headers values
func NewAdminOrganizationsOK() *AdminOrganizationsOK {
	return &AdminOrganizationsOK{}
}

/*
AdminOrganizationsOK describes a response with status code 200, with default header values.

Success
*/
type AdminOrganizationsOK struct {
	Payload *AdminOrganizationsOKBody
}

// IsSuccess returns true when this admin organizations o k response has a 2xx status code
func (o *AdminOrganizationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this admin organizations o k response has a 3xx status code
func (o *AdminOrganizationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin organizations o k response has a 4xx status code
func (o *AdminOrganizationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this admin organizations o k response has a 5xx status code
func (o *AdminOrganizationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this admin organizations o k response a status code equal to that given
func (o *AdminOrganizationsOK) IsCode(code int) bool {
	return code == 200
}

func (o *AdminOrganizationsOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Admin/organizations/list][%d] adminOrganizationsOK  %+v", 200, o.Payload)
}

func (o *AdminOrganizationsOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Admin/organizations/list][%d] adminOrganizationsOK  %+v", 200, o.Payload)
}

func (o *AdminOrganizationsOK) GetPayload() *AdminOrganizationsOKBody {
	return o.Payload
}

func (o *AdminOrganizationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AdminOrganizationsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminOrganizationsBadRequest creates a AdminOrganizationsBadRequest with default headers values
func NewAdminOrganizationsBadRequest() *AdminOrganizationsBadRequest {
	return &AdminOrganizationsBadRequest{}
}

/*
AdminOrganizationsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AdminOrganizationsBadRequest struct {
	Payload []*AdminOrganizationsBadRequestBodyItems0
}

// IsSuccess returns true when this admin organizations bad request response has a 2xx status code
func (o *AdminOrganizationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin organizations bad request response has a 3xx status code
func (o *AdminOrganizationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin organizations bad request response has a 4xx status code
func (o *AdminOrganizationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin organizations bad request response has a 5xx status code
func (o *AdminOrganizationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this admin organizations bad request response a status code equal to that given
func (o *AdminOrganizationsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AdminOrganizationsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Admin/organizations/list][%d] adminOrganizationsBadRequest  %+v", 400, o.Payload)
}

func (o *AdminOrganizationsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Admin/organizations/list][%d] adminOrganizationsBadRequest  %+v", 400, o.Payload)
}

func (o *AdminOrganizationsBadRequest) GetPayload() []*AdminOrganizationsBadRequestBodyItems0 {
	return o.Payload
}

func (o *AdminOrganizationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminOrganizationsUnauthorized creates a AdminOrganizationsUnauthorized with default headers values
func NewAdminOrganizationsUnauthorized() *AdminOrganizationsUnauthorized {
	return &AdminOrganizationsUnauthorized{}
}

/*
AdminOrganizationsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AdminOrganizationsUnauthorized struct {
	Payload *AdminOrganizationsUnauthorizedBody
}

// IsSuccess returns true when this admin organizations unauthorized response has a 2xx status code
func (o *AdminOrganizationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin organizations unauthorized response has a 3xx status code
func (o *AdminOrganizationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin organizations unauthorized response has a 4xx status code
func (o *AdminOrganizationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin organizations unauthorized response has a 5xx status code
func (o *AdminOrganizationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this admin organizations unauthorized response a status code equal to that given
func (o *AdminOrganizationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AdminOrganizationsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Admin/organizations/list][%d] adminOrganizationsUnauthorized  %+v", 401, o.Payload)
}

func (o *AdminOrganizationsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Admin/organizations/list][%d] adminOrganizationsUnauthorized  %+v", 401, o.Payload)
}

func (o *AdminOrganizationsUnauthorized) GetPayload() *AdminOrganizationsUnauthorizedBody {
	return o.Payload
}

func (o *AdminOrganizationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AdminOrganizationsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminOrganizationsForbidden creates a AdminOrganizationsForbidden with default headers values
func NewAdminOrganizationsForbidden() *AdminOrganizationsForbidden {
	return &AdminOrganizationsForbidden{}
}

/*
AdminOrganizationsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AdminOrganizationsForbidden struct {
	Payload *AdminOrganizationsForbiddenBody
}

// IsSuccess returns true when this admin organizations forbidden response has a 2xx status code
func (o *AdminOrganizationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin organizations forbidden response has a 3xx status code
func (o *AdminOrganizationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin organizations forbidden response has a 4xx status code
func (o *AdminOrganizationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin organizations forbidden response has a 5xx status code
func (o *AdminOrganizationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this admin organizations forbidden response a status code equal to that given
func (o *AdminOrganizationsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *AdminOrganizationsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Admin/organizations/list][%d] adminOrganizationsForbidden  %+v", 403, o.Payload)
}

func (o *AdminOrganizationsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Admin/organizations/list][%d] adminOrganizationsForbidden  %+v", 403, o.Payload)
}

func (o *AdminOrganizationsForbidden) GetPayload() *AdminOrganizationsForbiddenBody {
	return o.Payload
}

func (o *AdminOrganizationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AdminOrganizationsForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminOrganizationsNotFound creates a AdminOrganizationsNotFound with default headers values
func NewAdminOrganizationsNotFound() *AdminOrganizationsNotFound {
	return &AdminOrganizationsNotFound{}
}

/*
AdminOrganizationsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AdminOrganizationsNotFound struct {
	Payload *AdminOrganizationsNotFoundBody
}

// IsSuccess returns true when this admin organizations not found response has a 2xx status code
func (o *AdminOrganizationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin organizations not found response has a 3xx status code
func (o *AdminOrganizationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin organizations not found response has a 4xx status code
func (o *AdminOrganizationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin organizations not found response has a 5xx status code
func (o *AdminOrganizationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this admin organizations not found response a status code equal to that given
func (o *AdminOrganizationsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *AdminOrganizationsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Admin/organizations/list][%d] adminOrganizationsNotFound  %+v", 404, o.Payload)
}

func (o *AdminOrganizationsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Admin/organizations/list][%d] adminOrganizationsNotFound  %+v", 404, o.Payload)
}

func (o *AdminOrganizationsNotFound) GetPayload() *AdminOrganizationsNotFoundBody {
	return o.Payload
}

func (o *AdminOrganizationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AdminOrganizationsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminOrganizationsInternalServerError creates a AdminOrganizationsInternalServerError with default headers values
func NewAdminOrganizationsInternalServerError() *AdminOrganizationsInternalServerError {
	return &AdminOrganizationsInternalServerError{}
}

/*
AdminOrganizationsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AdminOrganizationsInternalServerError struct {
}

// IsSuccess returns true when this admin organizations internal server error response has a 2xx status code
func (o *AdminOrganizationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin organizations internal server error response has a 3xx status code
func (o *AdminOrganizationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin organizations internal server error response has a 4xx status code
func (o *AdminOrganizationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this admin organizations internal server error response has a 5xx status code
func (o *AdminOrganizationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this admin organizations internal server error response a status code equal to that given
func (o *AdminOrganizationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AdminOrganizationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Admin/organizations/list][%d] adminOrganizationsInternalServerError ", 500)
}

func (o *AdminOrganizationsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Admin/organizations/list][%d] adminOrganizationsInternalServerError ", 500)
}

func (o *AdminOrganizationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
AdminOrganizationsBadRequestBodyItems0 admin organizations bad request body items0
swagger:model AdminOrganizationsBadRequestBodyItems0
*/
type AdminOrganizationsBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this admin organizations bad request body items0
func (o *AdminOrganizationsBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin organizations bad request body items0 based on context it is used
func (o *AdminOrganizationsBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminOrganizationsBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminOrganizationsBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res AdminOrganizationsBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminOrganizationsForbiddenBody admin organizations forbidden body
swagger:model AdminOrganizationsForbiddenBody
*/
type AdminOrganizationsForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this admin organizations forbidden body
func (o *AdminOrganizationsForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin organizations forbidden body based on context it is used
func (o *AdminOrganizationsForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminOrganizationsForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminOrganizationsForbiddenBody) UnmarshalBinary(b []byte) error {
	var res AdminOrganizationsForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminOrganizationsNotFoundBody admin organizations not found body
swagger:model AdminOrganizationsNotFoundBody
*/
type AdminOrganizationsNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this admin organizations not found body
func (o *AdminOrganizationsNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin organizations not found body based on context it is used
func (o *AdminOrganizationsNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminOrganizationsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminOrganizationsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res AdminOrganizationsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminOrganizationsOKBody admin organizations o k body
swagger:model AdminOrganizationsOKBody
*/
type AdminOrganizationsOKBody struct {

	// data
	Data []*AdminOrganizationsOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this admin organizations o k body
func (o *AdminOrganizationsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AdminOrganizationsOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("adminOrganizationsOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("adminOrganizationsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this admin organizations o k body based on the context it is used
func (o *AdminOrganizationsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AdminOrganizationsOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("adminOrganizationsOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("adminOrganizationsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *AdminOrganizationsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminOrganizationsOKBody) UnmarshalBinary(b []byte) error {
	var res AdminOrganizationsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminOrganizationsOKBodyDataItems0 admin organizations o k body data items0
swagger:model AdminOrganizationsOKBodyDataItems0
*/
type AdminOrganizationsOKBodyDataItems0 struct {

	// customer Id
	CustomerID string `json:"customerId,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// partner logo
	PartnerLogo string `json:"partnerLogo,omitempty"`

	// partner name
	PartnerName string `json:"partnerName,omitempty"`
}

// Validate validates this admin organizations o k body data items0
func (o *AdminOrganizationsOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin organizations o k body data items0 based on context it is used
func (o *AdminOrganizationsOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminOrganizationsOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminOrganizationsOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res AdminOrganizationsOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminOrganizationsUnauthorizedBody admin organizations unauthorized body
swagger:model AdminOrganizationsUnauthorizedBody
*/
type AdminOrganizationsUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this admin organizations unauthorized body
func (o *AdminOrganizationsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin organizations unauthorized body based on context it is used
func (o *AdminOrganizationsUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminOrganizationsUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminOrganizationsUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res AdminOrganizationsUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
