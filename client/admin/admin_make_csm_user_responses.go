// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AdminMakeCsmUserReader is a Reader for the AdminMakeCsmUser structure.
type AdminMakeCsmUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AdminMakeCsmUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAdminMakeCsmUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAdminMakeCsmUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAdminMakeCsmUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAdminMakeCsmUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAdminMakeCsmUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAdminMakeCsmUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAdminMakeCsmUserOK creates a AdminMakeCsmUserOK with default headers values
func NewAdminMakeCsmUserOK() *AdminMakeCsmUserOK {
	return &AdminMakeCsmUserOK{}
}

/*
AdminMakeCsmUserOK describes a response with status code 200, with default header values.

Success
*/
type AdminMakeCsmUserOK struct {
	Payload interface{}
}

// IsSuccess returns true when this admin make csm user o k response has a 2xx status code
func (o *AdminMakeCsmUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this admin make csm user o k response has a 3xx status code
func (o *AdminMakeCsmUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin make csm user o k response has a 4xx status code
func (o *AdminMakeCsmUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this admin make csm user o k response has a 5xx status code
func (o *AdminMakeCsmUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this admin make csm user o k response a status code equal to that given
func (o *AdminMakeCsmUserOK) IsCode(code int) bool {
	return code == 200
}

func (o *AdminMakeCsmUserOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/make/csm][%d] adminMakeCsmUserOK  %+v", 200, o.Payload)
}

func (o *AdminMakeCsmUserOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/make/csm][%d] adminMakeCsmUserOK  %+v", 200, o.Payload)
}

func (o *AdminMakeCsmUserOK) GetPayload() interface{} {
	return o.Payload
}

func (o *AdminMakeCsmUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminMakeCsmUserBadRequest creates a AdminMakeCsmUserBadRequest with default headers values
func NewAdminMakeCsmUserBadRequest() *AdminMakeCsmUserBadRequest {
	return &AdminMakeCsmUserBadRequest{}
}

/*
AdminMakeCsmUserBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AdminMakeCsmUserBadRequest struct {
	Payload []*AdminMakeCsmUserBadRequestBodyItems0
}

// IsSuccess returns true when this admin make csm user bad request response has a 2xx status code
func (o *AdminMakeCsmUserBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin make csm user bad request response has a 3xx status code
func (o *AdminMakeCsmUserBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin make csm user bad request response has a 4xx status code
func (o *AdminMakeCsmUserBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin make csm user bad request response has a 5xx status code
func (o *AdminMakeCsmUserBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this admin make csm user bad request response a status code equal to that given
func (o *AdminMakeCsmUserBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AdminMakeCsmUserBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/make/csm][%d] adminMakeCsmUserBadRequest  %+v", 400, o.Payload)
}

func (o *AdminMakeCsmUserBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/make/csm][%d] adminMakeCsmUserBadRequest  %+v", 400, o.Payload)
}

func (o *AdminMakeCsmUserBadRequest) GetPayload() []*AdminMakeCsmUserBadRequestBodyItems0 {
	return o.Payload
}

func (o *AdminMakeCsmUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminMakeCsmUserUnauthorized creates a AdminMakeCsmUserUnauthorized with default headers values
func NewAdminMakeCsmUserUnauthorized() *AdminMakeCsmUserUnauthorized {
	return &AdminMakeCsmUserUnauthorized{}
}

/*
AdminMakeCsmUserUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AdminMakeCsmUserUnauthorized struct {
	Payload *AdminMakeCsmUserUnauthorizedBody
}

// IsSuccess returns true when this admin make csm user unauthorized response has a 2xx status code
func (o *AdminMakeCsmUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin make csm user unauthorized response has a 3xx status code
func (o *AdminMakeCsmUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin make csm user unauthorized response has a 4xx status code
func (o *AdminMakeCsmUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin make csm user unauthorized response has a 5xx status code
func (o *AdminMakeCsmUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this admin make csm user unauthorized response a status code equal to that given
func (o *AdminMakeCsmUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AdminMakeCsmUserUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/make/csm][%d] adminMakeCsmUserUnauthorized  %+v", 401, o.Payload)
}

func (o *AdminMakeCsmUserUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/make/csm][%d] adminMakeCsmUserUnauthorized  %+v", 401, o.Payload)
}

func (o *AdminMakeCsmUserUnauthorized) GetPayload() *AdminMakeCsmUserUnauthorizedBody {
	return o.Payload
}

func (o *AdminMakeCsmUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AdminMakeCsmUserUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminMakeCsmUserForbidden creates a AdminMakeCsmUserForbidden with default headers values
func NewAdminMakeCsmUserForbidden() *AdminMakeCsmUserForbidden {
	return &AdminMakeCsmUserForbidden{}
}

/*
AdminMakeCsmUserForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AdminMakeCsmUserForbidden struct {
	Payload *AdminMakeCsmUserForbiddenBody
}

// IsSuccess returns true when this admin make csm user forbidden response has a 2xx status code
func (o *AdminMakeCsmUserForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin make csm user forbidden response has a 3xx status code
func (o *AdminMakeCsmUserForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin make csm user forbidden response has a 4xx status code
func (o *AdminMakeCsmUserForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin make csm user forbidden response has a 5xx status code
func (o *AdminMakeCsmUserForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this admin make csm user forbidden response a status code equal to that given
func (o *AdminMakeCsmUserForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *AdminMakeCsmUserForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/make/csm][%d] adminMakeCsmUserForbidden  %+v", 403, o.Payload)
}

func (o *AdminMakeCsmUserForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/make/csm][%d] adminMakeCsmUserForbidden  %+v", 403, o.Payload)
}

func (o *AdminMakeCsmUserForbidden) GetPayload() *AdminMakeCsmUserForbiddenBody {
	return o.Payload
}

func (o *AdminMakeCsmUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AdminMakeCsmUserForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminMakeCsmUserNotFound creates a AdminMakeCsmUserNotFound with default headers values
func NewAdminMakeCsmUserNotFound() *AdminMakeCsmUserNotFound {
	return &AdminMakeCsmUserNotFound{}
}

/*
AdminMakeCsmUserNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AdminMakeCsmUserNotFound struct {
	Payload *AdminMakeCsmUserNotFoundBody
}

// IsSuccess returns true when this admin make csm user not found response has a 2xx status code
func (o *AdminMakeCsmUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin make csm user not found response has a 3xx status code
func (o *AdminMakeCsmUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin make csm user not found response has a 4xx status code
func (o *AdminMakeCsmUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin make csm user not found response has a 5xx status code
func (o *AdminMakeCsmUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this admin make csm user not found response a status code equal to that given
func (o *AdminMakeCsmUserNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *AdminMakeCsmUserNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/make/csm][%d] adminMakeCsmUserNotFound  %+v", 404, o.Payload)
}

func (o *AdminMakeCsmUserNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/make/csm][%d] adminMakeCsmUserNotFound  %+v", 404, o.Payload)
}

func (o *AdminMakeCsmUserNotFound) GetPayload() *AdminMakeCsmUserNotFoundBody {
	return o.Payload
}

func (o *AdminMakeCsmUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AdminMakeCsmUserNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminMakeCsmUserInternalServerError creates a AdminMakeCsmUserInternalServerError with default headers values
func NewAdminMakeCsmUserInternalServerError() *AdminMakeCsmUserInternalServerError {
	return &AdminMakeCsmUserInternalServerError{}
}

/*
AdminMakeCsmUserInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AdminMakeCsmUserInternalServerError struct {
}

// IsSuccess returns true when this admin make csm user internal server error response has a 2xx status code
func (o *AdminMakeCsmUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin make csm user internal server error response has a 3xx status code
func (o *AdminMakeCsmUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin make csm user internal server error response has a 4xx status code
func (o *AdminMakeCsmUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this admin make csm user internal server error response has a 5xx status code
func (o *AdminMakeCsmUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this admin make csm user internal server error response a status code equal to that given
func (o *AdminMakeCsmUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AdminMakeCsmUserInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/make/csm][%d] adminMakeCsmUserInternalServerError ", 500)
}

func (o *AdminMakeCsmUserInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/make/csm][%d] adminMakeCsmUserInternalServerError ", 500)
}

func (o *AdminMakeCsmUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
AdminMakeCsmUserBadRequestBodyItems0 admin make csm user bad request body items0
swagger:model AdminMakeCsmUserBadRequestBodyItems0
*/
type AdminMakeCsmUserBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this admin make csm user bad request body items0
func (o *AdminMakeCsmUserBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin make csm user bad request body items0 based on context it is used
func (o *AdminMakeCsmUserBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminMakeCsmUserBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminMakeCsmUserBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res AdminMakeCsmUserBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminMakeCsmUserBody admin make csm user body
swagger:model AdminMakeCsmUserBody
*/
type AdminMakeCsmUserBody struct {

	// mode
	Mode string `json:"mode,omitempty"`

	// user Id
	UserID string `json:"userId,omitempty"`
}

// Validate validates this admin make csm user body
func (o *AdminMakeCsmUserBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin make csm user body based on context it is used
func (o *AdminMakeCsmUserBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminMakeCsmUserBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminMakeCsmUserBody) UnmarshalBinary(b []byte) error {
	var res AdminMakeCsmUserBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminMakeCsmUserForbiddenBody admin make csm user forbidden body
swagger:model AdminMakeCsmUserForbiddenBody
*/
type AdminMakeCsmUserForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this admin make csm user forbidden body
func (o *AdminMakeCsmUserForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin make csm user forbidden body based on context it is used
func (o *AdminMakeCsmUserForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminMakeCsmUserForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminMakeCsmUserForbiddenBody) UnmarshalBinary(b []byte) error {
	var res AdminMakeCsmUserForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminMakeCsmUserNotFoundBody admin make csm user not found body
swagger:model AdminMakeCsmUserNotFoundBody
*/
type AdminMakeCsmUserNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this admin make csm user not found body
func (o *AdminMakeCsmUserNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin make csm user not found body based on context it is used
func (o *AdminMakeCsmUserNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminMakeCsmUserNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminMakeCsmUserNotFoundBody) UnmarshalBinary(b []byte) error {
	var res AdminMakeCsmUserNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminMakeCsmUserUnauthorizedBody admin make csm user unauthorized body
swagger:model AdminMakeCsmUserUnauthorizedBody
*/
type AdminMakeCsmUserUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this admin make csm user unauthorized body
func (o *AdminMakeCsmUserUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin make csm user unauthorized body based on context it is used
func (o *AdminMakeCsmUserUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminMakeCsmUserUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminMakeCsmUserUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res AdminMakeCsmUserUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
