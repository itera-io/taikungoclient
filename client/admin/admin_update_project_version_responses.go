// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AdminUpdateProjectVersionReader is a Reader for the AdminUpdateProjectVersion structure.
type AdminUpdateProjectVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AdminUpdateProjectVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAdminUpdateProjectVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAdminUpdateProjectVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAdminUpdateProjectVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAdminUpdateProjectVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAdminUpdateProjectVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAdminUpdateProjectVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAdminUpdateProjectVersionOK creates a AdminUpdateProjectVersionOK with default headers values
func NewAdminUpdateProjectVersionOK() *AdminUpdateProjectVersionOK {
	return &AdminUpdateProjectVersionOK{}
}

/*
AdminUpdateProjectVersionOK describes a response with status code 200, with default header values.

Success
*/
type AdminUpdateProjectVersionOK struct {
	Payload interface{}
}

// IsSuccess returns true when this admin update project version o k response has a 2xx status code
func (o *AdminUpdateProjectVersionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this admin update project version o k response has a 3xx status code
func (o *AdminUpdateProjectVersionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin update project version o k response has a 4xx status code
func (o *AdminUpdateProjectVersionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this admin update project version o k response has a 5xx status code
func (o *AdminUpdateProjectVersionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this admin update project version o k response a status code equal to that given
func (o *AdminUpdateProjectVersionOK) IsCode(code int) bool {
	return code == 200
}

func (o *AdminUpdateProjectVersionOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionOK  %+v", 200, o.Payload)
}

func (o *AdminUpdateProjectVersionOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionOK  %+v", 200, o.Payload)
}

func (o *AdminUpdateProjectVersionOK) GetPayload() interface{} {
	return o.Payload
}

func (o *AdminUpdateProjectVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminUpdateProjectVersionBadRequest creates a AdminUpdateProjectVersionBadRequest with default headers values
func NewAdminUpdateProjectVersionBadRequest() *AdminUpdateProjectVersionBadRequest {
	return &AdminUpdateProjectVersionBadRequest{}
}

/*
AdminUpdateProjectVersionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AdminUpdateProjectVersionBadRequest struct {
	Payload []*AdminUpdateProjectVersionBadRequestBodyItems0
}

// IsSuccess returns true when this admin update project version bad request response has a 2xx status code
func (o *AdminUpdateProjectVersionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin update project version bad request response has a 3xx status code
func (o *AdminUpdateProjectVersionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin update project version bad request response has a 4xx status code
func (o *AdminUpdateProjectVersionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin update project version bad request response has a 5xx status code
func (o *AdminUpdateProjectVersionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this admin update project version bad request response a status code equal to that given
func (o *AdminUpdateProjectVersionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AdminUpdateProjectVersionBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *AdminUpdateProjectVersionBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *AdminUpdateProjectVersionBadRequest) GetPayload() []*AdminUpdateProjectVersionBadRequestBodyItems0 {
	return o.Payload
}

func (o *AdminUpdateProjectVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminUpdateProjectVersionUnauthorized creates a AdminUpdateProjectVersionUnauthorized with default headers values
func NewAdminUpdateProjectVersionUnauthorized() *AdminUpdateProjectVersionUnauthorized {
	return &AdminUpdateProjectVersionUnauthorized{}
}

/*
AdminUpdateProjectVersionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AdminUpdateProjectVersionUnauthorized struct {
	Payload *AdminUpdateProjectVersionUnauthorizedBody
}

// IsSuccess returns true when this admin update project version unauthorized response has a 2xx status code
func (o *AdminUpdateProjectVersionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin update project version unauthorized response has a 3xx status code
func (o *AdminUpdateProjectVersionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin update project version unauthorized response has a 4xx status code
func (o *AdminUpdateProjectVersionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin update project version unauthorized response has a 5xx status code
func (o *AdminUpdateProjectVersionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this admin update project version unauthorized response a status code equal to that given
func (o *AdminUpdateProjectVersionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AdminUpdateProjectVersionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *AdminUpdateProjectVersionUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *AdminUpdateProjectVersionUnauthorized) GetPayload() *AdminUpdateProjectVersionUnauthorizedBody {
	return o.Payload
}

func (o *AdminUpdateProjectVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AdminUpdateProjectVersionUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminUpdateProjectVersionForbidden creates a AdminUpdateProjectVersionForbidden with default headers values
func NewAdminUpdateProjectVersionForbidden() *AdminUpdateProjectVersionForbidden {
	return &AdminUpdateProjectVersionForbidden{}
}

/*
AdminUpdateProjectVersionForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AdminUpdateProjectVersionForbidden struct {
	Payload *AdminUpdateProjectVersionForbiddenBody
}

// IsSuccess returns true when this admin update project version forbidden response has a 2xx status code
func (o *AdminUpdateProjectVersionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin update project version forbidden response has a 3xx status code
func (o *AdminUpdateProjectVersionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin update project version forbidden response has a 4xx status code
func (o *AdminUpdateProjectVersionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin update project version forbidden response has a 5xx status code
func (o *AdminUpdateProjectVersionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this admin update project version forbidden response a status code equal to that given
func (o *AdminUpdateProjectVersionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *AdminUpdateProjectVersionForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *AdminUpdateProjectVersionForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *AdminUpdateProjectVersionForbidden) GetPayload() *AdminUpdateProjectVersionForbiddenBody {
	return o.Payload
}

func (o *AdminUpdateProjectVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AdminUpdateProjectVersionForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminUpdateProjectVersionNotFound creates a AdminUpdateProjectVersionNotFound with default headers values
func NewAdminUpdateProjectVersionNotFound() *AdminUpdateProjectVersionNotFound {
	return &AdminUpdateProjectVersionNotFound{}
}

/*
AdminUpdateProjectVersionNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AdminUpdateProjectVersionNotFound struct {
	Payload *AdminUpdateProjectVersionNotFoundBody
}

// IsSuccess returns true when this admin update project version not found response has a 2xx status code
func (o *AdminUpdateProjectVersionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin update project version not found response has a 3xx status code
func (o *AdminUpdateProjectVersionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin update project version not found response has a 4xx status code
func (o *AdminUpdateProjectVersionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin update project version not found response has a 5xx status code
func (o *AdminUpdateProjectVersionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this admin update project version not found response a status code equal to that given
func (o *AdminUpdateProjectVersionNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *AdminUpdateProjectVersionNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *AdminUpdateProjectVersionNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *AdminUpdateProjectVersionNotFound) GetPayload() *AdminUpdateProjectVersionNotFoundBody {
	return o.Payload
}

func (o *AdminUpdateProjectVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AdminUpdateProjectVersionNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminUpdateProjectVersionInternalServerError creates a AdminUpdateProjectVersionInternalServerError with default headers values
func NewAdminUpdateProjectVersionInternalServerError() *AdminUpdateProjectVersionInternalServerError {
	return &AdminUpdateProjectVersionInternalServerError{}
}

/*
AdminUpdateProjectVersionInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AdminUpdateProjectVersionInternalServerError struct {
}

// IsSuccess returns true when this admin update project version internal server error response has a 2xx status code
func (o *AdminUpdateProjectVersionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin update project version internal server error response has a 3xx status code
func (o *AdminUpdateProjectVersionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin update project version internal server error response has a 4xx status code
func (o *AdminUpdateProjectVersionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this admin update project version internal server error response has a 5xx status code
func (o *AdminUpdateProjectVersionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this admin update project version internal server error response a status code equal to that given
func (o *AdminUpdateProjectVersionInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AdminUpdateProjectVersionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionInternalServerError ", 500)
}

func (o *AdminUpdateProjectVersionInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionInternalServerError ", 500)
}

func (o *AdminUpdateProjectVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
AdminUpdateProjectVersionBadRequestBodyItems0 admin update project version bad request body items0
swagger:model AdminUpdateProjectVersionBadRequestBodyItems0
*/
type AdminUpdateProjectVersionBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this admin update project version bad request body items0
func (o *AdminUpdateProjectVersionBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin update project version bad request body items0 based on context it is used
func (o *AdminUpdateProjectVersionBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminUpdateProjectVersionBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminUpdateProjectVersionBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res AdminUpdateProjectVersionBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminUpdateProjectVersionBody admin update project version body
swagger:model AdminUpdateProjectVersionBody
*/
type AdminUpdateProjectVersionBody struct {

	// id
	ID int32 `json:"id,omitempty"`

	// kubernetes current version
	KubernetesCurrentVersion string `json:"kubernetesCurrentVersion,omitempty"`

	// kubespray current version
	KubesprayCurrentVersion string `json:"kubesprayCurrentVersion,omitempty"`
}

// Validate validates this admin update project version body
func (o *AdminUpdateProjectVersionBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin update project version body based on context it is used
func (o *AdminUpdateProjectVersionBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminUpdateProjectVersionBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminUpdateProjectVersionBody) UnmarshalBinary(b []byte) error {
	var res AdminUpdateProjectVersionBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminUpdateProjectVersionForbiddenBody admin update project version forbidden body
swagger:model AdminUpdateProjectVersionForbiddenBody
*/
type AdminUpdateProjectVersionForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this admin update project version forbidden body
func (o *AdminUpdateProjectVersionForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin update project version forbidden body based on context it is used
func (o *AdminUpdateProjectVersionForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminUpdateProjectVersionForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminUpdateProjectVersionForbiddenBody) UnmarshalBinary(b []byte) error {
	var res AdminUpdateProjectVersionForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminUpdateProjectVersionNotFoundBody admin update project version not found body
swagger:model AdminUpdateProjectVersionNotFoundBody
*/
type AdminUpdateProjectVersionNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this admin update project version not found body
func (o *AdminUpdateProjectVersionNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin update project version not found body based on context it is used
func (o *AdminUpdateProjectVersionNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminUpdateProjectVersionNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminUpdateProjectVersionNotFoundBody) UnmarshalBinary(b []byte) error {
	var res AdminUpdateProjectVersionNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminUpdateProjectVersionUnauthorizedBody admin update project version unauthorized body
swagger:model AdminUpdateProjectVersionUnauthorizedBody
*/
type AdminUpdateProjectVersionUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this admin update project version unauthorized body
func (o *AdminUpdateProjectVersionUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin update project version unauthorized body based on context it is used
func (o *AdminUpdateProjectVersionUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminUpdateProjectVersionUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminUpdateProjectVersionUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res AdminUpdateProjectVersionUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
