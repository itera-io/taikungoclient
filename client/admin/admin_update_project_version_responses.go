// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// AdminUpdateProjectVersionReader is a Reader for the AdminUpdateProjectVersion structure.
type AdminUpdateProjectVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AdminUpdateProjectVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAdminUpdateProjectVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAdminUpdateProjectVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAdminUpdateProjectVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAdminUpdateProjectVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAdminUpdateProjectVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAdminUpdateProjectVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAdminUpdateProjectVersionOK creates a AdminUpdateProjectVersionOK with default headers values
func NewAdminUpdateProjectVersionOK() *AdminUpdateProjectVersionOK {
	return &AdminUpdateProjectVersionOK{}
}

/*
AdminUpdateProjectVersionOK describes a response with status code 200, with default header values.

Success
*/
type AdminUpdateProjectVersionOK struct {
	Payload models.Unit
}

// IsSuccess returns true when this admin update project version o k response has a 2xx status code
func (o *AdminUpdateProjectVersionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this admin update project version o k response has a 3xx status code
func (o *AdminUpdateProjectVersionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin update project version o k response has a 4xx status code
func (o *AdminUpdateProjectVersionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this admin update project version o k response has a 5xx status code
func (o *AdminUpdateProjectVersionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this admin update project version o k response a status code equal to that given
func (o *AdminUpdateProjectVersionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the admin update project version o k response
func (o *AdminUpdateProjectVersionOK) Code() int {
	return 200
}

func (o *AdminUpdateProjectVersionOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionOK  %+v", 200, o.Payload)
}

func (o *AdminUpdateProjectVersionOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionOK  %+v", 200, o.Payload)
}

func (o *AdminUpdateProjectVersionOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *AdminUpdateProjectVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminUpdateProjectVersionBadRequest creates a AdminUpdateProjectVersionBadRequest with default headers values
func NewAdminUpdateProjectVersionBadRequest() *AdminUpdateProjectVersionBadRequest {
	return &AdminUpdateProjectVersionBadRequest{}
}

/*
AdminUpdateProjectVersionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AdminUpdateProjectVersionBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this admin update project version bad request response has a 2xx status code
func (o *AdminUpdateProjectVersionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin update project version bad request response has a 3xx status code
func (o *AdminUpdateProjectVersionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin update project version bad request response has a 4xx status code
func (o *AdminUpdateProjectVersionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin update project version bad request response has a 5xx status code
func (o *AdminUpdateProjectVersionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this admin update project version bad request response a status code equal to that given
func (o *AdminUpdateProjectVersionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the admin update project version bad request response
func (o *AdminUpdateProjectVersionBadRequest) Code() int {
	return 400
}

func (o *AdminUpdateProjectVersionBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *AdminUpdateProjectVersionBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionBadRequest  %+v", 400, o.Payload)
}

func (o *AdminUpdateProjectVersionBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AdminUpdateProjectVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminUpdateProjectVersionUnauthorized creates a AdminUpdateProjectVersionUnauthorized with default headers values
func NewAdminUpdateProjectVersionUnauthorized() *AdminUpdateProjectVersionUnauthorized {
	return &AdminUpdateProjectVersionUnauthorized{}
}

/*
AdminUpdateProjectVersionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AdminUpdateProjectVersionUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this admin update project version unauthorized response has a 2xx status code
func (o *AdminUpdateProjectVersionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin update project version unauthorized response has a 3xx status code
func (o *AdminUpdateProjectVersionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin update project version unauthorized response has a 4xx status code
func (o *AdminUpdateProjectVersionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin update project version unauthorized response has a 5xx status code
func (o *AdminUpdateProjectVersionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this admin update project version unauthorized response a status code equal to that given
func (o *AdminUpdateProjectVersionUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the admin update project version unauthorized response
func (o *AdminUpdateProjectVersionUnauthorized) Code() int {
	return 401
}

func (o *AdminUpdateProjectVersionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *AdminUpdateProjectVersionUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionUnauthorized  %+v", 401, o.Payload)
}

func (o *AdminUpdateProjectVersionUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AdminUpdateProjectVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminUpdateProjectVersionForbidden creates a AdminUpdateProjectVersionForbidden with default headers values
func NewAdminUpdateProjectVersionForbidden() *AdminUpdateProjectVersionForbidden {
	return &AdminUpdateProjectVersionForbidden{}
}

/*
AdminUpdateProjectVersionForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AdminUpdateProjectVersionForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this admin update project version forbidden response has a 2xx status code
func (o *AdminUpdateProjectVersionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin update project version forbidden response has a 3xx status code
func (o *AdminUpdateProjectVersionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin update project version forbidden response has a 4xx status code
func (o *AdminUpdateProjectVersionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin update project version forbidden response has a 5xx status code
func (o *AdminUpdateProjectVersionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this admin update project version forbidden response a status code equal to that given
func (o *AdminUpdateProjectVersionForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the admin update project version forbidden response
func (o *AdminUpdateProjectVersionForbidden) Code() int {
	return 403
}

func (o *AdminUpdateProjectVersionForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *AdminUpdateProjectVersionForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionForbidden  %+v", 403, o.Payload)
}

func (o *AdminUpdateProjectVersionForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AdminUpdateProjectVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminUpdateProjectVersionNotFound creates a AdminUpdateProjectVersionNotFound with default headers values
func NewAdminUpdateProjectVersionNotFound() *AdminUpdateProjectVersionNotFound {
	return &AdminUpdateProjectVersionNotFound{}
}

/*
AdminUpdateProjectVersionNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AdminUpdateProjectVersionNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this admin update project version not found response has a 2xx status code
func (o *AdminUpdateProjectVersionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin update project version not found response has a 3xx status code
func (o *AdminUpdateProjectVersionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin update project version not found response has a 4xx status code
func (o *AdminUpdateProjectVersionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin update project version not found response has a 5xx status code
func (o *AdminUpdateProjectVersionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this admin update project version not found response a status code equal to that given
func (o *AdminUpdateProjectVersionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the admin update project version not found response
func (o *AdminUpdateProjectVersionNotFound) Code() int {
	return 404
}

func (o *AdminUpdateProjectVersionNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *AdminUpdateProjectVersionNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionNotFound  %+v", 404, o.Payload)
}

func (o *AdminUpdateProjectVersionNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AdminUpdateProjectVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminUpdateProjectVersionInternalServerError creates a AdminUpdateProjectVersionInternalServerError with default headers values
func NewAdminUpdateProjectVersionInternalServerError() *AdminUpdateProjectVersionInternalServerError {
	return &AdminUpdateProjectVersionInternalServerError{}
}

/*
AdminUpdateProjectVersionInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AdminUpdateProjectVersionInternalServerError struct {
}

// IsSuccess returns true when this admin update project version internal server error response has a 2xx status code
func (o *AdminUpdateProjectVersionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin update project version internal server error response has a 3xx status code
func (o *AdminUpdateProjectVersionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin update project version internal server error response has a 4xx status code
func (o *AdminUpdateProjectVersionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this admin update project version internal server error response has a 5xx status code
func (o *AdminUpdateProjectVersionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this admin update project version internal server error response a status code equal to that given
func (o *AdminUpdateProjectVersionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the admin update project version internal server error response
func (o *AdminUpdateProjectVersionInternalServerError) Code() int {
	return 500
}

func (o *AdminUpdateProjectVersionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionInternalServerError ", 500)
}

func (o *AdminUpdateProjectVersionInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/projects/update/version][%d] adminUpdateProjectVersionInternalServerError ", 500)
}

func (o *AdminUpdateProjectVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
