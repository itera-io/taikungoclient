// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AdminCreateUserReader is a Reader for the AdminCreateUser structure.
type AdminCreateUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AdminCreateUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAdminCreateUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAdminCreateUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAdminCreateUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAdminCreateUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAdminCreateUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAdminCreateUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAdminCreateUserOK creates a AdminCreateUserOK with default headers values
func NewAdminCreateUserOK() *AdminCreateUserOK {
	return &AdminCreateUserOK{}
}

/*
AdminCreateUserOK describes a response with status code 200, with default header values.

Success
*/
type AdminCreateUserOK struct {
	Payload interface{}
}

// IsSuccess returns true when this admin create user o k response has a 2xx status code
func (o *AdminCreateUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this admin create user o k response has a 3xx status code
func (o *AdminCreateUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin create user o k response has a 4xx status code
func (o *AdminCreateUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this admin create user o k response has a 5xx status code
func (o *AdminCreateUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this admin create user o k response a status code equal to that given
func (o *AdminCreateUserOK) IsCode(code int) bool {
	return code == 200
}

func (o *AdminCreateUserOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/create][%d] adminCreateUserOK  %+v", 200, o.Payload)
}

func (o *AdminCreateUserOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/create][%d] adminCreateUserOK  %+v", 200, o.Payload)
}

func (o *AdminCreateUserOK) GetPayload() interface{} {
	return o.Payload
}

func (o *AdminCreateUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminCreateUserBadRequest creates a AdminCreateUserBadRequest with default headers values
func NewAdminCreateUserBadRequest() *AdminCreateUserBadRequest {
	return &AdminCreateUserBadRequest{}
}

/*
AdminCreateUserBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AdminCreateUserBadRequest struct {
	Payload []*AdminCreateUserBadRequestBodyItems0
}

// IsSuccess returns true when this admin create user bad request response has a 2xx status code
func (o *AdminCreateUserBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin create user bad request response has a 3xx status code
func (o *AdminCreateUserBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin create user bad request response has a 4xx status code
func (o *AdminCreateUserBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin create user bad request response has a 5xx status code
func (o *AdminCreateUserBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this admin create user bad request response a status code equal to that given
func (o *AdminCreateUserBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AdminCreateUserBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/create][%d] adminCreateUserBadRequest  %+v", 400, o.Payload)
}

func (o *AdminCreateUserBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/create][%d] adminCreateUserBadRequest  %+v", 400, o.Payload)
}

func (o *AdminCreateUserBadRequest) GetPayload() []*AdminCreateUserBadRequestBodyItems0 {
	return o.Payload
}

func (o *AdminCreateUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminCreateUserUnauthorized creates a AdminCreateUserUnauthorized with default headers values
func NewAdminCreateUserUnauthorized() *AdminCreateUserUnauthorized {
	return &AdminCreateUserUnauthorized{}
}

/*
AdminCreateUserUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AdminCreateUserUnauthorized struct {
	Payload *AdminCreateUserUnauthorizedBody
}

// IsSuccess returns true when this admin create user unauthorized response has a 2xx status code
func (o *AdminCreateUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin create user unauthorized response has a 3xx status code
func (o *AdminCreateUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin create user unauthorized response has a 4xx status code
func (o *AdminCreateUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin create user unauthorized response has a 5xx status code
func (o *AdminCreateUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this admin create user unauthorized response a status code equal to that given
func (o *AdminCreateUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AdminCreateUserUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/create][%d] adminCreateUserUnauthorized  %+v", 401, o.Payload)
}

func (o *AdminCreateUserUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/create][%d] adminCreateUserUnauthorized  %+v", 401, o.Payload)
}

func (o *AdminCreateUserUnauthorized) GetPayload() *AdminCreateUserUnauthorizedBody {
	return o.Payload
}

func (o *AdminCreateUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AdminCreateUserUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminCreateUserForbidden creates a AdminCreateUserForbidden with default headers values
func NewAdminCreateUserForbidden() *AdminCreateUserForbidden {
	return &AdminCreateUserForbidden{}
}

/*
AdminCreateUserForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AdminCreateUserForbidden struct {
	Payload *AdminCreateUserForbiddenBody
}

// IsSuccess returns true when this admin create user forbidden response has a 2xx status code
func (o *AdminCreateUserForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin create user forbidden response has a 3xx status code
func (o *AdminCreateUserForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin create user forbidden response has a 4xx status code
func (o *AdminCreateUserForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin create user forbidden response has a 5xx status code
func (o *AdminCreateUserForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this admin create user forbidden response a status code equal to that given
func (o *AdminCreateUserForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *AdminCreateUserForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/create][%d] adminCreateUserForbidden  %+v", 403, o.Payload)
}

func (o *AdminCreateUserForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/create][%d] adminCreateUserForbidden  %+v", 403, o.Payload)
}

func (o *AdminCreateUserForbidden) GetPayload() *AdminCreateUserForbiddenBody {
	return o.Payload
}

func (o *AdminCreateUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AdminCreateUserForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminCreateUserNotFound creates a AdminCreateUserNotFound with default headers values
func NewAdminCreateUserNotFound() *AdminCreateUserNotFound {
	return &AdminCreateUserNotFound{}
}

/*
AdminCreateUserNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AdminCreateUserNotFound struct {
	Payload *AdminCreateUserNotFoundBody
}

// IsSuccess returns true when this admin create user not found response has a 2xx status code
func (o *AdminCreateUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin create user not found response has a 3xx status code
func (o *AdminCreateUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin create user not found response has a 4xx status code
func (o *AdminCreateUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin create user not found response has a 5xx status code
func (o *AdminCreateUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this admin create user not found response a status code equal to that given
func (o *AdminCreateUserNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *AdminCreateUserNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/create][%d] adminCreateUserNotFound  %+v", 404, o.Payload)
}

func (o *AdminCreateUserNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/create][%d] adminCreateUserNotFound  %+v", 404, o.Payload)
}

func (o *AdminCreateUserNotFound) GetPayload() *AdminCreateUserNotFoundBody {
	return o.Payload
}

func (o *AdminCreateUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AdminCreateUserNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminCreateUserInternalServerError creates a AdminCreateUserInternalServerError with default headers values
func NewAdminCreateUserInternalServerError() *AdminCreateUserInternalServerError {
	return &AdminCreateUserInternalServerError{}
}

/*
AdminCreateUserInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AdminCreateUserInternalServerError struct {
}

// IsSuccess returns true when this admin create user internal server error response has a 2xx status code
func (o *AdminCreateUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin create user internal server error response has a 3xx status code
func (o *AdminCreateUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin create user internal server error response has a 4xx status code
func (o *AdminCreateUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this admin create user internal server error response has a 5xx status code
func (o *AdminCreateUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this admin create user internal server error response a status code equal to that given
func (o *AdminCreateUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AdminCreateUserInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/create][%d] adminCreateUserInternalServerError ", 500)
}

func (o *AdminCreateUserInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Admin/users/create][%d] adminCreateUserInternalServerError ", 500)
}

func (o *AdminCreateUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
AdminCreateUserBadRequestBodyItems0 admin create user bad request body items0
swagger:model AdminCreateUserBadRequestBodyItems0
*/
type AdminCreateUserBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this admin create user bad request body items0
func (o *AdminCreateUserBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin create user bad request body items0 based on context it is used
func (o *AdminCreateUserBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminCreateUserBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminCreateUserBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res AdminCreateUserBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminCreateUserBody admin create user body
swagger:model AdminCreateUserBody
*/
type AdminCreateUserBody struct {

	// email
	Email string `json:"email,omitempty"`

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// password
	Password string `json:"password,omitempty"`

	// role
	// Enum: [100 200 250 400 6000]
	Role int32 `json:"role,omitempty"`

	// username
	Username string `json:"username,omitempty"`
}

// Validate validates this admin create user body
func (o *AdminCreateUserBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var adminCreateUserBodyTypeRolePropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[100,200,250,400,6000]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		adminCreateUserBodyTypeRolePropEnum = append(adminCreateUserBodyTypeRolePropEnum, v)
	}
}

// prop value enum
func (o *AdminCreateUserBody) validateRoleEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, adminCreateUserBodyTypeRolePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *AdminCreateUserBody) validateRole(formats strfmt.Registry) error {
	if swag.IsZero(o.Role) { // not required
		return nil
	}

	// value enum
	if err := o.validateRoleEnum("body"+"."+"role", "body", o.Role); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this admin create user body based on context it is used
func (o *AdminCreateUserBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminCreateUserBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminCreateUserBody) UnmarshalBinary(b []byte) error {
	var res AdminCreateUserBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminCreateUserForbiddenBody admin create user forbidden body
swagger:model AdminCreateUserForbiddenBody
*/
type AdminCreateUserForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this admin create user forbidden body
func (o *AdminCreateUserForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin create user forbidden body based on context it is used
func (o *AdminCreateUserForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminCreateUserForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminCreateUserForbiddenBody) UnmarshalBinary(b []byte) error {
	var res AdminCreateUserForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminCreateUserNotFoundBody admin create user not found body
swagger:model AdminCreateUserNotFoundBody
*/
type AdminCreateUserNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this admin create user not found body
func (o *AdminCreateUserNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin create user not found body based on context it is used
func (o *AdminCreateUserNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminCreateUserNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminCreateUserNotFoundBody) UnmarshalBinary(b []byte) error {
	var res AdminCreateUserNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AdminCreateUserUnauthorizedBody admin create user unauthorized body
swagger:model AdminCreateUserUnauthorizedBody
*/
type AdminCreateUserUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this admin create user unauthorized body
func (o *AdminCreateUserUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this admin create user unauthorized body based on context it is used
func (o *AdminCreateUserUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AdminCreateUserUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AdminCreateUserUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res AdminCreateUserUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
