/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the KubernetesCronJobDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubernetesCronJobDto{}

// KubernetesCronJobDto struct for KubernetesCronJobDto
type KubernetesCronJobDto struct {
	MetadataName *string `json:"metadataName,omitempty"`
	LastSchedule *string `json:"lastSchedule,omitempty"`
	Suspend NullableBool `json:"suspend,omitempty"`
	Schedule *string `json:"schedule,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Age *string `json:"age,omitempty"`
}

// NewKubernetesCronJobDto instantiates a new KubernetesCronJobDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesCronJobDto() *KubernetesCronJobDto {
	this := KubernetesCronJobDto{}
	return &this
}

// NewKubernetesCronJobDtoWithDefaults instantiates a new KubernetesCronJobDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesCronJobDtoWithDefaults() *KubernetesCronJobDto {
	this := KubernetesCronJobDto{}
	return &this
}

// GetMetadataName returns the MetadataName field value if set, zero value otherwise.
func (o *KubernetesCronJobDto) GetMetadataName() string {
	if o == nil || IsNil(o.MetadataName) {
		var ret string
		return ret
	}
	return *o.MetadataName
}

// GetMetadataNameOk returns a tuple with the MetadataName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesCronJobDto) GetMetadataNameOk() (*string, bool) {
	if o == nil || IsNil(o.MetadataName) {
		return nil, false
	}
	return o.MetadataName, true
}

// HasMetadataName returns a boolean if a field has been set.
func (o *KubernetesCronJobDto) HasMetadataName() bool {
	if o != nil && !IsNil(o.MetadataName) {
		return true
	}

	return false
}

// SetMetadataName gets a reference to the given string and assigns it to the MetadataName field.
func (o *KubernetesCronJobDto) SetMetadataName(v string) {
	o.MetadataName = &v
}

// GetLastSchedule returns the LastSchedule field value if set, zero value otherwise.
func (o *KubernetesCronJobDto) GetLastSchedule() string {
	if o == nil || IsNil(o.LastSchedule) {
		var ret string
		return ret
	}
	return *o.LastSchedule
}

// GetLastScheduleOk returns a tuple with the LastSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesCronJobDto) GetLastScheduleOk() (*string, bool) {
	if o == nil || IsNil(o.LastSchedule) {
		return nil, false
	}
	return o.LastSchedule, true
}

// HasLastSchedule returns a boolean if a field has been set.
func (o *KubernetesCronJobDto) HasLastSchedule() bool {
	if o != nil && !IsNil(o.LastSchedule) {
		return true
	}

	return false
}

// SetLastSchedule gets a reference to the given string and assigns it to the LastSchedule field.
func (o *KubernetesCronJobDto) SetLastSchedule(v string) {
	o.LastSchedule = &v
}

// GetSuspend returns the Suspend field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KubernetesCronJobDto) GetSuspend() bool {
	if o == nil || IsNil(o.Suspend.Get()) {
		var ret bool
		return ret
	}
	return *o.Suspend.Get()
}

// GetSuspendOk returns a tuple with the Suspend field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubernetesCronJobDto) GetSuspendOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Suspend.Get(), o.Suspend.IsSet()
}

// HasSuspend returns a boolean if a field has been set.
func (o *KubernetesCronJobDto) HasSuspend() bool {
	if o != nil && o.Suspend.IsSet() {
		return true
	}

	return false
}

// SetSuspend gets a reference to the given NullableBool and assigns it to the Suspend field.
func (o *KubernetesCronJobDto) SetSuspend(v bool) {
	o.Suspend.Set(&v)
}
// SetSuspendNil sets the value for Suspend to be an explicit nil
func (o *KubernetesCronJobDto) SetSuspendNil() {
	o.Suspend.Set(nil)
}

// UnsetSuspend ensures that no value is present for Suspend, not even an explicit nil
func (o *KubernetesCronJobDto) UnsetSuspend() {
	o.Suspend.Unset()
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *KubernetesCronJobDto) GetSchedule() string {
	if o == nil || IsNil(o.Schedule) {
		var ret string
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesCronJobDto) GetScheduleOk() (*string, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *KubernetesCronJobDto) HasSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given string and assigns it to the Schedule field.
func (o *KubernetesCronJobDto) SetSchedule(v string) {
	o.Schedule = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *KubernetesCronJobDto) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesCronJobDto) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *KubernetesCronJobDto) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *KubernetesCronJobDto) SetNamespace(v string) {
	o.Namespace = &v
}

// GetAge returns the Age field value if set, zero value otherwise.
func (o *KubernetesCronJobDto) GetAge() string {
	if o == nil || IsNil(o.Age) {
		var ret string
		return ret
	}
	return *o.Age
}

// GetAgeOk returns a tuple with the Age field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesCronJobDto) GetAgeOk() (*string, bool) {
	if o == nil || IsNil(o.Age) {
		return nil, false
	}
	return o.Age, true
}

// HasAge returns a boolean if a field has been set.
func (o *KubernetesCronJobDto) HasAge() bool {
	if o != nil && !IsNil(o.Age) {
		return true
	}

	return false
}

// SetAge gets a reference to the given string and assigns it to the Age field.
func (o *KubernetesCronJobDto) SetAge(v string) {
	o.Age = &v
}

func (o KubernetesCronJobDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubernetesCronJobDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MetadataName) {
		toSerialize["metadataName"] = o.MetadataName
	}
	if !IsNil(o.LastSchedule) {
		toSerialize["lastSchedule"] = o.LastSchedule
	}
	if o.Suspend.IsSet() {
		toSerialize["suspend"] = o.Suspend.Get()
	}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !IsNil(o.Age) {
		toSerialize["age"] = o.Age
	}
	return toSerialize, nil
}

type NullableKubernetesCronJobDto struct {
	value *KubernetesCronJobDto
	isSet bool
}

func (v NullableKubernetesCronJobDto) Get() *KubernetesCronJobDto {
	return v.value
}

func (v *NullableKubernetesCronJobDto) Set(val *KubernetesCronJobDto) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesCronJobDto) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesCronJobDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesCronJobDto(val *KubernetesCronJobDto) *NullableKubernetesCronJobDto {
	return &NullableKubernetesCronJobDto{value: val, isSet: true}
}

func (v NullableKubernetesCronJobDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesCronJobDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


