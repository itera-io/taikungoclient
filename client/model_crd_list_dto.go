/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the CrdListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CrdListDto{}

// CrdListDto struct for CrdListDto
type CrdListDto struct {
	MetadataName NullableString `json:"metadataName,omitempty"`
	SpecNameKind NullableString `json:"specNameKind,omitempty"`
	ListKind NullableString `json:"listKind,omitempty"`
	Group NullableString `json:"group,omitempty"`
	Labels interface{} `json:"labels,omitempty"`
	Age NullableString `json:"age,omitempty"`
}

// NewCrdListDto instantiates a new CrdListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCrdListDto() *CrdListDto {
	this := CrdListDto{}
	return &this
}

// NewCrdListDtoWithDefaults instantiates a new CrdListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCrdListDtoWithDefaults() *CrdListDto {
	this := CrdListDto{}
	return &this
}

// GetMetadataName returns the MetadataName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CrdListDto) GetMetadataName() string {
	if o == nil || IsNil(o.MetadataName.Get()) {
		var ret string
		return ret
	}
	return *o.MetadataName.Get()
}

// GetMetadataNameOk returns a tuple with the MetadataName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CrdListDto) GetMetadataNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetadataName.Get(), o.MetadataName.IsSet()
}

// HasMetadataName returns a boolean if a field has been set.
func (o *CrdListDto) HasMetadataName() bool {
	if o != nil && o.MetadataName.IsSet() {
		return true
	}

	return false
}

// SetMetadataName gets a reference to the given NullableString and assigns it to the MetadataName field.
func (o *CrdListDto) SetMetadataName(v string) {
	o.MetadataName.Set(&v)
}
// SetMetadataNameNil sets the value for MetadataName to be an explicit nil
func (o *CrdListDto) SetMetadataNameNil() {
	o.MetadataName.Set(nil)
}

// UnsetMetadataName ensures that no value is present for MetadataName, not even an explicit nil
func (o *CrdListDto) UnsetMetadataName() {
	o.MetadataName.Unset()
}

// GetSpecNameKind returns the SpecNameKind field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CrdListDto) GetSpecNameKind() string {
	if o == nil || IsNil(o.SpecNameKind.Get()) {
		var ret string
		return ret
	}
	return *o.SpecNameKind.Get()
}

// GetSpecNameKindOk returns a tuple with the SpecNameKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CrdListDto) GetSpecNameKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpecNameKind.Get(), o.SpecNameKind.IsSet()
}

// HasSpecNameKind returns a boolean if a field has been set.
func (o *CrdListDto) HasSpecNameKind() bool {
	if o != nil && o.SpecNameKind.IsSet() {
		return true
	}

	return false
}

// SetSpecNameKind gets a reference to the given NullableString and assigns it to the SpecNameKind field.
func (o *CrdListDto) SetSpecNameKind(v string) {
	o.SpecNameKind.Set(&v)
}
// SetSpecNameKindNil sets the value for SpecNameKind to be an explicit nil
func (o *CrdListDto) SetSpecNameKindNil() {
	o.SpecNameKind.Set(nil)
}

// UnsetSpecNameKind ensures that no value is present for SpecNameKind, not even an explicit nil
func (o *CrdListDto) UnsetSpecNameKind() {
	o.SpecNameKind.Unset()
}

// GetListKind returns the ListKind field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CrdListDto) GetListKind() string {
	if o == nil || IsNil(o.ListKind.Get()) {
		var ret string
		return ret
	}
	return *o.ListKind.Get()
}

// GetListKindOk returns a tuple with the ListKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CrdListDto) GetListKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ListKind.Get(), o.ListKind.IsSet()
}

// HasListKind returns a boolean if a field has been set.
func (o *CrdListDto) HasListKind() bool {
	if o != nil && o.ListKind.IsSet() {
		return true
	}

	return false
}

// SetListKind gets a reference to the given NullableString and assigns it to the ListKind field.
func (o *CrdListDto) SetListKind(v string) {
	o.ListKind.Set(&v)
}
// SetListKindNil sets the value for ListKind to be an explicit nil
func (o *CrdListDto) SetListKindNil() {
	o.ListKind.Set(nil)
}

// UnsetListKind ensures that no value is present for ListKind, not even an explicit nil
func (o *CrdListDto) UnsetListKind() {
	o.ListKind.Unset()
}

// GetGroup returns the Group field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CrdListDto) GetGroup() string {
	if o == nil || IsNil(o.Group.Get()) {
		var ret string
		return ret
	}
	return *o.Group.Get()
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CrdListDto) GetGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Group.Get(), o.Group.IsSet()
}

// HasGroup returns a boolean if a field has been set.
func (o *CrdListDto) HasGroup() bool {
	if o != nil && o.Group.IsSet() {
		return true
	}

	return false
}

// SetGroup gets a reference to the given NullableString and assigns it to the Group field.
func (o *CrdListDto) SetGroup(v string) {
	o.Group.Set(&v)
}
// SetGroupNil sets the value for Group to be an explicit nil
func (o *CrdListDto) SetGroupNil() {
	o.Group.Set(nil)
}

// UnsetGroup ensures that no value is present for Group, not even an explicit nil
func (o *CrdListDto) UnsetGroup() {
	o.Group.Unset()
}

// GetLabels returns the Labels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CrdListDto) GetLabels() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CrdListDto) GetLabelsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return &o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *CrdListDto) HasLabels() bool {
	if o != nil && IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given interface{} and assigns it to the Labels field.
func (o *CrdListDto) SetLabels(v interface{}) {
	o.Labels = v
}

// GetAge returns the Age field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CrdListDto) GetAge() string {
	if o == nil || IsNil(o.Age.Get()) {
		var ret string
		return ret
	}
	return *o.Age.Get()
}

// GetAgeOk returns a tuple with the Age field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CrdListDto) GetAgeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Age.Get(), o.Age.IsSet()
}

// HasAge returns a boolean if a field has been set.
func (o *CrdListDto) HasAge() bool {
	if o != nil && o.Age.IsSet() {
		return true
	}

	return false
}

// SetAge gets a reference to the given NullableString and assigns it to the Age field.
func (o *CrdListDto) SetAge(v string) {
	o.Age.Set(&v)
}
// SetAgeNil sets the value for Age to be an explicit nil
func (o *CrdListDto) SetAgeNil() {
	o.Age.Set(nil)
}

// UnsetAge ensures that no value is present for Age, not even an explicit nil
func (o *CrdListDto) UnsetAge() {
	o.Age.Unset()
}

func (o CrdListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CrdListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MetadataName.IsSet() {
		toSerialize["metadataName"] = o.MetadataName.Get()
	}
	if o.SpecNameKind.IsSet() {
		toSerialize["specNameKind"] = o.SpecNameKind.Get()
	}
	if o.ListKind.IsSet() {
		toSerialize["listKind"] = o.ListKind.Get()
	}
	if o.Group.IsSet() {
		toSerialize["group"] = o.Group.Get()
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.Age.IsSet() {
		toSerialize["age"] = o.Age.Get()
	}
	return toSerialize, nil
}

type NullableCrdListDto struct {
	value *CrdListDto
	isSet bool
}

func (v NullableCrdListDto) Get() *CrdListDto {
	return v.value
}

func (v *NullableCrdListDto) Set(val *CrdListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCrdListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCrdListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCrdListDto(val *CrdListDto) *NullableCrdListDto {
	return &NullableCrdListDto{value: val, isSet: true}
}

func (v NullableCrdListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCrdListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


