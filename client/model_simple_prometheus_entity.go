/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the SimplePrometheusEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SimplePrometheusEntity{}

// SimplePrometheusEntity struct for SimplePrometheusEntity
type SimplePrometheusEntity struct {
	PrometheusRuleId *int32 `json:"prometheusRuleId,omitempty"`
	PrometheusRuleName *string `json:"prometheusRuleName,omitempty"`
}

// NewSimplePrometheusEntity instantiates a new SimplePrometheusEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSimplePrometheusEntity() *SimplePrometheusEntity {
	this := SimplePrometheusEntity{}
	return &this
}

// NewSimplePrometheusEntityWithDefaults instantiates a new SimplePrometheusEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimplePrometheusEntityWithDefaults() *SimplePrometheusEntity {
	this := SimplePrometheusEntity{}
	return &this
}

// GetPrometheusRuleId returns the PrometheusRuleId field value if set, zero value otherwise.
func (o *SimplePrometheusEntity) GetPrometheusRuleId() int32 {
	if o == nil || IsNil(o.PrometheusRuleId) {
		var ret int32
		return ret
	}
	return *o.PrometheusRuleId
}

// GetPrometheusRuleIdOk returns a tuple with the PrometheusRuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplePrometheusEntity) GetPrometheusRuleIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PrometheusRuleId) {
		return nil, false
	}
	return o.PrometheusRuleId, true
}

// HasPrometheusRuleId returns a boolean if a field has been set.
func (o *SimplePrometheusEntity) HasPrometheusRuleId() bool {
	if o != nil && !IsNil(o.PrometheusRuleId) {
		return true
	}

	return false
}

// SetPrometheusRuleId gets a reference to the given int32 and assigns it to the PrometheusRuleId field.
func (o *SimplePrometheusEntity) SetPrometheusRuleId(v int32) {
	o.PrometheusRuleId = &v
}

// GetPrometheusRuleName returns the PrometheusRuleName field value if set, zero value otherwise.
func (o *SimplePrometheusEntity) GetPrometheusRuleName() string {
	if o == nil || IsNil(o.PrometheusRuleName) {
		var ret string
		return ret
	}
	return *o.PrometheusRuleName
}

// GetPrometheusRuleNameOk returns a tuple with the PrometheusRuleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimplePrometheusEntity) GetPrometheusRuleNameOk() (*string, bool) {
	if o == nil || IsNil(o.PrometheusRuleName) {
		return nil, false
	}
	return o.PrometheusRuleName, true
}

// HasPrometheusRuleName returns a boolean if a field has been set.
func (o *SimplePrometheusEntity) HasPrometheusRuleName() bool {
	if o != nil && !IsNil(o.PrometheusRuleName) {
		return true
	}

	return false
}

// SetPrometheusRuleName gets a reference to the given string and assigns it to the PrometheusRuleName field.
func (o *SimplePrometheusEntity) SetPrometheusRuleName(v string) {
	o.PrometheusRuleName = &v
}

func (o SimplePrometheusEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SimplePrometheusEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PrometheusRuleId) {
		toSerialize["prometheusRuleId"] = o.PrometheusRuleId
	}
	if !IsNil(o.PrometheusRuleName) {
		toSerialize["prometheusRuleName"] = o.PrometheusRuleName
	}
	return toSerialize, nil
}

type NullableSimplePrometheusEntity struct {
	value *SimplePrometheusEntity
	isSet bool
}

func (v NullableSimplePrometheusEntity) Get() *SimplePrometheusEntity {
	return v.value
}

func (v *NullableSimplePrometheusEntity) Set(val *SimplePrometheusEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableSimplePrometheusEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableSimplePrometheusEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSimplePrometheusEntity(val *SimplePrometheusEntity) *NullableSimplePrometheusEntity {
	return &NullableSimplePrometheusEntity{value: val, isSet: true}
}

func (v NullableSimplePrometheusEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSimplePrometheusEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


