/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SimplePrometheusEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SimplePrometheusEntity{}

// SimplePrometheusEntity struct for SimplePrometheusEntity
type SimplePrometheusEntity struct {
	PrometheusRuleId int32 `json:"prometheusRuleId"`
	PrometheusRuleName NullableString `json:"prometheusRuleName"`
}

type _SimplePrometheusEntity SimplePrometheusEntity

// NewSimplePrometheusEntity instantiates a new SimplePrometheusEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSimplePrometheusEntity(prometheusRuleId int32, prometheusRuleName NullableString) *SimplePrometheusEntity {
	this := SimplePrometheusEntity{}
	this.PrometheusRuleId = prometheusRuleId
	this.PrometheusRuleName = prometheusRuleName
	return &this
}

// NewSimplePrometheusEntityWithDefaults instantiates a new SimplePrometheusEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimplePrometheusEntityWithDefaults() *SimplePrometheusEntity {
	this := SimplePrometheusEntity{}
	return &this
}

// GetPrometheusRuleId returns the PrometheusRuleId field value
func (o *SimplePrometheusEntity) GetPrometheusRuleId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PrometheusRuleId
}

// GetPrometheusRuleIdOk returns a tuple with the PrometheusRuleId field value
// and a boolean to check if the value has been set.
func (o *SimplePrometheusEntity) GetPrometheusRuleIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrometheusRuleId, true
}

// SetPrometheusRuleId sets field value
func (o *SimplePrometheusEntity) SetPrometheusRuleId(v int32) {
	o.PrometheusRuleId = v
}

// GetPrometheusRuleName returns the PrometheusRuleName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SimplePrometheusEntity) GetPrometheusRuleName() string {
	if o == nil || o.PrometheusRuleName.Get() == nil {
		var ret string
		return ret
	}

	return *o.PrometheusRuleName.Get()
}

// GetPrometheusRuleNameOk returns a tuple with the PrometheusRuleName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimplePrometheusEntity) GetPrometheusRuleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrometheusRuleName.Get(), o.PrometheusRuleName.IsSet()
}

// SetPrometheusRuleName sets field value
func (o *SimplePrometheusEntity) SetPrometheusRuleName(v string) {
	o.PrometheusRuleName.Set(&v)
}

func (o SimplePrometheusEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SimplePrometheusEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["prometheusRuleId"] = o.PrometheusRuleId
	toSerialize["prometheusRuleName"] = o.PrometheusRuleName.Get()
	return toSerialize, nil
}

func (o *SimplePrometheusEntity) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"prometheusRuleId",
		"prometheusRuleName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSimplePrometheusEntity := _SimplePrometheusEntity{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSimplePrometheusEntity)

	if err != nil {
		return err
	}

	*o = SimplePrometheusEntity(varSimplePrometheusEntity)

	return err
}

type NullableSimplePrometheusEntity struct {
	value *SimplePrometheusEntity
	isSet bool
}

func (v NullableSimplePrometheusEntity) Get() *SimplePrometheusEntity {
	return v.value
}

func (v *NullableSimplePrometheusEntity) Set(val *SimplePrometheusEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableSimplePrometheusEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableSimplePrometheusEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSimplePrometheusEntity(val *SimplePrometheusEntity) *NullableSimplePrometheusEntity {
	return &NullableSimplePrometheusEntity{value: val, isSet: true}
}

func (v NullableSimplePrometheusEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSimplePrometheusEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


