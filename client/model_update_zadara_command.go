/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the UpdateZadaraCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateZadaraCommand{}

// UpdateZadaraCommand struct for UpdateZadaraCommand
type UpdateZadaraCommand struct {
	Id *int32 `json:"id,omitempty"`
	Name NullableString `json:"name,omitempty"`
	ZadaraSecretAccessKey NullableString `json:"zadaraSecretAccessKey,omitempty"`
	ZadaraAccessKeyId NullableString `json:"zadaraAccessKeyId,omitempty"`
}

// NewUpdateZadaraCommand instantiates a new UpdateZadaraCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateZadaraCommand() *UpdateZadaraCommand {
	this := UpdateZadaraCommand{}
	return &this
}

// NewUpdateZadaraCommandWithDefaults instantiates a new UpdateZadaraCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateZadaraCommandWithDefaults() *UpdateZadaraCommand {
	this := UpdateZadaraCommand{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UpdateZadaraCommand) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateZadaraCommand) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UpdateZadaraCommand) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *UpdateZadaraCommand) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateZadaraCommand) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateZadaraCommand) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *UpdateZadaraCommand) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *UpdateZadaraCommand) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *UpdateZadaraCommand) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *UpdateZadaraCommand) UnsetName() {
	o.Name.Unset()
}

// GetZadaraSecretAccessKey returns the ZadaraSecretAccessKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateZadaraCommand) GetZadaraSecretAccessKey() string {
	if o == nil || IsNil(o.ZadaraSecretAccessKey.Get()) {
		var ret string
		return ret
	}
	return *o.ZadaraSecretAccessKey.Get()
}

// GetZadaraSecretAccessKeyOk returns a tuple with the ZadaraSecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateZadaraCommand) GetZadaraSecretAccessKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZadaraSecretAccessKey.Get(), o.ZadaraSecretAccessKey.IsSet()
}

// HasZadaraSecretAccessKey returns a boolean if a field has been set.
func (o *UpdateZadaraCommand) HasZadaraSecretAccessKey() bool {
	if o != nil && o.ZadaraSecretAccessKey.IsSet() {
		return true
	}

	return false
}

// SetZadaraSecretAccessKey gets a reference to the given NullableString and assigns it to the ZadaraSecretAccessKey field.
func (o *UpdateZadaraCommand) SetZadaraSecretAccessKey(v string) {
	o.ZadaraSecretAccessKey.Set(&v)
}
// SetZadaraSecretAccessKeyNil sets the value for ZadaraSecretAccessKey to be an explicit nil
func (o *UpdateZadaraCommand) SetZadaraSecretAccessKeyNil() {
	o.ZadaraSecretAccessKey.Set(nil)
}

// UnsetZadaraSecretAccessKey ensures that no value is present for ZadaraSecretAccessKey, not even an explicit nil
func (o *UpdateZadaraCommand) UnsetZadaraSecretAccessKey() {
	o.ZadaraSecretAccessKey.Unset()
}

// GetZadaraAccessKeyId returns the ZadaraAccessKeyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateZadaraCommand) GetZadaraAccessKeyId() string {
	if o == nil || IsNil(o.ZadaraAccessKeyId.Get()) {
		var ret string
		return ret
	}
	return *o.ZadaraAccessKeyId.Get()
}

// GetZadaraAccessKeyIdOk returns a tuple with the ZadaraAccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateZadaraCommand) GetZadaraAccessKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZadaraAccessKeyId.Get(), o.ZadaraAccessKeyId.IsSet()
}

// HasZadaraAccessKeyId returns a boolean if a field has been set.
func (o *UpdateZadaraCommand) HasZadaraAccessKeyId() bool {
	if o != nil && o.ZadaraAccessKeyId.IsSet() {
		return true
	}

	return false
}

// SetZadaraAccessKeyId gets a reference to the given NullableString and assigns it to the ZadaraAccessKeyId field.
func (o *UpdateZadaraCommand) SetZadaraAccessKeyId(v string) {
	o.ZadaraAccessKeyId.Set(&v)
}
// SetZadaraAccessKeyIdNil sets the value for ZadaraAccessKeyId to be an explicit nil
func (o *UpdateZadaraCommand) SetZadaraAccessKeyIdNil() {
	o.ZadaraAccessKeyId.Set(nil)
}

// UnsetZadaraAccessKeyId ensures that no value is present for ZadaraAccessKeyId, not even an explicit nil
func (o *UpdateZadaraCommand) UnsetZadaraAccessKeyId() {
	o.ZadaraAccessKeyId.Unset()
}

func (o UpdateZadaraCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateZadaraCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ZadaraSecretAccessKey.IsSet() {
		toSerialize["zadaraSecretAccessKey"] = o.ZadaraSecretAccessKey.Get()
	}
	if o.ZadaraAccessKeyId.IsSet() {
		toSerialize["zadaraAccessKeyId"] = o.ZadaraAccessKeyId.Get()
	}
	return toSerialize, nil
}

type NullableUpdateZadaraCommand struct {
	value *UpdateZadaraCommand
	isSet bool
}

func (v NullableUpdateZadaraCommand) Get() *UpdateZadaraCommand {
	return v.value
}

func (v *NullableUpdateZadaraCommand) Set(val *UpdateZadaraCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateZadaraCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateZadaraCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateZadaraCommand(val *UpdateZadaraCommand) *NullableUpdateZadaraCommand {
	return &NullableUpdateZadaraCommand{value: val, isSet: true}
}

func (v NullableUpdateZadaraCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateZadaraCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


