// Code generated by go-swagger; DO NOT EDIT.

package invoices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// InvoicesInvoicesReader is a Reader for the InvoicesInvoices structure.
type InvoicesInvoicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InvoicesInvoicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInvoicesInvoicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInvoicesInvoicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewInvoicesInvoicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInvoicesInvoicesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInvoicesInvoicesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInvoicesInvoicesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewInvoicesInvoicesOK creates a InvoicesInvoicesOK with default headers values
func NewInvoicesInvoicesOK() *InvoicesInvoicesOK {
	return &InvoicesInvoicesOK{}
}

/*
InvoicesInvoicesOK describes a response with status code 200, with default header values.

Success
*/
type InvoicesInvoicesOK struct {
	Payload *InvoicesInvoicesOKBody
}

// IsSuccess returns true when this invoices invoices o k response has a 2xx status code
func (o *InvoicesInvoicesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this invoices invoices o k response has a 3xx status code
func (o *InvoicesInvoicesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoices invoices o k response has a 4xx status code
func (o *InvoicesInvoicesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this invoices invoices o k response has a 5xx status code
func (o *InvoicesInvoicesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this invoices invoices o k response a status code equal to that given
func (o *InvoicesInvoicesOK) IsCode(code int) bool {
	return code == 200
}

func (o *InvoicesInvoicesOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Invoices/list][%d] invoicesInvoicesOK  %+v", 200, o.Payload)
}

func (o *InvoicesInvoicesOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Invoices/list][%d] invoicesInvoicesOK  %+v", 200, o.Payload)
}

func (o *InvoicesInvoicesOK) GetPayload() *InvoicesInvoicesOKBody {
	return o.Payload
}

func (o *InvoicesInvoicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(InvoicesInvoicesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvoicesInvoicesBadRequest creates a InvoicesInvoicesBadRequest with default headers values
func NewInvoicesInvoicesBadRequest() *InvoicesInvoicesBadRequest {
	return &InvoicesInvoicesBadRequest{}
}

/*
InvoicesInvoicesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type InvoicesInvoicesBadRequest struct {
	Payload []*InvoicesInvoicesBadRequestBodyItems0
}

// IsSuccess returns true when this invoices invoices bad request response has a 2xx status code
func (o *InvoicesInvoicesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoices invoices bad request response has a 3xx status code
func (o *InvoicesInvoicesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoices invoices bad request response has a 4xx status code
func (o *InvoicesInvoicesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this invoices invoices bad request response has a 5xx status code
func (o *InvoicesInvoicesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this invoices invoices bad request response a status code equal to that given
func (o *InvoicesInvoicesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *InvoicesInvoicesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Invoices/list][%d] invoicesInvoicesBadRequest  %+v", 400, o.Payload)
}

func (o *InvoicesInvoicesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Invoices/list][%d] invoicesInvoicesBadRequest  %+v", 400, o.Payload)
}

func (o *InvoicesInvoicesBadRequest) GetPayload() []*InvoicesInvoicesBadRequestBodyItems0 {
	return o.Payload
}

func (o *InvoicesInvoicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvoicesInvoicesUnauthorized creates a InvoicesInvoicesUnauthorized with default headers values
func NewInvoicesInvoicesUnauthorized() *InvoicesInvoicesUnauthorized {
	return &InvoicesInvoicesUnauthorized{}
}

/*
InvoicesInvoicesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type InvoicesInvoicesUnauthorized struct {
	Payload *InvoicesInvoicesUnauthorizedBody
}

// IsSuccess returns true when this invoices invoices unauthorized response has a 2xx status code
func (o *InvoicesInvoicesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoices invoices unauthorized response has a 3xx status code
func (o *InvoicesInvoicesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoices invoices unauthorized response has a 4xx status code
func (o *InvoicesInvoicesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this invoices invoices unauthorized response has a 5xx status code
func (o *InvoicesInvoicesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this invoices invoices unauthorized response a status code equal to that given
func (o *InvoicesInvoicesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *InvoicesInvoicesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Invoices/list][%d] invoicesInvoicesUnauthorized  %+v", 401, o.Payload)
}

func (o *InvoicesInvoicesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Invoices/list][%d] invoicesInvoicesUnauthorized  %+v", 401, o.Payload)
}

func (o *InvoicesInvoicesUnauthorized) GetPayload() *InvoicesInvoicesUnauthorizedBody {
	return o.Payload
}

func (o *InvoicesInvoicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(InvoicesInvoicesUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvoicesInvoicesForbidden creates a InvoicesInvoicesForbidden with default headers values
func NewInvoicesInvoicesForbidden() *InvoicesInvoicesForbidden {
	return &InvoicesInvoicesForbidden{}
}

/*
InvoicesInvoicesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type InvoicesInvoicesForbidden struct {
	Payload *InvoicesInvoicesForbiddenBody
}

// IsSuccess returns true when this invoices invoices forbidden response has a 2xx status code
func (o *InvoicesInvoicesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoices invoices forbidden response has a 3xx status code
func (o *InvoicesInvoicesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoices invoices forbidden response has a 4xx status code
func (o *InvoicesInvoicesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this invoices invoices forbidden response has a 5xx status code
func (o *InvoicesInvoicesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this invoices invoices forbidden response a status code equal to that given
func (o *InvoicesInvoicesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *InvoicesInvoicesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Invoices/list][%d] invoicesInvoicesForbidden  %+v", 403, o.Payload)
}

func (o *InvoicesInvoicesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Invoices/list][%d] invoicesInvoicesForbidden  %+v", 403, o.Payload)
}

func (o *InvoicesInvoicesForbidden) GetPayload() *InvoicesInvoicesForbiddenBody {
	return o.Payload
}

func (o *InvoicesInvoicesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(InvoicesInvoicesForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvoicesInvoicesNotFound creates a InvoicesInvoicesNotFound with default headers values
func NewInvoicesInvoicesNotFound() *InvoicesInvoicesNotFound {
	return &InvoicesInvoicesNotFound{}
}

/*
InvoicesInvoicesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type InvoicesInvoicesNotFound struct {
	Payload *InvoicesInvoicesNotFoundBody
}

// IsSuccess returns true when this invoices invoices not found response has a 2xx status code
func (o *InvoicesInvoicesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoices invoices not found response has a 3xx status code
func (o *InvoicesInvoicesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoices invoices not found response has a 4xx status code
func (o *InvoicesInvoicesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this invoices invoices not found response has a 5xx status code
func (o *InvoicesInvoicesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this invoices invoices not found response a status code equal to that given
func (o *InvoicesInvoicesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *InvoicesInvoicesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Invoices/list][%d] invoicesInvoicesNotFound  %+v", 404, o.Payload)
}

func (o *InvoicesInvoicesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Invoices/list][%d] invoicesInvoicesNotFound  %+v", 404, o.Payload)
}

func (o *InvoicesInvoicesNotFound) GetPayload() *InvoicesInvoicesNotFoundBody {
	return o.Payload
}

func (o *InvoicesInvoicesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(InvoicesInvoicesNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvoicesInvoicesInternalServerError creates a InvoicesInvoicesInternalServerError with default headers values
func NewInvoicesInvoicesInternalServerError() *InvoicesInvoicesInternalServerError {
	return &InvoicesInvoicesInternalServerError{}
}

/*
InvoicesInvoicesInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type InvoicesInvoicesInternalServerError struct {
}

// IsSuccess returns true when this invoices invoices internal server error response has a 2xx status code
func (o *InvoicesInvoicesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoices invoices internal server error response has a 3xx status code
func (o *InvoicesInvoicesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoices invoices internal server error response has a 4xx status code
func (o *InvoicesInvoicesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this invoices invoices internal server error response has a 5xx status code
func (o *InvoicesInvoicesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this invoices invoices internal server error response a status code equal to that given
func (o *InvoicesInvoicesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *InvoicesInvoicesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Invoices/list][%d] invoicesInvoicesInternalServerError ", 500)
}

func (o *InvoicesInvoicesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Invoices/list][%d] invoicesInvoicesInternalServerError ", 500)
}

func (o *InvoicesInvoicesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
InvoicesInvoicesBadRequestBodyItems0 invoices invoices bad request body items0
swagger:model InvoicesInvoicesBadRequestBodyItems0
*/
type InvoicesInvoicesBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this invoices invoices bad request body items0
func (o *InvoicesInvoicesBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this invoices invoices bad request body items0 based on context it is used
func (o *InvoicesInvoicesBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *InvoicesInvoicesBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InvoicesInvoicesBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res InvoicesInvoicesBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InvoicesInvoicesForbiddenBody invoices invoices forbidden body
swagger:model InvoicesInvoicesForbiddenBody
*/
type InvoicesInvoicesForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this invoices invoices forbidden body
func (o *InvoicesInvoicesForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this invoices invoices forbidden body based on context it is used
func (o *InvoicesInvoicesForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *InvoicesInvoicesForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InvoicesInvoicesForbiddenBody) UnmarshalBinary(b []byte) error {
	var res InvoicesInvoicesForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InvoicesInvoicesNotFoundBody invoices invoices not found body
swagger:model InvoicesInvoicesNotFoundBody
*/
type InvoicesInvoicesNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this invoices invoices not found body
func (o *InvoicesInvoicesNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this invoices invoices not found body based on context it is used
func (o *InvoicesInvoicesNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *InvoicesInvoicesNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InvoicesInvoicesNotFoundBody) UnmarshalBinary(b []byte) error {
	var res InvoicesInvoicesNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InvoicesInvoicesOKBody invoices invoices o k body
swagger:model InvoicesInvoicesOKBody
*/
type InvoicesInvoicesOKBody struct {

	// data
	Data []*InvoicesInvoicesOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this invoices invoices o k body
func (o *InvoicesInvoicesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InvoicesInvoicesOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("invoicesInvoicesOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("invoicesInvoicesOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this invoices invoices o k body based on the context it is used
func (o *InvoicesInvoicesOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InvoicesInvoicesOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("invoicesInvoicesOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("invoicesInvoicesOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *InvoicesInvoicesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InvoicesInvoicesOKBody) UnmarshalBinary(b []byte) error {
	var res InvoicesInvoicesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InvoicesInvoicesOKBodyDataItems0 invoices invoices o k body data items0
swagger:model InvoicesInvoicesOKBodyDataItems0
*/
type InvoicesInvoicesOKBodyDataItems0 struct {

	// end date
	EndDate string `json:"endDate,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// invoice Id
	InvoiceID string `json:"invoiceId,omitempty"`

	// invoice number
	InvoiceNumber string `json:"invoiceNumber,omitempty"`

	// is paid
	IsPaid bool `json:"isPaid"`

	// name
	Name string `json:"name,omitempty"`

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// organization name
	OrganizationName string `json:"organizationName,omitempty"`

	// organization subscription Id
	OrganizationSubscriptionID int32 `json:"organizationSubscriptionId,omitempty"`

	// price
	Price float64 `json:"price,omitempty"`

	// required payment action
	RequiredPaymentAction bool `json:"requiredPaymentAction"`

	// start date
	StartDate string `json:"startDate,omitempty"`

	// subscription name
	SubscriptionName string `json:"subscriptionName,omitempty"`

	// subscription type
	SubscriptionType string `json:"subscriptionType,omitempty"`
}

// Validate validates this invoices invoices o k body data items0
func (o *InvoicesInvoicesOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this invoices invoices o k body data items0 based on context it is used
func (o *InvoicesInvoicesOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *InvoicesInvoicesOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InvoicesInvoicesOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res InvoicesInvoicesOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InvoicesInvoicesUnauthorizedBody invoices invoices unauthorized body
swagger:model InvoicesInvoicesUnauthorizedBody
*/
type InvoicesInvoicesUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this invoices invoices unauthorized body
func (o *InvoicesInvoicesUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this invoices invoices unauthorized body based on context it is used
func (o *InvoicesInvoicesUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *InvoicesInvoicesUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InvoicesInvoicesUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res InvoicesInvoicesUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
