// Code generated by go-swagger; DO NOT EDIT.

package invoices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// InvoicesDownloadReader is a Reader for the InvoicesDownload structure.
type InvoicesDownloadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InvoicesDownloadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInvoicesDownloadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInvoicesDownloadBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewInvoicesDownloadUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInvoicesDownloadForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInvoicesDownloadNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInvoicesDownloadInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewInvoicesDownloadOK creates a InvoicesDownloadOK with default headers values
func NewInvoicesDownloadOK() *InvoicesDownloadOK {
	return &InvoicesDownloadOK{}
}

/*
InvoicesDownloadOK describes a response with status code 200, with default header values.

Success
*/
type InvoicesDownloadOK struct {
}

// IsSuccess returns true when this invoices download o k response has a 2xx status code
func (o *InvoicesDownloadOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this invoices download o k response has a 3xx status code
func (o *InvoicesDownloadOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoices download o k response has a 4xx status code
func (o *InvoicesDownloadOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this invoices download o k response has a 5xx status code
func (o *InvoicesDownloadOK) IsServerError() bool {
	return false
}

// IsCode returns true when this invoices download o k response a status code equal to that given
func (o *InvoicesDownloadOK) IsCode(code int) bool {
	return code == 200
}

func (o *InvoicesDownloadOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Invoices/download][%d] invoicesDownloadOK ", 200)
}

func (o *InvoicesDownloadOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Invoices/download][%d] invoicesDownloadOK ", 200)
}

func (o *InvoicesDownloadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInvoicesDownloadBadRequest creates a InvoicesDownloadBadRequest with default headers values
func NewInvoicesDownloadBadRequest() *InvoicesDownloadBadRequest {
	return &InvoicesDownloadBadRequest{}
}

/*
InvoicesDownloadBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type InvoicesDownloadBadRequest struct {
	Payload *models.ValidationProblemDetails
}

// IsSuccess returns true when this invoices download bad request response has a 2xx status code
func (o *InvoicesDownloadBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoices download bad request response has a 3xx status code
func (o *InvoicesDownloadBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoices download bad request response has a 4xx status code
func (o *InvoicesDownloadBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this invoices download bad request response has a 5xx status code
func (o *InvoicesDownloadBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this invoices download bad request response a status code equal to that given
func (o *InvoicesDownloadBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *InvoicesDownloadBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Invoices/download][%d] invoicesDownloadBadRequest  %+v", 400, o.Payload)
}

func (o *InvoicesDownloadBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Invoices/download][%d] invoicesDownloadBadRequest  %+v", 400, o.Payload)
}

func (o *InvoicesDownloadBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *InvoicesDownloadBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvoicesDownloadUnauthorized creates a InvoicesDownloadUnauthorized with default headers values
func NewInvoicesDownloadUnauthorized() *InvoicesDownloadUnauthorized {
	return &InvoicesDownloadUnauthorized{}
}

/*
InvoicesDownloadUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type InvoicesDownloadUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this invoices download unauthorized response has a 2xx status code
func (o *InvoicesDownloadUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoices download unauthorized response has a 3xx status code
func (o *InvoicesDownloadUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoices download unauthorized response has a 4xx status code
func (o *InvoicesDownloadUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this invoices download unauthorized response has a 5xx status code
func (o *InvoicesDownloadUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this invoices download unauthorized response a status code equal to that given
func (o *InvoicesDownloadUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *InvoicesDownloadUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Invoices/download][%d] invoicesDownloadUnauthorized  %+v", 401, o.Payload)
}

func (o *InvoicesDownloadUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Invoices/download][%d] invoicesDownloadUnauthorized  %+v", 401, o.Payload)
}

func (o *InvoicesDownloadUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *InvoicesDownloadUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvoicesDownloadForbidden creates a InvoicesDownloadForbidden with default headers values
func NewInvoicesDownloadForbidden() *InvoicesDownloadForbidden {
	return &InvoicesDownloadForbidden{}
}

/*
InvoicesDownloadForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type InvoicesDownloadForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this invoices download forbidden response has a 2xx status code
func (o *InvoicesDownloadForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoices download forbidden response has a 3xx status code
func (o *InvoicesDownloadForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoices download forbidden response has a 4xx status code
func (o *InvoicesDownloadForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this invoices download forbidden response has a 5xx status code
func (o *InvoicesDownloadForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this invoices download forbidden response a status code equal to that given
func (o *InvoicesDownloadForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *InvoicesDownloadForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Invoices/download][%d] invoicesDownloadForbidden  %+v", 403, o.Payload)
}

func (o *InvoicesDownloadForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Invoices/download][%d] invoicesDownloadForbidden  %+v", 403, o.Payload)
}

func (o *InvoicesDownloadForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *InvoicesDownloadForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvoicesDownloadNotFound creates a InvoicesDownloadNotFound with default headers values
func NewInvoicesDownloadNotFound() *InvoicesDownloadNotFound {
	return &InvoicesDownloadNotFound{}
}

/*
InvoicesDownloadNotFound describes a response with status code 404, with default header values.

Not Found
*/
type InvoicesDownloadNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this invoices download not found response has a 2xx status code
func (o *InvoicesDownloadNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoices download not found response has a 3xx status code
func (o *InvoicesDownloadNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoices download not found response has a 4xx status code
func (o *InvoicesDownloadNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this invoices download not found response has a 5xx status code
func (o *InvoicesDownloadNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this invoices download not found response a status code equal to that given
func (o *InvoicesDownloadNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *InvoicesDownloadNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Invoices/download][%d] invoicesDownloadNotFound  %+v", 404, o.Payload)
}

func (o *InvoicesDownloadNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Invoices/download][%d] invoicesDownloadNotFound  %+v", 404, o.Payload)
}

func (o *InvoicesDownloadNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *InvoicesDownloadNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInvoicesDownloadInternalServerError creates a InvoicesDownloadInternalServerError with default headers values
func NewInvoicesDownloadInternalServerError() *InvoicesDownloadInternalServerError {
	return &InvoicesDownloadInternalServerError{}
}

/*
InvoicesDownloadInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type InvoicesDownloadInternalServerError struct {
}

// IsSuccess returns true when this invoices download internal server error response has a 2xx status code
func (o *InvoicesDownloadInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invoices download internal server error response has a 3xx status code
func (o *InvoicesDownloadInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invoices download internal server error response has a 4xx status code
func (o *InvoicesDownloadInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this invoices download internal server error response has a 5xx status code
func (o *InvoicesDownloadInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this invoices download internal server error response a status code equal to that given
func (o *InvoicesDownloadInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *InvoicesDownloadInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Invoices/download][%d] invoicesDownloadInternalServerError ", 500)
}

func (o *InvoicesDownloadInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Invoices/download][%d] invoicesDownloadInternalServerError ", 500)
}

func (o *InvoicesDownloadInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
