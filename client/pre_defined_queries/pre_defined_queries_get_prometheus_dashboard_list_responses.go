// Code generated by go-swagger; DO NOT EDIT.

package pre_defined_queries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// PreDefinedQueriesGetPrometheusDashboardListReader is a Reader for the PreDefinedQueriesGetPrometheusDashboardList structure.
type PreDefinedQueriesGetPrometheusDashboardListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PreDefinedQueriesGetPrometheusDashboardListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPreDefinedQueriesGetPrometheusDashboardListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPreDefinedQueriesGetPrometheusDashboardListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPreDefinedQueriesGetPrometheusDashboardListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPreDefinedQueriesGetPrometheusDashboardListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPreDefinedQueriesGetPrometheusDashboardListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPreDefinedQueriesGetPrometheusDashboardListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPreDefinedQueriesGetPrometheusDashboardListOK creates a PreDefinedQueriesGetPrometheusDashboardListOK with default headers values
func NewPreDefinedQueriesGetPrometheusDashboardListOK() *PreDefinedQueriesGetPrometheusDashboardListOK {
	return &PreDefinedQueriesGetPrometheusDashboardListOK{}
}

/* PreDefinedQueriesGetPrometheusDashboardListOK describes a response with status code 200, with default header values.

Success
*/
type PreDefinedQueriesGetPrometheusDashboardListOK struct {
	Payload []*models.PrometheusDashboardListDto
}

func (o *PreDefinedQueriesGetPrometheusDashboardListOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/PreDefinedQueries/prometheus/dashboard/list][%d] preDefinedQueriesGetPrometheusDashboardListOK  %+v", 200, o.Payload)
}
func (o *PreDefinedQueriesGetPrometheusDashboardListOK) GetPayload() []*models.PrometheusDashboardListDto {
	return o.Payload
}

func (o *PreDefinedQueriesGetPrometheusDashboardListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreDefinedQueriesGetPrometheusDashboardListBadRequest creates a PreDefinedQueriesGetPrometheusDashboardListBadRequest with default headers values
func NewPreDefinedQueriesGetPrometheusDashboardListBadRequest() *PreDefinedQueriesGetPrometheusDashboardListBadRequest {
	return &PreDefinedQueriesGetPrometheusDashboardListBadRequest{}
}

/* PreDefinedQueriesGetPrometheusDashboardListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PreDefinedQueriesGetPrometheusDashboardListBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *PreDefinedQueriesGetPrometheusDashboardListBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/PreDefinedQueries/prometheus/dashboard/list][%d] preDefinedQueriesGetPrometheusDashboardListBadRequest  %+v", 400, o.Payload)
}
func (o *PreDefinedQueriesGetPrometheusDashboardListBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *PreDefinedQueriesGetPrometheusDashboardListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreDefinedQueriesGetPrometheusDashboardListUnauthorized creates a PreDefinedQueriesGetPrometheusDashboardListUnauthorized with default headers values
func NewPreDefinedQueriesGetPrometheusDashboardListUnauthorized() *PreDefinedQueriesGetPrometheusDashboardListUnauthorized {
	return &PreDefinedQueriesGetPrometheusDashboardListUnauthorized{}
}

/* PreDefinedQueriesGetPrometheusDashboardListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PreDefinedQueriesGetPrometheusDashboardListUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *PreDefinedQueriesGetPrometheusDashboardListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/PreDefinedQueries/prometheus/dashboard/list][%d] preDefinedQueriesGetPrometheusDashboardListUnauthorized  %+v", 401, o.Payload)
}
func (o *PreDefinedQueriesGetPrometheusDashboardListUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PreDefinedQueriesGetPrometheusDashboardListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreDefinedQueriesGetPrometheusDashboardListForbidden creates a PreDefinedQueriesGetPrometheusDashboardListForbidden with default headers values
func NewPreDefinedQueriesGetPrometheusDashboardListForbidden() *PreDefinedQueriesGetPrometheusDashboardListForbidden {
	return &PreDefinedQueriesGetPrometheusDashboardListForbidden{}
}

/* PreDefinedQueriesGetPrometheusDashboardListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PreDefinedQueriesGetPrometheusDashboardListForbidden struct {
	Payload *models.ProblemDetails
}

func (o *PreDefinedQueriesGetPrometheusDashboardListForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/PreDefinedQueries/prometheus/dashboard/list][%d] preDefinedQueriesGetPrometheusDashboardListForbidden  %+v", 403, o.Payload)
}
func (o *PreDefinedQueriesGetPrometheusDashboardListForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PreDefinedQueriesGetPrometheusDashboardListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreDefinedQueriesGetPrometheusDashboardListNotFound creates a PreDefinedQueriesGetPrometheusDashboardListNotFound with default headers values
func NewPreDefinedQueriesGetPrometheusDashboardListNotFound() *PreDefinedQueriesGetPrometheusDashboardListNotFound {
	return &PreDefinedQueriesGetPrometheusDashboardListNotFound{}
}

/* PreDefinedQueriesGetPrometheusDashboardListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PreDefinedQueriesGetPrometheusDashboardListNotFound struct {
	Payload *models.ProblemDetails
}

func (o *PreDefinedQueriesGetPrometheusDashboardListNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/PreDefinedQueries/prometheus/dashboard/list][%d] preDefinedQueriesGetPrometheusDashboardListNotFound  %+v", 404, o.Payload)
}
func (o *PreDefinedQueriesGetPrometheusDashboardListNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PreDefinedQueriesGetPrometheusDashboardListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreDefinedQueriesGetPrometheusDashboardListInternalServerError creates a PreDefinedQueriesGetPrometheusDashboardListInternalServerError with default headers values
func NewPreDefinedQueriesGetPrometheusDashboardListInternalServerError() *PreDefinedQueriesGetPrometheusDashboardListInternalServerError {
	return &PreDefinedQueriesGetPrometheusDashboardListInternalServerError{}
}

/* PreDefinedQueriesGetPrometheusDashboardListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type PreDefinedQueriesGetPrometheusDashboardListInternalServerError struct {
}

func (o *PreDefinedQueriesGetPrometheusDashboardListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/PreDefinedQueries/prometheus/dashboard/list][%d] preDefinedQueriesGetPrometheusDashboardListInternalServerError ", 500)
}

func (o *PreDefinedQueriesGetPrometheusDashboardListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
