// Code generated by go-swagger; DO NOT EDIT.

package pre_defined_queries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// PreDefinedQueriesCreatePrometheusDashboardReader is a Reader for the PreDefinedQueriesCreatePrometheusDashboard structure.
type PreDefinedQueriesCreatePrometheusDashboardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PreDefinedQueriesCreatePrometheusDashboardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPreDefinedQueriesCreatePrometheusDashboardOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPreDefinedQueriesCreatePrometheusDashboardBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPreDefinedQueriesCreatePrometheusDashboardUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPreDefinedQueriesCreatePrometheusDashboardForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPreDefinedQueriesCreatePrometheusDashboardNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPreDefinedQueriesCreatePrometheusDashboardInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPreDefinedQueriesCreatePrometheusDashboardOK creates a PreDefinedQueriesCreatePrometheusDashboardOK with default headers values
func NewPreDefinedQueriesCreatePrometheusDashboardOK() *PreDefinedQueriesCreatePrometheusDashboardOK {
	return &PreDefinedQueriesCreatePrometheusDashboardOK{}
}

/*
PreDefinedQueriesCreatePrometheusDashboardOK describes a response with status code 200, with default header values.

Success
*/
type PreDefinedQueriesCreatePrometheusDashboardOK struct {
	Payload models.Unit
}

// IsSuccess returns true when this pre defined queries create prometheus dashboard o k response has a 2xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this pre defined queries create prometheus dashboard o k response has a 3xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pre defined queries create prometheus dashboard o k response has a 4xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this pre defined queries create prometheus dashboard o k response has a 5xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardOK) IsServerError() bool {
	return false
}

// IsCode returns true when this pre defined queries create prometheus dashboard o k response a status code equal to that given
func (o *PreDefinedQueriesCreatePrometheusDashboardOK) IsCode(code int) bool {
	return code == 200
}

func (o *PreDefinedQueriesCreatePrometheusDashboardOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/PreDefinedQueries/prometheus/dashboard/create][%d] preDefinedQueriesCreatePrometheusDashboardOK  %+v", 200, o.Payload)
}

func (o *PreDefinedQueriesCreatePrometheusDashboardOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/PreDefinedQueries/prometheus/dashboard/create][%d] preDefinedQueriesCreatePrometheusDashboardOK  %+v", 200, o.Payload)
}

func (o *PreDefinedQueriesCreatePrometheusDashboardOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *PreDefinedQueriesCreatePrometheusDashboardOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreDefinedQueriesCreatePrometheusDashboardBadRequest creates a PreDefinedQueriesCreatePrometheusDashboardBadRequest with default headers values
func NewPreDefinedQueriesCreatePrometheusDashboardBadRequest() *PreDefinedQueriesCreatePrometheusDashboardBadRequest {
	return &PreDefinedQueriesCreatePrometheusDashboardBadRequest{}
}

/*
PreDefinedQueriesCreatePrometheusDashboardBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PreDefinedQueriesCreatePrometheusDashboardBadRequest struct {
	Payload *models.ValidationProblemDetails
}

// IsSuccess returns true when this pre defined queries create prometheus dashboard bad request response has a 2xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pre defined queries create prometheus dashboard bad request response has a 3xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pre defined queries create prometheus dashboard bad request response has a 4xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this pre defined queries create prometheus dashboard bad request response has a 5xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this pre defined queries create prometheus dashboard bad request response a status code equal to that given
func (o *PreDefinedQueriesCreatePrometheusDashboardBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PreDefinedQueriesCreatePrometheusDashboardBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/PreDefinedQueries/prometheus/dashboard/create][%d] preDefinedQueriesCreatePrometheusDashboardBadRequest  %+v", 400, o.Payload)
}

func (o *PreDefinedQueriesCreatePrometheusDashboardBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/PreDefinedQueries/prometheus/dashboard/create][%d] preDefinedQueriesCreatePrometheusDashboardBadRequest  %+v", 400, o.Payload)
}

func (o *PreDefinedQueriesCreatePrometheusDashboardBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *PreDefinedQueriesCreatePrometheusDashboardBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreDefinedQueriesCreatePrometheusDashboardUnauthorized creates a PreDefinedQueriesCreatePrometheusDashboardUnauthorized with default headers values
func NewPreDefinedQueriesCreatePrometheusDashboardUnauthorized() *PreDefinedQueriesCreatePrometheusDashboardUnauthorized {
	return &PreDefinedQueriesCreatePrometheusDashboardUnauthorized{}
}

/*
PreDefinedQueriesCreatePrometheusDashboardUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PreDefinedQueriesCreatePrometheusDashboardUnauthorized struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this pre defined queries create prometheus dashboard unauthorized response has a 2xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pre defined queries create prometheus dashboard unauthorized response has a 3xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pre defined queries create prometheus dashboard unauthorized response has a 4xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this pre defined queries create prometheus dashboard unauthorized response has a 5xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this pre defined queries create prometheus dashboard unauthorized response a status code equal to that given
func (o *PreDefinedQueriesCreatePrometheusDashboardUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PreDefinedQueriesCreatePrometheusDashboardUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/PreDefinedQueries/prometheus/dashboard/create][%d] preDefinedQueriesCreatePrometheusDashboardUnauthorized  %+v", 401, o.Payload)
}

func (o *PreDefinedQueriesCreatePrometheusDashboardUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/PreDefinedQueries/prometheus/dashboard/create][%d] preDefinedQueriesCreatePrometheusDashboardUnauthorized  %+v", 401, o.Payload)
}

func (o *PreDefinedQueriesCreatePrometheusDashboardUnauthorized) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *PreDefinedQueriesCreatePrometheusDashboardUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreDefinedQueriesCreatePrometheusDashboardForbidden creates a PreDefinedQueriesCreatePrometheusDashboardForbidden with default headers values
func NewPreDefinedQueriesCreatePrometheusDashboardForbidden() *PreDefinedQueriesCreatePrometheusDashboardForbidden {
	return &PreDefinedQueriesCreatePrometheusDashboardForbidden{}
}

/*
PreDefinedQueriesCreatePrometheusDashboardForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PreDefinedQueriesCreatePrometheusDashboardForbidden struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this pre defined queries create prometheus dashboard forbidden response has a 2xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pre defined queries create prometheus dashboard forbidden response has a 3xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pre defined queries create prometheus dashboard forbidden response has a 4xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this pre defined queries create prometheus dashboard forbidden response has a 5xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this pre defined queries create prometheus dashboard forbidden response a status code equal to that given
func (o *PreDefinedQueriesCreatePrometheusDashboardForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PreDefinedQueriesCreatePrometheusDashboardForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/PreDefinedQueries/prometheus/dashboard/create][%d] preDefinedQueriesCreatePrometheusDashboardForbidden  %+v", 403, o.Payload)
}

func (o *PreDefinedQueriesCreatePrometheusDashboardForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/PreDefinedQueries/prometheus/dashboard/create][%d] preDefinedQueriesCreatePrometheusDashboardForbidden  %+v", 403, o.Payload)
}

func (o *PreDefinedQueriesCreatePrometheusDashboardForbidden) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *PreDefinedQueriesCreatePrometheusDashboardForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreDefinedQueriesCreatePrometheusDashboardNotFound creates a PreDefinedQueriesCreatePrometheusDashboardNotFound with default headers values
func NewPreDefinedQueriesCreatePrometheusDashboardNotFound() *PreDefinedQueriesCreatePrometheusDashboardNotFound {
	return &PreDefinedQueriesCreatePrometheusDashboardNotFound{}
}

/*
PreDefinedQueriesCreatePrometheusDashboardNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PreDefinedQueriesCreatePrometheusDashboardNotFound struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this pre defined queries create prometheus dashboard not found response has a 2xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pre defined queries create prometheus dashboard not found response has a 3xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pre defined queries create prometheus dashboard not found response has a 4xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this pre defined queries create prometheus dashboard not found response has a 5xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this pre defined queries create prometheus dashboard not found response a status code equal to that given
func (o *PreDefinedQueriesCreatePrometheusDashboardNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PreDefinedQueriesCreatePrometheusDashboardNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/PreDefinedQueries/prometheus/dashboard/create][%d] preDefinedQueriesCreatePrometheusDashboardNotFound  %+v", 404, o.Payload)
}

func (o *PreDefinedQueriesCreatePrometheusDashboardNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/PreDefinedQueries/prometheus/dashboard/create][%d] preDefinedQueriesCreatePrometheusDashboardNotFound  %+v", 404, o.Payload)
}

func (o *PreDefinedQueriesCreatePrometheusDashboardNotFound) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *PreDefinedQueriesCreatePrometheusDashboardNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreDefinedQueriesCreatePrometheusDashboardInternalServerError creates a PreDefinedQueriesCreatePrometheusDashboardInternalServerError with default headers values
func NewPreDefinedQueriesCreatePrometheusDashboardInternalServerError() *PreDefinedQueriesCreatePrometheusDashboardInternalServerError {
	return &PreDefinedQueriesCreatePrometheusDashboardInternalServerError{}
}

/*
PreDefinedQueriesCreatePrometheusDashboardInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type PreDefinedQueriesCreatePrometheusDashboardInternalServerError struct {
}

// IsSuccess returns true when this pre defined queries create prometheus dashboard internal server error response has a 2xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pre defined queries create prometheus dashboard internal server error response has a 3xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pre defined queries create prometheus dashboard internal server error response has a 4xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this pre defined queries create prometheus dashboard internal server error response has a 5xx status code
func (o *PreDefinedQueriesCreatePrometheusDashboardInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this pre defined queries create prometheus dashboard internal server error response a status code equal to that given
func (o *PreDefinedQueriesCreatePrometheusDashboardInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PreDefinedQueriesCreatePrometheusDashboardInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/PreDefinedQueries/prometheus/dashboard/create][%d] preDefinedQueriesCreatePrometheusDashboardInternalServerError ", 500)
}

func (o *PreDefinedQueriesCreatePrometheusDashboardInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/PreDefinedQueries/prometheus/dashboard/create][%d] preDefinedQueriesCreatePrometheusDashboardInternalServerError ", 500)
}

func (o *PreDefinedQueriesCreatePrometheusDashboardInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
