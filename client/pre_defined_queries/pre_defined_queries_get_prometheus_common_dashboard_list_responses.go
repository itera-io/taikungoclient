// Code generated by go-swagger; DO NOT EDIT.

package pre_defined_queries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PreDefinedQueriesGetPrometheusCommonDashboardListReader is a Reader for the PreDefinedQueriesGetPrometheusCommonDashboardList structure.
type PreDefinedQueriesGetPrometheusCommonDashboardListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPreDefinedQueriesGetPrometheusCommonDashboardListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPreDefinedQueriesGetPrometheusCommonDashboardListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPreDefinedQueriesGetPrometheusCommonDashboardListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPreDefinedQueriesGetPrometheusCommonDashboardListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPreDefinedQueriesGetPrometheusCommonDashboardListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPreDefinedQueriesGetPrometheusCommonDashboardListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPreDefinedQueriesGetPrometheusCommonDashboardListOK creates a PreDefinedQueriesGetPrometheusCommonDashboardListOK with default headers values
func NewPreDefinedQueriesGetPrometheusCommonDashboardListOK() *PreDefinedQueriesGetPrometheusCommonDashboardListOK {
	return &PreDefinedQueriesGetPrometheusCommonDashboardListOK{}
}

/*
PreDefinedQueriesGetPrometheusCommonDashboardListOK describes a response with status code 200, with default header values.

Success
*/
type PreDefinedQueriesGetPrometheusCommonDashboardListOK struct {
	Payload []*PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0
}

// IsSuccess returns true when this pre defined queries get prometheus common dashboard list o k response has a 2xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this pre defined queries get prometheus common dashboard list o k response has a 3xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pre defined queries get prometheus common dashboard list o k response has a 4xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this pre defined queries get prometheus common dashboard list o k response has a 5xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this pre defined queries get prometheus common dashboard list o k response a status code equal to that given
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListOK) IsCode(code int) bool {
	return code == 200
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/PreDefinedQueries/prometheus/dashboard/common][%d] preDefinedQueriesGetPrometheusCommonDashboardListOK  %+v", 200, o.Payload)
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/PreDefinedQueries/prometheus/dashboard/common][%d] preDefinedQueriesGetPrometheusCommonDashboardListOK  %+v", 200, o.Payload)
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListOK) GetPayload() []*PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0 {
	return o.Payload
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreDefinedQueriesGetPrometheusCommonDashboardListBadRequest creates a PreDefinedQueriesGetPrometheusCommonDashboardListBadRequest with default headers values
func NewPreDefinedQueriesGetPrometheusCommonDashboardListBadRequest() *PreDefinedQueriesGetPrometheusCommonDashboardListBadRequest {
	return &PreDefinedQueriesGetPrometheusCommonDashboardListBadRequest{}
}

/*
PreDefinedQueriesGetPrometheusCommonDashboardListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PreDefinedQueriesGetPrometheusCommonDashboardListBadRequest struct {
	Payload []*PreDefinedQueriesGetPrometheusCommonDashboardListBadRequestBodyItems0
}

// IsSuccess returns true when this pre defined queries get prometheus common dashboard list bad request response has a 2xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pre defined queries get prometheus common dashboard list bad request response has a 3xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pre defined queries get prometheus common dashboard list bad request response has a 4xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this pre defined queries get prometheus common dashboard list bad request response has a 5xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this pre defined queries get prometheus common dashboard list bad request response a status code equal to that given
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/PreDefinedQueries/prometheus/dashboard/common][%d] preDefinedQueriesGetPrometheusCommonDashboardListBadRequest  %+v", 400, o.Payload)
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/PreDefinedQueries/prometheus/dashboard/common][%d] preDefinedQueriesGetPrometheusCommonDashboardListBadRequest  %+v", 400, o.Payload)
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListBadRequest) GetPayload() []*PreDefinedQueriesGetPrometheusCommonDashboardListBadRequestBodyItems0 {
	return o.Payload
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreDefinedQueriesGetPrometheusCommonDashboardListUnauthorized creates a PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorized with default headers values
func NewPreDefinedQueriesGetPrometheusCommonDashboardListUnauthorized() *PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorized {
	return &PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorized{}
}

/*
PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorized struct {
	Payload *PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorizedBody
}

// IsSuccess returns true when this pre defined queries get prometheus common dashboard list unauthorized response has a 2xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pre defined queries get prometheus common dashboard list unauthorized response has a 3xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pre defined queries get prometheus common dashboard list unauthorized response has a 4xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this pre defined queries get prometheus common dashboard list unauthorized response has a 5xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this pre defined queries get prometheus common dashboard list unauthorized response a status code equal to that given
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/PreDefinedQueries/prometheus/dashboard/common][%d] preDefinedQueriesGetPrometheusCommonDashboardListUnauthorized  %+v", 401, o.Payload)
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/PreDefinedQueries/prometheus/dashboard/common][%d] preDefinedQueriesGetPrometheusCommonDashboardListUnauthorized  %+v", 401, o.Payload)
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorized) GetPayload() *PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorizedBody {
	return o.Payload
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreDefinedQueriesGetPrometheusCommonDashboardListForbidden creates a PreDefinedQueriesGetPrometheusCommonDashboardListForbidden with default headers values
func NewPreDefinedQueriesGetPrometheusCommonDashboardListForbidden() *PreDefinedQueriesGetPrometheusCommonDashboardListForbidden {
	return &PreDefinedQueriesGetPrometheusCommonDashboardListForbidden{}
}

/*
PreDefinedQueriesGetPrometheusCommonDashboardListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PreDefinedQueriesGetPrometheusCommonDashboardListForbidden struct {
	Payload *PreDefinedQueriesGetPrometheusCommonDashboardListForbiddenBody
}

// IsSuccess returns true when this pre defined queries get prometheus common dashboard list forbidden response has a 2xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pre defined queries get prometheus common dashboard list forbidden response has a 3xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pre defined queries get prometheus common dashboard list forbidden response has a 4xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this pre defined queries get prometheus common dashboard list forbidden response has a 5xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this pre defined queries get prometheus common dashboard list forbidden response a status code equal to that given
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/PreDefinedQueries/prometheus/dashboard/common][%d] preDefinedQueriesGetPrometheusCommonDashboardListForbidden  %+v", 403, o.Payload)
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/PreDefinedQueries/prometheus/dashboard/common][%d] preDefinedQueriesGetPrometheusCommonDashboardListForbidden  %+v", 403, o.Payload)
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListForbidden) GetPayload() *PreDefinedQueriesGetPrometheusCommonDashboardListForbiddenBody {
	return o.Payload
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PreDefinedQueriesGetPrometheusCommonDashboardListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreDefinedQueriesGetPrometheusCommonDashboardListNotFound creates a PreDefinedQueriesGetPrometheusCommonDashboardListNotFound with default headers values
func NewPreDefinedQueriesGetPrometheusCommonDashboardListNotFound() *PreDefinedQueriesGetPrometheusCommonDashboardListNotFound {
	return &PreDefinedQueriesGetPrometheusCommonDashboardListNotFound{}
}

/*
PreDefinedQueriesGetPrometheusCommonDashboardListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PreDefinedQueriesGetPrometheusCommonDashboardListNotFound struct {
	Payload *PreDefinedQueriesGetPrometheusCommonDashboardListNotFoundBody
}

// IsSuccess returns true when this pre defined queries get prometheus common dashboard list not found response has a 2xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pre defined queries get prometheus common dashboard list not found response has a 3xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pre defined queries get prometheus common dashboard list not found response has a 4xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this pre defined queries get prometheus common dashboard list not found response has a 5xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this pre defined queries get prometheus common dashboard list not found response a status code equal to that given
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/PreDefinedQueries/prometheus/dashboard/common][%d] preDefinedQueriesGetPrometheusCommonDashboardListNotFound  %+v", 404, o.Payload)
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/PreDefinedQueries/prometheus/dashboard/common][%d] preDefinedQueriesGetPrometheusCommonDashboardListNotFound  %+v", 404, o.Payload)
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListNotFound) GetPayload() *PreDefinedQueriesGetPrometheusCommonDashboardListNotFoundBody {
	return o.Payload
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PreDefinedQueriesGetPrometheusCommonDashboardListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreDefinedQueriesGetPrometheusCommonDashboardListInternalServerError creates a PreDefinedQueriesGetPrometheusCommonDashboardListInternalServerError with default headers values
func NewPreDefinedQueriesGetPrometheusCommonDashboardListInternalServerError() *PreDefinedQueriesGetPrometheusCommonDashboardListInternalServerError {
	return &PreDefinedQueriesGetPrometheusCommonDashboardListInternalServerError{}
}

/*
PreDefinedQueriesGetPrometheusCommonDashboardListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type PreDefinedQueriesGetPrometheusCommonDashboardListInternalServerError struct {
}

// IsSuccess returns true when this pre defined queries get prometheus common dashboard list internal server error response has a 2xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pre defined queries get prometheus common dashboard list internal server error response has a 3xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pre defined queries get prometheus common dashboard list internal server error response has a 4xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this pre defined queries get prometheus common dashboard list internal server error response has a 5xx status code
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this pre defined queries get prometheus common dashboard list internal server error response a status code equal to that given
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/PreDefinedQueries/prometheus/dashboard/common][%d] preDefinedQueriesGetPrometheusCommonDashboardListInternalServerError ", 500)
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/PreDefinedQueries/prometheus/dashboard/common][%d] preDefinedQueriesGetPrometheusCommonDashboardListInternalServerError ", 500)
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
PreDefinedQueriesGetPrometheusCommonDashboardListBadRequestBodyItems0 pre defined queries get prometheus common dashboard list bad request body items0
swagger:model PreDefinedQueriesGetPrometheusCommonDashboardListBadRequestBodyItems0
*/
type PreDefinedQueriesGetPrometheusCommonDashboardListBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this pre defined queries get prometheus common dashboard list bad request body items0
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this pre defined queries get prometheus common dashboard list bad request body items0 based on context it is used
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res PreDefinedQueriesGetPrometheusCommonDashboardListBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PreDefinedQueriesGetPrometheusCommonDashboardListForbiddenBody pre defined queries get prometheus common dashboard list forbidden body
swagger:model PreDefinedQueriesGetPrometheusCommonDashboardListForbiddenBody
*/
type PreDefinedQueriesGetPrometheusCommonDashboardListForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this pre defined queries get prometheus common dashboard list forbidden body
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this pre defined queries get prometheus common dashboard list forbidden body based on context it is used
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res PreDefinedQueriesGetPrometheusCommonDashboardListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PreDefinedQueriesGetPrometheusCommonDashboardListNotFoundBody pre defined queries get prometheus common dashboard list not found body
swagger:model PreDefinedQueriesGetPrometheusCommonDashboardListNotFoundBody
*/
type PreDefinedQueriesGetPrometheusCommonDashboardListNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this pre defined queries get prometheus common dashboard list not found body
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this pre defined queries get prometheus common dashboard list not found body based on context it is used
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res PreDefinedQueriesGetPrometheusCommonDashboardListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0 pre defined queries get prometheus common dashboard list o k body items0
swagger:model PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0
*/
type PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0 struct {

	// category name
	CategoryName string `json:"categoryName,omitempty"`

	// data
	Data []*PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0DataItems0 `json:"data"`
}

// Validate validates this pre defined queries get prometheus common dashboard list o k body items0
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this pre defined queries get prometheus common dashboard list o k body items0 based on the context it is used
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0DataItems0 pre defined queries get prometheus common dashboard list o k body items0 data items0
swagger:model PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0DataItems0
*/
type PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0DataItems0 struct {

	// description
	Description string `json:"description,omitempty"`

	// expression decoded
	ExpressionDecoded string `json:"expressionDecoded,omitempty"`

	// expression encoded
	ExpressionEncoded string `json:"expressionEncoded,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// is readonly
	IsReadonly bool `json:"isReadonly"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this pre defined queries get prometheus common dashboard list o k body items0 data items0
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0DataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this pre defined queries get prometheus common dashboard list o k body items0 data items0 based on context it is used
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0DataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0DataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0DataItems0) UnmarshalBinary(b []byte) error {
	var res PreDefinedQueriesGetPrometheusCommonDashboardListOKBodyItems0DataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorizedBody pre defined queries get prometheus common dashboard list unauthorized body
swagger:model PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorizedBody
*/
type PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this pre defined queries get prometheus common dashboard list unauthorized body
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this pre defined queries get prometheus common dashboard list unauthorized body based on context it is used
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PreDefinedQueriesGetPrometheusCommonDashboardListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
