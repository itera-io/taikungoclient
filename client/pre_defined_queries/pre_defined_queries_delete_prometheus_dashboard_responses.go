// Code generated by go-swagger; DO NOT EDIT.

package pre_defined_queries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PreDefinedQueriesDeletePrometheusDashboardReader is a Reader for the PreDefinedQueriesDeletePrometheusDashboard structure.
type PreDefinedQueriesDeletePrometheusDashboardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PreDefinedQueriesDeletePrometheusDashboardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPreDefinedQueriesDeletePrometheusDashboardOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPreDefinedQueriesDeletePrometheusDashboardBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPreDefinedQueriesDeletePrometheusDashboardUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPreDefinedQueriesDeletePrometheusDashboardForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPreDefinedQueriesDeletePrometheusDashboardNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPreDefinedQueriesDeletePrometheusDashboardInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPreDefinedQueriesDeletePrometheusDashboardOK creates a PreDefinedQueriesDeletePrometheusDashboardOK with default headers values
func NewPreDefinedQueriesDeletePrometheusDashboardOK() *PreDefinedQueriesDeletePrometheusDashboardOK {
	return &PreDefinedQueriesDeletePrometheusDashboardOK{}
}

/*
PreDefinedQueriesDeletePrometheusDashboardOK describes a response with status code 200, with default header values.

Success
*/
type PreDefinedQueriesDeletePrometheusDashboardOK struct {
	Payload interface{}
}

// IsSuccess returns true when this pre defined queries delete prometheus dashboard o k response has a 2xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this pre defined queries delete prometheus dashboard o k response has a 3xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pre defined queries delete prometheus dashboard o k response has a 4xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this pre defined queries delete prometheus dashboard o k response has a 5xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardOK) IsServerError() bool {
	return false
}

// IsCode returns true when this pre defined queries delete prometheus dashboard o k response a status code equal to that given
func (o *PreDefinedQueriesDeletePrometheusDashboardOK) IsCode(code int) bool {
	return code == 200
}

func (o *PreDefinedQueriesDeletePrometheusDashboardOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/PreDefinedQueries/prometheus/dashboard/delete/{id}][%d] preDefinedQueriesDeletePrometheusDashboardOK  %+v", 200, o.Payload)
}

func (o *PreDefinedQueriesDeletePrometheusDashboardOK) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/PreDefinedQueries/prometheus/dashboard/delete/{id}][%d] preDefinedQueriesDeletePrometheusDashboardOK  %+v", 200, o.Payload)
}

func (o *PreDefinedQueriesDeletePrometheusDashboardOK) GetPayload() interface{} {
	return o.Payload
}

func (o *PreDefinedQueriesDeletePrometheusDashboardOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreDefinedQueriesDeletePrometheusDashboardBadRequest creates a PreDefinedQueriesDeletePrometheusDashboardBadRequest with default headers values
func NewPreDefinedQueriesDeletePrometheusDashboardBadRequest() *PreDefinedQueriesDeletePrometheusDashboardBadRequest {
	return &PreDefinedQueriesDeletePrometheusDashboardBadRequest{}
}

/*
PreDefinedQueriesDeletePrometheusDashboardBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PreDefinedQueriesDeletePrometheusDashboardBadRequest struct {
	Payload []*PreDefinedQueriesDeletePrometheusDashboardBadRequestBodyItems0
}

// IsSuccess returns true when this pre defined queries delete prometheus dashboard bad request response has a 2xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pre defined queries delete prometheus dashboard bad request response has a 3xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pre defined queries delete prometheus dashboard bad request response has a 4xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this pre defined queries delete prometheus dashboard bad request response has a 5xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this pre defined queries delete prometheus dashboard bad request response a status code equal to that given
func (o *PreDefinedQueriesDeletePrometheusDashboardBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PreDefinedQueriesDeletePrometheusDashboardBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/PreDefinedQueries/prometheus/dashboard/delete/{id}][%d] preDefinedQueriesDeletePrometheusDashboardBadRequest  %+v", 400, o.Payload)
}

func (o *PreDefinedQueriesDeletePrometheusDashboardBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/PreDefinedQueries/prometheus/dashboard/delete/{id}][%d] preDefinedQueriesDeletePrometheusDashboardBadRequest  %+v", 400, o.Payload)
}

func (o *PreDefinedQueriesDeletePrometheusDashboardBadRequest) GetPayload() []*PreDefinedQueriesDeletePrometheusDashboardBadRequestBodyItems0 {
	return o.Payload
}

func (o *PreDefinedQueriesDeletePrometheusDashboardBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreDefinedQueriesDeletePrometheusDashboardUnauthorized creates a PreDefinedQueriesDeletePrometheusDashboardUnauthorized with default headers values
func NewPreDefinedQueriesDeletePrometheusDashboardUnauthorized() *PreDefinedQueriesDeletePrometheusDashboardUnauthorized {
	return &PreDefinedQueriesDeletePrometheusDashboardUnauthorized{}
}

/*
PreDefinedQueriesDeletePrometheusDashboardUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PreDefinedQueriesDeletePrometheusDashboardUnauthorized struct {
	Payload *PreDefinedQueriesDeletePrometheusDashboardUnauthorizedBody
}

// IsSuccess returns true when this pre defined queries delete prometheus dashboard unauthorized response has a 2xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pre defined queries delete prometheus dashboard unauthorized response has a 3xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pre defined queries delete prometheus dashboard unauthorized response has a 4xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this pre defined queries delete prometheus dashboard unauthorized response has a 5xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this pre defined queries delete prometheus dashboard unauthorized response a status code equal to that given
func (o *PreDefinedQueriesDeletePrometheusDashboardUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PreDefinedQueriesDeletePrometheusDashboardUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/PreDefinedQueries/prometheus/dashboard/delete/{id}][%d] preDefinedQueriesDeletePrometheusDashboardUnauthorized  %+v", 401, o.Payload)
}

func (o *PreDefinedQueriesDeletePrometheusDashboardUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/PreDefinedQueries/prometheus/dashboard/delete/{id}][%d] preDefinedQueriesDeletePrometheusDashboardUnauthorized  %+v", 401, o.Payload)
}

func (o *PreDefinedQueriesDeletePrometheusDashboardUnauthorized) GetPayload() *PreDefinedQueriesDeletePrometheusDashboardUnauthorizedBody {
	return o.Payload
}

func (o *PreDefinedQueriesDeletePrometheusDashboardUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PreDefinedQueriesDeletePrometheusDashboardUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreDefinedQueriesDeletePrometheusDashboardForbidden creates a PreDefinedQueriesDeletePrometheusDashboardForbidden with default headers values
func NewPreDefinedQueriesDeletePrometheusDashboardForbidden() *PreDefinedQueriesDeletePrometheusDashboardForbidden {
	return &PreDefinedQueriesDeletePrometheusDashboardForbidden{}
}

/*
PreDefinedQueriesDeletePrometheusDashboardForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PreDefinedQueriesDeletePrometheusDashboardForbidden struct {
	Payload *PreDefinedQueriesDeletePrometheusDashboardForbiddenBody
}

// IsSuccess returns true when this pre defined queries delete prometheus dashboard forbidden response has a 2xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pre defined queries delete prometheus dashboard forbidden response has a 3xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pre defined queries delete prometheus dashboard forbidden response has a 4xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this pre defined queries delete prometheus dashboard forbidden response has a 5xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this pre defined queries delete prometheus dashboard forbidden response a status code equal to that given
func (o *PreDefinedQueriesDeletePrometheusDashboardForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PreDefinedQueriesDeletePrometheusDashboardForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/PreDefinedQueries/prometheus/dashboard/delete/{id}][%d] preDefinedQueriesDeletePrometheusDashboardForbidden  %+v", 403, o.Payload)
}

func (o *PreDefinedQueriesDeletePrometheusDashboardForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/PreDefinedQueries/prometheus/dashboard/delete/{id}][%d] preDefinedQueriesDeletePrometheusDashboardForbidden  %+v", 403, o.Payload)
}

func (o *PreDefinedQueriesDeletePrometheusDashboardForbidden) GetPayload() *PreDefinedQueriesDeletePrometheusDashboardForbiddenBody {
	return o.Payload
}

func (o *PreDefinedQueriesDeletePrometheusDashboardForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PreDefinedQueriesDeletePrometheusDashboardForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreDefinedQueriesDeletePrometheusDashboardNotFound creates a PreDefinedQueriesDeletePrometheusDashboardNotFound with default headers values
func NewPreDefinedQueriesDeletePrometheusDashboardNotFound() *PreDefinedQueriesDeletePrometheusDashboardNotFound {
	return &PreDefinedQueriesDeletePrometheusDashboardNotFound{}
}

/*
PreDefinedQueriesDeletePrometheusDashboardNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PreDefinedQueriesDeletePrometheusDashboardNotFound struct {
	Payload *PreDefinedQueriesDeletePrometheusDashboardNotFoundBody
}

// IsSuccess returns true when this pre defined queries delete prometheus dashboard not found response has a 2xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pre defined queries delete prometheus dashboard not found response has a 3xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pre defined queries delete prometheus dashboard not found response has a 4xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this pre defined queries delete prometheus dashboard not found response has a 5xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this pre defined queries delete prometheus dashboard not found response a status code equal to that given
func (o *PreDefinedQueriesDeletePrometheusDashboardNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PreDefinedQueriesDeletePrometheusDashboardNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/PreDefinedQueries/prometheus/dashboard/delete/{id}][%d] preDefinedQueriesDeletePrometheusDashboardNotFound  %+v", 404, o.Payload)
}

func (o *PreDefinedQueriesDeletePrometheusDashboardNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/PreDefinedQueries/prometheus/dashboard/delete/{id}][%d] preDefinedQueriesDeletePrometheusDashboardNotFound  %+v", 404, o.Payload)
}

func (o *PreDefinedQueriesDeletePrometheusDashboardNotFound) GetPayload() *PreDefinedQueriesDeletePrometheusDashboardNotFoundBody {
	return o.Payload
}

func (o *PreDefinedQueriesDeletePrometheusDashboardNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PreDefinedQueriesDeletePrometheusDashboardNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreDefinedQueriesDeletePrometheusDashboardInternalServerError creates a PreDefinedQueriesDeletePrometheusDashboardInternalServerError with default headers values
func NewPreDefinedQueriesDeletePrometheusDashboardInternalServerError() *PreDefinedQueriesDeletePrometheusDashboardInternalServerError {
	return &PreDefinedQueriesDeletePrometheusDashboardInternalServerError{}
}

/*
PreDefinedQueriesDeletePrometheusDashboardInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type PreDefinedQueriesDeletePrometheusDashboardInternalServerError struct {
}

// IsSuccess returns true when this pre defined queries delete prometheus dashboard internal server error response has a 2xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pre defined queries delete prometheus dashboard internal server error response has a 3xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pre defined queries delete prometheus dashboard internal server error response has a 4xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this pre defined queries delete prometheus dashboard internal server error response has a 5xx status code
func (o *PreDefinedQueriesDeletePrometheusDashboardInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this pre defined queries delete prometheus dashboard internal server error response a status code equal to that given
func (o *PreDefinedQueriesDeletePrometheusDashboardInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PreDefinedQueriesDeletePrometheusDashboardInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/PreDefinedQueries/prometheus/dashboard/delete/{id}][%d] preDefinedQueriesDeletePrometheusDashboardInternalServerError ", 500)
}

func (o *PreDefinedQueriesDeletePrometheusDashboardInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/PreDefinedQueries/prometheus/dashboard/delete/{id}][%d] preDefinedQueriesDeletePrometheusDashboardInternalServerError ", 500)
}

func (o *PreDefinedQueriesDeletePrometheusDashboardInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
PreDefinedQueriesDeletePrometheusDashboardBadRequestBodyItems0 pre defined queries delete prometheus dashboard bad request body items0
swagger:model PreDefinedQueriesDeletePrometheusDashboardBadRequestBodyItems0
*/
type PreDefinedQueriesDeletePrometheusDashboardBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this pre defined queries delete prometheus dashboard bad request body items0
func (o *PreDefinedQueriesDeletePrometheusDashboardBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this pre defined queries delete prometheus dashboard bad request body items0 based on context it is used
func (o *PreDefinedQueriesDeletePrometheusDashboardBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PreDefinedQueriesDeletePrometheusDashboardBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PreDefinedQueriesDeletePrometheusDashboardBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res PreDefinedQueriesDeletePrometheusDashboardBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PreDefinedQueriesDeletePrometheusDashboardForbiddenBody pre defined queries delete prometheus dashboard forbidden body
swagger:model PreDefinedQueriesDeletePrometheusDashboardForbiddenBody
*/
type PreDefinedQueriesDeletePrometheusDashboardForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this pre defined queries delete prometheus dashboard forbidden body
func (o *PreDefinedQueriesDeletePrometheusDashboardForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this pre defined queries delete prometheus dashboard forbidden body based on context it is used
func (o *PreDefinedQueriesDeletePrometheusDashboardForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PreDefinedQueriesDeletePrometheusDashboardForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PreDefinedQueriesDeletePrometheusDashboardForbiddenBody) UnmarshalBinary(b []byte) error {
	var res PreDefinedQueriesDeletePrometheusDashboardForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PreDefinedQueriesDeletePrometheusDashboardNotFoundBody pre defined queries delete prometheus dashboard not found body
swagger:model PreDefinedQueriesDeletePrometheusDashboardNotFoundBody
*/
type PreDefinedQueriesDeletePrometheusDashboardNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this pre defined queries delete prometheus dashboard not found body
func (o *PreDefinedQueriesDeletePrometheusDashboardNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this pre defined queries delete prometheus dashboard not found body based on context it is used
func (o *PreDefinedQueriesDeletePrometheusDashboardNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PreDefinedQueriesDeletePrometheusDashboardNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PreDefinedQueriesDeletePrometheusDashboardNotFoundBody) UnmarshalBinary(b []byte) error {
	var res PreDefinedQueriesDeletePrometheusDashboardNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PreDefinedQueriesDeletePrometheusDashboardUnauthorizedBody pre defined queries delete prometheus dashboard unauthorized body
swagger:model PreDefinedQueriesDeletePrometheusDashboardUnauthorizedBody
*/
type PreDefinedQueriesDeletePrometheusDashboardUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this pre defined queries delete prometheus dashboard unauthorized body
func (o *PreDefinedQueriesDeletePrometheusDashboardUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this pre defined queries delete prometheus dashboard unauthorized body based on context it is used
func (o *PreDefinedQueriesDeletePrometheusDashboardUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PreDefinedQueriesDeletePrometheusDashboardUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PreDefinedQueriesDeletePrometheusDashboardUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PreDefinedQueriesDeletePrometheusDashboardUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
