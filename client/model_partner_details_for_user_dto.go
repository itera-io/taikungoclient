/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PartnerDetailsForUserDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PartnerDetailsForUserDto{}

// PartnerDetailsForUserDto struct for PartnerDetailsForUserDto
type PartnerDetailsForUserDto struct {
	Name string `json:"name"`
	Logo NullableString `json:"logo"`
	Link NullableString `json:"link"`
	Id int32 `json:"id"`
}

type _PartnerDetailsForUserDto PartnerDetailsForUserDto

// NewPartnerDetailsForUserDto instantiates a new PartnerDetailsForUserDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartnerDetailsForUserDto(name string, logo NullableString, link NullableString, id int32) *PartnerDetailsForUserDto {
	this := PartnerDetailsForUserDto{}
	this.Name = name
	this.Logo = logo
	this.Link = link
	this.Id = id
	return &this
}

// NewPartnerDetailsForUserDtoWithDefaults instantiates a new PartnerDetailsForUserDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartnerDetailsForUserDtoWithDefaults() *PartnerDetailsForUserDto {
	this := PartnerDetailsForUserDto{}
	return &this
}

// GetName returns the Name field value
func (o *PartnerDetailsForUserDto) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PartnerDetailsForUserDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PartnerDetailsForUserDto) SetName(v string) {
	o.Name = v
}

// GetLogo returns the Logo field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PartnerDetailsForUserDto) GetLogo() string {
	if o == nil || o.Logo.Get() == nil {
		var ret string
		return ret
	}

	return *o.Logo.Get()
}

// GetLogoOk returns a tuple with the Logo field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerDetailsForUserDto) GetLogoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Logo.Get(), o.Logo.IsSet()
}

// SetLogo sets field value
func (o *PartnerDetailsForUserDto) SetLogo(v string) {
	o.Logo.Set(&v)
}

// GetLink returns the Link field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PartnerDetailsForUserDto) GetLink() string {
	if o == nil || o.Link.Get() == nil {
		var ret string
		return ret
	}

	return *o.Link.Get()
}

// GetLinkOk returns a tuple with the Link field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerDetailsForUserDto) GetLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Link.Get(), o.Link.IsSet()
}

// SetLink sets field value
func (o *PartnerDetailsForUserDto) SetLink(v string) {
	o.Link.Set(&v)
}

// GetId returns the Id field value
func (o *PartnerDetailsForUserDto) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PartnerDetailsForUserDto) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PartnerDetailsForUserDto) SetId(v int32) {
	o.Id = v
}

func (o PartnerDetailsForUserDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PartnerDetailsForUserDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["logo"] = o.Logo.Get()
	toSerialize["link"] = o.Link.Get()
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

func (o *PartnerDetailsForUserDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"logo",
		"link",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPartnerDetailsForUserDto := _PartnerDetailsForUserDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPartnerDetailsForUserDto)

	if err != nil {
		return err
	}

	*o = PartnerDetailsForUserDto(varPartnerDetailsForUserDto)

	return err
}

type NullablePartnerDetailsForUserDto struct {
	value *PartnerDetailsForUserDto
	isSet bool
}

func (v NullablePartnerDetailsForUserDto) Get() *PartnerDetailsForUserDto {
	return v.value
}

func (v *NullablePartnerDetailsForUserDto) Set(val *PartnerDetailsForUserDto) {
	v.value = val
	v.isSet = true
}

func (v NullablePartnerDetailsForUserDto) IsSet() bool {
	return v.isSet
}

func (v *NullablePartnerDetailsForUserDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartnerDetailsForUserDto(val *PartnerDetailsForUserDto) *NullablePartnerDetailsForUserDto {
	return &NullablePartnerDetailsForUserDto{value: val, isSet: true}
}

func (v NullablePartnerDetailsForUserDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartnerDetailsForUserDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


