// Code generated by go-swagger; DO NOT EDIT.

package ntp_servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// NtpServersDeleteReader is a Reader for the NtpServersDelete structure.
type NtpServersDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NtpServersDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNtpServersDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewNtpServersDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNtpServersDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewNtpServersDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewNtpServersDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewNtpServersDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewNtpServersDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewNtpServersDeleteOK creates a NtpServersDeleteOK with default headers values
func NewNtpServersDeleteOK() *NtpServersDeleteOK {
	return &NtpServersDeleteOK{}
}

/* NtpServersDeleteOK describes a response with status code 200, with default header values.

Success
*/
type NtpServersDeleteOK struct {
	Payload models.Unit
}

func (o *NtpServersDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/NtpServers/{id}][%d] ntpServersDeleteOK  %+v", 200, o.Payload)
}
func (o *NtpServersDeleteOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *NtpServersDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNtpServersDeleteNoContent creates a NtpServersDeleteNoContent with default headers values
func NewNtpServersDeleteNoContent() *NtpServersDeleteNoContent {
	return &NtpServersDeleteNoContent{}
}

/* NtpServersDeleteNoContent describes a response with status code 204, with default header values.

Success
*/
type NtpServersDeleteNoContent struct {
}

func (o *NtpServersDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/NtpServers/{id}][%d] ntpServersDeleteNoContent ", 204)
}

func (o *NtpServersDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNtpServersDeleteBadRequest creates a NtpServersDeleteBadRequest with default headers values
func NewNtpServersDeleteBadRequest() *NtpServersDeleteBadRequest {
	return &NtpServersDeleteBadRequest{}
}

/* NtpServersDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type NtpServersDeleteBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *NtpServersDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/NtpServers/{id}][%d] ntpServersDeleteBadRequest  %+v", 400, o.Payload)
}
func (o *NtpServersDeleteBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *NtpServersDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNtpServersDeleteUnauthorized creates a NtpServersDeleteUnauthorized with default headers values
func NewNtpServersDeleteUnauthorized() *NtpServersDeleteUnauthorized {
	return &NtpServersDeleteUnauthorized{}
}

/* NtpServersDeleteUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type NtpServersDeleteUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *NtpServersDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/NtpServers/{id}][%d] ntpServersDeleteUnauthorized  %+v", 401, o.Payload)
}
func (o *NtpServersDeleteUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *NtpServersDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNtpServersDeleteForbidden creates a NtpServersDeleteForbidden with default headers values
func NewNtpServersDeleteForbidden() *NtpServersDeleteForbidden {
	return &NtpServersDeleteForbidden{}
}

/* NtpServersDeleteForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type NtpServersDeleteForbidden struct {
	Payload *models.ProblemDetails
}

func (o *NtpServersDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/NtpServers/{id}][%d] ntpServersDeleteForbidden  %+v", 403, o.Payload)
}
func (o *NtpServersDeleteForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *NtpServersDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNtpServersDeleteNotFound creates a NtpServersDeleteNotFound with default headers values
func NewNtpServersDeleteNotFound() *NtpServersDeleteNotFound {
	return &NtpServersDeleteNotFound{}
}

/* NtpServersDeleteNotFound describes a response with status code 404, with default header values.

Not Found
*/
type NtpServersDeleteNotFound struct {
	Payload *models.ProblemDetails
}

func (o *NtpServersDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/NtpServers/{id}][%d] ntpServersDeleteNotFound  %+v", 404, o.Payload)
}
func (o *NtpServersDeleteNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *NtpServersDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNtpServersDeleteInternalServerError creates a NtpServersDeleteInternalServerError with default headers values
func NewNtpServersDeleteInternalServerError() *NtpServersDeleteInternalServerError {
	return &NtpServersDeleteInternalServerError{}
}

/* NtpServersDeleteInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type NtpServersDeleteInternalServerError struct {
}

func (o *NtpServersDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/NtpServers/{id}][%d] ntpServersDeleteInternalServerError ", 500)
}

func (o *NtpServersDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
