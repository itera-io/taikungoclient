// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// KubernetesPatchSecretReader is a Reader for the KubernetesPatchSecret structure.
type KubernetesPatchSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KubernetesPatchSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKubernetesPatchSecretOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewKubernetesPatchSecretBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewKubernetesPatchSecretUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewKubernetesPatchSecretForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewKubernetesPatchSecretNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewKubernetesPatchSecretInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewKubernetesPatchSecretOK creates a KubernetesPatchSecretOK with default headers values
func NewKubernetesPatchSecretOK() *KubernetesPatchSecretOK {
	return &KubernetesPatchSecretOK{}
}

/*
KubernetesPatchSecretOK describes a response with status code 200, with default header values.

Success
*/
type KubernetesPatchSecretOK struct {
	Payload interface{}
}

// IsSuccess returns true when this kubernetes patch secret o k response has a 2xx status code
func (o *KubernetesPatchSecretOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this kubernetes patch secret o k response has a 3xx status code
func (o *KubernetesPatchSecretOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes patch secret o k response has a 4xx status code
func (o *KubernetesPatchSecretOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this kubernetes patch secret o k response has a 5xx status code
func (o *KubernetesPatchSecretOK) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes patch secret o k response a status code equal to that given
func (o *KubernetesPatchSecretOK) IsCode(code int) bool {
	return code == 200
}

func (o *KubernetesPatchSecretOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/secret][%d] kubernetesPatchSecretOK  %+v", 200, o.Payload)
}

func (o *KubernetesPatchSecretOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/secret][%d] kubernetesPatchSecretOK  %+v", 200, o.Payload)
}

func (o *KubernetesPatchSecretOK) GetPayload() interface{} {
	return o.Payload
}

func (o *KubernetesPatchSecretOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesPatchSecretBadRequest creates a KubernetesPatchSecretBadRequest with default headers values
func NewKubernetesPatchSecretBadRequest() *KubernetesPatchSecretBadRequest {
	return &KubernetesPatchSecretBadRequest{}
}

/*
KubernetesPatchSecretBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type KubernetesPatchSecretBadRequest struct {
	Payload []*KubernetesPatchSecretBadRequestBodyItems0
}

// IsSuccess returns true when this kubernetes patch secret bad request response has a 2xx status code
func (o *KubernetesPatchSecretBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes patch secret bad request response has a 3xx status code
func (o *KubernetesPatchSecretBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes patch secret bad request response has a 4xx status code
func (o *KubernetesPatchSecretBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes patch secret bad request response has a 5xx status code
func (o *KubernetesPatchSecretBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes patch secret bad request response a status code equal to that given
func (o *KubernetesPatchSecretBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *KubernetesPatchSecretBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/secret][%d] kubernetesPatchSecretBadRequest  %+v", 400, o.Payload)
}

func (o *KubernetesPatchSecretBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/secret][%d] kubernetesPatchSecretBadRequest  %+v", 400, o.Payload)
}

func (o *KubernetesPatchSecretBadRequest) GetPayload() []*KubernetesPatchSecretBadRequestBodyItems0 {
	return o.Payload
}

func (o *KubernetesPatchSecretBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesPatchSecretUnauthorized creates a KubernetesPatchSecretUnauthorized with default headers values
func NewKubernetesPatchSecretUnauthorized() *KubernetesPatchSecretUnauthorized {
	return &KubernetesPatchSecretUnauthorized{}
}

/*
KubernetesPatchSecretUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type KubernetesPatchSecretUnauthorized struct {
	Payload *KubernetesPatchSecretUnauthorizedBody
}

// IsSuccess returns true when this kubernetes patch secret unauthorized response has a 2xx status code
func (o *KubernetesPatchSecretUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes patch secret unauthorized response has a 3xx status code
func (o *KubernetesPatchSecretUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes patch secret unauthorized response has a 4xx status code
func (o *KubernetesPatchSecretUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes patch secret unauthorized response has a 5xx status code
func (o *KubernetesPatchSecretUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes patch secret unauthorized response a status code equal to that given
func (o *KubernetesPatchSecretUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *KubernetesPatchSecretUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/secret][%d] kubernetesPatchSecretUnauthorized  %+v", 401, o.Payload)
}

func (o *KubernetesPatchSecretUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/secret][%d] kubernetesPatchSecretUnauthorized  %+v", 401, o.Payload)
}

func (o *KubernetesPatchSecretUnauthorized) GetPayload() *KubernetesPatchSecretUnauthorizedBody {
	return o.Payload
}

func (o *KubernetesPatchSecretUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubernetesPatchSecretUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesPatchSecretForbidden creates a KubernetesPatchSecretForbidden with default headers values
func NewKubernetesPatchSecretForbidden() *KubernetesPatchSecretForbidden {
	return &KubernetesPatchSecretForbidden{}
}

/*
KubernetesPatchSecretForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type KubernetesPatchSecretForbidden struct {
	Payload *KubernetesPatchSecretForbiddenBody
}

// IsSuccess returns true when this kubernetes patch secret forbidden response has a 2xx status code
func (o *KubernetesPatchSecretForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes patch secret forbidden response has a 3xx status code
func (o *KubernetesPatchSecretForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes patch secret forbidden response has a 4xx status code
func (o *KubernetesPatchSecretForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes patch secret forbidden response has a 5xx status code
func (o *KubernetesPatchSecretForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes patch secret forbidden response a status code equal to that given
func (o *KubernetesPatchSecretForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *KubernetesPatchSecretForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/secret][%d] kubernetesPatchSecretForbidden  %+v", 403, o.Payload)
}

func (o *KubernetesPatchSecretForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/secret][%d] kubernetesPatchSecretForbidden  %+v", 403, o.Payload)
}

func (o *KubernetesPatchSecretForbidden) GetPayload() *KubernetesPatchSecretForbiddenBody {
	return o.Payload
}

func (o *KubernetesPatchSecretForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubernetesPatchSecretForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesPatchSecretNotFound creates a KubernetesPatchSecretNotFound with default headers values
func NewKubernetesPatchSecretNotFound() *KubernetesPatchSecretNotFound {
	return &KubernetesPatchSecretNotFound{}
}

/*
KubernetesPatchSecretNotFound describes a response with status code 404, with default header values.

Not Found
*/
type KubernetesPatchSecretNotFound struct {
	Payload *KubernetesPatchSecretNotFoundBody
}

// IsSuccess returns true when this kubernetes patch secret not found response has a 2xx status code
func (o *KubernetesPatchSecretNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes patch secret not found response has a 3xx status code
func (o *KubernetesPatchSecretNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes patch secret not found response has a 4xx status code
func (o *KubernetesPatchSecretNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes patch secret not found response has a 5xx status code
func (o *KubernetesPatchSecretNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes patch secret not found response a status code equal to that given
func (o *KubernetesPatchSecretNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *KubernetesPatchSecretNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/secret][%d] kubernetesPatchSecretNotFound  %+v", 404, o.Payload)
}

func (o *KubernetesPatchSecretNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/secret][%d] kubernetesPatchSecretNotFound  %+v", 404, o.Payload)
}

func (o *KubernetesPatchSecretNotFound) GetPayload() *KubernetesPatchSecretNotFoundBody {
	return o.Payload
}

func (o *KubernetesPatchSecretNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubernetesPatchSecretNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesPatchSecretInternalServerError creates a KubernetesPatchSecretInternalServerError with default headers values
func NewKubernetesPatchSecretInternalServerError() *KubernetesPatchSecretInternalServerError {
	return &KubernetesPatchSecretInternalServerError{}
}

/*
KubernetesPatchSecretInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type KubernetesPatchSecretInternalServerError struct {
}

// IsSuccess returns true when this kubernetes patch secret internal server error response has a 2xx status code
func (o *KubernetesPatchSecretInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes patch secret internal server error response has a 3xx status code
func (o *KubernetesPatchSecretInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes patch secret internal server error response has a 4xx status code
func (o *KubernetesPatchSecretInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this kubernetes patch secret internal server error response has a 5xx status code
func (o *KubernetesPatchSecretInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this kubernetes patch secret internal server error response a status code equal to that given
func (o *KubernetesPatchSecretInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *KubernetesPatchSecretInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/secret][%d] kubernetesPatchSecretInternalServerError ", 500)
}

func (o *KubernetesPatchSecretInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/secret][%d] kubernetesPatchSecretInternalServerError ", 500)
}

func (o *KubernetesPatchSecretInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
KubernetesPatchSecretBadRequestBodyItems0 kubernetes patch secret bad request body items0
swagger:model KubernetesPatchSecretBadRequestBodyItems0
*/
type KubernetesPatchSecretBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this kubernetes patch secret bad request body items0
func (o *KubernetesPatchSecretBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes patch secret bad request body items0 based on context it is used
func (o *KubernetesPatchSecretBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesPatchSecretBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesPatchSecretBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res KubernetesPatchSecretBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubernetesPatchSecretBody kubernetes patch secret body
swagger:model KubernetesPatchSecretBody
*/
type KubernetesPatchSecretBody struct {

	// name
	Name string `json:"name,omitempty"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// project Id
	ProjectID int32 `json:"projectId,omitempty"`

	// yaml
	Yaml string `json:"yaml,omitempty"`
}

// Validate validates this kubernetes patch secret body
func (o *KubernetesPatchSecretBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes patch secret body based on context it is used
func (o *KubernetesPatchSecretBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesPatchSecretBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesPatchSecretBody) UnmarshalBinary(b []byte) error {
	var res KubernetesPatchSecretBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubernetesPatchSecretForbiddenBody kubernetes patch secret forbidden body
swagger:model KubernetesPatchSecretForbiddenBody
*/
type KubernetesPatchSecretForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kubernetes patch secret forbidden body
func (o *KubernetesPatchSecretForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes patch secret forbidden body based on context it is used
func (o *KubernetesPatchSecretForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesPatchSecretForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesPatchSecretForbiddenBody) UnmarshalBinary(b []byte) error {
	var res KubernetesPatchSecretForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubernetesPatchSecretNotFoundBody kubernetes patch secret not found body
swagger:model KubernetesPatchSecretNotFoundBody
*/
type KubernetesPatchSecretNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kubernetes patch secret not found body
func (o *KubernetesPatchSecretNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes patch secret not found body based on context it is used
func (o *KubernetesPatchSecretNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesPatchSecretNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesPatchSecretNotFoundBody) UnmarshalBinary(b []byte) error {
	var res KubernetesPatchSecretNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubernetesPatchSecretUnauthorizedBody kubernetes patch secret unauthorized body
swagger:model KubernetesPatchSecretUnauthorizedBody
*/
type KubernetesPatchSecretUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kubernetes patch secret unauthorized body
func (o *KubernetesPatchSecretUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes patch secret unauthorized body based on context it is used
func (o *KubernetesPatchSecretUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesPatchSecretUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesPatchSecretUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res KubernetesPatchSecretUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
