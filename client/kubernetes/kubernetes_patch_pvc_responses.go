// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// KubernetesPatchPvcReader is a Reader for the KubernetesPatchPvc structure.
type KubernetesPatchPvcReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KubernetesPatchPvcReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKubernetesPatchPvcOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewKubernetesPatchPvcBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewKubernetesPatchPvcUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewKubernetesPatchPvcForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewKubernetesPatchPvcNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewKubernetesPatchPvcInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewKubernetesPatchPvcOK creates a KubernetesPatchPvcOK with default headers values
func NewKubernetesPatchPvcOK() *KubernetesPatchPvcOK {
	return &KubernetesPatchPvcOK{}
}

/*
KubernetesPatchPvcOK describes a response with status code 200, with default header values.

Success
*/
type KubernetesPatchPvcOK struct {
	Payload interface{}
}

// IsSuccess returns true when this kubernetes patch pvc o k response has a 2xx status code
func (o *KubernetesPatchPvcOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this kubernetes patch pvc o k response has a 3xx status code
func (o *KubernetesPatchPvcOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes patch pvc o k response has a 4xx status code
func (o *KubernetesPatchPvcOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this kubernetes patch pvc o k response has a 5xx status code
func (o *KubernetesPatchPvcOK) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes patch pvc o k response a status code equal to that given
func (o *KubernetesPatchPvcOK) IsCode(code int) bool {
	return code == 200
}

func (o *KubernetesPatchPvcOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/pvc][%d] kubernetesPatchPvcOK  %+v", 200, o.Payload)
}

func (o *KubernetesPatchPvcOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/pvc][%d] kubernetesPatchPvcOK  %+v", 200, o.Payload)
}

func (o *KubernetesPatchPvcOK) GetPayload() interface{} {
	return o.Payload
}

func (o *KubernetesPatchPvcOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesPatchPvcBadRequest creates a KubernetesPatchPvcBadRequest with default headers values
func NewKubernetesPatchPvcBadRequest() *KubernetesPatchPvcBadRequest {
	return &KubernetesPatchPvcBadRequest{}
}

/*
KubernetesPatchPvcBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type KubernetesPatchPvcBadRequest struct {
	Payload []*KubernetesPatchPvcBadRequestBodyItems0
}

// IsSuccess returns true when this kubernetes patch pvc bad request response has a 2xx status code
func (o *KubernetesPatchPvcBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes patch pvc bad request response has a 3xx status code
func (o *KubernetesPatchPvcBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes patch pvc bad request response has a 4xx status code
func (o *KubernetesPatchPvcBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes patch pvc bad request response has a 5xx status code
func (o *KubernetesPatchPvcBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes patch pvc bad request response a status code equal to that given
func (o *KubernetesPatchPvcBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *KubernetesPatchPvcBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/pvc][%d] kubernetesPatchPvcBadRequest  %+v", 400, o.Payload)
}

func (o *KubernetesPatchPvcBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/pvc][%d] kubernetesPatchPvcBadRequest  %+v", 400, o.Payload)
}

func (o *KubernetesPatchPvcBadRequest) GetPayload() []*KubernetesPatchPvcBadRequestBodyItems0 {
	return o.Payload
}

func (o *KubernetesPatchPvcBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesPatchPvcUnauthorized creates a KubernetesPatchPvcUnauthorized with default headers values
func NewKubernetesPatchPvcUnauthorized() *KubernetesPatchPvcUnauthorized {
	return &KubernetesPatchPvcUnauthorized{}
}

/*
KubernetesPatchPvcUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type KubernetesPatchPvcUnauthorized struct {
	Payload *KubernetesPatchPvcUnauthorizedBody
}

// IsSuccess returns true when this kubernetes patch pvc unauthorized response has a 2xx status code
func (o *KubernetesPatchPvcUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes patch pvc unauthorized response has a 3xx status code
func (o *KubernetesPatchPvcUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes patch pvc unauthorized response has a 4xx status code
func (o *KubernetesPatchPvcUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes patch pvc unauthorized response has a 5xx status code
func (o *KubernetesPatchPvcUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes patch pvc unauthorized response a status code equal to that given
func (o *KubernetesPatchPvcUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *KubernetesPatchPvcUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/pvc][%d] kubernetesPatchPvcUnauthorized  %+v", 401, o.Payload)
}

func (o *KubernetesPatchPvcUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/pvc][%d] kubernetesPatchPvcUnauthorized  %+v", 401, o.Payload)
}

func (o *KubernetesPatchPvcUnauthorized) GetPayload() *KubernetesPatchPvcUnauthorizedBody {
	return o.Payload
}

func (o *KubernetesPatchPvcUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubernetesPatchPvcUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesPatchPvcForbidden creates a KubernetesPatchPvcForbidden with default headers values
func NewKubernetesPatchPvcForbidden() *KubernetesPatchPvcForbidden {
	return &KubernetesPatchPvcForbidden{}
}

/*
KubernetesPatchPvcForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type KubernetesPatchPvcForbidden struct {
	Payload *KubernetesPatchPvcForbiddenBody
}

// IsSuccess returns true when this kubernetes patch pvc forbidden response has a 2xx status code
func (o *KubernetesPatchPvcForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes patch pvc forbidden response has a 3xx status code
func (o *KubernetesPatchPvcForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes patch pvc forbidden response has a 4xx status code
func (o *KubernetesPatchPvcForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes patch pvc forbidden response has a 5xx status code
func (o *KubernetesPatchPvcForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes patch pvc forbidden response a status code equal to that given
func (o *KubernetesPatchPvcForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *KubernetesPatchPvcForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/pvc][%d] kubernetesPatchPvcForbidden  %+v", 403, o.Payload)
}

func (o *KubernetesPatchPvcForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/pvc][%d] kubernetesPatchPvcForbidden  %+v", 403, o.Payload)
}

func (o *KubernetesPatchPvcForbidden) GetPayload() *KubernetesPatchPvcForbiddenBody {
	return o.Payload
}

func (o *KubernetesPatchPvcForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubernetesPatchPvcForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesPatchPvcNotFound creates a KubernetesPatchPvcNotFound with default headers values
func NewKubernetesPatchPvcNotFound() *KubernetesPatchPvcNotFound {
	return &KubernetesPatchPvcNotFound{}
}

/*
KubernetesPatchPvcNotFound describes a response with status code 404, with default header values.

Not Found
*/
type KubernetesPatchPvcNotFound struct {
	Payload *KubernetesPatchPvcNotFoundBody
}

// IsSuccess returns true when this kubernetes patch pvc not found response has a 2xx status code
func (o *KubernetesPatchPvcNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes patch pvc not found response has a 3xx status code
func (o *KubernetesPatchPvcNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes patch pvc not found response has a 4xx status code
func (o *KubernetesPatchPvcNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes patch pvc not found response has a 5xx status code
func (o *KubernetesPatchPvcNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes patch pvc not found response a status code equal to that given
func (o *KubernetesPatchPvcNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *KubernetesPatchPvcNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/pvc][%d] kubernetesPatchPvcNotFound  %+v", 404, o.Payload)
}

func (o *KubernetesPatchPvcNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/pvc][%d] kubernetesPatchPvcNotFound  %+v", 404, o.Payload)
}

func (o *KubernetesPatchPvcNotFound) GetPayload() *KubernetesPatchPvcNotFoundBody {
	return o.Payload
}

func (o *KubernetesPatchPvcNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubernetesPatchPvcNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesPatchPvcInternalServerError creates a KubernetesPatchPvcInternalServerError with default headers values
func NewKubernetesPatchPvcInternalServerError() *KubernetesPatchPvcInternalServerError {
	return &KubernetesPatchPvcInternalServerError{}
}

/*
KubernetesPatchPvcInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type KubernetesPatchPvcInternalServerError struct {
}

// IsSuccess returns true when this kubernetes patch pvc internal server error response has a 2xx status code
func (o *KubernetesPatchPvcInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes patch pvc internal server error response has a 3xx status code
func (o *KubernetesPatchPvcInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes patch pvc internal server error response has a 4xx status code
func (o *KubernetesPatchPvcInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this kubernetes patch pvc internal server error response has a 5xx status code
func (o *KubernetesPatchPvcInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this kubernetes patch pvc internal server error response a status code equal to that given
func (o *KubernetesPatchPvcInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *KubernetesPatchPvcInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/pvc][%d] kubernetesPatchPvcInternalServerError ", 500)
}

func (o *KubernetesPatchPvcInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/pvc][%d] kubernetesPatchPvcInternalServerError ", 500)
}

func (o *KubernetesPatchPvcInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
KubernetesPatchPvcBadRequestBodyItems0 kubernetes patch pvc bad request body items0
swagger:model KubernetesPatchPvcBadRequestBodyItems0
*/
type KubernetesPatchPvcBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this kubernetes patch pvc bad request body items0
func (o *KubernetesPatchPvcBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes patch pvc bad request body items0 based on context it is used
func (o *KubernetesPatchPvcBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesPatchPvcBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesPatchPvcBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res KubernetesPatchPvcBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubernetesPatchPvcBody kubernetes patch pvc body
swagger:model KubernetesPatchPvcBody
*/
type KubernetesPatchPvcBody struct {

	// name
	Name string `json:"name,omitempty"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// project Id
	ProjectID int32 `json:"projectId,omitempty"`

	// yaml
	Yaml string `json:"yaml,omitempty"`
}

// Validate validates this kubernetes patch pvc body
func (o *KubernetesPatchPvcBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes patch pvc body based on context it is used
func (o *KubernetesPatchPvcBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesPatchPvcBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesPatchPvcBody) UnmarshalBinary(b []byte) error {
	var res KubernetesPatchPvcBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubernetesPatchPvcForbiddenBody kubernetes patch pvc forbidden body
swagger:model KubernetesPatchPvcForbiddenBody
*/
type KubernetesPatchPvcForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kubernetes patch pvc forbidden body
func (o *KubernetesPatchPvcForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes patch pvc forbidden body based on context it is used
func (o *KubernetesPatchPvcForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesPatchPvcForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesPatchPvcForbiddenBody) UnmarshalBinary(b []byte) error {
	var res KubernetesPatchPvcForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubernetesPatchPvcNotFoundBody kubernetes patch pvc not found body
swagger:model KubernetesPatchPvcNotFoundBody
*/
type KubernetesPatchPvcNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kubernetes patch pvc not found body
func (o *KubernetesPatchPvcNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes patch pvc not found body based on context it is used
func (o *KubernetesPatchPvcNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesPatchPvcNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesPatchPvcNotFoundBody) UnmarshalBinary(b []byte) error {
	var res KubernetesPatchPvcNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubernetesPatchPvcUnauthorizedBody kubernetes patch pvc unauthorized body
swagger:model KubernetesPatchPvcUnauthorizedBody
*/
type KubernetesPatchPvcUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kubernetes patch pvc unauthorized body
func (o *KubernetesPatchPvcUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes patch pvc unauthorized body based on context it is used
func (o *KubernetesPatchPvcUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesPatchPvcUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesPatchPvcUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res KubernetesPatchPvcUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
