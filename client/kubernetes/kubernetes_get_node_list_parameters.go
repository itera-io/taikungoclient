// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewKubernetesGetNodeListParams creates a new KubernetesGetNodeListParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewKubernetesGetNodeListParams() *KubernetesGetNodeListParams {
	return &KubernetesGetNodeListParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewKubernetesGetNodeListParamsWithTimeout creates a new KubernetesGetNodeListParams object
// with the ability to set a timeout on a request.
func NewKubernetesGetNodeListParamsWithTimeout(timeout time.Duration) *KubernetesGetNodeListParams {
	return &KubernetesGetNodeListParams{
		timeout: timeout,
	}
}

// NewKubernetesGetNodeListParamsWithContext creates a new KubernetesGetNodeListParams object
// with the ability to set a context for a request.
func NewKubernetesGetNodeListParamsWithContext(ctx context.Context) *KubernetesGetNodeListParams {
	return &KubernetesGetNodeListParams{
		Context: ctx,
	}
}

// NewKubernetesGetNodeListParamsWithHTTPClient creates a new KubernetesGetNodeListParams object
// with the ability to set a custom HTTPClient for a request.
func NewKubernetesGetNodeListParamsWithHTTPClient(client *http.Client) *KubernetesGetNodeListParams {
	return &KubernetesGetNodeListParams{
		HTTPClient: client,
	}
}

/*
KubernetesGetNodeListParams contains all the parameters to send to the API endpoint

	for the kubernetes get node list operation.

	Typically these are written to a http.Request.
*/
type KubernetesGetNodeListParams struct {

	// ProjectID.
	//
	// Format: int32
	ProjectID int32

	// SearchID.
	SearchID *string

	// V.
	V string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the kubernetes get node list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *KubernetesGetNodeListParams) WithDefaults() *KubernetesGetNodeListParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the kubernetes get node list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *KubernetesGetNodeListParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the kubernetes get node list params
func (o *KubernetesGetNodeListParams) WithTimeout(timeout time.Duration) *KubernetesGetNodeListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the kubernetes get node list params
func (o *KubernetesGetNodeListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the kubernetes get node list params
func (o *KubernetesGetNodeListParams) WithContext(ctx context.Context) *KubernetesGetNodeListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the kubernetes get node list params
func (o *KubernetesGetNodeListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the kubernetes get node list params
func (o *KubernetesGetNodeListParams) WithHTTPClient(client *http.Client) *KubernetesGetNodeListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the kubernetes get node list params
func (o *KubernetesGetNodeListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithProjectID adds the projectID to the kubernetes get node list params
func (o *KubernetesGetNodeListParams) WithProjectID(projectID int32) *KubernetesGetNodeListParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the kubernetes get node list params
func (o *KubernetesGetNodeListParams) SetProjectID(projectID int32) {
	o.ProjectID = projectID
}

// WithSearchID adds the searchID to the kubernetes get node list params
func (o *KubernetesGetNodeListParams) WithSearchID(searchID *string) *KubernetesGetNodeListParams {
	o.SetSearchID(searchID)
	return o
}

// SetSearchID adds the searchId to the kubernetes get node list params
func (o *KubernetesGetNodeListParams) SetSearchID(searchID *string) {
	o.SearchID = searchID
}

// WithV adds the v to the kubernetes get node list params
func (o *KubernetesGetNodeListParams) WithV(v string) *KubernetesGetNodeListParams {
	o.SetV(v)
	return o
}

// SetV adds the v to the kubernetes get node list params
func (o *KubernetesGetNodeListParams) SetV(v string) {
	o.V = v
}

// WriteToRequest writes these params to a swagger request
func (o *KubernetesGetNodeListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param projectId
	if err := r.SetPathParam("projectId", swag.FormatInt32(o.ProjectID)); err != nil {
		return err
	}

	if o.SearchID != nil {

		// query param searchId
		var qrSearchID string

		if o.SearchID != nil {
			qrSearchID = *o.SearchID
		}
		qSearchID := qrSearchID
		if qSearchID != "" {

			if err := r.SetQueryParam("searchId", qSearchID); err != nil {
				return err
			}
		}
	}

	// path param v
	if err := r.SetPathParam("v", o.V); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
