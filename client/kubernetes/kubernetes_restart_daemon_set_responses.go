// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// KubernetesRestartDaemonSetReader is a Reader for the KubernetesRestartDaemonSet structure.
type KubernetesRestartDaemonSetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KubernetesRestartDaemonSetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKubernetesRestartDaemonSetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewKubernetesRestartDaemonSetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewKubernetesRestartDaemonSetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewKubernetesRestartDaemonSetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewKubernetesRestartDaemonSetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewKubernetesRestartDaemonSetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewKubernetesRestartDaemonSetOK creates a KubernetesRestartDaemonSetOK with default headers values
func NewKubernetesRestartDaemonSetOK() *KubernetesRestartDaemonSetOK {
	return &KubernetesRestartDaemonSetOK{}
}

/*
KubernetesRestartDaemonSetOK describes a response with status code 200, with default header values.

Success
*/
type KubernetesRestartDaemonSetOK struct {
	Payload interface{}
}

// IsSuccess returns true when this kubernetes restart daemon set o k response has a 2xx status code
func (o *KubernetesRestartDaemonSetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this kubernetes restart daemon set o k response has a 3xx status code
func (o *KubernetesRestartDaemonSetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes restart daemon set o k response has a 4xx status code
func (o *KubernetesRestartDaemonSetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this kubernetes restart daemon set o k response has a 5xx status code
func (o *KubernetesRestartDaemonSetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes restart daemon set o k response a status code equal to that given
func (o *KubernetesRestartDaemonSetOK) IsCode(code int) bool {
	return code == 200
}

func (o *KubernetesRestartDaemonSetOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/restart/daemonset][%d] kubernetesRestartDaemonSetOK  %+v", 200, o.Payload)
}

func (o *KubernetesRestartDaemonSetOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/restart/daemonset][%d] kubernetesRestartDaemonSetOK  %+v", 200, o.Payload)
}

func (o *KubernetesRestartDaemonSetOK) GetPayload() interface{} {
	return o.Payload
}

func (o *KubernetesRestartDaemonSetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesRestartDaemonSetBadRequest creates a KubernetesRestartDaemonSetBadRequest with default headers values
func NewKubernetesRestartDaemonSetBadRequest() *KubernetesRestartDaemonSetBadRequest {
	return &KubernetesRestartDaemonSetBadRequest{}
}

/*
KubernetesRestartDaemonSetBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type KubernetesRestartDaemonSetBadRequest struct {
	Payload []*KubernetesRestartDaemonSetBadRequestBodyItems0
}

// IsSuccess returns true when this kubernetes restart daemon set bad request response has a 2xx status code
func (o *KubernetesRestartDaemonSetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes restart daemon set bad request response has a 3xx status code
func (o *KubernetesRestartDaemonSetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes restart daemon set bad request response has a 4xx status code
func (o *KubernetesRestartDaemonSetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes restart daemon set bad request response has a 5xx status code
func (o *KubernetesRestartDaemonSetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes restart daemon set bad request response a status code equal to that given
func (o *KubernetesRestartDaemonSetBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *KubernetesRestartDaemonSetBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/restart/daemonset][%d] kubernetesRestartDaemonSetBadRequest  %+v", 400, o.Payload)
}

func (o *KubernetesRestartDaemonSetBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/restart/daemonset][%d] kubernetesRestartDaemonSetBadRequest  %+v", 400, o.Payload)
}

func (o *KubernetesRestartDaemonSetBadRequest) GetPayload() []*KubernetesRestartDaemonSetBadRequestBodyItems0 {
	return o.Payload
}

func (o *KubernetesRestartDaemonSetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesRestartDaemonSetUnauthorized creates a KubernetesRestartDaemonSetUnauthorized with default headers values
func NewKubernetesRestartDaemonSetUnauthorized() *KubernetesRestartDaemonSetUnauthorized {
	return &KubernetesRestartDaemonSetUnauthorized{}
}

/*
KubernetesRestartDaemonSetUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type KubernetesRestartDaemonSetUnauthorized struct {
	Payload *KubernetesRestartDaemonSetUnauthorizedBody
}

// IsSuccess returns true when this kubernetes restart daemon set unauthorized response has a 2xx status code
func (o *KubernetesRestartDaemonSetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes restart daemon set unauthorized response has a 3xx status code
func (o *KubernetesRestartDaemonSetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes restart daemon set unauthorized response has a 4xx status code
func (o *KubernetesRestartDaemonSetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes restart daemon set unauthorized response has a 5xx status code
func (o *KubernetesRestartDaemonSetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes restart daemon set unauthorized response a status code equal to that given
func (o *KubernetesRestartDaemonSetUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *KubernetesRestartDaemonSetUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/restart/daemonset][%d] kubernetesRestartDaemonSetUnauthorized  %+v", 401, o.Payload)
}

func (o *KubernetesRestartDaemonSetUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/restart/daemonset][%d] kubernetesRestartDaemonSetUnauthorized  %+v", 401, o.Payload)
}

func (o *KubernetesRestartDaemonSetUnauthorized) GetPayload() *KubernetesRestartDaemonSetUnauthorizedBody {
	return o.Payload
}

func (o *KubernetesRestartDaemonSetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubernetesRestartDaemonSetUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesRestartDaemonSetForbidden creates a KubernetesRestartDaemonSetForbidden with default headers values
func NewKubernetesRestartDaemonSetForbidden() *KubernetesRestartDaemonSetForbidden {
	return &KubernetesRestartDaemonSetForbidden{}
}

/*
KubernetesRestartDaemonSetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type KubernetesRestartDaemonSetForbidden struct {
	Payload *KubernetesRestartDaemonSetForbiddenBody
}

// IsSuccess returns true when this kubernetes restart daemon set forbidden response has a 2xx status code
func (o *KubernetesRestartDaemonSetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes restart daemon set forbidden response has a 3xx status code
func (o *KubernetesRestartDaemonSetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes restart daemon set forbidden response has a 4xx status code
func (o *KubernetesRestartDaemonSetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes restart daemon set forbidden response has a 5xx status code
func (o *KubernetesRestartDaemonSetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes restart daemon set forbidden response a status code equal to that given
func (o *KubernetesRestartDaemonSetForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *KubernetesRestartDaemonSetForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/restart/daemonset][%d] kubernetesRestartDaemonSetForbidden  %+v", 403, o.Payload)
}

func (o *KubernetesRestartDaemonSetForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/restart/daemonset][%d] kubernetesRestartDaemonSetForbidden  %+v", 403, o.Payload)
}

func (o *KubernetesRestartDaemonSetForbidden) GetPayload() *KubernetesRestartDaemonSetForbiddenBody {
	return o.Payload
}

func (o *KubernetesRestartDaemonSetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubernetesRestartDaemonSetForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesRestartDaemonSetNotFound creates a KubernetesRestartDaemonSetNotFound with default headers values
func NewKubernetesRestartDaemonSetNotFound() *KubernetesRestartDaemonSetNotFound {
	return &KubernetesRestartDaemonSetNotFound{}
}

/*
KubernetesRestartDaemonSetNotFound describes a response with status code 404, with default header values.

Not Found
*/
type KubernetesRestartDaemonSetNotFound struct {
	Payload *KubernetesRestartDaemonSetNotFoundBody
}

// IsSuccess returns true when this kubernetes restart daemon set not found response has a 2xx status code
func (o *KubernetesRestartDaemonSetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes restart daemon set not found response has a 3xx status code
func (o *KubernetesRestartDaemonSetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes restart daemon set not found response has a 4xx status code
func (o *KubernetesRestartDaemonSetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes restart daemon set not found response has a 5xx status code
func (o *KubernetesRestartDaemonSetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes restart daemon set not found response a status code equal to that given
func (o *KubernetesRestartDaemonSetNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *KubernetesRestartDaemonSetNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/restart/daemonset][%d] kubernetesRestartDaemonSetNotFound  %+v", 404, o.Payload)
}

func (o *KubernetesRestartDaemonSetNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/restart/daemonset][%d] kubernetesRestartDaemonSetNotFound  %+v", 404, o.Payload)
}

func (o *KubernetesRestartDaemonSetNotFound) GetPayload() *KubernetesRestartDaemonSetNotFoundBody {
	return o.Payload
}

func (o *KubernetesRestartDaemonSetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubernetesRestartDaemonSetNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesRestartDaemonSetInternalServerError creates a KubernetesRestartDaemonSetInternalServerError with default headers values
func NewKubernetesRestartDaemonSetInternalServerError() *KubernetesRestartDaemonSetInternalServerError {
	return &KubernetesRestartDaemonSetInternalServerError{}
}

/*
KubernetesRestartDaemonSetInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type KubernetesRestartDaemonSetInternalServerError struct {
}

// IsSuccess returns true when this kubernetes restart daemon set internal server error response has a 2xx status code
func (o *KubernetesRestartDaemonSetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes restart daemon set internal server error response has a 3xx status code
func (o *KubernetesRestartDaemonSetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes restart daemon set internal server error response has a 4xx status code
func (o *KubernetesRestartDaemonSetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this kubernetes restart daemon set internal server error response has a 5xx status code
func (o *KubernetesRestartDaemonSetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this kubernetes restart daemon set internal server error response a status code equal to that given
func (o *KubernetesRestartDaemonSetInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *KubernetesRestartDaemonSetInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/restart/daemonset][%d] kubernetesRestartDaemonSetInternalServerError ", 500)
}

func (o *KubernetesRestartDaemonSetInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/restart/daemonset][%d] kubernetesRestartDaemonSetInternalServerError ", 500)
}

func (o *KubernetesRestartDaemonSetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
KubernetesRestartDaemonSetBadRequestBodyItems0 kubernetes restart daemon set bad request body items0
swagger:model KubernetesRestartDaemonSetBadRequestBodyItems0
*/
type KubernetesRestartDaemonSetBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this kubernetes restart daemon set bad request body items0
func (o *KubernetesRestartDaemonSetBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes restart daemon set bad request body items0 based on context it is used
func (o *KubernetesRestartDaemonSetBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesRestartDaemonSetBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesRestartDaemonSetBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res KubernetesRestartDaemonSetBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubernetesRestartDaemonSetBody kubernetes restart daemon set body
swagger:model KubernetesRestartDaemonSetBody
*/
type KubernetesRestartDaemonSetBody struct {

	// name
	Name string `json:"name,omitempty"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// project Id
	ProjectID int32 `json:"projectId,omitempty"`
}

// Validate validates this kubernetes restart daemon set body
func (o *KubernetesRestartDaemonSetBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes restart daemon set body based on context it is used
func (o *KubernetesRestartDaemonSetBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesRestartDaemonSetBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesRestartDaemonSetBody) UnmarshalBinary(b []byte) error {
	var res KubernetesRestartDaemonSetBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubernetesRestartDaemonSetForbiddenBody kubernetes restart daemon set forbidden body
swagger:model KubernetesRestartDaemonSetForbiddenBody
*/
type KubernetesRestartDaemonSetForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kubernetes restart daemon set forbidden body
func (o *KubernetesRestartDaemonSetForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes restart daemon set forbidden body based on context it is used
func (o *KubernetesRestartDaemonSetForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesRestartDaemonSetForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesRestartDaemonSetForbiddenBody) UnmarshalBinary(b []byte) error {
	var res KubernetesRestartDaemonSetForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubernetesRestartDaemonSetNotFoundBody kubernetes restart daemon set not found body
swagger:model KubernetesRestartDaemonSetNotFoundBody
*/
type KubernetesRestartDaemonSetNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kubernetes restart daemon set not found body
func (o *KubernetesRestartDaemonSetNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes restart daemon set not found body based on context it is used
func (o *KubernetesRestartDaemonSetNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesRestartDaemonSetNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesRestartDaemonSetNotFoundBody) UnmarshalBinary(b []byte) error {
	var res KubernetesRestartDaemonSetNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubernetesRestartDaemonSetUnauthorizedBody kubernetes restart daemon set unauthorized body
swagger:model KubernetesRestartDaemonSetUnauthorizedBody
*/
type KubernetesRestartDaemonSetUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kubernetes restart daemon set unauthorized body
func (o *KubernetesRestartDaemonSetUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes restart daemon set unauthorized body based on context it is used
func (o *KubernetesRestartDaemonSetUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesRestartDaemonSetUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesRestartDaemonSetUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res KubernetesRestartDaemonSetUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
