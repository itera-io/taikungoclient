// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// KubernetesDownloadReader is a Reader for the KubernetesDownload structure.
type KubernetesDownloadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KubernetesDownloadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKubernetesDownloadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewKubernetesDownloadBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewKubernetesDownloadUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewKubernetesDownloadForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewKubernetesDownloadNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewKubernetesDownloadInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewKubernetesDownloadOK creates a KubernetesDownloadOK with default headers values
func NewKubernetesDownloadOK() *KubernetesDownloadOK {
	return &KubernetesDownloadOK{}
}

/* KubernetesDownloadOK describes a response with status code 200, with default header values.

Success
*/
type KubernetesDownloadOK struct {
	Payload interface{}
}

func (o *KubernetesDownloadOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/download][%d] kubernetesDownloadOK  %+v", 200, o.Payload)
}
func (o *KubernetesDownloadOK) GetPayload() interface{} {
	return o.Payload
}

func (o *KubernetesDownloadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesDownloadBadRequest creates a KubernetesDownloadBadRequest with default headers values
func NewKubernetesDownloadBadRequest() *KubernetesDownloadBadRequest {
	return &KubernetesDownloadBadRequest{}
}

/* KubernetesDownloadBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type KubernetesDownloadBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *KubernetesDownloadBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/download][%d] kubernetesDownloadBadRequest  %+v", 400, o.Payload)
}
func (o *KubernetesDownloadBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *KubernetesDownloadBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesDownloadUnauthorized creates a KubernetesDownloadUnauthorized with default headers values
func NewKubernetesDownloadUnauthorized() *KubernetesDownloadUnauthorized {
	return &KubernetesDownloadUnauthorized{}
}

/* KubernetesDownloadUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type KubernetesDownloadUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *KubernetesDownloadUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/download][%d] kubernetesDownloadUnauthorized  %+v", 401, o.Payload)
}
func (o *KubernetesDownloadUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KubernetesDownloadUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesDownloadForbidden creates a KubernetesDownloadForbidden with default headers values
func NewKubernetesDownloadForbidden() *KubernetesDownloadForbidden {
	return &KubernetesDownloadForbidden{}
}

/* KubernetesDownloadForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type KubernetesDownloadForbidden struct {
	Payload *models.ProblemDetails
}

func (o *KubernetesDownloadForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/download][%d] kubernetesDownloadForbidden  %+v", 403, o.Payload)
}
func (o *KubernetesDownloadForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KubernetesDownloadForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesDownloadNotFound creates a KubernetesDownloadNotFound with default headers values
func NewKubernetesDownloadNotFound() *KubernetesDownloadNotFound {
	return &KubernetesDownloadNotFound{}
}

/* KubernetesDownloadNotFound describes a response with status code 404, with default header values.

Not Found
*/
type KubernetesDownloadNotFound struct {
	Payload *models.ProblemDetails
}

func (o *KubernetesDownloadNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/download][%d] kubernetesDownloadNotFound  %+v", 404, o.Payload)
}
func (o *KubernetesDownloadNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KubernetesDownloadNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesDownloadInternalServerError creates a KubernetesDownloadInternalServerError with default headers values
func NewKubernetesDownloadInternalServerError() *KubernetesDownloadInternalServerError {
	return &KubernetesDownloadInternalServerError{}
}

/* KubernetesDownloadInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type KubernetesDownloadInternalServerError struct {
}

func (o *KubernetesDownloadInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/download][%d] kubernetesDownloadInternalServerError ", 500)
}

func (o *KubernetesDownloadInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
