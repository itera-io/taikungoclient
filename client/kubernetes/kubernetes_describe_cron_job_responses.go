// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// KubernetesDescribeCronJobReader is a Reader for the KubernetesDescribeCronJob structure.
type KubernetesDescribeCronJobReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KubernetesDescribeCronJobReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKubernetesDescribeCronJobOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewKubernetesDescribeCronJobBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewKubernetesDescribeCronJobUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewKubernetesDescribeCronJobForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewKubernetesDescribeCronJobNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewKubernetesDescribeCronJobInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewKubernetesDescribeCronJobOK creates a KubernetesDescribeCronJobOK with default headers values
func NewKubernetesDescribeCronJobOK() *KubernetesDescribeCronJobOK {
	return &KubernetesDescribeCronJobOK{}
}

/* KubernetesDescribeCronJobOK describes a response with status code 200, with default header values.

Success
*/
type KubernetesDescribeCronJobOK struct {
	Payload string
}

func (o *KubernetesDescribeCronJobOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/describe/cronjob][%d] kubernetesDescribeCronJobOK  %+v", 200, o.Payload)
}
func (o *KubernetesDescribeCronJobOK) GetPayload() string {
	return o.Payload
}

func (o *KubernetesDescribeCronJobOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesDescribeCronJobBadRequest creates a KubernetesDescribeCronJobBadRequest with default headers values
func NewKubernetesDescribeCronJobBadRequest() *KubernetesDescribeCronJobBadRequest {
	return &KubernetesDescribeCronJobBadRequest{}
}

/* KubernetesDescribeCronJobBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type KubernetesDescribeCronJobBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *KubernetesDescribeCronJobBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/describe/cronjob][%d] kubernetesDescribeCronJobBadRequest  %+v", 400, o.Payload)
}
func (o *KubernetesDescribeCronJobBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *KubernetesDescribeCronJobBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesDescribeCronJobUnauthorized creates a KubernetesDescribeCronJobUnauthorized with default headers values
func NewKubernetesDescribeCronJobUnauthorized() *KubernetesDescribeCronJobUnauthorized {
	return &KubernetesDescribeCronJobUnauthorized{}
}

/* KubernetesDescribeCronJobUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type KubernetesDescribeCronJobUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *KubernetesDescribeCronJobUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/describe/cronjob][%d] kubernetesDescribeCronJobUnauthorized  %+v", 401, o.Payload)
}
func (o *KubernetesDescribeCronJobUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KubernetesDescribeCronJobUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesDescribeCronJobForbidden creates a KubernetesDescribeCronJobForbidden with default headers values
func NewKubernetesDescribeCronJobForbidden() *KubernetesDescribeCronJobForbidden {
	return &KubernetesDescribeCronJobForbidden{}
}

/* KubernetesDescribeCronJobForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type KubernetesDescribeCronJobForbidden struct {
	Payload *models.ProblemDetails
}

func (o *KubernetesDescribeCronJobForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/describe/cronjob][%d] kubernetesDescribeCronJobForbidden  %+v", 403, o.Payload)
}
func (o *KubernetesDescribeCronJobForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KubernetesDescribeCronJobForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesDescribeCronJobNotFound creates a KubernetesDescribeCronJobNotFound with default headers values
func NewKubernetesDescribeCronJobNotFound() *KubernetesDescribeCronJobNotFound {
	return &KubernetesDescribeCronJobNotFound{}
}

/* KubernetesDescribeCronJobNotFound describes a response with status code 404, with default header values.

Not Found
*/
type KubernetesDescribeCronJobNotFound struct {
	Payload *models.ProblemDetails
}

func (o *KubernetesDescribeCronJobNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/describe/cronjob][%d] kubernetesDescribeCronJobNotFound  %+v", 404, o.Payload)
}
func (o *KubernetesDescribeCronJobNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KubernetesDescribeCronJobNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesDescribeCronJobInternalServerError creates a KubernetesDescribeCronJobInternalServerError with default headers values
func NewKubernetesDescribeCronJobInternalServerError() *KubernetesDescribeCronJobInternalServerError {
	return &KubernetesDescribeCronJobInternalServerError{}
}

/* KubernetesDescribeCronJobInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type KubernetesDescribeCronJobInternalServerError struct {
}

func (o *KubernetesDescribeCronJobInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/describe/cronjob][%d] kubernetesDescribeCronJobInternalServerError ", 500)
}

func (o *KubernetesDescribeCronJobInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
