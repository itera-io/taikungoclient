// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// KubernetesGetPersistentVolumeClaimReader is a Reader for the KubernetesGetPersistentVolumeClaim structure.
type KubernetesGetPersistentVolumeClaimReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KubernetesGetPersistentVolumeClaimReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKubernetesGetPersistentVolumeClaimOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewKubernetesGetPersistentVolumeClaimBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewKubernetesGetPersistentVolumeClaimUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewKubernetesGetPersistentVolumeClaimForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewKubernetesGetPersistentVolumeClaimNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewKubernetesGetPersistentVolumeClaimInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewKubernetesGetPersistentVolumeClaimOK creates a KubernetesGetPersistentVolumeClaimOK with default headers values
func NewKubernetesGetPersistentVolumeClaimOK() *KubernetesGetPersistentVolumeClaimOK {
	return &KubernetesGetPersistentVolumeClaimOK{}
}

/*
KubernetesGetPersistentVolumeClaimOK describes a response with status code 200, with default header values.

Success
*/
type KubernetesGetPersistentVolumeClaimOK struct {
	Payload *models.Pvcs
}

// IsSuccess returns true when this kubernetes get persistent volume claim o k response has a 2xx status code
func (o *KubernetesGetPersistentVolumeClaimOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this kubernetes get persistent volume claim o k response has a 3xx status code
func (o *KubernetesGetPersistentVolumeClaimOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get persistent volume claim o k response has a 4xx status code
func (o *KubernetesGetPersistentVolumeClaimOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this kubernetes get persistent volume claim o k response has a 5xx status code
func (o *KubernetesGetPersistentVolumeClaimOK) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get persistent volume claim o k response a status code equal to that given
func (o *KubernetesGetPersistentVolumeClaimOK) IsCode(code int) bool {
	return code == 200
}

func (o *KubernetesGetPersistentVolumeClaimOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/pvc][%d] kubernetesGetPersistentVolumeClaimOK  %+v", 200, o.Payload)
}

func (o *KubernetesGetPersistentVolumeClaimOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/pvc][%d] kubernetesGetPersistentVolumeClaimOK  %+v", 200, o.Payload)
}

func (o *KubernetesGetPersistentVolumeClaimOK) GetPayload() *models.Pvcs {
	return o.Payload
}

func (o *KubernetesGetPersistentVolumeClaimOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Pvcs)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetPersistentVolumeClaimBadRequest creates a KubernetesGetPersistentVolumeClaimBadRequest with default headers values
func NewKubernetesGetPersistentVolumeClaimBadRequest() *KubernetesGetPersistentVolumeClaimBadRequest {
	return &KubernetesGetPersistentVolumeClaimBadRequest{}
}

/*
KubernetesGetPersistentVolumeClaimBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type KubernetesGetPersistentVolumeClaimBadRequest struct {
	Payload *models.ValidationProblemDetails
}

// IsSuccess returns true when this kubernetes get persistent volume claim bad request response has a 2xx status code
func (o *KubernetesGetPersistentVolumeClaimBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get persistent volume claim bad request response has a 3xx status code
func (o *KubernetesGetPersistentVolumeClaimBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get persistent volume claim bad request response has a 4xx status code
func (o *KubernetesGetPersistentVolumeClaimBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes get persistent volume claim bad request response has a 5xx status code
func (o *KubernetesGetPersistentVolumeClaimBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get persistent volume claim bad request response a status code equal to that given
func (o *KubernetesGetPersistentVolumeClaimBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *KubernetesGetPersistentVolumeClaimBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/pvc][%d] kubernetesGetPersistentVolumeClaimBadRequest  %+v", 400, o.Payload)
}

func (o *KubernetesGetPersistentVolumeClaimBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/pvc][%d] kubernetesGetPersistentVolumeClaimBadRequest  %+v", 400, o.Payload)
}

func (o *KubernetesGetPersistentVolumeClaimBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *KubernetesGetPersistentVolumeClaimBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetPersistentVolumeClaimUnauthorized creates a KubernetesGetPersistentVolumeClaimUnauthorized with default headers values
func NewKubernetesGetPersistentVolumeClaimUnauthorized() *KubernetesGetPersistentVolumeClaimUnauthorized {
	return &KubernetesGetPersistentVolumeClaimUnauthorized{}
}

/*
KubernetesGetPersistentVolumeClaimUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type KubernetesGetPersistentVolumeClaimUnauthorized struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this kubernetes get persistent volume claim unauthorized response has a 2xx status code
func (o *KubernetesGetPersistentVolumeClaimUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get persistent volume claim unauthorized response has a 3xx status code
func (o *KubernetesGetPersistentVolumeClaimUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get persistent volume claim unauthorized response has a 4xx status code
func (o *KubernetesGetPersistentVolumeClaimUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes get persistent volume claim unauthorized response has a 5xx status code
func (o *KubernetesGetPersistentVolumeClaimUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get persistent volume claim unauthorized response a status code equal to that given
func (o *KubernetesGetPersistentVolumeClaimUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *KubernetesGetPersistentVolumeClaimUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/pvc][%d] kubernetesGetPersistentVolumeClaimUnauthorized  %+v", 401, o.Payload)
}

func (o *KubernetesGetPersistentVolumeClaimUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/pvc][%d] kubernetesGetPersistentVolumeClaimUnauthorized  %+v", 401, o.Payload)
}

func (o *KubernetesGetPersistentVolumeClaimUnauthorized) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *KubernetesGetPersistentVolumeClaimUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetPersistentVolumeClaimForbidden creates a KubernetesGetPersistentVolumeClaimForbidden with default headers values
func NewKubernetesGetPersistentVolumeClaimForbidden() *KubernetesGetPersistentVolumeClaimForbidden {
	return &KubernetesGetPersistentVolumeClaimForbidden{}
}

/*
KubernetesGetPersistentVolumeClaimForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type KubernetesGetPersistentVolumeClaimForbidden struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this kubernetes get persistent volume claim forbidden response has a 2xx status code
func (o *KubernetesGetPersistentVolumeClaimForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get persistent volume claim forbidden response has a 3xx status code
func (o *KubernetesGetPersistentVolumeClaimForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get persistent volume claim forbidden response has a 4xx status code
func (o *KubernetesGetPersistentVolumeClaimForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes get persistent volume claim forbidden response has a 5xx status code
func (o *KubernetesGetPersistentVolumeClaimForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get persistent volume claim forbidden response a status code equal to that given
func (o *KubernetesGetPersistentVolumeClaimForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *KubernetesGetPersistentVolumeClaimForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/pvc][%d] kubernetesGetPersistentVolumeClaimForbidden  %+v", 403, o.Payload)
}

func (o *KubernetesGetPersistentVolumeClaimForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/pvc][%d] kubernetesGetPersistentVolumeClaimForbidden  %+v", 403, o.Payload)
}

func (o *KubernetesGetPersistentVolumeClaimForbidden) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *KubernetesGetPersistentVolumeClaimForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetPersistentVolumeClaimNotFound creates a KubernetesGetPersistentVolumeClaimNotFound with default headers values
func NewKubernetesGetPersistentVolumeClaimNotFound() *KubernetesGetPersistentVolumeClaimNotFound {
	return &KubernetesGetPersistentVolumeClaimNotFound{}
}

/*
KubernetesGetPersistentVolumeClaimNotFound describes a response with status code 404, with default header values.

Not Found
*/
type KubernetesGetPersistentVolumeClaimNotFound struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this kubernetes get persistent volume claim not found response has a 2xx status code
func (o *KubernetesGetPersistentVolumeClaimNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get persistent volume claim not found response has a 3xx status code
func (o *KubernetesGetPersistentVolumeClaimNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get persistent volume claim not found response has a 4xx status code
func (o *KubernetesGetPersistentVolumeClaimNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes get persistent volume claim not found response has a 5xx status code
func (o *KubernetesGetPersistentVolumeClaimNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get persistent volume claim not found response a status code equal to that given
func (o *KubernetesGetPersistentVolumeClaimNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *KubernetesGetPersistentVolumeClaimNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/pvc][%d] kubernetesGetPersistentVolumeClaimNotFound  %+v", 404, o.Payload)
}

func (o *KubernetesGetPersistentVolumeClaimNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/pvc][%d] kubernetesGetPersistentVolumeClaimNotFound  %+v", 404, o.Payload)
}

func (o *KubernetesGetPersistentVolumeClaimNotFound) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *KubernetesGetPersistentVolumeClaimNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetPersistentVolumeClaimInternalServerError creates a KubernetesGetPersistentVolumeClaimInternalServerError with default headers values
func NewKubernetesGetPersistentVolumeClaimInternalServerError() *KubernetesGetPersistentVolumeClaimInternalServerError {
	return &KubernetesGetPersistentVolumeClaimInternalServerError{}
}

/*
KubernetesGetPersistentVolumeClaimInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type KubernetesGetPersistentVolumeClaimInternalServerError struct {
}

// IsSuccess returns true when this kubernetes get persistent volume claim internal server error response has a 2xx status code
func (o *KubernetesGetPersistentVolumeClaimInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get persistent volume claim internal server error response has a 3xx status code
func (o *KubernetesGetPersistentVolumeClaimInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get persistent volume claim internal server error response has a 4xx status code
func (o *KubernetesGetPersistentVolumeClaimInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this kubernetes get persistent volume claim internal server error response has a 5xx status code
func (o *KubernetesGetPersistentVolumeClaimInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this kubernetes get persistent volume claim internal server error response a status code equal to that given
func (o *KubernetesGetPersistentVolumeClaimInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *KubernetesGetPersistentVolumeClaimInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/pvc][%d] kubernetesGetPersistentVolumeClaimInternalServerError ", 500)
}

func (o *KubernetesGetPersistentVolumeClaimInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/pvc][%d] kubernetesGetPersistentVolumeClaimInternalServerError ", 500)
}

func (o *KubernetesGetPersistentVolumeClaimInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
