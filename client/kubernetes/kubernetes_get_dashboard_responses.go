// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// KubernetesGetDashboardReader is a Reader for the KubernetesGetDashboard structure.
type KubernetesGetDashboardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KubernetesGetDashboardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKubernetesGetDashboardOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewKubernetesGetDashboardBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewKubernetesGetDashboardUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewKubernetesGetDashboardForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewKubernetesGetDashboardNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewKubernetesGetDashboardInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewKubernetesGetDashboardOK creates a KubernetesGetDashboardOK with default headers values
func NewKubernetesGetDashboardOK() *KubernetesGetDashboardOK {
	return &KubernetesGetDashboardOK{}
}

/*
KubernetesGetDashboardOK describes a response with status code 200, with default header values.

Success
*/
type KubernetesGetDashboardOK struct {
	Payload string
}

// IsSuccess returns true when this kubernetes get dashboard o k response has a 2xx status code
func (o *KubernetesGetDashboardOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this kubernetes get dashboard o k response has a 3xx status code
func (o *KubernetesGetDashboardOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get dashboard o k response has a 4xx status code
func (o *KubernetesGetDashboardOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this kubernetes get dashboard o k response has a 5xx status code
func (o *KubernetesGetDashboardOK) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get dashboard o k response a status code equal to that given
func (o *KubernetesGetDashboardOK) IsCode(code int) bool {
	return code == 200
}

func (o *KubernetesGetDashboardOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/dashboard][%d] kubernetesGetDashboardOK  %+v", 200, o.Payload)
}

func (o *KubernetesGetDashboardOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/dashboard][%d] kubernetesGetDashboardOK  %+v", 200, o.Payload)
}

func (o *KubernetesGetDashboardOK) GetPayload() string {
	return o.Payload
}

func (o *KubernetesGetDashboardOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetDashboardBadRequest creates a KubernetesGetDashboardBadRequest with default headers values
func NewKubernetesGetDashboardBadRequest() *KubernetesGetDashboardBadRequest {
	return &KubernetesGetDashboardBadRequest{}
}

/*
KubernetesGetDashboardBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type KubernetesGetDashboardBadRequest struct {
	Payload []*KubernetesGetDashboardBadRequestBodyItems0
}

// IsSuccess returns true when this kubernetes get dashboard bad request response has a 2xx status code
func (o *KubernetesGetDashboardBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get dashboard bad request response has a 3xx status code
func (o *KubernetesGetDashboardBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get dashboard bad request response has a 4xx status code
func (o *KubernetesGetDashboardBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes get dashboard bad request response has a 5xx status code
func (o *KubernetesGetDashboardBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get dashboard bad request response a status code equal to that given
func (o *KubernetesGetDashboardBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *KubernetesGetDashboardBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/dashboard][%d] kubernetesGetDashboardBadRequest  %+v", 400, o.Payload)
}

func (o *KubernetesGetDashboardBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/dashboard][%d] kubernetesGetDashboardBadRequest  %+v", 400, o.Payload)
}

func (o *KubernetesGetDashboardBadRequest) GetPayload() []*KubernetesGetDashboardBadRequestBodyItems0 {
	return o.Payload
}

func (o *KubernetesGetDashboardBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetDashboardUnauthorized creates a KubernetesGetDashboardUnauthorized with default headers values
func NewKubernetesGetDashboardUnauthorized() *KubernetesGetDashboardUnauthorized {
	return &KubernetesGetDashboardUnauthorized{}
}

/*
KubernetesGetDashboardUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type KubernetesGetDashboardUnauthorized struct {
	Payload *KubernetesGetDashboardUnauthorizedBody
}

// IsSuccess returns true when this kubernetes get dashboard unauthorized response has a 2xx status code
func (o *KubernetesGetDashboardUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get dashboard unauthorized response has a 3xx status code
func (o *KubernetesGetDashboardUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get dashboard unauthorized response has a 4xx status code
func (o *KubernetesGetDashboardUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes get dashboard unauthorized response has a 5xx status code
func (o *KubernetesGetDashboardUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get dashboard unauthorized response a status code equal to that given
func (o *KubernetesGetDashboardUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *KubernetesGetDashboardUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/dashboard][%d] kubernetesGetDashboardUnauthorized  %+v", 401, o.Payload)
}

func (o *KubernetesGetDashboardUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/dashboard][%d] kubernetesGetDashboardUnauthorized  %+v", 401, o.Payload)
}

func (o *KubernetesGetDashboardUnauthorized) GetPayload() *KubernetesGetDashboardUnauthorizedBody {
	return o.Payload
}

func (o *KubernetesGetDashboardUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubernetesGetDashboardUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetDashboardForbidden creates a KubernetesGetDashboardForbidden with default headers values
func NewKubernetesGetDashboardForbidden() *KubernetesGetDashboardForbidden {
	return &KubernetesGetDashboardForbidden{}
}

/*
KubernetesGetDashboardForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type KubernetesGetDashboardForbidden struct {
	Payload *KubernetesGetDashboardForbiddenBody
}

// IsSuccess returns true when this kubernetes get dashboard forbidden response has a 2xx status code
func (o *KubernetesGetDashboardForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get dashboard forbidden response has a 3xx status code
func (o *KubernetesGetDashboardForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get dashboard forbidden response has a 4xx status code
func (o *KubernetesGetDashboardForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes get dashboard forbidden response has a 5xx status code
func (o *KubernetesGetDashboardForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get dashboard forbidden response a status code equal to that given
func (o *KubernetesGetDashboardForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *KubernetesGetDashboardForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/dashboard][%d] kubernetesGetDashboardForbidden  %+v", 403, o.Payload)
}

func (o *KubernetesGetDashboardForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/dashboard][%d] kubernetesGetDashboardForbidden  %+v", 403, o.Payload)
}

func (o *KubernetesGetDashboardForbidden) GetPayload() *KubernetesGetDashboardForbiddenBody {
	return o.Payload
}

func (o *KubernetesGetDashboardForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubernetesGetDashboardForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetDashboardNotFound creates a KubernetesGetDashboardNotFound with default headers values
func NewKubernetesGetDashboardNotFound() *KubernetesGetDashboardNotFound {
	return &KubernetesGetDashboardNotFound{}
}

/*
KubernetesGetDashboardNotFound describes a response with status code 404, with default header values.

Not Found
*/
type KubernetesGetDashboardNotFound struct {
	Payload *KubernetesGetDashboardNotFoundBody
}

// IsSuccess returns true when this kubernetes get dashboard not found response has a 2xx status code
func (o *KubernetesGetDashboardNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get dashboard not found response has a 3xx status code
func (o *KubernetesGetDashboardNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get dashboard not found response has a 4xx status code
func (o *KubernetesGetDashboardNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes get dashboard not found response has a 5xx status code
func (o *KubernetesGetDashboardNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get dashboard not found response a status code equal to that given
func (o *KubernetesGetDashboardNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *KubernetesGetDashboardNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/dashboard][%d] kubernetesGetDashboardNotFound  %+v", 404, o.Payload)
}

func (o *KubernetesGetDashboardNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/dashboard][%d] kubernetesGetDashboardNotFound  %+v", 404, o.Payload)
}

func (o *KubernetesGetDashboardNotFound) GetPayload() *KubernetesGetDashboardNotFoundBody {
	return o.Payload
}

func (o *KubernetesGetDashboardNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubernetesGetDashboardNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetDashboardInternalServerError creates a KubernetesGetDashboardInternalServerError with default headers values
func NewKubernetesGetDashboardInternalServerError() *KubernetesGetDashboardInternalServerError {
	return &KubernetesGetDashboardInternalServerError{}
}

/*
KubernetesGetDashboardInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type KubernetesGetDashboardInternalServerError struct {
}

// IsSuccess returns true when this kubernetes get dashboard internal server error response has a 2xx status code
func (o *KubernetesGetDashboardInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get dashboard internal server error response has a 3xx status code
func (o *KubernetesGetDashboardInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get dashboard internal server error response has a 4xx status code
func (o *KubernetesGetDashboardInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this kubernetes get dashboard internal server error response has a 5xx status code
func (o *KubernetesGetDashboardInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this kubernetes get dashboard internal server error response a status code equal to that given
func (o *KubernetesGetDashboardInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *KubernetesGetDashboardInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/dashboard][%d] kubernetesGetDashboardInternalServerError ", 500)
}

func (o *KubernetesGetDashboardInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/dashboard][%d] kubernetesGetDashboardInternalServerError ", 500)
}

func (o *KubernetesGetDashboardInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
KubernetesGetDashboardBadRequestBodyItems0 kubernetes get dashboard bad request body items0
swagger:model KubernetesGetDashboardBadRequestBodyItems0
*/
type KubernetesGetDashboardBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this kubernetes get dashboard bad request body items0
func (o *KubernetesGetDashboardBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes get dashboard bad request body items0 based on context it is used
func (o *KubernetesGetDashboardBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesGetDashboardBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesGetDashboardBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res KubernetesGetDashboardBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubernetesGetDashboardForbiddenBody kubernetes get dashboard forbidden body
swagger:model KubernetesGetDashboardForbiddenBody
*/
type KubernetesGetDashboardForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kubernetes get dashboard forbidden body
func (o *KubernetesGetDashboardForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes get dashboard forbidden body based on context it is used
func (o *KubernetesGetDashboardForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesGetDashboardForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesGetDashboardForbiddenBody) UnmarshalBinary(b []byte) error {
	var res KubernetesGetDashboardForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubernetesGetDashboardNotFoundBody kubernetes get dashboard not found body
swagger:model KubernetesGetDashboardNotFoundBody
*/
type KubernetesGetDashboardNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kubernetes get dashboard not found body
func (o *KubernetesGetDashboardNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes get dashboard not found body based on context it is used
func (o *KubernetesGetDashboardNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesGetDashboardNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesGetDashboardNotFoundBody) UnmarshalBinary(b []byte) error {
	var res KubernetesGetDashboardNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubernetesGetDashboardUnauthorizedBody kubernetes get dashboard unauthorized body
swagger:model KubernetesGetDashboardUnauthorizedBody
*/
type KubernetesGetDashboardUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kubernetes get dashboard unauthorized body
func (o *KubernetesGetDashboardUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes get dashboard unauthorized body based on context it is used
func (o *KubernetesGetDashboardUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesGetDashboardUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesGetDashboardUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res KubernetesGetDashboardUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
