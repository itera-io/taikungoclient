// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// KubernetesGetDaemonSetReader is a Reader for the KubernetesGetDaemonSet structure.
type KubernetesGetDaemonSetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KubernetesGetDaemonSetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKubernetesGetDaemonSetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewKubernetesGetDaemonSetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewKubernetesGetDaemonSetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewKubernetesGetDaemonSetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewKubernetesGetDaemonSetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewKubernetesGetDaemonSetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewKubernetesGetDaemonSetOK creates a KubernetesGetDaemonSetOK with default headers values
func NewKubernetesGetDaemonSetOK() *KubernetesGetDaemonSetOK {
	return &KubernetesGetDaemonSetOK{}
}

/*
KubernetesGetDaemonSetOK describes a response with status code 200, with default header values.

Success
*/
type KubernetesGetDaemonSetOK struct {
	Payload *models.DaemonSets
}

// IsSuccess returns true when this kubernetes get daemon set o k response has a 2xx status code
func (o *KubernetesGetDaemonSetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this kubernetes get daemon set o k response has a 3xx status code
func (o *KubernetesGetDaemonSetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get daemon set o k response has a 4xx status code
func (o *KubernetesGetDaemonSetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this kubernetes get daemon set o k response has a 5xx status code
func (o *KubernetesGetDaemonSetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get daemon set o k response a status code equal to that given
func (o *KubernetesGetDaemonSetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the kubernetes get daemon set o k response
func (o *KubernetesGetDaemonSetOK) Code() int {
	return 200
}

func (o *KubernetesGetDaemonSetOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/daemonset][%d] kubernetesGetDaemonSetOK  %+v", 200, o.Payload)
}

func (o *KubernetesGetDaemonSetOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/daemonset][%d] kubernetesGetDaemonSetOK  %+v", 200, o.Payload)
}

func (o *KubernetesGetDaemonSetOK) GetPayload() *models.DaemonSets {
	return o.Payload
}

func (o *KubernetesGetDaemonSetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DaemonSets)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetDaemonSetBadRequest creates a KubernetesGetDaemonSetBadRequest with default headers values
func NewKubernetesGetDaemonSetBadRequest() *KubernetesGetDaemonSetBadRequest {
	return &KubernetesGetDaemonSetBadRequest{}
}

/*
KubernetesGetDaemonSetBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type KubernetesGetDaemonSetBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this kubernetes get daemon set bad request response has a 2xx status code
func (o *KubernetesGetDaemonSetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get daemon set bad request response has a 3xx status code
func (o *KubernetesGetDaemonSetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get daemon set bad request response has a 4xx status code
func (o *KubernetesGetDaemonSetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes get daemon set bad request response has a 5xx status code
func (o *KubernetesGetDaemonSetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get daemon set bad request response a status code equal to that given
func (o *KubernetesGetDaemonSetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the kubernetes get daemon set bad request response
func (o *KubernetesGetDaemonSetBadRequest) Code() int {
	return 400
}

func (o *KubernetesGetDaemonSetBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/daemonset][%d] kubernetesGetDaemonSetBadRequest  %+v", 400, o.Payload)
}

func (o *KubernetesGetDaemonSetBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/daemonset][%d] kubernetesGetDaemonSetBadRequest  %+v", 400, o.Payload)
}

func (o *KubernetesGetDaemonSetBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KubernetesGetDaemonSetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetDaemonSetUnauthorized creates a KubernetesGetDaemonSetUnauthorized with default headers values
func NewKubernetesGetDaemonSetUnauthorized() *KubernetesGetDaemonSetUnauthorized {
	return &KubernetesGetDaemonSetUnauthorized{}
}

/*
KubernetesGetDaemonSetUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type KubernetesGetDaemonSetUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this kubernetes get daemon set unauthorized response has a 2xx status code
func (o *KubernetesGetDaemonSetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get daemon set unauthorized response has a 3xx status code
func (o *KubernetesGetDaemonSetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get daemon set unauthorized response has a 4xx status code
func (o *KubernetesGetDaemonSetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes get daemon set unauthorized response has a 5xx status code
func (o *KubernetesGetDaemonSetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get daemon set unauthorized response a status code equal to that given
func (o *KubernetesGetDaemonSetUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the kubernetes get daemon set unauthorized response
func (o *KubernetesGetDaemonSetUnauthorized) Code() int {
	return 401
}

func (o *KubernetesGetDaemonSetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/daemonset][%d] kubernetesGetDaemonSetUnauthorized  %+v", 401, o.Payload)
}

func (o *KubernetesGetDaemonSetUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/daemonset][%d] kubernetesGetDaemonSetUnauthorized  %+v", 401, o.Payload)
}

func (o *KubernetesGetDaemonSetUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KubernetesGetDaemonSetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetDaemonSetForbidden creates a KubernetesGetDaemonSetForbidden with default headers values
func NewKubernetesGetDaemonSetForbidden() *KubernetesGetDaemonSetForbidden {
	return &KubernetesGetDaemonSetForbidden{}
}

/*
KubernetesGetDaemonSetForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type KubernetesGetDaemonSetForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this kubernetes get daemon set forbidden response has a 2xx status code
func (o *KubernetesGetDaemonSetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get daemon set forbidden response has a 3xx status code
func (o *KubernetesGetDaemonSetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get daemon set forbidden response has a 4xx status code
func (o *KubernetesGetDaemonSetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes get daemon set forbidden response has a 5xx status code
func (o *KubernetesGetDaemonSetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get daemon set forbidden response a status code equal to that given
func (o *KubernetesGetDaemonSetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the kubernetes get daemon set forbidden response
func (o *KubernetesGetDaemonSetForbidden) Code() int {
	return 403
}

func (o *KubernetesGetDaemonSetForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/daemonset][%d] kubernetesGetDaemonSetForbidden  %+v", 403, o.Payload)
}

func (o *KubernetesGetDaemonSetForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/daemonset][%d] kubernetesGetDaemonSetForbidden  %+v", 403, o.Payload)
}

func (o *KubernetesGetDaemonSetForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KubernetesGetDaemonSetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetDaemonSetNotFound creates a KubernetesGetDaemonSetNotFound with default headers values
func NewKubernetesGetDaemonSetNotFound() *KubernetesGetDaemonSetNotFound {
	return &KubernetesGetDaemonSetNotFound{}
}

/*
KubernetesGetDaemonSetNotFound describes a response with status code 404, with default header values.

Not Found
*/
type KubernetesGetDaemonSetNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this kubernetes get daemon set not found response has a 2xx status code
func (o *KubernetesGetDaemonSetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get daemon set not found response has a 3xx status code
func (o *KubernetesGetDaemonSetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get daemon set not found response has a 4xx status code
func (o *KubernetesGetDaemonSetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes get daemon set not found response has a 5xx status code
func (o *KubernetesGetDaemonSetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get daemon set not found response a status code equal to that given
func (o *KubernetesGetDaemonSetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the kubernetes get daemon set not found response
func (o *KubernetesGetDaemonSetNotFound) Code() int {
	return 404
}

func (o *KubernetesGetDaemonSetNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/daemonset][%d] kubernetesGetDaemonSetNotFound  %+v", 404, o.Payload)
}

func (o *KubernetesGetDaemonSetNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/daemonset][%d] kubernetesGetDaemonSetNotFound  %+v", 404, o.Payload)
}

func (o *KubernetesGetDaemonSetNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KubernetesGetDaemonSetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetDaemonSetInternalServerError creates a KubernetesGetDaemonSetInternalServerError with default headers values
func NewKubernetesGetDaemonSetInternalServerError() *KubernetesGetDaemonSetInternalServerError {
	return &KubernetesGetDaemonSetInternalServerError{}
}

/*
KubernetesGetDaemonSetInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type KubernetesGetDaemonSetInternalServerError struct {
}

// IsSuccess returns true when this kubernetes get daemon set internal server error response has a 2xx status code
func (o *KubernetesGetDaemonSetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get daemon set internal server error response has a 3xx status code
func (o *KubernetesGetDaemonSetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get daemon set internal server error response has a 4xx status code
func (o *KubernetesGetDaemonSetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this kubernetes get daemon set internal server error response has a 5xx status code
func (o *KubernetesGetDaemonSetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this kubernetes get daemon set internal server error response a status code equal to that given
func (o *KubernetesGetDaemonSetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the kubernetes get daemon set internal server error response
func (o *KubernetesGetDaemonSetInternalServerError) Code() int {
	return 500
}

func (o *KubernetesGetDaemonSetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/daemonset][%d] kubernetesGetDaemonSetInternalServerError ", 500)
}

func (o *KubernetesGetDaemonSetInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/daemonset][%d] kubernetesGetDaemonSetInternalServerError ", 500)
}

func (o *KubernetesGetDaemonSetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
