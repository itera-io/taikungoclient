// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// KubernetesPatchCrdReader is a Reader for the KubernetesPatchCrd structure.
type KubernetesPatchCrdReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KubernetesPatchCrdReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKubernetesPatchCrdOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewKubernetesPatchCrdBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewKubernetesPatchCrdUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewKubernetesPatchCrdForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewKubernetesPatchCrdNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewKubernetesPatchCrdInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewKubernetesPatchCrdOK creates a KubernetesPatchCrdOK with default headers values
func NewKubernetesPatchCrdOK() *KubernetesPatchCrdOK {
	return &KubernetesPatchCrdOK{}
}

/* KubernetesPatchCrdOK describes a response with status code 200, with default header values.

Success
*/
type KubernetesPatchCrdOK struct {
	Payload models.Unit
}

func (o *KubernetesPatchCrdOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/crd][%d] kubernetesPatchCrdOK  %+v", 200, o.Payload)
}
func (o *KubernetesPatchCrdOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *KubernetesPatchCrdOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesPatchCrdBadRequest creates a KubernetesPatchCrdBadRequest with default headers values
func NewKubernetesPatchCrdBadRequest() *KubernetesPatchCrdBadRequest {
	return &KubernetesPatchCrdBadRequest{}
}

/* KubernetesPatchCrdBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type KubernetesPatchCrdBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *KubernetesPatchCrdBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/crd][%d] kubernetesPatchCrdBadRequest  %+v", 400, o.Payload)
}
func (o *KubernetesPatchCrdBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *KubernetesPatchCrdBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesPatchCrdUnauthorized creates a KubernetesPatchCrdUnauthorized with default headers values
func NewKubernetesPatchCrdUnauthorized() *KubernetesPatchCrdUnauthorized {
	return &KubernetesPatchCrdUnauthorized{}
}

/* KubernetesPatchCrdUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type KubernetesPatchCrdUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *KubernetesPatchCrdUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/crd][%d] kubernetesPatchCrdUnauthorized  %+v", 401, o.Payload)
}
func (o *KubernetesPatchCrdUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KubernetesPatchCrdUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesPatchCrdForbidden creates a KubernetesPatchCrdForbidden with default headers values
func NewKubernetesPatchCrdForbidden() *KubernetesPatchCrdForbidden {
	return &KubernetesPatchCrdForbidden{}
}

/* KubernetesPatchCrdForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type KubernetesPatchCrdForbidden struct {
	Payload *models.ProblemDetails
}

func (o *KubernetesPatchCrdForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/crd][%d] kubernetesPatchCrdForbidden  %+v", 403, o.Payload)
}
func (o *KubernetesPatchCrdForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KubernetesPatchCrdForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesPatchCrdNotFound creates a KubernetesPatchCrdNotFound with default headers values
func NewKubernetesPatchCrdNotFound() *KubernetesPatchCrdNotFound {
	return &KubernetesPatchCrdNotFound{}
}

/* KubernetesPatchCrdNotFound describes a response with status code 404, with default header values.

Not Found
*/
type KubernetesPatchCrdNotFound struct {
	Payload *models.ProblemDetails
}

func (o *KubernetesPatchCrdNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/crd][%d] kubernetesPatchCrdNotFound  %+v", 404, o.Payload)
}
func (o *KubernetesPatchCrdNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KubernetesPatchCrdNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesPatchCrdInternalServerError creates a KubernetesPatchCrdInternalServerError with default headers values
func NewKubernetesPatchCrdInternalServerError() *KubernetesPatchCrdInternalServerError {
	return &KubernetesPatchCrdInternalServerError{}
}

/* KubernetesPatchCrdInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type KubernetesPatchCrdInternalServerError struct {
}

func (o *KubernetesPatchCrdInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubernetes/patch/crd][%d] kubernetesPatchCrdInternalServerError ", 500)
}

func (o *KubernetesPatchCrdInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
