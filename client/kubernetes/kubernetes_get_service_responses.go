// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// KubernetesGetServiceReader is a Reader for the KubernetesGetService structure.
type KubernetesGetServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KubernetesGetServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKubernetesGetServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewKubernetesGetServiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewKubernetesGetServiceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewKubernetesGetServiceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewKubernetesGetServiceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewKubernetesGetServiceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewKubernetesGetServiceOK creates a KubernetesGetServiceOK with default headers values
func NewKubernetesGetServiceOK() *KubernetesGetServiceOK {
	return &KubernetesGetServiceOK{}
}

/*
KubernetesGetServiceOK describes a response with status code 200, with default header values.

Success
*/
type KubernetesGetServiceOK struct {
	Payload *KubernetesGetServiceOKBody
}

// IsSuccess returns true when this kubernetes get service o k response has a 2xx status code
func (o *KubernetesGetServiceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this kubernetes get service o k response has a 3xx status code
func (o *KubernetesGetServiceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get service o k response has a 4xx status code
func (o *KubernetesGetServiceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this kubernetes get service o k response has a 5xx status code
func (o *KubernetesGetServiceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get service o k response a status code equal to that given
func (o *KubernetesGetServiceOK) IsCode(code int) bool {
	return code == 200
}

func (o *KubernetesGetServiceOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceOK  %+v", 200, o.Payload)
}

func (o *KubernetesGetServiceOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceOK  %+v", 200, o.Payload)
}

func (o *KubernetesGetServiceOK) GetPayload() *KubernetesGetServiceOKBody {
	return o.Payload
}

func (o *KubernetesGetServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubernetesGetServiceOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetServiceBadRequest creates a KubernetesGetServiceBadRequest with default headers values
func NewKubernetesGetServiceBadRequest() *KubernetesGetServiceBadRequest {
	return &KubernetesGetServiceBadRequest{}
}

/*
KubernetesGetServiceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type KubernetesGetServiceBadRequest struct {
	Payload []*KubernetesGetServiceBadRequestBodyItems0
}

// IsSuccess returns true when this kubernetes get service bad request response has a 2xx status code
func (o *KubernetesGetServiceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get service bad request response has a 3xx status code
func (o *KubernetesGetServiceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get service bad request response has a 4xx status code
func (o *KubernetesGetServiceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes get service bad request response has a 5xx status code
func (o *KubernetesGetServiceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get service bad request response a status code equal to that given
func (o *KubernetesGetServiceBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *KubernetesGetServiceBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceBadRequest  %+v", 400, o.Payload)
}

func (o *KubernetesGetServiceBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceBadRequest  %+v", 400, o.Payload)
}

func (o *KubernetesGetServiceBadRequest) GetPayload() []*KubernetesGetServiceBadRequestBodyItems0 {
	return o.Payload
}

func (o *KubernetesGetServiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetServiceUnauthorized creates a KubernetesGetServiceUnauthorized with default headers values
func NewKubernetesGetServiceUnauthorized() *KubernetesGetServiceUnauthorized {
	return &KubernetesGetServiceUnauthorized{}
}

/*
KubernetesGetServiceUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type KubernetesGetServiceUnauthorized struct {
	Payload *KubernetesGetServiceUnauthorizedBody
}

// IsSuccess returns true when this kubernetes get service unauthorized response has a 2xx status code
func (o *KubernetesGetServiceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get service unauthorized response has a 3xx status code
func (o *KubernetesGetServiceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get service unauthorized response has a 4xx status code
func (o *KubernetesGetServiceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes get service unauthorized response has a 5xx status code
func (o *KubernetesGetServiceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get service unauthorized response a status code equal to that given
func (o *KubernetesGetServiceUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *KubernetesGetServiceUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceUnauthorized  %+v", 401, o.Payload)
}

func (o *KubernetesGetServiceUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceUnauthorized  %+v", 401, o.Payload)
}

func (o *KubernetesGetServiceUnauthorized) GetPayload() *KubernetesGetServiceUnauthorizedBody {
	return o.Payload
}

func (o *KubernetesGetServiceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubernetesGetServiceUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetServiceForbidden creates a KubernetesGetServiceForbidden with default headers values
func NewKubernetesGetServiceForbidden() *KubernetesGetServiceForbidden {
	return &KubernetesGetServiceForbidden{}
}

/*
KubernetesGetServiceForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type KubernetesGetServiceForbidden struct {
	Payload *KubernetesGetServiceForbiddenBody
}

// IsSuccess returns true when this kubernetes get service forbidden response has a 2xx status code
func (o *KubernetesGetServiceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get service forbidden response has a 3xx status code
func (o *KubernetesGetServiceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get service forbidden response has a 4xx status code
func (o *KubernetesGetServiceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes get service forbidden response has a 5xx status code
func (o *KubernetesGetServiceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get service forbidden response a status code equal to that given
func (o *KubernetesGetServiceForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *KubernetesGetServiceForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceForbidden  %+v", 403, o.Payload)
}

func (o *KubernetesGetServiceForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceForbidden  %+v", 403, o.Payload)
}

func (o *KubernetesGetServiceForbidden) GetPayload() *KubernetesGetServiceForbiddenBody {
	return o.Payload
}

func (o *KubernetesGetServiceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubernetesGetServiceForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetServiceNotFound creates a KubernetesGetServiceNotFound with default headers values
func NewKubernetesGetServiceNotFound() *KubernetesGetServiceNotFound {
	return &KubernetesGetServiceNotFound{}
}

/*
KubernetesGetServiceNotFound describes a response with status code 404, with default header values.

Not Found
*/
type KubernetesGetServiceNotFound struct {
	Payload *KubernetesGetServiceNotFoundBody
}

// IsSuccess returns true when this kubernetes get service not found response has a 2xx status code
func (o *KubernetesGetServiceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get service not found response has a 3xx status code
func (o *KubernetesGetServiceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get service not found response has a 4xx status code
func (o *KubernetesGetServiceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes get service not found response has a 5xx status code
func (o *KubernetesGetServiceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get service not found response a status code equal to that given
func (o *KubernetesGetServiceNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *KubernetesGetServiceNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceNotFound  %+v", 404, o.Payload)
}

func (o *KubernetesGetServiceNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceNotFound  %+v", 404, o.Payload)
}

func (o *KubernetesGetServiceNotFound) GetPayload() *KubernetesGetServiceNotFoundBody {
	return o.Payload
}

func (o *KubernetesGetServiceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubernetesGetServiceNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetServiceInternalServerError creates a KubernetesGetServiceInternalServerError with default headers values
func NewKubernetesGetServiceInternalServerError() *KubernetesGetServiceInternalServerError {
	return &KubernetesGetServiceInternalServerError{}
}

/*
KubernetesGetServiceInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type KubernetesGetServiceInternalServerError struct {
}

// IsSuccess returns true when this kubernetes get service internal server error response has a 2xx status code
func (o *KubernetesGetServiceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get service internal server error response has a 3xx status code
func (o *KubernetesGetServiceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get service internal server error response has a 4xx status code
func (o *KubernetesGetServiceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this kubernetes get service internal server error response has a 5xx status code
func (o *KubernetesGetServiceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this kubernetes get service internal server error response a status code equal to that given
func (o *KubernetesGetServiceInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *KubernetesGetServiceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceInternalServerError ", 500)
}

func (o *KubernetesGetServiceInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceInternalServerError ", 500)
}

func (o *KubernetesGetServiceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
KubernetesGetServiceBadRequestBodyItems0 kubernetes get service bad request body items0
swagger:model KubernetesGetServiceBadRequestBodyItems0
*/
type KubernetesGetServiceBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this kubernetes get service bad request body items0
func (o *KubernetesGetServiceBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes get service bad request body items0 based on context it is used
func (o *KubernetesGetServiceBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesGetServiceBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesGetServiceBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res KubernetesGetServiceBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubernetesGetServiceForbiddenBody kubernetes get service forbidden body
swagger:model KubernetesGetServiceForbiddenBody
*/
type KubernetesGetServiceForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kubernetes get service forbidden body
func (o *KubernetesGetServiceForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes get service forbidden body based on context it is used
func (o *KubernetesGetServiceForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesGetServiceForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesGetServiceForbiddenBody) UnmarshalBinary(b []byte) error {
	var res KubernetesGetServiceForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubernetesGetServiceNotFoundBody kubernetes get service not found body
swagger:model KubernetesGetServiceNotFoundBody
*/
type KubernetesGetServiceNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kubernetes get service not found body
func (o *KubernetesGetServiceNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes get service not found body based on context it is used
func (o *KubernetesGetServiceNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesGetServiceNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesGetServiceNotFoundBody) UnmarshalBinary(b []byte) error {
	var res KubernetesGetServiceNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubernetesGetServiceOKBody kubernetes get service o k body
swagger:model KubernetesGetServiceOKBody
*/
type KubernetesGetServiceOKBody struct {

	// data
	Data []*KubernetesGetServiceOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this kubernetes get service o k body
func (o *KubernetesGetServiceOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *KubernetesGetServiceOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("kubernetesGetServiceOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("kubernetesGetServiceOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this kubernetes get service o k body based on the context it is used
func (o *KubernetesGetServiceOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *KubernetesGetServiceOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("kubernetesGetServiceOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("kubernetesGetServiceOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesGetServiceOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesGetServiceOKBody) UnmarshalBinary(b []byte) error {
	var res KubernetesGetServiceOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubernetesGetServiceOKBodyDataItems0 kubernetes get service o k body data items0
swagger:model KubernetesGetServiceOKBodyDataItems0
*/
type KubernetesGetServiceOKBodyDataItems0 struct {

	// age
	Age string `json:"age,omitempty"`

	// ip
	IP interface{} `json:"ip,omitempty"`

	// metadata name
	MetadataName string `json:"metadataName,omitempty"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kubernetes get service o k body data items0
func (o *KubernetesGetServiceOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes get service o k body data items0 based on context it is used
func (o *KubernetesGetServiceOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesGetServiceOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesGetServiceOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res KubernetesGetServiceOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubernetesGetServiceUnauthorizedBody kubernetes get service unauthorized body
swagger:model KubernetesGetServiceUnauthorizedBody
*/
type KubernetesGetServiceUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kubernetes get service unauthorized body
func (o *KubernetesGetServiceUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubernetes get service unauthorized body based on context it is used
func (o *KubernetesGetServiceUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesGetServiceUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesGetServiceUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res KubernetesGetServiceUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
