// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// KubernetesGetServiceReader is a Reader for the KubernetesGetService structure.
type KubernetesGetServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KubernetesGetServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKubernetesGetServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewKubernetesGetServiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewKubernetesGetServiceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewKubernetesGetServiceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewKubernetesGetServiceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewKubernetesGetServiceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewKubernetesGetServiceOK creates a KubernetesGetServiceOK with default headers values
func NewKubernetesGetServiceOK() *KubernetesGetServiceOK {
	return &KubernetesGetServiceOK{}
}

/*
KubernetesGetServiceOK describes a response with status code 200, with default header values.

Success
*/
type KubernetesGetServiceOK struct {
	Payload *models.Services
}

// IsSuccess returns true when this kubernetes get service o k response has a 2xx status code
func (o *KubernetesGetServiceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this kubernetes get service o k response has a 3xx status code
func (o *KubernetesGetServiceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get service o k response has a 4xx status code
func (o *KubernetesGetServiceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this kubernetes get service o k response has a 5xx status code
func (o *KubernetesGetServiceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get service o k response a status code equal to that given
func (o *KubernetesGetServiceOK) IsCode(code int) bool {
	return code == 200
}

func (o *KubernetesGetServiceOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceOK  %+v", 200, o.Payload)
}

func (o *KubernetesGetServiceOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceOK  %+v", 200, o.Payload)
}

func (o *KubernetesGetServiceOK) GetPayload() *models.Services {
	return o.Payload
}

func (o *KubernetesGetServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Services)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetServiceBadRequest creates a KubernetesGetServiceBadRequest with default headers values
func NewKubernetesGetServiceBadRequest() *KubernetesGetServiceBadRequest {
	return &KubernetesGetServiceBadRequest{}
}

/*
KubernetesGetServiceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type KubernetesGetServiceBadRequest struct {
	Payload []*models.Error
}

// IsSuccess returns true when this kubernetes get service bad request response has a 2xx status code
func (o *KubernetesGetServiceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get service bad request response has a 3xx status code
func (o *KubernetesGetServiceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get service bad request response has a 4xx status code
func (o *KubernetesGetServiceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes get service bad request response has a 5xx status code
func (o *KubernetesGetServiceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get service bad request response a status code equal to that given
func (o *KubernetesGetServiceBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *KubernetesGetServiceBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceBadRequest  %+v", 400, o.Payload)
}

func (o *KubernetesGetServiceBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceBadRequest  %+v", 400, o.Payload)
}

func (o *KubernetesGetServiceBadRequest) GetPayload() []*models.Error {
	return o.Payload
}

func (o *KubernetesGetServiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetServiceUnauthorized creates a KubernetesGetServiceUnauthorized with default headers values
func NewKubernetesGetServiceUnauthorized() *KubernetesGetServiceUnauthorized {
	return &KubernetesGetServiceUnauthorized{}
}

/*
KubernetesGetServiceUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type KubernetesGetServiceUnauthorized struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this kubernetes get service unauthorized response has a 2xx status code
func (o *KubernetesGetServiceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get service unauthorized response has a 3xx status code
func (o *KubernetesGetServiceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get service unauthorized response has a 4xx status code
func (o *KubernetesGetServiceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes get service unauthorized response has a 5xx status code
func (o *KubernetesGetServiceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get service unauthorized response a status code equal to that given
func (o *KubernetesGetServiceUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *KubernetesGetServiceUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceUnauthorized  %+v", 401, o.Payload)
}

func (o *KubernetesGetServiceUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceUnauthorized  %+v", 401, o.Payload)
}

func (o *KubernetesGetServiceUnauthorized) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *KubernetesGetServiceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetServiceForbidden creates a KubernetesGetServiceForbidden with default headers values
func NewKubernetesGetServiceForbidden() *KubernetesGetServiceForbidden {
	return &KubernetesGetServiceForbidden{}
}

/*
KubernetesGetServiceForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type KubernetesGetServiceForbidden struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this kubernetes get service forbidden response has a 2xx status code
func (o *KubernetesGetServiceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get service forbidden response has a 3xx status code
func (o *KubernetesGetServiceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get service forbidden response has a 4xx status code
func (o *KubernetesGetServiceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes get service forbidden response has a 5xx status code
func (o *KubernetesGetServiceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get service forbidden response a status code equal to that given
func (o *KubernetesGetServiceForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *KubernetesGetServiceForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceForbidden  %+v", 403, o.Payload)
}

func (o *KubernetesGetServiceForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceForbidden  %+v", 403, o.Payload)
}

func (o *KubernetesGetServiceForbidden) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *KubernetesGetServiceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetServiceNotFound creates a KubernetesGetServiceNotFound with default headers values
func NewKubernetesGetServiceNotFound() *KubernetesGetServiceNotFound {
	return &KubernetesGetServiceNotFound{}
}

/*
KubernetesGetServiceNotFound describes a response with status code 404, with default header values.

Not Found
*/
type KubernetesGetServiceNotFound struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this kubernetes get service not found response has a 2xx status code
func (o *KubernetesGetServiceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get service not found response has a 3xx status code
func (o *KubernetesGetServiceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get service not found response has a 4xx status code
func (o *KubernetesGetServiceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubernetes get service not found response has a 5xx status code
func (o *KubernetesGetServiceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this kubernetes get service not found response a status code equal to that given
func (o *KubernetesGetServiceNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *KubernetesGetServiceNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceNotFound  %+v", 404, o.Payload)
}

func (o *KubernetesGetServiceNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceNotFound  %+v", 404, o.Payload)
}

func (o *KubernetesGetServiceNotFound) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *KubernetesGetServiceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesGetServiceInternalServerError creates a KubernetesGetServiceInternalServerError with default headers values
func NewKubernetesGetServiceInternalServerError() *KubernetesGetServiceInternalServerError {
	return &KubernetesGetServiceInternalServerError{}
}

/*
KubernetesGetServiceInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type KubernetesGetServiceInternalServerError struct {
}

// IsSuccess returns true when this kubernetes get service internal server error response has a 2xx status code
func (o *KubernetesGetServiceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubernetes get service internal server error response has a 3xx status code
func (o *KubernetesGetServiceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubernetes get service internal server error response has a 4xx status code
func (o *KubernetesGetServiceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this kubernetes get service internal server error response has a 5xx status code
func (o *KubernetesGetServiceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this kubernetes get service internal server error response a status code equal to that given
func (o *KubernetesGetServiceInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *KubernetesGetServiceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceInternalServerError ", 500)
}

func (o *KubernetesGetServiceInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Kubernetes/{projectId}/service][%d] kubernetesGetServiceInternalServerError ", 500)
}

func (o *KubernetesGetServiceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
