/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the GetCatalogAppValueCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCatalogAppValueCommand{}

// GetCatalogAppValueCommand struct for GetCatalogAppValueCommand
type GetCatalogAppValueCommand struct {
	PackageId NullableString `json:"packageId,omitempty"`
	Version   NullableString `json:"version,omitempty"`
}

// NewGetCatalogAppValueCommand instantiates a new GetCatalogAppValueCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCatalogAppValueCommand() *GetCatalogAppValueCommand {
	this := GetCatalogAppValueCommand{}
	return &this
}

// NewGetCatalogAppValueCommandWithDefaults instantiates a new GetCatalogAppValueCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCatalogAppValueCommandWithDefaults() *GetCatalogAppValueCommand {
	this := GetCatalogAppValueCommand{}
	return &this
}

// GetPackageId returns the PackageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetCatalogAppValueCommand) GetPackageId() string {
	if o == nil || IsNil(o.PackageId.Get()) {
		var ret string
		return ret
	}
	return *o.PackageId.Get()
}

// GetPackageIdOk returns a tuple with the PackageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetCatalogAppValueCommand) GetPackageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PackageId.Get(), o.PackageId.IsSet()
}

// HasPackageId returns a boolean if a field has been set.
func (o *GetCatalogAppValueCommand) HasPackageId() bool {
	if o != nil && o.PackageId.IsSet() {
		return true
	}

	return false
}

// SetPackageId gets a reference to the given NullableString and assigns it to the PackageId field.
func (o *GetCatalogAppValueCommand) SetPackageId(v string) {
	o.PackageId.Set(&v)
}

// SetPackageIdNil sets the value for PackageId to be an explicit nil
func (o *GetCatalogAppValueCommand) SetPackageIdNil() {
	o.PackageId.Set(nil)
}

// UnsetPackageId ensures that no value is present for PackageId, not even an explicit nil
func (o *GetCatalogAppValueCommand) UnsetPackageId() {
	o.PackageId.Unset()
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetCatalogAppValueCommand) GetVersion() string {
	if o == nil || IsNil(o.Version.Get()) {
		var ret string
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetCatalogAppValueCommand) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *GetCatalogAppValueCommand) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableString and assigns it to the Version field.
func (o *GetCatalogAppValueCommand) SetVersion(v string) {
	o.Version.Set(&v)
}

// SetVersionNil sets the value for Version to be an explicit nil
func (o *GetCatalogAppValueCommand) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *GetCatalogAppValueCommand) UnsetVersion() {
	o.Version.Unset()
}

func (o GetCatalogAppValueCommand) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCatalogAppValueCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.PackageId.IsSet() {
		toSerialize["packageId"] = o.PackageId.Get()
	}
	if o.Version.IsSet() {
		toSerialize["version"] = o.Version.Get()
	}
	return toSerialize, nil
}

type NullableGetCatalogAppValueCommand struct {
	value *GetCatalogAppValueCommand
	isSet bool
}

func (v NullableGetCatalogAppValueCommand) Get() *GetCatalogAppValueCommand {
	return v.value
}

func (v *NullableGetCatalogAppValueCommand) Set(val *GetCatalogAppValueCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCatalogAppValueCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCatalogAppValueCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCatalogAppValueCommand(val *GetCatalogAppValueCommand) *NullableGetCatalogAppValueCommand {
	return &NullableGetCatalogAppValueCommand{value: val, isSet: true}
}

func (v NullableGetCatalogAppValueCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCatalogAppValueCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
