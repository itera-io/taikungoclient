/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the NtpCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NtpCommand{}

// NtpCommand struct for NtpCommand
type NtpCommand struct {
	Address NullableString `json:"address,omitempty"`
}

// NewNtpCommand instantiates a new NtpCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNtpCommand() *NtpCommand {
	this := NtpCommand{}
	return &this
}

// NewNtpCommandWithDefaults instantiates a new NtpCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNtpCommandWithDefaults() *NtpCommand {
	this := NtpCommand{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NtpCommand) GetAddress() string {
	if o == nil || IsNil(o.Address.Get()) {
		var ret string
		return ret
	}
	return *o.Address.Get()
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NtpCommand) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Address.Get(), o.Address.IsSet()
}

// HasAddress returns a boolean if a field has been set.
func (o *NtpCommand) HasAddress() bool {
	if o != nil && o.Address.IsSet() {
		return true
	}

	return false
}

// SetAddress gets a reference to the given NullableString and assigns it to the Address field.
func (o *NtpCommand) SetAddress(v string) {
	o.Address.Set(&v)
}

// SetAddressNil sets the value for Address to be an explicit nil
func (o *NtpCommand) SetAddressNil() {
	o.Address.Set(nil)
}

// UnsetAddress ensures that no value is present for Address, not even an explicit nil
func (o *NtpCommand) UnsetAddress() {
	o.Address.Unset()
}

func (o NtpCommand) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NtpCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Address.IsSet() {
		toSerialize["address"] = o.Address.Get()
	}
	return toSerialize, nil
}

type NullableNtpCommand struct {
	value *NtpCommand
	isSet bool
}

func (v NullableNtpCommand) Get() *NtpCommand {
	return v.value
}

func (v *NullableNtpCommand) Set(val *NtpCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableNtpCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableNtpCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNtpCommand(val *NtpCommand) *NullableNtpCommand {
	return &NullableNtpCommand{value: val, isSet: true}
}

func (v NullableNtpCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNtpCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
