/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KubeConfigForUserDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubeConfigForUserDto{}

// KubeConfigForUserDto struct for KubeConfigForUserDto
type KubeConfigForUserDto struct {
	Id int32 `json:"id"`
	UserId NullableString `json:"userId"`
	DisplayName NullableString `json:"displayName"`
	ProjectId int32 `json:"projectId"`
	OrganizationId int32 `json:"organizationId"`
	PartnerId int32 `json:"partnerId"`
	ProjectName string `json:"projectName"`
	IsAccessibleForAll bool `json:"isAccessibleForAll"`
	IsAccessibleForManager bool `json:"isAccessibleForManager"`
	KubeConfigRoleName string `json:"kubeConfigRoleName"`
	CreatedBy string `json:"createdBy"`
	CreatedAt NullableString `json:"createdAt"`
	Namespace NullableString `json:"namespace"`
	ExpirationDate NullableString `json:"expirationDate"`
	CanDownload bool `json:"canDownload"`
	CanAccessTerminal bool `json:"canAccessTerminal"`
	CanDelete bool `json:"canDelete"`
}

type _KubeConfigForUserDto KubeConfigForUserDto

// NewKubeConfigForUserDto instantiates a new KubeConfigForUserDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubeConfigForUserDto(id int32, userId NullableString, displayName NullableString, projectId int32, organizationId int32, partnerId int32, projectName string, isAccessibleForAll bool, isAccessibleForManager bool, kubeConfigRoleName string, createdBy string, createdAt NullableString, namespace NullableString, expirationDate NullableString, canDownload bool, canAccessTerminal bool, canDelete bool) *KubeConfigForUserDto {
	this := KubeConfigForUserDto{}
	this.Id = id
	this.UserId = userId
	this.DisplayName = displayName
	this.ProjectId = projectId
	this.OrganizationId = organizationId
	this.PartnerId = partnerId
	this.ProjectName = projectName
	this.IsAccessibleForAll = isAccessibleForAll
	this.IsAccessibleForManager = isAccessibleForManager
	this.KubeConfigRoleName = kubeConfigRoleName
	this.CreatedBy = createdBy
	this.CreatedAt = createdAt
	this.Namespace = namespace
	this.ExpirationDate = expirationDate
	this.CanDownload = canDownload
	this.CanAccessTerminal = canAccessTerminal
	this.CanDelete = canDelete
	return &this
}

// NewKubeConfigForUserDtoWithDefaults instantiates a new KubeConfigForUserDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubeConfigForUserDtoWithDefaults() *KubeConfigForUserDto {
	this := KubeConfigForUserDto{}
	return &this
}

// GetId returns the Id field value
func (o *KubeConfigForUserDto) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *KubeConfigForUserDto) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *KubeConfigForUserDto) SetId(v int32) {
	o.Id = v
}

// GetUserId returns the UserId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *KubeConfigForUserDto) GetUserId() string {
	if o == nil || o.UserId.Get() == nil {
		var ret string
		return ret
	}

	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubeConfigForUserDto) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// SetUserId sets field value
func (o *KubeConfigForUserDto) SetUserId(v string) {
	o.UserId.Set(&v)
}

// GetDisplayName returns the DisplayName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *KubeConfigForUserDto) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}

	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubeConfigForUserDto) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// SetDisplayName sets field value
func (o *KubeConfigForUserDto) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}

// GetProjectId returns the ProjectId field value
func (o *KubeConfigForUserDto) GetProjectId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *KubeConfigForUserDto) GetProjectIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *KubeConfigForUserDto) SetProjectId(v int32) {
	o.ProjectId = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *KubeConfigForUserDto) GetOrganizationId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *KubeConfigForUserDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *KubeConfigForUserDto) SetOrganizationId(v int32) {
	o.OrganizationId = v
}

// GetPartnerId returns the PartnerId field value
func (o *KubeConfigForUserDto) GetPartnerId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value
// and a boolean to check if the value has been set.
func (o *KubeConfigForUserDto) GetPartnerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartnerId, true
}

// SetPartnerId sets field value
func (o *KubeConfigForUserDto) SetPartnerId(v int32) {
	o.PartnerId = v
}

// GetProjectName returns the ProjectName field value
func (o *KubeConfigForUserDto) GetProjectName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value
// and a boolean to check if the value has been set.
func (o *KubeConfigForUserDto) GetProjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectName, true
}

// SetProjectName sets field value
func (o *KubeConfigForUserDto) SetProjectName(v string) {
	o.ProjectName = v
}

// GetIsAccessibleForAll returns the IsAccessibleForAll field value
func (o *KubeConfigForUserDto) GetIsAccessibleForAll() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsAccessibleForAll
}

// GetIsAccessibleForAllOk returns a tuple with the IsAccessibleForAll field value
// and a boolean to check if the value has been set.
func (o *KubeConfigForUserDto) GetIsAccessibleForAllOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsAccessibleForAll, true
}

// SetIsAccessibleForAll sets field value
func (o *KubeConfigForUserDto) SetIsAccessibleForAll(v bool) {
	o.IsAccessibleForAll = v
}

// GetIsAccessibleForManager returns the IsAccessibleForManager field value
func (o *KubeConfigForUserDto) GetIsAccessibleForManager() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsAccessibleForManager
}

// GetIsAccessibleForManagerOk returns a tuple with the IsAccessibleForManager field value
// and a boolean to check if the value has been set.
func (o *KubeConfigForUserDto) GetIsAccessibleForManagerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsAccessibleForManager, true
}

// SetIsAccessibleForManager sets field value
func (o *KubeConfigForUserDto) SetIsAccessibleForManager(v bool) {
	o.IsAccessibleForManager = v
}

// GetKubeConfigRoleName returns the KubeConfigRoleName field value
func (o *KubeConfigForUserDto) GetKubeConfigRoleName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KubeConfigRoleName
}

// GetKubeConfigRoleNameOk returns a tuple with the KubeConfigRoleName field value
// and a boolean to check if the value has been set.
func (o *KubeConfigForUserDto) GetKubeConfigRoleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KubeConfigRoleName, true
}

// SetKubeConfigRoleName sets field value
func (o *KubeConfigForUserDto) SetKubeConfigRoleName(v string) {
	o.KubeConfigRoleName = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *KubeConfigForUserDto) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *KubeConfigForUserDto) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *KubeConfigForUserDto) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetCreatedAt returns the CreatedAt field value
// If the value is explicit nil, the zero value for string will be returned
func (o *KubeConfigForUserDto) GetCreatedAt() string {
	if o == nil || o.CreatedAt.Get() == nil {
		var ret string
		return ret
	}

	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubeConfigForUserDto) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// SetCreatedAt sets field value
func (o *KubeConfigForUserDto) SetCreatedAt(v string) {
	o.CreatedAt.Set(&v)
}

// GetNamespace returns the Namespace field value
// If the value is explicit nil, the zero value for string will be returned
func (o *KubeConfigForUserDto) GetNamespace() string {
	if o == nil || o.Namespace.Get() == nil {
		var ret string
		return ret
	}

	return *o.Namespace.Get()
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubeConfigForUserDto) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Namespace.Get(), o.Namespace.IsSet()
}

// SetNamespace sets field value
func (o *KubeConfigForUserDto) SetNamespace(v string) {
	o.Namespace.Set(&v)
}

// GetExpirationDate returns the ExpirationDate field value
// If the value is explicit nil, the zero value for string will be returned
func (o *KubeConfigForUserDto) GetExpirationDate() string {
	if o == nil || o.ExpirationDate.Get() == nil {
		var ret string
		return ret
	}

	return *o.ExpirationDate.Get()
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KubeConfigForUserDto) GetExpirationDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpirationDate.Get(), o.ExpirationDate.IsSet()
}

// SetExpirationDate sets field value
func (o *KubeConfigForUserDto) SetExpirationDate(v string) {
	o.ExpirationDate.Set(&v)
}

// GetCanDownload returns the CanDownload field value
func (o *KubeConfigForUserDto) GetCanDownload() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CanDownload
}

// GetCanDownloadOk returns a tuple with the CanDownload field value
// and a boolean to check if the value has been set.
func (o *KubeConfigForUserDto) GetCanDownloadOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CanDownload, true
}

// SetCanDownload sets field value
func (o *KubeConfigForUserDto) SetCanDownload(v bool) {
	o.CanDownload = v
}

// GetCanAccessTerminal returns the CanAccessTerminal field value
func (o *KubeConfigForUserDto) GetCanAccessTerminal() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CanAccessTerminal
}

// GetCanAccessTerminalOk returns a tuple with the CanAccessTerminal field value
// and a boolean to check if the value has been set.
func (o *KubeConfigForUserDto) GetCanAccessTerminalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CanAccessTerminal, true
}

// SetCanAccessTerminal sets field value
func (o *KubeConfigForUserDto) SetCanAccessTerminal(v bool) {
	o.CanAccessTerminal = v
}

// GetCanDelete returns the CanDelete field value
func (o *KubeConfigForUserDto) GetCanDelete() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CanDelete
}

// GetCanDeleteOk returns a tuple with the CanDelete field value
// and a boolean to check if the value has been set.
func (o *KubeConfigForUserDto) GetCanDeleteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CanDelete, true
}

// SetCanDelete sets field value
func (o *KubeConfigForUserDto) SetCanDelete(v bool) {
	o.CanDelete = v
}

func (o KubeConfigForUserDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubeConfigForUserDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["userId"] = o.UserId.Get()
	toSerialize["displayName"] = o.DisplayName.Get()
	toSerialize["projectId"] = o.ProjectId
	toSerialize["organizationId"] = o.OrganizationId
	toSerialize["partnerId"] = o.PartnerId
	toSerialize["projectName"] = o.ProjectName
	toSerialize["isAccessibleForAll"] = o.IsAccessibleForAll
	toSerialize["isAccessibleForManager"] = o.IsAccessibleForManager
	toSerialize["kubeConfigRoleName"] = o.KubeConfigRoleName
	toSerialize["createdBy"] = o.CreatedBy
	toSerialize["createdAt"] = o.CreatedAt.Get()
	toSerialize["namespace"] = o.Namespace.Get()
	toSerialize["expirationDate"] = o.ExpirationDate.Get()
	toSerialize["canDownload"] = o.CanDownload
	toSerialize["canAccessTerminal"] = o.CanAccessTerminal
	toSerialize["canDelete"] = o.CanDelete
	return toSerialize, nil
}

func (o *KubeConfigForUserDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"userId",
		"displayName",
		"projectId",
		"organizationId",
		"partnerId",
		"projectName",
		"isAccessibleForAll",
		"isAccessibleForManager",
		"kubeConfigRoleName",
		"createdBy",
		"createdAt",
		"namespace",
		"expirationDate",
		"canDownload",
		"canAccessTerminal",
		"canDelete",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKubeConfigForUserDto := _KubeConfigForUserDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKubeConfigForUserDto)

	if err != nil {
		return err
	}

	*o = KubeConfigForUserDto(varKubeConfigForUserDto)

	return err
}

type NullableKubeConfigForUserDto struct {
	value *KubeConfigForUserDto
	isSet bool
}

func (v NullableKubeConfigForUserDto) Get() *KubeConfigForUserDto {
	return v.value
}

func (v *NullableKubeConfigForUserDto) Set(val *KubeConfigForUserDto) {
	v.value = val
	v.isSet = true
}

func (v NullableKubeConfigForUserDto) IsSet() bool {
	return v.isSet
}

func (v *NullableKubeConfigForUserDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubeConfigForUserDto(val *KubeConfigForUserDto) *NullableKubeConfigForUserDto {
	return &NullableKubeConfigForUserDto{value: val, isSet: true}
}

func (v NullableKubeConfigForUserDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubeConfigForUserDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


