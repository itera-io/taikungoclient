/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SlackConfigurationDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SlackConfigurationDto{}

// SlackConfigurationDto struct for SlackConfigurationDto
type SlackConfigurationDto struct {
	Id int32 `json:"id"`
	Name NullableString `json:"name"`
	Url NullableString `json:"url"`
	Channel NullableString `json:"channel"`
	OrganizationName NullableString `json:"organizationName"`
	OrganizationId NullableInt32 `json:"organizationId"`
	SlackType SlackType `json:"slackType"`
}

type _SlackConfigurationDto SlackConfigurationDto

// NewSlackConfigurationDto instantiates a new SlackConfigurationDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSlackConfigurationDto(id int32, name NullableString, url NullableString, channel NullableString, organizationName NullableString, organizationId NullableInt32, slackType SlackType) *SlackConfigurationDto {
	this := SlackConfigurationDto{}
	this.Id = id
	this.Name = name
	this.Url = url
	this.Channel = channel
	this.OrganizationName = organizationName
	this.OrganizationId = organizationId
	this.SlackType = slackType
	return &this
}

// NewSlackConfigurationDtoWithDefaults instantiates a new SlackConfigurationDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSlackConfigurationDtoWithDefaults() *SlackConfigurationDto {
	this := SlackConfigurationDto{}
	return &this
}

// GetId returns the Id field value
func (o *SlackConfigurationDto) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SlackConfigurationDto) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SlackConfigurationDto) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SlackConfigurationDto) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlackConfigurationDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *SlackConfigurationDto) SetName(v string) {
	o.Name.Set(&v)
}

// GetUrl returns the Url field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SlackConfigurationDto) GetUrl() string {
	if o == nil || o.Url.Get() == nil {
		var ret string
		return ret
	}

	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlackConfigurationDto) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// SetUrl sets field value
func (o *SlackConfigurationDto) SetUrl(v string) {
	o.Url.Set(&v)
}

// GetChannel returns the Channel field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SlackConfigurationDto) GetChannel() string {
	if o == nil || o.Channel.Get() == nil {
		var ret string
		return ret
	}

	return *o.Channel.Get()
}

// GetChannelOk returns a tuple with the Channel field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlackConfigurationDto) GetChannelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Channel.Get(), o.Channel.IsSet()
}

// SetChannel sets field value
func (o *SlackConfigurationDto) SetChannel(v string) {
	o.Channel.Set(&v)
}

// GetOrganizationName returns the OrganizationName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SlackConfigurationDto) GetOrganizationName() string {
	if o == nil || o.OrganizationName.Get() == nil {
		var ret string
		return ret
	}

	return *o.OrganizationName.Get()
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlackConfigurationDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationName.Get(), o.OrganizationName.IsSet()
}

// SetOrganizationName sets field value
func (o *SlackConfigurationDto) SetOrganizationName(v string) {
	o.OrganizationName.Set(&v)
}

// GetOrganizationId returns the OrganizationId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *SlackConfigurationDto) GetOrganizationId() int32 {
	if o == nil || o.OrganizationId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.OrganizationId.Get()
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlackConfigurationDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationId.Get(), o.OrganizationId.IsSet()
}

// SetOrganizationId sets field value
func (o *SlackConfigurationDto) SetOrganizationId(v int32) {
	o.OrganizationId.Set(&v)
}

// GetSlackType returns the SlackType field value
func (o *SlackConfigurationDto) GetSlackType() SlackType {
	if o == nil {
		var ret SlackType
		return ret
	}

	return o.SlackType
}

// GetSlackTypeOk returns a tuple with the SlackType field value
// and a boolean to check if the value has been set.
func (o *SlackConfigurationDto) GetSlackTypeOk() (*SlackType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SlackType, true
}

// SetSlackType sets field value
func (o *SlackConfigurationDto) SetSlackType(v SlackType) {
	o.SlackType = v
}

func (o SlackConfigurationDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SlackConfigurationDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name.Get()
	toSerialize["url"] = o.Url.Get()
	toSerialize["channel"] = o.Channel.Get()
	toSerialize["organizationName"] = o.OrganizationName.Get()
	toSerialize["organizationId"] = o.OrganizationId.Get()
	toSerialize["slackType"] = o.SlackType
	return toSerialize, nil
}

func (o *SlackConfigurationDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"url",
		"channel",
		"organizationName",
		"organizationId",
		"slackType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSlackConfigurationDto := _SlackConfigurationDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSlackConfigurationDto)

	if err != nil {
		return err
	}

	*o = SlackConfigurationDto(varSlackConfigurationDto)

	return err
}

type NullableSlackConfigurationDto struct {
	value *SlackConfigurationDto
	isSet bool
}

func (v NullableSlackConfigurationDto) Get() *SlackConfigurationDto {
	return v.value
}

func (v *NullableSlackConfigurationDto) Set(val *SlackConfigurationDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSlackConfigurationDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSlackConfigurationDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSlackConfigurationDto(val *SlackConfigurationDto) *NullableSlackConfigurationDto {
	return &NullableSlackConfigurationDto{value: val, isSet: true}
}

func (v NullableSlackConfigurationDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSlackConfigurationDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


