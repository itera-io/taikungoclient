/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the SlackConfigurationDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SlackConfigurationDto{}

// SlackConfigurationDto struct for SlackConfigurationDto
type SlackConfigurationDto struct {
	Id               *int32         `json:"id,omitempty"`
	Name             NullableString `json:"name,omitempty"`
	Url              NullableString `json:"url,omitempty"`
	Channel          NullableString `json:"channel,omitempty"`
	OrganizationName NullableString `json:"organizationName,omitempty"`
	OrganizationId   NullableInt32  `json:"organizationId,omitempty"`
	SlackType        *SlackType     `json:"slackType,omitempty"`
}

// NewSlackConfigurationDto instantiates a new SlackConfigurationDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSlackConfigurationDto() *SlackConfigurationDto {
	this := SlackConfigurationDto{}
	return &this
}

// NewSlackConfigurationDtoWithDefaults instantiates a new SlackConfigurationDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSlackConfigurationDtoWithDefaults() *SlackConfigurationDto {
	this := SlackConfigurationDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SlackConfigurationDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlackConfigurationDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SlackConfigurationDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *SlackConfigurationDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SlackConfigurationDto) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlackConfigurationDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *SlackConfigurationDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *SlackConfigurationDto) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *SlackConfigurationDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *SlackConfigurationDto) UnsetName() {
	o.Name.Unset()
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SlackConfigurationDto) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlackConfigurationDto) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *SlackConfigurationDto) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *SlackConfigurationDto) SetUrl(v string) {
	o.Url.Set(&v)
}

// SetUrlNil sets the value for Url to be an explicit nil
func (o *SlackConfigurationDto) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *SlackConfigurationDto) UnsetUrl() {
	o.Url.Unset()
}

// GetChannel returns the Channel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SlackConfigurationDto) GetChannel() string {
	if o == nil || IsNil(o.Channel.Get()) {
		var ret string
		return ret
	}
	return *o.Channel.Get()
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlackConfigurationDto) GetChannelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Channel.Get(), o.Channel.IsSet()
}

// HasChannel returns a boolean if a field has been set.
func (o *SlackConfigurationDto) HasChannel() bool {
	if o != nil && o.Channel.IsSet() {
		return true
	}

	return false
}

// SetChannel gets a reference to the given NullableString and assigns it to the Channel field.
func (o *SlackConfigurationDto) SetChannel(v string) {
	o.Channel.Set(&v)
}

// SetChannelNil sets the value for Channel to be an explicit nil
func (o *SlackConfigurationDto) SetChannelNil() {
	o.Channel.Set(nil)
}

// UnsetChannel ensures that no value is present for Channel, not even an explicit nil
func (o *SlackConfigurationDto) UnsetChannel() {
	o.Channel.Unset()
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SlackConfigurationDto) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizationName.Get()
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlackConfigurationDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationName.Get(), o.OrganizationName.IsSet()
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *SlackConfigurationDto) HasOrganizationName() bool {
	if o != nil && o.OrganizationName.IsSet() {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given NullableString and assigns it to the OrganizationName field.
func (o *SlackConfigurationDto) SetOrganizationName(v string) {
	o.OrganizationName.Set(&v)
}

// SetOrganizationNameNil sets the value for OrganizationName to be an explicit nil
func (o *SlackConfigurationDto) SetOrganizationNameNil() {
	o.OrganizationName.Set(nil)
}

// UnsetOrganizationName ensures that no value is present for OrganizationName, not even an explicit nil
func (o *SlackConfigurationDto) UnsetOrganizationName() {
	o.OrganizationName.Unset()
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SlackConfigurationDto) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId.Get()) {
		var ret int32
		return ret
	}
	return *o.OrganizationId.Get()
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlackConfigurationDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationId.Get(), o.OrganizationId.IsSet()
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *SlackConfigurationDto) HasOrganizationId() bool {
	if o != nil && o.OrganizationId.IsSet() {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given NullableInt32 and assigns it to the OrganizationId field.
func (o *SlackConfigurationDto) SetOrganizationId(v int32) {
	o.OrganizationId.Set(&v)
}

// SetOrganizationIdNil sets the value for OrganizationId to be an explicit nil
func (o *SlackConfigurationDto) SetOrganizationIdNil() {
	o.OrganizationId.Set(nil)
}

// UnsetOrganizationId ensures that no value is present for OrganizationId, not even an explicit nil
func (o *SlackConfigurationDto) UnsetOrganizationId() {
	o.OrganizationId.Unset()
}

// GetSlackType returns the SlackType field value if set, zero value otherwise.
func (o *SlackConfigurationDto) GetSlackType() SlackType {
	if o == nil || IsNil(o.SlackType) {
		var ret SlackType
		return ret
	}
	return *o.SlackType
}

// GetSlackTypeOk returns a tuple with the SlackType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlackConfigurationDto) GetSlackTypeOk() (*SlackType, bool) {
	if o == nil || IsNil(o.SlackType) {
		return nil, false
	}
	return o.SlackType, true
}

// HasSlackType returns a boolean if a field has been set.
func (o *SlackConfigurationDto) HasSlackType() bool {
	if o != nil && !IsNil(o.SlackType) {
		return true
	}

	return false
}

// SetSlackType gets a reference to the given SlackType and assigns it to the SlackType field.
func (o *SlackConfigurationDto) SetSlackType(v SlackType) {
	o.SlackType = &v
}

func (o SlackConfigurationDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SlackConfigurationDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if o.Channel.IsSet() {
		toSerialize["channel"] = o.Channel.Get()
	}
	if o.OrganizationName.IsSet() {
		toSerialize["organizationName"] = o.OrganizationName.Get()
	}
	if o.OrganizationId.IsSet() {
		toSerialize["organizationId"] = o.OrganizationId.Get()
	}
	if !IsNil(o.SlackType) {
		toSerialize["slackType"] = o.SlackType
	}
	return toSerialize, nil
}

type NullableSlackConfigurationDto struct {
	value *SlackConfigurationDto
	isSet bool
}

func (v NullableSlackConfigurationDto) Get() *SlackConfigurationDto {
	return v.value
}

func (v *NullableSlackConfigurationDto) Set(val *SlackConfigurationDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSlackConfigurationDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSlackConfigurationDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSlackConfigurationDto(val *SlackConfigurationDto) *NullableSlackConfigurationDto {
	return &NullableSlackConfigurationDto{value: val, isSet: true}
}

func (v NullableSlackConfigurationDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSlackConfigurationDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
