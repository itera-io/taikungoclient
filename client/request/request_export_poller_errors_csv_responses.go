// Code generated by go-swagger; DO NOT EDIT.

package request

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// RequestExportPollerErrorsCsvReader is a Reader for the RequestExportPollerErrorsCsv structure.
type RequestExportPollerErrorsCsvReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RequestExportPollerErrorsCsvReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRequestExportPollerErrorsCsvOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRequestExportPollerErrorsCsvBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRequestExportPollerErrorsCsvUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRequestExportPollerErrorsCsvForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRequestExportPollerErrorsCsvNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRequestExportPollerErrorsCsvInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRequestExportPollerErrorsCsvOK creates a RequestExportPollerErrorsCsvOK with default headers values
func NewRequestExportPollerErrorsCsvOK() *RequestExportPollerErrorsCsvOK {
	return &RequestExportPollerErrorsCsvOK{}
}

/* RequestExportPollerErrorsCsvOK describes a response with status code 200, with default header values.

Success
*/
type RequestExportPollerErrorsCsvOK struct {
}

func (o *RequestExportPollerErrorsCsvOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Request/download-errors][%d] requestExportPollerErrorsCsvOK ", 200)
}

func (o *RequestExportPollerErrorsCsvOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRequestExportPollerErrorsCsvBadRequest creates a RequestExportPollerErrorsCsvBadRequest with default headers values
func NewRequestExportPollerErrorsCsvBadRequest() *RequestExportPollerErrorsCsvBadRequest {
	return &RequestExportPollerErrorsCsvBadRequest{}
}

/* RequestExportPollerErrorsCsvBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RequestExportPollerErrorsCsvBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *RequestExportPollerErrorsCsvBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Request/download-errors][%d] requestExportPollerErrorsCsvBadRequest  %+v", 400, o.Payload)
}
func (o *RequestExportPollerErrorsCsvBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *RequestExportPollerErrorsCsvBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestExportPollerErrorsCsvUnauthorized creates a RequestExportPollerErrorsCsvUnauthorized with default headers values
func NewRequestExportPollerErrorsCsvUnauthorized() *RequestExportPollerErrorsCsvUnauthorized {
	return &RequestExportPollerErrorsCsvUnauthorized{}
}

/* RequestExportPollerErrorsCsvUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RequestExportPollerErrorsCsvUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *RequestExportPollerErrorsCsvUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Request/download-errors][%d] requestExportPollerErrorsCsvUnauthorized  %+v", 401, o.Payload)
}
func (o *RequestExportPollerErrorsCsvUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *RequestExportPollerErrorsCsvUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestExportPollerErrorsCsvForbidden creates a RequestExportPollerErrorsCsvForbidden with default headers values
func NewRequestExportPollerErrorsCsvForbidden() *RequestExportPollerErrorsCsvForbidden {
	return &RequestExportPollerErrorsCsvForbidden{}
}

/* RequestExportPollerErrorsCsvForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RequestExportPollerErrorsCsvForbidden struct {
	Payload *models.ProblemDetails
}

func (o *RequestExportPollerErrorsCsvForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Request/download-errors][%d] requestExportPollerErrorsCsvForbidden  %+v", 403, o.Payload)
}
func (o *RequestExportPollerErrorsCsvForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *RequestExportPollerErrorsCsvForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestExportPollerErrorsCsvNotFound creates a RequestExportPollerErrorsCsvNotFound with default headers values
func NewRequestExportPollerErrorsCsvNotFound() *RequestExportPollerErrorsCsvNotFound {
	return &RequestExportPollerErrorsCsvNotFound{}
}

/* RequestExportPollerErrorsCsvNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RequestExportPollerErrorsCsvNotFound struct {
	Payload *models.ProblemDetails
}

func (o *RequestExportPollerErrorsCsvNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Request/download-errors][%d] requestExportPollerErrorsCsvNotFound  %+v", 404, o.Payload)
}
func (o *RequestExportPollerErrorsCsvNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *RequestExportPollerErrorsCsvNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestExportPollerErrorsCsvInternalServerError creates a RequestExportPollerErrorsCsvInternalServerError with default headers values
func NewRequestExportPollerErrorsCsvInternalServerError() *RequestExportPollerErrorsCsvInternalServerError {
	return &RequestExportPollerErrorsCsvInternalServerError{}
}

/* RequestExportPollerErrorsCsvInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type RequestExportPollerErrorsCsvInternalServerError struct {
}

func (o *RequestExportPollerErrorsCsvInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Request/download-errors][%d] requestExportPollerErrorsCsvInternalServerError ", 500)
}

func (o *RequestExportPollerErrorsCsvInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
