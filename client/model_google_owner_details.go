/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the GoogleOwnerDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoogleOwnerDetails{}

// GoogleOwnerDetails struct for GoogleOwnerDetails
type GoogleOwnerDetails struct {
	Owner NullableString      `json:"owner,omitempty"`
	Image *GoogleCommonImages `json:"image,omitempty"`
}

// NewGoogleOwnerDetails instantiates a new GoogleOwnerDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoogleOwnerDetails() *GoogleOwnerDetails {
	this := GoogleOwnerDetails{}
	return &this
}

// NewGoogleOwnerDetailsWithDefaults instantiates a new GoogleOwnerDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleOwnerDetailsWithDefaults() *GoogleOwnerDetails {
	this := GoogleOwnerDetails{}
	return &this
}

// GetOwner returns the Owner field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GoogleOwnerDetails) GetOwner() string {
	if o == nil || IsNil(o.Owner.Get()) {
		var ret string
		return ret
	}
	return *o.Owner.Get()
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GoogleOwnerDetails) GetOwnerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Owner.Get(), o.Owner.IsSet()
}

// HasOwner returns a boolean if a field has been set.
func (o *GoogleOwnerDetails) HasOwner() bool {
	if o != nil && o.Owner.IsSet() {
		return true
	}

	return false
}

// SetOwner gets a reference to the given NullableString and assigns it to the Owner field.
func (o *GoogleOwnerDetails) SetOwner(v string) {
	o.Owner.Set(&v)
}

// SetOwnerNil sets the value for Owner to be an explicit nil
func (o *GoogleOwnerDetails) SetOwnerNil() {
	o.Owner.Set(nil)
}

// UnsetOwner ensures that no value is present for Owner, not even an explicit nil
func (o *GoogleOwnerDetails) UnsetOwner() {
	o.Owner.Unset()
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *GoogleOwnerDetails) GetImage() GoogleCommonImages {
	if o == nil || IsNil(o.Image) {
		var ret GoogleCommonImages
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoogleOwnerDetails) GetImageOk() (*GoogleCommonImages, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *GoogleOwnerDetails) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given GoogleCommonImages and assigns it to the Image field.
func (o *GoogleOwnerDetails) SetImage(v GoogleCommonImages) {
	o.Image = &v
}

func (o GoogleOwnerDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoogleOwnerDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Owner.IsSet() {
		toSerialize["owner"] = o.Owner.Get()
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	return toSerialize, nil
}

type NullableGoogleOwnerDetails struct {
	value *GoogleOwnerDetails
	isSet bool
}

func (v NullableGoogleOwnerDetails) Get() *GoogleOwnerDetails {
	return v.value
}

func (v *NullableGoogleOwnerDetails) Set(val *GoogleOwnerDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableGoogleOwnerDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableGoogleOwnerDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoogleOwnerDetails(val *GoogleOwnerDetails) *NullableGoogleOwnerDetails {
	return &NullableGoogleOwnerDetails{value: val, isSet: true}
}

func (v NullableGoogleOwnerDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoogleOwnerDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
