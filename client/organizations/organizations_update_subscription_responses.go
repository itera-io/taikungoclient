// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// OrganizationsUpdateSubscriptionReader is a Reader for the OrganizationsUpdateSubscription structure.
type OrganizationsUpdateSubscriptionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrganizationsUpdateSubscriptionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrganizationsUpdateSubscriptionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOrganizationsUpdateSubscriptionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewOrganizationsUpdateSubscriptionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewOrganizationsUpdateSubscriptionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOrganizationsUpdateSubscriptionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewOrganizationsUpdateSubscriptionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOrganizationsUpdateSubscriptionOK creates a OrganizationsUpdateSubscriptionOK with default headers values
func NewOrganizationsUpdateSubscriptionOK() *OrganizationsUpdateSubscriptionOK {
	return &OrganizationsUpdateSubscriptionOK{}
}

/*
OrganizationsUpdateSubscriptionOK describes a response with status code 200, with default header values.

Success
*/
type OrganizationsUpdateSubscriptionOK struct {
	Payload interface{}
}

// IsSuccess returns true when this organizations update subscription o k response has a 2xx status code
func (o *OrganizationsUpdateSubscriptionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this organizations update subscription o k response has a 3xx status code
func (o *OrganizationsUpdateSubscriptionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations update subscription o k response has a 4xx status code
func (o *OrganizationsUpdateSubscriptionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this organizations update subscription o k response has a 5xx status code
func (o *OrganizationsUpdateSubscriptionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations update subscription o k response a status code equal to that given
func (o *OrganizationsUpdateSubscriptionOK) IsCode(code int) bool {
	return code == 200
}

func (o *OrganizationsUpdateSubscriptionOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/updatesubscription][%d] organizationsUpdateSubscriptionOK  %+v", 200, o.Payload)
}

func (o *OrganizationsUpdateSubscriptionOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/updatesubscription][%d] organizationsUpdateSubscriptionOK  %+v", 200, o.Payload)
}

func (o *OrganizationsUpdateSubscriptionOK) GetPayload() interface{} {
	return o.Payload
}

func (o *OrganizationsUpdateSubscriptionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsUpdateSubscriptionBadRequest creates a OrganizationsUpdateSubscriptionBadRequest with default headers values
func NewOrganizationsUpdateSubscriptionBadRequest() *OrganizationsUpdateSubscriptionBadRequest {
	return &OrganizationsUpdateSubscriptionBadRequest{}
}

/*
OrganizationsUpdateSubscriptionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type OrganizationsUpdateSubscriptionBadRequest struct {
	Payload []*OrganizationsUpdateSubscriptionBadRequestBodyItems0
}

// IsSuccess returns true when this organizations update subscription bad request response has a 2xx status code
func (o *OrganizationsUpdateSubscriptionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations update subscription bad request response has a 3xx status code
func (o *OrganizationsUpdateSubscriptionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations update subscription bad request response has a 4xx status code
func (o *OrganizationsUpdateSubscriptionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this organizations update subscription bad request response has a 5xx status code
func (o *OrganizationsUpdateSubscriptionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations update subscription bad request response a status code equal to that given
func (o *OrganizationsUpdateSubscriptionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *OrganizationsUpdateSubscriptionBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/updatesubscription][%d] organizationsUpdateSubscriptionBadRequest  %+v", 400, o.Payload)
}

func (o *OrganizationsUpdateSubscriptionBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/updatesubscription][%d] organizationsUpdateSubscriptionBadRequest  %+v", 400, o.Payload)
}

func (o *OrganizationsUpdateSubscriptionBadRequest) GetPayload() []*OrganizationsUpdateSubscriptionBadRequestBodyItems0 {
	return o.Payload
}

func (o *OrganizationsUpdateSubscriptionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsUpdateSubscriptionUnauthorized creates a OrganizationsUpdateSubscriptionUnauthorized with default headers values
func NewOrganizationsUpdateSubscriptionUnauthorized() *OrganizationsUpdateSubscriptionUnauthorized {
	return &OrganizationsUpdateSubscriptionUnauthorized{}
}

/*
OrganizationsUpdateSubscriptionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type OrganizationsUpdateSubscriptionUnauthorized struct {
	Payload *OrganizationsUpdateSubscriptionUnauthorizedBody
}

// IsSuccess returns true when this organizations update subscription unauthorized response has a 2xx status code
func (o *OrganizationsUpdateSubscriptionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations update subscription unauthorized response has a 3xx status code
func (o *OrganizationsUpdateSubscriptionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations update subscription unauthorized response has a 4xx status code
func (o *OrganizationsUpdateSubscriptionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this organizations update subscription unauthorized response has a 5xx status code
func (o *OrganizationsUpdateSubscriptionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations update subscription unauthorized response a status code equal to that given
func (o *OrganizationsUpdateSubscriptionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *OrganizationsUpdateSubscriptionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/updatesubscription][%d] organizationsUpdateSubscriptionUnauthorized  %+v", 401, o.Payload)
}

func (o *OrganizationsUpdateSubscriptionUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/updatesubscription][%d] organizationsUpdateSubscriptionUnauthorized  %+v", 401, o.Payload)
}

func (o *OrganizationsUpdateSubscriptionUnauthorized) GetPayload() *OrganizationsUpdateSubscriptionUnauthorizedBody {
	return o.Payload
}

func (o *OrganizationsUpdateSubscriptionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OrganizationsUpdateSubscriptionUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsUpdateSubscriptionForbidden creates a OrganizationsUpdateSubscriptionForbidden with default headers values
func NewOrganizationsUpdateSubscriptionForbidden() *OrganizationsUpdateSubscriptionForbidden {
	return &OrganizationsUpdateSubscriptionForbidden{}
}

/*
OrganizationsUpdateSubscriptionForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type OrganizationsUpdateSubscriptionForbidden struct {
	Payload *OrganizationsUpdateSubscriptionForbiddenBody
}

// IsSuccess returns true when this organizations update subscription forbidden response has a 2xx status code
func (o *OrganizationsUpdateSubscriptionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations update subscription forbidden response has a 3xx status code
func (o *OrganizationsUpdateSubscriptionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations update subscription forbidden response has a 4xx status code
func (o *OrganizationsUpdateSubscriptionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this organizations update subscription forbidden response has a 5xx status code
func (o *OrganizationsUpdateSubscriptionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations update subscription forbidden response a status code equal to that given
func (o *OrganizationsUpdateSubscriptionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *OrganizationsUpdateSubscriptionForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/updatesubscription][%d] organizationsUpdateSubscriptionForbidden  %+v", 403, o.Payload)
}

func (o *OrganizationsUpdateSubscriptionForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/updatesubscription][%d] organizationsUpdateSubscriptionForbidden  %+v", 403, o.Payload)
}

func (o *OrganizationsUpdateSubscriptionForbidden) GetPayload() *OrganizationsUpdateSubscriptionForbiddenBody {
	return o.Payload
}

func (o *OrganizationsUpdateSubscriptionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OrganizationsUpdateSubscriptionForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsUpdateSubscriptionNotFound creates a OrganizationsUpdateSubscriptionNotFound with default headers values
func NewOrganizationsUpdateSubscriptionNotFound() *OrganizationsUpdateSubscriptionNotFound {
	return &OrganizationsUpdateSubscriptionNotFound{}
}

/*
OrganizationsUpdateSubscriptionNotFound describes a response with status code 404, with default header values.

Not Found
*/
type OrganizationsUpdateSubscriptionNotFound struct {
	Payload *OrganizationsUpdateSubscriptionNotFoundBody
}

// IsSuccess returns true when this organizations update subscription not found response has a 2xx status code
func (o *OrganizationsUpdateSubscriptionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations update subscription not found response has a 3xx status code
func (o *OrganizationsUpdateSubscriptionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations update subscription not found response has a 4xx status code
func (o *OrganizationsUpdateSubscriptionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this organizations update subscription not found response has a 5xx status code
func (o *OrganizationsUpdateSubscriptionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations update subscription not found response a status code equal to that given
func (o *OrganizationsUpdateSubscriptionNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *OrganizationsUpdateSubscriptionNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/updatesubscription][%d] organizationsUpdateSubscriptionNotFound  %+v", 404, o.Payload)
}

func (o *OrganizationsUpdateSubscriptionNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/updatesubscription][%d] organizationsUpdateSubscriptionNotFound  %+v", 404, o.Payload)
}

func (o *OrganizationsUpdateSubscriptionNotFound) GetPayload() *OrganizationsUpdateSubscriptionNotFoundBody {
	return o.Payload
}

func (o *OrganizationsUpdateSubscriptionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OrganizationsUpdateSubscriptionNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsUpdateSubscriptionInternalServerError creates a OrganizationsUpdateSubscriptionInternalServerError with default headers values
func NewOrganizationsUpdateSubscriptionInternalServerError() *OrganizationsUpdateSubscriptionInternalServerError {
	return &OrganizationsUpdateSubscriptionInternalServerError{}
}

/*
OrganizationsUpdateSubscriptionInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type OrganizationsUpdateSubscriptionInternalServerError struct {
}

// IsSuccess returns true when this organizations update subscription internal server error response has a 2xx status code
func (o *OrganizationsUpdateSubscriptionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations update subscription internal server error response has a 3xx status code
func (o *OrganizationsUpdateSubscriptionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations update subscription internal server error response has a 4xx status code
func (o *OrganizationsUpdateSubscriptionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this organizations update subscription internal server error response has a 5xx status code
func (o *OrganizationsUpdateSubscriptionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this organizations update subscription internal server error response a status code equal to that given
func (o *OrganizationsUpdateSubscriptionInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *OrganizationsUpdateSubscriptionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/updatesubscription][%d] organizationsUpdateSubscriptionInternalServerError ", 500)
}

func (o *OrganizationsUpdateSubscriptionInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/updatesubscription][%d] organizationsUpdateSubscriptionInternalServerError ", 500)
}

func (o *OrganizationsUpdateSubscriptionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
OrganizationsUpdateSubscriptionBadRequestBodyItems0 organizations update subscription bad request body items0
swagger:model OrganizationsUpdateSubscriptionBadRequestBodyItems0
*/
type OrganizationsUpdateSubscriptionBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this organizations update subscription bad request body items0
func (o *OrganizationsUpdateSubscriptionBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organizations update subscription bad request body items0 based on context it is used
func (o *OrganizationsUpdateSubscriptionBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationsUpdateSubscriptionBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationsUpdateSubscriptionBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res OrganizationsUpdateSubscriptionBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationsUpdateSubscriptionBody organizations update subscription body
swagger:model OrganizationsUpdateSubscriptionBody
*/
type OrganizationsUpdateSubscriptionBody struct {

	// is yearly
	IsYearly bool `json:"isYearly"`

	// subscription Id
	SubscriptionID int32 `json:"subscriptionId,omitempty"`
}

// Validate validates this organizations update subscription body
func (o *OrganizationsUpdateSubscriptionBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organizations update subscription body based on context it is used
func (o *OrganizationsUpdateSubscriptionBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationsUpdateSubscriptionBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationsUpdateSubscriptionBody) UnmarshalBinary(b []byte) error {
	var res OrganizationsUpdateSubscriptionBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationsUpdateSubscriptionForbiddenBody organizations update subscription forbidden body
swagger:model OrganizationsUpdateSubscriptionForbiddenBody
*/
type OrganizationsUpdateSubscriptionForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this organizations update subscription forbidden body
func (o *OrganizationsUpdateSubscriptionForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organizations update subscription forbidden body based on context it is used
func (o *OrganizationsUpdateSubscriptionForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationsUpdateSubscriptionForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationsUpdateSubscriptionForbiddenBody) UnmarshalBinary(b []byte) error {
	var res OrganizationsUpdateSubscriptionForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationsUpdateSubscriptionNotFoundBody organizations update subscription not found body
swagger:model OrganizationsUpdateSubscriptionNotFoundBody
*/
type OrganizationsUpdateSubscriptionNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this organizations update subscription not found body
func (o *OrganizationsUpdateSubscriptionNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organizations update subscription not found body based on context it is used
func (o *OrganizationsUpdateSubscriptionNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationsUpdateSubscriptionNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationsUpdateSubscriptionNotFoundBody) UnmarshalBinary(b []byte) error {
	var res OrganizationsUpdateSubscriptionNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationsUpdateSubscriptionUnauthorizedBody organizations update subscription unauthorized body
swagger:model OrganizationsUpdateSubscriptionUnauthorizedBody
*/
type OrganizationsUpdateSubscriptionUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this organizations update subscription unauthorized body
func (o *OrganizationsUpdateSubscriptionUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organizations update subscription unauthorized body based on context it is used
func (o *OrganizationsUpdateSubscriptionUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationsUpdateSubscriptionUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationsUpdateSubscriptionUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res OrganizationsUpdateSubscriptionUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
