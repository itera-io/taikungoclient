// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// OrganizationsAcceptOfferReader is a Reader for the OrganizationsAcceptOffer structure.
type OrganizationsAcceptOfferReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrganizationsAcceptOfferReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrganizationsAcceptOfferOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOrganizationsAcceptOfferBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewOrganizationsAcceptOfferUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewOrganizationsAcceptOfferForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOrganizationsAcceptOfferNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewOrganizationsAcceptOfferInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOrganizationsAcceptOfferOK creates a OrganizationsAcceptOfferOK with default headers values
func NewOrganizationsAcceptOfferOK() *OrganizationsAcceptOfferOK {
	return &OrganizationsAcceptOfferOK{}
}

/*
OrganizationsAcceptOfferOK describes a response with status code 200, with default header values.

Success
*/
type OrganizationsAcceptOfferOK struct {
	Payload interface{}
}

// IsSuccess returns true when this organizations accept offer o k response has a 2xx status code
func (o *OrganizationsAcceptOfferOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this organizations accept offer o k response has a 3xx status code
func (o *OrganizationsAcceptOfferOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations accept offer o k response has a 4xx status code
func (o *OrganizationsAcceptOfferOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this organizations accept offer o k response has a 5xx status code
func (o *OrganizationsAcceptOfferOK) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations accept offer o k response a status code equal to that given
func (o *OrganizationsAcceptOfferOK) IsCode(code int) bool {
	return code == 200
}

func (o *OrganizationsAcceptOfferOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/accept-offer][%d] organizationsAcceptOfferOK  %+v", 200, o.Payload)
}

func (o *OrganizationsAcceptOfferOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/accept-offer][%d] organizationsAcceptOfferOK  %+v", 200, o.Payload)
}

func (o *OrganizationsAcceptOfferOK) GetPayload() interface{} {
	return o.Payload
}

func (o *OrganizationsAcceptOfferOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsAcceptOfferBadRequest creates a OrganizationsAcceptOfferBadRequest with default headers values
func NewOrganizationsAcceptOfferBadRequest() *OrganizationsAcceptOfferBadRequest {
	return &OrganizationsAcceptOfferBadRequest{}
}

/*
OrganizationsAcceptOfferBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type OrganizationsAcceptOfferBadRequest struct {
	Payload []*OrganizationsAcceptOfferBadRequestBodyItems0
}

// IsSuccess returns true when this organizations accept offer bad request response has a 2xx status code
func (o *OrganizationsAcceptOfferBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations accept offer bad request response has a 3xx status code
func (o *OrganizationsAcceptOfferBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations accept offer bad request response has a 4xx status code
func (o *OrganizationsAcceptOfferBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this organizations accept offer bad request response has a 5xx status code
func (o *OrganizationsAcceptOfferBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations accept offer bad request response a status code equal to that given
func (o *OrganizationsAcceptOfferBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *OrganizationsAcceptOfferBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/accept-offer][%d] organizationsAcceptOfferBadRequest  %+v", 400, o.Payload)
}

func (o *OrganizationsAcceptOfferBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/accept-offer][%d] organizationsAcceptOfferBadRequest  %+v", 400, o.Payload)
}

func (o *OrganizationsAcceptOfferBadRequest) GetPayload() []*OrganizationsAcceptOfferBadRequestBodyItems0 {
	return o.Payload
}

func (o *OrganizationsAcceptOfferBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsAcceptOfferUnauthorized creates a OrganizationsAcceptOfferUnauthorized with default headers values
func NewOrganizationsAcceptOfferUnauthorized() *OrganizationsAcceptOfferUnauthorized {
	return &OrganizationsAcceptOfferUnauthorized{}
}

/*
OrganizationsAcceptOfferUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type OrganizationsAcceptOfferUnauthorized struct {
	Payload *OrganizationsAcceptOfferUnauthorizedBody
}

// IsSuccess returns true when this organizations accept offer unauthorized response has a 2xx status code
func (o *OrganizationsAcceptOfferUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations accept offer unauthorized response has a 3xx status code
func (o *OrganizationsAcceptOfferUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations accept offer unauthorized response has a 4xx status code
func (o *OrganizationsAcceptOfferUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this organizations accept offer unauthorized response has a 5xx status code
func (o *OrganizationsAcceptOfferUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations accept offer unauthorized response a status code equal to that given
func (o *OrganizationsAcceptOfferUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *OrganizationsAcceptOfferUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/accept-offer][%d] organizationsAcceptOfferUnauthorized  %+v", 401, o.Payload)
}

func (o *OrganizationsAcceptOfferUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/accept-offer][%d] organizationsAcceptOfferUnauthorized  %+v", 401, o.Payload)
}

func (o *OrganizationsAcceptOfferUnauthorized) GetPayload() *OrganizationsAcceptOfferUnauthorizedBody {
	return o.Payload
}

func (o *OrganizationsAcceptOfferUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OrganizationsAcceptOfferUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsAcceptOfferForbidden creates a OrganizationsAcceptOfferForbidden with default headers values
func NewOrganizationsAcceptOfferForbidden() *OrganizationsAcceptOfferForbidden {
	return &OrganizationsAcceptOfferForbidden{}
}

/*
OrganizationsAcceptOfferForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type OrganizationsAcceptOfferForbidden struct {
	Payload *OrganizationsAcceptOfferForbiddenBody
}

// IsSuccess returns true when this organizations accept offer forbidden response has a 2xx status code
func (o *OrganizationsAcceptOfferForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations accept offer forbidden response has a 3xx status code
func (o *OrganizationsAcceptOfferForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations accept offer forbidden response has a 4xx status code
func (o *OrganizationsAcceptOfferForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this organizations accept offer forbidden response has a 5xx status code
func (o *OrganizationsAcceptOfferForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations accept offer forbidden response a status code equal to that given
func (o *OrganizationsAcceptOfferForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *OrganizationsAcceptOfferForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/accept-offer][%d] organizationsAcceptOfferForbidden  %+v", 403, o.Payload)
}

func (o *OrganizationsAcceptOfferForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/accept-offer][%d] organizationsAcceptOfferForbidden  %+v", 403, o.Payload)
}

func (o *OrganizationsAcceptOfferForbidden) GetPayload() *OrganizationsAcceptOfferForbiddenBody {
	return o.Payload
}

func (o *OrganizationsAcceptOfferForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OrganizationsAcceptOfferForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsAcceptOfferNotFound creates a OrganizationsAcceptOfferNotFound with default headers values
func NewOrganizationsAcceptOfferNotFound() *OrganizationsAcceptOfferNotFound {
	return &OrganizationsAcceptOfferNotFound{}
}

/*
OrganizationsAcceptOfferNotFound describes a response with status code 404, with default header values.

Not Found
*/
type OrganizationsAcceptOfferNotFound struct {
	Payload *OrganizationsAcceptOfferNotFoundBody
}

// IsSuccess returns true when this organizations accept offer not found response has a 2xx status code
func (o *OrganizationsAcceptOfferNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations accept offer not found response has a 3xx status code
func (o *OrganizationsAcceptOfferNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations accept offer not found response has a 4xx status code
func (o *OrganizationsAcceptOfferNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this organizations accept offer not found response has a 5xx status code
func (o *OrganizationsAcceptOfferNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations accept offer not found response a status code equal to that given
func (o *OrganizationsAcceptOfferNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *OrganizationsAcceptOfferNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/accept-offer][%d] organizationsAcceptOfferNotFound  %+v", 404, o.Payload)
}

func (o *OrganizationsAcceptOfferNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/accept-offer][%d] organizationsAcceptOfferNotFound  %+v", 404, o.Payload)
}

func (o *OrganizationsAcceptOfferNotFound) GetPayload() *OrganizationsAcceptOfferNotFoundBody {
	return o.Payload
}

func (o *OrganizationsAcceptOfferNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OrganizationsAcceptOfferNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsAcceptOfferInternalServerError creates a OrganizationsAcceptOfferInternalServerError with default headers values
func NewOrganizationsAcceptOfferInternalServerError() *OrganizationsAcceptOfferInternalServerError {
	return &OrganizationsAcceptOfferInternalServerError{}
}

/*
OrganizationsAcceptOfferInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type OrganizationsAcceptOfferInternalServerError struct {
}

// IsSuccess returns true when this organizations accept offer internal server error response has a 2xx status code
func (o *OrganizationsAcceptOfferInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations accept offer internal server error response has a 3xx status code
func (o *OrganizationsAcceptOfferInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations accept offer internal server error response has a 4xx status code
func (o *OrganizationsAcceptOfferInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this organizations accept offer internal server error response has a 5xx status code
func (o *OrganizationsAcceptOfferInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this organizations accept offer internal server error response a status code equal to that given
func (o *OrganizationsAcceptOfferInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *OrganizationsAcceptOfferInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/accept-offer][%d] organizationsAcceptOfferInternalServerError ", 500)
}

func (o *OrganizationsAcceptOfferInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/accept-offer][%d] organizationsAcceptOfferInternalServerError ", 500)
}

func (o *OrganizationsAcceptOfferInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
OrganizationsAcceptOfferBadRequestBodyItems0 organizations accept offer bad request body items0
swagger:model OrganizationsAcceptOfferBadRequestBodyItems0
*/
type OrganizationsAcceptOfferBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this organizations accept offer bad request body items0
func (o *OrganizationsAcceptOfferBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organizations accept offer bad request body items0 based on context it is used
func (o *OrganizationsAcceptOfferBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationsAcceptOfferBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationsAcceptOfferBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res OrganizationsAcceptOfferBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationsAcceptOfferForbiddenBody organizations accept offer forbidden body
swagger:model OrganizationsAcceptOfferForbiddenBody
*/
type OrganizationsAcceptOfferForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this organizations accept offer forbidden body
func (o *OrganizationsAcceptOfferForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organizations accept offer forbidden body based on context it is used
func (o *OrganizationsAcceptOfferForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationsAcceptOfferForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationsAcceptOfferForbiddenBody) UnmarshalBinary(b []byte) error {
	var res OrganizationsAcceptOfferForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationsAcceptOfferNotFoundBody organizations accept offer not found body
swagger:model OrganizationsAcceptOfferNotFoundBody
*/
type OrganizationsAcceptOfferNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this organizations accept offer not found body
func (o *OrganizationsAcceptOfferNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organizations accept offer not found body based on context it is used
func (o *OrganizationsAcceptOfferNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationsAcceptOfferNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationsAcceptOfferNotFoundBody) UnmarshalBinary(b []byte) error {
	var res OrganizationsAcceptOfferNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationsAcceptOfferUnauthorizedBody organizations accept offer unauthorized body
swagger:model OrganizationsAcceptOfferUnauthorizedBody
*/
type OrganizationsAcceptOfferUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this organizations accept offer unauthorized body
func (o *OrganizationsAcceptOfferUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organizations accept offer unauthorized body based on context it is used
func (o *OrganizationsAcceptOfferUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationsAcceptOfferUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationsAcceptOfferUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res OrganizationsAcceptOfferUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
