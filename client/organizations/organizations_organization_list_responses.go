// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// OrganizationsOrganizationListReader is a Reader for the OrganizationsOrganizationList structure.
type OrganizationsOrganizationListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrganizationsOrganizationListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrganizationsOrganizationListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOrganizationsOrganizationListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewOrganizationsOrganizationListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewOrganizationsOrganizationListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOrganizationsOrganizationListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewOrganizationsOrganizationListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOrganizationsOrganizationListOK creates a OrganizationsOrganizationListOK with default headers values
func NewOrganizationsOrganizationListOK() *OrganizationsOrganizationListOK {
	return &OrganizationsOrganizationListOK{}
}

/*
OrganizationsOrganizationListOK describes a response with status code 200, with default header values.

Success
*/
type OrganizationsOrganizationListOK struct {
	Payload []*OrganizationsOrganizationListOKBodyItems0
}

// IsSuccess returns true when this organizations organization list o k response has a 2xx status code
func (o *OrganizationsOrganizationListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this organizations organization list o k response has a 3xx status code
func (o *OrganizationsOrganizationListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations organization list o k response has a 4xx status code
func (o *OrganizationsOrganizationListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this organizations organization list o k response has a 5xx status code
func (o *OrganizationsOrganizationListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations organization list o k response a status code equal to that given
func (o *OrganizationsOrganizationListOK) IsCode(code int) bool {
	return code == 200
}

func (o *OrganizationsOrganizationListOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/list][%d] organizationsOrganizationListOK  %+v", 200, o.Payload)
}

func (o *OrganizationsOrganizationListOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/list][%d] organizationsOrganizationListOK  %+v", 200, o.Payload)
}

func (o *OrganizationsOrganizationListOK) GetPayload() []*OrganizationsOrganizationListOKBodyItems0 {
	return o.Payload
}

func (o *OrganizationsOrganizationListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsOrganizationListBadRequest creates a OrganizationsOrganizationListBadRequest with default headers values
func NewOrganizationsOrganizationListBadRequest() *OrganizationsOrganizationListBadRequest {
	return &OrganizationsOrganizationListBadRequest{}
}

/*
OrganizationsOrganizationListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type OrganizationsOrganizationListBadRequest struct {
	Payload []*OrganizationsOrganizationListBadRequestBodyItems0
}

// IsSuccess returns true when this organizations organization list bad request response has a 2xx status code
func (o *OrganizationsOrganizationListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations organization list bad request response has a 3xx status code
func (o *OrganizationsOrganizationListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations organization list bad request response has a 4xx status code
func (o *OrganizationsOrganizationListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this organizations organization list bad request response has a 5xx status code
func (o *OrganizationsOrganizationListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations organization list bad request response a status code equal to that given
func (o *OrganizationsOrganizationListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *OrganizationsOrganizationListBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/list][%d] organizationsOrganizationListBadRequest  %+v", 400, o.Payload)
}

func (o *OrganizationsOrganizationListBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/list][%d] organizationsOrganizationListBadRequest  %+v", 400, o.Payload)
}

func (o *OrganizationsOrganizationListBadRequest) GetPayload() []*OrganizationsOrganizationListBadRequestBodyItems0 {
	return o.Payload
}

func (o *OrganizationsOrganizationListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsOrganizationListUnauthorized creates a OrganizationsOrganizationListUnauthorized with default headers values
func NewOrganizationsOrganizationListUnauthorized() *OrganizationsOrganizationListUnauthorized {
	return &OrganizationsOrganizationListUnauthorized{}
}

/*
OrganizationsOrganizationListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type OrganizationsOrganizationListUnauthorized struct {
	Payload *OrganizationsOrganizationListUnauthorizedBody
}

// IsSuccess returns true when this organizations organization list unauthorized response has a 2xx status code
func (o *OrganizationsOrganizationListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations organization list unauthorized response has a 3xx status code
func (o *OrganizationsOrganizationListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations organization list unauthorized response has a 4xx status code
func (o *OrganizationsOrganizationListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this organizations organization list unauthorized response has a 5xx status code
func (o *OrganizationsOrganizationListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations organization list unauthorized response a status code equal to that given
func (o *OrganizationsOrganizationListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *OrganizationsOrganizationListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/list][%d] organizationsOrganizationListUnauthorized  %+v", 401, o.Payload)
}

func (o *OrganizationsOrganizationListUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/list][%d] organizationsOrganizationListUnauthorized  %+v", 401, o.Payload)
}

func (o *OrganizationsOrganizationListUnauthorized) GetPayload() *OrganizationsOrganizationListUnauthorizedBody {
	return o.Payload
}

func (o *OrganizationsOrganizationListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OrganizationsOrganizationListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsOrganizationListForbidden creates a OrganizationsOrganizationListForbidden with default headers values
func NewOrganizationsOrganizationListForbidden() *OrganizationsOrganizationListForbidden {
	return &OrganizationsOrganizationListForbidden{}
}

/*
OrganizationsOrganizationListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type OrganizationsOrganizationListForbidden struct {
	Payload *OrganizationsOrganizationListForbiddenBody
}

// IsSuccess returns true when this organizations organization list forbidden response has a 2xx status code
func (o *OrganizationsOrganizationListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations organization list forbidden response has a 3xx status code
func (o *OrganizationsOrganizationListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations organization list forbidden response has a 4xx status code
func (o *OrganizationsOrganizationListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this organizations organization list forbidden response has a 5xx status code
func (o *OrganizationsOrganizationListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations organization list forbidden response a status code equal to that given
func (o *OrganizationsOrganizationListForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *OrganizationsOrganizationListForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/list][%d] organizationsOrganizationListForbidden  %+v", 403, o.Payload)
}

func (o *OrganizationsOrganizationListForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/list][%d] organizationsOrganizationListForbidden  %+v", 403, o.Payload)
}

func (o *OrganizationsOrganizationListForbidden) GetPayload() *OrganizationsOrganizationListForbiddenBody {
	return o.Payload
}

func (o *OrganizationsOrganizationListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OrganizationsOrganizationListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsOrganizationListNotFound creates a OrganizationsOrganizationListNotFound with default headers values
func NewOrganizationsOrganizationListNotFound() *OrganizationsOrganizationListNotFound {
	return &OrganizationsOrganizationListNotFound{}
}

/*
OrganizationsOrganizationListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type OrganizationsOrganizationListNotFound struct {
	Payload *OrganizationsOrganizationListNotFoundBody
}

// IsSuccess returns true when this organizations organization list not found response has a 2xx status code
func (o *OrganizationsOrganizationListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations organization list not found response has a 3xx status code
func (o *OrganizationsOrganizationListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations organization list not found response has a 4xx status code
func (o *OrganizationsOrganizationListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this organizations organization list not found response has a 5xx status code
func (o *OrganizationsOrganizationListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations organization list not found response a status code equal to that given
func (o *OrganizationsOrganizationListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *OrganizationsOrganizationListNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/list][%d] organizationsOrganizationListNotFound  %+v", 404, o.Payload)
}

func (o *OrganizationsOrganizationListNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/list][%d] organizationsOrganizationListNotFound  %+v", 404, o.Payload)
}

func (o *OrganizationsOrganizationListNotFound) GetPayload() *OrganizationsOrganizationListNotFoundBody {
	return o.Payload
}

func (o *OrganizationsOrganizationListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OrganizationsOrganizationListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsOrganizationListInternalServerError creates a OrganizationsOrganizationListInternalServerError with default headers values
func NewOrganizationsOrganizationListInternalServerError() *OrganizationsOrganizationListInternalServerError {
	return &OrganizationsOrganizationListInternalServerError{}
}

/*
OrganizationsOrganizationListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type OrganizationsOrganizationListInternalServerError struct {
}

// IsSuccess returns true when this organizations organization list internal server error response has a 2xx status code
func (o *OrganizationsOrganizationListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations organization list internal server error response has a 3xx status code
func (o *OrganizationsOrganizationListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations organization list internal server error response has a 4xx status code
func (o *OrganizationsOrganizationListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this organizations organization list internal server error response has a 5xx status code
func (o *OrganizationsOrganizationListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this organizations organization list internal server error response a status code equal to that given
func (o *OrganizationsOrganizationListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *OrganizationsOrganizationListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/list][%d] organizationsOrganizationListInternalServerError ", 500)
}

func (o *OrganizationsOrganizationListInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/list][%d] organizationsOrganizationListInternalServerError ", 500)
}

func (o *OrganizationsOrganizationListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
OrganizationsOrganizationListBadRequestBodyItems0 organizations organization list bad request body items0
swagger:model OrganizationsOrganizationListBadRequestBodyItems0
*/
type OrganizationsOrganizationListBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this organizations organization list bad request body items0
func (o *OrganizationsOrganizationListBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organizations organization list bad request body items0 based on context it is used
func (o *OrganizationsOrganizationListBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationsOrganizationListBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationsOrganizationListBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res OrganizationsOrganizationListBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationsOrganizationListForbiddenBody organizations organization list forbidden body
swagger:model OrganizationsOrganizationListForbiddenBody
*/
type OrganizationsOrganizationListForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this organizations organization list forbidden body
func (o *OrganizationsOrganizationListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organizations organization list forbidden body based on context it is used
func (o *OrganizationsOrganizationListForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationsOrganizationListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationsOrganizationListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res OrganizationsOrganizationListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationsOrganizationListNotFoundBody organizations organization list not found body
swagger:model OrganizationsOrganizationListNotFoundBody
*/
type OrganizationsOrganizationListNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this organizations organization list not found body
func (o *OrganizationsOrganizationListNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organizations organization list not found body based on context it is used
func (o *OrganizationsOrganizationListNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationsOrganizationListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationsOrganizationListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res OrganizationsOrganizationListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationsOrganizationListOKBodyItems0 organizations organization list o k body items0
swagger:model OrganizationsOrganizationListOKBodyItems0
*/
type OrganizationsOrganizationListOKBodyItems0 struct {

	// id
	ID int32 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this organizations organization list o k body items0
func (o *OrganizationsOrganizationListOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organizations organization list o k body items0 based on context it is used
func (o *OrganizationsOrganizationListOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationsOrganizationListOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationsOrganizationListOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res OrganizationsOrganizationListOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationsOrganizationListUnauthorizedBody organizations organization list unauthorized body
swagger:model OrganizationsOrganizationListUnauthorizedBody
*/
type OrganizationsOrganizationListUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this organizations organization list unauthorized body
func (o *OrganizationsOrganizationListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organizations organization list unauthorized body based on context it is used
func (o *OrganizationsOrganizationListUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationsOrganizationListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationsOrganizationListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res OrganizationsOrganizationListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
