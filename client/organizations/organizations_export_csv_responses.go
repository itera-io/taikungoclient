// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// OrganizationsExportCsvReader is a Reader for the OrganizationsExportCsv structure.
type OrganizationsExportCsvReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrganizationsExportCsvReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrganizationsExportCsvOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOrganizationsExportCsvBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewOrganizationsExportCsvUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewOrganizationsExportCsvForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOrganizationsExportCsvNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewOrganizationsExportCsvInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOrganizationsExportCsvOK creates a OrganizationsExportCsvOK with default headers values
func NewOrganizationsExportCsvOK() *OrganizationsExportCsvOK {
	return &OrganizationsExportCsvOK{}
}

/*
OrganizationsExportCsvOK describes a response with status code 200, with default header values.

Success
*/
type OrganizationsExportCsvOK struct {
}

// IsSuccess returns true when this organizations export csv o k response has a 2xx status code
func (o *OrganizationsExportCsvOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this organizations export csv o k response has a 3xx status code
func (o *OrganizationsExportCsvOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations export csv o k response has a 4xx status code
func (o *OrganizationsExportCsvOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this organizations export csv o k response has a 5xx status code
func (o *OrganizationsExportCsvOK) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations export csv o k response a status code equal to that given
func (o *OrganizationsExportCsvOK) IsCode(code int) bool {
	return code == 200
}

func (o *OrganizationsExportCsvOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/export][%d] organizationsExportCsvOK ", 200)
}

func (o *OrganizationsExportCsvOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/export][%d] organizationsExportCsvOK ", 200)
}

func (o *OrganizationsExportCsvOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOrganizationsExportCsvBadRequest creates a OrganizationsExportCsvBadRequest with default headers values
func NewOrganizationsExportCsvBadRequest() *OrganizationsExportCsvBadRequest {
	return &OrganizationsExportCsvBadRequest{}
}

/*
OrganizationsExportCsvBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type OrganizationsExportCsvBadRequest struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this organizations export csv bad request response has a 2xx status code
func (o *OrganizationsExportCsvBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations export csv bad request response has a 3xx status code
func (o *OrganizationsExportCsvBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations export csv bad request response has a 4xx status code
func (o *OrganizationsExportCsvBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this organizations export csv bad request response has a 5xx status code
func (o *OrganizationsExportCsvBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations export csv bad request response a status code equal to that given
func (o *OrganizationsExportCsvBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *OrganizationsExportCsvBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/export][%d] organizationsExportCsvBadRequest  %+v", 400, o.Payload)
}

func (o *OrganizationsExportCsvBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/export][%d] organizationsExportCsvBadRequest  %+v", 400, o.Payload)
}

func (o *OrganizationsExportCsvBadRequest) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *OrganizationsExportCsvBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsExportCsvUnauthorized creates a OrganizationsExportCsvUnauthorized with default headers values
func NewOrganizationsExportCsvUnauthorized() *OrganizationsExportCsvUnauthorized {
	return &OrganizationsExportCsvUnauthorized{}
}

/*
OrganizationsExportCsvUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type OrganizationsExportCsvUnauthorized struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this organizations export csv unauthorized response has a 2xx status code
func (o *OrganizationsExportCsvUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations export csv unauthorized response has a 3xx status code
func (o *OrganizationsExportCsvUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations export csv unauthorized response has a 4xx status code
func (o *OrganizationsExportCsvUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this organizations export csv unauthorized response has a 5xx status code
func (o *OrganizationsExportCsvUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations export csv unauthorized response a status code equal to that given
func (o *OrganizationsExportCsvUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *OrganizationsExportCsvUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/export][%d] organizationsExportCsvUnauthorized  %+v", 401, o.Payload)
}

func (o *OrganizationsExportCsvUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/export][%d] organizationsExportCsvUnauthorized  %+v", 401, o.Payload)
}

func (o *OrganizationsExportCsvUnauthorized) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *OrganizationsExportCsvUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsExportCsvForbidden creates a OrganizationsExportCsvForbidden with default headers values
func NewOrganizationsExportCsvForbidden() *OrganizationsExportCsvForbidden {
	return &OrganizationsExportCsvForbidden{}
}

/*
OrganizationsExportCsvForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type OrganizationsExportCsvForbidden struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this organizations export csv forbidden response has a 2xx status code
func (o *OrganizationsExportCsvForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations export csv forbidden response has a 3xx status code
func (o *OrganizationsExportCsvForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations export csv forbidden response has a 4xx status code
func (o *OrganizationsExportCsvForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this organizations export csv forbidden response has a 5xx status code
func (o *OrganizationsExportCsvForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations export csv forbidden response a status code equal to that given
func (o *OrganizationsExportCsvForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *OrganizationsExportCsvForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/export][%d] organizationsExportCsvForbidden  %+v", 403, o.Payload)
}

func (o *OrganizationsExportCsvForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/export][%d] organizationsExportCsvForbidden  %+v", 403, o.Payload)
}

func (o *OrganizationsExportCsvForbidden) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *OrganizationsExportCsvForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsExportCsvNotFound creates a OrganizationsExportCsvNotFound with default headers values
func NewOrganizationsExportCsvNotFound() *OrganizationsExportCsvNotFound {
	return &OrganizationsExportCsvNotFound{}
}

/*
OrganizationsExportCsvNotFound describes a response with status code 404, with default header values.

Not Found
*/
type OrganizationsExportCsvNotFound struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this organizations export csv not found response has a 2xx status code
func (o *OrganizationsExportCsvNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations export csv not found response has a 3xx status code
func (o *OrganizationsExportCsvNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations export csv not found response has a 4xx status code
func (o *OrganizationsExportCsvNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this organizations export csv not found response has a 5xx status code
func (o *OrganizationsExportCsvNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations export csv not found response a status code equal to that given
func (o *OrganizationsExportCsvNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *OrganizationsExportCsvNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/export][%d] organizationsExportCsvNotFound  %+v", 404, o.Payload)
}

func (o *OrganizationsExportCsvNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/export][%d] organizationsExportCsvNotFound  %+v", 404, o.Payload)
}

func (o *OrganizationsExportCsvNotFound) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *OrganizationsExportCsvNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsExportCsvInternalServerError creates a OrganizationsExportCsvInternalServerError with default headers values
func NewOrganizationsExportCsvInternalServerError() *OrganizationsExportCsvInternalServerError {
	return &OrganizationsExportCsvInternalServerError{}
}

/*
OrganizationsExportCsvInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type OrganizationsExportCsvInternalServerError struct {
}

// IsSuccess returns true when this organizations export csv internal server error response has a 2xx status code
func (o *OrganizationsExportCsvInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations export csv internal server error response has a 3xx status code
func (o *OrganizationsExportCsvInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations export csv internal server error response has a 4xx status code
func (o *OrganizationsExportCsvInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this organizations export csv internal server error response has a 5xx status code
func (o *OrganizationsExportCsvInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this organizations export csv internal server error response a status code equal to that given
func (o *OrganizationsExportCsvInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *OrganizationsExportCsvInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/export][%d] organizationsExportCsvInternalServerError ", 500)
}

func (o *OrganizationsExportCsvInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Organizations/export][%d] organizationsExportCsvInternalServerError ", 500)
}

func (o *OrganizationsExportCsvInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
