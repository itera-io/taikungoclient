// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// OrganizationsToggleKeycloakReader is a Reader for the OrganizationsToggleKeycloak structure.
type OrganizationsToggleKeycloakReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrganizationsToggleKeycloakReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrganizationsToggleKeycloakOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOrganizationsToggleKeycloakBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewOrganizationsToggleKeycloakUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewOrganizationsToggleKeycloakForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOrganizationsToggleKeycloakNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewOrganizationsToggleKeycloakInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOrganizationsToggleKeycloakOK creates a OrganizationsToggleKeycloakOK with default headers values
func NewOrganizationsToggleKeycloakOK() *OrganizationsToggleKeycloakOK {
	return &OrganizationsToggleKeycloakOK{}
}

/*
OrganizationsToggleKeycloakOK describes a response with status code 200, with default header values.

Success
*/
type OrganizationsToggleKeycloakOK struct {
	Payload interface{}
}

// IsSuccess returns true when this organizations toggle keycloak o k response has a 2xx status code
func (o *OrganizationsToggleKeycloakOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this organizations toggle keycloak o k response has a 3xx status code
func (o *OrganizationsToggleKeycloakOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations toggle keycloak o k response has a 4xx status code
func (o *OrganizationsToggleKeycloakOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this organizations toggle keycloak o k response has a 5xx status code
func (o *OrganizationsToggleKeycloakOK) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations toggle keycloak o k response a status code equal to that given
func (o *OrganizationsToggleKeycloakOK) IsCode(code int) bool {
	return code == 200
}

func (o *OrganizationsToggleKeycloakOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/toggle/keycloak][%d] organizationsToggleKeycloakOK  %+v", 200, o.Payload)
}

func (o *OrganizationsToggleKeycloakOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/toggle/keycloak][%d] organizationsToggleKeycloakOK  %+v", 200, o.Payload)
}

func (o *OrganizationsToggleKeycloakOK) GetPayload() interface{} {
	return o.Payload
}

func (o *OrganizationsToggleKeycloakOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsToggleKeycloakBadRequest creates a OrganizationsToggleKeycloakBadRequest with default headers values
func NewOrganizationsToggleKeycloakBadRequest() *OrganizationsToggleKeycloakBadRequest {
	return &OrganizationsToggleKeycloakBadRequest{}
}

/*
OrganizationsToggleKeycloakBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type OrganizationsToggleKeycloakBadRequest struct {
	Payload []*OrganizationsToggleKeycloakBadRequestBodyItems0
}

// IsSuccess returns true when this organizations toggle keycloak bad request response has a 2xx status code
func (o *OrganizationsToggleKeycloakBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations toggle keycloak bad request response has a 3xx status code
func (o *OrganizationsToggleKeycloakBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations toggle keycloak bad request response has a 4xx status code
func (o *OrganizationsToggleKeycloakBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this organizations toggle keycloak bad request response has a 5xx status code
func (o *OrganizationsToggleKeycloakBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations toggle keycloak bad request response a status code equal to that given
func (o *OrganizationsToggleKeycloakBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *OrganizationsToggleKeycloakBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/toggle/keycloak][%d] organizationsToggleKeycloakBadRequest  %+v", 400, o.Payload)
}

func (o *OrganizationsToggleKeycloakBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/toggle/keycloak][%d] organizationsToggleKeycloakBadRequest  %+v", 400, o.Payload)
}

func (o *OrganizationsToggleKeycloakBadRequest) GetPayload() []*OrganizationsToggleKeycloakBadRequestBodyItems0 {
	return o.Payload
}

func (o *OrganizationsToggleKeycloakBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsToggleKeycloakUnauthorized creates a OrganizationsToggleKeycloakUnauthorized with default headers values
func NewOrganizationsToggleKeycloakUnauthorized() *OrganizationsToggleKeycloakUnauthorized {
	return &OrganizationsToggleKeycloakUnauthorized{}
}

/*
OrganizationsToggleKeycloakUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type OrganizationsToggleKeycloakUnauthorized struct {
	Payload *OrganizationsToggleKeycloakUnauthorizedBody
}

// IsSuccess returns true when this organizations toggle keycloak unauthorized response has a 2xx status code
func (o *OrganizationsToggleKeycloakUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations toggle keycloak unauthorized response has a 3xx status code
func (o *OrganizationsToggleKeycloakUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations toggle keycloak unauthorized response has a 4xx status code
func (o *OrganizationsToggleKeycloakUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this organizations toggle keycloak unauthorized response has a 5xx status code
func (o *OrganizationsToggleKeycloakUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations toggle keycloak unauthorized response a status code equal to that given
func (o *OrganizationsToggleKeycloakUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *OrganizationsToggleKeycloakUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/toggle/keycloak][%d] organizationsToggleKeycloakUnauthorized  %+v", 401, o.Payload)
}

func (o *OrganizationsToggleKeycloakUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/toggle/keycloak][%d] organizationsToggleKeycloakUnauthorized  %+v", 401, o.Payload)
}

func (o *OrganizationsToggleKeycloakUnauthorized) GetPayload() *OrganizationsToggleKeycloakUnauthorizedBody {
	return o.Payload
}

func (o *OrganizationsToggleKeycloakUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OrganizationsToggleKeycloakUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsToggleKeycloakForbidden creates a OrganizationsToggleKeycloakForbidden with default headers values
func NewOrganizationsToggleKeycloakForbidden() *OrganizationsToggleKeycloakForbidden {
	return &OrganizationsToggleKeycloakForbidden{}
}

/*
OrganizationsToggleKeycloakForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type OrganizationsToggleKeycloakForbidden struct {
	Payload *OrganizationsToggleKeycloakForbiddenBody
}

// IsSuccess returns true when this organizations toggle keycloak forbidden response has a 2xx status code
func (o *OrganizationsToggleKeycloakForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations toggle keycloak forbidden response has a 3xx status code
func (o *OrganizationsToggleKeycloakForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations toggle keycloak forbidden response has a 4xx status code
func (o *OrganizationsToggleKeycloakForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this organizations toggle keycloak forbidden response has a 5xx status code
func (o *OrganizationsToggleKeycloakForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations toggle keycloak forbidden response a status code equal to that given
func (o *OrganizationsToggleKeycloakForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *OrganizationsToggleKeycloakForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/toggle/keycloak][%d] organizationsToggleKeycloakForbidden  %+v", 403, o.Payload)
}

func (o *OrganizationsToggleKeycloakForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/toggle/keycloak][%d] organizationsToggleKeycloakForbidden  %+v", 403, o.Payload)
}

func (o *OrganizationsToggleKeycloakForbidden) GetPayload() *OrganizationsToggleKeycloakForbiddenBody {
	return o.Payload
}

func (o *OrganizationsToggleKeycloakForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OrganizationsToggleKeycloakForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsToggleKeycloakNotFound creates a OrganizationsToggleKeycloakNotFound with default headers values
func NewOrganizationsToggleKeycloakNotFound() *OrganizationsToggleKeycloakNotFound {
	return &OrganizationsToggleKeycloakNotFound{}
}

/*
OrganizationsToggleKeycloakNotFound describes a response with status code 404, with default header values.

Not Found
*/
type OrganizationsToggleKeycloakNotFound struct {
	Payload *OrganizationsToggleKeycloakNotFoundBody
}

// IsSuccess returns true when this organizations toggle keycloak not found response has a 2xx status code
func (o *OrganizationsToggleKeycloakNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations toggle keycloak not found response has a 3xx status code
func (o *OrganizationsToggleKeycloakNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations toggle keycloak not found response has a 4xx status code
func (o *OrganizationsToggleKeycloakNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this organizations toggle keycloak not found response has a 5xx status code
func (o *OrganizationsToggleKeycloakNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this organizations toggle keycloak not found response a status code equal to that given
func (o *OrganizationsToggleKeycloakNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *OrganizationsToggleKeycloakNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/toggle/keycloak][%d] organizationsToggleKeycloakNotFound  %+v", 404, o.Payload)
}

func (o *OrganizationsToggleKeycloakNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/toggle/keycloak][%d] organizationsToggleKeycloakNotFound  %+v", 404, o.Payload)
}

func (o *OrganizationsToggleKeycloakNotFound) GetPayload() *OrganizationsToggleKeycloakNotFoundBody {
	return o.Payload
}

func (o *OrganizationsToggleKeycloakNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OrganizationsToggleKeycloakNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationsToggleKeycloakInternalServerError creates a OrganizationsToggleKeycloakInternalServerError with default headers values
func NewOrganizationsToggleKeycloakInternalServerError() *OrganizationsToggleKeycloakInternalServerError {
	return &OrganizationsToggleKeycloakInternalServerError{}
}

/*
OrganizationsToggleKeycloakInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type OrganizationsToggleKeycloakInternalServerError struct {
}

// IsSuccess returns true when this organizations toggle keycloak internal server error response has a 2xx status code
func (o *OrganizationsToggleKeycloakInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organizations toggle keycloak internal server error response has a 3xx status code
func (o *OrganizationsToggleKeycloakInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organizations toggle keycloak internal server error response has a 4xx status code
func (o *OrganizationsToggleKeycloakInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this organizations toggle keycloak internal server error response has a 5xx status code
func (o *OrganizationsToggleKeycloakInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this organizations toggle keycloak internal server error response a status code equal to that given
func (o *OrganizationsToggleKeycloakInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *OrganizationsToggleKeycloakInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/toggle/keycloak][%d] organizationsToggleKeycloakInternalServerError ", 500)
}

func (o *OrganizationsToggleKeycloakInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Organizations/toggle/keycloak][%d] organizationsToggleKeycloakInternalServerError ", 500)
}

func (o *OrganizationsToggleKeycloakInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
OrganizationsToggleKeycloakBadRequestBodyItems0 organizations toggle keycloak bad request body items0
swagger:model OrganizationsToggleKeycloakBadRequestBodyItems0
*/
type OrganizationsToggleKeycloakBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this organizations toggle keycloak bad request body items0
func (o *OrganizationsToggleKeycloakBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organizations toggle keycloak bad request body items0 based on context it is used
func (o *OrganizationsToggleKeycloakBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationsToggleKeycloakBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationsToggleKeycloakBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res OrganizationsToggleKeycloakBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationsToggleKeycloakBody organizations toggle keycloak body
swagger:model OrganizationsToggleKeycloakBody
*/
type OrganizationsToggleKeycloakBody struct {

	// mode
	Mode string `json:"mode,omitempty"`
}

// Validate validates this organizations toggle keycloak body
func (o *OrganizationsToggleKeycloakBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organizations toggle keycloak body based on context it is used
func (o *OrganizationsToggleKeycloakBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationsToggleKeycloakBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationsToggleKeycloakBody) UnmarshalBinary(b []byte) error {
	var res OrganizationsToggleKeycloakBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationsToggleKeycloakForbiddenBody organizations toggle keycloak forbidden body
swagger:model OrganizationsToggleKeycloakForbiddenBody
*/
type OrganizationsToggleKeycloakForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this organizations toggle keycloak forbidden body
func (o *OrganizationsToggleKeycloakForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organizations toggle keycloak forbidden body based on context it is used
func (o *OrganizationsToggleKeycloakForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationsToggleKeycloakForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationsToggleKeycloakForbiddenBody) UnmarshalBinary(b []byte) error {
	var res OrganizationsToggleKeycloakForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationsToggleKeycloakNotFoundBody organizations toggle keycloak not found body
swagger:model OrganizationsToggleKeycloakNotFoundBody
*/
type OrganizationsToggleKeycloakNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this organizations toggle keycloak not found body
func (o *OrganizationsToggleKeycloakNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organizations toggle keycloak not found body based on context it is used
func (o *OrganizationsToggleKeycloakNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationsToggleKeycloakNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationsToggleKeycloakNotFoundBody) UnmarshalBinary(b []byte) error {
	var res OrganizationsToggleKeycloakNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OrganizationsToggleKeycloakUnauthorizedBody organizations toggle keycloak unauthorized body
swagger:model OrganizationsToggleKeycloakUnauthorizedBody
*/
type OrganizationsToggleKeycloakUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this organizations toggle keycloak unauthorized body
func (o *OrganizationsToggleKeycloakUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organizations toggle keycloak unauthorized body based on context it is used
func (o *OrganizationsToggleKeycloakUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OrganizationsToggleKeycloakUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrganizationsToggleKeycloakUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res OrganizationsToggleKeycloakUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
