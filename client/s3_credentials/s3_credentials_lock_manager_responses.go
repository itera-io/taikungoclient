// Code generated by go-swagger; DO NOT EDIT.

package s3_credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// S3CredentialsLockManagerReader is a Reader for the S3CredentialsLockManager structure.
type S3CredentialsLockManagerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *S3CredentialsLockManagerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewS3CredentialsLockManagerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewS3CredentialsLockManagerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewS3CredentialsLockManagerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewS3CredentialsLockManagerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewS3CredentialsLockManagerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewS3CredentialsLockManagerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewS3CredentialsLockManagerOK creates a S3CredentialsLockManagerOK with default headers values
func NewS3CredentialsLockManagerOK() *S3CredentialsLockManagerOK {
	return &S3CredentialsLockManagerOK{}
}

/*
S3CredentialsLockManagerOK describes a response with status code 200, with default header values.

Success
*/
type S3CredentialsLockManagerOK struct {
	Payload models.Unit
}

// IsSuccess returns true when this s3 credentials lock manager o k response has a 2xx status code
func (o *S3CredentialsLockManagerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this s3 credentials lock manager o k response has a 3xx status code
func (o *S3CredentialsLockManagerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this s3 credentials lock manager o k response has a 4xx status code
func (o *S3CredentialsLockManagerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this s3 credentials lock manager o k response has a 5xx status code
func (o *S3CredentialsLockManagerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this s3 credentials lock manager o k response a status code equal to that given
func (o *S3CredentialsLockManagerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the s3 credentials lock manager o k response
func (o *S3CredentialsLockManagerOK) Code() int {
	return 200
}

func (o *S3CredentialsLockManagerOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/S3Credentials/lockmanager][%d] s3CredentialsLockManagerOK  %+v", 200, o.Payload)
}

func (o *S3CredentialsLockManagerOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/S3Credentials/lockmanager][%d] s3CredentialsLockManagerOK  %+v", 200, o.Payload)
}

func (o *S3CredentialsLockManagerOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *S3CredentialsLockManagerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewS3CredentialsLockManagerBadRequest creates a S3CredentialsLockManagerBadRequest with default headers values
func NewS3CredentialsLockManagerBadRequest() *S3CredentialsLockManagerBadRequest {
	return &S3CredentialsLockManagerBadRequest{}
}

/*
S3CredentialsLockManagerBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type S3CredentialsLockManagerBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this s3 credentials lock manager bad request response has a 2xx status code
func (o *S3CredentialsLockManagerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this s3 credentials lock manager bad request response has a 3xx status code
func (o *S3CredentialsLockManagerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this s3 credentials lock manager bad request response has a 4xx status code
func (o *S3CredentialsLockManagerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this s3 credentials lock manager bad request response has a 5xx status code
func (o *S3CredentialsLockManagerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this s3 credentials lock manager bad request response a status code equal to that given
func (o *S3CredentialsLockManagerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the s3 credentials lock manager bad request response
func (o *S3CredentialsLockManagerBadRequest) Code() int {
	return 400
}

func (o *S3CredentialsLockManagerBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/S3Credentials/lockmanager][%d] s3CredentialsLockManagerBadRequest  %+v", 400, o.Payload)
}

func (o *S3CredentialsLockManagerBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/S3Credentials/lockmanager][%d] s3CredentialsLockManagerBadRequest  %+v", 400, o.Payload)
}

func (o *S3CredentialsLockManagerBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *S3CredentialsLockManagerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewS3CredentialsLockManagerUnauthorized creates a S3CredentialsLockManagerUnauthorized with default headers values
func NewS3CredentialsLockManagerUnauthorized() *S3CredentialsLockManagerUnauthorized {
	return &S3CredentialsLockManagerUnauthorized{}
}

/*
S3CredentialsLockManagerUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type S3CredentialsLockManagerUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this s3 credentials lock manager unauthorized response has a 2xx status code
func (o *S3CredentialsLockManagerUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this s3 credentials lock manager unauthorized response has a 3xx status code
func (o *S3CredentialsLockManagerUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this s3 credentials lock manager unauthorized response has a 4xx status code
func (o *S3CredentialsLockManagerUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this s3 credentials lock manager unauthorized response has a 5xx status code
func (o *S3CredentialsLockManagerUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this s3 credentials lock manager unauthorized response a status code equal to that given
func (o *S3CredentialsLockManagerUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the s3 credentials lock manager unauthorized response
func (o *S3CredentialsLockManagerUnauthorized) Code() int {
	return 401
}

func (o *S3CredentialsLockManagerUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/S3Credentials/lockmanager][%d] s3CredentialsLockManagerUnauthorized  %+v", 401, o.Payload)
}

func (o *S3CredentialsLockManagerUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/S3Credentials/lockmanager][%d] s3CredentialsLockManagerUnauthorized  %+v", 401, o.Payload)
}

func (o *S3CredentialsLockManagerUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *S3CredentialsLockManagerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewS3CredentialsLockManagerForbidden creates a S3CredentialsLockManagerForbidden with default headers values
func NewS3CredentialsLockManagerForbidden() *S3CredentialsLockManagerForbidden {
	return &S3CredentialsLockManagerForbidden{}
}

/*
S3CredentialsLockManagerForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type S3CredentialsLockManagerForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this s3 credentials lock manager forbidden response has a 2xx status code
func (o *S3CredentialsLockManagerForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this s3 credentials lock manager forbidden response has a 3xx status code
func (o *S3CredentialsLockManagerForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this s3 credentials lock manager forbidden response has a 4xx status code
func (o *S3CredentialsLockManagerForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this s3 credentials lock manager forbidden response has a 5xx status code
func (o *S3CredentialsLockManagerForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this s3 credentials lock manager forbidden response a status code equal to that given
func (o *S3CredentialsLockManagerForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the s3 credentials lock manager forbidden response
func (o *S3CredentialsLockManagerForbidden) Code() int {
	return 403
}

func (o *S3CredentialsLockManagerForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/S3Credentials/lockmanager][%d] s3CredentialsLockManagerForbidden  %+v", 403, o.Payload)
}

func (o *S3CredentialsLockManagerForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/S3Credentials/lockmanager][%d] s3CredentialsLockManagerForbidden  %+v", 403, o.Payload)
}

func (o *S3CredentialsLockManagerForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *S3CredentialsLockManagerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewS3CredentialsLockManagerNotFound creates a S3CredentialsLockManagerNotFound with default headers values
func NewS3CredentialsLockManagerNotFound() *S3CredentialsLockManagerNotFound {
	return &S3CredentialsLockManagerNotFound{}
}

/*
S3CredentialsLockManagerNotFound describes a response with status code 404, with default header values.

Not Found
*/
type S3CredentialsLockManagerNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this s3 credentials lock manager not found response has a 2xx status code
func (o *S3CredentialsLockManagerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this s3 credentials lock manager not found response has a 3xx status code
func (o *S3CredentialsLockManagerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this s3 credentials lock manager not found response has a 4xx status code
func (o *S3CredentialsLockManagerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this s3 credentials lock manager not found response has a 5xx status code
func (o *S3CredentialsLockManagerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this s3 credentials lock manager not found response a status code equal to that given
func (o *S3CredentialsLockManagerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the s3 credentials lock manager not found response
func (o *S3CredentialsLockManagerNotFound) Code() int {
	return 404
}

func (o *S3CredentialsLockManagerNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/S3Credentials/lockmanager][%d] s3CredentialsLockManagerNotFound  %+v", 404, o.Payload)
}

func (o *S3CredentialsLockManagerNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/S3Credentials/lockmanager][%d] s3CredentialsLockManagerNotFound  %+v", 404, o.Payload)
}

func (o *S3CredentialsLockManagerNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *S3CredentialsLockManagerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewS3CredentialsLockManagerInternalServerError creates a S3CredentialsLockManagerInternalServerError with default headers values
func NewS3CredentialsLockManagerInternalServerError() *S3CredentialsLockManagerInternalServerError {
	return &S3CredentialsLockManagerInternalServerError{}
}

/*
S3CredentialsLockManagerInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type S3CredentialsLockManagerInternalServerError struct {
}

// IsSuccess returns true when this s3 credentials lock manager internal server error response has a 2xx status code
func (o *S3CredentialsLockManagerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this s3 credentials lock manager internal server error response has a 3xx status code
func (o *S3CredentialsLockManagerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this s3 credentials lock manager internal server error response has a 4xx status code
func (o *S3CredentialsLockManagerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this s3 credentials lock manager internal server error response has a 5xx status code
func (o *S3CredentialsLockManagerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this s3 credentials lock manager internal server error response a status code equal to that given
func (o *S3CredentialsLockManagerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the s3 credentials lock manager internal server error response
func (o *S3CredentialsLockManagerInternalServerError) Code() int {
	return 500
}

func (o *S3CredentialsLockManagerInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/S3Credentials/lockmanager][%d] s3CredentialsLockManagerInternalServerError ", 500)
}

func (o *S3CredentialsLockManagerInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/S3Credentials/lockmanager][%d] s3CredentialsLockManagerInternalServerError ", 500)
}

func (o *S3CredentialsLockManagerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
