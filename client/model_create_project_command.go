/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"time"
)

// checks if the CreateProjectCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProjectCommand{}

// CreateProjectCommand struct for CreateProjectCommand
type CreateProjectCommand struct {
	Name                    NullableString      `json:"name,omitempty"`
	KubernetesVersion       NullableString      `json:"kubernetesVersion,omitempty"`
	OrganizationId          NullableInt32       `json:"organizationId,omitempty"`
	CloudCredentialId       *int32              `json:"cloudCredentialId,omitempty"`
	S3CredentialId          NullableInt32       `json:"s3CredentialId,omitempty"`
	AccessProfileId         NullableInt32       `json:"accessProfileId,omitempty"`
	OpaProfileId            NullableInt32       `json:"opaProfileId,omitempty"`
	KubernetesProfileId     NullableInt32       `json:"kubernetesProfileId,omitempty"`
	IsKubernetes            *bool               `json:"isKubernetes,omitempty"`
	IsAutoUpgrade           *bool               `json:"isAutoUpgrade,omitempty"`
	IsBackupEnabled         *bool               `json:"isBackupEnabled,omitempty"`
	IsMonitoringEnabled     *bool               `json:"isMonitoringEnabled,omitempty"`
	AiEnabled               *bool               `json:"aiEnabled,omitempty"`
	AiCredentialId          NullableInt32       `json:"aiCredentialId,omitempty"`
	Flavors                 []string            `json:"flavors,omitempty"`
	Users                   []string            `json:"users,omitempty"`
	AlertingProfileId       NullableInt32       `json:"alertingProfileId,omitempty"`
	TaikunLBFlavor          NullableString      `json:"taikunLBFlavor,omitempty"`
	RouterIdStartRange      NullableInt32       `json:"routerIdStartRange,omitempty"`
	RouterIdEndRange        NullableInt32       `json:"routerIdEndRange,omitempty"`
	ExpiredAt               NullableTime        `json:"expiredAt,omitempty"`
	DeleteOnExpiration      *bool               `json:"deleteOnExpiration,omitempty"`
	AllowFullSpotKubernetes *bool               `json:"allowFullSpotKubernetes,omitempty"`
	AllowSpotWorkers        *bool               `json:"allowSpotWorkers,omitempty"`
	AllowSpotVMs            *bool               `json:"allowSpotVMs,omitempty"`
	MaxSpotPrice            NullableFloat64     `json:"maxSpotPrice,omitempty"`
	AutoscalingEnabled      *bool               `json:"autoscalingEnabled,omitempty"`
	AutoscalingGroupName    NullableString      `json:"autoscalingGroupName,omitempty"`
	MinSize                 *int32              `json:"minSize,omitempty"`
	MaxSize                 *int32              `json:"maxSize,omitempty"`
	DiskSize                *float64            `json:"diskSize,omitempty"`
	AutoscalingFlavor       NullableString      `json:"autoscalingFlavor,omitempty"`
	AutoscalingSpotEnabled  *bool               `json:"autoscalingSpotEnabled,omitempty"`
	Cidr                    NullableString      `json:"cidr,omitempty"`
	NetMask                 NullableInt32       `json:"netMask,omitempty"`
	SaveAsTemplate          *bool               `json:"saveAsTemplate,omitempty"`
	TemplateName            NullableString      `json:"templateName,omitempty"`
	FromTemplate            *FromTemplateDto    `json:"fromTemplate,omitempty"`
	ServerTemplates         []ServerTemplateDto `json:"serverTemplates,omitempty"`
}

// NewCreateProjectCommand instantiates a new CreateProjectCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProjectCommand() *CreateProjectCommand {
	this := CreateProjectCommand{}
	return &this
}

// NewCreateProjectCommandWithDefaults instantiates a new CreateProjectCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProjectCommandWithDefaults() *CreateProjectCommand {
	this := CreateProjectCommand{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CreateProjectCommand) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *CreateProjectCommand) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CreateProjectCommand) UnsetName() {
	o.Name.Unset()
}

// GetKubernetesVersion returns the KubernetesVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetKubernetesVersion() string {
	if o == nil || IsNil(o.KubernetesVersion.Get()) {
		var ret string
		return ret
	}
	return *o.KubernetesVersion.Get()
}

// GetKubernetesVersionOk returns a tuple with the KubernetesVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetKubernetesVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KubernetesVersion.Get(), o.KubernetesVersion.IsSet()
}

// HasKubernetesVersion returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasKubernetesVersion() bool {
	if o != nil && o.KubernetesVersion.IsSet() {
		return true
	}

	return false
}

// SetKubernetesVersion gets a reference to the given NullableString and assigns it to the KubernetesVersion field.
func (o *CreateProjectCommand) SetKubernetesVersion(v string) {
	o.KubernetesVersion.Set(&v)
}

// SetKubernetesVersionNil sets the value for KubernetesVersion to be an explicit nil
func (o *CreateProjectCommand) SetKubernetesVersionNil() {
	o.KubernetesVersion.Set(nil)
}

// UnsetKubernetesVersion ensures that no value is present for KubernetesVersion, not even an explicit nil
func (o *CreateProjectCommand) UnsetKubernetesVersion() {
	o.KubernetesVersion.Unset()
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId.Get()) {
		var ret int32
		return ret
	}
	return *o.OrganizationId.Get()
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetOrganizationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationId.Get(), o.OrganizationId.IsSet()
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasOrganizationId() bool {
	if o != nil && o.OrganizationId.IsSet() {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given NullableInt32 and assigns it to the OrganizationId field.
func (o *CreateProjectCommand) SetOrganizationId(v int32) {
	o.OrganizationId.Set(&v)
}

// SetOrganizationIdNil sets the value for OrganizationId to be an explicit nil
func (o *CreateProjectCommand) SetOrganizationIdNil() {
	o.OrganizationId.Set(nil)
}

// UnsetOrganizationId ensures that no value is present for OrganizationId, not even an explicit nil
func (o *CreateProjectCommand) UnsetOrganizationId() {
	o.OrganizationId.Unset()
}

// GetCloudCredentialId returns the CloudCredentialId field value if set, zero value otherwise.
func (o *CreateProjectCommand) GetCloudCredentialId() int32 {
	if o == nil || IsNil(o.CloudCredentialId) {
		var ret int32
		return ret
	}
	return *o.CloudCredentialId
}

// GetCloudCredentialIdOk returns a tuple with the CloudCredentialId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCommand) GetCloudCredentialIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CloudCredentialId) {
		return nil, false
	}
	return o.CloudCredentialId, true
}

// HasCloudCredentialId returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasCloudCredentialId() bool {
	if o != nil && !IsNil(o.CloudCredentialId) {
		return true
	}

	return false
}

// SetCloudCredentialId gets a reference to the given int32 and assigns it to the CloudCredentialId field.
func (o *CreateProjectCommand) SetCloudCredentialId(v int32) {
	o.CloudCredentialId = &v
}

// GetS3CredentialId returns the S3CredentialId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetS3CredentialId() int32 {
	if o == nil || IsNil(o.S3CredentialId.Get()) {
		var ret int32
		return ret
	}
	return *o.S3CredentialId.Get()
}

// GetS3CredentialIdOk returns a tuple with the S3CredentialId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetS3CredentialIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.S3CredentialId.Get(), o.S3CredentialId.IsSet()
}

// HasS3CredentialId returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasS3CredentialId() bool {
	if o != nil && o.S3CredentialId.IsSet() {
		return true
	}

	return false
}

// SetS3CredentialId gets a reference to the given NullableInt32 and assigns it to the S3CredentialId field.
func (o *CreateProjectCommand) SetS3CredentialId(v int32) {
	o.S3CredentialId.Set(&v)
}

// SetS3CredentialIdNil sets the value for S3CredentialId to be an explicit nil
func (o *CreateProjectCommand) SetS3CredentialIdNil() {
	o.S3CredentialId.Set(nil)
}

// UnsetS3CredentialId ensures that no value is present for S3CredentialId, not even an explicit nil
func (o *CreateProjectCommand) UnsetS3CredentialId() {
	o.S3CredentialId.Unset()
}

// GetAccessProfileId returns the AccessProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetAccessProfileId() int32 {
	if o == nil || IsNil(o.AccessProfileId.Get()) {
		var ret int32
		return ret
	}
	return *o.AccessProfileId.Get()
}

// GetAccessProfileIdOk returns a tuple with the AccessProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetAccessProfileIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessProfileId.Get(), o.AccessProfileId.IsSet()
}

// HasAccessProfileId returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasAccessProfileId() bool {
	if o != nil && o.AccessProfileId.IsSet() {
		return true
	}

	return false
}

// SetAccessProfileId gets a reference to the given NullableInt32 and assigns it to the AccessProfileId field.
func (o *CreateProjectCommand) SetAccessProfileId(v int32) {
	o.AccessProfileId.Set(&v)
}

// SetAccessProfileIdNil sets the value for AccessProfileId to be an explicit nil
func (o *CreateProjectCommand) SetAccessProfileIdNil() {
	o.AccessProfileId.Set(nil)
}

// UnsetAccessProfileId ensures that no value is present for AccessProfileId, not even an explicit nil
func (o *CreateProjectCommand) UnsetAccessProfileId() {
	o.AccessProfileId.Unset()
}

// GetOpaProfileId returns the OpaProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetOpaProfileId() int32 {
	if o == nil || IsNil(o.OpaProfileId.Get()) {
		var ret int32
		return ret
	}
	return *o.OpaProfileId.Get()
}

// GetOpaProfileIdOk returns a tuple with the OpaProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetOpaProfileIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OpaProfileId.Get(), o.OpaProfileId.IsSet()
}

// HasOpaProfileId returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasOpaProfileId() bool {
	if o != nil && o.OpaProfileId.IsSet() {
		return true
	}

	return false
}

// SetOpaProfileId gets a reference to the given NullableInt32 and assigns it to the OpaProfileId field.
func (o *CreateProjectCommand) SetOpaProfileId(v int32) {
	o.OpaProfileId.Set(&v)
}

// SetOpaProfileIdNil sets the value for OpaProfileId to be an explicit nil
func (o *CreateProjectCommand) SetOpaProfileIdNil() {
	o.OpaProfileId.Set(nil)
}

// UnsetOpaProfileId ensures that no value is present for OpaProfileId, not even an explicit nil
func (o *CreateProjectCommand) UnsetOpaProfileId() {
	o.OpaProfileId.Unset()
}

// GetKubernetesProfileId returns the KubernetesProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetKubernetesProfileId() int32 {
	if o == nil || IsNil(o.KubernetesProfileId.Get()) {
		var ret int32
		return ret
	}
	return *o.KubernetesProfileId.Get()
}

// GetKubernetesProfileIdOk returns a tuple with the KubernetesProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetKubernetesProfileIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.KubernetesProfileId.Get(), o.KubernetesProfileId.IsSet()
}

// HasKubernetesProfileId returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasKubernetesProfileId() bool {
	if o != nil && o.KubernetesProfileId.IsSet() {
		return true
	}

	return false
}

// SetKubernetesProfileId gets a reference to the given NullableInt32 and assigns it to the KubernetesProfileId field.
func (o *CreateProjectCommand) SetKubernetesProfileId(v int32) {
	o.KubernetesProfileId.Set(&v)
}

// SetKubernetesProfileIdNil sets the value for KubernetesProfileId to be an explicit nil
func (o *CreateProjectCommand) SetKubernetesProfileIdNil() {
	o.KubernetesProfileId.Set(nil)
}

// UnsetKubernetesProfileId ensures that no value is present for KubernetesProfileId, not even an explicit nil
func (o *CreateProjectCommand) UnsetKubernetesProfileId() {
	o.KubernetesProfileId.Unset()
}

// GetIsKubernetes returns the IsKubernetes field value if set, zero value otherwise.
func (o *CreateProjectCommand) GetIsKubernetes() bool {
	if o == nil || IsNil(o.IsKubernetes) {
		var ret bool
		return ret
	}
	return *o.IsKubernetes
}

// GetIsKubernetesOk returns a tuple with the IsKubernetes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCommand) GetIsKubernetesOk() (*bool, bool) {
	if o == nil || IsNil(o.IsKubernetes) {
		return nil, false
	}
	return o.IsKubernetes, true
}

// HasIsKubernetes returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasIsKubernetes() bool {
	if o != nil && !IsNil(o.IsKubernetes) {
		return true
	}

	return false
}

// SetIsKubernetes gets a reference to the given bool and assigns it to the IsKubernetes field.
func (o *CreateProjectCommand) SetIsKubernetes(v bool) {
	o.IsKubernetes = &v
}

// GetIsAutoUpgrade returns the IsAutoUpgrade field value if set, zero value otherwise.
func (o *CreateProjectCommand) GetIsAutoUpgrade() bool {
	if o == nil || IsNil(o.IsAutoUpgrade) {
		var ret bool
		return ret
	}
	return *o.IsAutoUpgrade
}

// GetIsAutoUpgradeOk returns a tuple with the IsAutoUpgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCommand) GetIsAutoUpgradeOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutoUpgrade) {
		return nil, false
	}
	return o.IsAutoUpgrade, true
}

// HasIsAutoUpgrade returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasIsAutoUpgrade() bool {
	if o != nil && !IsNil(o.IsAutoUpgrade) {
		return true
	}

	return false
}

// SetIsAutoUpgrade gets a reference to the given bool and assigns it to the IsAutoUpgrade field.
func (o *CreateProjectCommand) SetIsAutoUpgrade(v bool) {
	o.IsAutoUpgrade = &v
}

// GetIsBackupEnabled returns the IsBackupEnabled field value if set, zero value otherwise.
func (o *CreateProjectCommand) GetIsBackupEnabled() bool {
	if o == nil || IsNil(o.IsBackupEnabled) {
		var ret bool
		return ret
	}
	return *o.IsBackupEnabled
}

// GetIsBackupEnabledOk returns a tuple with the IsBackupEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCommand) GetIsBackupEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBackupEnabled) {
		return nil, false
	}
	return o.IsBackupEnabled, true
}

// HasIsBackupEnabled returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasIsBackupEnabled() bool {
	if o != nil && !IsNil(o.IsBackupEnabled) {
		return true
	}

	return false
}

// SetIsBackupEnabled gets a reference to the given bool and assigns it to the IsBackupEnabled field.
func (o *CreateProjectCommand) SetIsBackupEnabled(v bool) {
	o.IsBackupEnabled = &v
}

// GetIsMonitoringEnabled returns the IsMonitoringEnabled field value if set, zero value otherwise.
func (o *CreateProjectCommand) GetIsMonitoringEnabled() bool {
	if o == nil || IsNil(o.IsMonitoringEnabled) {
		var ret bool
		return ret
	}
	return *o.IsMonitoringEnabled
}

// GetIsMonitoringEnabledOk returns a tuple with the IsMonitoringEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCommand) GetIsMonitoringEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMonitoringEnabled) {
		return nil, false
	}
	return o.IsMonitoringEnabled, true
}

// HasIsMonitoringEnabled returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasIsMonitoringEnabled() bool {
	if o != nil && !IsNil(o.IsMonitoringEnabled) {
		return true
	}

	return false
}

// SetIsMonitoringEnabled gets a reference to the given bool and assigns it to the IsMonitoringEnabled field.
func (o *CreateProjectCommand) SetIsMonitoringEnabled(v bool) {
	o.IsMonitoringEnabled = &v
}

// GetAiEnabled returns the AiEnabled field value if set, zero value otherwise.
func (o *CreateProjectCommand) GetAiEnabled() bool {
	if o == nil || IsNil(o.AiEnabled) {
		var ret bool
		return ret
	}
	return *o.AiEnabled
}

// GetAiEnabledOk returns a tuple with the AiEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCommand) GetAiEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AiEnabled) {
		return nil, false
	}
	return o.AiEnabled, true
}

// HasAiEnabled returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasAiEnabled() bool {
	if o != nil && !IsNil(o.AiEnabled) {
		return true
	}

	return false
}

// SetAiEnabled gets a reference to the given bool and assigns it to the AiEnabled field.
func (o *CreateProjectCommand) SetAiEnabled(v bool) {
	o.AiEnabled = &v
}

// GetAiCredentialId returns the AiCredentialId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetAiCredentialId() int32 {
	if o == nil || IsNil(o.AiCredentialId.Get()) {
		var ret int32
		return ret
	}
	return *o.AiCredentialId.Get()
}

// GetAiCredentialIdOk returns a tuple with the AiCredentialId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetAiCredentialIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AiCredentialId.Get(), o.AiCredentialId.IsSet()
}

// HasAiCredentialId returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasAiCredentialId() bool {
	if o != nil && o.AiCredentialId.IsSet() {
		return true
	}

	return false
}

// SetAiCredentialId gets a reference to the given NullableInt32 and assigns it to the AiCredentialId field.
func (o *CreateProjectCommand) SetAiCredentialId(v int32) {
	o.AiCredentialId.Set(&v)
}

// SetAiCredentialIdNil sets the value for AiCredentialId to be an explicit nil
func (o *CreateProjectCommand) SetAiCredentialIdNil() {
	o.AiCredentialId.Set(nil)
}

// UnsetAiCredentialId ensures that no value is present for AiCredentialId, not even an explicit nil
func (o *CreateProjectCommand) UnsetAiCredentialId() {
	o.AiCredentialId.Unset()
}

// GetFlavors returns the Flavors field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetFlavors() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Flavors
}

// GetFlavorsOk returns a tuple with the Flavors field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetFlavorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Flavors) {
		return nil, false
	}
	return o.Flavors, true
}

// HasFlavors returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasFlavors() bool {
	if o != nil && IsNil(o.Flavors) {
		return true
	}

	return false
}

// SetFlavors gets a reference to the given []string and assigns it to the Flavors field.
func (o *CreateProjectCommand) SetFlavors(v []string) {
	o.Flavors = v
}

// GetUsers returns the Users field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetUsers() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetUsersOk() ([]string, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasUsers() bool {
	if o != nil && IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []string and assigns it to the Users field.
func (o *CreateProjectCommand) SetUsers(v []string) {
	o.Users = v
}

// GetAlertingProfileId returns the AlertingProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetAlertingProfileId() int32 {
	if o == nil || IsNil(o.AlertingProfileId.Get()) {
		var ret int32
		return ret
	}
	return *o.AlertingProfileId.Get()
}

// GetAlertingProfileIdOk returns a tuple with the AlertingProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetAlertingProfileIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlertingProfileId.Get(), o.AlertingProfileId.IsSet()
}

// HasAlertingProfileId returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasAlertingProfileId() bool {
	if o != nil && o.AlertingProfileId.IsSet() {
		return true
	}

	return false
}

// SetAlertingProfileId gets a reference to the given NullableInt32 and assigns it to the AlertingProfileId field.
func (o *CreateProjectCommand) SetAlertingProfileId(v int32) {
	o.AlertingProfileId.Set(&v)
}

// SetAlertingProfileIdNil sets the value for AlertingProfileId to be an explicit nil
func (o *CreateProjectCommand) SetAlertingProfileIdNil() {
	o.AlertingProfileId.Set(nil)
}

// UnsetAlertingProfileId ensures that no value is present for AlertingProfileId, not even an explicit nil
func (o *CreateProjectCommand) UnsetAlertingProfileId() {
	o.AlertingProfileId.Unset()
}

// GetTaikunLBFlavor returns the TaikunLBFlavor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetTaikunLBFlavor() string {
	if o == nil || IsNil(o.TaikunLBFlavor.Get()) {
		var ret string
		return ret
	}
	return *o.TaikunLBFlavor.Get()
}

// GetTaikunLBFlavorOk returns a tuple with the TaikunLBFlavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetTaikunLBFlavorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaikunLBFlavor.Get(), o.TaikunLBFlavor.IsSet()
}

// HasTaikunLBFlavor returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasTaikunLBFlavor() bool {
	if o != nil && o.TaikunLBFlavor.IsSet() {
		return true
	}

	return false
}

// SetTaikunLBFlavor gets a reference to the given NullableString and assigns it to the TaikunLBFlavor field.
func (o *CreateProjectCommand) SetTaikunLBFlavor(v string) {
	o.TaikunLBFlavor.Set(&v)
}

// SetTaikunLBFlavorNil sets the value for TaikunLBFlavor to be an explicit nil
func (o *CreateProjectCommand) SetTaikunLBFlavorNil() {
	o.TaikunLBFlavor.Set(nil)
}

// UnsetTaikunLBFlavor ensures that no value is present for TaikunLBFlavor, not even an explicit nil
func (o *CreateProjectCommand) UnsetTaikunLBFlavor() {
	o.TaikunLBFlavor.Unset()
}

// GetRouterIdStartRange returns the RouterIdStartRange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetRouterIdStartRange() int32 {
	if o == nil || IsNil(o.RouterIdStartRange.Get()) {
		var ret int32
		return ret
	}
	return *o.RouterIdStartRange.Get()
}

// GetRouterIdStartRangeOk returns a tuple with the RouterIdStartRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetRouterIdStartRangeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RouterIdStartRange.Get(), o.RouterIdStartRange.IsSet()
}

// HasRouterIdStartRange returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasRouterIdStartRange() bool {
	if o != nil && o.RouterIdStartRange.IsSet() {
		return true
	}

	return false
}

// SetRouterIdStartRange gets a reference to the given NullableInt32 and assigns it to the RouterIdStartRange field.
func (o *CreateProjectCommand) SetRouterIdStartRange(v int32) {
	o.RouterIdStartRange.Set(&v)
}

// SetRouterIdStartRangeNil sets the value for RouterIdStartRange to be an explicit nil
func (o *CreateProjectCommand) SetRouterIdStartRangeNil() {
	o.RouterIdStartRange.Set(nil)
}

// UnsetRouterIdStartRange ensures that no value is present for RouterIdStartRange, not even an explicit nil
func (o *CreateProjectCommand) UnsetRouterIdStartRange() {
	o.RouterIdStartRange.Unset()
}

// GetRouterIdEndRange returns the RouterIdEndRange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetRouterIdEndRange() int32 {
	if o == nil || IsNil(o.RouterIdEndRange.Get()) {
		var ret int32
		return ret
	}
	return *o.RouterIdEndRange.Get()
}

// GetRouterIdEndRangeOk returns a tuple with the RouterIdEndRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetRouterIdEndRangeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RouterIdEndRange.Get(), o.RouterIdEndRange.IsSet()
}

// HasRouterIdEndRange returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasRouterIdEndRange() bool {
	if o != nil && o.RouterIdEndRange.IsSet() {
		return true
	}

	return false
}

// SetRouterIdEndRange gets a reference to the given NullableInt32 and assigns it to the RouterIdEndRange field.
func (o *CreateProjectCommand) SetRouterIdEndRange(v int32) {
	o.RouterIdEndRange.Set(&v)
}

// SetRouterIdEndRangeNil sets the value for RouterIdEndRange to be an explicit nil
func (o *CreateProjectCommand) SetRouterIdEndRangeNil() {
	o.RouterIdEndRange.Set(nil)
}

// UnsetRouterIdEndRange ensures that no value is present for RouterIdEndRange, not even an explicit nil
func (o *CreateProjectCommand) UnsetRouterIdEndRange() {
	o.RouterIdEndRange.Unset()
}

// GetExpiredAt returns the ExpiredAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetExpiredAt() time.Time {
	if o == nil || IsNil(o.ExpiredAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ExpiredAt.Get()
}

// GetExpiredAtOk returns a tuple with the ExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetExpiredAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiredAt.Get(), o.ExpiredAt.IsSet()
}

// HasExpiredAt returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasExpiredAt() bool {
	if o != nil && o.ExpiredAt.IsSet() {
		return true
	}

	return false
}

// SetExpiredAt gets a reference to the given NullableTime and assigns it to the ExpiredAt field.
func (o *CreateProjectCommand) SetExpiredAt(v time.Time) {
	o.ExpiredAt.Set(&v)
}

// SetExpiredAtNil sets the value for ExpiredAt to be an explicit nil
func (o *CreateProjectCommand) SetExpiredAtNil() {
	o.ExpiredAt.Set(nil)
}

// UnsetExpiredAt ensures that no value is present for ExpiredAt, not even an explicit nil
func (o *CreateProjectCommand) UnsetExpiredAt() {
	o.ExpiredAt.Unset()
}

// GetDeleteOnExpiration returns the DeleteOnExpiration field value if set, zero value otherwise.
func (o *CreateProjectCommand) GetDeleteOnExpiration() bool {
	if o == nil || IsNil(o.DeleteOnExpiration) {
		var ret bool
		return ret
	}
	return *o.DeleteOnExpiration
}

// GetDeleteOnExpirationOk returns a tuple with the DeleteOnExpiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCommand) GetDeleteOnExpirationOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteOnExpiration) {
		return nil, false
	}
	return o.DeleteOnExpiration, true
}

// HasDeleteOnExpiration returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasDeleteOnExpiration() bool {
	if o != nil && !IsNil(o.DeleteOnExpiration) {
		return true
	}

	return false
}

// SetDeleteOnExpiration gets a reference to the given bool and assigns it to the DeleteOnExpiration field.
func (o *CreateProjectCommand) SetDeleteOnExpiration(v bool) {
	o.DeleteOnExpiration = &v
}

// GetAllowFullSpotKubernetes returns the AllowFullSpotKubernetes field value if set, zero value otherwise.
func (o *CreateProjectCommand) GetAllowFullSpotKubernetes() bool {
	if o == nil || IsNil(o.AllowFullSpotKubernetes) {
		var ret bool
		return ret
	}
	return *o.AllowFullSpotKubernetes
}

// GetAllowFullSpotKubernetesOk returns a tuple with the AllowFullSpotKubernetes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCommand) GetAllowFullSpotKubernetesOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowFullSpotKubernetes) {
		return nil, false
	}
	return o.AllowFullSpotKubernetes, true
}

// HasAllowFullSpotKubernetes returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasAllowFullSpotKubernetes() bool {
	if o != nil && !IsNil(o.AllowFullSpotKubernetes) {
		return true
	}

	return false
}

// SetAllowFullSpotKubernetes gets a reference to the given bool and assigns it to the AllowFullSpotKubernetes field.
func (o *CreateProjectCommand) SetAllowFullSpotKubernetes(v bool) {
	o.AllowFullSpotKubernetes = &v
}

// GetAllowSpotWorkers returns the AllowSpotWorkers field value if set, zero value otherwise.
func (o *CreateProjectCommand) GetAllowSpotWorkers() bool {
	if o == nil || IsNil(o.AllowSpotWorkers) {
		var ret bool
		return ret
	}
	return *o.AllowSpotWorkers
}

// GetAllowSpotWorkersOk returns a tuple with the AllowSpotWorkers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCommand) GetAllowSpotWorkersOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSpotWorkers) {
		return nil, false
	}
	return o.AllowSpotWorkers, true
}

// HasAllowSpotWorkers returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasAllowSpotWorkers() bool {
	if o != nil && !IsNil(o.AllowSpotWorkers) {
		return true
	}

	return false
}

// SetAllowSpotWorkers gets a reference to the given bool and assigns it to the AllowSpotWorkers field.
func (o *CreateProjectCommand) SetAllowSpotWorkers(v bool) {
	o.AllowSpotWorkers = &v
}

// GetAllowSpotVMs returns the AllowSpotVMs field value if set, zero value otherwise.
func (o *CreateProjectCommand) GetAllowSpotVMs() bool {
	if o == nil || IsNil(o.AllowSpotVMs) {
		var ret bool
		return ret
	}
	return *o.AllowSpotVMs
}

// GetAllowSpotVMsOk returns a tuple with the AllowSpotVMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCommand) GetAllowSpotVMsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSpotVMs) {
		return nil, false
	}
	return o.AllowSpotVMs, true
}

// HasAllowSpotVMs returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasAllowSpotVMs() bool {
	if o != nil && !IsNil(o.AllowSpotVMs) {
		return true
	}

	return false
}

// SetAllowSpotVMs gets a reference to the given bool and assigns it to the AllowSpotVMs field.
func (o *CreateProjectCommand) SetAllowSpotVMs(v bool) {
	o.AllowSpotVMs = &v
}

// GetMaxSpotPrice returns the MaxSpotPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetMaxSpotPrice() float64 {
	if o == nil || IsNil(o.MaxSpotPrice.Get()) {
		var ret float64
		return ret
	}
	return *o.MaxSpotPrice.Get()
}

// GetMaxSpotPriceOk returns a tuple with the MaxSpotPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetMaxSpotPriceOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxSpotPrice.Get(), o.MaxSpotPrice.IsSet()
}

// HasMaxSpotPrice returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasMaxSpotPrice() bool {
	if o != nil && o.MaxSpotPrice.IsSet() {
		return true
	}

	return false
}

// SetMaxSpotPrice gets a reference to the given NullableFloat64 and assigns it to the MaxSpotPrice field.
func (o *CreateProjectCommand) SetMaxSpotPrice(v float64) {
	o.MaxSpotPrice.Set(&v)
}

// SetMaxSpotPriceNil sets the value for MaxSpotPrice to be an explicit nil
func (o *CreateProjectCommand) SetMaxSpotPriceNil() {
	o.MaxSpotPrice.Set(nil)
}

// UnsetMaxSpotPrice ensures that no value is present for MaxSpotPrice, not even an explicit nil
func (o *CreateProjectCommand) UnsetMaxSpotPrice() {
	o.MaxSpotPrice.Unset()
}

// GetAutoscalingEnabled returns the AutoscalingEnabled field value if set, zero value otherwise.
func (o *CreateProjectCommand) GetAutoscalingEnabled() bool {
	if o == nil || IsNil(o.AutoscalingEnabled) {
		var ret bool
		return ret
	}
	return *o.AutoscalingEnabled
}

// GetAutoscalingEnabledOk returns a tuple with the AutoscalingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCommand) GetAutoscalingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoscalingEnabled) {
		return nil, false
	}
	return o.AutoscalingEnabled, true
}

// HasAutoscalingEnabled returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasAutoscalingEnabled() bool {
	if o != nil && !IsNil(o.AutoscalingEnabled) {
		return true
	}

	return false
}

// SetAutoscalingEnabled gets a reference to the given bool and assigns it to the AutoscalingEnabled field.
func (o *CreateProjectCommand) SetAutoscalingEnabled(v bool) {
	o.AutoscalingEnabled = &v
}

// GetAutoscalingGroupName returns the AutoscalingGroupName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetAutoscalingGroupName() string {
	if o == nil || IsNil(o.AutoscalingGroupName.Get()) {
		var ret string
		return ret
	}
	return *o.AutoscalingGroupName.Get()
}

// GetAutoscalingGroupNameOk returns a tuple with the AutoscalingGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetAutoscalingGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutoscalingGroupName.Get(), o.AutoscalingGroupName.IsSet()
}

// HasAutoscalingGroupName returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasAutoscalingGroupName() bool {
	if o != nil && o.AutoscalingGroupName.IsSet() {
		return true
	}

	return false
}

// SetAutoscalingGroupName gets a reference to the given NullableString and assigns it to the AutoscalingGroupName field.
func (o *CreateProjectCommand) SetAutoscalingGroupName(v string) {
	o.AutoscalingGroupName.Set(&v)
}

// SetAutoscalingGroupNameNil sets the value for AutoscalingGroupName to be an explicit nil
func (o *CreateProjectCommand) SetAutoscalingGroupNameNil() {
	o.AutoscalingGroupName.Set(nil)
}

// UnsetAutoscalingGroupName ensures that no value is present for AutoscalingGroupName, not even an explicit nil
func (o *CreateProjectCommand) UnsetAutoscalingGroupName() {
	o.AutoscalingGroupName.Unset()
}

// GetMinSize returns the MinSize field value if set, zero value otherwise.
func (o *CreateProjectCommand) GetMinSize() int32 {
	if o == nil || IsNil(o.MinSize) {
		var ret int32
		return ret
	}
	return *o.MinSize
}

// GetMinSizeOk returns a tuple with the MinSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCommand) GetMinSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.MinSize) {
		return nil, false
	}
	return o.MinSize, true
}

// HasMinSize returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasMinSize() bool {
	if o != nil && !IsNil(o.MinSize) {
		return true
	}

	return false
}

// SetMinSize gets a reference to the given int32 and assigns it to the MinSize field.
func (o *CreateProjectCommand) SetMinSize(v int32) {
	o.MinSize = &v
}

// GetMaxSize returns the MaxSize field value if set, zero value otherwise.
func (o *CreateProjectCommand) GetMaxSize() int32 {
	if o == nil || IsNil(o.MaxSize) {
		var ret int32
		return ret
	}
	return *o.MaxSize
}

// GetMaxSizeOk returns a tuple with the MaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCommand) GetMaxSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxSize) {
		return nil, false
	}
	return o.MaxSize, true
}

// HasMaxSize returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasMaxSize() bool {
	if o != nil && !IsNil(o.MaxSize) {
		return true
	}

	return false
}

// SetMaxSize gets a reference to the given int32 and assigns it to the MaxSize field.
func (o *CreateProjectCommand) SetMaxSize(v int32) {
	o.MaxSize = &v
}

// GetDiskSize returns the DiskSize field value if set, zero value otherwise.
func (o *CreateProjectCommand) GetDiskSize() float64 {
	if o == nil || IsNil(o.DiskSize) {
		var ret float64
		return ret
	}
	return *o.DiskSize
}

// GetDiskSizeOk returns a tuple with the DiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCommand) GetDiskSizeOk() (*float64, bool) {
	if o == nil || IsNil(o.DiskSize) {
		return nil, false
	}
	return o.DiskSize, true
}

// HasDiskSize returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasDiskSize() bool {
	if o != nil && !IsNil(o.DiskSize) {
		return true
	}

	return false
}

// SetDiskSize gets a reference to the given float64 and assigns it to the DiskSize field.
func (o *CreateProjectCommand) SetDiskSize(v float64) {
	o.DiskSize = &v
}

// GetAutoscalingFlavor returns the AutoscalingFlavor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetAutoscalingFlavor() string {
	if o == nil || IsNil(o.AutoscalingFlavor.Get()) {
		var ret string
		return ret
	}
	return *o.AutoscalingFlavor.Get()
}

// GetAutoscalingFlavorOk returns a tuple with the AutoscalingFlavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetAutoscalingFlavorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutoscalingFlavor.Get(), o.AutoscalingFlavor.IsSet()
}

// HasAutoscalingFlavor returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasAutoscalingFlavor() bool {
	if o != nil && o.AutoscalingFlavor.IsSet() {
		return true
	}

	return false
}

// SetAutoscalingFlavor gets a reference to the given NullableString and assigns it to the AutoscalingFlavor field.
func (o *CreateProjectCommand) SetAutoscalingFlavor(v string) {
	o.AutoscalingFlavor.Set(&v)
}

// SetAutoscalingFlavorNil sets the value for AutoscalingFlavor to be an explicit nil
func (o *CreateProjectCommand) SetAutoscalingFlavorNil() {
	o.AutoscalingFlavor.Set(nil)
}

// UnsetAutoscalingFlavor ensures that no value is present for AutoscalingFlavor, not even an explicit nil
func (o *CreateProjectCommand) UnsetAutoscalingFlavor() {
	o.AutoscalingFlavor.Unset()
}

// GetAutoscalingSpotEnabled returns the AutoscalingSpotEnabled field value if set, zero value otherwise.
func (o *CreateProjectCommand) GetAutoscalingSpotEnabled() bool {
	if o == nil || IsNil(o.AutoscalingSpotEnabled) {
		var ret bool
		return ret
	}
	return *o.AutoscalingSpotEnabled
}

// GetAutoscalingSpotEnabledOk returns a tuple with the AutoscalingSpotEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCommand) GetAutoscalingSpotEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoscalingSpotEnabled) {
		return nil, false
	}
	return o.AutoscalingSpotEnabled, true
}

// HasAutoscalingSpotEnabled returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasAutoscalingSpotEnabled() bool {
	if o != nil && !IsNil(o.AutoscalingSpotEnabled) {
		return true
	}

	return false
}

// SetAutoscalingSpotEnabled gets a reference to the given bool and assigns it to the AutoscalingSpotEnabled field.
func (o *CreateProjectCommand) SetAutoscalingSpotEnabled(v bool) {
	o.AutoscalingSpotEnabled = &v
}

// GetCidr returns the Cidr field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetCidr() string {
	if o == nil || IsNil(o.Cidr.Get()) {
		var ret string
		return ret
	}
	return *o.Cidr.Get()
}

// GetCidrOk returns a tuple with the Cidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetCidrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cidr.Get(), o.Cidr.IsSet()
}

// HasCidr returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasCidr() bool {
	if o != nil && o.Cidr.IsSet() {
		return true
	}

	return false
}

// SetCidr gets a reference to the given NullableString and assigns it to the Cidr field.
func (o *CreateProjectCommand) SetCidr(v string) {
	o.Cidr.Set(&v)
}

// SetCidrNil sets the value for Cidr to be an explicit nil
func (o *CreateProjectCommand) SetCidrNil() {
	o.Cidr.Set(nil)
}

// UnsetCidr ensures that no value is present for Cidr, not even an explicit nil
func (o *CreateProjectCommand) UnsetCidr() {
	o.Cidr.Unset()
}

// GetNetMask returns the NetMask field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetNetMask() int32 {
	if o == nil || IsNil(o.NetMask.Get()) {
		var ret int32
		return ret
	}
	return *o.NetMask.Get()
}

// GetNetMaskOk returns a tuple with the NetMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetNetMaskOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetMask.Get(), o.NetMask.IsSet()
}

// HasNetMask returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasNetMask() bool {
	if o != nil && o.NetMask.IsSet() {
		return true
	}

	return false
}

// SetNetMask gets a reference to the given NullableInt32 and assigns it to the NetMask field.
func (o *CreateProjectCommand) SetNetMask(v int32) {
	o.NetMask.Set(&v)
}

// SetNetMaskNil sets the value for NetMask to be an explicit nil
func (o *CreateProjectCommand) SetNetMaskNil() {
	o.NetMask.Set(nil)
}

// UnsetNetMask ensures that no value is present for NetMask, not even an explicit nil
func (o *CreateProjectCommand) UnsetNetMask() {
	o.NetMask.Unset()
}

// GetSaveAsTemplate returns the SaveAsTemplate field value if set, zero value otherwise.
func (o *CreateProjectCommand) GetSaveAsTemplate() bool {
	if o == nil || IsNil(o.SaveAsTemplate) {
		var ret bool
		return ret
	}
	return *o.SaveAsTemplate
}

// GetSaveAsTemplateOk returns a tuple with the SaveAsTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCommand) GetSaveAsTemplateOk() (*bool, bool) {
	if o == nil || IsNil(o.SaveAsTemplate) {
		return nil, false
	}
	return o.SaveAsTemplate, true
}

// HasSaveAsTemplate returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasSaveAsTemplate() bool {
	if o != nil && !IsNil(o.SaveAsTemplate) {
		return true
	}

	return false
}

// SetSaveAsTemplate gets a reference to the given bool and assigns it to the SaveAsTemplate field.
func (o *CreateProjectCommand) SetSaveAsTemplate(v bool) {
	o.SaveAsTemplate = &v
}

// GetTemplateName returns the TemplateName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetTemplateName() string {
	if o == nil || IsNil(o.TemplateName.Get()) {
		var ret string
		return ret
	}
	return *o.TemplateName.Get()
}

// GetTemplateNameOk returns a tuple with the TemplateName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetTemplateNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TemplateName.Get(), o.TemplateName.IsSet()
}

// HasTemplateName returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasTemplateName() bool {
	if o != nil && o.TemplateName.IsSet() {
		return true
	}

	return false
}

// SetTemplateName gets a reference to the given NullableString and assigns it to the TemplateName field.
func (o *CreateProjectCommand) SetTemplateName(v string) {
	o.TemplateName.Set(&v)
}

// SetTemplateNameNil sets the value for TemplateName to be an explicit nil
func (o *CreateProjectCommand) SetTemplateNameNil() {
	o.TemplateName.Set(nil)
}

// UnsetTemplateName ensures that no value is present for TemplateName, not even an explicit nil
func (o *CreateProjectCommand) UnsetTemplateName() {
	o.TemplateName.Unset()
}

// GetFromTemplate returns the FromTemplate field value if set, zero value otherwise.
func (o *CreateProjectCommand) GetFromTemplate() FromTemplateDto {
	if o == nil || IsNil(o.FromTemplate) {
		var ret FromTemplateDto
		return ret
	}
	return *o.FromTemplate
}

// GetFromTemplateOk returns a tuple with the FromTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProjectCommand) GetFromTemplateOk() (*FromTemplateDto, bool) {
	if o == nil || IsNil(o.FromTemplate) {
		return nil, false
	}
	return o.FromTemplate, true
}

// HasFromTemplate returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasFromTemplate() bool {
	if o != nil && !IsNil(o.FromTemplate) {
		return true
	}

	return false
}

// SetFromTemplate gets a reference to the given FromTemplateDto and assigns it to the FromTemplate field.
func (o *CreateProjectCommand) SetFromTemplate(v FromTemplateDto) {
	o.FromTemplate = &v
}

// GetServerTemplates returns the ServerTemplates field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectCommand) GetServerTemplates() []ServerTemplateDto {
	if o == nil {
		var ret []ServerTemplateDto
		return ret
	}
	return o.ServerTemplates
}

// GetServerTemplatesOk returns a tuple with the ServerTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectCommand) GetServerTemplatesOk() ([]ServerTemplateDto, bool) {
	if o == nil || IsNil(o.ServerTemplates) {
		return nil, false
	}
	return o.ServerTemplates, true
}

// HasServerTemplates returns a boolean if a field has been set.
func (o *CreateProjectCommand) HasServerTemplates() bool {
	if o != nil && IsNil(o.ServerTemplates) {
		return true
	}

	return false
}

// SetServerTemplates gets a reference to the given []ServerTemplateDto and assigns it to the ServerTemplates field.
func (o *CreateProjectCommand) SetServerTemplates(v []ServerTemplateDto) {
	o.ServerTemplates = v
}

func (o CreateProjectCommand) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProjectCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.KubernetesVersion.IsSet() {
		toSerialize["kubernetesVersion"] = o.KubernetesVersion.Get()
	}
	if o.OrganizationId.IsSet() {
		toSerialize["organizationId"] = o.OrganizationId.Get()
	}
	if !IsNil(o.CloudCredentialId) {
		toSerialize["cloudCredentialId"] = o.CloudCredentialId
	}
	if o.S3CredentialId.IsSet() {
		toSerialize["s3CredentialId"] = o.S3CredentialId.Get()
	}
	if o.AccessProfileId.IsSet() {
		toSerialize["accessProfileId"] = o.AccessProfileId.Get()
	}
	if o.OpaProfileId.IsSet() {
		toSerialize["opaProfileId"] = o.OpaProfileId.Get()
	}
	if o.KubernetesProfileId.IsSet() {
		toSerialize["kubernetesProfileId"] = o.KubernetesProfileId.Get()
	}
	if !IsNil(o.IsKubernetes) {
		toSerialize["isKubernetes"] = o.IsKubernetes
	}
	if !IsNil(o.IsAutoUpgrade) {
		toSerialize["isAutoUpgrade"] = o.IsAutoUpgrade
	}
	if !IsNil(o.IsBackupEnabled) {
		toSerialize["isBackupEnabled"] = o.IsBackupEnabled
	}
	if !IsNil(o.IsMonitoringEnabled) {
		toSerialize["isMonitoringEnabled"] = o.IsMonitoringEnabled
	}
	if !IsNil(o.AiEnabled) {
		toSerialize["aiEnabled"] = o.AiEnabled
	}
	if o.AiCredentialId.IsSet() {
		toSerialize["aiCredentialId"] = o.AiCredentialId.Get()
	}
	if o.Flavors != nil {
		toSerialize["flavors"] = o.Flavors
	}
	if o.Users != nil {
		toSerialize["users"] = o.Users
	}
	if o.AlertingProfileId.IsSet() {
		toSerialize["alertingProfileId"] = o.AlertingProfileId.Get()
	}
	if o.TaikunLBFlavor.IsSet() {
		toSerialize["taikunLBFlavor"] = o.TaikunLBFlavor.Get()
	}
	if o.RouterIdStartRange.IsSet() {
		toSerialize["routerIdStartRange"] = o.RouterIdStartRange.Get()
	}
	if o.RouterIdEndRange.IsSet() {
		toSerialize["routerIdEndRange"] = o.RouterIdEndRange.Get()
	}
	if o.ExpiredAt.IsSet() {
		toSerialize["expiredAt"] = o.ExpiredAt.Get()
	}
	if !IsNil(o.DeleteOnExpiration) {
		toSerialize["deleteOnExpiration"] = o.DeleteOnExpiration
	}
	if !IsNil(o.AllowFullSpotKubernetes) {
		toSerialize["allowFullSpotKubernetes"] = o.AllowFullSpotKubernetes
	}
	if !IsNil(o.AllowSpotWorkers) {
		toSerialize["allowSpotWorkers"] = o.AllowSpotWorkers
	}
	if !IsNil(o.AllowSpotVMs) {
		toSerialize["allowSpotVMs"] = o.AllowSpotVMs
	}
	if o.MaxSpotPrice.IsSet() {
		toSerialize["maxSpotPrice"] = o.MaxSpotPrice.Get()
	}
	if !IsNil(o.AutoscalingEnabled) {
		toSerialize["autoscalingEnabled"] = o.AutoscalingEnabled
	}
	if o.AutoscalingGroupName.IsSet() {
		toSerialize["autoscalingGroupName"] = o.AutoscalingGroupName.Get()
	}
	if !IsNil(o.MinSize) {
		toSerialize["minSize"] = o.MinSize
	}
	if !IsNil(o.MaxSize) {
		toSerialize["maxSize"] = o.MaxSize
	}
	if !IsNil(o.DiskSize) {
		toSerialize["diskSize"] = o.DiskSize
	}
	if o.AutoscalingFlavor.IsSet() {
		toSerialize["autoscalingFlavor"] = o.AutoscalingFlavor.Get()
	}
	if !IsNil(o.AutoscalingSpotEnabled) {
		toSerialize["autoscalingSpotEnabled"] = o.AutoscalingSpotEnabled
	}
	if o.Cidr.IsSet() {
		toSerialize["cidr"] = o.Cidr.Get()
	}
	if o.NetMask.IsSet() {
		toSerialize["netMask"] = o.NetMask.Get()
	}
	if !IsNil(o.SaveAsTemplate) {
		toSerialize["saveAsTemplate"] = o.SaveAsTemplate
	}
	if o.TemplateName.IsSet() {
		toSerialize["templateName"] = o.TemplateName.Get()
	}
	if !IsNil(o.FromTemplate) {
		toSerialize["fromTemplate"] = o.FromTemplate
	}
	if o.ServerTemplates != nil {
		toSerialize["serverTemplates"] = o.ServerTemplates
	}
	return toSerialize, nil
}

type NullableCreateProjectCommand struct {
	value *CreateProjectCommand
	isSet bool
}

func (v NullableCreateProjectCommand) Get() *CreateProjectCommand {
	return v.value
}

func (v *NullableCreateProjectCommand) Set(val *CreateProjectCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProjectCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProjectCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProjectCommand(val *CreateProjectCommand) *NullableCreateProjectCommand {
	return &NullableCreateProjectCommand{value: val, isSet: true}
}

func (v NullableCreateProjectCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProjectCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
