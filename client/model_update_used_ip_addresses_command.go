/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the UpdateUsedIpAddressesCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateUsedIpAddressesCommand{}

// UpdateUsedIpAddressesCommand struct for UpdateUsedIpAddressesCommand
type UpdateUsedIpAddressesCommand struct {
	IpAddress []string `json:"ipAddress,omitempty"`
}

// NewUpdateUsedIpAddressesCommand instantiates a new UpdateUsedIpAddressesCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateUsedIpAddressesCommand() *UpdateUsedIpAddressesCommand {
	this := UpdateUsedIpAddressesCommand{}
	return &this
}

// NewUpdateUsedIpAddressesCommandWithDefaults instantiates a new UpdateUsedIpAddressesCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateUsedIpAddressesCommandWithDefaults() *UpdateUsedIpAddressesCommand {
	this := UpdateUsedIpAddressesCommand{}
	return &this
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateUsedIpAddressesCommand) GetIpAddress() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateUsedIpAddressesCommand) GetIpAddressOk() ([]string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *UpdateUsedIpAddressesCommand) HasIpAddress() bool {
	if o != nil && IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given []string and assigns it to the IpAddress field.
func (o *UpdateUsedIpAddressesCommand) SetIpAddress(v []string) {
	o.IpAddress = v
}

func (o UpdateUsedIpAddressesCommand) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateUsedIpAddressesCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.IpAddress != nil {
		toSerialize["ipAddress"] = o.IpAddress
	}
	return toSerialize, nil
}

type NullableUpdateUsedIpAddressesCommand struct {
	value *UpdateUsedIpAddressesCommand
	isSet bool
}

func (v NullableUpdateUsedIpAddressesCommand) Get() *UpdateUsedIpAddressesCommand {
	return v.value
}

func (v *NullableUpdateUsedIpAddressesCommand) Set(val *UpdateUsedIpAddressesCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateUsedIpAddressesCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateUsedIpAddressesCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateUsedIpAddressesCommand(val *UpdateUsedIpAddressesCommand) *NullableUpdateUsedIpAddressesCommand {
	return &NullableUpdateUsedIpAddressesCommand{value: val, isSet: true}
}

func (v NullableUpdateUsedIpAddressesCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateUsedIpAddressesCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
