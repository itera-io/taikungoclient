// Code generated by go-swagger; DO NOT EDIT.

package cron_job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// CronJobDeleteKubeConfigsReader is a Reader for the CronJobDeleteKubeConfigs structure.
type CronJobDeleteKubeConfigsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CronJobDeleteKubeConfigsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCronJobDeleteKubeConfigsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCronJobDeleteKubeConfigsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCronJobDeleteKubeConfigsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCronJobDeleteKubeConfigsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCronJobDeleteKubeConfigsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCronJobDeleteKubeConfigsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCronJobDeleteKubeConfigsOK creates a CronJobDeleteKubeConfigsOK with default headers values
func NewCronJobDeleteKubeConfigsOK() *CronJobDeleteKubeConfigsOK {
	return &CronJobDeleteKubeConfigsOK{}
}

/*
CronJobDeleteKubeConfigsOK describes a response with status code 200, with default header values.

Success
*/
type CronJobDeleteKubeConfigsOK struct {
	Payload models.Unit
}

// IsSuccess returns true when this cron job delete kube configs o k response has a 2xx status code
func (o *CronJobDeleteKubeConfigsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cron job delete kube configs o k response has a 3xx status code
func (o *CronJobDeleteKubeConfigsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job delete kube configs o k response has a 4xx status code
func (o *CronJobDeleteKubeConfigsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cron job delete kube configs o k response has a 5xx status code
func (o *CronJobDeleteKubeConfigsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job delete kube configs o k response a status code equal to that given
func (o *CronJobDeleteKubeConfigsOK) IsCode(code int) bool {
	return code == 200
}

func (o *CronJobDeleteKubeConfigsOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/delete-kube-configs][%d] cronJobDeleteKubeConfigsOK  %+v", 200, o.Payload)
}

func (o *CronJobDeleteKubeConfigsOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/delete-kube-configs][%d] cronJobDeleteKubeConfigsOK  %+v", 200, o.Payload)
}

func (o *CronJobDeleteKubeConfigsOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *CronJobDeleteKubeConfigsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeleteKubeConfigsBadRequest creates a CronJobDeleteKubeConfigsBadRequest with default headers values
func NewCronJobDeleteKubeConfigsBadRequest() *CronJobDeleteKubeConfigsBadRequest {
	return &CronJobDeleteKubeConfigsBadRequest{}
}

/*
CronJobDeleteKubeConfigsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CronJobDeleteKubeConfigsBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this cron job delete kube configs bad request response has a 2xx status code
func (o *CronJobDeleteKubeConfigsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job delete kube configs bad request response has a 3xx status code
func (o *CronJobDeleteKubeConfigsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job delete kube configs bad request response has a 4xx status code
func (o *CronJobDeleteKubeConfigsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job delete kube configs bad request response has a 5xx status code
func (o *CronJobDeleteKubeConfigsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job delete kube configs bad request response a status code equal to that given
func (o *CronJobDeleteKubeConfigsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CronJobDeleteKubeConfigsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/delete-kube-configs][%d] cronJobDeleteKubeConfigsBadRequest  %+v", 400, o.Payload)
}

func (o *CronJobDeleteKubeConfigsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/delete-kube-configs][%d] cronJobDeleteKubeConfigsBadRequest  %+v", 400, o.Payload)
}

func (o *CronJobDeleteKubeConfigsBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *CronJobDeleteKubeConfigsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeleteKubeConfigsUnauthorized creates a CronJobDeleteKubeConfigsUnauthorized with default headers values
func NewCronJobDeleteKubeConfigsUnauthorized() *CronJobDeleteKubeConfigsUnauthorized {
	return &CronJobDeleteKubeConfigsUnauthorized{}
}

/*
CronJobDeleteKubeConfigsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CronJobDeleteKubeConfigsUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this cron job delete kube configs unauthorized response has a 2xx status code
func (o *CronJobDeleteKubeConfigsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job delete kube configs unauthorized response has a 3xx status code
func (o *CronJobDeleteKubeConfigsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job delete kube configs unauthorized response has a 4xx status code
func (o *CronJobDeleteKubeConfigsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job delete kube configs unauthorized response has a 5xx status code
func (o *CronJobDeleteKubeConfigsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job delete kube configs unauthorized response a status code equal to that given
func (o *CronJobDeleteKubeConfigsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CronJobDeleteKubeConfigsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/delete-kube-configs][%d] cronJobDeleteKubeConfigsUnauthorized  %+v", 401, o.Payload)
}

func (o *CronJobDeleteKubeConfigsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/delete-kube-configs][%d] cronJobDeleteKubeConfigsUnauthorized  %+v", 401, o.Payload)
}

func (o *CronJobDeleteKubeConfigsUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CronJobDeleteKubeConfigsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeleteKubeConfigsForbidden creates a CronJobDeleteKubeConfigsForbidden with default headers values
func NewCronJobDeleteKubeConfigsForbidden() *CronJobDeleteKubeConfigsForbidden {
	return &CronJobDeleteKubeConfigsForbidden{}
}

/*
CronJobDeleteKubeConfigsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CronJobDeleteKubeConfigsForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this cron job delete kube configs forbidden response has a 2xx status code
func (o *CronJobDeleteKubeConfigsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job delete kube configs forbidden response has a 3xx status code
func (o *CronJobDeleteKubeConfigsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job delete kube configs forbidden response has a 4xx status code
func (o *CronJobDeleteKubeConfigsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job delete kube configs forbidden response has a 5xx status code
func (o *CronJobDeleteKubeConfigsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job delete kube configs forbidden response a status code equal to that given
func (o *CronJobDeleteKubeConfigsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CronJobDeleteKubeConfigsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/delete-kube-configs][%d] cronJobDeleteKubeConfigsForbidden  %+v", 403, o.Payload)
}

func (o *CronJobDeleteKubeConfigsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/delete-kube-configs][%d] cronJobDeleteKubeConfigsForbidden  %+v", 403, o.Payload)
}

func (o *CronJobDeleteKubeConfigsForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CronJobDeleteKubeConfigsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeleteKubeConfigsNotFound creates a CronJobDeleteKubeConfigsNotFound with default headers values
func NewCronJobDeleteKubeConfigsNotFound() *CronJobDeleteKubeConfigsNotFound {
	return &CronJobDeleteKubeConfigsNotFound{}
}

/*
CronJobDeleteKubeConfigsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CronJobDeleteKubeConfigsNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this cron job delete kube configs not found response has a 2xx status code
func (o *CronJobDeleteKubeConfigsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job delete kube configs not found response has a 3xx status code
func (o *CronJobDeleteKubeConfigsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job delete kube configs not found response has a 4xx status code
func (o *CronJobDeleteKubeConfigsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job delete kube configs not found response has a 5xx status code
func (o *CronJobDeleteKubeConfigsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job delete kube configs not found response a status code equal to that given
func (o *CronJobDeleteKubeConfigsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CronJobDeleteKubeConfigsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/delete-kube-configs][%d] cronJobDeleteKubeConfigsNotFound  %+v", 404, o.Payload)
}

func (o *CronJobDeleteKubeConfigsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/delete-kube-configs][%d] cronJobDeleteKubeConfigsNotFound  %+v", 404, o.Payload)
}

func (o *CronJobDeleteKubeConfigsNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CronJobDeleteKubeConfigsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeleteKubeConfigsInternalServerError creates a CronJobDeleteKubeConfigsInternalServerError with default headers values
func NewCronJobDeleteKubeConfigsInternalServerError() *CronJobDeleteKubeConfigsInternalServerError {
	return &CronJobDeleteKubeConfigsInternalServerError{}
}

/*
CronJobDeleteKubeConfigsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CronJobDeleteKubeConfigsInternalServerError struct {
}

// IsSuccess returns true when this cron job delete kube configs internal server error response has a 2xx status code
func (o *CronJobDeleteKubeConfigsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job delete kube configs internal server error response has a 3xx status code
func (o *CronJobDeleteKubeConfigsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job delete kube configs internal server error response has a 4xx status code
func (o *CronJobDeleteKubeConfigsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cron job delete kube configs internal server error response has a 5xx status code
func (o *CronJobDeleteKubeConfigsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cron job delete kube configs internal server error response a status code equal to that given
func (o *CronJobDeleteKubeConfigsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CronJobDeleteKubeConfigsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/delete-kube-configs][%d] cronJobDeleteKubeConfigsInternalServerError ", 500)
}

func (o *CronJobDeleteKubeConfigsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/delete-kube-configs][%d] cronJobDeleteKubeConfigsInternalServerError ", 500)
}

func (o *CronJobDeleteKubeConfigsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
