// Code generated by go-swagger; DO NOT EDIT.

package cron_job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// CronJobDeleteExpiredRefreshTokensReader is a Reader for the CronJobDeleteExpiredRefreshTokens structure.
type CronJobDeleteExpiredRefreshTokensReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CronJobDeleteExpiredRefreshTokensReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCronJobDeleteExpiredRefreshTokensOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCronJobDeleteExpiredRefreshTokensBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCronJobDeleteExpiredRefreshTokensUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCronJobDeleteExpiredRefreshTokensForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCronJobDeleteExpiredRefreshTokensNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCronJobDeleteExpiredRefreshTokensInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCronJobDeleteExpiredRefreshTokensOK creates a CronJobDeleteExpiredRefreshTokensOK with default headers values
func NewCronJobDeleteExpiredRefreshTokensOK() *CronJobDeleteExpiredRefreshTokensOK {
	return &CronJobDeleteExpiredRefreshTokensOK{}
}

/* CronJobDeleteExpiredRefreshTokensOK describes a response with status code 200, with default header values.

Success
*/
type CronJobDeleteExpiredRefreshTokensOK struct {
	Payload models.Unit
}

func (o *CronJobDeleteExpiredRefreshTokensOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/refresh-tokens][%d] cronJobDeleteExpiredRefreshTokensOK  %+v", 200, o.Payload)
}
func (o *CronJobDeleteExpiredRefreshTokensOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *CronJobDeleteExpiredRefreshTokensOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeleteExpiredRefreshTokensBadRequest creates a CronJobDeleteExpiredRefreshTokensBadRequest with default headers values
func NewCronJobDeleteExpiredRefreshTokensBadRequest() *CronJobDeleteExpiredRefreshTokensBadRequest {
	return &CronJobDeleteExpiredRefreshTokensBadRequest{}
}

/* CronJobDeleteExpiredRefreshTokensBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CronJobDeleteExpiredRefreshTokensBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *CronJobDeleteExpiredRefreshTokensBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/refresh-tokens][%d] cronJobDeleteExpiredRefreshTokensBadRequest  %+v", 400, o.Payload)
}
func (o *CronJobDeleteExpiredRefreshTokensBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *CronJobDeleteExpiredRefreshTokensBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeleteExpiredRefreshTokensUnauthorized creates a CronJobDeleteExpiredRefreshTokensUnauthorized with default headers values
func NewCronJobDeleteExpiredRefreshTokensUnauthorized() *CronJobDeleteExpiredRefreshTokensUnauthorized {
	return &CronJobDeleteExpiredRefreshTokensUnauthorized{}
}

/* CronJobDeleteExpiredRefreshTokensUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CronJobDeleteExpiredRefreshTokensUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *CronJobDeleteExpiredRefreshTokensUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/refresh-tokens][%d] cronJobDeleteExpiredRefreshTokensUnauthorized  %+v", 401, o.Payload)
}
func (o *CronJobDeleteExpiredRefreshTokensUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CronJobDeleteExpiredRefreshTokensUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeleteExpiredRefreshTokensForbidden creates a CronJobDeleteExpiredRefreshTokensForbidden with default headers values
func NewCronJobDeleteExpiredRefreshTokensForbidden() *CronJobDeleteExpiredRefreshTokensForbidden {
	return &CronJobDeleteExpiredRefreshTokensForbidden{}
}

/* CronJobDeleteExpiredRefreshTokensForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CronJobDeleteExpiredRefreshTokensForbidden struct {
	Payload *models.ProblemDetails
}

func (o *CronJobDeleteExpiredRefreshTokensForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/refresh-tokens][%d] cronJobDeleteExpiredRefreshTokensForbidden  %+v", 403, o.Payload)
}
func (o *CronJobDeleteExpiredRefreshTokensForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CronJobDeleteExpiredRefreshTokensForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeleteExpiredRefreshTokensNotFound creates a CronJobDeleteExpiredRefreshTokensNotFound with default headers values
func NewCronJobDeleteExpiredRefreshTokensNotFound() *CronJobDeleteExpiredRefreshTokensNotFound {
	return &CronJobDeleteExpiredRefreshTokensNotFound{}
}

/* CronJobDeleteExpiredRefreshTokensNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CronJobDeleteExpiredRefreshTokensNotFound struct {
	Payload *models.ProblemDetails
}

func (o *CronJobDeleteExpiredRefreshTokensNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/refresh-tokens][%d] cronJobDeleteExpiredRefreshTokensNotFound  %+v", 404, o.Payload)
}
func (o *CronJobDeleteExpiredRefreshTokensNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CronJobDeleteExpiredRefreshTokensNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeleteExpiredRefreshTokensInternalServerError creates a CronJobDeleteExpiredRefreshTokensInternalServerError with default headers values
func NewCronJobDeleteExpiredRefreshTokensInternalServerError() *CronJobDeleteExpiredRefreshTokensInternalServerError {
	return &CronJobDeleteExpiredRefreshTokensInternalServerError{}
}

/* CronJobDeleteExpiredRefreshTokensInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CronJobDeleteExpiredRefreshTokensInternalServerError struct {
}

func (o *CronJobDeleteExpiredRefreshTokensInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/refresh-tokens][%d] cronJobDeleteExpiredRefreshTokensInternalServerError ", 500)
}

func (o *CronJobDeleteExpiredRefreshTokensInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
