// Code generated by go-swagger; DO NOT EDIT.

package cron_job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CronJobBlockOrganizationReader is a Reader for the CronJobBlockOrganization structure.
type CronJobBlockOrganizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CronJobBlockOrganizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCronJobBlockOrganizationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCronJobBlockOrganizationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCronJobBlockOrganizationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCronJobBlockOrganizationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCronJobBlockOrganizationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCronJobBlockOrganizationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCronJobBlockOrganizationOK creates a CronJobBlockOrganizationOK with default headers values
func NewCronJobBlockOrganizationOK() *CronJobBlockOrganizationOK {
	return &CronJobBlockOrganizationOK{}
}

/*
CronJobBlockOrganizationOK describes a response with status code 200, with default header values.

Success
*/
type CronJobBlockOrganizationOK struct {
}

// IsSuccess returns true when this cron job block organization o k response has a 2xx status code
func (o *CronJobBlockOrganizationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cron job block organization o k response has a 3xx status code
func (o *CronJobBlockOrganizationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job block organization o k response has a 4xx status code
func (o *CronJobBlockOrganizationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cron job block organization o k response has a 5xx status code
func (o *CronJobBlockOrganizationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job block organization o k response a status code equal to that given
func (o *CronJobBlockOrganizationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the cron job block organization o k response
func (o *CronJobBlockOrganizationOK) Code() int {
	return 200
}

func (o *CronJobBlockOrganizationOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/block-organization][%d] cronJobBlockOrganizationOK ", 200)
}

func (o *CronJobBlockOrganizationOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/block-organization][%d] cronJobBlockOrganizationOK ", 200)
}

func (o *CronJobBlockOrganizationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCronJobBlockOrganizationBadRequest creates a CronJobBlockOrganizationBadRequest with default headers values
func NewCronJobBlockOrganizationBadRequest() *CronJobBlockOrganizationBadRequest {
	return &CronJobBlockOrganizationBadRequest{}
}

/*
CronJobBlockOrganizationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CronJobBlockOrganizationBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this cron job block organization bad request response has a 2xx status code
func (o *CronJobBlockOrganizationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job block organization bad request response has a 3xx status code
func (o *CronJobBlockOrganizationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job block organization bad request response has a 4xx status code
func (o *CronJobBlockOrganizationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job block organization bad request response has a 5xx status code
func (o *CronJobBlockOrganizationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job block organization bad request response a status code equal to that given
func (o *CronJobBlockOrganizationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the cron job block organization bad request response
func (o *CronJobBlockOrganizationBadRequest) Code() int {
	return 400
}

func (o *CronJobBlockOrganizationBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/block-organization][%d] cronJobBlockOrganizationBadRequest  %+v", 400, o.Payload)
}

func (o *CronJobBlockOrganizationBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/block-organization][%d] cronJobBlockOrganizationBadRequest  %+v", 400, o.Payload)
}

func (o *CronJobBlockOrganizationBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *CronJobBlockOrganizationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobBlockOrganizationUnauthorized creates a CronJobBlockOrganizationUnauthorized with default headers values
func NewCronJobBlockOrganizationUnauthorized() *CronJobBlockOrganizationUnauthorized {
	return &CronJobBlockOrganizationUnauthorized{}
}

/*
CronJobBlockOrganizationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CronJobBlockOrganizationUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this cron job block organization unauthorized response has a 2xx status code
func (o *CronJobBlockOrganizationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job block organization unauthorized response has a 3xx status code
func (o *CronJobBlockOrganizationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job block organization unauthorized response has a 4xx status code
func (o *CronJobBlockOrganizationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job block organization unauthorized response has a 5xx status code
func (o *CronJobBlockOrganizationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job block organization unauthorized response a status code equal to that given
func (o *CronJobBlockOrganizationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the cron job block organization unauthorized response
func (o *CronJobBlockOrganizationUnauthorized) Code() int {
	return 401
}

func (o *CronJobBlockOrganizationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/block-organization][%d] cronJobBlockOrganizationUnauthorized  %+v", 401, o.Payload)
}

func (o *CronJobBlockOrganizationUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/block-organization][%d] cronJobBlockOrganizationUnauthorized  %+v", 401, o.Payload)
}

func (o *CronJobBlockOrganizationUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *CronJobBlockOrganizationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobBlockOrganizationForbidden creates a CronJobBlockOrganizationForbidden with default headers values
func NewCronJobBlockOrganizationForbidden() *CronJobBlockOrganizationForbidden {
	return &CronJobBlockOrganizationForbidden{}
}

/*
CronJobBlockOrganizationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CronJobBlockOrganizationForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this cron job block organization forbidden response has a 2xx status code
func (o *CronJobBlockOrganizationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job block organization forbidden response has a 3xx status code
func (o *CronJobBlockOrganizationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job block organization forbidden response has a 4xx status code
func (o *CronJobBlockOrganizationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job block organization forbidden response has a 5xx status code
func (o *CronJobBlockOrganizationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job block organization forbidden response a status code equal to that given
func (o *CronJobBlockOrganizationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the cron job block organization forbidden response
func (o *CronJobBlockOrganizationForbidden) Code() int {
	return 403
}

func (o *CronJobBlockOrganizationForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/block-organization][%d] cronJobBlockOrganizationForbidden  %+v", 403, o.Payload)
}

func (o *CronJobBlockOrganizationForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/block-organization][%d] cronJobBlockOrganizationForbidden  %+v", 403, o.Payload)
}

func (o *CronJobBlockOrganizationForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *CronJobBlockOrganizationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobBlockOrganizationNotFound creates a CronJobBlockOrganizationNotFound with default headers values
func NewCronJobBlockOrganizationNotFound() *CronJobBlockOrganizationNotFound {
	return &CronJobBlockOrganizationNotFound{}
}

/*
CronJobBlockOrganizationNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CronJobBlockOrganizationNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this cron job block organization not found response has a 2xx status code
func (o *CronJobBlockOrganizationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job block organization not found response has a 3xx status code
func (o *CronJobBlockOrganizationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job block organization not found response has a 4xx status code
func (o *CronJobBlockOrganizationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job block organization not found response has a 5xx status code
func (o *CronJobBlockOrganizationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job block organization not found response a status code equal to that given
func (o *CronJobBlockOrganizationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the cron job block organization not found response
func (o *CronJobBlockOrganizationNotFound) Code() int {
	return 404
}

func (o *CronJobBlockOrganizationNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/block-organization][%d] cronJobBlockOrganizationNotFound  %+v", 404, o.Payload)
}

func (o *CronJobBlockOrganizationNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/block-organization][%d] cronJobBlockOrganizationNotFound  %+v", 404, o.Payload)
}

func (o *CronJobBlockOrganizationNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *CronJobBlockOrganizationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobBlockOrganizationInternalServerError creates a CronJobBlockOrganizationInternalServerError with default headers values
func NewCronJobBlockOrganizationInternalServerError() *CronJobBlockOrganizationInternalServerError {
	return &CronJobBlockOrganizationInternalServerError{}
}

/*
CronJobBlockOrganizationInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CronJobBlockOrganizationInternalServerError struct {
}

// IsSuccess returns true when this cron job block organization internal server error response has a 2xx status code
func (o *CronJobBlockOrganizationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job block organization internal server error response has a 3xx status code
func (o *CronJobBlockOrganizationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job block organization internal server error response has a 4xx status code
func (o *CronJobBlockOrganizationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cron job block organization internal server error response has a 5xx status code
func (o *CronJobBlockOrganizationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cron job block organization internal server error response a status code equal to that given
func (o *CronJobBlockOrganizationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the cron job block organization internal server error response
func (o *CronJobBlockOrganizationInternalServerError) Code() int {
	return 500
}

func (o *CronJobBlockOrganizationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/block-organization][%d] cronJobBlockOrganizationInternalServerError ", 500)
}

func (o *CronJobBlockOrganizationInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/block-organization][%d] cronJobBlockOrganizationInternalServerError ", 500)
}

func (o *CronJobBlockOrganizationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
