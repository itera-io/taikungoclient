// Code generated by go-swagger; DO NOT EDIT.

package cron_job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// CronJobPurgeExpiredProjectsReader is a Reader for the CronJobPurgeExpiredProjects structure.
type CronJobPurgeExpiredProjectsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CronJobPurgeExpiredProjectsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCronJobPurgeExpiredProjectsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCronJobPurgeExpiredProjectsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCronJobPurgeExpiredProjectsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCronJobPurgeExpiredProjectsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCronJobPurgeExpiredProjectsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCronJobPurgeExpiredProjectsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCronJobPurgeExpiredProjectsOK creates a CronJobPurgeExpiredProjectsOK with default headers values
func NewCronJobPurgeExpiredProjectsOK() *CronJobPurgeExpiredProjectsOK {
	return &CronJobPurgeExpiredProjectsOK{}
}

/* CronJobPurgeExpiredProjectsOK describes a response with status code 200, with default header values.

Success
*/
type CronJobPurgeExpiredProjectsOK struct {
	Payload models.Unit
}

func (o *CronJobPurgeExpiredProjectsOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/projects][%d] cronJobPurgeExpiredProjectsOK  %+v", 200, o.Payload)
}
func (o *CronJobPurgeExpiredProjectsOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *CronJobPurgeExpiredProjectsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobPurgeExpiredProjectsBadRequest creates a CronJobPurgeExpiredProjectsBadRequest with default headers values
func NewCronJobPurgeExpiredProjectsBadRequest() *CronJobPurgeExpiredProjectsBadRequest {
	return &CronJobPurgeExpiredProjectsBadRequest{}
}

/* CronJobPurgeExpiredProjectsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CronJobPurgeExpiredProjectsBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *CronJobPurgeExpiredProjectsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/projects][%d] cronJobPurgeExpiredProjectsBadRequest  %+v", 400, o.Payload)
}
func (o *CronJobPurgeExpiredProjectsBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *CronJobPurgeExpiredProjectsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobPurgeExpiredProjectsUnauthorized creates a CronJobPurgeExpiredProjectsUnauthorized with default headers values
func NewCronJobPurgeExpiredProjectsUnauthorized() *CronJobPurgeExpiredProjectsUnauthorized {
	return &CronJobPurgeExpiredProjectsUnauthorized{}
}

/* CronJobPurgeExpiredProjectsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CronJobPurgeExpiredProjectsUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *CronJobPurgeExpiredProjectsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/projects][%d] cronJobPurgeExpiredProjectsUnauthorized  %+v", 401, o.Payload)
}
func (o *CronJobPurgeExpiredProjectsUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CronJobPurgeExpiredProjectsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobPurgeExpiredProjectsForbidden creates a CronJobPurgeExpiredProjectsForbidden with default headers values
func NewCronJobPurgeExpiredProjectsForbidden() *CronJobPurgeExpiredProjectsForbidden {
	return &CronJobPurgeExpiredProjectsForbidden{}
}

/* CronJobPurgeExpiredProjectsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CronJobPurgeExpiredProjectsForbidden struct {
	Payload *models.ProblemDetails
}

func (o *CronJobPurgeExpiredProjectsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/projects][%d] cronJobPurgeExpiredProjectsForbidden  %+v", 403, o.Payload)
}
func (o *CronJobPurgeExpiredProjectsForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CronJobPurgeExpiredProjectsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobPurgeExpiredProjectsNotFound creates a CronJobPurgeExpiredProjectsNotFound with default headers values
func NewCronJobPurgeExpiredProjectsNotFound() *CronJobPurgeExpiredProjectsNotFound {
	return &CronJobPurgeExpiredProjectsNotFound{}
}

/* CronJobPurgeExpiredProjectsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CronJobPurgeExpiredProjectsNotFound struct {
	Payload *models.ProblemDetails
}

func (o *CronJobPurgeExpiredProjectsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/projects][%d] cronJobPurgeExpiredProjectsNotFound  %+v", 404, o.Payload)
}
func (o *CronJobPurgeExpiredProjectsNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CronJobPurgeExpiredProjectsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobPurgeExpiredProjectsInternalServerError creates a CronJobPurgeExpiredProjectsInternalServerError with default headers values
func NewCronJobPurgeExpiredProjectsInternalServerError() *CronJobPurgeExpiredProjectsInternalServerError {
	return &CronJobPurgeExpiredProjectsInternalServerError{}
}

/* CronJobPurgeExpiredProjectsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CronJobPurgeExpiredProjectsInternalServerError struct {
}

func (o *CronJobPurgeExpiredProjectsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/projects][%d] cronJobPurgeExpiredProjectsInternalServerError ", 500)
}

func (o *CronJobPurgeExpiredProjectsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
