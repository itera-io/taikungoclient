// Code generated by go-swagger; DO NOT EDIT.

package cron_job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// CronJobFetchAzurePricesReader is a Reader for the CronJobFetchAzurePrices structure.
type CronJobFetchAzurePricesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CronJobFetchAzurePricesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCronJobFetchAzurePricesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCronJobFetchAzurePricesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCronJobFetchAzurePricesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCronJobFetchAzurePricesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCronJobFetchAzurePricesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCronJobFetchAzurePricesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCronJobFetchAzurePricesOK creates a CronJobFetchAzurePricesOK with default headers values
func NewCronJobFetchAzurePricesOK() *CronJobFetchAzurePricesOK {
	return &CronJobFetchAzurePricesOK{}
}

/*
CronJobFetchAzurePricesOK describes a response with status code 200, with default header values.

Success
*/
type CronJobFetchAzurePricesOK struct {
	Payload models.Unit
}

// IsSuccess returns true when this cron job fetch azure prices o k response has a 2xx status code
func (o *CronJobFetchAzurePricesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cron job fetch azure prices o k response has a 3xx status code
func (o *CronJobFetchAzurePricesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job fetch azure prices o k response has a 4xx status code
func (o *CronJobFetchAzurePricesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cron job fetch azure prices o k response has a 5xx status code
func (o *CronJobFetchAzurePricesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job fetch azure prices o k response a status code equal to that given
func (o *CronJobFetchAzurePricesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the cron job fetch azure prices o k response
func (o *CronJobFetchAzurePricesOK) Code() int {
	return 200
}

func (o *CronJobFetchAzurePricesOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/fetch-azure-prices][%d] cronJobFetchAzurePricesOK  %+v", 200, o.Payload)
}

func (o *CronJobFetchAzurePricesOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/fetch-azure-prices][%d] cronJobFetchAzurePricesOK  %+v", 200, o.Payload)
}

func (o *CronJobFetchAzurePricesOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *CronJobFetchAzurePricesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobFetchAzurePricesBadRequest creates a CronJobFetchAzurePricesBadRequest with default headers values
func NewCronJobFetchAzurePricesBadRequest() *CronJobFetchAzurePricesBadRequest {
	return &CronJobFetchAzurePricesBadRequest{}
}

/*
CronJobFetchAzurePricesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CronJobFetchAzurePricesBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this cron job fetch azure prices bad request response has a 2xx status code
func (o *CronJobFetchAzurePricesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job fetch azure prices bad request response has a 3xx status code
func (o *CronJobFetchAzurePricesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job fetch azure prices bad request response has a 4xx status code
func (o *CronJobFetchAzurePricesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job fetch azure prices bad request response has a 5xx status code
func (o *CronJobFetchAzurePricesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job fetch azure prices bad request response a status code equal to that given
func (o *CronJobFetchAzurePricesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the cron job fetch azure prices bad request response
func (o *CronJobFetchAzurePricesBadRequest) Code() int {
	return 400
}

func (o *CronJobFetchAzurePricesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/fetch-azure-prices][%d] cronJobFetchAzurePricesBadRequest  %+v", 400, o.Payload)
}

func (o *CronJobFetchAzurePricesBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/fetch-azure-prices][%d] cronJobFetchAzurePricesBadRequest  %+v", 400, o.Payload)
}

func (o *CronJobFetchAzurePricesBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *CronJobFetchAzurePricesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobFetchAzurePricesUnauthorized creates a CronJobFetchAzurePricesUnauthorized with default headers values
func NewCronJobFetchAzurePricesUnauthorized() *CronJobFetchAzurePricesUnauthorized {
	return &CronJobFetchAzurePricesUnauthorized{}
}

/*
CronJobFetchAzurePricesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CronJobFetchAzurePricesUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this cron job fetch azure prices unauthorized response has a 2xx status code
func (o *CronJobFetchAzurePricesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job fetch azure prices unauthorized response has a 3xx status code
func (o *CronJobFetchAzurePricesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job fetch azure prices unauthorized response has a 4xx status code
func (o *CronJobFetchAzurePricesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job fetch azure prices unauthorized response has a 5xx status code
func (o *CronJobFetchAzurePricesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job fetch azure prices unauthorized response a status code equal to that given
func (o *CronJobFetchAzurePricesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the cron job fetch azure prices unauthorized response
func (o *CronJobFetchAzurePricesUnauthorized) Code() int {
	return 401
}

func (o *CronJobFetchAzurePricesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/fetch-azure-prices][%d] cronJobFetchAzurePricesUnauthorized  %+v", 401, o.Payload)
}

func (o *CronJobFetchAzurePricesUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/fetch-azure-prices][%d] cronJobFetchAzurePricesUnauthorized  %+v", 401, o.Payload)
}

func (o *CronJobFetchAzurePricesUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *CronJobFetchAzurePricesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobFetchAzurePricesForbidden creates a CronJobFetchAzurePricesForbidden with default headers values
func NewCronJobFetchAzurePricesForbidden() *CronJobFetchAzurePricesForbidden {
	return &CronJobFetchAzurePricesForbidden{}
}

/*
CronJobFetchAzurePricesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CronJobFetchAzurePricesForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this cron job fetch azure prices forbidden response has a 2xx status code
func (o *CronJobFetchAzurePricesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job fetch azure prices forbidden response has a 3xx status code
func (o *CronJobFetchAzurePricesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job fetch azure prices forbidden response has a 4xx status code
func (o *CronJobFetchAzurePricesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job fetch azure prices forbidden response has a 5xx status code
func (o *CronJobFetchAzurePricesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job fetch azure prices forbidden response a status code equal to that given
func (o *CronJobFetchAzurePricesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the cron job fetch azure prices forbidden response
func (o *CronJobFetchAzurePricesForbidden) Code() int {
	return 403
}

func (o *CronJobFetchAzurePricesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/fetch-azure-prices][%d] cronJobFetchAzurePricesForbidden  %+v", 403, o.Payload)
}

func (o *CronJobFetchAzurePricesForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/fetch-azure-prices][%d] cronJobFetchAzurePricesForbidden  %+v", 403, o.Payload)
}

func (o *CronJobFetchAzurePricesForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *CronJobFetchAzurePricesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobFetchAzurePricesNotFound creates a CronJobFetchAzurePricesNotFound with default headers values
func NewCronJobFetchAzurePricesNotFound() *CronJobFetchAzurePricesNotFound {
	return &CronJobFetchAzurePricesNotFound{}
}

/*
CronJobFetchAzurePricesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CronJobFetchAzurePricesNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this cron job fetch azure prices not found response has a 2xx status code
func (o *CronJobFetchAzurePricesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job fetch azure prices not found response has a 3xx status code
func (o *CronJobFetchAzurePricesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job fetch azure prices not found response has a 4xx status code
func (o *CronJobFetchAzurePricesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job fetch azure prices not found response has a 5xx status code
func (o *CronJobFetchAzurePricesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job fetch azure prices not found response a status code equal to that given
func (o *CronJobFetchAzurePricesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the cron job fetch azure prices not found response
func (o *CronJobFetchAzurePricesNotFound) Code() int {
	return 404
}

func (o *CronJobFetchAzurePricesNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/fetch-azure-prices][%d] cronJobFetchAzurePricesNotFound  %+v", 404, o.Payload)
}

func (o *CronJobFetchAzurePricesNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/fetch-azure-prices][%d] cronJobFetchAzurePricesNotFound  %+v", 404, o.Payload)
}

func (o *CronJobFetchAzurePricesNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *CronJobFetchAzurePricesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobFetchAzurePricesInternalServerError creates a CronJobFetchAzurePricesInternalServerError with default headers values
func NewCronJobFetchAzurePricesInternalServerError() *CronJobFetchAzurePricesInternalServerError {
	return &CronJobFetchAzurePricesInternalServerError{}
}

/*
CronJobFetchAzurePricesInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CronJobFetchAzurePricesInternalServerError struct {
}

// IsSuccess returns true when this cron job fetch azure prices internal server error response has a 2xx status code
func (o *CronJobFetchAzurePricesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job fetch azure prices internal server error response has a 3xx status code
func (o *CronJobFetchAzurePricesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job fetch azure prices internal server error response has a 4xx status code
func (o *CronJobFetchAzurePricesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cron job fetch azure prices internal server error response has a 5xx status code
func (o *CronJobFetchAzurePricesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cron job fetch azure prices internal server error response a status code equal to that given
func (o *CronJobFetchAzurePricesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the cron job fetch azure prices internal server error response
func (o *CronJobFetchAzurePricesInternalServerError) Code() int {
	return 500
}

func (o *CronJobFetchAzurePricesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/fetch-azure-prices][%d] cronJobFetchAzurePricesInternalServerError ", 500)
}

func (o *CronJobFetchAzurePricesInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/fetch-azure-prices][%d] cronJobFetchAzurePricesInternalServerError ", 500)
}

func (o *CronJobFetchAzurePricesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
