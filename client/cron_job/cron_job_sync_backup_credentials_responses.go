// Code generated by go-swagger; DO NOT EDIT.

package cron_job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CronJobSyncBackupCredentialsReader is a Reader for the CronJobSyncBackupCredentials structure.
type CronJobSyncBackupCredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CronJobSyncBackupCredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCronJobSyncBackupCredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCronJobSyncBackupCredentialsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCronJobSyncBackupCredentialsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCronJobSyncBackupCredentialsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCronJobSyncBackupCredentialsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCronJobSyncBackupCredentialsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCronJobSyncBackupCredentialsOK creates a CronJobSyncBackupCredentialsOK with default headers values
func NewCronJobSyncBackupCredentialsOK() *CronJobSyncBackupCredentialsOK {
	return &CronJobSyncBackupCredentialsOK{}
}

/*
CronJobSyncBackupCredentialsOK describes a response with status code 200, with default header values.

Success
*/
type CronJobSyncBackupCredentialsOK struct {
	Payload interface{}
}

// IsSuccess returns true when this cron job sync backup credentials o k response has a 2xx status code
func (o *CronJobSyncBackupCredentialsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cron job sync backup credentials o k response has a 3xx status code
func (o *CronJobSyncBackupCredentialsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job sync backup credentials o k response has a 4xx status code
func (o *CronJobSyncBackupCredentialsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cron job sync backup credentials o k response has a 5xx status code
func (o *CronJobSyncBackupCredentialsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job sync backup credentials o k response a status code equal to that given
func (o *CronJobSyncBackupCredentialsOK) IsCode(code int) bool {
	return code == 200
}

func (o *CronJobSyncBackupCredentialsOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-backup-credentials][%d] cronJobSyncBackupCredentialsOK  %+v", 200, o.Payload)
}

func (o *CronJobSyncBackupCredentialsOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-backup-credentials][%d] cronJobSyncBackupCredentialsOK  %+v", 200, o.Payload)
}

func (o *CronJobSyncBackupCredentialsOK) GetPayload() interface{} {
	return o.Payload
}

func (o *CronJobSyncBackupCredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobSyncBackupCredentialsBadRequest creates a CronJobSyncBackupCredentialsBadRequest with default headers values
func NewCronJobSyncBackupCredentialsBadRequest() *CronJobSyncBackupCredentialsBadRequest {
	return &CronJobSyncBackupCredentialsBadRequest{}
}

/*
CronJobSyncBackupCredentialsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CronJobSyncBackupCredentialsBadRequest struct {
	Payload []*CronJobSyncBackupCredentialsBadRequestBodyItems0
}

// IsSuccess returns true when this cron job sync backup credentials bad request response has a 2xx status code
func (o *CronJobSyncBackupCredentialsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job sync backup credentials bad request response has a 3xx status code
func (o *CronJobSyncBackupCredentialsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job sync backup credentials bad request response has a 4xx status code
func (o *CronJobSyncBackupCredentialsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job sync backup credentials bad request response has a 5xx status code
func (o *CronJobSyncBackupCredentialsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job sync backup credentials bad request response a status code equal to that given
func (o *CronJobSyncBackupCredentialsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CronJobSyncBackupCredentialsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-backup-credentials][%d] cronJobSyncBackupCredentialsBadRequest  %+v", 400, o.Payload)
}

func (o *CronJobSyncBackupCredentialsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-backup-credentials][%d] cronJobSyncBackupCredentialsBadRequest  %+v", 400, o.Payload)
}

func (o *CronJobSyncBackupCredentialsBadRequest) GetPayload() []*CronJobSyncBackupCredentialsBadRequestBodyItems0 {
	return o.Payload
}

func (o *CronJobSyncBackupCredentialsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobSyncBackupCredentialsUnauthorized creates a CronJobSyncBackupCredentialsUnauthorized with default headers values
func NewCronJobSyncBackupCredentialsUnauthorized() *CronJobSyncBackupCredentialsUnauthorized {
	return &CronJobSyncBackupCredentialsUnauthorized{}
}

/*
CronJobSyncBackupCredentialsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CronJobSyncBackupCredentialsUnauthorized struct {
	Payload *CronJobSyncBackupCredentialsUnauthorizedBody
}

// IsSuccess returns true when this cron job sync backup credentials unauthorized response has a 2xx status code
func (o *CronJobSyncBackupCredentialsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job sync backup credentials unauthorized response has a 3xx status code
func (o *CronJobSyncBackupCredentialsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job sync backup credentials unauthorized response has a 4xx status code
func (o *CronJobSyncBackupCredentialsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job sync backup credentials unauthorized response has a 5xx status code
func (o *CronJobSyncBackupCredentialsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job sync backup credentials unauthorized response a status code equal to that given
func (o *CronJobSyncBackupCredentialsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CronJobSyncBackupCredentialsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-backup-credentials][%d] cronJobSyncBackupCredentialsUnauthorized  %+v", 401, o.Payload)
}

func (o *CronJobSyncBackupCredentialsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-backup-credentials][%d] cronJobSyncBackupCredentialsUnauthorized  %+v", 401, o.Payload)
}

func (o *CronJobSyncBackupCredentialsUnauthorized) GetPayload() *CronJobSyncBackupCredentialsUnauthorizedBody {
	return o.Payload
}

func (o *CronJobSyncBackupCredentialsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CronJobSyncBackupCredentialsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobSyncBackupCredentialsForbidden creates a CronJobSyncBackupCredentialsForbidden with default headers values
func NewCronJobSyncBackupCredentialsForbidden() *CronJobSyncBackupCredentialsForbidden {
	return &CronJobSyncBackupCredentialsForbidden{}
}

/*
CronJobSyncBackupCredentialsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CronJobSyncBackupCredentialsForbidden struct {
	Payload *CronJobSyncBackupCredentialsForbiddenBody
}

// IsSuccess returns true when this cron job sync backup credentials forbidden response has a 2xx status code
func (o *CronJobSyncBackupCredentialsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job sync backup credentials forbidden response has a 3xx status code
func (o *CronJobSyncBackupCredentialsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job sync backup credentials forbidden response has a 4xx status code
func (o *CronJobSyncBackupCredentialsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job sync backup credentials forbidden response has a 5xx status code
func (o *CronJobSyncBackupCredentialsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job sync backup credentials forbidden response a status code equal to that given
func (o *CronJobSyncBackupCredentialsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CronJobSyncBackupCredentialsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-backup-credentials][%d] cronJobSyncBackupCredentialsForbidden  %+v", 403, o.Payload)
}

func (o *CronJobSyncBackupCredentialsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-backup-credentials][%d] cronJobSyncBackupCredentialsForbidden  %+v", 403, o.Payload)
}

func (o *CronJobSyncBackupCredentialsForbidden) GetPayload() *CronJobSyncBackupCredentialsForbiddenBody {
	return o.Payload
}

func (o *CronJobSyncBackupCredentialsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CronJobSyncBackupCredentialsForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobSyncBackupCredentialsNotFound creates a CronJobSyncBackupCredentialsNotFound with default headers values
func NewCronJobSyncBackupCredentialsNotFound() *CronJobSyncBackupCredentialsNotFound {
	return &CronJobSyncBackupCredentialsNotFound{}
}

/*
CronJobSyncBackupCredentialsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CronJobSyncBackupCredentialsNotFound struct {
	Payload *CronJobSyncBackupCredentialsNotFoundBody
}

// IsSuccess returns true when this cron job sync backup credentials not found response has a 2xx status code
func (o *CronJobSyncBackupCredentialsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job sync backup credentials not found response has a 3xx status code
func (o *CronJobSyncBackupCredentialsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job sync backup credentials not found response has a 4xx status code
func (o *CronJobSyncBackupCredentialsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job sync backup credentials not found response has a 5xx status code
func (o *CronJobSyncBackupCredentialsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job sync backup credentials not found response a status code equal to that given
func (o *CronJobSyncBackupCredentialsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CronJobSyncBackupCredentialsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-backup-credentials][%d] cronJobSyncBackupCredentialsNotFound  %+v", 404, o.Payload)
}

func (o *CronJobSyncBackupCredentialsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-backup-credentials][%d] cronJobSyncBackupCredentialsNotFound  %+v", 404, o.Payload)
}

func (o *CronJobSyncBackupCredentialsNotFound) GetPayload() *CronJobSyncBackupCredentialsNotFoundBody {
	return o.Payload
}

func (o *CronJobSyncBackupCredentialsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CronJobSyncBackupCredentialsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobSyncBackupCredentialsInternalServerError creates a CronJobSyncBackupCredentialsInternalServerError with default headers values
func NewCronJobSyncBackupCredentialsInternalServerError() *CronJobSyncBackupCredentialsInternalServerError {
	return &CronJobSyncBackupCredentialsInternalServerError{}
}

/*
CronJobSyncBackupCredentialsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CronJobSyncBackupCredentialsInternalServerError struct {
}

// IsSuccess returns true when this cron job sync backup credentials internal server error response has a 2xx status code
func (o *CronJobSyncBackupCredentialsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job sync backup credentials internal server error response has a 3xx status code
func (o *CronJobSyncBackupCredentialsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job sync backup credentials internal server error response has a 4xx status code
func (o *CronJobSyncBackupCredentialsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cron job sync backup credentials internal server error response has a 5xx status code
func (o *CronJobSyncBackupCredentialsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cron job sync backup credentials internal server error response a status code equal to that given
func (o *CronJobSyncBackupCredentialsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CronJobSyncBackupCredentialsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-backup-credentials][%d] cronJobSyncBackupCredentialsInternalServerError ", 500)
}

func (o *CronJobSyncBackupCredentialsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-backup-credentials][%d] cronJobSyncBackupCredentialsInternalServerError ", 500)
}

func (o *CronJobSyncBackupCredentialsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
CronJobSyncBackupCredentialsBadRequestBodyItems0 cron job sync backup credentials bad request body items0
swagger:model CronJobSyncBackupCredentialsBadRequestBodyItems0
*/
type CronJobSyncBackupCredentialsBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this cron job sync backup credentials bad request body items0
func (o *CronJobSyncBackupCredentialsBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cron job sync backup credentials bad request body items0 based on context it is used
func (o *CronJobSyncBackupCredentialsBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CronJobSyncBackupCredentialsBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CronJobSyncBackupCredentialsBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res CronJobSyncBackupCredentialsBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CronJobSyncBackupCredentialsForbiddenBody cron job sync backup credentials forbidden body
swagger:model CronJobSyncBackupCredentialsForbiddenBody
*/
type CronJobSyncBackupCredentialsForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cron job sync backup credentials forbidden body
func (o *CronJobSyncBackupCredentialsForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cron job sync backup credentials forbidden body based on context it is used
func (o *CronJobSyncBackupCredentialsForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CronJobSyncBackupCredentialsForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CronJobSyncBackupCredentialsForbiddenBody) UnmarshalBinary(b []byte) error {
	var res CronJobSyncBackupCredentialsForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CronJobSyncBackupCredentialsNotFoundBody cron job sync backup credentials not found body
swagger:model CronJobSyncBackupCredentialsNotFoundBody
*/
type CronJobSyncBackupCredentialsNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cron job sync backup credentials not found body
func (o *CronJobSyncBackupCredentialsNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cron job sync backup credentials not found body based on context it is used
func (o *CronJobSyncBackupCredentialsNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CronJobSyncBackupCredentialsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CronJobSyncBackupCredentialsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res CronJobSyncBackupCredentialsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CronJobSyncBackupCredentialsUnauthorizedBody cron job sync backup credentials unauthorized body
swagger:model CronJobSyncBackupCredentialsUnauthorizedBody
*/
type CronJobSyncBackupCredentialsUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cron job sync backup credentials unauthorized body
func (o *CronJobSyncBackupCredentialsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cron job sync backup credentials unauthorized body based on context it is used
func (o *CronJobSyncBackupCredentialsUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CronJobSyncBackupCredentialsUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CronJobSyncBackupCredentialsUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res CronJobSyncBackupCredentialsUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
