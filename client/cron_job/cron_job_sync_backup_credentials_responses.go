// Code generated by go-swagger; DO NOT EDIT.

package cron_job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// CronJobSyncBackupCredentialsReader is a Reader for the CronJobSyncBackupCredentials structure.
type CronJobSyncBackupCredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CronJobSyncBackupCredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCronJobSyncBackupCredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCronJobSyncBackupCredentialsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCronJobSyncBackupCredentialsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCronJobSyncBackupCredentialsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCronJobSyncBackupCredentialsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCronJobSyncBackupCredentialsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCronJobSyncBackupCredentialsOK creates a CronJobSyncBackupCredentialsOK with default headers values
func NewCronJobSyncBackupCredentialsOK() *CronJobSyncBackupCredentialsOK {
	return &CronJobSyncBackupCredentialsOK{}
}

/* CronJobSyncBackupCredentialsOK describes a response with status code 200, with default header values.

Success
*/
type CronJobSyncBackupCredentialsOK struct {
	Payload models.Unit
}

func (o *CronJobSyncBackupCredentialsOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-backup-credentials][%d] cronJobSyncBackupCredentialsOK  %+v", 200, o.Payload)
}
func (o *CronJobSyncBackupCredentialsOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *CronJobSyncBackupCredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobSyncBackupCredentialsBadRequest creates a CronJobSyncBackupCredentialsBadRequest with default headers values
func NewCronJobSyncBackupCredentialsBadRequest() *CronJobSyncBackupCredentialsBadRequest {
	return &CronJobSyncBackupCredentialsBadRequest{}
}

/* CronJobSyncBackupCredentialsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CronJobSyncBackupCredentialsBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *CronJobSyncBackupCredentialsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-backup-credentials][%d] cronJobSyncBackupCredentialsBadRequest  %+v", 400, o.Payload)
}
func (o *CronJobSyncBackupCredentialsBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *CronJobSyncBackupCredentialsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobSyncBackupCredentialsUnauthorized creates a CronJobSyncBackupCredentialsUnauthorized with default headers values
func NewCronJobSyncBackupCredentialsUnauthorized() *CronJobSyncBackupCredentialsUnauthorized {
	return &CronJobSyncBackupCredentialsUnauthorized{}
}

/* CronJobSyncBackupCredentialsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CronJobSyncBackupCredentialsUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *CronJobSyncBackupCredentialsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-backup-credentials][%d] cronJobSyncBackupCredentialsUnauthorized  %+v", 401, o.Payload)
}
func (o *CronJobSyncBackupCredentialsUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CronJobSyncBackupCredentialsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobSyncBackupCredentialsForbidden creates a CronJobSyncBackupCredentialsForbidden with default headers values
func NewCronJobSyncBackupCredentialsForbidden() *CronJobSyncBackupCredentialsForbidden {
	return &CronJobSyncBackupCredentialsForbidden{}
}

/* CronJobSyncBackupCredentialsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CronJobSyncBackupCredentialsForbidden struct {
	Payload *models.ProblemDetails
}

func (o *CronJobSyncBackupCredentialsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-backup-credentials][%d] cronJobSyncBackupCredentialsForbidden  %+v", 403, o.Payload)
}
func (o *CronJobSyncBackupCredentialsForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CronJobSyncBackupCredentialsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobSyncBackupCredentialsNotFound creates a CronJobSyncBackupCredentialsNotFound with default headers values
func NewCronJobSyncBackupCredentialsNotFound() *CronJobSyncBackupCredentialsNotFound {
	return &CronJobSyncBackupCredentialsNotFound{}
}

/* CronJobSyncBackupCredentialsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CronJobSyncBackupCredentialsNotFound struct {
	Payload *models.ProblemDetails
}

func (o *CronJobSyncBackupCredentialsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-backup-credentials][%d] cronJobSyncBackupCredentialsNotFound  %+v", 404, o.Payload)
}
func (o *CronJobSyncBackupCredentialsNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CronJobSyncBackupCredentialsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobSyncBackupCredentialsInternalServerError creates a CronJobSyncBackupCredentialsInternalServerError with default headers values
func NewCronJobSyncBackupCredentialsInternalServerError() *CronJobSyncBackupCredentialsInternalServerError {
	return &CronJobSyncBackupCredentialsInternalServerError{}
}

/* CronJobSyncBackupCredentialsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CronJobSyncBackupCredentialsInternalServerError struct {
}

func (o *CronJobSyncBackupCredentialsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-backup-credentials][%d] cronJobSyncBackupCredentialsInternalServerError ", 500)
}

func (o *CronJobSyncBackupCredentialsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
