// Code generated by go-swagger; DO NOT EDIT.

package cron_job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// CronJobDeleteExpiredPollerTokensReader is a Reader for the CronJobDeleteExpiredPollerTokens structure.
type CronJobDeleteExpiredPollerTokensReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CronJobDeleteExpiredPollerTokensReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCronJobDeleteExpiredPollerTokensOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCronJobDeleteExpiredPollerTokensBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCronJobDeleteExpiredPollerTokensUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCronJobDeleteExpiredPollerTokensForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCronJobDeleteExpiredPollerTokensNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCronJobDeleteExpiredPollerTokensInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCronJobDeleteExpiredPollerTokensOK creates a CronJobDeleteExpiredPollerTokensOK with default headers values
func NewCronJobDeleteExpiredPollerTokensOK() *CronJobDeleteExpiredPollerTokensOK {
	return &CronJobDeleteExpiredPollerTokensOK{}
}

/* CronJobDeleteExpiredPollerTokensOK describes a response with status code 200, with default header values.

Success
*/
type CronJobDeleteExpiredPollerTokensOK struct {
	Payload models.Unit
}

func (o *CronJobDeleteExpiredPollerTokensOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/poller-tokens][%d] cronJobDeleteExpiredPollerTokensOK  %+v", 200, o.Payload)
}
func (o *CronJobDeleteExpiredPollerTokensOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *CronJobDeleteExpiredPollerTokensOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeleteExpiredPollerTokensBadRequest creates a CronJobDeleteExpiredPollerTokensBadRequest with default headers values
func NewCronJobDeleteExpiredPollerTokensBadRequest() *CronJobDeleteExpiredPollerTokensBadRequest {
	return &CronJobDeleteExpiredPollerTokensBadRequest{}
}

/* CronJobDeleteExpiredPollerTokensBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CronJobDeleteExpiredPollerTokensBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *CronJobDeleteExpiredPollerTokensBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/poller-tokens][%d] cronJobDeleteExpiredPollerTokensBadRequest  %+v", 400, o.Payload)
}
func (o *CronJobDeleteExpiredPollerTokensBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *CronJobDeleteExpiredPollerTokensBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeleteExpiredPollerTokensUnauthorized creates a CronJobDeleteExpiredPollerTokensUnauthorized with default headers values
func NewCronJobDeleteExpiredPollerTokensUnauthorized() *CronJobDeleteExpiredPollerTokensUnauthorized {
	return &CronJobDeleteExpiredPollerTokensUnauthorized{}
}

/* CronJobDeleteExpiredPollerTokensUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CronJobDeleteExpiredPollerTokensUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *CronJobDeleteExpiredPollerTokensUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/poller-tokens][%d] cronJobDeleteExpiredPollerTokensUnauthorized  %+v", 401, o.Payload)
}
func (o *CronJobDeleteExpiredPollerTokensUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CronJobDeleteExpiredPollerTokensUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeleteExpiredPollerTokensForbidden creates a CronJobDeleteExpiredPollerTokensForbidden with default headers values
func NewCronJobDeleteExpiredPollerTokensForbidden() *CronJobDeleteExpiredPollerTokensForbidden {
	return &CronJobDeleteExpiredPollerTokensForbidden{}
}

/* CronJobDeleteExpiredPollerTokensForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CronJobDeleteExpiredPollerTokensForbidden struct {
	Payload *models.ProblemDetails
}

func (o *CronJobDeleteExpiredPollerTokensForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/poller-tokens][%d] cronJobDeleteExpiredPollerTokensForbidden  %+v", 403, o.Payload)
}
func (o *CronJobDeleteExpiredPollerTokensForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CronJobDeleteExpiredPollerTokensForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeleteExpiredPollerTokensNotFound creates a CronJobDeleteExpiredPollerTokensNotFound with default headers values
func NewCronJobDeleteExpiredPollerTokensNotFound() *CronJobDeleteExpiredPollerTokensNotFound {
	return &CronJobDeleteExpiredPollerTokensNotFound{}
}

/* CronJobDeleteExpiredPollerTokensNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CronJobDeleteExpiredPollerTokensNotFound struct {
	Payload *models.ProblemDetails
}

func (o *CronJobDeleteExpiredPollerTokensNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/poller-tokens][%d] cronJobDeleteExpiredPollerTokensNotFound  %+v", 404, o.Payload)
}
func (o *CronJobDeleteExpiredPollerTokensNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *CronJobDeleteExpiredPollerTokensNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeleteExpiredPollerTokensInternalServerError creates a CronJobDeleteExpiredPollerTokensInternalServerError with default headers values
func NewCronJobDeleteExpiredPollerTokensInternalServerError() *CronJobDeleteExpiredPollerTokensInternalServerError {
	return &CronJobDeleteExpiredPollerTokensInternalServerError{}
}

/* CronJobDeleteExpiredPollerTokensInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CronJobDeleteExpiredPollerTokensInternalServerError struct {
}

func (o *CronJobDeleteExpiredPollerTokensInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/poller-tokens][%d] cronJobDeleteExpiredPollerTokensInternalServerError ", 500)
}

func (o *CronJobDeleteExpiredPollerTokensInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
