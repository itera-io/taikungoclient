// Code generated by go-swagger; DO NOT EDIT.

package cron_job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CronJobDeleteExpiredServersReader is a Reader for the CronJobDeleteExpiredServers structure.
type CronJobDeleteExpiredServersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CronJobDeleteExpiredServersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCronJobDeleteExpiredServersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCronJobDeleteExpiredServersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCronJobDeleteExpiredServersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCronJobDeleteExpiredServersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCronJobDeleteExpiredServersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCronJobDeleteExpiredServersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCronJobDeleteExpiredServersOK creates a CronJobDeleteExpiredServersOK with default headers values
func NewCronJobDeleteExpiredServersOK() *CronJobDeleteExpiredServersOK {
	return &CronJobDeleteExpiredServersOK{}
}

/*
CronJobDeleteExpiredServersOK describes a response with status code 200, with default header values.

Success
*/
type CronJobDeleteExpiredServersOK struct {
	Payload interface{}
}

// IsSuccess returns true when this cron job delete expired servers o k response has a 2xx status code
func (o *CronJobDeleteExpiredServersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cron job delete expired servers o k response has a 3xx status code
func (o *CronJobDeleteExpiredServersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job delete expired servers o k response has a 4xx status code
func (o *CronJobDeleteExpiredServersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cron job delete expired servers o k response has a 5xx status code
func (o *CronJobDeleteExpiredServersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job delete expired servers o k response a status code equal to that given
func (o *CronJobDeleteExpiredServersOK) IsCode(code int) bool {
	return code == 200
}

func (o *CronJobDeleteExpiredServersOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/servers][%d] cronJobDeleteExpiredServersOK  %+v", 200, o.Payload)
}

func (o *CronJobDeleteExpiredServersOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/servers][%d] cronJobDeleteExpiredServersOK  %+v", 200, o.Payload)
}

func (o *CronJobDeleteExpiredServersOK) GetPayload() interface{} {
	return o.Payload
}

func (o *CronJobDeleteExpiredServersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeleteExpiredServersBadRequest creates a CronJobDeleteExpiredServersBadRequest with default headers values
func NewCronJobDeleteExpiredServersBadRequest() *CronJobDeleteExpiredServersBadRequest {
	return &CronJobDeleteExpiredServersBadRequest{}
}

/*
CronJobDeleteExpiredServersBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CronJobDeleteExpiredServersBadRequest struct {
	Payload []*CronJobDeleteExpiredServersBadRequestBodyItems0
}

// IsSuccess returns true when this cron job delete expired servers bad request response has a 2xx status code
func (o *CronJobDeleteExpiredServersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job delete expired servers bad request response has a 3xx status code
func (o *CronJobDeleteExpiredServersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job delete expired servers bad request response has a 4xx status code
func (o *CronJobDeleteExpiredServersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job delete expired servers bad request response has a 5xx status code
func (o *CronJobDeleteExpiredServersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job delete expired servers bad request response a status code equal to that given
func (o *CronJobDeleteExpiredServersBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CronJobDeleteExpiredServersBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/servers][%d] cronJobDeleteExpiredServersBadRequest  %+v", 400, o.Payload)
}

func (o *CronJobDeleteExpiredServersBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/servers][%d] cronJobDeleteExpiredServersBadRequest  %+v", 400, o.Payload)
}

func (o *CronJobDeleteExpiredServersBadRequest) GetPayload() []*CronJobDeleteExpiredServersBadRequestBodyItems0 {
	return o.Payload
}

func (o *CronJobDeleteExpiredServersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeleteExpiredServersUnauthorized creates a CronJobDeleteExpiredServersUnauthorized with default headers values
func NewCronJobDeleteExpiredServersUnauthorized() *CronJobDeleteExpiredServersUnauthorized {
	return &CronJobDeleteExpiredServersUnauthorized{}
}

/*
CronJobDeleteExpiredServersUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CronJobDeleteExpiredServersUnauthorized struct {
	Payload *CronJobDeleteExpiredServersUnauthorizedBody
}

// IsSuccess returns true when this cron job delete expired servers unauthorized response has a 2xx status code
func (o *CronJobDeleteExpiredServersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job delete expired servers unauthorized response has a 3xx status code
func (o *CronJobDeleteExpiredServersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job delete expired servers unauthorized response has a 4xx status code
func (o *CronJobDeleteExpiredServersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job delete expired servers unauthorized response has a 5xx status code
func (o *CronJobDeleteExpiredServersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job delete expired servers unauthorized response a status code equal to that given
func (o *CronJobDeleteExpiredServersUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CronJobDeleteExpiredServersUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/servers][%d] cronJobDeleteExpiredServersUnauthorized  %+v", 401, o.Payload)
}

func (o *CronJobDeleteExpiredServersUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/servers][%d] cronJobDeleteExpiredServersUnauthorized  %+v", 401, o.Payload)
}

func (o *CronJobDeleteExpiredServersUnauthorized) GetPayload() *CronJobDeleteExpiredServersUnauthorizedBody {
	return o.Payload
}

func (o *CronJobDeleteExpiredServersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CronJobDeleteExpiredServersUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeleteExpiredServersForbidden creates a CronJobDeleteExpiredServersForbidden with default headers values
func NewCronJobDeleteExpiredServersForbidden() *CronJobDeleteExpiredServersForbidden {
	return &CronJobDeleteExpiredServersForbidden{}
}

/*
CronJobDeleteExpiredServersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CronJobDeleteExpiredServersForbidden struct {
	Payload *CronJobDeleteExpiredServersForbiddenBody
}

// IsSuccess returns true when this cron job delete expired servers forbidden response has a 2xx status code
func (o *CronJobDeleteExpiredServersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job delete expired servers forbidden response has a 3xx status code
func (o *CronJobDeleteExpiredServersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job delete expired servers forbidden response has a 4xx status code
func (o *CronJobDeleteExpiredServersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job delete expired servers forbidden response has a 5xx status code
func (o *CronJobDeleteExpiredServersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job delete expired servers forbidden response a status code equal to that given
func (o *CronJobDeleteExpiredServersForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CronJobDeleteExpiredServersForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/servers][%d] cronJobDeleteExpiredServersForbidden  %+v", 403, o.Payload)
}

func (o *CronJobDeleteExpiredServersForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/servers][%d] cronJobDeleteExpiredServersForbidden  %+v", 403, o.Payload)
}

func (o *CronJobDeleteExpiredServersForbidden) GetPayload() *CronJobDeleteExpiredServersForbiddenBody {
	return o.Payload
}

func (o *CronJobDeleteExpiredServersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CronJobDeleteExpiredServersForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeleteExpiredServersNotFound creates a CronJobDeleteExpiredServersNotFound with default headers values
func NewCronJobDeleteExpiredServersNotFound() *CronJobDeleteExpiredServersNotFound {
	return &CronJobDeleteExpiredServersNotFound{}
}

/*
CronJobDeleteExpiredServersNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CronJobDeleteExpiredServersNotFound struct {
	Payload *CronJobDeleteExpiredServersNotFoundBody
}

// IsSuccess returns true when this cron job delete expired servers not found response has a 2xx status code
func (o *CronJobDeleteExpiredServersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job delete expired servers not found response has a 3xx status code
func (o *CronJobDeleteExpiredServersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job delete expired servers not found response has a 4xx status code
func (o *CronJobDeleteExpiredServersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job delete expired servers not found response has a 5xx status code
func (o *CronJobDeleteExpiredServersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job delete expired servers not found response a status code equal to that given
func (o *CronJobDeleteExpiredServersNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CronJobDeleteExpiredServersNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/servers][%d] cronJobDeleteExpiredServersNotFound  %+v", 404, o.Payload)
}

func (o *CronJobDeleteExpiredServersNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/servers][%d] cronJobDeleteExpiredServersNotFound  %+v", 404, o.Payload)
}

func (o *CronJobDeleteExpiredServersNotFound) GetPayload() *CronJobDeleteExpiredServersNotFoundBody {
	return o.Payload
}

func (o *CronJobDeleteExpiredServersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CronJobDeleteExpiredServersNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeleteExpiredServersInternalServerError creates a CronJobDeleteExpiredServersInternalServerError with default headers values
func NewCronJobDeleteExpiredServersInternalServerError() *CronJobDeleteExpiredServersInternalServerError {
	return &CronJobDeleteExpiredServersInternalServerError{}
}

/*
CronJobDeleteExpiredServersInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CronJobDeleteExpiredServersInternalServerError struct {
}

// IsSuccess returns true when this cron job delete expired servers internal server error response has a 2xx status code
func (o *CronJobDeleteExpiredServersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job delete expired servers internal server error response has a 3xx status code
func (o *CronJobDeleteExpiredServersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job delete expired servers internal server error response has a 4xx status code
func (o *CronJobDeleteExpiredServersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cron job delete expired servers internal server error response has a 5xx status code
func (o *CronJobDeleteExpiredServersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cron job delete expired servers internal server error response a status code equal to that given
func (o *CronJobDeleteExpiredServersInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CronJobDeleteExpiredServersInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/servers][%d] cronJobDeleteExpiredServersInternalServerError ", 500)
}

func (o *CronJobDeleteExpiredServersInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/servers][%d] cronJobDeleteExpiredServersInternalServerError ", 500)
}

func (o *CronJobDeleteExpiredServersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
CronJobDeleteExpiredServersBadRequestBodyItems0 cron job delete expired servers bad request body items0
swagger:model CronJobDeleteExpiredServersBadRequestBodyItems0
*/
type CronJobDeleteExpiredServersBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this cron job delete expired servers bad request body items0
func (o *CronJobDeleteExpiredServersBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cron job delete expired servers bad request body items0 based on context it is used
func (o *CronJobDeleteExpiredServersBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CronJobDeleteExpiredServersBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CronJobDeleteExpiredServersBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res CronJobDeleteExpiredServersBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CronJobDeleteExpiredServersForbiddenBody cron job delete expired servers forbidden body
swagger:model CronJobDeleteExpiredServersForbiddenBody
*/
type CronJobDeleteExpiredServersForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cron job delete expired servers forbidden body
func (o *CronJobDeleteExpiredServersForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cron job delete expired servers forbidden body based on context it is used
func (o *CronJobDeleteExpiredServersForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CronJobDeleteExpiredServersForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CronJobDeleteExpiredServersForbiddenBody) UnmarshalBinary(b []byte) error {
	var res CronJobDeleteExpiredServersForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CronJobDeleteExpiredServersNotFoundBody cron job delete expired servers not found body
swagger:model CronJobDeleteExpiredServersNotFoundBody
*/
type CronJobDeleteExpiredServersNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cron job delete expired servers not found body
func (o *CronJobDeleteExpiredServersNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cron job delete expired servers not found body based on context it is used
func (o *CronJobDeleteExpiredServersNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CronJobDeleteExpiredServersNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CronJobDeleteExpiredServersNotFoundBody) UnmarshalBinary(b []byte) error {
	var res CronJobDeleteExpiredServersNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CronJobDeleteExpiredServersUnauthorizedBody cron job delete expired servers unauthorized body
swagger:model CronJobDeleteExpiredServersUnauthorizedBody
*/
type CronJobDeleteExpiredServersUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cron job delete expired servers unauthorized body
func (o *CronJobDeleteExpiredServersUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cron job delete expired servers unauthorized body based on context it is used
func (o *CronJobDeleteExpiredServersUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CronJobDeleteExpiredServersUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CronJobDeleteExpiredServersUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res CronJobDeleteExpiredServersUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
