// Code generated by go-swagger; DO NOT EDIT.

package cron_job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CronJobSyncOrganizationsReader is a Reader for the CronJobSyncOrganizations structure.
type CronJobSyncOrganizationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CronJobSyncOrganizationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCronJobSyncOrganizationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCronJobSyncOrganizationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCronJobSyncOrganizationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCronJobSyncOrganizationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCronJobSyncOrganizationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCronJobSyncOrganizationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCronJobSyncOrganizationsOK creates a CronJobSyncOrganizationsOK with default headers values
func NewCronJobSyncOrganizationsOK() *CronJobSyncOrganizationsOK {
	return &CronJobSyncOrganizationsOK{}
}

/*
CronJobSyncOrganizationsOK describes a response with status code 200, with default header values.

Success
*/
type CronJobSyncOrganizationsOK struct {
	Payload interface{}
}

// IsSuccess returns true when this cron job sync organizations o k response has a 2xx status code
func (o *CronJobSyncOrganizationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cron job sync organizations o k response has a 3xx status code
func (o *CronJobSyncOrganizationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job sync organizations o k response has a 4xx status code
func (o *CronJobSyncOrganizationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cron job sync organizations o k response has a 5xx status code
func (o *CronJobSyncOrganizationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job sync organizations o k response a status code equal to that given
func (o *CronJobSyncOrganizationsOK) IsCode(code int) bool {
	return code == 200
}

func (o *CronJobSyncOrganizationsOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-organizations][%d] cronJobSyncOrganizationsOK  %+v", 200, o.Payload)
}

func (o *CronJobSyncOrganizationsOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-organizations][%d] cronJobSyncOrganizationsOK  %+v", 200, o.Payload)
}

func (o *CronJobSyncOrganizationsOK) GetPayload() interface{} {
	return o.Payload
}

func (o *CronJobSyncOrganizationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobSyncOrganizationsBadRequest creates a CronJobSyncOrganizationsBadRequest with default headers values
func NewCronJobSyncOrganizationsBadRequest() *CronJobSyncOrganizationsBadRequest {
	return &CronJobSyncOrganizationsBadRequest{}
}

/*
CronJobSyncOrganizationsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CronJobSyncOrganizationsBadRequest struct {
	Payload []*CronJobSyncOrganizationsBadRequestBodyItems0
}

// IsSuccess returns true when this cron job sync organizations bad request response has a 2xx status code
func (o *CronJobSyncOrganizationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job sync organizations bad request response has a 3xx status code
func (o *CronJobSyncOrganizationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job sync organizations bad request response has a 4xx status code
func (o *CronJobSyncOrganizationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job sync organizations bad request response has a 5xx status code
func (o *CronJobSyncOrganizationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job sync organizations bad request response a status code equal to that given
func (o *CronJobSyncOrganizationsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CronJobSyncOrganizationsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-organizations][%d] cronJobSyncOrganizationsBadRequest  %+v", 400, o.Payload)
}

func (o *CronJobSyncOrganizationsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-organizations][%d] cronJobSyncOrganizationsBadRequest  %+v", 400, o.Payload)
}

func (o *CronJobSyncOrganizationsBadRequest) GetPayload() []*CronJobSyncOrganizationsBadRequestBodyItems0 {
	return o.Payload
}

func (o *CronJobSyncOrganizationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobSyncOrganizationsUnauthorized creates a CronJobSyncOrganizationsUnauthorized with default headers values
func NewCronJobSyncOrganizationsUnauthorized() *CronJobSyncOrganizationsUnauthorized {
	return &CronJobSyncOrganizationsUnauthorized{}
}

/*
CronJobSyncOrganizationsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CronJobSyncOrganizationsUnauthorized struct {
	Payload *CronJobSyncOrganizationsUnauthorizedBody
}

// IsSuccess returns true when this cron job sync organizations unauthorized response has a 2xx status code
func (o *CronJobSyncOrganizationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job sync organizations unauthorized response has a 3xx status code
func (o *CronJobSyncOrganizationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job sync organizations unauthorized response has a 4xx status code
func (o *CronJobSyncOrganizationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job sync organizations unauthorized response has a 5xx status code
func (o *CronJobSyncOrganizationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job sync organizations unauthorized response a status code equal to that given
func (o *CronJobSyncOrganizationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CronJobSyncOrganizationsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-organizations][%d] cronJobSyncOrganizationsUnauthorized  %+v", 401, o.Payload)
}

func (o *CronJobSyncOrganizationsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-organizations][%d] cronJobSyncOrganizationsUnauthorized  %+v", 401, o.Payload)
}

func (o *CronJobSyncOrganizationsUnauthorized) GetPayload() *CronJobSyncOrganizationsUnauthorizedBody {
	return o.Payload
}

func (o *CronJobSyncOrganizationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CronJobSyncOrganizationsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobSyncOrganizationsForbidden creates a CronJobSyncOrganizationsForbidden with default headers values
func NewCronJobSyncOrganizationsForbidden() *CronJobSyncOrganizationsForbidden {
	return &CronJobSyncOrganizationsForbidden{}
}

/*
CronJobSyncOrganizationsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CronJobSyncOrganizationsForbidden struct {
	Payload *CronJobSyncOrganizationsForbiddenBody
}

// IsSuccess returns true when this cron job sync organizations forbidden response has a 2xx status code
func (o *CronJobSyncOrganizationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job sync organizations forbidden response has a 3xx status code
func (o *CronJobSyncOrganizationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job sync organizations forbidden response has a 4xx status code
func (o *CronJobSyncOrganizationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job sync organizations forbidden response has a 5xx status code
func (o *CronJobSyncOrganizationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job sync organizations forbidden response a status code equal to that given
func (o *CronJobSyncOrganizationsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CronJobSyncOrganizationsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-organizations][%d] cronJobSyncOrganizationsForbidden  %+v", 403, o.Payload)
}

func (o *CronJobSyncOrganizationsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-organizations][%d] cronJobSyncOrganizationsForbidden  %+v", 403, o.Payload)
}

func (o *CronJobSyncOrganizationsForbidden) GetPayload() *CronJobSyncOrganizationsForbiddenBody {
	return o.Payload
}

func (o *CronJobSyncOrganizationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CronJobSyncOrganizationsForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobSyncOrganizationsNotFound creates a CronJobSyncOrganizationsNotFound with default headers values
func NewCronJobSyncOrganizationsNotFound() *CronJobSyncOrganizationsNotFound {
	return &CronJobSyncOrganizationsNotFound{}
}

/*
CronJobSyncOrganizationsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CronJobSyncOrganizationsNotFound struct {
	Payload *CronJobSyncOrganizationsNotFoundBody
}

// IsSuccess returns true when this cron job sync organizations not found response has a 2xx status code
func (o *CronJobSyncOrganizationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job sync organizations not found response has a 3xx status code
func (o *CronJobSyncOrganizationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job sync organizations not found response has a 4xx status code
func (o *CronJobSyncOrganizationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job sync organizations not found response has a 5xx status code
func (o *CronJobSyncOrganizationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job sync organizations not found response a status code equal to that given
func (o *CronJobSyncOrganizationsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CronJobSyncOrganizationsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-organizations][%d] cronJobSyncOrganizationsNotFound  %+v", 404, o.Payload)
}

func (o *CronJobSyncOrganizationsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-organizations][%d] cronJobSyncOrganizationsNotFound  %+v", 404, o.Payload)
}

func (o *CronJobSyncOrganizationsNotFound) GetPayload() *CronJobSyncOrganizationsNotFoundBody {
	return o.Payload
}

func (o *CronJobSyncOrganizationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CronJobSyncOrganizationsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobSyncOrganizationsInternalServerError creates a CronJobSyncOrganizationsInternalServerError with default headers values
func NewCronJobSyncOrganizationsInternalServerError() *CronJobSyncOrganizationsInternalServerError {
	return &CronJobSyncOrganizationsInternalServerError{}
}

/*
CronJobSyncOrganizationsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CronJobSyncOrganizationsInternalServerError struct {
}

// IsSuccess returns true when this cron job sync organizations internal server error response has a 2xx status code
func (o *CronJobSyncOrganizationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job sync organizations internal server error response has a 3xx status code
func (o *CronJobSyncOrganizationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job sync organizations internal server error response has a 4xx status code
func (o *CronJobSyncOrganizationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cron job sync organizations internal server error response has a 5xx status code
func (o *CronJobSyncOrganizationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cron job sync organizations internal server error response a status code equal to that given
func (o *CronJobSyncOrganizationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CronJobSyncOrganizationsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-organizations][%d] cronJobSyncOrganizationsInternalServerError ", 500)
}

func (o *CronJobSyncOrganizationsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/sync-organizations][%d] cronJobSyncOrganizationsInternalServerError ", 500)
}

func (o *CronJobSyncOrganizationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
CronJobSyncOrganizationsBadRequestBodyItems0 cron job sync organizations bad request body items0
swagger:model CronJobSyncOrganizationsBadRequestBodyItems0
*/
type CronJobSyncOrganizationsBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this cron job sync organizations bad request body items0
func (o *CronJobSyncOrganizationsBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cron job sync organizations bad request body items0 based on context it is used
func (o *CronJobSyncOrganizationsBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CronJobSyncOrganizationsBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CronJobSyncOrganizationsBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res CronJobSyncOrganizationsBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CronJobSyncOrganizationsForbiddenBody cron job sync organizations forbidden body
swagger:model CronJobSyncOrganizationsForbiddenBody
*/
type CronJobSyncOrganizationsForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cron job sync organizations forbidden body
func (o *CronJobSyncOrganizationsForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cron job sync organizations forbidden body based on context it is used
func (o *CronJobSyncOrganizationsForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CronJobSyncOrganizationsForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CronJobSyncOrganizationsForbiddenBody) UnmarshalBinary(b []byte) error {
	var res CronJobSyncOrganizationsForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CronJobSyncOrganizationsNotFoundBody cron job sync organizations not found body
swagger:model CronJobSyncOrganizationsNotFoundBody
*/
type CronJobSyncOrganizationsNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cron job sync organizations not found body
func (o *CronJobSyncOrganizationsNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cron job sync organizations not found body based on context it is used
func (o *CronJobSyncOrganizationsNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CronJobSyncOrganizationsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CronJobSyncOrganizationsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res CronJobSyncOrganizationsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CronJobSyncOrganizationsUnauthorizedBody cron job sync organizations unauthorized body
swagger:model CronJobSyncOrganizationsUnauthorizedBody
*/
type CronJobSyncOrganizationsUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cron job sync organizations unauthorized body
func (o *CronJobSyncOrganizationsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cron job sync organizations unauthorized body based on context it is used
func (o *CronJobSyncOrganizationsUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CronJobSyncOrganizationsUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CronJobSyncOrganizationsUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res CronJobSyncOrganizationsUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
