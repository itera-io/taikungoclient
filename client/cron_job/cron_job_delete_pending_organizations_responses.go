// Code generated by go-swagger; DO NOT EDIT.

package cron_job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CronJobDeletePendingOrganizationsReader is a Reader for the CronJobDeletePendingOrganizations structure.
type CronJobDeletePendingOrganizationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CronJobDeletePendingOrganizationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCronJobDeletePendingOrganizationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCronJobDeletePendingOrganizationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCronJobDeletePendingOrganizationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCronJobDeletePendingOrganizationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCronJobDeletePendingOrganizationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCronJobDeletePendingOrganizationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCronJobDeletePendingOrganizationsOK creates a CronJobDeletePendingOrganizationsOK with default headers values
func NewCronJobDeletePendingOrganizationsOK() *CronJobDeletePendingOrganizationsOK {
	return &CronJobDeletePendingOrganizationsOK{}
}

/*
CronJobDeletePendingOrganizationsOK describes a response with status code 200, with default header values.

Success
*/
type CronJobDeletePendingOrganizationsOK struct {
	Payload interface{}
}

// IsSuccess returns true when this cron job delete pending organizations o k response has a 2xx status code
func (o *CronJobDeletePendingOrganizationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cron job delete pending organizations o k response has a 3xx status code
func (o *CronJobDeletePendingOrganizationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job delete pending organizations o k response has a 4xx status code
func (o *CronJobDeletePendingOrganizationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cron job delete pending organizations o k response has a 5xx status code
func (o *CronJobDeletePendingOrganizationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job delete pending organizations o k response a status code equal to that given
func (o *CronJobDeletePendingOrganizationsOK) IsCode(code int) bool {
	return code == 200
}

func (o *CronJobDeletePendingOrganizationsOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/organizations][%d] cronJobDeletePendingOrganizationsOK  %+v", 200, o.Payload)
}

func (o *CronJobDeletePendingOrganizationsOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/organizations][%d] cronJobDeletePendingOrganizationsOK  %+v", 200, o.Payload)
}

func (o *CronJobDeletePendingOrganizationsOK) GetPayload() interface{} {
	return o.Payload
}

func (o *CronJobDeletePendingOrganizationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeletePendingOrganizationsBadRequest creates a CronJobDeletePendingOrganizationsBadRequest with default headers values
func NewCronJobDeletePendingOrganizationsBadRequest() *CronJobDeletePendingOrganizationsBadRequest {
	return &CronJobDeletePendingOrganizationsBadRequest{}
}

/*
CronJobDeletePendingOrganizationsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CronJobDeletePendingOrganizationsBadRequest struct {
	Payload []*CronJobDeletePendingOrganizationsBadRequestBodyItems0
}

// IsSuccess returns true when this cron job delete pending organizations bad request response has a 2xx status code
func (o *CronJobDeletePendingOrganizationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job delete pending organizations bad request response has a 3xx status code
func (o *CronJobDeletePendingOrganizationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job delete pending organizations bad request response has a 4xx status code
func (o *CronJobDeletePendingOrganizationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job delete pending organizations bad request response has a 5xx status code
func (o *CronJobDeletePendingOrganizationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job delete pending organizations bad request response a status code equal to that given
func (o *CronJobDeletePendingOrganizationsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CronJobDeletePendingOrganizationsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/organizations][%d] cronJobDeletePendingOrganizationsBadRequest  %+v", 400, o.Payload)
}

func (o *CronJobDeletePendingOrganizationsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/organizations][%d] cronJobDeletePendingOrganizationsBadRequest  %+v", 400, o.Payload)
}

func (o *CronJobDeletePendingOrganizationsBadRequest) GetPayload() []*CronJobDeletePendingOrganizationsBadRequestBodyItems0 {
	return o.Payload
}

func (o *CronJobDeletePendingOrganizationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeletePendingOrganizationsUnauthorized creates a CronJobDeletePendingOrganizationsUnauthorized with default headers values
func NewCronJobDeletePendingOrganizationsUnauthorized() *CronJobDeletePendingOrganizationsUnauthorized {
	return &CronJobDeletePendingOrganizationsUnauthorized{}
}

/*
CronJobDeletePendingOrganizationsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CronJobDeletePendingOrganizationsUnauthorized struct {
	Payload *CronJobDeletePendingOrganizationsUnauthorizedBody
}

// IsSuccess returns true when this cron job delete pending organizations unauthorized response has a 2xx status code
func (o *CronJobDeletePendingOrganizationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job delete pending organizations unauthorized response has a 3xx status code
func (o *CronJobDeletePendingOrganizationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job delete pending organizations unauthorized response has a 4xx status code
func (o *CronJobDeletePendingOrganizationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job delete pending organizations unauthorized response has a 5xx status code
func (o *CronJobDeletePendingOrganizationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job delete pending organizations unauthorized response a status code equal to that given
func (o *CronJobDeletePendingOrganizationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CronJobDeletePendingOrganizationsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/organizations][%d] cronJobDeletePendingOrganizationsUnauthorized  %+v", 401, o.Payload)
}

func (o *CronJobDeletePendingOrganizationsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/organizations][%d] cronJobDeletePendingOrganizationsUnauthorized  %+v", 401, o.Payload)
}

func (o *CronJobDeletePendingOrganizationsUnauthorized) GetPayload() *CronJobDeletePendingOrganizationsUnauthorizedBody {
	return o.Payload
}

func (o *CronJobDeletePendingOrganizationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CronJobDeletePendingOrganizationsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeletePendingOrganizationsForbidden creates a CronJobDeletePendingOrganizationsForbidden with default headers values
func NewCronJobDeletePendingOrganizationsForbidden() *CronJobDeletePendingOrganizationsForbidden {
	return &CronJobDeletePendingOrganizationsForbidden{}
}

/*
CronJobDeletePendingOrganizationsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CronJobDeletePendingOrganizationsForbidden struct {
	Payload *CronJobDeletePendingOrganizationsForbiddenBody
}

// IsSuccess returns true when this cron job delete pending organizations forbidden response has a 2xx status code
func (o *CronJobDeletePendingOrganizationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job delete pending organizations forbidden response has a 3xx status code
func (o *CronJobDeletePendingOrganizationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job delete pending organizations forbidden response has a 4xx status code
func (o *CronJobDeletePendingOrganizationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job delete pending organizations forbidden response has a 5xx status code
func (o *CronJobDeletePendingOrganizationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job delete pending organizations forbidden response a status code equal to that given
func (o *CronJobDeletePendingOrganizationsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CronJobDeletePendingOrganizationsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/organizations][%d] cronJobDeletePendingOrganizationsForbidden  %+v", 403, o.Payload)
}

func (o *CronJobDeletePendingOrganizationsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/organizations][%d] cronJobDeletePendingOrganizationsForbidden  %+v", 403, o.Payload)
}

func (o *CronJobDeletePendingOrganizationsForbidden) GetPayload() *CronJobDeletePendingOrganizationsForbiddenBody {
	return o.Payload
}

func (o *CronJobDeletePendingOrganizationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CronJobDeletePendingOrganizationsForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeletePendingOrganizationsNotFound creates a CronJobDeletePendingOrganizationsNotFound with default headers values
func NewCronJobDeletePendingOrganizationsNotFound() *CronJobDeletePendingOrganizationsNotFound {
	return &CronJobDeletePendingOrganizationsNotFound{}
}

/*
CronJobDeletePendingOrganizationsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CronJobDeletePendingOrganizationsNotFound struct {
	Payload *CronJobDeletePendingOrganizationsNotFoundBody
}

// IsSuccess returns true when this cron job delete pending organizations not found response has a 2xx status code
func (o *CronJobDeletePendingOrganizationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job delete pending organizations not found response has a 3xx status code
func (o *CronJobDeletePendingOrganizationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job delete pending organizations not found response has a 4xx status code
func (o *CronJobDeletePendingOrganizationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this cron job delete pending organizations not found response has a 5xx status code
func (o *CronJobDeletePendingOrganizationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this cron job delete pending organizations not found response a status code equal to that given
func (o *CronJobDeletePendingOrganizationsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CronJobDeletePendingOrganizationsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/organizations][%d] cronJobDeletePendingOrganizationsNotFound  %+v", 404, o.Payload)
}

func (o *CronJobDeletePendingOrganizationsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/organizations][%d] cronJobDeletePendingOrganizationsNotFound  %+v", 404, o.Payload)
}

func (o *CronJobDeletePendingOrganizationsNotFound) GetPayload() *CronJobDeletePendingOrganizationsNotFoundBody {
	return o.Payload
}

func (o *CronJobDeletePendingOrganizationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CronJobDeletePendingOrganizationsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCronJobDeletePendingOrganizationsInternalServerError creates a CronJobDeletePendingOrganizationsInternalServerError with default headers values
func NewCronJobDeletePendingOrganizationsInternalServerError() *CronJobDeletePendingOrganizationsInternalServerError {
	return &CronJobDeletePendingOrganizationsInternalServerError{}
}

/*
CronJobDeletePendingOrganizationsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CronJobDeletePendingOrganizationsInternalServerError struct {
}

// IsSuccess returns true when this cron job delete pending organizations internal server error response has a 2xx status code
func (o *CronJobDeletePendingOrganizationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cron job delete pending organizations internal server error response has a 3xx status code
func (o *CronJobDeletePendingOrganizationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cron job delete pending organizations internal server error response has a 4xx status code
func (o *CronJobDeletePendingOrganizationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cron job delete pending organizations internal server error response has a 5xx status code
func (o *CronJobDeletePendingOrganizationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cron job delete pending organizations internal server error response a status code equal to that given
func (o *CronJobDeletePendingOrganizationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CronJobDeletePendingOrganizationsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/organizations][%d] cronJobDeletePendingOrganizationsInternalServerError ", 500)
}

func (o *CronJobDeletePendingOrganizationsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/CronJob/organizations][%d] cronJobDeletePendingOrganizationsInternalServerError ", 500)
}

func (o *CronJobDeletePendingOrganizationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
CronJobDeletePendingOrganizationsBadRequestBodyItems0 cron job delete pending organizations bad request body items0
swagger:model CronJobDeletePendingOrganizationsBadRequestBodyItems0
*/
type CronJobDeletePendingOrganizationsBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this cron job delete pending organizations bad request body items0
func (o *CronJobDeletePendingOrganizationsBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cron job delete pending organizations bad request body items0 based on context it is used
func (o *CronJobDeletePendingOrganizationsBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CronJobDeletePendingOrganizationsBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CronJobDeletePendingOrganizationsBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res CronJobDeletePendingOrganizationsBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CronJobDeletePendingOrganizationsForbiddenBody cron job delete pending organizations forbidden body
swagger:model CronJobDeletePendingOrganizationsForbiddenBody
*/
type CronJobDeletePendingOrganizationsForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cron job delete pending organizations forbidden body
func (o *CronJobDeletePendingOrganizationsForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cron job delete pending organizations forbidden body based on context it is used
func (o *CronJobDeletePendingOrganizationsForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CronJobDeletePendingOrganizationsForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CronJobDeletePendingOrganizationsForbiddenBody) UnmarshalBinary(b []byte) error {
	var res CronJobDeletePendingOrganizationsForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CronJobDeletePendingOrganizationsNotFoundBody cron job delete pending organizations not found body
swagger:model CronJobDeletePendingOrganizationsNotFoundBody
*/
type CronJobDeletePendingOrganizationsNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cron job delete pending organizations not found body
func (o *CronJobDeletePendingOrganizationsNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cron job delete pending organizations not found body based on context it is used
func (o *CronJobDeletePendingOrganizationsNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CronJobDeletePendingOrganizationsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CronJobDeletePendingOrganizationsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res CronJobDeletePendingOrganizationsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CronJobDeletePendingOrganizationsUnauthorizedBody cron job delete pending organizations unauthorized body
swagger:model CronJobDeletePendingOrganizationsUnauthorizedBody
*/
type CronJobDeletePendingOrganizationsUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cron job delete pending organizations unauthorized body
func (o *CronJobDeletePendingOrganizationsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cron job delete pending organizations unauthorized body based on context it is used
func (o *CronJobDeletePendingOrganizationsUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CronJobDeletePendingOrganizationsUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CronJobDeletePendingOrganizationsUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res CronJobDeletePendingOrganizationsUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
