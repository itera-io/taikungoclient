/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AlertingIntegrationsListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertingIntegrationsListDto{}

// AlertingIntegrationsListDto struct for AlertingIntegrationsListDto
type AlertingIntegrationsListDto struct {
	Id int32 `json:"id"`
	Url string `json:"url"`
	Token NullableString `json:"token"`
	AlertingIntegrationType AlertingIntegrationType `json:"alertingIntegrationType"`
	AlertingProfileName string `json:"alertingProfileName"`
}

type _AlertingIntegrationsListDto AlertingIntegrationsListDto

// NewAlertingIntegrationsListDto instantiates a new AlertingIntegrationsListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertingIntegrationsListDto(id int32, url string, token NullableString, alertingIntegrationType AlertingIntegrationType, alertingProfileName string) *AlertingIntegrationsListDto {
	this := AlertingIntegrationsListDto{}
	this.Id = id
	this.Url = url
	this.Token = token
	this.AlertingIntegrationType = alertingIntegrationType
	this.AlertingProfileName = alertingProfileName
	return &this
}

// NewAlertingIntegrationsListDtoWithDefaults instantiates a new AlertingIntegrationsListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertingIntegrationsListDtoWithDefaults() *AlertingIntegrationsListDto {
	this := AlertingIntegrationsListDto{}
	return &this
}

// GetId returns the Id field value
func (o *AlertingIntegrationsListDto) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AlertingIntegrationsListDto) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AlertingIntegrationsListDto) SetId(v int32) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *AlertingIntegrationsListDto) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *AlertingIntegrationsListDto) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *AlertingIntegrationsListDto) SetUrl(v string) {
	o.Url = v
}

// GetToken returns the Token field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AlertingIntegrationsListDto) GetToken() string {
	if o == nil || o.Token.Get() == nil {
		var ret string
		return ret
	}

	return *o.Token.Get()
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertingIntegrationsListDto) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Token.Get(), o.Token.IsSet()
}

// SetToken sets field value
func (o *AlertingIntegrationsListDto) SetToken(v string) {
	o.Token.Set(&v)
}

// GetAlertingIntegrationType returns the AlertingIntegrationType field value
func (o *AlertingIntegrationsListDto) GetAlertingIntegrationType() AlertingIntegrationType {
	if o == nil {
		var ret AlertingIntegrationType
		return ret
	}

	return o.AlertingIntegrationType
}

// GetAlertingIntegrationTypeOk returns a tuple with the AlertingIntegrationType field value
// and a boolean to check if the value has been set.
func (o *AlertingIntegrationsListDto) GetAlertingIntegrationTypeOk() (*AlertingIntegrationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlertingIntegrationType, true
}

// SetAlertingIntegrationType sets field value
func (o *AlertingIntegrationsListDto) SetAlertingIntegrationType(v AlertingIntegrationType) {
	o.AlertingIntegrationType = v
}

// GetAlertingProfileName returns the AlertingProfileName field value
func (o *AlertingIntegrationsListDto) GetAlertingProfileName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlertingProfileName
}

// GetAlertingProfileNameOk returns a tuple with the AlertingProfileName field value
// and a boolean to check if the value has been set.
func (o *AlertingIntegrationsListDto) GetAlertingProfileNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlertingProfileName, true
}

// SetAlertingProfileName sets field value
func (o *AlertingIntegrationsListDto) SetAlertingProfileName(v string) {
	o.AlertingProfileName = v
}

func (o AlertingIntegrationsListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertingIntegrationsListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["url"] = o.Url
	toSerialize["token"] = o.Token.Get()
	toSerialize["alertingIntegrationType"] = o.AlertingIntegrationType
	toSerialize["alertingProfileName"] = o.AlertingProfileName
	return toSerialize, nil
}

func (o *AlertingIntegrationsListDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"url",
		"token",
		"alertingIntegrationType",
		"alertingProfileName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlertingIntegrationsListDto := _AlertingIntegrationsListDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAlertingIntegrationsListDto)

	if err != nil {
		return err
	}

	*o = AlertingIntegrationsListDto(varAlertingIntegrationsListDto)

	return err
}

type NullableAlertingIntegrationsListDto struct {
	value *AlertingIntegrationsListDto
	isSet bool
}

func (v NullableAlertingIntegrationsListDto) Get() *AlertingIntegrationsListDto {
	return v.value
}

func (v *NullableAlertingIntegrationsListDto) Set(val *AlertingIntegrationsListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertingIntegrationsListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertingIntegrationsListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertingIntegrationsListDto(val *AlertingIntegrationsListDto) *NullableAlertingIntegrationsListDto {
	return &NullableAlertingIntegrationsListDto{value: val, isSet: true}
}

func (v NullableAlertingIntegrationsListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertingIntegrationsListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


