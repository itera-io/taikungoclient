/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the CreateSshUserCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSshUserCommand{}

// CreateSshUserCommand struct for CreateSshUserCommand
type CreateSshUserCommand struct {
	Name *string `json:"name,omitempty"`
	SshPublicKey *string `json:"sshPublicKey,omitempty"`
	AccessProfileId *int32 `json:"accessProfileId,omitempty"`
}

// NewCreateSshUserCommand instantiates a new CreateSshUserCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSshUserCommand() *CreateSshUserCommand {
	this := CreateSshUserCommand{}
	return &this
}

// NewCreateSshUserCommandWithDefaults instantiates a new CreateSshUserCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSshUserCommandWithDefaults() *CreateSshUserCommand {
	this := CreateSshUserCommand{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateSshUserCommand) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSshUserCommand) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateSshUserCommand) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateSshUserCommand) SetName(v string) {
	o.Name = &v
}

// GetSshPublicKey returns the SshPublicKey field value if set, zero value otherwise.
func (o *CreateSshUserCommand) GetSshPublicKey() string {
	if o == nil || IsNil(o.SshPublicKey) {
		var ret string
		return ret
	}
	return *o.SshPublicKey
}

// GetSshPublicKeyOk returns a tuple with the SshPublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSshUserCommand) GetSshPublicKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SshPublicKey) {
		return nil, false
	}
	return o.SshPublicKey, true
}

// HasSshPublicKey returns a boolean if a field has been set.
func (o *CreateSshUserCommand) HasSshPublicKey() bool {
	if o != nil && !IsNil(o.SshPublicKey) {
		return true
	}

	return false
}

// SetSshPublicKey gets a reference to the given string and assigns it to the SshPublicKey field.
func (o *CreateSshUserCommand) SetSshPublicKey(v string) {
	o.SshPublicKey = &v
}

// GetAccessProfileId returns the AccessProfileId field value if set, zero value otherwise.
func (o *CreateSshUserCommand) GetAccessProfileId() int32 {
	if o == nil || IsNil(o.AccessProfileId) {
		var ret int32
		return ret
	}
	return *o.AccessProfileId
}

// GetAccessProfileIdOk returns a tuple with the AccessProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSshUserCommand) GetAccessProfileIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AccessProfileId) {
		return nil, false
	}
	return o.AccessProfileId, true
}

// HasAccessProfileId returns a boolean if a field has been set.
func (o *CreateSshUserCommand) HasAccessProfileId() bool {
	if o != nil && !IsNil(o.AccessProfileId) {
		return true
	}

	return false
}

// SetAccessProfileId gets a reference to the given int32 and assigns it to the AccessProfileId field.
func (o *CreateSshUserCommand) SetAccessProfileId(v int32) {
	o.AccessProfileId = &v
}

func (o CreateSshUserCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSshUserCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SshPublicKey) {
		toSerialize["sshPublicKey"] = o.SshPublicKey
	}
	if !IsNil(o.AccessProfileId) {
		toSerialize["accessProfileId"] = o.AccessProfileId
	}
	return toSerialize, nil
}

type NullableCreateSshUserCommand struct {
	value *CreateSshUserCommand
	isSet bool
}

func (v NullableCreateSshUserCommand) Get() *CreateSshUserCommand {
	return v.value
}

func (v *NullableCreateSshUserCommand) Set(val *CreateSshUserCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSshUserCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSshUserCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSshUserCommand(val *CreateSshUserCommand) *NullableCreateSshUserCommand {
	return &NullableCreateSshUserCommand{value: val, isSet: true}
}

func (v NullableCreateSshUserCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSshUserCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


