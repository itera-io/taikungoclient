// Code generated by go-swagger; DO NOT EDIT.

package billing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// BillingExportCsvReader is a Reader for the BillingExportCsv structure.
type BillingExportCsvReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BillingExportCsvReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBillingExportCsvOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBillingExportCsvBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBillingExportCsvUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewBillingExportCsvForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBillingExportCsvNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBillingExportCsvInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewBillingExportCsvOK creates a BillingExportCsvOK with default headers values
func NewBillingExportCsvOK() *BillingExportCsvOK {
	return &BillingExportCsvOK{}
}

/*
BillingExportCsvOK describes a response with status code 200, with default header values.

Success
*/
type BillingExportCsvOK struct {
}

// IsSuccess returns true when this billing export csv o k response has a 2xx status code
func (o *BillingExportCsvOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this billing export csv o k response has a 3xx status code
func (o *BillingExportCsvOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this billing export csv o k response has a 4xx status code
func (o *BillingExportCsvOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this billing export csv o k response has a 5xx status code
func (o *BillingExportCsvOK) IsServerError() bool {
	return false
}

// IsCode returns true when this billing export csv o k response a status code equal to that given
func (o *BillingExportCsvOK) IsCode(code int) bool {
	return code == 200
}

func (o *BillingExportCsvOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Billing/export][%d] billingExportCsvOK ", 200)
}

func (o *BillingExportCsvOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Billing/export][%d] billingExportCsvOK ", 200)
}

func (o *BillingExportCsvOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewBillingExportCsvBadRequest creates a BillingExportCsvBadRequest with default headers values
func NewBillingExportCsvBadRequest() *BillingExportCsvBadRequest {
	return &BillingExportCsvBadRequest{}
}

/*
BillingExportCsvBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type BillingExportCsvBadRequest struct {
	Payload []*BillingExportCsvBadRequestBodyItems0
}

// IsSuccess returns true when this billing export csv bad request response has a 2xx status code
func (o *BillingExportCsvBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this billing export csv bad request response has a 3xx status code
func (o *BillingExportCsvBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this billing export csv bad request response has a 4xx status code
func (o *BillingExportCsvBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this billing export csv bad request response has a 5xx status code
func (o *BillingExportCsvBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this billing export csv bad request response a status code equal to that given
func (o *BillingExportCsvBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *BillingExportCsvBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Billing/export][%d] billingExportCsvBadRequest  %+v", 400, o.Payload)
}

func (o *BillingExportCsvBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Billing/export][%d] billingExportCsvBadRequest  %+v", 400, o.Payload)
}

func (o *BillingExportCsvBadRequest) GetPayload() []*BillingExportCsvBadRequestBodyItems0 {
	return o.Payload
}

func (o *BillingExportCsvBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBillingExportCsvUnauthorized creates a BillingExportCsvUnauthorized with default headers values
func NewBillingExportCsvUnauthorized() *BillingExportCsvUnauthorized {
	return &BillingExportCsvUnauthorized{}
}

/*
BillingExportCsvUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type BillingExportCsvUnauthorized struct {
	Payload *BillingExportCsvUnauthorizedBody
}

// IsSuccess returns true when this billing export csv unauthorized response has a 2xx status code
func (o *BillingExportCsvUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this billing export csv unauthorized response has a 3xx status code
func (o *BillingExportCsvUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this billing export csv unauthorized response has a 4xx status code
func (o *BillingExportCsvUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this billing export csv unauthorized response has a 5xx status code
func (o *BillingExportCsvUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this billing export csv unauthorized response a status code equal to that given
func (o *BillingExportCsvUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *BillingExportCsvUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Billing/export][%d] billingExportCsvUnauthorized  %+v", 401, o.Payload)
}

func (o *BillingExportCsvUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Billing/export][%d] billingExportCsvUnauthorized  %+v", 401, o.Payload)
}

func (o *BillingExportCsvUnauthorized) GetPayload() *BillingExportCsvUnauthorizedBody {
	return o.Payload
}

func (o *BillingExportCsvUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BillingExportCsvUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBillingExportCsvForbidden creates a BillingExportCsvForbidden with default headers values
func NewBillingExportCsvForbidden() *BillingExportCsvForbidden {
	return &BillingExportCsvForbidden{}
}

/*
BillingExportCsvForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type BillingExportCsvForbidden struct {
	Payload *BillingExportCsvForbiddenBody
}

// IsSuccess returns true when this billing export csv forbidden response has a 2xx status code
func (o *BillingExportCsvForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this billing export csv forbidden response has a 3xx status code
func (o *BillingExportCsvForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this billing export csv forbidden response has a 4xx status code
func (o *BillingExportCsvForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this billing export csv forbidden response has a 5xx status code
func (o *BillingExportCsvForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this billing export csv forbidden response a status code equal to that given
func (o *BillingExportCsvForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *BillingExportCsvForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Billing/export][%d] billingExportCsvForbidden  %+v", 403, o.Payload)
}

func (o *BillingExportCsvForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Billing/export][%d] billingExportCsvForbidden  %+v", 403, o.Payload)
}

func (o *BillingExportCsvForbidden) GetPayload() *BillingExportCsvForbiddenBody {
	return o.Payload
}

func (o *BillingExportCsvForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BillingExportCsvForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBillingExportCsvNotFound creates a BillingExportCsvNotFound with default headers values
func NewBillingExportCsvNotFound() *BillingExportCsvNotFound {
	return &BillingExportCsvNotFound{}
}

/*
BillingExportCsvNotFound describes a response with status code 404, with default header values.

Not Found
*/
type BillingExportCsvNotFound struct {
	Payload *BillingExportCsvNotFoundBody
}

// IsSuccess returns true when this billing export csv not found response has a 2xx status code
func (o *BillingExportCsvNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this billing export csv not found response has a 3xx status code
func (o *BillingExportCsvNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this billing export csv not found response has a 4xx status code
func (o *BillingExportCsvNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this billing export csv not found response has a 5xx status code
func (o *BillingExportCsvNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this billing export csv not found response a status code equal to that given
func (o *BillingExportCsvNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *BillingExportCsvNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Billing/export][%d] billingExportCsvNotFound  %+v", 404, o.Payload)
}

func (o *BillingExportCsvNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Billing/export][%d] billingExportCsvNotFound  %+v", 404, o.Payload)
}

func (o *BillingExportCsvNotFound) GetPayload() *BillingExportCsvNotFoundBody {
	return o.Payload
}

func (o *BillingExportCsvNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BillingExportCsvNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBillingExportCsvInternalServerError creates a BillingExportCsvInternalServerError with default headers values
func NewBillingExportCsvInternalServerError() *BillingExportCsvInternalServerError {
	return &BillingExportCsvInternalServerError{}
}

/*
BillingExportCsvInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type BillingExportCsvInternalServerError struct {
}

// IsSuccess returns true when this billing export csv internal server error response has a 2xx status code
func (o *BillingExportCsvInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this billing export csv internal server error response has a 3xx status code
func (o *BillingExportCsvInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this billing export csv internal server error response has a 4xx status code
func (o *BillingExportCsvInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this billing export csv internal server error response has a 5xx status code
func (o *BillingExportCsvInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this billing export csv internal server error response a status code equal to that given
func (o *BillingExportCsvInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *BillingExportCsvInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Billing/export][%d] billingExportCsvInternalServerError ", 500)
}

func (o *BillingExportCsvInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Billing/export][%d] billingExportCsvInternalServerError ", 500)
}

func (o *BillingExportCsvInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
BillingExportCsvBadRequestBodyItems0 billing export csv bad request body items0
swagger:model BillingExportCsvBadRequestBodyItems0
*/
type BillingExportCsvBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this billing export csv bad request body items0
func (o *BillingExportCsvBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this billing export csv bad request body items0 based on context it is used
func (o *BillingExportCsvBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BillingExportCsvBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BillingExportCsvBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res BillingExportCsvBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
BillingExportCsvForbiddenBody billing export csv forbidden body
swagger:model BillingExportCsvForbiddenBody
*/
type BillingExportCsvForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this billing export csv forbidden body
func (o *BillingExportCsvForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this billing export csv forbidden body based on context it is used
func (o *BillingExportCsvForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BillingExportCsvForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BillingExportCsvForbiddenBody) UnmarshalBinary(b []byte) error {
	var res BillingExportCsvForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
BillingExportCsvNotFoundBody billing export csv not found body
swagger:model BillingExportCsvNotFoundBody
*/
type BillingExportCsvNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this billing export csv not found body
func (o *BillingExportCsvNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this billing export csv not found body based on context it is used
func (o *BillingExportCsvNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BillingExportCsvNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BillingExportCsvNotFoundBody) UnmarshalBinary(b []byte) error {
	var res BillingExportCsvNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
BillingExportCsvUnauthorizedBody billing export csv unauthorized body
swagger:model BillingExportCsvUnauthorizedBody
*/
type BillingExportCsvUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this billing export csv unauthorized body
func (o *BillingExportCsvUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this billing export csv unauthorized body based on context it is used
func (o *BillingExportCsvUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BillingExportCsvUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BillingExportCsvUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res BillingExportCsvUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
