/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the StandAloneProfileForDetailsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StandAloneProfileForDetailsDto{}

// StandAloneProfileForDetailsDto struct for StandAloneProfileForDetailsDto
type StandAloneProfileForDetailsDto struct {
	Id int32 `json:"id"`
	Name NullableString `json:"name"`
	PublicKey NullableString `json:"publicKey"`
	SecurityGroups []StandAloneProfileSecurityGroupForDetailsDto `json:"securityGroups"`
}

type _StandAloneProfileForDetailsDto StandAloneProfileForDetailsDto

// NewStandAloneProfileForDetailsDto instantiates a new StandAloneProfileForDetailsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStandAloneProfileForDetailsDto(id int32, name NullableString, publicKey NullableString, securityGroups []StandAloneProfileSecurityGroupForDetailsDto) *StandAloneProfileForDetailsDto {
	this := StandAloneProfileForDetailsDto{}
	this.Id = id
	this.Name = name
	this.PublicKey = publicKey
	this.SecurityGroups = securityGroups
	return &this
}

// NewStandAloneProfileForDetailsDtoWithDefaults instantiates a new StandAloneProfileForDetailsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStandAloneProfileForDetailsDtoWithDefaults() *StandAloneProfileForDetailsDto {
	this := StandAloneProfileForDetailsDto{}
	return &this
}

// GetId returns the Id field value
func (o *StandAloneProfileForDetailsDto) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *StandAloneProfileForDetailsDto) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *StandAloneProfileForDetailsDto) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *StandAloneProfileForDetailsDto) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StandAloneProfileForDetailsDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *StandAloneProfileForDetailsDto) SetName(v string) {
	o.Name.Set(&v)
}

// GetPublicKey returns the PublicKey field value
// If the value is explicit nil, the zero value for string will be returned
func (o *StandAloneProfileForDetailsDto) GetPublicKey() string {
	if o == nil || o.PublicKey.Get() == nil {
		var ret string
		return ret
	}

	return *o.PublicKey.Get()
}

// GetPublicKeyOk returns a tuple with the PublicKey field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StandAloneProfileForDetailsDto) GetPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublicKey.Get(), o.PublicKey.IsSet()
}

// SetPublicKey sets field value
func (o *StandAloneProfileForDetailsDto) SetPublicKey(v string) {
	o.PublicKey.Set(&v)
}

// GetSecurityGroups returns the SecurityGroups field value
// If the value is explicit nil, the zero value for []StandAloneProfileSecurityGroupForDetailsDto will be returned
func (o *StandAloneProfileForDetailsDto) GetSecurityGroups() []StandAloneProfileSecurityGroupForDetailsDto {
	if o == nil {
		var ret []StandAloneProfileSecurityGroupForDetailsDto
		return ret
	}

	return o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StandAloneProfileForDetailsDto) GetSecurityGroupsOk() ([]StandAloneProfileSecurityGroupForDetailsDto, bool) {
	if o == nil || IsNil(o.SecurityGroups) {
		return nil, false
	}
	return o.SecurityGroups, true
}

// SetSecurityGroups sets field value
func (o *StandAloneProfileForDetailsDto) SetSecurityGroups(v []StandAloneProfileSecurityGroupForDetailsDto) {
	o.SecurityGroups = v
}

func (o StandAloneProfileForDetailsDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StandAloneProfileForDetailsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name.Get()
	toSerialize["publicKey"] = o.PublicKey.Get()
	if o.SecurityGroups != nil {
		toSerialize["securityGroups"] = o.SecurityGroups
	}
	return toSerialize, nil
}

func (o *StandAloneProfileForDetailsDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"publicKey",
		"securityGroups",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStandAloneProfileForDetailsDto := _StandAloneProfileForDetailsDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStandAloneProfileForDetailsDto)

	if err != nil {
		return err
	}

	*o = StandAloneProfileForDetailsDto(varStandAloneProfileForDetailsDto)

	return err
}

type NullableStandAloneProfileForDetailsDto struct {
	value *StandAloneProfileForDetailsDto
	isSet bool
}

func (v NullableStandAloneProfileForDetailsDto) Get() *StandAloneProfileForDetailsDto {
	return v.value
}

func (v *NullableStandAloneProfileForDetailsDto) Set(val *StandAloneProfileForDetailsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableStandAloneProfileForDetailsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableStandAloneProfileForDetailsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStandAloneProfileForDetailsDto(val *StandAloneProfileForDetailsDto) *NullableStandAloneProfileForDetailsDto {
	return &NullableStandAloneProfileForDetailsDto{value: val, isSet: true}
}

func (v NullableStandAloneProfileForDetailsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStandAloneProfileForDetailsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


