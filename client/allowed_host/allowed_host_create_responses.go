// Code generated by go-swagger; DO NOT EDIT.

package allowed_host

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// AllowedHostCreateReader is a Reader for the AllowedHostCreate structure.
type AllowedHostCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AllowedHostCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAllowedHostCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAllowedHostCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAllowedHostCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAllowedHostCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAllowedHostCreateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAllowedHostCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAllowedHostCreateOK creates a AllowedHostCreateOK with default headers values
func NewAllowedHostCreateOK() *AllowedHostCreateOK {
	return &AllowedHostCreateOK{}
}

/*
AllowedHostCreateOK describes a response with status code 200, with default header values.

Success
*/
type AllowedHostCreateOK struct {
	Payload *models.APIResponse
}

// IsSuccess returns true when this allowed host create o k response has a 2xx status code
func (o *AllowedHostCreateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this allowed host create o k response has a 3xx status code
func (o *AllowedHostCreateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this allowed host create o k response has a 4xx status code
func (o *AllowedHostCreateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this allowed host create o k response has a 5xx status code
func (o *AllowedHostCreateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this allowed host create o k response a status code equal to that given
func (o *AllowedHostCreateOK) IsCode(code int) bool {
	return code == 200
}

func (o *AllowedHostCreateOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AllowedHost/create][%d] allowedHostCreateOK  %+v", 200, o.Payload)
}

func (o *AllowedHostCreateOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AllowedHost/create][%d] allowedHostCreateOK  %+v", 200, o.Payload)
}

func (o *AllowedHostCreateOK) GetPayload() *models.APIResponse {
	return o.Payload
}

func (o *AllowedHostCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAllowedHostCreateBadRequest creates a AllowedHostCreateBadRequest with default headers values
func NewAllowedHostCreateBadRequest() *AllowedHostCreateBadRequest {
	return &AllowedHostCreateBadRequest{}
}

/*
AllowedHostCreateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AllowedHostCreateBadRequest struct {
	Payload *models.ValidationProblemDetails
}

// IsSuccess returns true when this allowed host create bad request response has a 2xx status code
func (o *AllowedHostCreateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this allowed host create bad request response has a 3xx status code
func (o *AllowedHostCreateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this allowed host create bad request response has a 4xx status code
func (o *AllowedHostCreateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this allowed host create bad request response has a 5xx status code
func (o *AllowedHostCreateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this allowed host create bad request response a status code equal to that given
func (o *AllowedHostCreateBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AllowedHostCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AllowedHost/create][%d] allowedHostCreateBadRequest  %+v", 400, o.Payload)
}

func (o *AllowedHostCreateBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AllowedHost/create][%d] allowedHostCreateBadRequest  %+v", 400, o.Payload)
}

func (o *AllowedHostCreateBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *AllowedHostCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAllowedHostCreateUnauthorized creates a AllowedHostCreateUnauthorized with default headers values
func NewAllowedHostCreateUnauthorized() *AllowedHostCreateUnauthorized {
	return &AllowedHostCreateUnauthorized{}
}

/*
AllowedHostCreateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AllowedHostCreateUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this allowed host create unauthorized response has a 2xx status code
func (o *AllowedHostCreateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this allowed host create unauthorized response has a 3xx status code
func (o *AllowedHostCreateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this allowed host create unauthorized response has a 4xx status code
func (o *AllowedHostCreateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this allowed host create unauthorized response has a 5xx status code
func (o *AllowedHostCreateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this allowed host create unauthorized response a status code equal to that given
func (o *AllowedHostCreateUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AllowedHostCreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AllowedHost/create][%d] allowedHostCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *AllowedHostCreateUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AllowedHost/create][%d] allowedHostCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *AllowedHostCreateUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AllowedHostCreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAllowedHostCreateForbidden creates a AllowedHostCreateForbidden with default headers values
func NewAllowedHostCreateForbidden() *AllowedHostCreateForbidden {
	return &AllowedHostCreateForbidden{}
}

/*
AllowedHostCreateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AllowedHostCreateForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this allowed host create forbidden response has a 2xx status code
func (o *AllowedHostCreateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this allowed host create forbidden response has a 3xx status code
func (o *AllowedHostCreateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this allowed host create forbidden response has a 4xx status code
func (o *AllowedHostCreateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this allowed host create forbidden response has a 5xx status code
func (o *AllowedHostCreateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this allowed host create forbidden response a status code equal to that given
func (o *AllowedHostCreateForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *AllowedHostCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AllowedHost/create][%d] allowedHostCreateForbidden  %+v", 403, o.Payload)
}

func (o *AllowedHostCreateForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AllowedHost/create][%d] allowedHostCreateForbidden  %+v", 403, o.Payload)
}

func (o *AllowedHostCreateForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AllowedHostCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAllowedHostCreateNotFound creates a AllowedHostCreateNotFound with default headers values
func NewAllowedHostCreateNotFound() *AllowedHostCreateNotFound {
	return &AllowedHostCreateNotFound{}
}

/*
AllowedHostCreateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AllowedHostCreateNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this allowed host create not found response has a 2xx status code
func (o *AllowedHostCreateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this allowed host create not found response has a 3xx status code
func (o *AllowedHostCreateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this allowed host create not found response has a 4xx status code
func (o *AllowedHostCreateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this allowed host create not found response has a 5xx status code
func (o *AllowedHostCreateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this allowed host create not found response a status code equal to that given
func (o *AllowedHostCreateNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *AllowedHostCreateNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AllowedHost/create][%d] allowedHostCreateNotFound  %+v", 404, o.Payload)
}

func (o *AllowedHostCreateNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AllowedHost/create][%d] allowedHostCreateNotFound  %+v", 404, o.Payload)
}

func (o *AllowedHostCreateNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *AllowedHostCreateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAllowedHostCreateInternalServerError creates a AllowedHostCreateInternalServerError with default headers values
func NewAllowedHostCreateInternalServerError() *AllowedHostCreateInternalServerError {
	return &AllowedHostCreateInternalServerError{}
}

/*
AllowedHostCreateInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AllowedHostCreateInternalServerError struct {
}

// IsSuccess returns true when this allowed host create internal server error response has a 2xx status code
func (o *AllowedHostCreateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this allowed host create internal server error response has a 3xx status code
func (o *AllowedHostCreateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this allowed host create internal server error response has a 4xx status code
func (o *AllowedHostCreateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this allowed host create internal server error response has a 5xx status code
func (o *AllowedHostCreateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this allowed host create internal server error response a status code equal to that given
func (o *AllowedHostCreateInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AllowedHostCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/AllowedHost/create][%d] allowedHostCreateInternalServerError ", 500)
}

func (o *AllowedHostCreateInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/AllowedHost/create][%d] allowedHostCreateInternalServerError ", 500)
}

func (o *AllowedHostCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
