/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the PartnerColorSettingsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PartnerColorSettingsDto{}

// PartnerColorSettingsDto struct for PartnerColorSettingsDto
type PartnerColorSettingsDto struct {
	Bg *string `json:"bg,omitempty"`
	BgCollapsedSubItem *string `json:"bgCollapsedSubItem,omitempty"`
	ItemText *string `json:"itemText,omitempty"`
	ItemBg *string `json:"itemBg,omitempty"`
	ItemBgHover *string `json:"itemBgHover,omitempty"`
	ItemTextActive *string `json:"itemTextActive,omitempty"`
	ItemBgActive *string `json:"itemBgActive,omitempty"`
	ItemBgActiveHover *string `json:"itemBgActiveHover,omitempty"`
}

// NewPartnerColorSettingsDto instantiates a new PartnerColorSettingsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartnerColorSettingsDto() *PartnerColorSettingsDto {
	this := PartnerColorSettingsDto{}
	return &this
}

// NewPartnerColorSettingsDtoWithDefaults instantiates a new PartnerColorSettingsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartnerColorSettingsDtoWithDefaults() *PartnerColorSettingsDto {
	this := PartnerColorSettingsDto{}
	return &this
}

// GetBg returns the Bg field value if set, zero value otherwise.
func (o *PartnerColorSettingsDto) GetBg() string {
	if o == nil || IsNil(o.Bg) {
		var ret string
		return ret
	}
	return *o.Bg
}

// GetBgOk returns a tuple with the Bg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerColorSettingsDto) GetBgOk() (*string, bool) {
	if o == nil || IsNil(o.Bg) {
		return nil, false
	}
	return o.Bg, true
}

// HasBg returns a boolean if a field has been set.
func (o *PartnerColorSettingsDto) HasBg() bool {
	if o != nil && !IsNil(o.Bg) {
		return true
	}

	return false
}

// SetBg gets a reference to the given string and assigns it to the Bg field.
func (o *PartnerColorSettingsDto) SetBg(v string) {
	o.Bg = &v
}

// GetBgCollapsedSubItem returns the BgCollapsedSubItem field value if set, zero value otherwise.
func (o *PartnerColorSettingsDto) GetBgCollapsedSubItem() string {
	if o == nil || IsNil(o.BgCollapsedSubItem) {
		var ret string
		return ret
	}
	return *o.BgCollapsedSubItem
}

// GetBgCollapsedSubItemOk returns a tuple with the BgCollapsedSubItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerColorSettingsDto) GetBgCollapsedSubItemOk() (*string, bool) {
	if o == nil || IsNil(o.BgCollapsedSubItem) {
		return nil, false
	}
	return o.BgCollapsedSubItem, true
}

// HasBgCollapsedSubItem returns a boolean if a field has been set.
func (o *PartnerColorSettingsDto) HasBgCollapsedSubItem() bool {
	if o != nil && !IsNil(o.BgCollapsedSubItem) {
		return true
	}

	return false
}

// SetBgCollapsedSubItem gets a reference to the given string and assigns it to the BgCollapsedSubItem field.
func (o *PartnerColorSettingsDto) SetBgCollapsedSubItem(v string) {
	o.BgCollapsedSubItem = &v
}

// GetItemText returns the ItemText field value if set, zero value otherwise.
func (o *PartnerColorSettingsDto) GetItemText() string {
	if o == nil || IsNil(o.ItemText) {
		var ret string
		return ret
	}
	return *o.ItemText
}

// GetItemTextOk returns a tuple with the ItemText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerColorSettingsDto) GetItemTextOk() (*string, bool) {
	if o == nil || IsNil(o.ItemText) {
		return nil, false
	}
	return o.ItemText, true
}

// HasItemText returns a boolean if a field has been set.
func (o *PartnerColorSettingsDto) HasItemText() bool {
	if o != nil && !IsNil(o.ItemText) {
		return true
	}

	return false
}

// SetItemText gets a reference to the given string and assigns it to the ItemText field.
func (o *PartnerColorSettingsDto) SetItemText(v string) {
	o.ItemText = &v
}

// GetItemBg returns the ItemBg field value if set, zero value otherwise.
func (o *PartnerColorSettingsDto) GetItemBg() string {
	if o == nil || IsNil(o.ItemBg) {
		var ret string
		return ret
	}
	return *o.ItemBg
}

// GetItemBgOk returns a tuple with the ItemBg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerColorSettingsDto) GetItemBgOk() (*string, bool) {
	if o == nil || IsNil(o.ItemBg) {
		return nil, false
	}
	return o.ItemBg, true
}

// HasItemBg returns a boolean if a field has been set.
func (o *PartnerColorSettingsDto) HasItemBg() bool {
	if o != nil && !IsNil(o.ItemBg) {
		return true
	}

	return false
}

// SetItemBg gets a reference to the given string and assigns it to the ItemBg field.
func (o *PartnerColorSettingsDto) SetItemBg(v string) {
	o.ItemBg = &v
}

// GetItemBgHover returns the ItemBgHover field value if set, zero value otherwise.
func (o *PartnerColorSettingsDto) GetItemBgHover() string {
	if o == nil || IsNil(o.ItemBgHover) {
		var ret string
		return ret
	}
	return *o.ItemBgHover
}

// GetItemBgHoverOk returns a tuple with the ItemBgHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerColorSettingsDto) GetItemBgHoverOk() (*string, bool) {
	if o == nil || IsNil(o.ItemBgHover) {
		return nil, false
	}
	return o.ItemBgHover, true
}

// HasItemBgHover returns a boolean if a field has been set.
func (o *PartnerColorSettingsDto) HasItemBgHover() bool {
	if o != nil && !IsNil(o.ItemBgHover) {
		return true
	}

	return false
}

// SetItemBgHover gets a reference to the given string and assigns it to the ItemBgHover field.
func (o *PartnerColorSettingsDto) SetItemBgHover(v string) {
	o.ItemBgHover = &v
}

// GetItemTextActive returns the ItemTextActive field value if set, zero value otherwise.
func (o *PartnerColorSettingsDto) GetItemTextActive() string {
	if o == nil || IsNil(o.ItemTextActive) {
		var ret string
		return ret
	}
	return *o.ItemTextActive
}

// GetItemTextActiveOk returns a tuple with the ItemTextActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerColorSettingsDto) GetItemTextActiveOk() (*string, bool) {
	if o == nil || IsNil(o.ItemTextActive) {
		return nil, false
	}
	return o.ItemTextActive, true
}

// HasItemTextActive returns a boolean if a field has been set.
func (o *PartnerColorSettingsDto) HasItemTextActive() bool {
	if o != nil && !IsNil(o.ItemTextActive) {
		return true
	}

	return false
}

// SetItemTextActive gets a reference to the given string and assigns it to the ItemTextActive field.
func (o *PartnerColorSettingsDto) SetItemTextActive(v string) {
	o.ItemTextActive = &v
}

// GetItemBgActive returns the ItemBgActive field value if set, zero value otherwise.
func (o *PartnerColorSettingsDto) GetItemBgActive() string {
	if o == nil || IsNil(o.ItemBgActive) {
		var ret string
		return ret
	}
	return *o.ItemBgActive
}

// GetItemBgActiveOk returns a tuple with the ItemBgActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerColorSettingsDto) GetItemBgActiveOk() (*string, bool) {
	if o == nil || IsNil(o.ItemBgActive) {
		return nil, false
	}
	return o.ItemBgActive, true
}

// HasItemBgActive returns a boolean if a field has been set.
func (o *PartnerColorSettingsDto) HasItemBgActive() bool {
	if o != nil && !IsNil(o.ItemBgActive) {
		return true
	}

	return false
}

// SetItemBgActive gets a reference to the given string and assigns it to the ItemBgActive field.
func (o *PartnerColorSettingsDto) SetItemBgActive(v string) {
	o.ItemBgActive = &v
}

// GetItemBgActiveHover returns the ItemBgActiveHover field value if set, zero value otherwise.
func (o *PartnerColorSettingsDto) GetItemBgActiveHover() string {
	if o == nil || IsNil(o.ItemBgActiveHover) {
		var ret string
		return ret
	}
	return *o.ItemBgActiveHover
}

// GetItemBgActiveHoverOk returns a tuple with the ItemBgActiveHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerColorSettingsDto) GetItemBgActiveHoverOk() (*string, bool) {
	if o == nil || IsNil(o.ItemBgActiveHover) {
		return nil, false
	}
	return o.ItemBgActiveHover, true
}

// HasItemBgActiveHover returns a boolean if a field has been set.
func (o *PartnerColorSettingsDto) HasItemBgActiveHover() bool {
	if o != nil && !IsNil(o.ItemBgActiveHover) {
		return true
	}

	return false
}

// SetItemBgActiveHover gets a reference to the given string and assigns it to the ItemBgActiveHover field.
func (o *PartnerColorSettingsDto) SetItemBgActiveHover(v string) {
	o.ItemBgActiveHover = &v
}

func (o PartnerColorSettingsDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PartnerColorSettingsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bg) {
		toSerialize["bg"] = o.Bg
	}
	if !IsNil(o.BgCollapsedSubItem) {
		toSerialize["bgCollapsedSubItem"] = o.BgCollapsedSubItem
	}
	if !IsNil(o.ItemText) {
		toSerialize["itemText"] = o.ItemText
	}
	if !IsNil(o.ItemBg) {
		toSerialize["itemBg"] = o.ItemBg
	}
	if !IsNil(o.ItemBgHover) {
		toSerialize["itemBgHover"] = o.ItemBgHover
	}
	if !IsNil(o.ItemTextActive) {
		toSerialize["itemTextActive"] = o.ItemTextActive
	}
	if !IsNil(o.ItemBgActive) {
		toSerialize["itemBgActive"] = o.ItemBgActive
	}
	if !IsNil(o.ItemBgActiveHover) {
		toSerialize["itemBgActiveHover"] = o.ItemBgActiveHover
	}
	return toSerialize, nil
}

type NullablePartnerColorSettingsDto struct {
	value *PartnerColorSettingsDto
	isSet bool
}

func (v NullablePartnerColorSettingsDto) Get() *PartnerColorSettingsDto {
	return v.value
}

func (v *NullablePartnerColorSettingsDto) Set(val *PartnerColorSettingsDto) {
	v.value = val
	v.isSet = true
}

func (v NullablePartnerColorSettingsDto) IsSet() bool {
	return v.isSet
}

func (v *NullablePartnerColorSettingsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartnerColorSettingsDto(val *PartnerColorSettingsDto) *NullablePartnerColorSettingsDto {
	return &NullablePartnerColorSettingsDto{value: val, isSet: true}
}

func (v NullablePartnerColorSettingsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartnerColorSettingsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


