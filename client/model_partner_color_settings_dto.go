/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PartnerColorSettingsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PartnerColorSettingsDto{}

// PartnerColorSettingsDto struct for PartnerColorSettingsDto
type PartnerColorSettingsDto struct {
	Bg NullableString `json:"bg"`
	BgCollapsedSubItem NullableString `json:"bgCollapsedSubItem"`
	ItemText NullableString `json:"itemText"`
	ItemBg NullableString `json:"itemBg"`
	ItemBgHover NullableString `json:"itemBgHover"`
	ItemTextActive NullableString `json:"itemTextActive"`
	ItemBgActive NullableString `json:"itemBgActive"`
	ItemBgActiveHover NullableString `json:"itemBgActiveHover"`
}

type _PartnerColorSettingsDto PartnerColorSettingsDto

// NewPartnerColorSettingsDto instantiates a new PartnerColorSettingsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartnerColorSettingsDto(bg NullableString, bgCollapsedSubItem NullableString, itemText NullableString, itemBg NullableString, itemBgHover NullableString, itemTextActive NullableString, itemBgActive NullableString, itemBgActiveHover NullableString) *PartnerColorSettingsDto {
	this := PartnerColorSettingsDto{}
	this.Bg = bg
	this.BgCollapsedSubItem = bgCollapsedSubItem
	this.ItemText = itemText
	this.ItemBg = itemBg
	this.ItemBgHover = itemBgHover
	this.ItemTextActive = itemTextActive
	this.ItemBgActive = itemBgActive
	this.ItemBgActiveHover = itemBgActiveHover
	return &this
}

// NewPartnerColorSettingsDtoWithDefaults instantiates a new PartnerColorSettingsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartnerColorSettingsDtoWithDefaults() *PartnerColorSettingsDto {
	this := PartnerColorSettingsDto{}
	return &this
}

// GetBg returns the Bg field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PartnerColorSettingsDto) GetBg() string {
	if o == nil || o.Bg.Get() == nil {
		var ret string
		return ret
	}

	return *o.Bg.Get()
}

// GetBgOk returns a tuple with the Bg field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerColorSettingsDto) GetBgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bg.Get(), o.Bg.IsSet()
}

// SetBg sets field value
func (o *PartnerColorSettingsDto) SetBg(v string) {
	o.Bg.Set(&v)
}

// GetBgCollapsedSubItem returns the BgCollapsedSubItem field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PartnerColorSettingsDto) GetBgCollapsedSubItem() string {
	if o == nil || o.BgCollapsedSubItem.Get() == nil {
		var ret string
		return ret
	}

	return *o.BgCollapsedSubItem.Get()
}

// GetBgCollapsedSubItemOk returns a tuple with the BgCollapsedSubItem field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerColorSettingsDto) GetBgCollapsedSubItemOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BgCollapsedSubItem.Get(), o.BgCollapsedSubItem.IsSet()
}

// SetBgCollapsedSubItem sets field value
func (o *PartnerColorSettingsDto) SetBgCollapsedSubItem(v string) {
	o.BgCollapsedSubItem.Set(&v)
}

// GetItemText returns the ItemText field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PartnerColorSettingsDto) GetItemText() string {
	if o == nil || o.ItemText.Get() == nil {
		var ret string
		return ret
	}

	return *o.ItemText.Get()
}

// GetItemTextOk returns a tuple with the ItemText field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerColorSettingsDto) GetItemTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemText.Get(), o.ItemText.IsSet()
}

// SetItemText sets field value
func (o *PartnerColorSettingsDto) SetItemText(v string) {
	o.ItemText.Set(&v)
}

// GetItemBg returns the ItemBg field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PartnerColorSettingsDto) GetItemBg() string {
	if o == nil || o.ItemBg.Get() == nil {
		var ret string
		return ret
	}

	return *o.ItemBg.Get()
}

// GetItemBgOk returns a tuple with the ItemBg field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerColorSettingsDto) GetItemBgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemBg.Get(), o.ItemBg.IsSet()
}

// SetItemBg sets field value
func (o *PartnerColorSettingsDto) SetItemBg(v string) {
	o.ItemBg.Set(&v)
}

// GetItemBgHover returns the ItemBgHover field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PartnerColorSettingsDto) GetItemBgHover() string {
	if o == nil || o.ItemBgHover.Get() == nil {
		var ret string
		return ret
	}

	return *o.ItemBgHover.Get()
}

// GetItemBgHoverOk returns a tuple with the ItemBgHover field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerColorSettingsDto) GetItemBgHoverOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemBgHover.Get(), o.ItemBgHover.IsSet()
}

// SetItemBgHover sets field value
func (o *PartnerColorSettingsDto) SetItemBgHover(v string) {
	o.ItemBgHover.Set(&v)
}

// GetItemTextActive returns the ItemTextActive field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PartnerColorSettingsDto) GetItemTextActive() string {
	if o == nil || o.ItemTextActive.Get() == nil {
		var ret string
		return ret
	}

	return *o.ItemTextActive.Get()
}

// GetItemTextActiveOk returns a tuple with the ItemTextActive field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerColorSettingsDto) GetItemTextActiveOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemTextActive.Get(), o.ItemTextActive.IsSet()
}

// SetItemTextActive sets field value
func (o *PartnerColorSettingsDto) SetItemTextActive(v string) {
	o.ItemTextActive.Set(&v)
}

// GetItemBgActive returns the ItemBgActive field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PartnerColorSettingsDto) GetItemBgActive() string {
	if o == nil || o.ItemBgActive.Get() == nil {
		var ret string
		return ret
	}

	return *o.ItemBgActive.Get()
}

// GetItemBgActiveOk returns a tuple with the ItemBgActive field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerColorSettingsDto) GetItemBgActiveOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemBgActive.Get(), o.ItemBgActive.IsSet()
}

// SetItemBgActive sets field value
func (o *PartnerColorSettingsDto) SetItemBgActive(v string) {
	o.ItemBgActive.Set(&v)
}

// GetItemBgActiveHover returns the ItemBgActiveHover field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PartnerColorSettingsDto) GetItemBgActiveHover() string {
	if o == nil || o.ItemBgActiveHover.Get() == nil {
		var ret string
		return ret
	}

	return *o.ItemBgActiveHover.Get()
}

// GetItemBgActiveHoverOk returns a tuple with the ItemBgActiveHover field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PartnerColorSettingsDto) GetItemBgActiveHoverOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemBgActiveHover.Get(), o.ItemBgActiveHover.IsSet()
}

// SetItemBgActiveHover sets field value
func (o *PartnerColorSettingsDto) SetItemBgActiveHover(v string) {
	o.ItemBgActiveHover.Set(&v)
}

func (o PartnerColorSettingsDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PartnerColorSettingsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bg"] = o.Bg.Get()
	toSerialize["bgCollapsedSubItem"] = o.BgCollapsedSubItem.Get()
	toSerialize["itemText"] = o.ItemText.Get()
	toSerialize["itemBg"] = o.ItemBg.Get()
	toSerialize["itemBgHover"] = o.ItemBgHover.Get()
	toSerialize["itemTextActive"] = o.ItemTextActive.Get()
	toSerialize["itemBgActive"] = o.ItemBgActive.Get()
	toSerialize["itemBgActiveHover"] = o.ItemBgActiveHover.Get()
	return toSerialize, nil
}

func (o *PartnerColorSettingsDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bg",
		"bgCollapsedSubItem",
		"itemText",
		"itemBg",
		"itemBgHover",
		"itemTextActive",
		"itemBgActive",
		"itemBgActiveHover",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPartnerColorSettingsDto := _PartnerColorSettingsDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPartnerColorSettingsDto)

	if err != nil {
		return err
	}

	*o = PartnerColorSettingsDto(varPartnerColorSettingsDto)

	return err
}

type NullablePartnerColorSettingsDto struct {
	value *PartnerColorSettingsDto
	isSet bool
}

func (v NullablePartnerColorSettingsDto) Get() *PartnerColorSettingsDto {
	return v.value
}

func (v *NullablePartnerColorSettingsDto) Set(val *PartnerColorSettingsDto) {
	v.value = val
	v.isSet = true
}

func (v NullablePartnerColorSettingsDto) IsSet() bool {
	return v.isSet
}

func (v *NullablePartnerColorSettingsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartnerColorSettingsDto(val *PartnerColorSettingsDto) *NullablePartnerColorSettingsDto {
	return &NullablePartnerColorSettingsDto{value: val, isSet: true}
}

func (v NullablePartnerColorSettingsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartnerColorSettingsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


