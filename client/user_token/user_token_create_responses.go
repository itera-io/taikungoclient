// Code generated by go-swagger; DO NOT EDIT.

package user_token

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// UserTokenCreateReader is a Reader for the UserTokenCreate structure.
type UserTokenCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserTokenCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUserTokenCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUserTokenCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUserTokenCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUserTokenCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUserTokenCreateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUserTokenCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUserTokenCreateOK creates a UserTokenCreateOK with default headers values
func NewUserTokenCreateOK() *UserTokenCreateOK {
	return &UserTokenCreateOK{}
}

/*
UserTokenCreateOK describes a response with status code 200, with default header values.

Success
*/
type UserTokenCreateOK struct {
	Payload *models.UserTokenCreateDto
}

// IsSuccess returns true when this user token create o k response has a 2xx status code
func (o *UserTokenCreateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this user token create o k response has a 3xx status code
func (o *UserTokenCreateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user token create o k response has a 4xx status code
func (o *UserTokenCreateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this user token create o k response has a 5xx status code
func (o *UserTokenCreateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this user token create o k response a status code equal to that given
func (o *UserTokenCreateOK) IsCode(code int) bool {
	return code == 200
}

func (o *UserTokenCreateOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateOK  %+v", 200, o.Payload)
}

func (o *UserTokenCreateOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateOK  %+v", 200, o.Payload)
}

func (o *UserTokenCreateOK) GetPayload() *models.UserTokenCreateDto {
	return o.Payload
}

func (o *UserTokenCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserTokenCreateDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserTokenCreateBadRequest creates a UserTokenCreateBadRequest with default headers values
func NewUserTokenCreateBadRequest() *UserTokenCreateBadRequest {
	return &UserTokenCreateBadRequest{}
}

/*
UserTokenCreateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UserTokenCreateBadRequest struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this user token create bad request response has a 2xx status code
func (o *UserTokenCreateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user token create bad request response has a 3xx status code
func (o *UserTokenCreateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user token create bad request response has a 4xx status code
func (o *UserTokenCreateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this user token create bad request response has a 5xx status code
func (o *UserTokenCreateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this user token create bad request response a status code equal to that given
func (o *UserTokenCreateBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UserTokenCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateBadRequest  %+v", 400, o.Payload)
}

func (o *UserTokenCreateBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateBadRequest  %+v", 400, o.Payload)
}

func (o *UserTokenCreateBadRequest) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *UserTokenCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserTokenCreateUnauthorized creates a UserTokenCreateUnauthorized with default headers values
func NewUserTokenCreateUnauthorized() *UserTokenCreateUnauthorized {
	return &UserTokenCreateUnauthorized{}
}

/*
UserTokenCreateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UserTokenCreateUnauthorized struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this user token create unauthorized response has a 2xx status code
func (o *UserTokenCreateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user token create unauthorized response has a 3xx status code
func (o *UserTokenCreateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user token create unauthorized response has a 4xx status code
func (o *UserTokenCreateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this user token create unauthorized response has a 5xx status code
func (o *UserTokenCreateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this user token create unauthorized response a status code equal to that given
func (o *UserTokenCreateUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UserTokenCreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *UserTokenCreateUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *UserTokenCreateUnauthorized) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *UserTokenCreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserTokenCreateForbidden creates a UserTokenCreateForbidden with default headers values
func NewUserTokenCreateForbidden() *UserTokenCreateForbidden {
	return &UserTokenCreateForbidden{}
}

/*
UserTokenCreateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UserTokenCreateForbidden struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this user token create forbidden response has a 2xx status code
func (o *UserTokenCreateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user token create forbidden response has a 3xx status code
func (o *UserTokenCreateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user token create forbidden response has a 4xx status code
func (o *UserTokenCreateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this user token create forbidden response has a 5xx status code
func (o *UserTokenCreateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this user token create forbidden response a status code equal to that given
func (o *UserTokenCreateForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UserTokenCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateForbidden  %+v", 403, o.Payload)
}

func (o *UserTokenCreateForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateForbidden  %+v", 403, o.Payload)
}

func (o *UserTokenCreateForbidden) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *UserTokenCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserTokenCreateNotFound creates a UserTokenCreateNotFound with default headers values
func NewUserTokenCreateNotFound() *UserTokenCreateNotFound {
	return &UserTokenCreateNotFound{}
}

/*
UserTokenCreateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UserTokenCreateNotFound struct {
	Payload []*models.CustomProblemDetailsMg
}

// IsSuccess returns true when this user token create not found response has a 2xx status code
func (o *UserTokenCreateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user token create not found response has a 3xx status code
func (o *UserTokenCreateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user token create not found response has a 4xx status code
func (o *UserTokenCreateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this user token create not found response has a 5xx status code
func (o *UserTokenCreateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this user token create not found response a status code equal to that given
func (o *UserTokenCreateNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UserTokenCreateNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateNotFound  %+v", 404, o.Payload)
}

func (o *UserTokenCreateNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateNotFound  %+v", 404, o.Payload)
}

func (o *UserTokenCreateNotFound) GetPayload() []*models.CustomProblemDetailsMg {
	return o.Payload
}

func (o *UserTokenCreateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserTokenCreateInternalServerError creates a UserTokenCreateInternalServerError with default headers values
func NewUserTokenCreateInternalServerError() *UserTokenCreateInternalServerError {
	return &UserTokenCreateInternalServerError{}
}

/*
UserTokenCreateInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UserTokenCreateInternalServerError struct {
}

// IsSuccess returns true when this user token create internal server error response has a 2xx status code
func (o *UserTokenCreateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user token create internal server error response has a 3xx status code
func (o *UserTokenCreateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user token create internal server error response has a 4xx status code
func (o *UserTokenCreateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this user token create internal server error response has a 5xx status code
func (o *UserTokenCreateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this user token create internal server error response a status code equal to that given
func (o *UserTokenCreateInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UserTokenCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateInternalServerError ", 500)
}

func (o *UserTokenCreateInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateInternalServerError ", 500)
}

func (o *UserTokenCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
