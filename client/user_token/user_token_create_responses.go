// Code generated by go-swagger; DO NOT EDIT.

package user_token

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UserTokenCreateReader is a Reader for the UserTokenCreate structure.
type UserTokenCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserTokenCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUserTokenCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUserTokenCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUserTokenCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUserTokenCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUserTokenCreateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUserTokenCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUserTokenCreateOK creates a UserTokenCreateOK with default headers values
func NewUserTokenCreateOK() *UserTokenCreateOK {
	return &UserTokenCreateOK{}
}

/*
UserTokenCreateOK describes a response with status code 200, with default header values.

Success
*/
type UserTokenCreateOK struct {
	Payload *UserTokenCreateOKBody
}

// IsSuccess returns true when this user token create o k response has a 2xx status code
func (o *UserTokenCreateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this user token create o k response has a 3xx status code
func (o *UserTokenCreateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user token create o k response has a 4xx status code
func (o *UserTokenCreateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this user token create o k response has a 5xx status code
func (o *UserTokenCreateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this user token create o k response a status code equal to that given
func (o *UserTokenCreateOK) IsCode(code int) bool {
	return code == 200
}

func (o *UserTokenCreateOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateOK  %+v", 200, o.Payload)
}

func (o *UserTokenCreateOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateOK  %+v", 200, o.Payload)
}

func (o *UserTokenCreateOK) GetPayload() *UserTokenCreateOKBody {
	return o.Payload
}

func (o *UserTokenCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UserTokenCreateOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserTokenCreateBadRequest creates a UserTokenCreateBadRequest with default headers values
func NewUserTokenCreateBadRequest() *UserTokenCreateBadRequest {
	return &UserTokenCreateBadRequest{}
}

/*
UserTokenCreateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UserTokenCreateBadRequest struct {
	Payload []*UserTokenCreateBadRequestBodyItems0
}

// IsSuccess returns true when this user token create bad request response has a 2xx status code
func (o *UserTokenCreateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user token create bad request response has a 3xx status code
func (o *UserTokenCreateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user token create bad request response has a 4xx status code
func (o *UserTokenCreateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this user token create bad request response has a 5xx status code
func (o *UserTokenCreateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this user token create bad request response a status code equal to that given
func (o *UserTokenCreateBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UserTokenCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateBadRequest  %+v", 400, o.Payload)
}

func (o *UserTokenCreateBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateBadRequest  %+v", 400, o.Payload)
}

func (o *UserTokenCreateBadRequest) GetPayload() []*UserTokenCreateBadRequestBodyItems0 {
	return o.Payload
}

func (o *UserTokenCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserTokenCreateUnauthorized creates a UserTokenCreateUnauthorized with default headers values
func NewUserTokenCreateUnauthorized() *UserTokenCreateUnauthorized {
	return &UserTokenCreateUnauthorized{}
}

/*
UserTokenCreateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UserTokenCreateUnauthorized struct {
	Payload *UserTokenCreateUnauthorizedBody
}

// IsSuccess returns true when this user token create unauthorized response has a 2xx status code
func (o *UserTokenCreateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user token create unauthorized response has a 3xx status code
func (o *UserTokenCreateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user token create unauthorized response has a 4xx status code
func (o *UserTokenCreateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this user token create unauthorized response has a 5xx status code
func (o *UserTokenCreateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this user token create unauthorized response a status code equal to that given
func (o *UserTokenCreateUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UserTokenCreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *UserTokenCreateUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *UserTokenCreateUnauthorized) GetPayload() *UserTokenCreateUnauthorizedBody {
	return o.Payload
}

func (o *UserTokenCreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UserTokenCreateUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserTokenCreateForbidden creates a UserTokenCreateForbidden with default headers values
func NewUserTokenCreateForbidden() *UserTokenCreateForbidden {
	return &UserTokenCreateForbidden{}
}

/*
UserTokenCreateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UserTokenCreateForbidden struct {
	Payload *UserTokenCreateForbiddenBody
}

// IsSuccess returns true when this user token create forbidden response has a 2xx status code
func (o *UserTokenCreateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user token create forbidden response has a 3xx status code
func (o *UserTokenCreateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user token create forbidden response has a 4xx status code
func (o *UserTokenCreateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this user token create forbidden response has a 5xx status code
func (o *UserTokenCreateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this user token create forbidden response a status code equal to that given
func (o *UserTokenCreateForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UserTokenCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateForbidden  %+v", 403, o.Payload)
}

func (o *UserTokenCreateForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateForbidden  %+v", 403, o.Payload)
}

func (o *UserTokenCreateForbidden) GetPayload() *UserTokenCreateForbiddenBody {
	return o.Payload
}

func (o *UserTokenCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UserTokenCreateForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserTokenCreateNotFound creates a UserTokenCreateNotFound with default headers values
func NewUserTokenCreateNotFound() *UserTokenCreateNotFound {
	return &UserTokenCreateNotFound{}
}

/*
UserTokenCreateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UserTokenCreateNotFound struct {
	Payload *UserTokenCreateNotFoundBody
}

// IsSuccess returns true when this user token create not found response has a 2xx status code
func (o *UserTokenCreateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user token create not found response has a 3xx status code
func (o *UserTokenCreateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user token create not found response has a 4xx status code
func (o *UserTokenCreateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this user token create not found response has a 5xx status code
func (o *UserTokenCreateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this user token create not found response a status code equal to that given
func (o *UserTokenCreateNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UserTokenCreateNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateNotFound  %+v", 404, o.Payload)
}

func (o *UserTokenCreateNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateNotFound  %+v", 404, o.Payload)
}

func (o *UserTokenCreateNotFound) GetPayload() *UserTokenCreateNotFoundBody {
	return o.Payload
}

func (o *UserTokenCreateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UserTokenCreateNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserTokenCreateInternalServerError creates a UserTokenCreateInternalServerError with default headers values
func NewUserTokenCreateInternalServerError() *UserTokenCreateInternalServerError {
	return &UserTokenCreateInternalServerError{}
}

/*
UserTokenCreateInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UserTokenCreateInternalServerError struct {
}

// IsSuccess returns true when this user token create internal server error response has a 2xx status code
func (o *UserTokenCreateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user token create internal server error response has a 3xx status code
func (o *UserTokenCreateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user token create internal server error response has a 4xx status code
func (o *UserTokenCreateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this user token create internal server error response has a 5xx status code
func (o *UserTokenCreateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this user token create internal server error response a status code equal to that given
func (o *UserTokenCreateInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UserTokenCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateInternalServerError ", 500)
}

func (o *UserTokenCreateInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/UserToken/create][%d] userTokenCreateInternalServerError ", 500)
}

func (o *UserTokenCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
UserTokenCreateBadRequestBodyItems0 user token create bad request body items0
swagger:model UserTokenCreateBadRequestBodyItems0
*/
type UserTokenCreateBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this user token create bad request body items0
func (o *UserTokenCreateBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this user token create bad request body items0 based on context it is used
func (o *UserTokenCreateBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UserTokenCreateBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UserTokenCreateBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res UserTokenCreateBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
UserTokenCreateBody user token create body
swagger:model UserTokenCreateBody
*/
type UserTokenCreateBody struct {

	// endpoints
	Endpoints []*UserTokenCreateParamsBodyEndpointsItems0 `json:"endpoints"`

	// expire date
	// Format: date-time
	ExpireDate *strfmt.DateTime `json:"expireDate,omitempty"`

	// is readonly
	IsReadonly bool `json:"isReadonly"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this user token create body
func (o *UserTokenCreateBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEndpoints(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateExpireDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UserTokenCreateBody) validateEndpoints(formats strfmt.Registry) error {
	if swag.IsZero(o.Endpoints) { // not required
		return nil
	}

	for i := 0; i < len(o.Endpoints); i++ {
		if swag.IsZero(o.Endpoints[i]) { // not required
			continue
		}

		if o.Endpoints[i] != nil {
			if err := o.Endpoints[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "endpoints" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "endpoints" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *UserTokenCreateBody) validateExpireDate(formats strfmt.Registry) error {
	if swag.IsZero(o.ExpireDate) { // not required
		return nil
	}

	if err := validate.FormatOf("body"+"."+"expireDate", "body", "date-time", o.ExpireDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this user token create body based on the context it is used
func (o *UserTokenCreateBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateEndpoints(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UserTokenCreateBody) contextValidateEndpoints(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Endpoints); i++ {

		if o.Endpoints[i] != nil {
			if err := o.Endpoints[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "endpoints" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "endpoints" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *UserTokenCreateBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UserTokenCreateBody) UnmarshalBinary(b []byte) error {
	var res UserTokenCreateBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
UserTokenCreateForbiddenBody user token create forbidden body
swagger:model UserTokenCreateForbiddenBody
*/
type UserTokenCreateForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this user token create forbidden body
func (o *UserTokenCreateForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this user token create forbidden body based on context it is used
func (o *UserTokenCreateForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UserTokenCreateForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UserTokenCreateForbiddenBody) UnmarshalBinary(b []byte) error {
	var res UserTokenCreateForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
UserTokenCreateNotFoundBody user token create not found body
swagger:model UserTokenCreateNotFoundBody
*/
type UserTokenCreateNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this user token create not found body
func (o *UserTokenCreateNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this user token create not found body based on context it is used
func (o *UserTokenCreateNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UserTokenCreateNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UserTokenCreateNotFoundBody) UnmarshalBinary(b []byte) error {
	var res UserTokenCreateNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
UserTokenCreateOKBody user token create o k body
swagger:model UserTokenCreateOKBody
*/
type UserTokenCreateOKBody struct {

	// access key
	AccessKey string `json:"accessKey,omitempty"`

	// secret key
	SecretKey string `json:"secretKey,omitempty"`
}

// Validate validates this user token create o k body
func (o *UserTokenCreateOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this user token create o k body based on context it is used
func (o *UserTokenCreateOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UserTokenCreateOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UserTokenCreateOKBody) UnmarshalBinary(b []byte) error {
	var res UserTokenCreateOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
UserTokenCreateParamsBodyEndpointsItems0 user token create params body endpoints items0
swagger:model UserTokenCreateParamsBodyEndpointsItems0
*/
type UserTokenCreateParamsBodyEndpointsItems0 struct {

	// controller
	Controller string `json:"controller,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// method
	Method string `json:"method,omitempty"`

	// path
	Path string `json:"path,omitempty"`
}

// Validate validates this user token create params body endpoints items0
func (o *UserTokenCreateParamsBodyEndpointsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this user token create params body endpoints items0 based on context it is used
func (o *UserTokenCreateParamsBodyEndpointsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UserTokenCreateParamsBodyEndpointsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UserTokenCreateParamsBodyEndpointsItems0) UnmarshalBinary(b []byte) error {
	var res UserTokenCreateParamsBodyEndpointsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
UserTokenCreateUnauthorizedBody user token create unauthorized body
swagger:model UserTokenCreateUnauthorizedBody
*/
type UserTokenCreateUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this user token create unauthorized body
func (o *UserTokenCreateUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this user token create unauthorized body based on context it is used
func (o *UserTokenCreateUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UserTokenCreateUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UserTokenCreateUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res UserTokenCreateUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
