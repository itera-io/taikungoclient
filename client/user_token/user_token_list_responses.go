// Code generated by go-swagger; DO NOT EDIT.

package user_token

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UserTokenListReader is a Reader for the UserTokenList structure.
type UserTokenListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserTokenListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUserTokenListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUserTokenListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUserTokenListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUserTokenListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUserTokenListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUserTokenListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUserTokenListOK creates a UserTokenListOK with default headers values
func NewUserTokenListOK() *UserTokenListOK {
	return &UserTokenListOK{}
}

/*
UserTokenListOK describes a response with status code 200, with default header values.

Success
*/
type UserTokenListOK struct {
	Payload []*UserTokenListOKBodyItems0
}

// IsSuccess returns true when this user token list o k response has a 2xx status code
func (o *UserTokenListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this user token list o k response has a 3xx status code
func (o *UserTokenListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user token list o k response has a 4xx status code
func (o *UserTokenListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this user token list o k response has a 5xx status code
func (o *UserTokenListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this user token list o k response a status code equal to that given
func (o *UserTokenListOK) IsCode(code int) bool {
	return code == 200
}

func (o *UserTokenListOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/UserToken/list][%d] userTokenListOK  %+v", 200, o.Payload)
}

func (o *UserTokenListOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/UserToken/list][%d] userTokenListOK  %+v", 200, o.Payload)
}

func (o *UserTokenListOK) GetPayload() []*UserTokenListOKBodyItems0 {
	return o.Payload
}

func (o *UserTokenListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserTokenListBadRequest creates a UserTokenListBadRequest with default headers values
func NewUserTokenListBadRequest() *UserTokenListBadRequest {
	return &UserTokenListBadRequest{}
}

/*
UserTokenListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UserTokenListBadRequest struct {
	Payload []*UserTokenListBadRequestBodyItems0
}

// IsSuccess returns true when this user token list bad request response has a 2xx status code
func (o *UserTokenListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user token list bad request response has a 3xx status code
func (o *UserTokenListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user token list bad request response has a 4xx status code
func (o *UserTokenListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this user token list bad request response has a 5xx status code
func (o *UserTokenListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this user token list bad request response a status code equal to that given
func (o *UserTokenListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UserTokenListBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/UserToken/list][%d] userTokenListBadRequest  %+v", 400, o.Payload)
}

func (o *UserTokenListBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/UserToken/list][%d] userTokenListBadRequest  %+v", 400, o.Payload)
}

func (o *UserTokenListBadRequest) GetPayload() []*UserTokenListBadRequestBodyItems0 {
	return o.Payload
}

func (o *UserTokenListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserTokenListUnauthorized creates a UserTokenListUnauthorized with default headers values
func NewUserTokenListUnauthorized() *UserTokenListUnauthorized {
	return &UserTokenListUnauthorized{}
}

/*
UserTokenListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UserTokenListUnauthorized struct {
	Payload *UserTokenListUnauthorizedBody
}

// IsSuccess returns true when this user token list unauthorized response has a 2xx status code
func (o *UserTokenListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user token list unauthorized response has a 3xx status code
func (o *UserTokenListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user token list unauthorized response has a 4xx status code
func (o *UserTokenListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this user token list unauthorized response has a 5xx status code
func (o *UserTokenListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this user token list unauthorized response a status code equal to that given
func (o *UserTokenListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UserTokenListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/UserToken/list][%d] userTokenListUnauthorized  %+v", 401, o.Payload)
}

func (o *UserTokenListUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/UserToken/list][%d] userTokenListUnauthorized  %+v", 401, o.Payload)
}

func (o *UserTokenListUnauthorized) GetPayload() *UserTokenListUnauthorizedBody {
	return o.Payload
}

func (o *UserTokenListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UserTokenListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserTokenListForbidden creates a UserTokenListForbidden with default headers values
func NewUserTokenListForbidden() *UserTokenListForbidden {
	return &UserTokenListForbidden{}
}

/*
UserTokenListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UserTokenListForbidden struct {
	Payload *UserTokenListForbiddenBody
}

// IsSuccess returns true when this user token list forbidden response has a 2xx status code
func (o *UserTokenListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user token list forbidden response has a 3xx status code
func (o *UserTokenListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user token list forbidden response has a 4xx status code
func (o *UserTokenListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this user token list forbidden response has a 5xx status code
func (o *UserTokenListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this user token list forbidden response a status code equal to that given
func (o *UserTokenListForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UserTokenListForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/UserToken/list][%d] userTokenListForbidden  %+v", 403, o.Payload)
}

func (o *UserTokenListForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/UserToken/list][%d] userTokenListForbidden  %+v", 403, o.Payload)
}

func (o *UserTokenListForbidden) GetPayload() *UserTokenListForbiddenBody {
	return o.Payload
}

func (o *UserTokenListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UserTokenListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserTokenListNotFound creates a UserTokenListNotFound with default headers values
func NewUserTokenListNotFound() *UserTokenListNotFound {
	return &UserTokenListNotFound{}
}

/*
UserTokenListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UserTokenListNotFound struct {
	Payload *UserTokenListNotFoundBody
}

// IsSuccess returns true when this user token list not found response has a 2xx status code
func (o *UserTokenListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user token list not found response has a 3xx status code
func (o *UserTokenListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user token list not found response has a 4xx status code
func (o *UserTokenListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this user token list not found response has a 5xx status code
func (o *UserTokenListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this user token list not found response a status code equal to that given
func (o *UserTokenListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UserTokenListNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/UserToken/list][%d] userTokenListNotFound  %+v", 404, o.Payload)
}

func (o *UserTokenListNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/UserToken/list][%d] userTokenListNotFound  %+v", 404, o.Payload)
}

func (o *UserTokenListNotFound) GetPayload() *UserTokenListNotFoundBody {
	return o.Payload
}

func (o *UserTokenListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UserTokenListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserTokenListInternalServerError creates a UserTokenListInternalServerError with default headers values
func NewUserTokenListInternalServerError() *UserTokenListInternalServerError {
	return &UserTokenListInternalServerError{}
}

/*
UserTokenListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UserTokenListInternalServerError struct {
}

// IsSuccess returns true when this user token list internal server error response has a 2xx status code
func (o *UserTokenListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user token list internal server error response has a 3xx status code
func (o *UserTokenListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user token list internal server error response has a 4xx status code
func (o *UserTokenListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this user token list internal server error response has a 5xx status code
func (o *UserTokenListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this user token list internal server error response a status code equal to that given
func (o *UserTokenListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UserTokenListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/UserToken/list][%d] userTokenListInternalServerError ", 500)
}

func (o *UserTokenListInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/UserToken/list][%d] userTokenListInternalServerError ", 500)
}

func (o *UserTokenListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
UserTokenListBadRequestBodyItems0 user token list bad request body items0
swagger:model UserTokenListBadRequestBodyItems0
*/
type UserTokenListBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this user token list bad request body items0
func (o *UserTokenListBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this user token list bad request body items0 based on context it is used
func (o *UserTokenListBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UserTokenListBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UserTokenListBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res UserTokenListBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
UserTokenListForbiddenBody user token list forbidden body
swagger:model UserTokenListForbiddenBody
*/
type UserTokenListForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this user token list forbidden body
func (o *UserTokenListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this user token list forbidden body based on context it is used
func (o *UserTokenListForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UserTokenListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UserTokenListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res UserTokenListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
UserTokenListNotFoundBody user token list not found body
swagger:model UserTokenListNotFoundBody
*/
type UserTokenListNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this user token list not found body
func (o *UserTokenListNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this user token list not found body based on context it is used
func (o *UserTokenListNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UserTokenListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UserTokenListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res UserTokenListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
UserTokenListOKBodyItems0 user token list o k body items0
swagger:model UserTokenListOKBodyItems0
*/
type UserTokenListOKBodyItems0 struct {

	// access key
	AccessKey string `json:"accessKey,omitempty"`

	// created at
	CreatedAt string `json:"createdAt,omitempty"`

	// expire date
	ExpireDate string `json:"expireDate,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// is readonly
	IsReadonly bool `json:"isReadonly"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this user token list o k body items0
func (o *UserTokenListOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this user token list o k body items0 based on context it is used
func (o *UserTokenListOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UserTokenListOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UserTokenListOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res UserTokenListOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
UserTokenListUnauthorizedBody user token list unauthorized body
swagger:model UserTokenListUnauthorizedBody
*/
type UserTokenListUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this user token list unauthorized body
func (o *UserTokenListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this user token list unauthorized body based on context it is used
func (o *UserTokenListUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UserTokenListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UserTokenListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res UserTokenListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
