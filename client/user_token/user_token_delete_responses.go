// Code generated by go-swagger; DO NOT EDIT.

package user_token

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// UserTokenDeleteReader is a Reader for the UserTokenDelete structure.
type UserTokenDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserTokenDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUserTokenDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUserTokenDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUserTokenDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUserTokenDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUserTokenDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUserTokenDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUserTokenDeleteOK creates a UserTokenDeleteOK with default headers values
func NewUserTokenDeleteOK() *UserTokenDeleteOK {
	return &UserTokenDeleteOK{}
}

/* UserTokenDeleteOK describes a response with status code 200, with default header values.

Success
*/
type UserTokenDeleteOK struct {
	Payload models.Unit
}

func (o *UserTokenDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/UserToken/delete/{id}][%d] userTokenDeleteOK  %+v", 200, o.Payload)
}
func (o *UserTokenDeleteOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *UserTokenDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserTokenDeleteBadRequest creates a UserTokenDeleteBadRequest with default headers values
func NewUserTokenDeleteBadRequest() *UserTokenDeleteBadRequest {
	return &UserTokenDeleteBadRequest{}
}

/* UserTokenDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UserTokenDeleteBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *UserTokenDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/UserToken/delete/{id}][%d] userTokenDeleteBadRequest  %+v", 400, o.Payload)
}
func (o *UserTokenDeleteBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *UserTokenDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserTokenDeleteUnauthorized creates a UserTokenDeleteUnauthorized with default headers values
func NewUserTokenDeleteUnauthorized() *UserTokenDeleteUnauthorized {
	return &UserTokenDeleteUnauthorized{}
}

/* UserTokenDeleteUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UserTokenDeleteUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *UserTokenDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/UserToken/delete/{id}][%d] userTokenDeleteUnauthorized  %+v", 401, o.Payload)
}
func (o *UserTokenDeleteUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *UserTokenDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserTokenDeleteForbidden creates a UserTokenDeleteForbidden with default headers values
func NewUserTokenDeleteForbidden() *UserTokenDeleteForbidden {
	return &UserTokenDeleteForbidden{}
}

/* UserTokenDeleteForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UserTokenDeleteForbidden struct {
	Payload *models.ProblemDetails
}

func (o *UserTokenDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/UserToken/delete/{id}][%d] userTokenDeleteForbidden  %+v", 403, o.Payload)
}
func (o *UserTokenDeleteForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *UserTokenDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserTokenDeleteNotFound creates a UserTokenDeleteNotFound with default headers values
func NewUserTokenDeleteNotFound() *UserTokenDeleteNotFound {
	return &UserTokenDeleteNotFound{}
}

/* UserTokenDeleteNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UserTokenDeleteNotFound struct {
	Payload *models.ProblemDetails
}

func (o *UserTokenDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/UserToken/delete/{id}][%d] userTokenDeleteNotFound  %+v", 404, o.Payload)
}
func (o *UserTokenDeleteNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *UserTokenDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserTokenDeleteInternalServerError creates a UserTokenDeleteInternalServerError with default headers values
func NewUserTokenDeleteInternalServerError() *UserTokenDeleteInternalServerError {
	return &UserTokenDeleteInternalServerError{}
}

/* UserTokenDeleteInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UserTokenDeleteInternalServerError struct {
}

func (o *UserTokenDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/UserToken/delete/{id}][%d] userTokenDeleteInternalServerError ", 500)
}

func (o *UserTokenDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
