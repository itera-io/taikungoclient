// Code generated by go-swagger; DO NOT EDIT.

package kubespray

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// KubesprayCreateReader is a Reader for the KubesprayCreate structure.
type KubesprayCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KubesprayCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKubesprayCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewKubesprayCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewKubesprayCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewKubesprayCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewKubesprayCreateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewKubesprayCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewKubesprayCreateOK creates a KubesprayCreateOK with default headers values
func NewKubesprayCreateOK() *KubesprayCreateOK {
	return &KubesprayCreateOK{}
}

/*
KubesprayCreateOK describes a response with status code 200, with default header values.

Success
*/
type KubesprayCreateOK struct {
	Payload *models.APIResponse
}

// IsSuccess returns true when this kubespray create o k response has a 2xx status code
func (o *KubesprayCreateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this kubespray create o k response has a 3xx status code
func (o *KubesprayCreateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubespray create o k response has a 4xx status code
func (o *KubesprayCreateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this kubespray create o k response has a 5xx status code
func (o *KubesprayCreateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this kubespray create o k response a status code equal to that given
func (o *KubesprayCreateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the kubespray create o k response
func (o *KubesprayCreateOK) Code() int {
	return 200
}

func (o *KubesprayCreateOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateOK  %+v", 200, o.Payload)
}

func (o *KubesprayCreateOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateOK  %+v", 200, o.Payload)
}

func (o *KubesprayCreateOK) GetPayload() *models.APIResponse {
	return o.Payload
}

func (o *KubesprayCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubesprayCreateBadRequest creates a KubesprayCreateBadRequest with default headers values
func NewKubesprayCreateBadRequest() *KubesprayCreateBadRequest {
	return &KubesprayCreateBadRequest{}
}

/*
KubesprayCreateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type KubesprayCreateBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this kubespray create bad request response has a 2xx status code
func (o *KubesprayCreateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubespray create bad request response has a 3xx status code
func (o *KubesprayCreateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubespray create bad request response has a 4xx status code
func (o *KubesprayCreateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubespray create bad request response has a 5xx status code
func (o *KubesprayCreateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this kubespray create bad request response a status code equal to that given
func (o *KubesprayCreateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the kubespray create bad request response
func (o *KubesprayCreateBadRequest) Code() int {
	return 400
}

func (o *KubesprayCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateBadRequest  %+v", 400, o.Payload)
}

func (o *KubesprayCreateBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateBadRequest  %+v", 400, o.Payload)
}

func (o *KubesprayCreateBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KubesprayCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubesprayCreateUnauthorized creates a KubesprayCreateUnauthorized with default headers values
func NewKubesprayCreateUnauthorized() *KubesprayCreateUnauthorized {
	return &KubesprayCreateUnauthorized{}
}

/*
KubesprayCreateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type KubesprayCreateUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this kubespray create unauthorized response has a 2xx status code
func (o *KubesprayCreateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubespray create unauthorized response has a 3xx status code
func (o *KubesprayCreateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubespray create unauthorized response has a 4xx status code
func (o *KubesprayCreateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubespray create unauthorized response has a 5xx status code
func (o *KubesprayCreateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this kubespray create unauthorized response a status code equal to that given
func (o *KubesprayCreateUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the kubespray create unauthorized response
func (o *KubesprayCreateUnauthorized) Code() int {
	return 401
}

func (o *KubesprayCreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *KubesprayCreateUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *KubesprayCreateUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KubesprayCreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubesprayCreateForbidden creates a KubesprayCreateForbidden with default headers values
func NewKubesprayCreateForbidden() *KubesprayCreateForbidden {
	return &KubesprayCreateForbidden{}
}

/*
KubesprayCreateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type KubesprayCreateForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this kubespray create forbidden response has a 2xx status code
func (o *KubesprayCreateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubespray create forbidden response has a 3xx status code
func (o *KubesprayCreateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubespray create forbidden response has a 4xx status code
func (o *KubesprayCreateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubespray create forbidden response has a 5xx status code
func (o *KubesprayCreateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this kubespray create forbidden response a status code equal to that given
func (o *KubesprayCreateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the kubespray create forbidden response
func (o *KubesprayCreateForbidden) Code() int {
	return 403
}

func (o *KubesprayCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateForbidden  %+v", 403, o.Payload)
}

func (o *KubesprayCreateForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateForbidden  %+v", 403, o.Payload)
}

func (o *KubesprayCreateForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KubesprayCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubesprayCreateNotFound creates a KubesprayCreateNotFound with default headers values
func NewKubesprayCreateNotFound() *KubesprayCreateNotFound {
	return &KubesprayCreateNotFound{}
}

/*
KubesprayCreateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type KubesprayCreateNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this kubespray create not found response has a 2xx status code
func (o *KubesprayCreateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubespray create not found response has a 3xx status code
func (o *KubesprayCreateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubespray create not found response has a 4xx status code
func (o *KubesprayCreateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubespray create not found response has a 5xx status code
func (o *KubesprayCreateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this kubespray create not found response a status code equal to that given
func (o *KubesprayCreateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the kubespray create not found response
func (o *KubesprayCreateNotFound) Code() int {
	return 404
}

func (o *KubesprayCreateNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateNotFound  %+v", 404, o.Payload)
}

func (o *KubesprayCreateNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateNotFound  %+v", 404, o.Payload)
}

func (o *KubesprayCreateNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KubesprayCreateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubesprayCreateInternalServerError creates a KubesprayCreateInternalServerError with default headers values
func NewKubesprayCreateInternalServerError() *KubesprayCreateInternalServerError {
	return &KubesprayCreateInternalServerError{}
}

/*
KubesprayCreateInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type KubesprayCreateInternalServerError struct {
}

// IsSuccess returns true when this kubespray create internal server error response has a 2xx status code
func (o *KubesprayCreateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubespray create internal server error response has a 3xx status code
func (o *KubesprayCreateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubespray create internal server error response has a 4xx status code
func (o *KubesprayCreateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this kubespray create internal server error response has a 5xx status code
func (o *KubesprayCreateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this kubespray create internal server error response a status code equal to that given
func (o *KubesprayCreateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the kubespray create internal server error response
func (o *KubesprayCreateInternalServerError) Code() int {
	return 500
}

func (o *KubesprayCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateInternalServerError ", 500)
}

func (o *KubesprayCreateInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateInternalServerError ", 500)
}

func (o *KubesprayCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
