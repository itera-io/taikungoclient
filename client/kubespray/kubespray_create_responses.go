// Code generated by go-swagger; DO NOT EDIT.

package kubespray

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// KubesprayCreateReader is a Reader for the KubesprayCreate structure.
type KubesprayCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KubesprayCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKubesprayCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewKubesprayCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewKubesprayCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewKubesprayCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewKubesprayCreateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewKubesprayCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewKubesprayCreateOK creates a KubesprayCreateOK with default headers values
func NewKubesprayCreateOK() *KubesprayCreateOK {
	return &KubesprayCreateOK{}
}

/*
KubesprayCreateOK describes a response with status code 200, with default header values.

Success
*/
type KubesprayCreateOK struct {
	Payload *KubesprayCreateOKBody
}

// IsSuccess returns true when this kubespray create o k response has a 2xx status code
func (o *KubesprayCreateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this kubespray create o k response has a 3xx status code
func (o *KubesprayCreateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubespray create o k response has a 4xx status code
func (o *KubesprayCreateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this kubespray create o k response has a 5xx status code
func (o *KubesprayCreateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this kubespray create o k response a status code equal to that given
func (o *KubesprayCreateOK) IsCode(code int) bool {
	return code == 200
}

func (o *KubesprayCreateOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateOK  %+v", 200, o.Payload)
}

func (o *KubesprayCreateOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateOK  %+v", 200, o.Payload)
}

func (o *KubesprayCreateOK) GetPayload() *KubesprayCreateOKBody {
	return o.Payload
}

func (o *KubesprayCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubesprayCreateOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubesprayCreateBadRequest creates a KubesprayCreateBadRequest with default headers values
func NewKubesprayCreateBadRequest() *KubesprayCreateBadRequest {
	return &KubesprayCreateBadRequest{}
}

/*
KubesprayCreateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type KubesprayCreateBadRequest struct {
	Payload []*KubesprayCreateBadRequestBodyItems0
}

// IsSuccess returns true when this kubespray create bad request response has a 2xx status code
func (o *KubesprayCreateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubespray create bad request response has a 3xx status code
func (o *KubesprayCreateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubespray create bad request response has a 4xx status code
func (o *KubesprayCreateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubespray create bad request response has a 5xx status code
func (o *KubesprayCreateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this kubespray create bad request response a status code equal to that given
func (o *KubesprayCreateBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *KubesprayCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateBadRequest  %+v", 400, o.Payload)
}

func (o *KubesprayCreateBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateBadRequest  %+v", 400, o.Payload)
}

func (o *KubesprayCreateBadRequest) GetPayload() []*KubesprayCreateBadRequestBodyItems0 {
	return o.Payload
}

func (o *KubesprayCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubesprayCreateUnauthorized creates a KubesprayCreateUnauthorized with default headers values
func NewKubesprayCreateUnauthorized() *KubesprayCreateUnauthorized {
	return &KubesprayCreateUnauthorized{}
}

/*
KubesprayCreateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type KubesprayCreateUnauthorized struct {
	Payload *KubesprayCreateUnauthorizedBody
}

// IsSuccess returns true when this kubespray create unauthorized response has a 2xx status code
func (o *KubesprayCreateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubespray create unauthorized response has a 3xx status code
func (o *KubesprayCreateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubespray create unauthorized response has a 4xx status code
func (o *KubesprayCreateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubespray create unauthorized response has a 5xx status code
func (o *KubesprayCreateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this kubespray create unauthorized response a status code equal to that given
func (o *KubesprayCreateUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *KubesprayCreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *KubesprayCreateUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *KubesprayCreateUnauthorized) GetPayload() *KubesprayCreateUnauthorizedBody {
	return o.Payload
}

func (o *KubesprayCreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubesprayCreateUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubesprayCreateForbidden creates a KubesprayCreateForbidden with default headers values
func NewKubesprayCreateForbidden() *KubesprayCreateForbidden {
	return &KubesprayCreateForbidden{}
}

/*
KubesprayCreateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type KubesprayCreateForbidden struct {
	Payload *KubesprayCreateForbiddenBody
}

// IsSuccess returns true when this kubespray create forbidden response has a 2xx status code
func (o *KubesprayCreateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubespray create forbidden response has a 3xx status code
func (o *KubesprayCreateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubespray create forbidden response has a 4xx status code
func (o *KubesprayCreateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubespray create forbidden response has a 5xx status code
func (o *KubesprayCreateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this kubespray create forbidden response a status code equal to that given
func (o *KubesprayCreateForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *KubesprayCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateForbidden  %+v", 403, o.Payload)
}

func (o *KubesprayCreateForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateForbidden  %+v", 403, o.Payload)
}

func (o *KubesprayCreateForbidden) GetPayload() *KubesprayCreateForbiddenBody {
	return o.Payload
}

func (o *KubesprayCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubesprayCreateForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubesprayCreateNotFound creates a KubesprayCreateNotFound with default headers values
func NewKubesprayCreateNotFound() *KubesprayCreateNotFound {
	return &KubesprayCreateNotFound{}
}

/*
KubesprayCreateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type KubesprayCreateNotFound struct {
	Payload *KubesprayCreateNotFoundBody
}

// IsSuccess returns true when this kubespray create not found response has a 2xx status code
func (o *KubesprayCreateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubespray create not found response has a 3xx status code
func (o *KubesprayCreateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubespray create not found response has a 4xx status code
func (o *KubesprayCreateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this kubespray create not found response has a 5xx status code
func (o *KubesprayCreateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this kubespray create not found response a status code equal to that given
func (o *KubesprayCreateNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *KubesprayCreateNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateNotFound  %+v", 404, o.Payload)
}

func (o *KubesprayCreateNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateNotFound  %+v", 404, o.Payload)
}

func (o *KubesprayCreateNotFound) GetPayload() *KubesprayCreateNotFoundBody {
	return o.Payload
}

func (o *KubesprayCreateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubesprayCreateNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubesprayCreateInternalServerError creates a KubesprayCreateInternalServerError with default headers values
func NewKubesprayCreateInternalServerError() *KubesprayCreateInternalServerError {
	return &KubesprayCreateInternalServerError{}
}

/*
KubesprayCreateInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type KubesprayCreateInternalServerError struct {
}

// IsSuccess returns true when this kubespray create internal server error response has a 2xx status code
func (o *KubesprayCreateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this kubespray create internal server error response has a 3xx status code
func (o *KubesprayCreateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this kubespray create internal server error response has a 4xx status code
func (o *KubesprayCreateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this kubespray create internal server error response has a 5xx status code
func (o *KubesprayCreateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this kubespray create internal server error response a status code equal to that given
func (o *KubesprayCreateInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *KubesprayCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateInternalServerError ", 500)
}

func (o *KubesprayCreateInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Kubespray][%d] kubesprayCreateInternalServerError ", 500)
}

func (o *KubesprayCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
KubesprayCreateBadRequestBodyItems0 kubespray create bad request body items0
swagger:model KubesprayCreateBadRequestBodyItems0
*/
type KubesprayCreateBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this kubespray create bad request body items0
func (o *KubesprayCreateBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubespray create bad request body items0 based on context it is used
func (o *KubesprayCreateBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubesprayCreateBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubesprayCreateBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res KubesprayCreateBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubesprayCreateBody kubespray create body
swagger:model KubesprayCreateBody
*/
type KubesprayCreateBody struct {

	// kubernetes version
	KubernetesVersion string `json:"kubernetesVersion,omitempty"`

	// version
	Version string `json:"version,omitempty"`
}

// Validate validates this kubespray create body
func (o *KubesprayCreateBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubespray create body based on context it is used
func (o *KubesprayCreateBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubesprayCreateBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubesprayCreateBody) UnmarshalBinary(b []byte) error {
	var res KubesprayCreateBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubesprayCreateForbiddenBody kubespray create forbidden body
swagger:model KubesprayCreateForbiddenBody
*/
type KubesprayCreateForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kubespray create forbidden body
func (o *KubesprayCreateForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubespray create forbidden body based on context it is used
func (o *KubesprayCreateForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubesprayCreateForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubesprayCreateForbiddenBody) UnmarshalBinary(b []byte) error {
	var res KubesprayCreateForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubesprayCreateNotFoundBody kubespray create not found body
swagger:model KubesprayCreateNotFoundBody
*/
type KubesprayCreateNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kubespray create not found body
func (o *KubesprayCreateNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubespray create not found body based on context it is used
func (o *KubesprayCreateNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubesprayCreateNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubesprayCreateNotFoundBody) UnmarshalBinary(b []byte) error {
	var res KubesprayCreateNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubesprayCreateOKBody kubespray create o k body
swagger:model KubesprayCreateOKBody
*/
type KubesprayCreateOKBody struct {

	// id
	ID string `json:"id,omitempty"`

	// is error
	IsError bool `json:"isError"`

	// message
	Message string `json:"message,omitempty"`

	// result
	Result interface{} `json:"result,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`
}

// Validate validates this kubespray create o k body
func (o *KubesprayCreateOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubespray create o k body based on context it is used
func (o *KubesprayCreateOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubesprayCreateOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubesprayCreateOKBody) UnmarshalBinary(b []byte) error {
	var res KubesprayCreateOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
KubesprayCreateUnauthorizedBody kubespray create unauthorized body
swagger:model KubesprayCreateUnauthorizedBody
*/
type KubesprayCreateUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this kubespray create unauthorized body
func (o *KubesprayCreateUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kubespray create unauthorized body based on context it is used
func (o *KubesprayCreateUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubesprayCreateUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubesprayCreateUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res KubesprayCreateUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
