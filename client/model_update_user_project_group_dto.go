/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the UpdateUserProjectGroupDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateUserProjectGroupDto{}

// UpdateUserProjectGroupDto struct for UpdateUserProjectGroupDto
type UpdateUserProjectGroupDto struct {
	ProjectGroupId *int32 `json:"projectGroupId,omitempty"`
	IsBound        *bool  `json:"isBound,omitempty"`
}

// NewUpdateUserProjectGroupDto instantiates a new UpdateUserProjectGroupDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateUserProjectGroupDto() *UpdateUserProjectGroupDto {
	this := UpdateUserProjectGroupDto{}
	return &this
}

// NewUpdateUserProjectGroupDtoWithDefaults instantiates a new UpdateUserProjectGroupDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateUserProjectGroupDtoWithDefaults() *UpdateUserProjectGroupDto {
	this := UpdateUserProjectGroupDto{}
	return &this
}

// GetProjectGroupId returns the ProjectGroupId field value if set, zero value otherwise.
func (o *UpdateUserProjectGroupDto) GetProjectGroupId() int32 {
	if o == nil || IsNil(o.ProjectGroupId) {
		var ret int32
		return ret
	}
	return *o.ProjectGroupId
}

// GetProjectGroupIdOk returns a tuple with the ProjectGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserProjectGroupDto) GetProjectGroupIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectGroupId) {
		return nil, false
	}
	return o.ProjectGroupId, true
}

// HasProjectGroupId returns a boolean if a field has been set.
func (o *UpdateUserProjectGroupDto) HasProjectGroupId() bool {
	if o != nil && !IsNil(o.ProjectGroupId) {
		return true
	}

	return false
}

// SetProjectGroupId gets a reference to the given int32 and assigns it to the ProjectGroupId field.
func (o *UpdateUserProjectGroupDto) SetProjectGroupId(v int32) {
	o.ProjectGroupId = &v
}

// GetIsBound returns the IsBound field value if set, zero value otherwise.
func (o *UpdateUserProjectGroupDto) GetIsBound() bool {
	if o == nil || IsNil(o.IsBound) {
		var ret bool
		return ret
	}
	return *o.IsBound
}

// GetIsBoundOk returns a tuple with the IsBound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserProjectGroupDto) GetIsBoundOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBound) {
		return nil, false
	}
	return o.IsBound, true
}

// HasIsBound returns a boolean if a field has been set.
func (o *UpdateUserProjectGroupDto) HasIsBound() bool {
	if o != nil && !IsNil(o.IsBound) {
		return true
	}

	return false
}

// SetIsBound gets a reference to the given bool and assigns it to the IsBound field.
func (o *UpdateUserProjectGroupDto) SetIsBound(v bool) {
	o.IsBound = &v
}

func (o UpdateUserProjectGroupDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateUserProjectGroupDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectGroupId) {
		toSerialize["projectGroupId"] = o.ProjectGroupId
	}
	if !IsNil(o.IsBound) {
		toSerialize["isBound"] = o.IsBound
	}
	return toSerialize, nil
}

type NullableUpdateUserProjectGroupDto struct {
	value *UpdateUserProjectGroupDto
	isSet bool
}

func (v NullableUpdateUserProjectGroupDto) Get() *UpdateUserProjectGroupDto {
	return v.value
}

func (v *NullableUpdateUserProjectGroupDto) Set(val *UpdateUserProjectGroupDto) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateUserProjectGroupDto) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateUserProjectGroupDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateUserProjectGroupDto(val *UpdateUserProjectGroupDto) *NullableUpdateUserProjectGroupDto {
	return &NullableUpdateUserProjectGroupDto{value: val, isSet: true}
}

func (v NullableUpdateUserProjectGroupDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateUserProjectGroupDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
