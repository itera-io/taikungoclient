/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"time"
)

// checks if the ProjectFullListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectFullListDto{}

// ProjectFullListDto struct for ProjectFullListDto
type ProjectFullListDto struct {
	Id                    *int32                           `json:"id,omitempty"`
	Name                  NullableString                   `json:"name,omitempty"`
	Operation             NullableString                   `json:"operation,omitempty"`
	JobUrl                NullableString                   `json:"jobUrl,omitempty"`
	ImageName             NullableString                   `json:"imageName,omitempty"`
	Token                 NullableString                   `json:"token,omitempty"`
	IsKubernetes          *bool                            `json:"isKubernetes,omitempty"`
	IsLocked              *bool                            `json:"isLocked,omitempty"`
	IsBackupEnabled       *bool                            `json:"isBackupEnabled,omitempty"`
	IsMonitoringEnabled   *bool                            `json:"isMonitoringEnabled,omitempty"`
	IsAutoUpgrade         *bool                            `json:"isAutoUpgrade,omitempty"`
	AccessProfileRevision *int32                           `json:"accessProfileRevision,omitempty"`
	CloudCredentialName   NullableString                   `json:"cloudCredentialName,omitempty"`
	OrganizationName      NullableString                   `json:"organizationName,omitempty"`
	OrganizationId        *int32                           `json:"organizationId,omitempty"`
	Status                NullableString                   `json:"status,omitempty"`
	Health                NullableString                   `json:"health,omitempty"`
	AccessIp              NullableString                   `json:"accessIp,omitempty"`
	CloudType             NullableString                   `json:"cloudType,omitempty"`
	CreatedAt             NullableString                   `json:"createdAt,omitempty"`
	UpdatedAt             NullableTime                     `json:"updatedAt,omitempty"`
	AccessProfiles        *AccessProfilesForProjectListDto `json:"accessProfiles,omitempty"`
	IsDeleteCluster       *bool                            `json:"isDeleteCluster,omitempty"`
	TaikunPrivateSSHKey   NullableString                   `json:"taikunPrivateSSHKey,omitempty"`
	TaikunPublicSSHKey    NullableString                   `json:"taikunPublicSSHKey,omitempty"`
	StandaloneVms         []StandAloneVmFullDto            `json:"standaloneVms,omitempty"`
	Cidr                  NullableString                   `json:"cidr,omitempty"`
	NetMask               NullableInt32                    `json:"netMask,omitempty"`
	PrivateIp             NullableString                   `json:"privateIp,omitempty"`
	PublicIp              NullableString                   `json:"publicIp,omitempty"`
	IsKubevapEnabled      *bool                            `json:"isKubevapEnabled,omitempty"`
	TanzuReleaseVersion   NullableString                   `json:"tanzuReleaseVersion,omitempty"`
}

// NewProjectFullListDto instantiates a new ProjectFullListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectFullListDto() *ProjectFullListDto {
	this := ProjectFullListDto{}
	return &this
}

// NewProjectFullListDtoWithDefaults instantiates a new ProjectFullListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectFullListDtoWithDefaults() *ProjectFullListDto {
	this := ProjectFullListDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProjectFullListDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFullListDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ProjectFullListDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ProjectFullListDto) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *ProjectFullListDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ProjectFullListDto) UnsetName() {
	o.Name.Unset()
}

// GetOperation returns the Operation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetOperation() string {
	if o == nil || IsNil(o.Operation.Get()) {
		var ret string
		return ret
	}
	return *o.Operation.Get()
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetOperationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Operation.Get(), o.Operation.IsSet()
}

// HasOperation returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasOperation() bool {
	if o != nil && o.Operation.IsSet() {
		return true
	}

	return false
}

// SetOperation gets a reference to the given NullableString and assigns it to the Operation field.
func (o *ProjectFullListDto) SetOperation(v string) {
	o.Operation.Set(&v)
}

// SetOperationNil sets the value for Operation to be an explicit nil
func (o *ProjectFullListDto) SetOperationNil() {
	o.Operation.Set(nil)
}

// UnsetOperation ensures that no value is present for Operation, not even an explicit nil
func (o *ProjectFullListDto) UnsetOperation() {
	o.Operation.Unset()
}

// GetJobUrl returns the JobUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetJobUrl() string {
	if o == nil || IsNil(o.JobUrl.Get()) {
		var ret string
		return ret
	}
	return *o.JobUrl.Get()
}

// GetJobUrlOk returns a tuple with the JobUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetJobUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JobUrl.Get(), o.JobUrl.IsSet()
}

// HasJobUrl returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasJobUrl() bool {
	if o != nil && o.JobUrl.IsSet() {
		return true
	}

	return false
}

// SetJobUrl gets a reference to the given NullableString and assigns it to the JobUrl field.
func (o *ProjectFullListDto) SetJobUrl(v string) {
	o.JobUrl.Set(&v)
}

// SetJobUrlNil sets the value for JobUrl to be an explicit nil
func (o *ProjectFullListDto) SetJobUrlNil() {
	o.JobUrl.Set(nil)
}

// UnsetJobUrl ensures that no value is present for JobUrl, not even an explicit nil
func (o *ProjectFullListDto) UnsetJobUrl() {
	o.JobUrl.Unset()
}

// GetImageName returns the ImageName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetImageName() string {
	if o == nil || IsNil(o.ImageName.Get()) {
		var ret string
		return ret
	}
	return *o.ImageName.Get()
}

// GetImageNameOk returns a tuple with the ImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetImageNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageName.Get(), o.ImageName.IsSet()
}

// HasImageName returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasImageName() bool {
	if o != nil && o.ImageName.IsSet() {
		return true
	}

	return false
}

// SetImageName gets a reference to the given NullableString and assigns it to the ImageName field.
func (o *ProjectFullListDto) SetImageName(v string) {
	o.ImageName.Set(&v)
}

// SetImageNameNil sets the value for ImageName to be an explicit nil
func (o *ProjectFullListDto) SetImageNameNil() {
	o.ImageName.Set(nil)
}

// UnsetImageName ensures that no value is present for ImageName, not even an explicit nil
func (o *ProjectFullListDto) UnsetImageName() {
	o.ImageName.Unset()
}

// GetToken returns the Token field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetToken() string {
	if o == nil || IsNil(o.Token.Get()) {
		var ret string
		return ret
	}
	return *o.Token.Get()
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Token.Get(), o.Token.IsSet()
}

// HasToken returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasToken() bool {
	if o != nil && o.Token.IsSet() {
		return true
	}

	return false
}

// SetToken gets a reference to the given NullableString and assigns it to the Token field.
func (o *ProjectFullListDto) SetToken(v string) {
	o.Token.Set(&v)
}

// SetTokenNil sets the value for Token to be an explicit nil
func (o *ProjectFullListDto) SetTokenNil() {
	o.Token.Set(nil)
}

// UnsetToken ensures that no value is present for Token, not even an explicit nil
func (o *ProjectFullListDto) UnsetToken() {
	o.Token.Unset()
}

// GetIsKubernetes returns the IsKubernetes field value if set, zero value otherwise.
func (o *ProjectFullListDto) GetIsKubernetes() bool {
	if o == nil || IsNil(o.IsKubernetes) {
		var ret bool
		return ret
	}
	return *o.IsKubernetes
}

// GetIsKubernetesOk returns a tuple with the IsKubernetes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFullListDto) GetIsKubernetesOk() (*bool, bool) {
	if o == nil || IsNil(o.IsKubernetes) {
		return nil, false
	}
	return o.IsKubernetes, true
}

// HasIsKubernetes returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasIsKubernetes() bool {
	if o != nil && !IsNil(o.IsKubernetes) {
		return true
	}

	return false
}

// SetIsKubernetes gets a reference to the given bool and assigns it to the IsKubernetes field.
func (o *ProjectFullListDto) SetIsKubernetes(v bool) {
	o.IsKubernetes = &v
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise.
func (o *ProjectFullListDto) GetIsLocked() bool {
	if o == nil || IsNil(o.IsLocked) {
		var ret bool
		return ret
	}
	return *o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFullListDto) GetIsLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocked) {
		return nil, false
	}
	return o.IsLocked, true
}

// HasIsLocked returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasIsLocked() bool {
	if o != nil && !IsNil(o.IsLocked) {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given bool and assigns it to the IsLocked field.
func (o *ProjectFullListDto) SetIsLocked(v bool) {
	o.IsLocked = &v
}

// GetIsBackupEnabled returns the IsBackupEnabled field value if set, zero value otherwise.
func (o *ProjectFullListDto) GetIsBackupEnabled() bool {
	if o == nil || IsNil(o.IsBackupEnabled) {
		var ret bool
		return ret
	}
	return *o.IsBackupEnabled
}

// GetIsBackupEnabledOk returns a tuple with the IsBackupEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFullListDto) GetIsBackupEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBackupEnabled) {
		return nil, false
	}
	return o.IsBackupEnabled, true
}

// HasIsBackupEnabled returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasIsBackupEnabled() bool {
	if o != nil && !IsNil(o.IsBackupEnabled) {
		return true
	}

	return false
}

// SetIsBackupEnabled gets a reference to the given bool and assigns it to the IsBackupEnabled field.
func (o *ProjectFullListDto) SetIsBackupEnabled(v bool) {
	o.IsBackupEnabled = &v
}

// GetIsMonitoringEnabled returns the IsMonitoringEnabled field value if set, zero value otherwise.
func (o *ProjectFullListDto) GetIsMonitoringEnabled() bool {
	if o == nil || IsNil(o.IsMonitoringEnabled) {
		var ret bool
		return ret
	}
	return *o.IsMonitoringEnabled
}

// GetIsMonitoringEnabledOk returns a tuple with the IsMonitoringEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFullListDto) GetIsMonitoringEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMonitoringEnabled) {
		return nil, false
	}
	return o.IsMonitoringEnabled, true
}

// HasIsMonitoringEnabled returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasIsMonitoringEnabled() bool {
	if o != nil && !IsNil(o.IsMonitoringEnabled) {
		return true
	}

	return false
}

// SetIsMonitoringEnabled gets a reference to the given bool and assigns it to the IsMonitoringEnabled field.
func (o *ProjectFullListDto) SetIsMonitoringEnabled(v bool) {
	o.IsMonitoringEnabled = &v
}

// GetIsAutoUpgrade returns the IsAutoUpgrade field value if set, zero value otherwise.
func (o *ProjectFullListDto) GetIsAutoUpgrade() bool {
	if o == nil || IsNil(o.IsAutoUpgrade) {
		var ret bool
		return ret
	}
	return *o.IsAutoUpgrade
}

// GetIsAutoUpgradeOk returns a tuple with the IsAutoUpgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFullListDto) GetIsAutoUpgradeOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutoUpgrade) {
		return nil, false
	}
	return o.IsAutoUpgrade, true
}

// HasIsAutoUpgrade returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasIsAutoUpgrade() bool {
	if o != nil && !IsNil(o.IsAutoUpgrade) {
		return true
	}

	return false
}

// SetIsAutoUpgrade gets a reference to the given bool and assigns it to the IsAutoUpgrade field.
func (o *ProjectFullListDto) SetIsAutoUpgrade(v bool) {
	o.IsAutoUpgrade = &v
}

// GetAccessProfileRevision returns the AccessProfileRevision field value if set, zero value otherwise.
func (o *ProjectFullListDto) GetAccessProfileRevision() int32 {
	if o == nil || IsNil(o.AccessProfileRevision) {
		var ret int32
		return ret
	}
	return *o.AccessProfileRevision
}

// GetAccessProfileRevisionOk returns a tuple with the AccessProfileRevision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFullListDto) GetAccessProfileRevisionOk() (*int32, bool) {
	if o == nil || IsNil(o.AccessProfileRevision) {
		return nil, false
	}
	return o.AccessProfileRevision, true
}

// HasAccessProfileRevision returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasAccessProfileRevision() bool {
	if o != nil && !IsNil(o.AccessProfileRevision) {
		return true
	}

	return false
}

// SetAccessProfileRevision gets a reference to the given int32 and assigns it to the AccessProfileRevision field.
func (o *ProjectFullListDto) SetAccessProfileRevision(v int32) {
	o.AccessProfileRevision = &v
}

// GetCloudCredentialName returns the CloudCredentialName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetCloudCredentialName() string {
	if o == nil || IsNil(o.CloudCredentialName.Get()) {
		var ret string
		return ret
	}
	return *o.CloudCredentialName.Get()
}

// GetCloudCredentialNameOk returns a tuple with the CloudCredentialName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetCloudCredentialNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloudCredentialName.Get(), o.CloudCredentialName.IsSet()
}

// HasCloudCredentialName returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasCloudCredentialName() bool {
	if o != nil && o.CloudCredentialName.IsSet() {
		return true
	}

	return false
}

// SetCloudCredentialName gets a reference to the given NullableString and assigns it to the CloudCredentialName field.
func (o *ProjectFullListDto) SetCloudCredentialName(v string) {
	o.CloudCredentialName.Set(&v)
}

// SetCloudCredentialNameNil sets the value for CloudCredentialName to be an explicit nil
func (o *ProjectFullListDto) SetCloudCredentialNameNil() {
	o.CloudCredentialName.Set(nil)
}

// UnsetCloudCredentialName ensures that no value is present for CloudCredentialName, not even an explicit nil
func (o *ProjectFullListDto) UnsetCloudCredentialName() {
	o.CloudCredentialName.Unset()
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizationName.Get()
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationName.Get(), o.OrganizationName.IsSet()
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasOrganizationName() bool {
	if o != nil && o.OrganizationName.IsSet() {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given NullableString and assigns it to the OrganizationName field.
func (o *ProjectFullListDto) SetOrganizationName(v string) {
	o.OrganizationName.Set(&v)
}

// SetOrganizationNameNil sets the value for OrganizationName to be an explicit nil
func (o *ProjectFullListDto) SetOrganizationNameNil() {
	o.OrganizationName.Set(nil)
}

// UnsetOrganizationName ensures that no value is present for OrganizationName, not even an explicit nil
func (o *ProjectFullListDto) UnsetOrganizationName() {
	o.OrganizationName.Unset()
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ProjectFullListDto) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFullListDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *ProjectFullListDto) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *ProjectFullListDto) SetStatus(v string) {
	o.Status.Set(&v)
}

// SetStatusNil sets the value for Status to be an explicit nil
func (o *ProjectFullListDto) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *ProjectFullListDto) UnsetStatus() {
	o.Status.Unset()
}

// GetHealth returns the Health field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetHealth() string {
	if o == nil || IsNil(o.Health.Get()) {
		var ret string
		return ret
	}
	return *o.Health.Get()
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetHealthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Health.Get(), o.Health.IsSet()
}

// HasHealth returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasHealth() bool {
	if o != nil && o.Health.IsSet() {
		return true
	}

	return false
}

// SetHealth gets a reference to the given NullableString and assigns it to the Health field.
func (o *ProjectFullListDto) SetHealth(v string) {
	o.Health.Set(&v)
}

// SetHealthNil sets the value for Health to be an explicit nil
func (o *ProjectFullListDto) SetHealthNil() {
	o.Health.Set(nil)
}

// UnsetHealth ensures that no value is present for Health, not even an explicit nil
func (o *ProjectFullListDto) UnsetHealth() {
	o.Health.Unset()
}

// GetAccessIp returns the AccessIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetAccessIp() string {
	if o == nil || IsNil(o.AccessIp.Get()) {
		var ret string
		return ret
	}
	return *o.AccessIp.Get()
}

// GetAccessIpOk returns a tuple with the AccessIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetAccessIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessIp.Get(), o.AccessIp.IsSet()
}

// HasAccessIp returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasAccessIp() bool {
	if o != nil && o.AccessIp.IsSet() {
		return true
	}

	return false
}

// SetAccessIp gets a reference to the given NullableString and assigns it to the AccessIp field.
func (o *ProjectFullListDto) SetAccessIp(v string) {
	o.AccessIp.Set(&v)
}

// SetAccessIpNil sets the value for AccessIp to be an explicit nil
func (o *ProjectFullListDto) SetAccessIpNil() {
	o.AccessIp.Set(nil)
}

// UnsetAccessIp ensures that no value is present for AccessIp, not even an explicit nil
func (o *ProjectFullListDto) UnsetAccessIp() {
	o.AccessIp.Unset()
}

// GetCloudType returns the CloudType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetCloudType() string {
	if o == nil || IsNil(o.CloudType.Get()) {
		var ret string
		return ret
	}
	return *o.CloudType.Get()
}

// GetCloudTypeOk returns a tuple with the CloudType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetCloudTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloudType.Get(), o.CloudType.IsSet()
}

// HasCloudType returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasCloudType() bool {
	if o != nil && o.CloudType.IsSet() {
		return true
	}

	return false
}

// SetCloudType gets a reference to the given NullableString and assigns it to the CloudType field.
func (o *ProjectFullListDto) SetCloudType(v string) {
	o.CloudType.Set(&v)
}

// SetCloudTypeNil sets the value for CloudType to be an explicit nil
func (o *ProjectFullListDto) SetCloudTypeNil() {
	o.CloudType.Set(nil)
}

// UnsetCloudType ensures that no value is present for CloudType, not even an explicit nil
func (o *ProjectFullListDto) UnsetCloudType() {
	o.CloudType.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableString and assigns it to the CreatedAt field.
func (o *ProjectFullListDto) SetCreatedAt(v string) {
	o.CreatedAt.Set(&v)
}

// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *ProjectFullListDto) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *ProjectFullListDto) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableTime and assigns it to the UpdatedAt field.
func (o *ProjectFullListDto) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *ProjectFullListDto) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *ProjectFullListDto) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

// GetAccessProfiles returns the AccessProfiles field value if set, zero value otherwise.
func (o *ProjectFullListDto) GetAccessProfiles() AccessProfilesForProjectListDto {
	if o == nil || IsNil(o.AccessProfiles) {
		var ret AccessProfilesForProjectListDto
		return ret
	}
	return *o.AccessProfiles
}

// GetAccessProfilesOk returns a tuple with the AccessProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFullListDto) GetAccessProfilesOk() (*AccessProfilesForProjectListDto, bool) {
	if o == nil || IsNil(o.AccessProfiles) {
		return nil, false
	}
	return o.AccessProfiles, true
}

// HasAccessProfiles returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasAccessProfiles() bool {
	if o != nil && !IsNil(o.AccessProfiles) {
		return true
	}

	return false
}

// SetAccessProfiles gets a reference to the given AccessProfilesForProjectListDto and assigns it to the AccessProfiles field.
func (o *ProjectFullListDto) SetAccessProfiles(v AccessProfilesForProjectListDto) {
	o.AccessProfiles = &v
}

// GetIsDeleteCluster returns the IsDeleteCluster field value if set, zero value otherwise.
func (o *ProjectFullListDto) GetIsDeleteCluster() bool {
	if o == nil || IsNil(o.IsDeleteCluster) {
		var ret bool
		return ret
	}
	return *o.IsDeleteCluster
}

// GetIsDeleteClusterOk returns a tuple with the IsDeleteCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFullListDto) GetIsDeleteClusterOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleteCluster) {
		return nil, false
	}
	return o.IsDeleteCluster, true
}

// HasIsDeleteCluster returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasIsDeleteCluster() bool {
	if o != nil && !IsNil(o.IsDeleteCluster) {
		return true
	}

	return false
}

// SetIsDeleteCluster gets a reference to the given bool and assigns it to the IsDeleteCluster field.
func (o *ProjectFullListDto) SetIsDeleteCluster(v bool) {
	o.IsDeleteCluster = &v
}

// GetTaikunPrivateSSHKey returns the TaikunPrivateSSHKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetTaikunPrivateSSHKey() string {
	if o == nil || IsNil(o.TaikunPrivateSSHKey.Get()) {
		var ret string
		return ret
	}
	return *o.TaikunPrivateSSHKey.Get()
}

// GetTaikunPrivateSSHKeyOk returns a tuple with the TaikunPrivateSSHKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetTaikunPrivateSSHKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaikunPrivateSSHKey.Get(), o.TaikunPrivateSSHKey.IsSet()
}

// HasTaikunPrivateSSHKey returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasTaikunPrivateSSHKey() bool {
	if o != nil && o.TaikunPrivateSSHKey.IsSet() {
		return true
	}

	return false
}

// SetTaikunPrivateSSHKey gets a reference to the given NullableString and assigns it to the TaikunPrivateSSHKey field.
func (o *ProjectFullListDto) SetTaikunPrivateSSHKey(v string) {
	o.TaikunPrivateSSHKey.Set(&v)
}

// SetTaikunPrivateSSHKeyNil sets the value for TaikunPrivateSSHKey to be an explicit nil
func (o *ProjectFullListDto) SetTaikunPrivateSSHKeyNil() {
	o.TaikunPrivateSSHKey.Set(nil)
}

// UnsetTaikunPrivateSSHKey ensures that no value is present for TaikunPrivateSSHKey, not even an explicit nil
func (o *ProjectFullListDto) UnsetTaikunPrivateSSHKey() {
	o.TaikunPrivateSSHKey.Unset()
}

// GetTaikunPublicSSHKey returns the TaikunPublicSSHKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetTaikunPublicSSHKey() string {
	if o == nil || IsNil(o.TaikunPublicSSHKey.Get()) {
		var ret string
		return ret
	}
	return *o.TaikunPublicSSHKey.Get()
}

// GetTaikunPublicSSHKeyOk returns a tuple with the TaikunPublicSSHKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetTaikunPublicSSHKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaikunPublicSSHKey.Get(), o.TaikunPublicSSHKey.IsSet()
}

// HasTaikunPublicSSHKey returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasTaikunPublicSSHKey() bool {
	if o != nil && o.TaikunPublicSSHKey.IsSet() {
		return true
	}

	return false
}

// SetTaikunPublicSSHKey gets a reference to the given NullableString and assigns it to the TaikunPublicSSHKey field.
func (o *ProjectFullListDto) SetTaikunPublicSSHKey(v string) {
	o.TaikunPublicSSHKey.Set(&v)
}

// SetTaikunPublicSSHKeyNil sets the value for TaikunPublicSSHKey to be an explicit nil
func (o *ProjectFullListDto) SetTaikunPublicSSHKeyNil() {
	o.TaikunPublicSSHKey.Set(nil)
}

// UnsetTaikunPublicSSHKey ensures that no value is present for TaikunPublicSSHKey, not even an explicit nil
func (o *ProjectFullListDto) UnsetTaikunPublicSSHKey() {
	o.TaikunPublicSSHKey.Unset()
}

// GetStandaloneVms returns the StandaloneVms field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetStandaloneVms() []StandAloneVmFullDto {
	if o == nil {
		var ret []StandAloneVmFullDto
		return ret
	}
	return o.StandaloneVms
}

// GetStandaloneVmsOk returns a tuple with the StandaloneVms field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetStandaloneVmsOk() ([]StandAloneVmFullDto, bool) {
	if o == nil || IsNil(o.StandaloneVms) {
		return nil, false
	}
	return o.StandaloneVms, true
}

// HasStandaloneVms returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasStandaloneVms() bool {
	if o != nil && IsNil(o.StandaloneVms) {
		return true
	}

	return false
}

// SetStandaloneVms gets a reference to the given []StandAloneVmFullDto and assigns it to the StandaloneVms field.
func (o *ProjectFullListDto) SetStandaloneVms(v []StandAloneVmFullDto) {
	o.StandaloneVms = v
}

// GetCidr returns the Cidr field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetCidr() string {
	if o == nil || IsNil(o.Cidr.Get()) {
		var ret string
		return ret
	}
	return *o.Cidr.Get()
}

// GetCidrOk returns a tuple with the Cidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetCidrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cidr.Get(), o.Cidr.IsSet()
}

// HasCidr returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasCidr() bool {
	if o != nil && o.Cidr.IsSet() {
		return true
	}

	return false
}

// SetCidr gets a reference to the given NullableString and assigns it to the Cidr field.
func (o *ProjectFullListDto) SetCidr(v string) {
	o.Cidr.Set(&v)
}

// SetCidrNil sets the value for Cidr to be an explicit nil
func (o *ProjectFullListDto) SetCidrNil() {
	o.Cidr.Set(nil)
}

// UnsetCidr ensures that no value is present for Cidr, not even an explicit nil
func (o *ProjectFullListDto) UnsetCidr() {
	o.Cidr.Unset()
}

// GetNetMask returns the NetMask field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetNetMask() int32 {
	if o == nil || IsNil(o.NetMask.Get()) {
		var ret int32
		return ret
	}
	return *o.NetMask.Get()
}

// GetNetMaskOk returns a tuple with the NetMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetNetMaskOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetMask.Get(), o.NetMask.IsSet()
}

// HasNetMask returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasNetMask() bool {
	if o != nil && o.NetMask.IsSet() {
		return true
	}

	return false
}

// SetNetMask gets a reference to the given NullableInt32 and assigns it to the NetMask field.
func (o *ProjectFullListDto) SetNetMask(v int32) {
	o.NetMask.Set(&v)
}

// SetNetMaskNil sets the value for NetMask to be an explicit nil
func (o *ProjectFullListDto) SetNetMaskNil() {
	o.NetMask.Set(nil)
}

// UnsetNetMask ensures that no value is present for NetMask, not even an explicit nil
func (o *ProjectFullListDto) UnsetNetMask() {
	o.NetMask.Unset()
}

// GetPrivateIp returns the PrivateIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetPrivateIp() string {
	if o == nil || IsNil(o.PrivateIp.Get()) {
		var ret string
		return ret
	}
	return *o.PrivateIp.Get()
}

// GetPrivateIpOk returns a tuple with the PrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetPrivateIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrivateIp.Get(), o.PrivateIp.IsSet()
}

// HasPrivateIp returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasPrivateIp() bool {
	if o != nil && o.PrivateIp.IsSet() {
		return true
	}

	return false
}

// SetPrivateIp gets a reference to the given NullableString and assigns it to the PrivateIp field.
func (o *ProjectFullListDto) SetPrivateIp(v string) {
	o.PrivateIp.Set(&v)
}

// SetPrivateIpNil sets the value for PrivateIp to be an explicit nil
func (o *ProjectFullListDto) SetPrivateIpNil() {
	o.PrivateIp.Set(nil)
}

// UnsetPrivateIp ensures that no value is present for PrivateIp, not even an explicit nil
func (o *ProjectFullListDto) UnsetPrivateIp() {
	o.PrivateIp.Unset()
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetPublicIp() string {
	if o == nil || IsNil(o.PublicIp.Get()) {
		var ret string
		return ret
	}
	return *o.PublicIp.Get()
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetPublicIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublicIp.Get(), o.PublicIp.IsSet()
}

// HasPublicIp returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasPublicIp() bool {
	if o != nil && o.PublicIp.IsSet() {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given NullableString and assigns it to the PublicIp field.
func (o *ProjectFullListDto) SetPublicIp(v string) {
	o.PublicIp.Set(&v)
}

// SetPublicIpNil sets the value for PublicIp to be an explicit nil
func (o *ProjectFullListDto) SetPublicIpNil() {
	o.PublicIp.Set(nil)
}

// UnsetPublicIp ensures that no value is present for PublicIp, not even an explicit nil
func (o *ProjectFullListDto) UnsetPublicIp() {
	o.PublicIp.Unset()
}

// GetIsKubevapEnabled returns the IsKubevapEnabled field value if set, zero value otherwise.
func (o *ProjectFullListDto) GetIsKubevapEnabled() bool {
	if o == nil || IsNil(o.IsKubevapEnabled) {
		var ret bool
		return ret
	}
	return *o.IsKubevapEnabled
}

// GetIsKubevapEnabledOk returns a tuple with the IsKubevapEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectFullListDto) GetIsKubevapEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsKubevapEnabled) {
		return nil, false
	}
	return o.IsKubevapEnabled, true
}

// HasIsKubevapEnabled returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasIsKubevapEnabled() bool {
	if o != nil && !IsNil(o.IsKubevapEnabled) {
		return true
	}

	return false
}

// SetIsKubevapEnabled gets a reference to the given bool and assigns it to the IsKubevapEnabled field.
func (o *ProjectFullListDto) SetIsKubevapEnabled(v bool) {
	o.IsKubevapEnabled = &v
}

// GetTanzuReleaseVersion returns the TanzuReleaseVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFullListDto) GetTanzuReleaseVersion() string {
	if o == nil || IsNil(o.TanzuReleaseVersion.Get()) {
		var ret string
		return ret
	}
	return *o.TanzuReleaseVersion.Get()
}

// GetTanzuReleaseVersionOk returns a tuple with the TanzuReleaseVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFullListDto) GetTanzuReleaseVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TanzuReleaseVersion.Get(), o.TanzuReleaseVersion.IsSet()
}

// HasTanzuReleaseVersion returns a boolean if a field has been set.
func (o *ProjectFullListDto) HasTanzuReleaseVersion() bool {
	if o != nil && o.TanzuReleaseVersion.IsSet() {
		return true
	}

	return false
}

// SetTanzuReleaseVersion gets a reference to the given NullableString and assigns it to the TanzuReleaseVersion field.
func (o *ProjectFullListDto) SetTanzuReleaseVersion(v string) {
	o.TanzuReleaseVersion.Set(&v)
}

// SetTanzuReleaseVersionNil sets the value for TanzuReleaseVersion to be an explicit nil
func (o *ProjectFullListDto) SetTanzuReleaseVersionNil() {
	o.TanzuReleaseVersion.Set(nil)
}

// UnsetTanzuReleaseVersion ensures that no value is present for TanzuReleaseVersion, not even an explicit nil
func (o *ProjectFullListDto) UnsetTanzuReleaseVersion() {
	o.TanzuReleaseVersion.Unset()
}

func (o ProjectFullListDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectFullListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Operation.IsSet() {
		toSerialize["operation"] = o.Operation.Get()
	}
	if o.JobUrl.IsSet() {
		toSerialize["jobUrl"] = o.JobUrl.Get()
	}
	if o.ImageName.IsSet() {
		toSerialize["imageName"] = o.ImageName.Get()
	}
	if o.Token.IsSet() {
		toSerialize["token"] = o.Token.Get()
	}
	if !IsNil(o.IsKubernetes) {
		toSerialize["isKubernetes"] = o.IsKubernetes
	}
	if !IsNil(o.IsLocked) {
		toSerialize["isLocked"] = o.IsLocked
	}
	if !IsNil(o.IsBackupEnabled) {
		toSerialize["isBackupEnabled"] = o.IsBackupEnabled
	}
	if !IsNil(o.IsMonitoringEnabled) {
		toSerialize["isMonitoringEnabled"] = o.IsMonitoringEnabled
	}
	if !IsNil(o.IsAutoUpgrade) {
		toSerialize["isAutoUpgrade"] = o.IsAutoUpgrade
	}
	if !IsNil(o.AccessProfileRevision) {
		toSerialize["accessProfileRevision"] = o.AccessProfileRevision
	}
	if o.CloudCredentialName.IsSet() {
		toSerialize["cloudCredentialName"] = o.CloudCredentialName.Get()
	}
	if o.OrganizationName.IsSet() {
		toSerialize["organizationName"] = o.OrganizationName.Get()
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Health.IsSet() {
		toSerialize["health"] = o.Health.Get()
	}
	if o.AccessIp.IsSet() {
		toSerialize["accessIp"] = o.AccessIp.Get()
	}
	if o.CloudType.IsSet() {
		toSerialize["cloudType"] = o.CloudType.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["createdAt"] = o.CreatedAt.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updatedAt"] = o.UpdatedAt.Get()
	}
	if !IsNil(o.AccessProfiles) {
		toSerialize["accessProfiles"] = o.AccessProfiles
	}
	if !IsNil(o.IsDeleteCluster) {
		toSerialize["isDeleteCluster"] = o.IsDeleteCluster
	}
	if o.TaikunPrivateSSHKey.IsSet() {
		toSerialize["taikunPrivateSSHKey"] = o.TaikunPrivateSSHKey.Get()
	}
	if o.TaikunPublicSSHKey.IsSet() {
		toSerialize["taikunPublicSSHKey"] = o.TaikunPublicSSHKey.Get()
	}
	if o.StandaloneVms != nil {
		toSerialize["standaloneVms"] = o.StandaloneVms
	}
	if o.Cidr.IsSet() {
		toSerialize["cidr"] = o.Cidr.Get()
	}
	if o.NetMask.IsSet() {
		toSerialize["netMask"] = o.NetMask.Get()
	}
	if o.PrivateIp.IsSet() {
		toSerialize["privateIp"] = o.PrivateIp.Get()
	}
	if o.PublicIp.IsSet() {
		toSerialize["publicIp"] = o.PublicIp.Get()
	}
	if !IsNil(o.IsKubevapEnabled) {
		toSerialize["isKubevapEnabled"] = o.IsKubevapEnabled
	}
	if o.TanzuReleaseVersion.IsSet() {
		toSerialize["tanzuReleaseVersion"] = o.TanzuReleaseVersion.Get()
	}
	return toSerialize, nil
}

type NullableProjectFullListDto struct {
	value *ProjectFullListDto
	isSet bool
}

func (v NullableProjectFullListDto) Get() *ProjectFullListDto {
	return v.value
}

func (v *NullableProjectFullListDto) Set(val *ProjectFullListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectFullListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectFullListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectFullListDto(val *ProjectFullListDto) *NullableProjectFullListDto {
	return &NullableProjectFullListDto{value: val, isSet: true}
}

func (v NullableProjectFullListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectFullListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
