/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the StandAloneVmIpManagementCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StandAloneVmIpManagementCommand{}

// StandAloneVmIpManagementCommand struct for StandAloneVmIpManagementCommand
type StandAloneVmIpManagementCommand struct {
	Id *int32 `json:"id,omitempty"`
	Mode *string `json:"mode,omitempty"`
}

// NewStandAloneVmIpManagementCommand instantiates a new StandAloneVmIpManagementCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStandAloneVmIpManagementCommand() *StandAloneVmIpManagementCommand {
	this := StandAloneVmIpManagementCommand{}
	return &this
}

// NewStandAloneVmIpManagementCommandWithDefaults instantiates a new StandAloneVmIpManagementCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStandAloneVmIpManagementCommandWithDefaults() *StandAloneVmIpManagementCommand {
	this := StandAloneVmIpManagementCommand{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StandAloneVmIpManagementCommand) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmIpManagementCommand) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *StandAloneVmIpManagementCommand) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *StandAloneVmIpManagementCommand) SetId(v int32) {
	o.Id = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *StandAloneVmIpManagementCommand) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneVmIpManagementCommand) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *StandAloneVmIpManagementCommand) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *StandAloneVmIpManagementCommand) SetMode(v string) {
	o.Mode = &v
}

func (o StandAloneVmIpManagementCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StandAloneVmIpManagementCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	return toSerialize, nil
}

type NullableStandAloneVmIpManagementCommand struct {
	value *StandAloneVmIpManagementCommand
	isSet bool
}

func (v NullableStandAloneVmIpManagementCommand) Get() *StandAloneVmIpManagementCommand {
	return v.value
}

func (v *NullableStandAloneVmIpManagementCommand) Set(val *StandAloneVmIpManagementCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableStandAloneVmIpManagementCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableStandAloneVmIpManagementCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStandAloneVmIpManagementCommand(val *StandAloneVmIpManagementCommand) *NullableStandAloneVmIpManagementCommand {
	return &NullableStandAloneVmIpManagementCommand{value: val, isSet: true}
}

func (v NullableStandAloneVmIpManagementCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStandAloneVmIpManagementCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


