// Code generated by go-swagger; DO NOT EDIT.

package project_template

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ProjectTemplateDeleteReader is a Reader for the ProjectTemplateDelete structure.
type ProjectTemplateDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProjectTemplateDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProjectTemplateDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewProjectTemplateDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProjectTemplateDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProjectTemplateDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProjectTemplateDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProjectTemplateDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProjectTemplateDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProjectTemplateDeleteOK creates a ProjectTemplateDeleteOK with default headers values
func NewProjectTemplateDeleteOK() *ProjectTemplateDeleteOK {
	return &ProjectTemplateDeleteOK{}
}

/*
ProjectTemplateDeleteOK describes a response with status code 200, with default header values.

Success
*/
type ProjectTemplateDeleteOK struct {
	Payload models.Unit
}

// IsSuccess returns true when this project template delete o k response has a 2xx status code
func (o *ProjectTemplateDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this project template delete o k response has a 3xx status code
func (o *ProjectTemplateDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project template delete o k response has a 4xx status code
func (o *ProjectTemplateDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this project template delete o k response has a 5xx status code
func (o *ProjectTemplateDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this project template delete o k response a status code equal to that given
func (o *ProjectTemplateDeleteOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the project template delete o k response
func (o *ProjectTemplateDeleteOK) Code() int {
	return 200
}

func (o *ProjectTemplateDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/ProjectTemplate/{id}][%d] projectTemplateDeleteOK  %+v", 200, o.Payload)
}

func (o *ProjectTemplateDeleteOK) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/ProjectTemplate/{id}][%d] projectTemplateDeleteOK  %+v", 200, o.Payload)
}

func (o *ProjectTemplateDeleteOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *ProjectTemplateDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectTemplateDeleteNoContent creates a ProjectTemplateDeleteNoContent with default headers values
func NewProjectTemplateDeleteNoContent() *ProjectTemplateDeleteNoContent {
	return &ProjectTemplateDeleteNoContent{}
}

/*
ProjectTemplateDeleteNoContent describes a response with status code 204, with default header values.

Success
*/
type ProjectTemplateDeleteNoContent struct {
}

// IsSuccess returns true when this project template delete no content response has a 2xx status code
func (o *ProjectTemplateDeleteNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this project template delete no content response has a 3xx status code
func (o *ProjectTemplateDeleteNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project template delete no content response has a 4xx status code
func (o *ProjectTemplateDeleteNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this project template delete no content response has a 5xx status code
func (o *ProjectTemplateDeleteNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this project template delete no content response a status code equal to that given
func (o *ProjectTemplateDeleteNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the project template delete no content response
func (o *ProjectTemplateDeleteNoContent) Code() int {
	return 204
}

func (o *ProjectTemplateDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/ProjectTemplate/{id}][%d] projectTemplateDeleteNoContent ", 204)
}

func (o *ProjectTemplateDeleteNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/ProjectTemplate/{id}][%d] projectTemplateDeleteNoContent ", 204)
}

func (o *ProjectTemplateDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewProjectTemplateDeleteBadRequest creates a ProjectTemplateDeleteBadRequest with default headers values
func NewProjectTemplateDeleteBadRequest() *ProjectTemplateDeleteBadRequest {
	return &ProjectTemplateDeleteBadRequest{}
}

/*
ProjectTemplateDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProjectTemplateDeleteBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this project template delete bad request response has a 2xx status code
func (o *ProjectTemplateDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project template delete bad request response has a 3xx status code
func (o *ProjectTemplateDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project template delete bad request response has a 4xx status code
func (o *ProjectTemplateDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this project template delete bad request response has a 5xx status code
func (o *ProjectTemplateDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this project template delete bad request response a status code equal to that given
func (o *ProjectTemplateDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the project template delete bad request response
func (o *ProjectTemplateDeleteBadRequest) Code() int {
	return 400
}

func (o *ProjectTemplateDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/ProjectTemplate/{id}][%d] projectTemplateDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectTemplateDeleteBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/ProjectTemplate/{id}][%d] projectTemplateDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *ProjectTemplateDeleteBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectTemplateDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectTemplateDeleteUnauthorized creates a ProjectTemplateDeleteUnauthorized with default headers values
func NewProjectTemplateDeleteUnauthorized() *ProjectTemplateDeleteUnauthorized {
	return &ProjectTemplateDeleteUnauthorized{}
}

/*
ProjectTemplateDeleteUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProjectTemplateDeleteUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this project template delete unauthorized response has a 2xx status code
func (o *ProjectTemplateDeleteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project template delete unauthorized response has a 3xx status code
func (o *ProjectTemplateDeleteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project template delete unauthorized response has a 4xx status code
func (o *ProjectTemplateDeleteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this project template delete unauthorized response has a 5xx status code
func (o *ProjectTemplateDeleteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this project template delete unauthorized response a status code equal to that given
func (o *ProjectTemplateDeleteUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the project template delete unauthorized response
func (o *ProjectTemplateDeleteUnauthorized) Code() int {
	return 401
}

func (o *ProjectTemplateDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/ProjectTemplate/{id}][%d] projectTemplateDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectTemplateDeleteUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/ProjectTemplate/{id}][%d] projectTemplateDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *ProjectTemplateDeleteUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectTemplateDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectTemplateDeleteForbidden creates a ProjectTemplateDeleteForbidden with default headers values
func NewProjectTemplateDeleteForbidden() *ProjectTemplateDeleteForbidden {
	return &ProjectTemplateDeleteForbidden{}
}

/*
ProjectTemplateDeleteForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ProjectTemplateDeleteForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this project template delete forbidden response has a 2xx status code
func (o *ProjectTemplateDeleteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project template delete forbidden response has a 3xx status code
func (o *ProjectTemplateDeleteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project template delete forbidden response has a 4xx status code
func (o *ProjectTemplateDeleteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this project template delete forbidden response has a 5xx status code
func (o *ProjectTemplateDeleteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this project template delete forbidden response a status code equal to that given
func (o *ProjectTemplateDeleteForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the project template delete forbidden response
func (o *ProjectTemplateDeleteForbidden) Code() int {
	return 403
}

func (o *ProjectTemplateDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/ProjectTemplate/{id}][%d] projectTemplateDeleteForbidden  %+v", 403, o.Payload)
}

func (o *ProjectTemplateDeleteForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/ProjectTemplate/{id}][%d] projectTemplateDeleteForbidden  %+v", 403, o.Payload)
}

func (o *ProjectTemplateDeleteForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectTemplateDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectTemplateDeleteNotFound creates a ProjectTemplateDeleteNotFound with default headers values
func NewProjectTemplateDeleteNotFound() *ProjectTemplateDeleteNotFound {
	return &ProjectTemplateDeleteNotFound{}
}

/*
ProjectTemplateDeleteNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProjectTemplateDeleteNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this project template delete not found response has a 2xx status code
func (o *ProjectTemplateDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project template delete not found response has a 3xx status code
func (o *ProjectTemplateDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project template delete not found response has a 4xx status code
func (o *ProjectTemplateDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this project template delete not found response has a 5xx status code
func (o *ProjectTemplateDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this project template delete not found response a status code equal to that given
func (o *ProjectTemplateDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the project template delete not found response
func (o *ProjectTemplateDeleteNotFound) Code() int {
	return 404
}

func (o *ProjectTemplateDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/ProjectTemplate/{id}][%d] projectTemplateDeleteNotFound  %+v", 404, o.Payload)
}

func (o *ProjectTemplateDeleteNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/ProjectTemplate/{id}][%d] projectTemplateDeleteNotFound  %+v", 404, o.Payload)
}

func (o *ProjectTemplateDeleteNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProjectTemplateDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProjectTemplateDeleteInternalServerError creates a ProjectTemplateDeleteInternalServerError with default headers values
func NewProjectTemplateDeleteInternalServerError() *ProjectTemplateDeleteInternalServerError {
	return &ProjectTemplateDeleteInternalServerError{}
}

/*
ProjectTemplateDeleteInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ProjectTemplateDeleteInternalServerError struct {
}

// IsSuccess returns true when this project template delete internal server error response has a 2xx status code
func (o *ProjectTemplateDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this project template delete internal server error response has a 3xx status code
func (o *ProjectTemplateDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this project template delete internal server error response has a 4xx status code
func (o *ProjectTemplateDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this project template delete internal server error response has a 5xx status code
func (o *ProjectTemplateDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this project template delete internal server error response a status code equal to that given
func (o *ProjectTemplateDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the project template delete internal server error response
func (o *ProjectTemplateDeleteInternalServerError) Code() int {
	return 500
}

func (o *ProjectTemplateDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/ProjectTemplate/{id}][%d] projectTemplateDeleteInternalServerError ", 500)
}

func (o *ProjectTemplateDeleteInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v{v}/ProjectTemplate/{id}][%d] projectTemplateDeleteInternalServerError ", 500)
}

func (o *ProjectTemplateDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
