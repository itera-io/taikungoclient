/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the TaikunLbDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaikunLbDto{}

// TaikunLbDto struct for TaikunLbDto
type TaikunLbDto struct {
	Flavor             NullableString `json:"flavor,omitempty"`
	PrivateKey         NullableString `json:"privateKey,omitempty"`
	PublicKey          NullableString `json:"publicKey,omitempty"`
	RouterIdStartRange NullableInt32  `json:"routerIdStartRange,omitempty"`
	RouterIdEndRange   NullableInt32  `json:"routerIdEndRange,omitempty"`
}

// NewTaikunLbDto instantiates a new TaikunLbDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaikunLbDto() *TaikunLbDto {
	this := TaikunLbDto{}
	return &this
}

// NewTaikunLbDtoWithDefaults instantiates a new TaikunLbDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaikunLbDtoWithDefaults() *TaikunLbDto {
	this := TaikunLbDto{}
	return &this
}

// GetFlavor returns the Flavor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaikunLbDto) GetFlavor() string {
	if o == nil || IsNil(o.Flavor.Get()) {
		var ret string
		return ret
	}
	return *o.Flavor.Get()
}

// GetFlavorOk returns a tuple with the Flavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaikunLbDto) GetFlavorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Flavor.Get(), o.Flavor.IsSet()
}

// HasFlavor returns a boolean if a field has been set.
func (o *TaikunLbDto) HasFlavor() bool {
	if o != nil && o.Flavor.IsSet() {
		return true
	}

	return false
}

// SetFlavor gets a reference to the given NullableString and assigns it to the Flavor field.
func (o *TaikunLbDto) SetFlavor(v string) {
	o.Flavor.Set(&v)
}

// SetFlavorNil sets the value for Flavor to be an explicit nil
func (o *TaikunLbDto) SetFlavorNil() {
	o.Flavor.Set(nil)
}

// UnsetFlavor ensures that no value is present for Flavor, not even an explicit nil
func (o *TaikunLbDto) UnsetFlavor() {
	o.Flavor.Unset()
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaikunLbDto) GetPrivateKey() string {
	if o == nil || IsNil(o.PrivateKey.Get()) {
		var ret string
		return ret
	}
	return *o.PrivateKey.Get()
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaikunLbDto) GetPrivateKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrivateKey.Get(), o.PrivateKey.IsSet()
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *TaikunLbDto) HasPrivateKey() bool {
	if o != nil && o.PrivateKey.IsSet() {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given NullableString and assigns it to the PrivateKey field.
func (o *TaikunLbDto) SetPrivateKey(v string) {
	o.PrivateKey.Set(&v)
}

// SetPrivateKeyNil sets the value for PrivateKey to be an explicit nil
func (o *TaikunLbDto) SetPrivateKeyNil() {
	o.PrivateKey.Set(nil)
}

// UnsetPrivateKey ensures that no value is present for PrivateKey, not even an explicit nil
func (o *TaikunLbDto) UnsetPrivateKey() {
	o.PrivateKey.Unset()
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaikunLbDto) GetPublicKey() string {
	if o == nil || IsNil(o.PublicKey.Get()) {
		var ret string
		return ret
	}
	return *o.PublicKey.Get()
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaikunLbDto) GetPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublicKey.Get(), o.PublicKey.IsSet()
}

// HasPublicKey returns a boolean if a field has been set.
func (o *TaikunLbDto) HasPublicKey() bool {
	if o != nil && o.PublicKey.IsSet() {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given NullableString and assigns it to the PublicKey field.
func (o *TaikunLbDto) SetPublicKey(v string) {
	o.PublicKey.Set(&v)
}

// SetPublicKeyNil sets the value for PublicKey to be an explicit nil
func (o *TaikunLbDto) SetPublicKeyNil() {
	o.PublicKey.Set(nil)
}

// UnsetPublicKey ensures that no value is present for PublicKey, not even an explicit nil
func (o *TaikunLbDto) UnsetPublicKey() {
	o.PublicKey.Unset()
}

// GetRouterIdStartRange returns the RouterIdStartRange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaikunLbDto) GetRouterIdStartRange() int32 {
	if o == nil || IsNil(o.RouterIdStartRange.Get()) {
		var ret int32
		return ret
	}
	return *o.RouterIdStartRange.Get()
}

// GetRouterIdStartRangeOk returns a tuple with the RouterIdStartRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaikunLbDto) GetRouterIdStartRangeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RouterIdStartRange.Get(), o.RouterIdStartRange.IsSet()
}

// HasRouterIdStartRange returns a boolean if a field has been set.
func (o *TaikunLbDto) HasRouterIdStartRange() bool {
	if o != nil && o.RouterIdStartRange.IsSet() {
		return true
	}

	return false
}

// SetRouterIdStartRange gets a reference to the given NullableInt32 and assigns it to the RouterIdStartRange field.
func (o *TaikunLbDto) SetRouterIdStartRange(v int32) {
	o.RouterIdStartRange.Set(&v)
}

// SetRouterIdStartRangeNil sets the value for RouterIdStartRange to be an explicit nil
func (o *TaikunLbDto) SetRouterIdStartRangeNil() {
	o.RouterIdStartRange.Set(nil)
}

// UnsetRouterIdStartRange ensures that no value is present for RouterIdStartRange, not even an explicit nil
func (o *TaikunLbDto) UnsetRouterIdStartRange() {
	o.RouterIdStartRange.Unset()
}

// GetRouterIdEndRange returns the RouterIdEndRange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TaikunLbDto) GetRouterIdEndRange() int32 {
	if o == nil || IsNil(o.RouterIdEndRange.Get()) {
		var ret int32
		return ret
	}
	return *o.RouterIdEndRange.Get()
}

// GetRouterIdEndRangeOk returns a tuple with the RouterIdEndRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaikunLbDto) GetRouterIdEndRangeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RouterIdEndRange.Get(), o.RouterIdEndRange.IsSet()
}

// HasRouterIdEndRange returns a boolean if a field has been set.
func (o *TaikunLbDto) HasRouterIdEndRange() bool {
	if o != nil && o.RouterIdEndRange.IsSet() {
		return true
	}

	return false
}

// SetRouterIdEndRange gets a reference to the given NullableInt32 and assigns it to the RouterIdEndRange field.
func (o *TaikunLbDto) SetRouterIdEndRange(v int32) {
	o.RouterIdEndRange.Set(&v)
}

// SetRouterIdEndRangeNil sets the value for RouterIdEndRange to be an explicit nil
func (o *TaikunLbDto) SetRouterIdEndRangeNil() {
	o.RouterIdEndRange.Set(nil)
}

// UnsetRouterIdEndRange ensures that no value is present for RouterIdEndRange, not even an explicit nil
func (o *TaikunLbDto) UnsetRouterIdEndRange() {
	o.RouterIdEndRange.Unset()
}

func (o TaikunLbDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaikunLbDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Flavor.IsSet() {
		toSerialize["flavor"] = o.Flavor.Get()
	}
	if o.PrivateKey.IsSet() {
		toSerialize["privateKey"] = o.PrivateKey.Get()
	}
	if o.PublicKey.IsSet() {
		toSerialize["publicKey"] = o.PublicKey.Get()
	}
	if o.RouterIdStartRange.IsSet() {
		toSerialize["routerIdStartRange"] = o.RouterIdStartRange.Get()
	}
	if o.RouterIdEndRange.IsSet() {
		toSerialize["routerIdEndRange"] = o.RouterIdEndRange.Get()
	}
	return toSerialize, nil
}

type NullableTaikunLbDto struct {
	value *TaikunLbDto
	isSet bool
}

func (v NullableTaikunLbDto) Get() *TaikunLbDto {
	return v.value
}

func (v *NullableTaikunLbDto) Set(val *TaikunLbDto) {
	v.value = val
	v.isSet = true
}

func (v NullableTaikunLbDto) IsSet() bool {
	return v.isSet
}

func (v *NullableTaikunLbDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaikunLbDto(val *TaikunLbDto) *NullableTaikunLbDto {
	return &NullableTaikunLbDto{value: val, isSet: true}
}

func (v NullableTaikunLbDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaikunLbDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
