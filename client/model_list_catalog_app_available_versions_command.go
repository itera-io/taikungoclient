/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the ListCatalogAppAvailableVersionsCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListCatalogAppAvailableVersionsCommand{}

// ListCatalogAppAvailableVersionsCommand struct for ListCatalogAppAvailableVersionsCommand
type ListCatalogAppAvailableVersionsCommand struct {
	RepoName *string `json:"repoName,omitempty"`
	PackageName *string `json:"packageName,omitempty"`
	CurrentVersion *string `json:"currentVersion,omitempty"`
}

// NewListCatalogAppAvailableVersionsCommand instantiates a new ListCatalogAppAvailableVersionsCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListCatalogAppAvailableVersionsCommand() *ListCatalogAppAvailableVersionsCommand {
	this := ListCatalogAppAvailableVersionsCommand{}
	return &this
}

// NewListCatalogAppAvailableVersionsCommandWithDefaults instantiates a new ListCatalogAppAvailableVersionsCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListCatalogAppAvailableVersionsCommandWithDefaults() *ListCatalogAppAvailableVersionsCommand {
	this := ListCatalogAppAvailableVersionsCommand{}
	return &this
}

// GetRepoName returns the RepoName field value if set, zero value otherwise.
func (o *ListCatalogAppAvailableVersionsCommand) GetRepoName() string {
	if o == nil || IsNil(o.RepoName) {
		var ret string
		return ret
	}
	return *o.RepoName
}

// GetRepoNameOk returns a tuple with the RepoName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCatalogAppAvailableVersionsCommand) GetRepoNameOk() (*string, bool) {
	if o == nil || IsNil(o.RepoName) {
		return nil, false
	}
	return o.RepoName, true
}

// HasRepoName returns a boolean if a field has been set.
func (o *ListCatalogAppAvailableVersionsCommand) HasRepoName() bool {
	if o != nil && !IsNil(o.RepoName) {
		return true
	}

	return false
}

// SetRepoName gets a reference to the given string and assigns it to the RepoName field.
func (o *ListCatalogAppAvailableVersionsCommand) SetRepoName(v string) {
	o.RepoName = &v
}

// GetPackageName returns the PackageName field value if set, zero value otherwise.
func (o *ListCatalogAppAvailableVersionsCommand) GetPackageName() string {
	if o == nil || IsNil(o.PackageName) {
		var ret string
		return ret
	}
	return *o.PackageName
}

// GetPackageNameOk returns a tuple with the PackageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCatalogAppAvailableVersionsCommand) GetPackageNameOk() (*string, bool) {
	if o == nil || IsNil(o.PackageName) {
		return nil, false
	}
	return o.PackageName, true
}

// HasPackageName returns a boolean if a field has been set.
func (o *ListCatalogAppAvailableVersionsCommand) HasPackageName() bool {
	if o != nil && !IsNil(o.PackageName) {
		return true
	}

	return false
}

// SetPackageName gets a reference to the given string and assigns it to the PackageName field.
func (o *ListCatalogAppAvailableVersionsCommand) SetPackageName(v string) {
	o.PackageName = &v
}

// GetCurrentVersion returns the CurrentVersion field value if set, zero value otherwise.
func (o *ListCatalogAppAvailableVersionsCommand) GetCurrentVersion() string {
	if o == nil || IsNil(o.CurrentVersion) {
		var ret string
		return ret
	}
	return *o.CurrentVersion
}

// GetCurrentVersionOk returns a tuple with the CurrentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCatalogAppAvailableVersionsCommand) GetCurrentVersionOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentVersion) {
		return nil, false
	}
	return o.CurrentVersion, true
}

// HasCurrentVersion returns a boolean if a field has been set.
func (o *ListCatalogAppAvailableVersionsCommand) HasCurrentVersion() bool {
	if o != nil && !IsNil(o.CurrentVersion) {
		return true
	}

	return false
}

// SetCurrentVersion gets a reference to the given string and assigns it to the CurrentVersion field.
func (o *ListCatalogAppAvailableVersionsCommand) SetCurrentVersion(v string) {
	o.CurrentVersion = &v
}

func (o ListCatalogAppAvailableVersionsCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListCatalogAppAvailableVersionsCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RepoName) {
		toSerialize["repoName"] = o.RepoName
	}
	if !IsNil(o.PackageName) {
		toSerialize["packageName"] = o.PackageName
	}
	if !IsNil(o.CurrentVersion) {
		toSerialize["currentVersion"] = o.CurrentVersion
	}
	return toSerialize, nil
}

type NullableListCatalogAppAvailableVersionsCommand struct {
	value *ListCatalogAppAvailableVersionsCommand
	isSet bool
}

func (v NullableListCatalogAppAvailableVersionsCommand) Get() *ListCatalogAppAvailableVersionsCommand {
	return v.value
}

func (v *NullableListCatalogAppAvailableVersionsCommand) Set(val *ListCatalogAppAvailableVersionsCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableListCatalogAppAvailableVersionsCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableListCatalogAppAvailableVersionsCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListCatalogAppAvailableVersionsCommand(val *ListCatalogAppAvailableVersionsCommand) *NullableListCatalogAppAvailableVersionsCommand {
	return &NullableListCatalogAppAvailableVersionsCommand{value: val, isSet: true}
}

func (v NullableListCatalogAppAvailableVersionsCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListCatalogAppAvailableVersionsCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


