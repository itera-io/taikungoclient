/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the IngressDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IngressDto{}

// IngressDto struct for IngressDto
type IngressDto struct {
	MetadataName *string `json:"metadataName,omitempty"`
	Hosts *string `json:"hosts,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Age *string `json:"age,omitempty"`
}

// NewIngressDto instantiates a new IngressDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIngressDto() *IngressDto {
	this := IngressDto{}
	return &this
}

// NewIngressDtoWithDefaults instantiates a new IngressDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIngressDtoWithDefaults() *IngressDto {
	this := IngressDto{}
	return &this
}

// GetMetadataName returns the MetadataName field value if set, zero value otherwise.
func (o *IngressDto) GetMetadataName() string {
	if o == nil || IsNil(o.MetadataName) {
		var ret string
		return ret
	}
	return *o.MetadataName
}

// GetMetadataNameOk returns a tuple with the MetadataName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngressDto) GetMetadataNameOk() (*string, bool) {
	if o == nil || IsNil(o.MetadataName) {
		return nil, false
	}
	return o.MetadataName, true
}

// HasMetadataName returns a boolean if a field has been set.
func (o *IngressDto) HasMetadataName() bool {
	if o != nil && !IsNil(o.MetadataName) {
		return true
	}

	return false
}

// SetMetadataName gets a reference to the given string and assigns it to the MetadataName field.
func (o *IngressDto) SetMetadataName(v string) {
	o.MetadataName = &v
}

// GetHosts returns the Hosts field value if set, zero value otherwise.
func (o *IngressDto) GetHosts() string {
	if o == nil || IsNil(o.Hosts) {
		var ret string
		return ret
	}
	return *o.Hosts
}

// GetHostsOk returns a tuple with the Hosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngressDto) GetHostsOk() (*string, bool) {
	if o == nil || IsNil(o.Hosts) {
		return nil, false
	}
	return o.Hosts, true
}

// HasHosts returns a boolean if a field has been set.
func (o *IngressDto) HasHosts() bool {
	if o != nil && !IsNil(o.Hosts) {
		return true
	}

	return false
}

// SetHosts gets a reference to the given string and assigns it to the Hosts field.
func (o *IngressDto) SetHosts(v string) {
	o.Hosts = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *IngressDto) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngressDto) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *IngressDto) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *IngressDto) SetNamespace(v string) {
	o.Namespace = &v
}

// GetAge returns the Age field value if set, zero value otherwise.
func (o *IngressDto) GetAge() string {
	if o == nil || IsNil(o.Age) {
		var ret string
		return ret
	}
	return *o.Age
}

// GetAgeOk returns a tuple with the Age field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngressDto) GetAgeOk() (*string, bool) {
	if o == nil || IsNil(o.Age) {
		return nil, false
	}
	return o.Age, true
}

// HasAge returns a boolean if a field has been set.
func (o *IngressDto) HasAge() bool {
	if o != nil && !IsNil(o.Age) {
		return true
	}

	return false
}

// SetAge gets a reference to the given string and assigns it to the Age field.
func (o *IngressDto) SetAge(v string) {
	o.Age = &v
}

func (o IngressDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IngressDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MetadataName) {
		toSerialize["metadataName"] = o.MetadataName
	}
	if !IsNil(o.Hosts) {
		toSerialize["hosts"] = o.Hosts
	}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !IsNil(o.Age) {
		toSerialize["age"] = o.Age
	}
	return toSerialize, nil
}

type NullableIngressDto struct {
	value *IngressDto
	isSet bool
}

func (v NullableIngressDto) Get() *IngressDto {
	return v.value
}

func (v *NullableIngressDto) Set(val *IngressDto) {
	v.value = val
	v.isSet = true
}

func (v NullableIngressDto) IsSet() bool {
	return v.isSet
}

func (v *NullableIngressDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIngressDto(val *IngressDto) *NullableIngressDto {
	return &NullableIngressDto{value: val, isSet: true}
}

func (v NullableIngressDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIngressDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


