/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the ResourcePoolSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourcePoolSummary{}

// ResourcePoolSummary struct for ResourcePoolSummary
type ResourcePoolSummary struct {
	Name NullableString `json:"name,omitempty"`
	ResourcePool NullableString `json:"resourcePool,omitempty"`
}

// NewResourcePoolSummary instantiates a new ResourcePoolSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourcePoolSummary() *ResourcePoolSummary {
	this := ResourcePoolSummary{}
	return &this
}

// NewResourcePoolSummaryWithDefaults instantiates a new ResourcePoolSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourcePoolSummaryWithDefaults() *ResourcePoolSummary {
	this := ResourcePoolSummary{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourcePoolSummary) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourcePoolSummary) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ResourcePoolSummary) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ResourcePoolSummary) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ResourcePoolSummary) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ResourcePoolSummary) UnsetName() {
	o.Name.Unset()
}

// GetResourcePool returns the ResourcePool field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourcePoolSummary) GetResourcePool() string {
	if o == nil || IsNil(o.ResourcePool.Get()) {
		var ret string
		return ret
	}
	return *o.ResourcePool.Get()
}

// GetResourcePoolOk returns a tuple with the ResourcePool field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourcePoolSummary) GetResourcePoolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourcePool.Get(), o.ResourcePool.IsSet()
}

// HasResourcePool returns a boolean if a field has been set.
func (o *ResourcePoolSummary) HasResourcePool() bool {
	if o != nil && o.ResourcePool.IsSet() {
		return true
	}

	return false
}

// SetResourcePool gets a reference to the given NullableString and assigns it to the ResourcePool field.
func (o *ResourcePoolSummary) SetResourcePool(v string) {
	o.ResourcePool.Set(&v)
}
// SetResourcePoolNil sets the value for ResourcePool to be an explicit nil
func (o *ResourcePoolSummary) SetResourcePoolNil() {
	o.ResourcePool.Set(nil)
}

// UnsetResourcePool ensures that no value is present for ResourcePool, not even an explicit nil
func (o *ResourcePoolSummary) UnsetResourcePool() {
	o.ResourcePool.Unset()
}

func (o ResourcePoolSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourcePoolSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ResourcePool.IsSet() {
		toSerialize["resourcePool"] = o.ResourcePool.Get()
	}
	return toSerialize, nil
}

type NullableResourcePoolSummary struct {
	value *ResourcePoolSummary
	isSet bool
}

func (v NullableResourcePoolSummary) Get() *ResourcePoolSummary {
	return v.value
}

func (v *NullableResourcePoolSummary) Set(val *ResourcePoolSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableResourcePoolSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableResourcePoolSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourcePoolSummary(val *ResourcePoolSummary) *NullableResourcePoolSummary {
	return &NullableResourcePoolSummary{value: val, isSet: true}
}

func (v NullableResourcePoolSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourcePoolSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


