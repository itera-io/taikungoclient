/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the OpenStackNetworkListQuery type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenStackNetworkListQuery{}

// OpenStackNetworkListQuery struct for OpenStackNetworkListQuery
type OpenStackNetworkListQuery struct {
	OpenStackUser *string `json:"openStackUser,omitempty"`
	OpenStackPassword *string `json:"openStackPassword,omitempty"`
	OpenStackUrl *string `json:"openStackUrl,omitempty"`
	OpenStackProjectId *string `json:"openStackProjectId,omitempty"`
	OpenStackDomain *string `json:"openStackDomain,omitempty"`
	OpenStackRegion *string `json:"openStackRegion,omitempty"`
	ApplicationCredEnabled *bool `json:"applicationCredEnabled,omitempty"`
	IsAdmin *bool `json:"isAdmin,omitempty"`
}

// NewOpenStackNetworkListQuery instantiates a new OpenStackNetworkListQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenStackNetworkListQuery() *OpenStackNetworkListQuery {
	this := OpenStackNetworkListQuery{}
	return &this
}

// NewOpenStackNetworkListQueryWithDefaults instantiates a new OpenStackNetworkListQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenStackNetworkListQueryWithDefaults() *OpenStackNetworkListQuery {
	this := OpenStackNetworkListQuery{}
	return &this
}

// GetOpenStackUser returns the OpenStackUser field value if set, zero value otherwise.
func (o *OpenStackNetworkListQuery) GetOpenStackUser() string {
	if o == nil || IsNil(o.OpenStackUser) {
		var ret string
		return ret
	}
	return *o.OpenStackUser
}

// GetOpenStackUserOk returns a tuple with the OpenStackUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackNetworkListQuery) GetOpenStackUserOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackUser) {
		return nil, false
	}
	return o.OpenStackUser, true
}

// HasOpenStackUser returns a boolean if a field has been set.
func (o *OpenStackNetworkListQuery) HasOpenStackUser() bool {
	if o != nil && !IsNil(o.OpenStackUser) {
		return true
	}

	return false
}

// SetOpenStackUser gets a reference to the given string and assigns it to the OpenStackUser field.
func (o *OpenStackNetworkListQuery) SetOpenStackUser(v string) {
	o.OpenStackUser = &v
}

// GetOpenStackPassword returns the OpenStackPassword field value if set, zero value otherwise.
func (o *OpenStackNetworkListQuery) GetOpenStackPassword() string {
	if o == nil || IsNil(o.OpenStackPassword) {
		var ret string
		return ret
	}
	return *o.OpenStackPassword
}

// GetOpenStackPasswordOk returns a tuple with the OpenStackPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackNetworkListQuery) GetOpenStackPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackPassword) {
		return nil, false
	}
	return o.OpenStackPassword, true
}

// HasOpenStackPassword returns a boolean if a field has been set.
func (o *OpenStackNetworkListQuery) HasOpenStackPassword() bool {
	if o != nil && !IsNil(o.OpenStackPassword) {
		return true
	}

	return false
}

// SetOpenStackPassword gets a reference to the given string and assigns it to the OpenStackPassword field.
func (o *OpenStackNetworkListQuery) SetOpenStackPassword(v string) {
	o.OpenStackPassword = &v
}

// GetOpenStackUrl returns the OpenStackUrl field value if set, zero value otherwise.
func (o *OpenStackNetworkListQuery) GetOpenStackUrl() string {
	if o == nil || IsNil(o.OpenStackUrl) {
		var ret string
		return ret
	}
	return *o.OpenStackUrl
}

// GetOpenStackUrlOk returns a tuple with the OpenStackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackNetworkListQuery) GetOpenStackUrlOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackUrl) {
		return nil, false
	}
	return o.OpenStackUrl, true
}

// HasOpenStackUrl returns a boolean if a field has been set.
func (o *OpenStackNetworkListQuery) HasOpenStackUrl() bool {
	if o != nil && !IsNil(o.OpenStackUrl) {
		return true
	}

	return false
}

// SetOpenStackUrl gets a reference to the given string and assigns it to the OpenStackUrl field.
func (o *OpenStackNetworkListQuery) SetOpenStackUrl(v string) {
	o.OpenStackUrl = &v
}

// GetOpenStackProjectId returns the OpenStackProjectId field value if set, zero value otherwise.
func (o *OpenStackNetworkListQuery) GetOpenStackProjectId() string {
	if o == nil || IsNil(o.OpenStackProjectId) {
		var ret string
		return ret
	}
	return *o.OpenStackProjectId
}

// GetOpenStackProjectIdOk returns a tuple with the OpenStackProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackNetworkListQuery) GetOpenStackProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackProjectId) {
		return nil, false
	}
	return o.OpenStackProjectId, true
}

// HasOpenStackProjectId returns a boolean if a field has been set.
func (o *OpenStackNetworkListQuery) HasOpenStackProjectId() bool {
	if o != nil && !IsNil(o.OpenStackProjectId) {
		return true
	}

	return false
}

// SetOpenStackProjectId gets a reference to the given string and assigns it to the OpenStackProjectId field.
func (o *OpenStackNetworkListQuery) SetOpenStackProjectId(v string) {
	o.OpenStackProjectId = &v
}

// GetOpenStackDomain returns the OpenStackDomain field value if set, zero value otherwise.
func (o *OpenStackNetworkListQuery) GetOpenStackDomain() string {
	if o == nil || IsNil(o.OpenStackDomain) {
		var ret string
		return ret
	}
	return *o.OpenStackDomain
}

// GetOpenStackDomainOk returns a tuple with the OpenStackDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackNetworkListQuery) GetOpenStackDomainOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackDomain) {
		return nil, false
	}
	return o.OpenStackDomain, true
}

// HasOpenStackDomain returns a boolean if a field has been set.
func (o *OpenStackNetworkListQuery) HasOpenStackDomain() bool {
	if o != nil && !IsNil(o.OpenStackDomain) {
		return true
	}

	return false
}

// SetOpenStackDomain gets a reference to the given string and assigns it to the OpenStackDomain field.
func (o *OpenStackNetworkListQuery) SetOpenStackDomain(v string) {
	o.OpenStackDomain = &v
}

// GetOpenStackRegion returns the OpenStackRegion field value if set, zero value otherwise.
func (o *OpenStackNetworkListQuery) GetOpenStackRegion() string {
	if o == nil || IsNil(o.OpenStackRegion) {
		var ret string
		return ret
	}
	return *o.OpenStackRegion
}

// GetOpenStackRegionOk returns a tuple with the OpenStackRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackNetworkListQuery) GetOpenStackRegionOk() (*string, bool) {
	if o == nil || IsNil(o.OpenStackRegion) {
		return nil, false
	}
	return o.OpenStackRegion, true
}

// HasOpenStackRegion returns a boolean if a field has been set.
func (o *OpenStackNetworkListQuery) HasOpenStackRegion() bool {
	if o != nil && !IsNil(o.OpenStackRegion) {
		return true
	}

	return false
}

// SetOpenStackRegion gets a reference to the given string and assigns it to the OpenStackRegion field.
func (o *OpenStackNetworkListQuery) SetOpenStackRegion(v string) {
	o.OpenStackRegion = &v
}

// GetApplicationCredEnabled returns the ApplicationCredEnabled field value if set, zero value otherwise.
func (o *OpenStackNetworkListQuery) GetApplicationCredEnabled() bool {
	if o == nil || IsNil(o.ApplicationCredEnabled) {
		var ret bool
		return ret
	}
	return *o.ApplicationCredEnabled
}

// GetApplicationCredEnabledOk returns a tuple with the ApplicationCredEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackNetworkListQuery) GetApplicationCredEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ApplicationCredEnabled) {
		return nil, false
	}
	return o.ApplicationCredEnabled, true
}

// HasApplicationCredEnabled returns a boolean if a field has been set.
func (o *OpenStackNetworkListQuery) HasApplicationCredEnabled() bool {
	if o != nil && !IsNil(o.ApplicationCredEnabled) {
		return true
	}

	return false
}

// SetApplicationCredEnabled gets a reference to the given bool and assigns it to the ApplicationCredEnabled field.
func (o *OpenStackNetworkListQuery) SetApplicationCredEnabled(v bool) {
	o.ApplicationCredEnabled = &v
}

// GetIsAdmin returns the IsAdmin field value if set, zero value otherwise.
func (o *OpenStackNetworkListQuery) GetIsAdmin() bool {
	if o == nil || IsNil(o.IsAdmin) {
		var ret bool
		return ret
	}
	return *o.IsAdmin
}

// GetIsAdminOk returns a tuple with the IsAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackNetworkListQuery) GetIsAdminOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAdmin) {
		return nil, false
	}
	return o.IsAdmin, true
}

// HasIsAdmin returns a boolean if a field has been set.
func (o *OpenStackNetworkListQuery) HasIsAdmin() bool {
	if o != nil && !IsNil(o.IsAdmin) {
		return true
	}

	return false
}

// SetIsAdmin gets a reference to the given bool and assigns it to the IsAdmin field.
func (o *OpenStackNetworkListQuery) SetIsAdmin(v bool) {
	o.IsAdmin = &v
}

func (o OpenStackNetworkListQuery) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenStackNetworkListQuery) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OpenStackUser) {
		toSerialize["openStackUser"] = o.OpenStackUser
	}
	if !IsNil(o.OpenStackPassword) {
		toSerialize["openStackPassword"] = o.OpenStackPassword
	}
	if !IsNil(o.OpenStackUrl) {
		toSerialize["openStackUrl"] = o.OpenStackUrl
	}
	if !IsNil(o.OpenStackProjectId) {
		toSerialize["openStackProjectId"] = o.OpenStackProjectId
	}
	if !IsNil(o.OpenStackDomain) {
		toSerialize["openStackDomain"] = o.OpenStackDomain
	}
	if !IsNil(o.OpenStackRegion) {
		toSerialize["openStackRegion"] = o.OpenStackRegion
	}
	if !IsNil(o.ApplicationCredEnabled) {
		toSerialize["applicationCredEnabled"] = o.ApplicationCredEnabled
	}
	if !IsNil(o.IsAdmin) {
		toSerialize["isAdmin"] = o.IsAdmin
	}
	return toSerialize, nil
}

type NullableOpenStackNetworkListQuery struct {
	value *OpenStackNetworkListQuery
	isSet bool
}

func (v NullableOpenStackNetworkListQuery) Get() *OpenStackNetworkListQuery {
	return v.value
}

func (v *NullableOpenStackNetworkListQuery) Set(val *OpenStackNetworkListQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenStackNetworkListQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenStackNetworkListQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenStackNetworkListQuery(val *OpenStackNetworkListQuery) *NullableOpenStackNetworkListQuery {
	return &NullableOpenStackNetworkListQuery{value: val, isSet: true}
}

func (v NullableOpenStackNetworkListQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenStackNetworkListQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


