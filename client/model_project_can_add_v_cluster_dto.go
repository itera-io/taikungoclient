/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the ProjectCanAddVClusterDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectCanAddVClusterDto{}

// ProjectCanAddVClusterDto struct for ProjectCanAddVClusterDto
type ProjectCanAddVClusterDto struct {
	AddVCluster *ButtonStatusDto `json:"addVCluster,omitempty"`
}

// NewProjectCanAddVClusterDto instantiates a new ProjectCanAddVClusterDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectCanAddVClusterDto() *ProjectCanAddVClusterDto {
	this := ProjectCanAddVClusterDto{}
	return &this
}

// NewProjectCanAddVClusterDtoWithDefaults instantiates a new ProjectCanAddVClusterDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectCanAddVClusterDtoWithDefaults() *ProjectCanAddVClusterDto {
	this := ProjectCanAddVClusterDto{}
	return &this
}

// GetAddVCluster returns the AddVCluster field value if set, zero value otherwise.
func (o *ProjectCanAddVClusterDto) GetAddVCluster() ButtonStatusDto {
	if o == nil || IsNil(o.AddVCluster) {
		var ret ButtonStatusDto
		return ret
	}
	return *o.AddVCluster
}

// GetAddVClusterOk returns a tuple with the AddVCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectCanAddVClusterDto) GetAddVClusterOk() (*ButtonStatusDto, bool) {
	if o == nil || IsNil(o.AddVCluster) {
		return nil, false
	}
	return o.AddVCluster, true
}

// HasAddVCluster returns a boolean if a field has been set.
func (o *ProjectCanAddVClusterDto) HasAddVCluster() bool {
	if o != nil && !IsNil(o.AddVCluster) {
		return true
	}

	return false
}

// SetAddVCluster gets a reference to the given ButtonStatusDto and assigns it to the AddVCluster field.
func (o *ProjectCanAddVClusterDto) SetAddVCluster(v ButtonStatusDto) {
	o.AddVCluster = &v
}

func (o ProjectCanAddVClusterDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectCanAddVClusterDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddVCluster) {
		toSerialize["addVCluster"] = o.AddVCluster
	}
	return toSerialize, nil
}

type NullableProjectCanAddVClusterDto struct {
	value *ProjectCanAddVClusterDto
	isSet bool
}

func (v NullableProjectCanAddVClusterDto) Get() *ProjectCanAddVClusterDto {
	return v.value
}

func (v *NullableProjectCanAddVClusterDto) Set(val *ProjectCanAddVClusterDto) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectCanAddVClusterDto) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectCanAddVClusterDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectCanAddVClusterDto(val *ProjectCanAddVClusterDto) *NullableProjectCanAddVClusterDto {
	return &NullableProjectCanAddVClusterDto{value: val, isSet: true}
}

func (v NullableProjectCanAddVClusterDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectCanAddVClusterDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


