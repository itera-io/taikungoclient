// Code generated by go-swagger; DO NOT EDIT.

package prometheus

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PrometheusBindRulesReader is a Reader for the PrometheusBindRules structure.
type PrometheusBindRulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PrometheusBindRulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPrometheusBindRulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPrometheusBindRulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPrometheusBindRulesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPrometheusBindRulesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPrometheusBindRulesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPrometheusBindRulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPrometheusBindRulesOK creates a PrometheusBindRulesOK with default headers values
func NewPrometheusBindRulesOK() *PrometheusBindRulesOK {
	return &PrometheusBindRulesOK{}
}

/*
PrometheusBindRulesOK describes a response with status code 200, with default header values.

Success
*/
type PrometheusBindRulesOK struct {
	Payload interface{}
}

// IsSuccess returns true when this prometheus bind rules o k response has a 2xx status code
func (o *PrometheusBindRulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this prometheus bind rules o k response has a 3xx status code
func (o *PrometheusBindRulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prometheus bind rules o k response has a 4xx status code
func (o *PrometheusBindRulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this prometheus bind rules o k response has a 5xx status code
func (o *PrometheusBindRulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this prometheus bind rules o k response a status code equal to that given
func (o *PrometheusBindRulesOK) IsCode(code int) bool {
	return code == 200
}

func (o *PrometheusBindRulesOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/bindrules][%d] prometheusBindRulesOK  %+v", 200, o.Payload)
}

func (o *PrometheusBindRulesOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/bindrules][%d] prometheusBindRulesOK  %+v", 200, o.Payload)
}

func (o *PrometheusBindRulesOK) GetPayload() interface{} {
	return o.Payload
}

func (o *PrometheusBindRulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPrometheusBindRulesBadRequest creates a PrometheusBindRulesBadRequest with default headers values
func NewPrometheusBindRulesBadRequest() *PrometheusBindRulesBadRequest {
	return &PrometheusBindRulesBadRequest{}
}

/*
PrometheusBindRulesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PrometheusBindRulesBadRequest struct {
	Payload []*PrometheusBindRulesBadRequestBodyItems0
}

// IsSuccess returns true when this prometheus bind rules bad request response has a 2xx status code
func (o *PrometheusBindRulesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this prometheus bind rules bad request response has a 3xx status code
func (o *PrometheusBindRulesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prometheus bind rules bad request response has a 4xx status code
func (o *PrometheusBindRulesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this prometheus bind rules bad request response has a 5xx status code
func (o *PrometheusBindRulesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this prometheus bind rules bad request response a status code equal to that given
func (o *PrometheusBindRulesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PrometheusBindRulesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/bindrules][%d] prometheusBindRulesBadRequest  %+v", 400, o.Payload)
}

func (o *PrometheusBindRulesBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/bindrules][%d] prometheusBindRulesBadRequest  %+v", 400, o.Payload)
}

func (o *PrometheusBindRulesBadRequest) GetPayload() []*PrometheusBindRulesBadRequestBodyItems0 {
	return o.Payload
}

func (o *PrometheusBindRulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPrometheusBindRulesUnauthorized creates a PrometheusBindRulesUnauthorized with default headers values
func NewPrometheusBindRulesUnauthorized() *PrometheusBindRulesUnauthorized {
	return &PrometheusBindRulesUnauthorized{}
}

/*
PrometheusBindRulesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PrometheusBindRulesUnauthorized struct {
	Payload *PrometheusBindRulesUnauthorizedBody
}

// IsSuccess returns true when this prometheus bind rules unauthorized response has a 2xx status code
func (o *PrometheusBindRulesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this prometheus bind rules unauthorized response has a 3xx status code
func (o *PrometheusBindRulesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prometheus bind rules unauthorized response has a 4xx status code
func (o *PrometheusBindRulesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this prometheus bind rules unauthorized response has a 5xx status code
func (o *PrometheusBindRulesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this prometheus bind rules unauthorized response a status code equal to that given
func (o *PrometheusBindRulesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PrometheusBindRulesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/bindrules][%d] prometheusBindRulesUnauthorized  %+v", 401, o.Payload)
}

func (o *PrometheusBindRulesUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/bindrules][%d] prometheusBindRulesUnauthorized  %+v", 401, o.Payload)
}

func (o *PrometheusBindRulesUnauthorized) GetPayload() *PrometheusBindRulesUnauthorizedBody {
	return o.Payload
}

func (o *PrometheusBindRulesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PrometheusBindRulesUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPrometheusBindRulesForbidden creates a PrometheusBindRulesForbidden with default headers values
func NewPrometheusBindRulesForbidden() *PrometheusBindRulesForbidden {
	return &PrometheusBindRulesForbidden{}
}

/*
PrometheusBindRulesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PrometheusBindRulesForbidden struct {
	Payload *PrometheusBindRulesForbiddenBody
}

// IsSuccess returns true when this prometheus bind rules forbidden response has a 2xx status code
func (o *PrometheusBindRulesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this prometheus bind rules forbidden response has a 3xx status code
func (o *PrometheusBindRulesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prometheus bind rules forbidden response has a 4xx status code
func (o *PrometheusBindRulesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this prometheus bind rules forbidden response has a 5xx status code
func (o *PrometheusBindRulesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this prometheus bind rules forbidden response a status code equal to that given
func (o *PrometheusBindRulesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PrometheusBindRulesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/bindrules][%d] prometheusBindRulesForbidden  %+v", 403, o.Payload)
}

func (o *PrometheusBindRulesForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/bindrules][%d] prometheusBindRulesForbidden  %+v", 403, o.Payload)
}

func (o *PrometheusBindRulesForbidden) GetPayload() *PrometheusBindRulesForbiddenBody {
	return o.Payload
}

func (o *PrometheusBindRulesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PrometheusBindRulesForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPrometheusBindRulesNotFound creates a PrometheusBindRulesNotFound with default headers values
func NewPrometheusBindRulesNotFound() *PrometheusBindRulesNotFound {
	return &PrometheusBindRulesNotFound{}
}

/*
PrometheusBindRulesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PrometheusBindRulesNotFound struct {
	Payload *PrometheusBindRulesNotFoundBody
}

// IsSuccess returns true when this prometheus bind rules not found response has a 2xx status code
func (o *PrometheusBindRulesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this prometheus bind rules not found response has a 3xx status code
func (o *PrometheusBindRulesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prometheus bind rules not found response has a 4xx status code
func (o *PrometheusBindRulesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this prometheus bind rules not found response has a 5xx status code
func (o *PrometheusBindRulesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this prometheus bind rules not found response a status code equal to that given
func (o *PrometheusBindRulesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PrometheusBindRulesNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/bindrules][%d] prometheusBindRulesNotFound  %+v", 404, o.Payload)
}

func (o *PrometheusBindRulesNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/bindrules][%d] prometheusBindRulesNotFound  %+v", 404, o.Payload)
}

func (o *PrometheusBindRulesNotFound) GetPayload() *PrometheusBindRulesNotFoundBody {
	return o.Payload
}

func (o *PrometheusBindRulesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PrometheusBindRulesNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPrometheusBindRulesInternalServerError creates a PrometheusBindRulesInternalServerError with default headers values
func NewPrometheusBindRulesInternalServerError() *PrometheusBindRulesInternalServerError {
	return &PrometheusBindRulesInternalServerError{}
}

/*
PrometheusBindRulesInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type PrometheusBindRulesInternalServerError struct {
}

// IsSuccess returns true when this prometheus bind rules internal server error response has a 2xx status code
func (o *PrometheusBindRulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this prometheus bind rules internal server error response has a 3xx status code
func (o *PrometheusBindRulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prometheus bind rules internal server error response has a 4xx status code
func (o *PrometheusBindRulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this prometheus bind rules internal server error response has a 5xx status code
func (o *PrometheusBindRulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this prometheus bind rules internal server error response a status code equal to that given
func (o *PrometheusBindRulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PrometheusBindRulesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/bindrules][%d] prometheusBindRulesInternalServerError ", 500)
}

func (o *PrometheusBindRulesInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/bindrules][%d] prometheusBindRulesInternalServerError ", 500)
}

func (o *PrometheusBindRulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
PrometheusBindRulesBadRequestBodyItems0 prometheus bind rules bad request body items0
swagger:model PrometheusBindRulesBadRequestBodyItems0
*/
type PrometheusBindRulesBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this prometheus bind rules bad request body items0
func (o *PrometheusBindRulesBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this prometheus bind rules bad request body items0 based on context it is used
func (o *PrometheusBindRulesBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PrometheusBindRulesBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PrometheusBindRulesBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res PrometheusBindRulesBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PrometheusBindRulesBody prometheus bind rules body
swagger:model PrometheusBindRulesBody
*/
type PrometheusBindRulesBody struct {

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// rules
	Rules []*PrometheusBindRulesParamsBodyRulesItems0 `json:"rules"`
}

// Validate validates this prometheus bind rules body
func (o *PrometheusBindRulesBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRules(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PrometheusBindRulesBody) validateRules(formats strfmt.Registry) error {
	if swag.IsZero(o.Rules) { // not required
		return nil
	}

	for i := 0; i < len(o.Rules); i++ {
		if swag.IsZero(o.Rules[i]) { // not required
			continue
		}

		if o.Rules[i] != nil {
			if err := o.Rules[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "rules" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "rules" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this prometheus bind rules body based on the context it is used
func (o *PrometheusBindRulesBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateRules(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PrometheusBindRulesBody) contextValidateRules(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Rules); i++ {

		if o.Rules[i] != nil {
			if err := o.Rules[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "rules" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "rules" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PrometheusBindRulesBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PrometheusBindRulesBody) UnmarshalBinary(b []byte) error {
	var res PrometheusBindRulesBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PrometheusBindRulesForbiddenBody prometheus bind rules forbidden body
swagger:model PrometheusBindRulesForbiddenBody
*/
type PrometheusBindRulesForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this prometheus bind rules forbidden body
func (o *PrometheusBindRulesForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this prometheus bind rules forbidden body based on context it is used
func (o *PrometheusBindRulesForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PrometheusBindRulesForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PrometheusBindRulesForbiddenBody) UnmarshalBinary(b []byte) error {
	var res PrometheusBindRulesForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PrometheusBindRulesNotFoundBody prometheus bind rules not found body
swagger:model PrometheusBindRulesNotFoundBody
*/
type PrometheusBindRulesNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this prometheus bind rules not found body
func (o *PrometheusBindRulesNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this prometheus bind rules not found body based on context it is used
func (o *PrometheusBindRulesNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PrometheusBindRulesNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PrometheusBindRulesNotFoundBody) UnmarshalBinary(b []byte) error {
	var res PrometheusBindRulesNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PrometheusBindRulesParamsBodyRulesItems0 prometheus bind rules params body rules items0
swagger:model PrometheusBindRulesParamsBodyRulesItems0
*/
type PrometheusBindRulesParamsBodyRulesItems0 struct {

	// discount rate
	DiscountRate float64 `json:"discountRate"`

	// is bound
	IsBound bool `json:"isBound"`

	// prometheus rule Id
	PrometheusRuleID int32 `json:"prometheusRuleId,omitempty"`

	// prometheus rule name
	PrometheusRuleName string `json:"prometheusRuleName,omitempty"`
}

// Validate validates this prometheus bind rules params body rules items0
func (o *PrometheusBindRulesParamsBodyRulesItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this prometheus bind rules params body rules items0 based on context it is used
func (o *PrometheusBindRulesParamsBodyRulesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PrometheusBindRulesParamsBodyRulesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PrometheusBindRulesParamsBodyRulesItems0) UnmarshalBinary(b []byte) error {
	var res PrometheusBindRulesParamsBodyRulesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PrometheusBindRulesUnauthorizedBody prometheus bind rules unauthorized body
swagger:model PrometheusBindRulesUnauthorizedBody
*/
type PrometheusBindRulesUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this prometheus bind rules unauthorized body
func (o *PrometheusBindRulesUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this prometheus bind rules unauthorized body based on context it is used
func (o *PrometheusBindRulesUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PrometheusBindRulesUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PrometheusBindRulesUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PrometheusBindRulesUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
