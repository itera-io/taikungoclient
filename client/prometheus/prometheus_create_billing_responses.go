// Code generated by go-swagger; DO NOT EDIT.

package prometheus

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// PrometheusCreateBillingReader is a Reader for the PrometheusCreateBilling structure.
type PrometheusCreateBillingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PrometheusCreateBillingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPrometheusCreateBillingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPrometheusCreateBillingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPrometheusCreateBillingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPrometheusCreateBillingForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPrometheusCreateBillingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPrometheusCreateBillingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPrometheusCreateBillingOK creates a PrometheusCreateBillingOK with default headers values
func NewPrometheusCreateBillingOK() *PrometheusCreateBillingOK {
	return &PrometheusCreateBillingOK{}
}

/*
PrometheusCreateBillingOK describes a response with status code 200, with default header values.

Success
*/
type PrometheusCreateBillingOK struct {
	Payload models.Unit
}

// IsSuccess returns true when this prometheus create billing o k response has a 2xx status code
func (o *PrometheusCreateBillingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this prometheus create billing o k response has a 3xx status code
func (o *PrometheusCreateBillingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prometheus create billing o k response has a 4xx status code
func (o *PrometheusCreateBillingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this prometheus create billing o k response has a 5xx status code
func (o *PrometheusCreateBillingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this prometheus create billing o k response a status code equal to that given
func (o *PrometheusCreateBillingOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the prometheus create billing o k response
func (o *PrometheusCreateBillingOK) Code() int {
	return 200
}

func (o *PrometheusCreateBillingOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/billing][%d] prometheusCreateBillingOK  %+v", 200, o.Payload)
}

func (o *PrometheusCreateBillingOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/billing][%d] prometheusCreateBillingOK  %+v", 200, o.Payload)
}

func (o *PrometheusCreateBillingOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *PrometheusCreateBillingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPrometheusCreateBillingBadRequest creates a PrometheusCreateBillingBadRequest with default headers values
func NewPrometheusCreateBillingBadRequest() *PrometheusCreateBillingBadRequest {
	return &PrometheusCreateBillingBadRequest{}
}

/*
PrometheusCreateBillingBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PrometheusCreateBillingBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this prometheus create billing bad request response has a 2xx status code
func (o *PrometheusCreateBillingBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this prometheus create billing bad request response has a 3xx status code
func (o *PrometheusCreateBillingBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prometheus create billing bad request response has a 4xx status code
func (o *PrometheusCreateBillingBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this prometheus create billing bad request response has a 5xx status code
func (o *PrometheusCreateBillingBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this prometheus create billing bad request response a status code equal to that given
func (o *PrometheusCreateBillingBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the prometheus create billing bad request response
func (o *PrometheusCreateBillingBadRequest) Code() int {
	return 400
}

func (o *PrometheusCreateBillingBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/billing][%d] prometheusCreateBillingBadRequest  %+v", 400, o.Payload)
}

func (o *PrometheusCreateBillingBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/billing][%d] prometheusCreateBillingBadRequest  %+v", 400, o.Payload)
}

func (o *PrometheusCreateBillingBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PrometheusCreateBillingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPrometheusCreateBillingUnauthorized creates a PrometheusCreateBillingUnauthorized with default headers values
func NewPrometheusCreateBillingUnauthorized() *PrometheusCreateBillingUnauthorized {
	return &PrometheusCreateBillingUnauthorized{}
}

/*
PrometheusCreateBillingUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PrometheusCreateBillingUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this prometheus create billing unauthorized response has a 2xx status code
func (o *PrometheusCreateBillingUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this prometheus create billing unauthorized response has a 3xx status code
func (o *PrometheusCreateBillingUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prometheus create billing unauthorized response has a 4xx status code
func (o *PrometheusCreateBillingUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this prometheus create billing unauthorized response has a 5xx status code
func (o *PrometheusCreateBillingUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this prometheus create billing unauthorized response a status code equal to that given
func (o *PrometheusCreateBillingUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the prometheus create billing unauthorized response
func (o *PrometheusCreateBillingUnauthorized) Code() int {
	return 401
}

func (o *PrometheusCreateBillingUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/billing][%d] prometheusCreateBillingUnauthorized  %+v", 401, o.Payload)
}

func (o *PrometheusCreateBillingUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/billing][%d] prometheusCreateBillingUnauthorized  %+v", 401, o.Payload)
}

func (o *PrometheusCreateBillingUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PrometheusCreateBillingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPrometheusCreateBillingForbidden creates a PrometheusCreateBillingForbidden with default headers values
func NewPrometheusCreateBillingForbidden() *PrometheusCreateBillingForbidden {
	return &PrometheusCreateBillingForbidden{}
}

/*
PrometheusCreateBillingForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PrometheusCreateBillingForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this prometheus create billing forbidden response has a 2xx status code
func (o *PrometheusCreateBillingForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this prometheus create billing forbidden response has a 3xx status code
func (o *PrometheusCreateBillingForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prometheus create billing forbidden response has a 4xx status code
func (o *PrometheusCreateBillingForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this prometheus create billing forbidden response has a 5xx status code
func (o *PrometheusCreateBillingForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this prometheus create billing forbidden response a status code equal to that given
func (o *PrometheusCreateBillingForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the prometheus create billing forbidden response
func (o *PrometheusCreateBillingForbidden) Code() int {
	return 403
}

func (o *PrometheusCreateBillingForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/billing][%d] prometheusCreateBillingForbidden  %+v", 403, o.Payload)
}

func (o *PrometheusCreateBillingForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/billing][%d] prometheusCreateBillingForbidden  %+v", 403, o.Payload)
}

func (o *PrometheusCreateBillingForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PrometheusCreateBillingForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPrometheusCreateBillingNotFound creates a PrometheusCreateBillingNotFound with default headers values
func NewPrometheusCreateBillingNotFound() *PrometheusCreateBillingNotFound {
	return &PrometheusCreateBillingNotFound{}
}

/*
PrometheusCreateBillingNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PrometheusCreateBillingNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this prometheus create billing not found response has a 2xx status code
func (o *PrometheusCreateBillingNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this prometheus create billing not found response has a 3xx status code
func (o *PrometheusCreateBillingNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prometheus create billing not found response has a 4xx status code
func (o *PrometheusCreateBillingNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this prometheus create billing not found response has a 5xx status code
func (o *PrometheusCreateBillingNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this prometheus create billing not found response a status code equal to that given
func (o *PrometheusCreateBillingNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the prometheus create billing not found response
func (o *PrometheusCreateBillingNotFound) Code() int {
	return 404
}

func (o *PrometheusCreateBillingNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/billing][%d] prometheusCreateBillingNotFound  %+v", 404, o.Payload)
}

func (o *PrometheusCreateBillingNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/billing][%d] prometheusCreateBillingNotFound  %+v", 404, o.Payload)
}

func (o *PrometheusCreateBillingNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *PrometheusCreateBillingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPrometheusCreateBillingInternalServerError creates a PrometheusCreateBillingInternalServerError with default headers values
func NewPrometheusCreateBillingInternalServerError() *PrometheusCreateBillingInternalServerError {
	return &PrometheusCreateBillingInternalServerError{}
}

/*
PrometheusCreateBillingInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type PrometheusCreateBillingInternalServerError struct {
}

// IsSuccess returns true when this prometheus create billing internal server error response has a 2xx status code
func (o *PrometheusCreateBillingInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this prometheus create billing internal server error response has a 3xx status code
func (o *PrometheusCreateBillingInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prometheus create billing internal server error response has a 4xx status code
func (o *PrometheusCreateBillingInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this prometheus create billing internal server error response has a 5xx status code
func (o *PrometheusCreateBillingInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this prometheus create billing internal server error response a status code equal to that given
func (o *PrometheusCreateBillingInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the prometheus create billing internal server error response
func (o *PrometheusCreateBillingInternalServerError) Code() int {
	return 500
}

func (o *PrometheusCreateBillingInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/billing][%d] prometheusCreateBillingInternalServerError ", 500)
}

func (o *PrometheusCreateBillingInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Prometheus/billing][%d] prometheusCreateBillingInternalServerError ", 500)
}

func (o *PrometheusCreateBillingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
