// Code generated by go-swagger; DO NOT EDIT.

package prometheus

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PrometheusBillingListReader is a Reader for the PrometheusBillingList structure.
type PrometheusBillingListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PrometheusBillingListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPrometheusBillingListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPrometheusBillingListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPrometheusBillingListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPrometheusBillingListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPrometheusBillingListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPrometheusBillingListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPrometheusBillingListOK creates a PrometheusBillingListOK with default headers values
func NewPrometheusBillingListOK() *PrometheusBillingListOK {
	return &PrometheusBillingListOK{}
}

/*
PrometheusBillingListOK describes a response with status code 200, with default header values.

Success
*/
type PrometheusBillingListOK struct {
	Payload *PrometheusBillingListOKBody
}

// IsSuccess returns true when this prometheus billing list o k response has a 2xx status code
func (o *PrometheusBillingListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this prometheus billing list o k response has a 3xx status code
func (o *PrometheusBillingListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prometheus billing list o k response has a 4xx status code
func (o *PrometheusBillingListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this prometheus billing list o k response has a 5xx status code
func (o *PrometheusBillingListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this prometheus billing list o k response a status code equal to that given
func (o *PrometheusBillingListOK) IsCode(code int) bool {
	return code == 200
}

func (o *PrometheusBillingListOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Prometheus/billing][%d] prometheusBillingListOK  %+v", 200, o.Payload)
}

func (o *PrometheusBillingListOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Prometheus/billing][%d] prometheusBillingListOK  %+v", 200, o.Payload)
}

func (o *PrometheusBillingListOK) GetPayload() *PrometheusBillingListOKBody {
	return o.Payload
}

func (o *PrometheusBillingListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PrometheusBillingListOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPrometheusBillingListBadRequest creates a PrometheusBillingListBadRequest with default headers values
func NewPrometheusBillingListBadRequest() *PrometheusBillingListBadRequest {
	return &PrometheusBillingListBadRequest{}
}

/*
PrometheusBillingListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PrometheusBillingListBadRequest struct {
	Payload []*PrometheusBillingListBadRequestBodyItems0
}

// IsSuccess returns true when this prometheus billing list bad request response has a 2xx status code
func (o *PrometheusBillingListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this prometheus billing list bad request response has a 3xx status code
func (o *PrometheusBillingListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prometheus billing list bad request response has a 4xx status code
func (o *PrometheusBillingListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this prometheus billing list bad request response has a 5xx status code
func (o *PrometheusBillingListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this prometheus billing list bad request response a status code equal to that given
func (o *PrometheusBillingListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PrometheusBillingListBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Prometheus/billing][%d] prometheusBillingListBadRequest  %+v", 400, o.Payload)
}

func (o *PrometheusBillingListBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Prometheus/billing][%d] prometheusBillingListBadRequest  %+v", 400, o.Payload)
}

func (o *PrometheusBillingListBadRequest) GetPayload() []*PrometheusBillingListBadRequestBodyItems0 {
	return o.Payload
}

func (o *PrometheusBillingListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPrometheusBillingListUnauthorized creates a PrometheusBillingListUnauthorized with default headers values
func NewPrometheusBillingListUnauthorized() *PrometheusBillingListUnauthorized {
	return &PrometheusBillingListUnauthorized{}
}

/*
PrometheusBillingListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PrometheusBillingListUnauthorized struct {
	Payload *PrometheusBillingListUnauthorizedBody
}

// IsSuccess returns true when this prometheus billing list unauthorized response has a 2xx status code
func (o *PrometheusBillingListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this prometheus billing list unauthorized response has a 3xx status code
func (o *PrometheusBillingListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prometheus billing list unauthorized response has a 4xx status code
func (o *PrometheusBillingListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this prometheus billing list unauthorized response has a 5xx status code
func (o *PrometheusBillingListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this prometheus billing list unauthorized response a status code equal to that given
func (o *PrometheusBillingListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PrometheusBillingListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Prometheus/billing][%d] prometheusBillingListUnauthorized  %+v", 401, o.Payload)
}

func (o *PrometheusBillingListUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Prometheus/billing][%d] prometheusBillingListUnauthorized  %+v", 401, o.Payload)
}

func (o *PrometheusBillingListUnauthorized) GetPayload() *PrometheusBillingListUnauthorizedBody {
	return o.Payload
}

func (o *PrometheusBillingListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PrometheusBillingListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPrometheusBillingListForbidden creates a PrometheusBillingListForbidden with default headers values
func NewPrometheusBillingListForbidden() *PrometheusBillingListForbidden {
	return &PrometheusBillingListForbidden{}
}

/*
PrometheusBillingListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PrometheusBillingListForbidden struct {
	Payload *PrometheusBillingListForbiddenBody
}

// IsSuccess returns true when this prometheus billing list forbidden response has a 2xx status code
func (o *PrometheusBillingListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this prometheus billing list forbidden response has a 3xx status code
func (o *PrometheusBillingListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prometheus billing list forbidden response has a 4xx status code
func (o *PrometheusBillingListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this prometheus billing list forbidden response has a 5xx status code
func (o *PrometheusBillingListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this prometheus billing list forbidden response a status code equal to that given
func (o *PrometheusBillingListForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PrometheusBillingListForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Prometheus/billing][%d] prometheusBillingListForbidden  %+v", 403, o.Payload)
}

func (o *PrometheusBillingListForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Prometheus/billing][%d] prometheusBillingListForbidden  %+v", 403, o.Payload)
}

func (o *PrometheusBillingListForbidden) GetPayload() *PrometheusBillingListForbiddenBody {
	return o.Payload
}

func (o *PrometheusBillingListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PrometheusBillingListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPrometheusBillingListNotFound creates a PrometheusBillingListNotFound with default headers values
func NewPrometheusBillingListNotFound() *PrometheusBillingListNotFound {
	return &PrometheusBillingListNotFound{}
}

/*
PrometheusBillingListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PrometheusBillingListNotFound struct {
	Payload *PrometheusBillingListNotFoundBody
}

// IsSuccess returns true when this prometheus billing list not found response has a 2xx status code
func (o *PrometheusBillingListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this prometheus billing list not found response has a 3xx status code
func (o *PrometheusBillingListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prometheus billing list not found response has a 4xx status code
func (o *PrometheusBillingListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this prometheus billing list not found response has a 5xx status code
func (o *PrometheusBillingListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this prometheus billing list not found response a status code equal to that given
func (o *PrometheusBillingListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PrometheusBillingListNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Prometheus/billing][%d] prometheusBillingListNotFound  %+v", 404, o.Payload)
}

func (o *PrometheusBillingListNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Prometheus/billing][%d] prometheusBillingListNotFound  %+v", 404, o.Payload)
}

func (o *PrometheusBillingListNotFound) GetPayload() *PrometheusBillingListNotFoundBody {
	return o.Payload
}

func (o *PrometheusBillingListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PrometheusBillingListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPrometheusBillingListInternalServerError creates a PrometheusBillingListInternalServerError with default headers values
func NewPrometheusBillingListInternalServerError() *PrometheusBillingListInternalServerError {
	return &PrometheusBillingListInternalServerError{}
}

/*
PrometheusBillingListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type PrometheusBillingListInternalServerError struct {
}

// IsSuccess returns true when this prometheus billing list internal server error response has a 2xx status code
func (o *PrometheusBillingListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this prometheus billing list internal server error response has a 3xx status code
func (o *PrometheusBillingListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prometheus billing list internal server error response has a 4xx status code
func (o *PrometheusBillingListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this prometheus billing list internal server error response has a 5xx status code
func (o *PrometheusBillingListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this prometheus billing list internal server error response a status code equal to that given
func (o *PrometheusBillingListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PrometheusBillingListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Prometheus/billing][%d] prometheusBillingListInternalServerError ", 500)
}

func (o *PrometheusBillingListInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Prometheus/billing][%d] prometheusBillingListInternalServerError ", 500)
}

func (o *PrometheusBillingListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
PrometheusBillingListBadRequestBodyItems0 prometheus billing list bad request body items0
swagger:model PrometheusBillingListBadRequestBodyItems0
*/
type PrometheusBillingListBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this prometheus billing list bad request body items0
func (o *PrometheusBillingListBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this prometheus billing list bad request body items0 based on context it is used
func (o *PrometheusBillingListBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PrometheusBillingListBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PrometheusBillingListBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res PrometheusBillingListBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PrometheusBillingListForbiddenBody prometheus billing list forbidden body
swagger:model PrometheusBillingListForbiddenBody
*/
type PrometheusBillingListForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this prometheus billing list forbidden body
func (o *PrometheusBillingListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this prometheus billing list forbidden body based on context it is used
func (o *PrometheusBillingListForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PrometheusBillingListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PrometheusBillingListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res PrometheusBillingListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PrometheusBillingListNotFoundBody prometheus billing list not found body
swagger:model PrometheusBillingListNotFoundBody
*/
type PrometheusBillingListNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this prometheus billing list not found body
func (o *PrometheusBillingListNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this prometheus billing list not found body based on context it is used
func (o *PrometheusBillingListNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PrometheusBillingListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PrometheusBillingListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res PrometheusBillingListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PrometheusBillingListOKBody prometheus billing list o k body
swagger:model PrometheusBillingListOKBody
*/
type PrometheusBillingListOKBody struct {

	// data
	Data []*PrometheusBillingListOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`

	// total price
	TotalPrice float64 `json:"totalPrice,omitempty"`
}

// Validate validates this prometheus billing list o k body
func (o *PrometheusBillingListOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PrometheusBillingListOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("prometheusBillingListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("prometheusBillingListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this prometheus billing list o k body based on the context it is used
func (o *PrometheusBillingListOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PrometheusBillingListOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("prometheusBillingListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("prometheusBillingListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PrometheusBillingListOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PrometheusBillingListOKBody) UnmarshalBinary(b []byte) error {
	var res PrometheusBillingListOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PrometheusBillingListOKBodyDataItems0 prometheus billing list o k body data items0
swagger:model PrometheusBillingListOKBodyDataItems0
*/
type PrometheusBillingListOKBodyDataItems0 struct {

	// created by
	CreatedBy string `json:"createdBy,omitempty"`

	// end date
	// Format: date-time
	EndDate *strfmt.DateTime `json:"endDate,omitempty"`

	// last modified
	LastModified string `json:"lastModified,omitempty"`

	// last modified by
	LastModifiedBy string `json:"lastModifiedBy,omitempty"`

	// price
	Price float64 `json:"price,omitempty"`

	// prometheus rule Id
	PrometheusRuleID int32 `json:"prometheusRuleId,omitempty"`

	// rule name
	RuleName string `json:"ruleName,omitempty"`

	// start date
	// Format: date-time
	StartDate *strfmt.DateTime `json:"startDate,omitempty"`
}

// Validate validates this prometheus billing list o k body data items0
func (o *PrometheusBillingListOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEndDate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStartDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PrometheusBillingListOKBodyDataItems0) validateEndDate(formats strfmt.Registry) error {
	if swag.IsZero(o.EndDate) { // not required
		return nil
	}

	if err := validate.FormatOf("endDate", "body", "date-time", o.EndDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *PrometheusBillingListOKBodyDataItems0) validateStartDate(formats strfmt.Registry) error {
	if swag.IsZero(o.StartDate) { // not required
		return nil
	}

	if err := validate.FormatOf("startDate", "body", "date-time", o.StartDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this prometheus billing list o k body data items0 based on context it is used
func (o *PrometheusBillingListOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PrometheusBillingListOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PrometheusBillingListOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res PrometheusBillingListOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PrometheusBillingListUnauthorizedBody prometheus billing list unauthorized body
swagger:model PrometheusBillingListUnauthorizedBody
*/
type PrometheusBillingListUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this prometheus billing list unauthorized body
func (o *PrometheusBillingListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this prometheus billing list unauthorized body based on context it is used
func (o *PrometheusBillingListUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PrometheusBillingListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PrometheusBillingListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PrometheusBillingListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
