// Code generated by go-swagger; DO NOT EDIT.

package keycloak

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// KeycloakEditReader is a Reader for the KeycloakEdit structure.
type KeycloakEditReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KeycloakEditReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKeycloakEditOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewKeycloakEditBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewKeycloakEditUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewKeycloakEditForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewKeycloakEditNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewKeycloakEditTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewKeycloakEditInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewKeycloakEditOK creates a KeycloakEditOK with default headers values
func NewKeycloakEditOK() *KeycloakEditOK {
	return &KeycloakEditOK{}
}

/* KeycloakEditOK describes a response with status code 200, with default header values.

Success
*/
type KeycloakEditOK struct {
	Payload models.Unit
}

func (o *KeycloakEditOK) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/Keycloak/edit][%d] keycloakEditOK  %+v", 200, o.Payload)
}
func (o *KeycloakEditOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *KeycloakEditOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKeycloakEditBadRequest creates a KeycloakEditBadRequest with default headers values
func NewKeycloakEditBadRequest() *KeycloakEditBadRequest {
	return &KeycloakEditBadRequest{}
}

/* KeycloakEditBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type KeycloakEditBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *KeycloakEditBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/Keycloak/edit][%d] keycloakEditBadRequest  %+v", 400, o.Payload)
}
func (o *KeycloakEditBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *KeycloakEditBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKeycloakEditUnauthorized creates a KeycloakEditUnauthorized with default headers values
func NewKeycloakEditUnauthorized() *KeycloakEditUnauthorized {
	return &KeycloakEditUnauthorized{}
}

/* KeycloakEditUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type KeycloakEditUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *KeycloakEditUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/Keycloak/edit][%d] keycloakEditUnauthorized  %+v", 401, o.Payload)
}
func (o *KeycloakEditUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KeycloakEditUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKeycloakEditForbidden creates a KeycloakEditForbidden with default headers values
func NewKeycloakEditForbidden() *KeycloakEditForbidden {
	return &KeycloakEditForbidden{}
}

/* KeycloakEditForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type KeycloakEditForbidden struct {
	Payload *models.ProblemDetails
}

func (o *KeycloakEditForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/Keycloak/edit][%d] keycloakEditForbidden  %+v", 403, o.Payload)
}
func (o *KeycloakEditForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KeycloakEditForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKeycloakEditNotFound creates a KeycloakEditNotFound with default headers values
func NewKeycloakEditNotFound() *KeycloakEditNotFound {
	return &KeycloakEditNotFound{}
}

/* KeycloakEditNotFound describes a response with status code 404, with default header values.

Not Found
*/
type KeycloakEditNotFound struct {
	Payload *models.ProblemDetails
}

func (o *KeycloakEditNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/Keycloak/edit][%d] keycloakEditNotFound  %+v", 404, o.Payload)
}
func (o *KeycloakEditNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KeycloakEditNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKeycloakEditTooManyRequests creates a KeycloakEditTooManyRequests with default headers values
func NewKeycloakEditTooManyRequests() *KeycloakEditTooManyRequests {
	return &KeycloakEditTooManyRequests{}
}

/* KeycloakEditTooManyRequests describes a response with status code 429, with default header values.

Client Error
*/
type KeycloakEditTooManyRequests struct {
	Payload *models.ProblemDetails
}

func (o *KeycloakEditTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/Keycloak/edit][%d] keycloakEditTooManyRequests  %+v", 429, o.Payload)
}
func (o *KeycloakEditTooManyRequests) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *KeycloakEditTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKeycloakEditInternalServerError creates a KeycloakEditInternalServerError with default headers values
func NewKeycloakEditInternalServerError() *KeycloakEditInternalServerError {
	return &KeycloakEditInternalServerError{}
}

/* KeycloakEditInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type KeycloakEditInternalServerError struct {
}

func (o *KeycloakEditInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/Keycloak/edit][%d] keycloakEditInternalServerError ", 500)
}

func (o *KeycloakEditInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
