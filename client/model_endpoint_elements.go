/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EndpointElements type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EndpointElements{}

// EndpointElements struct for EndpointElements
type EndpointElements struct {
	Id int32 `json:"id"`
	Controller NullableString `json:"controller"`
	Description NullableString `json:"description"`
	Method NullableString `json:"method"`
	Path NullableString `json:"path"`
}

type _EndpointElements EndpointElements

// NewEndpointElements instantiates a new EndpointElements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointElements(id int32, controller NullableString, description NullableString, method NullableString, path NullableString) *EndpointElements {
	this := EndpointElements{}
	this.Id = id
	this.Controller = controller
	this.Description = description
	this.Method = method
	this.Path = path
	return &this
}

// NewEndpointElementsWithDefaults instantiates a new EndpointElements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointElementsWithDefaults() *EndpointElements {
	this := EndpointElements{}
	return &this
}

// GetId returns the Id field value
func (o *EndpointElements) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EndpointElements) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EndpointElements) SetId(v int32) {
	o.Id = v
}

// GetController returns the Controller field value
// If the value is explicit nil, the zero value for string will be returned
func (o *EndpointElements) GetController() string {
	if o == nil || o.Controller.Get() == nil {
		var ret string
		return ret
	}

	return *o.Controller.Get()
}

// GetControllerOk returns a tuple with the Controller field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EndpointElements) GetControllerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Controller.Get(), o.Controller.IsSet()
}

// SetController sets field value
func (o *EndpointElements) SetController(v string) {
	o.Controller.Set(&v)
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *EndpointElements) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EndpointElements) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *EndpointElements) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetMethod returns the Method field value
// If the value is explicit nil, the zero value for string will be returned
func (o *EndpointElements) GetMethod() string {
	if o == nil || o.Method.Get() == nil {
		var ret string
		return ret
	}

	return *o.Method.Get()
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EndpointElements) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Method.Get(), o.Method.IsSet()
}

// SetMethod sets field value
func (o *EndpointElements) SetMethod(v string) {
	o.Method.Set(&v)
}

// GetPath returns the Path field value
// If the value is explicit nil, the zero value for string will be returned
func (o *EndpointElements) GetPath() string {
	if o == nil || o.Path.Get() == nil {
		var ret string
		return ret
	}

	return *o.Path.Get()
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EndpointElements) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Path.Get(), o.Path.IsSet()
}

// SetPath sets field value
func (o *EndpointElements) SetPath(v string) {
	o.Path.Set(&v)
}

func (o EndpointElements) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointElements) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["controller"] = o.Controller.Get()
	toSerialize["description"] = o.Description.Get()
	toSerialize["method"] = o.Method.Get()
	toSerialize["path"] = o.Path.Get()
	return toSerialize, nil
}

func (o *EndpointElements) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"controller",
		"description",
		"method",
		"path",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEndpointElements := _EndpointElements{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEndpointElements)

	if err != nil {
		return err
	}

	*o = EndpointElements(varEndpointElements)

	return err
}

type NullableEndpointElements struct {
	value *EndpointElements
	isSet bool
}

func (v NullableEndpointElements) Get() *EndpointElements {
	return v.value
}

func (v *NullableEndpointElements) Set(val *EndpointElements) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointElements) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointElements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointElements(val *EndpointElements) *NullableEndpointElements {
	return &NullableEndpointElements{value: val, isSet: true}
}

func (v NullableEndpointElements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointElements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


