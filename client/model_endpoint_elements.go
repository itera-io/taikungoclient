/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the EndpointElements type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EndpointElements{}

// EndpointElements struct for EndpointElements
type EndpointElements struct {
	Id          *int32         `json:"id,omitempty"`
	Controller  NullableString `json:"controller,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Method      NullableString `json:"method,omitempty"`
	Path        NullableString `json:"path,omitempty"`
}

// NewEndpointElements instantiates a new EndpointElements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointElements() *EndpointElements {
	this := EndpointElements{}
	return &this
}

// NewEndpointElementsWithDefaults instantiates a new EndpointElements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointElementsWithDefaults() *EndpointElements {
	this := EndpointElements{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EndpointElements) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointElements) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EndpointElements) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *EndpointElements) SetId(v int32) {
	o.Id = &v
}

// GetController returns the Controller field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EndpointElements) GetController() string {
	if o == nil || IsNil(o.Controller.Get()) {
		var ret string
		return ret
	}
	return *o.Controller.Get()
}

// GetControllerOk returns a tuple with the Controller field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EndpointElements) GetControllerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Controller.Get(), o.Controller.IsSet()
}

// HasController returns a boolean if a field has been set.
func (o *EndpointElements) HasController() bool {
	if o != nil && o.Controller.IsSet() {
		return true
	}

	return false
}

// SetController gets a reference to the given NullableString and assigns it to the Controller field.
func (o *EndpointElements) SetController(v string) {
	o.Controller.Set(&v)
}

// SetControllerNil sets the value for Controller to be an explicit nil
func (o *EndpointElements) SetControllerNil() {
	o.Controller.Set(nil)
}

// UnsetController ensures that no value is present for Controller, not even an explicit nil
func (o *EndpointElements) UnsetController() {
	o.Controller.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EndpointElements) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EndpointElements) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *EndpointElements) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *EndpointElements) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *EndpointElements) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *EndpointElements) UnsetDescription() {
	o.Description.Unset()
}

// GetMethod returns the Method field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EndpointElements) GetMethod() string {
	if o == nil || IsNil(o.Method.Get()) {
		var ret string
		return ret
	}
	return *o.Method.Get()
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EndpointElements) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Method.Get(), o.Method.IsSet()
}

// HasMethod returns a boolean if a field has been set.
func (o *EndpointElements) HasMethod() bool {
	if o != nil && o.Method.IsSet() {
		return true
	}

	return false
}

// SetMethod gets a reference to the given NullableString and assigns it to the Method field.
func (o *EndpointElements) SetMethod(v string) {
	o.Method.Set(&v)
}

// SetMethodNil sets the value for Method to be an explicit nil
func (o *EndpointElements) SetMethodNil() {
	o.Method.Set(nil)
}

// UnsetMethod ensures that no value is present for Method, not even an explicit nil
func (o *EndpointElements) UnsetMethod() {
	o.Method.Unset()
}

// GetPath returns the Path field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EndpointElements) GetPath() string {
	if o == nil || IsNil(o.Path.Get()) {
		var ret string
		return ret
	}
	return *o.Path.Get()
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EndpointElements) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Path.Get(), o.Path.IsSet()
}

// HasPath returns a boolean if a field has been set.
func (o *EndpointElements) HasPath() bool {
	if o != nil && o.Path.IsSet() {
		return true
	}

	return false
}

// SetPath gets a reference to the given NullableString and assigns it to the Path field.
func (o *EndpointElements) SetPath(v string) {
	o.Path.Set(&v)
}

// SetPathNil sets the value for Path to be an explicit nil
func (o *EndpointElements) SetPathNil() {
	o.Path.Set(nil)
}

// UnsetPath ensures that no value is present for Path, not even an explicit nil
func (o *EndpointElements) UnsetPath() {
	o.Path.Unset()
}

func (o EndpointElements) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointElements) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Controller.IsSet() {
		toSerialize["controller"] = o.Controller.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Method.IsSet() {
		toSerialize["method"] = o.Method.Get()
	}
	if o.Path.IsSet() {
		toSerialize["path"] = o.Path.Get()
	}
	return toSerialize, nil
}

type NullableEndpointElements struct {
	value *EndpointElements
	isSet bool
}

func (v NullableEndpointElements) Get() *EndpointElements {
	return v.value
}

func (v *NullableEndpointElements) Set(val *EndpointElements) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointElements) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointElements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointElements(val *EndpointElements) *NullableEndpointElements {
	return &NullableEndpointElements{value: val, isSet: true}
}

func (v NullableEndpointElements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointElements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
