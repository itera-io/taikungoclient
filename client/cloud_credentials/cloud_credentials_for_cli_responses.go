// Code generated by go-swagger; DO NOT EDIT.

package cloud_credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CloudCredentialsForCliReader is a Reader for the CloudCredentialsForCli structure.
type CloudCredentialsForCliReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CloudCredentialsForCliReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCloudCredentialsForCliOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCloudCredentialsForCliBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCloudCredentialsForCliUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCloudCredentialsForCliForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCloudCredentialsForCliNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCloudCredentialsForCliInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCloudCredentialsForCliOK creates a CloudCredentialsForCliOK with default headers values
func NewCloudCredentialsForCliOK() *CloudCredentialsForCliOK {
	return &CloudCredentialsForCliOK{}
}

/*
CloudCredentialsForCliOK describes a response with status code 200, with default header values.

Success
*/
type CloudCredentialsForCliOK struct {
	Payload *CloudCredentialsForCliOKBody
}

// IsSuccess returns true when this cloud credentials for cli o k response has a 2xx status code
func (o *CloudCredentialsForCliOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cloud credentials for cli o k response has a 3xx status code
func (o *CloudCredentialsForCliOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud credentials for cli o k response has a 4xx status code
func (o *CloudCredentialsForCliOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud credentials for cli o k response has a 5xx status code
func (o *CloudCredentialsForCliOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud credentials for cli o k response a status code equal to that given
func (o *CloudCredentialsForCliOK) IsCode(code int) bool {
	return code == 200
}

func (o *CloudCredentialsForCliOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/cli][%d] cloudCredentialsForCliOK  %+v", 200, o.Payload)
}

func (o *CloudCredentialsForCliOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/cli][%d] cloudCredentialsForCliOK  %+v", 200, o.Payload)
}

func (o *CloudCredentialsForCliOK) GetPayload() *CloudCredentialsForCliOKBody {
	return o.Payload
}

func (o *CloudCredentialsForCliOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CloudCredentialsForCliOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudCredentialsForCliBadRequest creates a CloudCredentialsForCliBadRequest with default headers values
func NewCloudCredentialsForCliBadRequest() *CloudCredentialsForCliBadRequest {
	return &CloudCredentialsForCliBadRequest{}
}

/*
CloudCredentialsForCliBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CloudCredentialsForCliBadRequest struct {
	Payload []*CloudCredentialsForCliBadRequestBodyItems0
}

// IsSuccess returns true when this cloud credentials for cli bad request response has a 2xx status code
func (o *CloudCredentialsForCliBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud credentials for cli bad request response has a 3xx status code
func (o *CloudCredentialsForCliBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud credentials for cli bad request response has a 4xx status code
func (o *CloudCredentialsForCliBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud credentials for cli bad request response has a 5xx status code
func (o *CloudCredentialsForCliBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud credentials for cli bad request response a status code equal to that given
func (o *CloudCredentialsForCliBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CloudCredentialsForCliBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/cli][%d] cloudCredentialsForCliBadRequest  %+v", 400, o.Payload)
}

func (o *CloudCredentialsForCliBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/cli][%d] cloudCredentialsForCliBadRequest  %+v", 400, o.Payload)
}

func (o *CloudCredentialsForCliBadRequest) GetPayload() []*CloudCredentialsForCliBadRequestBodyItems0 {
	return o.Payload
}

func (o *CloudCredentialsForCliBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudCredentialsForCliUnauthorized creates a CloudCredentialsForCliUnauthorized with default headers values
func NewCloudCredentialsForCliUnauthorized() *CloudCredentialsForCliUnauthorized {
	return &CloudCredentialsForCliUnauthorized{}
}

/*
CloudCredentialsForCliUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CloudCredentialsForCliUnauthorized struct {
	Payload *CloudCredentialsForCliUnauthorizedBody
}

// IsSuccess returns true when this cloud credentials for cli unauthorized response has a 2xx status code
func (o *CloudCredentialsForCliUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud credentials for cli unauthorized response has a 3xx status code
func (o *CloudCredentialsForCliUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud credentials for cli unauthorized response has a 4xx status code
func (o *CloudCredentialsForCliUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud credentials for cli unauthorized response has a 5xx status code
func (o *CloudCredentialsForCliUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud credentials for cli unauthorized response a status code equal to that given
func (o *CloudCredentialsForCliUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CloudCredentialsForCliUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/cli][%d] cloudCredentialsForCliUnauthorized  %+v", 401, o.Payload)
}

func (o *CloudCredentialsForCliUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/cli][%d] cloudCredentialsForCliUnauthorized  %+v", 401, o.Payload)
}

func (o *CloudCredentialsForCliUnauthorized) GetPayload() *CloudCredentialsForCliUnauthorizedBody {
	return o.Payload
}

func (o *CloudCredentialsForCliUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CloudCredentialsForCliUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudCredentialsForCliForbidden creates a CloudCredentialsForCliForbidden with default headers values
func NewCloudCredentialsForCliForbidden() *CloudCredentialsForCliForbidden {
	return &CloudCredentialsForCliForbidden{}
}

/*
CloudCredentialsForCliForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CloudCredentialsForCliForbidden struct {
	Payload *CloudCredentialsForCliForbiddenBody
}

// IsSuccess returns true when this cloud credentials for cli forbidden response has a 2xx status code
func (o *CloudCredentialsForCliForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud credentials for cli forbidden response has a 3xx status code
func (o *CloudCredentialsForCliForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud credentials for cli forbidden response has a 4xx status code
func (o *CloudCredentialsForCliForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud credentials for cli forbidden response has a 5xx status code
func (o *CloudCredentialsForCliForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud credentials for cli forbidden response a status code equal to that given
func (o *CloudCredentialsForCliForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CloudCredentialsForCliForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/cli][%d] cloudCredentialsForCliForbidden  %+v", 403, o.Payload)
}

func (o *CloudCredentialsForCliForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/cli][%d] cloudCredentialsForCliForbidden  %+v", 403, o.Payload)
}

func (o *CloudCredentialsForCliForbidden) GetPayload() *CloudCredentialsForCliForbiddenBody {
	return o.Payload
}

func (o *CloudCredentialsForCliForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CloudCredentialsForCliForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudCredentialsForCliNotFound creates a CloudCredentialsForCliNotFound with default headers values
func NewCloudCredentialsForCliNotFound() *CloudCredentialsForCliNotFound {
	return &CloudCredentialsForCliNotFound{}
}

/*
CloudCredentialsForCliNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CloudCredentialsForCliNotFound struct {
	Payload *CloudCredentialsForCliNotFoundBody
}

// IsSuccess returns true when this cloud credentials for cli not found response has a 2xx status code
func (o *CloudCredentialsForCliNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud credentials for cli not found response has a 3xx status code
func (o *CloudCredentialsForCliNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud credentials for cli not found response has a 4xx status code
func (o *CloudCredentialsForCliNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud credentials for cli not found response has a 5xx status code
func (o *CloudCredentialsForCliNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud credentials for cli not found response a status code equal to that given
func (o *CloudCredentialsForCliNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CloudCredentialsForCliNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/cli][%d] cloudCredentialsForCliNotFound  %+v", 404, o.Payload)
}

func (o *CloudCredentialsForCliNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/cli][%d] cloudCredentialsForCliNotFound  %+v", 404, o.Payload)
}

func (o *CloudCredentialsForCliNotFound) GetPayload() *CloudCredentialsForCliNotFoundBody {
	return o.Payload
}

func (o *CloudCredentialsForCliNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CloudCredentialsForCliNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudCredentialsForCliInternalServerError creates a CloudCredentialsForCliInternalServerError with default headers values
func NewCloudCredentialsForCliInternalServerError() *CloudCredentialsForCliInternalServerError {
	return &CloudCredentialsForCliInternalServerError{}
}

/*
CloudCredentialsForCliInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CloudCredentialsForCliInternalServerError struct {
}

// IsSuccess returns true when this cloud credentials for cli internal server error response has a 2xx status code
func (o *CloudCredentialsForCliInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud credentials for cli internal server error response has a 3xx status code
func (o *CloudCredentialsForCliInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud credentials for cli internal server error response has a 4xx status code
func (o *CloudCredentialsForCliInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud credentials for cli internal server error response has a 5xx status code
func (o *CloudCredentialsForCliInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cloud credentials for cli internal server error response a status code equal to that given
func (o *CloudCredentialsForCliInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CloudCredentialsForCliInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/cli][%d] cloudCredentialsForCliInternalServerError ", 500)
}

func (o *CloudCredentialsForCliInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/cli][%d] cloudCredentialsForCliInternalServerError ", 500)
}

func (o *CloudCredentialsForCliInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
CloudCredentialsForCliBadRequestBodyItems0 cloud credentials for cli bad request body items0
swagger:model CloudCredentialsForCliBadRequestBodyItems0
*/
type CloudCredentialsForCliBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this cloud credentials for cli bad request body items0
func (o *CloudCredentialsForCliBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cloud credentials for cli bad request body items0 based on context it is used
func (o *CloudCredentialsForCliBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsForCliBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsForCliBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsForCliBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CloudCredentialsForCliForbiddenBody cloud credentials for cli forbidden body
swagger:model CloudCredentialsForCliForbiddenBody
*/
type CloudCredentialsForCliForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cloud credentials for cli forbidden body
func (o *CloudCredentialsForCliForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cloud credentials for cli forbidden body based on context it is used
func (o *CloudCredentialsForCliForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsForCliForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsForCliForbiddenBody) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsForCliForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CloudCredentialsForCliNotFoundBody cloud credentials for cli not found body
swagger:model CloudCredentialsForCliNotFoundBody
*/
type CloudCredentialsForCliNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cloud credentials for cli not found body
func (o *CloudCredentialsForCliNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cloud credentials for cli not found body based on context it is used
func (o *CloudCredentialsForCliNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsForCliNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsForCliNotFoundBody) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsForCliNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CloudCredentialsForCliOKBody cloud credentials for cli o k body
swagger:model CloudCredentialsForCliOKBody
*/
type CloudCredentialsForCliOKBody struct {

	// data
	Data []*CloudCredentialsForCliOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this cloud credentials for cli o k body
func (o *CloudCredentialsForCliOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CloudCredentialsForCliOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("cloudCredentialsForCliOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("cloudCredentialsForCliOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this cloud credentials for cli o k body based on the context it is used
func (o *CloudCredentialsForCliOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CloudCredentialsForCliOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("cloudCredentialsForCliOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("cloudCredentialsForCliOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsForCliOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsForCliOKBody) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsForCliOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CloudCredentialsForCliOKBodyDataItems0 cloud credentials for cli o k body data items0
swagger:model CloudCredentialsForCliOKBodyDataItems0
*/
type CloudCredentialsForCliOKBodyDataItems0 struct {

	// cloud credential name
	CloudCredentialName string `json:"cloudCredentialName,omitempty"`

	// cloud type
	CloudType string `json:"cloudType,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// organization name
	OrganizationName string `json:"organizationName,omitempty"`

	// partner name
	PartnerName string `json:"partnerName,omitempty"`
}

// Validate validates this cloud credentials for cli o k body data items0
func (o *CloudCredentialsForCliOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cloud credentials for cli o k body data items0 based on context it is used
func (o *CloudCredentialsForCliOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsForCliOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsForCliOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsForCliOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CloudCredentialsForCliUnauthorizedBody cloud credentials for cli unauthorized body
swagger:model CloudCredentialsForCliUnauthorizedBody
*/
type CloudCredentialsForCliUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cloud credentials for cli unauthorized body
func (o *CloudCredentialsForCliUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cloud credentials for cli unauthorized body based on context it is used
func (o *CloudCredentialsForCliUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsForCliUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsForCliUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsForCliUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
