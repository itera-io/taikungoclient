// Code generated by go-swagger; DO NOT EDIT.

package cloud_credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CloudCredentialsAllFlavorsReader is a Reader for the CloudCredentialsAllFlavors structure.
type CloudCredentialsAllFlavorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CloudCredentialsAllFlavorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCloudCredentialsAllFlavorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCloudCredentialsAllFlavorsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCloudCredentialsAllFlavorsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCloudCredentialsAllFlavorsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCloudCredentialsAllFlavorsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCloudCredentialsAllFlavorsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCloudCredentialsAllFlavorsOK creates a CloudCredentialsAllFlavorsOK with default headers values
func NewCloudCredentialsAllFlavorsOK() *CloudCredentialsAllFlavorsOK {
	return &CloudCredentialsAllFlavorsOK{}
}

/*
CloudCredentialsAllFlavorsOK describes a response with status code 200, with default header values.

Success
*/
type CloudCredentialsAllFlavorsOK struct {
	Payload *CloudCredentialsAllFlavorsOKBody
}

// IsSuccess returns true when this cloud credentials all flavors o k response has a 2xx status code
func (o *CloudCredentialsAllFlavorsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cloud credentials all flavors o k response has a 3xx status code
func (o *CloudCredentialsAllFlavorsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud credentials all flavors o k response has a 4xx status code
func (o *CloudCredentialsAllFlavorsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud credentials all flavors o k response has a 5xx status code
func (o *CloudCredentialsAllFlavorsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud credentials all flavors o k response a status code equal to that given
func (o *CloudCredentialsAllFlavorsOK) IsCode(code int) bool {
	return code == 200
}

func (o *CloudCredentialsAllFlavorsOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/flavors/{cloudId}][%d] cloudCredentialsAllFlavorsOK  %+v", 200, o.Payload)
}

func (o *CloudCredentialsAllFlavorsOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/flavors/{cloudId}][%d] cloudCredentialsAllFlavorsOK  %+v", 200, o.Payload)
}

func (o *CloudCredentialsAllFlavorsOK) GetPayload() *CloudCredentialsAllFlavorsOKBody {
	return o.Payload
}

func (o *CloudCredentialsAllFlavorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CloudCredentialsAllFlavorsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudCredentialsAllFlavorsBadRequest creates a CloudCredentialsAllFlavorsBadRequest with default headers values
func NewCloudCredentialsAllFlavorsBadRequest() *CloudCredentialsAllFlavorsBadRequest {
	return &CloudCredentialsAllFlavorsBadRequest{}
}

/*
CloudCredentialsAllFlavorsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CloudCredentialsAllFlavorsBadRequest struct {
	Payload []*CloudCredentialsAllFlavorsBadRequestBodyItems0
}

// IsSuccess returns true when this cloud credentials all flavors bad request response has a 2xx status code
func (o *CloudCredentialsAllFlavorsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud credentials all flavors bad request response has a 3xx status code
func (o *CloudCredentialsAllFlavorsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud credentials all flavors bad request response has a 4xx status code
func (o *CloudCredentialsAllFlavorsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud credentials all flavors bad request response has a 5xx status code
func (o *CloudCredentialsAllFlavorsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud credentials all flavors bad request response a status code equal to that given
func (o *CloudCredentialsAllFlavorsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CloudCredentialsAllFlavorsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/flavors/{cloudId}][%d] cloudCredentialsAllFlavorsBadRequest  %+v", 400, o.Payload)
}

func (o *CloudCredentialsAllFlavorsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/flavors/{cloudId}][%d] cloudCredentialsAllFlavorsBadRequest  %+v", 400, o.Payload)
}

func (o *CloudCredentialsAllFlavorsBadRequest) GetPayload() []*CloudCredentialsAllFlavorsBadRequestBodyItems0 {
	return o.Payload
}

func (o *CloudCredentialsAllFlavorsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudCredentialsAllFlavorsUnauthorized creates a CloudCredentialsAllFlavorsUnauthorized with default headers values
func NewCloudCredentialsAllFlavorsUnauthorized() *CloudCredentialsAllFlavorsUnauthorized {
	return &CloudCredentialsAllFlavorsUnauthorized{}
}

/*
CloudCredentialsAllFlavorsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CloudCredentialsAllFlavorsUnauthorized struct {
	Payload *CloudCredentialsAllFlavorsUnauthorizedBody
}

// IsSuccess returns true when this cloud credentials all flavors unauthorized response has a 2xx status code
func (o *CloudCredentialsAllFlavorsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud credentials all flavors unauthorized response has a 3xx status code
func (o *CloudCredentialsAllFlavorsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud credentials all flavors unauthorized response has a 4xx status code
func (o *CloudCredentialsAllFlavorsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud credentials all flavors unauthorized response has a 5xx status code
func (o *CloudCredentialsAllFlavorsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud credentials all flavors unauthorized response a status code equal to that given
func (o *CloudCredentialsAllFlavorsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CloudCredentialsAllFlavorsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/flavors/{cloudId}][%d] cloudCredentialsAllFlavorsUnauthorized  %+v", 401, o.Payload)
}

func (o *CloudCredentialsAllFlavorsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/flavors/{cloudId}][%d] cloudCredentialsAllFlavorsUnauthorized  %+v", 401, o.Payload)
}

func (o *CloudCredentialsAllFlavorsUnauthorized) GetPayload() *CloudCredentialsAllFlavorsUnauthorizedBody {
	return o.Payload
}

func (o *CloudCredentialsAllFlavorsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CloudCredentialsAllFlavorsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudCredentialsAllFlavorsForbidden creates a CloudCredentialsAllFlavorsForbidden with default headers values
func NewCloudCredentialsAllFlavorsForbidden() *CloudCredentialsAllFlavorsForbidden {
	return &CloudCredentialsAllFlavorsForbidden{}
}

/*
CloudCredentialsAllFlavorsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CloudCredentialsAllFlavorsForbidden struct {
	Payload *CloudCredentialsAllFlavorsForbiddenBody
}

// IsSuccess returns true when this cloud credentials all flavors forbidden response has a 2xx status code
func (o *CloudCredentialsAllFlavorsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud credentials all flavors forbidden response has a 3xx status code
func (o *CloudCredentialsAllFlavorsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud credentials all flavors forbidden response has a 4xx status code
func (o *CloudCredentialsAllFlavorsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud credentials all flavors forbidden response has a 5xx status code
func (o *CloudCredentialsAllFlavorsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud credentials all flavors forbidden response a status code equal to that given
func (o *CloudCredentialsAllFlavorsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CloudCredentialsAllFlavorsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/flavors/{cloudId}][%d] cloudCredentialsAllFlavorsForbidden  %+v", 403, o.Payload)
}

func (o *CloudCredentialsAllFlavorsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/flavors/{cloudId}][%d] cloudCredentialsAllFlavorsForbidden  %+v", 403, o.Payload)
}

func (o *CloudCredentialsAllFlavorsForbidden) GetPayload() *CloudCredentialsAllFlavorsForbiddenBody {
	return o.Payload
}

func (o *CloudCredentialsAllFlavorsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CloudCredentialsAllFlavorsForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudCredentialsAllFlavorsNotFound creates a CloudCredentialsAllFlavorsNotFound with default headers values
func NewCloudCredentialsAllFlavorsNotFound() *CloudCredentialsAllFlavorsNotFound {
	return &CloudCredentialsAllFlavorsNotFound{}
}

/*
CloudCredentialsAllFlavorsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CloudCredentialsAllFlavorsNotFound struct {
	Payload *CloudCredentialsAllFlavorsNotFoundBody
}

// IsSuccess returns true when this cloud credentials all flavors not found response has a 2xx status code
func (o *CloudCredentialsAllFlavorsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud credentials all flavors not found response has a 3xx status code
func (o *CloudCredentialsAllFlavorsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud credentials all flavors not found response has a 4xx status code
func (o *CloudCredentialsAllFlavorsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud credentials all flavors not found response has a 5xx status code
func (o *CloudCredentialsAllFlavorsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud credentials all flavors not found response a status code equal to that given
func (o *CloudCredentialsAllFlavorsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CloudCredentialsAllFlavorsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/flavors/{cloudId}][%d] cloudCredentialsAllFlavorsNotFound  %+v", 404, o.Payload)
}

func (o *CloudCredentialsAllFlavorsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/flavors/{cloudId}][%d] cloudCredentialsAllFlavorsNotFound  %+v", 404, o.Payload)
}

func (o *CloudCredentialsAllFlavorsNotFound) GetPayload() *CloudCredentialsAllFlavorsNotFoundBody {
	return o.Payload
}

func (o *CloudCredentialsAllFlavorsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CloudCredentialsAllFlavorsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudCredentialsAllFlavorsInternalServerError creates a CloudCredentialsAllFlavorsInternalServerError with default headers values
func NewCloudCredentialsAllFlavorsInternalServerError() *CloudCredentialsAllFlavorsInternalServerError {
	return &CloudCredentialsAllFlavorsInternalServerError{}
}

/*
CloudCredentialsAllFlavorsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CloudCredentialsAllFlavorsInternalServerError struct {
}

// IsSuccess returns true when this cloud credentials all flavors internal server error response has a 2xx status code
func (o *CloudCredentialsAllFlavorsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud credentials all flavors internal server error response has a 3xx status code
func (o *CloudCredentialsAllFlavorsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud credentials all flavors internal server error response has a 4xx status code
func (o *CloudCredentialsAllFlavorsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud credentials all flavors internal server error response has a 5xx status code
func (o *CloudCredentialsAllFlavorsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cloud credentials all flavors internal server error response a status code equal to that given
func (o *CloudCredentialsAllFlavorsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CloudCredentialsAllFlavorsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/flavors/{cloudId}][%d] cloudCredentialsAllFlavorsInternalServerError ", 500)
}

func (o *CloudCredentialsAllFlavorsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/flavors/{cloudId}][%d] cloudCredentialsAllFlavorsInternalServerError ", 500)
}

func (o *CloudCredentialsAllFlavorsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
CloudCredentialsAllFlavorsBadRequestBodyItems0 cloud credentials all flavors bad request body items0
swagger:model CloudCredentialsAllFlavorsBadRequestBodyItems0
*/
type CloudCredentialsAllFlavorsBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this cloud credentials all flavors bad request body items0
func (o *CloudCredentialsAllFlavorsBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cloud credentials all flavors bad request body items0 based on context it is used
func (o *CloudCredentialsAllFlavorsBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsAllFlavorsBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsAllFlavorsBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsAllFlavorsBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CloudCredentialsAllFlavorsForbiddenBody cloud credentials all flavors forbidden body
swagger:model CloudCredentialsAllFlavorsForbiddenBody
*/
type CloudCredentialsAllFlavorsForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cloud credentials all flavors forbidden body
func (o *CloudCredentialsAllFlavorsForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cloud credentials all flavors forbidden body based on context it is used
func (o *CloudCredentialsAllFlavorsForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsAllFlavorsForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsAllFlavorsForbiddenBody) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsAllFlavorsForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CloudCredentialsAllFlavorsNotFoundBody cloud credentials all flavors not found body
swagger:model CloudCredentialsAllFlavorsNotFoundBody
*/
type CloudCredentialsAllFlavorsNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cloud credentials all flavors not found body
func (o *CloudCredentialsAllFlavorsNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cloud credentials all flavors not found body based on context it is used
func (o *CloudCredentialsAllFlavorsNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsAllFlavorsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsAllFlavorsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsAllFlavorsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CloudCredentialsAllFlavorsOKBody cloud credentials all flavors o k body
swagger:model CloudCredentialsAllFlavorsOKBody
*/
type CloudCredentialsAllFlavorsOKBody struct {

	// cloud type
	CloudType string `json:"cloudType,omitempty"`

	// data
	Data []*CloudCredentialsAllFlavorsOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this cloud credentials all flavors o k body
func (o *CloudCredentialsAllFlavorsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CloudCredentialsAllFlavorsOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("cloudCredentialsAllFlavorsOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("cloudCredentialsAllFlavorsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this cloud credentials all flavors o k body based on the context it is used
func (o *CloudCredentialsAllFlavorsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CloudCredentialsAllFlavorsOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("cloudCredentialsAllFlavorsOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("cloudCredentialsAllFlavorsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsAllFlavorsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsAllFlavorsOKBody) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsAllFlavorsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CloudCredentialsAllFlavorsOKBodyDataItems0 cloud credentials all flavors o k body data items0
swagger:model CloudCredentialsAllFlavorsOKBodyDataItems0
*/
type CloudCredentialsAllFlavorsOKBodyDataItems0 struct {

	// cpu
	CPU int32 `json:"cpu,omitempty"`

	// description
	Description interface{} `json:"description,omitempty"`

	// max data disk count
	MaxDataDiskCount float64 `json:"maxDataDiskCount,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// ram
	RAM int64 `json:"ram,omitempty"`
}

// Validate validates this cloud credentials all flavors o k body data items0
func (o *CloudCredentialsAllFlavorsOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cloud credentials all flavors o k body data items0 based on context it is used
func (o *CloudCredentialsAllFlavorsOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsAllFlavorsOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsAllFlavorsOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsAllFlavorsOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CloudCredentialsAllFlavorsUnauthorizedBody cloud credentials all flavors unauthorized body
swagger:model CloudCredentialsAllFlavorsUnauthorizedBody
*/
type CloudCredentialsAllFlavorsUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cloud credentials all flavors unauthorized body
func (o *CloudCredentialsAllFlavorsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cloud credentials all flavors unauthorized body based on context it is used
func (o *CloudCredentialsAllFlavorsUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsAllFlavorsUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsAllFlavorsUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsAllFlavorsUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
