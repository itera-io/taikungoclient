// Code generated by go-swagger; DO NOT EDIT.

package cloud_credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CloudCredentialsForProjectReader is a Reader for the CloudCredentialsForProject structure.
type CloudCredentialsForProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CloudCredentialsForProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCloudCredentialsForProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCloudCredentialsForProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCloudCredentialsForProjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCloudCredentialsForProjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCloudCredentialsForProjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCloudCredentialsForProjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCloudCredentialsForProjectOK creates a CloudCredentialsForProjectOK with default headers values
func NewCloudCredentialsForProjectOK() *CloudCredentialsForProjectOK {
	return &CloudCredentialsForProjectOK{}
}

/*
CloudCredentialsForProjectOK describes a response with status code 200, with default header values.

Success
*/
type CloudCredentialsForProjectOK struct {
	Payload *CloudCredentialsForProjectOKBody
}

// IsSuccess returns true when this cloud credentials for project o k response has a 2xx status code
func (o *CloudCredentialsForProjectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cloud credentials for project o k response has a 3xx status code
func (o *CloudCredentialsForProjectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud credentials for project o k response has a 4xx status code
func (o *CloudCredentialsForProjectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud credentials for project o k response has a 5xx status code
func (o *CloudCredentialsForProjectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud credentials for project o k response a status code equal to that given
func (o *CloudCredentialsForProjectOK) IsCode(code int) bool {
	return code == 200
}

func (o *CloudCredentialsForProjectOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/details][%d] cloudCredentialsForProjectOK  %+v", 200, o.Payload)
}

func (o *CloudCredentialsForProjectOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/details][%d] cloudCredentialsForProjectOK  %+v", 200, o.Payload)
}

func (o *CloudCredentialsForProjectOK) GetPayload() *CloudCredentialsForProjectOKBody {
	return o.Payload
}

func (o *CloudCredentialsForProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CloudCredentialsForProjectOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudCredentialsForProjectBadRequest creates a CloudCredentialsForProjectBadRequest with default headers values
func NewCloudCredentialsForProjectBadRequest() *CloudCredentialsForProjectBadRequest {
	return &CloudCredentialsForProjectBadRequest{}
}

/*
CloudCredentialsForProjectBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CloudCredentialsForProjectBadRequest struct {
	Payload []*CloudCredentialsForProjectBadRequestBodyItems0
}

// IsSuccess returns true when this cloud credentials for project bad request response has a 2xx status code
func (o *CloudCredentialsForProjectBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud credentials for project bad request response has a 3xx status code
func (o *CloudCredentialsForProjectBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud credentials for project bad request response has a 4xx status code
func (o *CloudCredentialsForProjectBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud credentials for project bad request response has a 5xx status code
func (o *CloudCredentialsForProjectBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud credentials for project bad request response a status code equal to that given
func (o *CloudCredentialsForProjectBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CloudCredentialsForProjectBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/details][%d] cloudCredentialsForProjectBadRequest  %+v", 400, o.Payload)
}

func (o *CloudCredentialsForProjectBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/details][%d] cloudCredentialsForProjectBadRequest  %+v", 400, o.Payload)
}

func (o *CloudCredentialsForProjectBadRequest) GetPayload() []*CloudCredentialsForProjectBadRequestBodyItems0 {
	return o.Payload
}

func (o *CloudCredentialsForProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudCredentialsForProjectUnauthorized creates a CloudCredentialsForProjectUnauthorized with default headers values
func NewCloudCredentialsForProjectUnauthorized() *CloudCredentialsForProjectUnauthorized {
	return &CloudCredentialsForProjectUnauthorized{}
}

/*
CloudCredentialsForProjectUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CloudCredentialsForProjectUnauthorized struct {
	Payload *CloudCredentialsForProjectUnauthorizedBody
}

// IsSuccess returns true when this cloud credentials for project unauthorized response has a 2xx status code
func (o *CloudCredentialsForProjectUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud credentials for project unauthorized response has a 3xx status code
func (o *CloudCredentialsForProjectUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud credentials for project unauthorized response has a 4xx status code
func (o *CloudCredentialsForProjectUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud credentials for project unauthorized response has a 5xx status code
func (o *CloudCredentialsForProjectUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud credentials for project unauthorized response a status code equal to that given
func (o *CloudCredentialsForProjectUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CloudCredentialsForProjectUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/details][%d] cloudCredentialsForProjectUnauthorized  %+v", 401, o.Payload)
}

func (o *CloudCredentialsForProjectUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/details][%d] cloudCredentialsForProjectUnauthorized  %+v", 401, o.Payload)
}

func (o *CloudCredentialsForProjectUnauthorized) GetPayload() *CloudCredentialsForProjectUnauthorizedBody {
	return o.Payload
}

func (o *CloudCredentialsForProjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CloudCredentialsForProjectUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudCredentialsForProjectForbidden creates a CloudCredentialsForProjectForbidden with default headers values
func NewCloudCredentialsForProjectForbidden() *CloudCredentialsForProjectForbidden {
	return &CloudCredentialsForProjectForbidden{}
}

/*
CloudCredentialsForProjectForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CloudCredentialsForProjectForbidden struct {
	Payload *CloudCredentialsForProjectForbiddenBody
}

// IsSuccess returns true when this cloud credentials for project forbidden response has a 2xx status code
func (o *CloudCredentialsForProjectForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud credentials for project forbidden response has a 3xx status code
func (o *CloudCredentialsForProjectForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud credentials for project forbidden response has a 4xx status code
func (o *CloudCredentialsForProjectForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud credentials for project forbidden response has a 5xx status code
func (o *CloudCredentialsForProjectForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud credentials for project forbidden response a status code equal to that given
func (o *CloudCredentialsForProjectForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CloudCredentialsForProjectForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/details][%d] cloudCredentialsForProjectForbidden  %+v", 403, o.Payload)
}

func (o *CloudCredentialsForProjectForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/details][%d] cloudCredentialsForProjectForbidden  %+v", 403, o.Payload)
}

func (o *CloudCredentialsForProjectForbidden) GetPayload() *CloudCredentialsForProjectForbiddenBody {
	return o.Payload
}

func (o *CloudCredentialsForProjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CloudCredentialsForProjectForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudCredentialsForProjectNotFound creates a CloudCredentialsForProjectNotFound with default headers values
func NewCloudCredentialsForProjectNotFound() *CloudCredentialsForProjectNotFound {
	return &CloudCredentialsForProjectNotFound{}
}

/*
CloudCredentialsForProjectNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CloudCredentialsForProjectNotFound struct {
	Payload *CloudCredentialsForProjectNotFoundBody
}

// IsSuccess returns true when this cloud credentials for project not found response has a 2xx status code
func (o *CloudCredentialsForProjectNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud credentials for project not found response has a 3xx status code
func (o *CloudCredentialsForProjectNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud credentials for project not found response has a 4xx status code
func (o *CloudCredentialsForProjectNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this cloud credentials for project not found response has a 5xx status code
func (o *CloudCredentialsForProjectNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this cloud credentials for project not found response a status code equal to that given
func (o *CloudCredentialsForProjectNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CloudCredentialsForProjectNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/details][%d] cloudCredentialsForProjectNotFound  %+v", 404, o.Payload)
}

func (o *CloudCredentialsForProjectNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/details][%d] cloudCredentialsForProjectNotFound  %+v", 404, o.Payload)
}

func (o *CloudCredentialsForProjectNotFound) GetPayload() *CloudCredentialsForProjectNotFoundBody {
	return o.Payload
}

func (o *CloudCredentialsForProjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CloudCredentialsForProjectNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCloudCredentialsForProjectInternalServerError creates a CloudCredentialsForProjectInternalServerError with default headers values
func NewCloudCredentialsForProjectInternalServerError() *CloudCredentialsForProjectInternalServerError {
	return &CloudCredentialsForProjectInternalServerError{}
}

/*
CloudCredentialsForProjectInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CloudCredentialsForProjectInternalServerError struct {
}

// IsSuccess returns true when this cloud credentials for project internal server error response has a 2xx status code
func (o *CloudCredentialsForProjectInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cloud credentials for project internal server error response has a 3xx status code
func (o *CloudCredentialsForProjectInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cloud credentials for project internal server error response has a 4xx status code
func (o *CloudCredentialsForProjectInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cloud credentials for project internal server error response has a 5xx status code
func (o *CloudCredentialsForProjectInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cloud credentials for project internal server error response a status code equal to that given
func (o *CloudCredentialsForProjectInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CloudCredentialsForProjectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/details][%d] cloudCredentialsForProjectInternalServerError ", 500)
}

func (o *CloudCredentialsForProjectInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/CloudCredentials/details][%d] cloudCredentialsForProjectInternalServerError ", 500)
}

func (o *CloudCredentialsForProjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
CloudCredentialsForProjectBadRequestBodyItems0 cloud credentials for project bad request body items0
swagger:model CloudCredentialsForProjectBadRequestBodyItems0
*/
type CloudCredentialsForProjectBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this cloud credentials for project bad request body items0
func (o *CloudCredentialsForProjectBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cloud credentials for project bad request body items0 based on context it is used
func (o *CloudCredentialsForProjectBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsForProjectBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsForProjectBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsForProjectBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CloudCredentialsForProjectForbiddenBody cloud credentials for project forbidden body
swagger:model CloudCredentialsForProjectForbiddenBody
*/
type CloudCredentialsForProjectForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cloud credentials for project forbidden body
func (o *CloudCredentialsForProjectForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cloud credentials for project forbidden body based on context it is used
func (o *CloudCredentialsForProjectForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsForProjectForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsForProjectForbiddenBody) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsForProjectForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CloudCredentialsForProjectNotFoundBody cloud credentials for project not found body
swagger:model CloudCredentialsForProjectNotFoundBody
*/
type CloudCredentialsForProjectNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cloud credentials for project not found body
func (o *CloudCredentialsForProjectNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cloud credentials for project not found body based on context it is used
func (o *CloudCredentialsForProjectNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsForProjectNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsForProjectNotFoundBody) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsForProjectNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CloudCredentialsForProjectOKBody cloud credentials for project o k body
swagger:model CloudCredentialsForProjectOKBody
*/
type CloudCredentialsForProjectOKBody struct {

	// aws
	Aws *CloudCredentialsForProjectOKBodyAws `json:"aws,omitempty"`

	// azure
	Azure *CloudCredentialsForProjectOKBodyAzure `json:"azure,omitempty"`

	// billing enabled
	BillingEnabled bool `json:"billingEnabled"`

	// cloud credential revision
	CloudCredentialRevision int32 `json:"cloudCredentialRevision,omitempty"`

	// cloud type
	// Enum: [100 200 300 400]
	CloudType int32 `json:"cloudType,omitempty"`

	// continent name
	ContinentName string `json:"continentName,omitempty"`

	// google
	Google *CloudCredentialsForProjectOKBodyGoogle `json:"google,omitempty"`

	// openstack
	Openstack *CloudCredentialsForProjectOKBodyOpenstack `json:"openstack,omitempty"`

	// requires v p n
	RequiresVPN bool `json:"requiresVPN"`
}

// Validate validates this cloud credentials for project o k body
func (o *CloudCredentialsForProjectOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAws(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAzure(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCloudType(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateGoogle(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOpenstack(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CloudCredentialsForProjectOKBody) validateAws(formats strfmt.Registry) error {
	if swag.IsZero(o.Aws) { // not required
		return nil
	}

	if o.Aws != nil {
		if err := o.Aws.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("cloudCredentialsForProjectOK" + "." + "aws")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("cloudCredentialsForProjectOK" + "." + "aws")
			}
			return err
		}
	}

	return nil
}

func (o *CloudCredentialsForProjectOKBody) validateAzure(formats strfmt.Registry) error {
	if swag.IsZero(o.Azure) { // not required
		return nil
	}

	if o.Azure != nil {
		if err := o.Azure.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("cloudCredentialsForProjectOK" + "." + "azure")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("cloudCredentialsForProjectOK" + "." + "azure")
			}
			return err
		}
	}

	return nil
}

var cloudCredentialsForProjectOKBodyTypeCloudTypePropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[100,200,300,400]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		cloudCredentialsForProjectOKBodyTypeCloudTypePropEnum = append(cloudCredentialsForProjectOKBodyTypeCloudTypePropEnum, v)
	}
}

// prop value enum
func (o *CloudCredentialsForProjectOKBody) validateCloudTypeEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, cloudCredentialsForProjectOKBodyTypeCloudTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *CloudCredentialsForProjectOKBody) validateCloudType(formats strfmt.Registry) error {
	if swag.IsZero(o.CloudType) { // not required
		return nil
	}

	// value enum
	if err := o.validateCloudTypeEnum("cloudCredentialsForProjectOK"+"."+"cloudType", "body", o.CloudType); err != nil {
		return err
	}

	return nil
}

func (o *CloudCredentialsForProjectOKBody) validateGoogle(formats strfmt.Registry) error {
	if swag.IsZero(o.Google) { // not required
		return nil
	}

	if o.Google != nil {
		if err := o.Google.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("cloudCredentialsForProjectOK" + "." + "google")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("cloudCredentialsForProjectOK" + "." + "google")
			}
			return err
		}
	}

	return nil
}

func (o *CloudCredentialsForProjectOKBody) validateOpenstack(formats strfmt.Registry) error {
	if swag.IsZero(o.Openstack) { // not required
		return nil
	}

	if o.Openstack != nil {
		if err := o.Openstack.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("cloudCredentialsForProjectOK" + "." + "openstack")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("cloudCredentialsForProjectOK" + "." + "openstack")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this cloud credentials for project o k body based on the context it is used
func (o *CloudCredentialsForProjectOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateAws(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateAzure(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateGoogle(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateOpenstack(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CloudCredentialsForProjectOKBody) contextValidateAws(ctx context.Context, formats strfmt.Registry) error {

	if o.Aws != nil {
		if err := o.Aws.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("cloudCredentialsForProjectOK" + "." + "aws")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("cloudCredentialsForProjectOK" + "." + "aws")
			}
			return err
		}
	}

	return nil
}

func (o *CloudCredentialsForProjectOKBody) contextValidateAzure(ctx context.Context, formats strfmt.Registry) error {

	if o.Azure != nil {
		if err := o.Azure.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("cloudCredentialsForProjectOK" + "." + "azure")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("cloudCredentialsForProjectOK" + "." + "azure")
			}
			return err
		}
	}

	return nil
}

func (o *CloudCredentialsForProjectOKBody) contextValidateGoogle(ctx context.Context, formats strfmt.Registry) error {

	if o.Google != nil {
		if err := o.Google.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("cloudCredentialsForProjectOK" + "." + "google")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("cloudCredentialsForProjectOK" + "." + "google")
			}
			return err
		}
	}

	return nil
}

func (o *CloudCredentialsForProjectOKBody) contextValidateOpenstack(ctx context.Context, formats strfmt.Registry) error {

	if o.Openstack != nil {
		if err := o.Openstack.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("cloudCredentialsForProjectOK" + "." + "openstack")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("cloudCredentialsForProjectOK" + "." + "openstack")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsForProjectOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsForProjectOKBody) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsForProjectOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CloudCredentialsForProjectOKBodyAws cloud credentials for project o k body aws
swagger:model CloudCredentialsForProjectOKBodyAws
*/
type CloudCredentialsForProjectOKBodyAws struct {

	// aws access key Id
	AwsAccessKeyID string `json:"awsAccessKeyId,omitempty"`

	// aws region
	AwsRegion string `json:"awsRegion,omitempty"`

	// aws secret access key
	AwsSecretAccessKey string `json:"awsSecretAccessKey,omitempty"`
}

// Validate validates this cloud credentials for project o k body aws
func (o *CloudCredentialsForProjectOKBodyAws) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cloud credentials for project o k body aws based on context it is used
func (o *CloudCredentialsForProjectOKBodyAws) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsForProjectOKBodyAws) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsForProjectOKBodyAws) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsForProjectOKBodyAws
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CloudCredentialsForProjectOKBodyAzure cloud credentials for project o k body azure
swagger:model CloudCredentialsForProjectOKBodyAzure
*/
type CloudCredentialsForProjectOKBodyAzure struct {

	// azure client Id
	AzureClientID string `json:"azureClientId,omitempty"`

	// azure client secret
	AzureClientSecret string `json:"azureClientSecret,omitempty"`

	// azure location
	AzureLocation string `json:"azureLocation,omitempty"`

	// azure subscription Id
	AzureSubscriptionID string `json:"azureSubscriptionId,omitempty"`

	// azure tenant Id
	AzureTenantID string `json:"azureTenantId,omitempty"`
}

// Validate validates this cloud credentials for project o k body azure
func (o *CloudCredentialsForProjectOKBodyAzure) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cloud credentials for project o k body azure based on context it is used
func (o *CloudCredentialsForProjectOKBodyAzure) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsForProjectOKBodyAzure) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsForProjectOKBodyAzure) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsForProjectOKBodyAzure
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CloudCredentialsForProjectOKBodyGoogle cloud credentials for project o k body google
swagger:model CloudCredentialsForProjectOKBodyGoogle
*/
type CloudCredentialsForProjectOKBodyGoogle struct {

	// billing account Id
	BillingAccountID string `json:"billingAccountId,omitempty"`

	// config
	Config string `json:"config,omitempty"`

	// folder Id
	FolderID string `json:"folderId,omitempty"`

	// region
	Region string `json:"region,omitempty"`

	// zone
	Zone string `json:"zone,omitempty"`
}

// Validate validates this cloud credentials for project o k body google
func (o *CloudCredentialsForProjectOKBodyGoogle) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cloud credentials for project o k body google based on context it is used
func (o *CloudCredentialsForProjectOKBodyGoogle) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsForProjectOKBodyGoogle) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsForProjectOKBodyGoogle) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsForProjectOKBodyGoogle
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CloudCredentialsForProjectOKBodyOpenstack cloud credentials for project o k body openstack
swagger:model CloudCredentialsForProjectOKBodyOpenstack
*/
type CloudCredentialsForProjectOKBodyOpenstack struct {

	// open stack availability zone
	OpenStackAvailabilityZone string `json:"openStackAvailabilityZone,omitempty"`

	// open stack domain
	OpenStackDomain string `json:"openStackDomain,omitempty"`

	// open stack import network
	OpenStackImportNetwork bool `json:"openStackImportNetwork"`

	// open stack internal subnet Id
	OpenStackInternalSubnetID string `json:"openStackInternalSubnetId,omitempty"`

	// open stack password
	OpenStackPassword string `json:"openStackPassword,omitempty"`

	// open stack project
	OpenStackProject string `json:"openStackProject,omitempty"`

	// open stack public network
	OpenStackPublicNetwork string `json:"openStackPublicNetwork,omitempty"`

	// open stack region
	OpenStackRegion string `json:"openStackRegion,omitempty"`

	// open stack tenant Id
	OpenStackTenantID string `json:"openStackTenantId,omitempty"`

	// open stack Url
	OpenStackURL string `json:"openStackUrl,omitempty"`

	// open stack user
	OpenStackUser string `json:"openStackUser,omitempty"`

	// open stack volume type
	OpenStackVolumeType string `json:"openStackVolumeType,omitempty"`
}

// Validate validates this cloud credentials for project o k body openstack
func (o *CloudCredentialsForProjectOKBodyOpenstack) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cloud credentials for project o k body openstack based on context it is used
func (o *CloudCredentialsForProjectOKBodyOpenstack) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsForProjectOKBodyOpenstack) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsForProjectOKBodyOpenstack) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsForProjectOKBodyOpenstack
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CloudCredentialsForProjectUnauthorizedBody cloud credentials for project unauthorized body
swagger:model CloudCredentialsForProjectUnauthorizedBody
*/
type CloudCredentialsForProjectUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this cloud credentials for project unauthorized body
func (o *CloudCredentialsForProjectUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cloud credentials for project unauthorized body based on context it is used
func (o *CloudCredentialsForProjectUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CloudCredentialsForProjectUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CloudCredentialsForProjectUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res CloudCredentialsForProjectUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
