// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SearchOrganizationsListReader is a Reader for the SearchOrganizationsList structure.
type SearchOrganizationsListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchOrganizationsListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchOrganizationsListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchOrganizationsListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchOrganizationsListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchOrganizationsListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchOrganizationsListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchOrganizationsListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchOrganizationsListOK creates a SearchOrganizationsListOK with default headers values
func NewSearchOrganizationsListOK() *SearchOrganizationsListOK {
	return &SearchOrganizationsListOK{}
}

/*
SearchOrganizationsListOK describes a response with status code 200, with default header values.

Success
*/
type SearchOrganizationsListOK struct {
	Payload *SearchOrganizationsListOKBody
}

// IsSuccess returns true when this search organizations list o k response has a 2xx status code
func (o *SearchOrganizationsListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search organizations list o k response has a 3xx status code
func (o *SearchOrganizationsListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search organizations list o k response has a 4xx status code
func (o *SearchOrganizationsListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search organizations list o k response has a 5xx status code
func (o *SearchOrganizationsListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search organizations list o k response a status code equal to that given
func (o *SearchOrganizationsListOK) IsCode(code int) bool {
	return code == 200
}

func (o *SearchOrganizationsListOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/organizations][%d] searchOrganizationsListOK  %+v", 200, o.Payload)
}

func (o *SearchOrganizationsListOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/organizations][%d] searchOrganizationsListOK  %+v", 200, o.Payload)
}

func (o *SearchOrganizationsListOK) GetPayload() *SearchOrganizationsListOKBody {
	return o.Payload
}

func (o *SearchOrganizationsListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchOrganizationsListOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchOrganizationsListBadRequest creates a SearchOrganizationsListBadRequest with default headers values
func NewSearchOrganizationsListBadRequest() *SearchOrganizationsListBadRequest {
	return &SearchOrganizationsListBadRequest{}
}

/*
SearchOrganizationsListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SearchOrganizationsListBadRequest struct {
	Payload []*SearchOrganizationsListBadRequestBodyItems0
}

// IsSuccess returns true when this search organizations list bad request response has a 2xx status code
func (o *SearchOrganizationsListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search organizations list bad request response has a 3xx status code
func (o *SearchOrganizationsListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search organizations list bad request response has a 4xx status code
func (o *SearchOrganizationsListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search organizations list bad request response has a 5xx status code
func (o *SearchOrganizationsListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search organizations list bad request response a status code equal to that given
func (o *SearchOrganizationsListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SearchOrganizationsListBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/organizations][%d] searchOrganizationsListBadRequest  %+v", 400, o.Payload)
}

func (o *SearchOrganizationsListBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/organizations][%d] searchOrganizationsListBadRequest  %+v", 400, o.Payload)
}

func (o *SearchOrganizationsListBadRequest) GetPayload() []*SearchOrganizationsListBadRequestBodyItems0 {
	return o.Payload
}

func (o *SearchOrganizationsListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchOrganizationsListUnauthorized creates a SearchOrganizationsListUnauthorized with default headers values
func NewSearchOrganizationsListUnauthorized() *SearchOrganizationsListUnauthorized {
	return &SearchOrganizationsListUnauthorized{}
}

/*
SearchOrganizationsListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SearchOrganizationsListUnauthorized struct {
	Payload *SearchOrganizationsListUnauthorizedBody
}

// IsSuccess returns true when this search organizations list unauthorized response has a 2xx status code
func (o *SearchOrganizationsListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search organizations list unauthorized response has a 3xx status code
func (o *SearchOrganizationsListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search organizations list unauthorized response has a 4xx status code
func (o *SearchOrganizationsListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this search organizations list unauthorized response has a 5xx status code
func (o *SearchOrganizationsListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this search organizations list unauthorized response a status code equal to that given
func (o *SearchOrganizationsListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SearchOrganizationsListUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/organizations][%d] searchOrganizationsListUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchOrganizationsListUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/organizations][%d] searchOrganizationsListUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchOrganizationsListUnauthorized) GetPayload() *SearchOrganizationsListUnauthorizedBody {
	return o.Payload
}

func (o *SearchOrganizationsListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchOrganizationsListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchOrganizationsListForbidden creates a SearchOrganizationsListForbidden with default headers values
func NewSearchOrganizationsListForbidden() *SearchOrganizationsListForbidden {
	return &SearchOrganizationsListForbidden{}
}

/*
SearchOrganizationsListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SearchOrganizationsListForbidden struct {
	Payload *SearchOrganizationsListForbiddenBody
}

// IsSuccess returns true when this search organizations list forbidden response has a 2xx status code
func (o *SearchOrganizationsListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search organizations list forbidden response has a 3xx status code
func (o *SearchOrganizationsListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search organizations list forbidden response has a 4xx status code
func (o *SearchOrganizationsListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this search organizations list forbidden response has a 5xx status code
func (o *SearchOrganizationsListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this search organizations list forbidden response a status code equal to that given
func (o *SearchOrganizationsListForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SearchOrganizationsListForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/organizations][%d] searchOrganizationsListForbidden  %+v", 403, o.Payload)
}

func (o *SearchOrganizationsListForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/organizations][%d] searchOrganizationsListForbidden  %+v", 403, o.Payload)
}

func (o *SearchOrganizationsListForbidden) GetPayload() *SearchOrganizationsListForbiddenBody {
	return o.Payload
}

func (o *SearchOrganizationsListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchOrganizationsListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchOrganizationsListNotFound creates a SearchOrganizationsListNotFound with default headers values
func NewSearchOrganizationsListNotFound() *SearchOrganizationsListNotFound {
	return &SearchOrganizationsListNotFound{}
}

/*
SearchOrganizationsListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SearchOrganizationsListNotFound struct {
	Payload *SearchOrganizationsListNotFoundBody
}

// IsSuccess returns true when this search organizations list not found response has a 2xx status code
func (o *SearchOrganizationsListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search organizations list not found response has a 3xx status code
func (o *SearchOrganizationsListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search organizations list not found response has a 4xx status code
func (o *SearchOrganizationsListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this search organizations list not found response has a 5xx status code
func (o *SearchOrganizationsListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this search organizations list not found response a status code equal to that given
func (o *SearchOrganizationsListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SearchOrganizationsListNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/organizations][%d] searchOrganizationsListNotFound  %+v", 404, o.Payload)
}

func (o *SearchOrganizationsListNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/organizations][%d] searchOrganizationsListNotFound  %+v", 404, o.Payload)
}

func (o *SearchOrganizationsListNotFound) GetPayload() *SearchOrganizationsListNotFoundBody {
	return o.Payload
}

func (o *SearchOrganizationsListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchOrganizationsListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchOrganizationsListInternalServerError creates a SearchOrganizationsListInternalServerError with default headers values
func NewSearchOrganizationsListInternalServerError() *SearchOrganizationsListInternalServerError {
	return &SearchOrganizationsListInternalServerError{}
}

/*
SearchOrganizationsListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type SearchOrganizationsListInternalServerError struct {
}

// IsSuccess returns true when this search organizations list internal server error response has a 2xx status code
func (o *SearchOrganizationsListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search organizations list internal server error response has a 3xx status code
func (o *SearchOrganizationsListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search organizations list internal server error response has a 4xx status code
func (o *SearchOrganizationsListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search organizations list internal server error response has a 5xx status code
func (o *SearchOrganizationsListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search organizations list internal server error response a status code equal to that given
func (o *SearchOrganizationsListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SearchOrganizationsListInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/organizations][%d] searchOrganizationsListInternalServerError ", 500)
}

func (o *SearchOrganizationsListInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/organizations][%d] searchOrganizationsListInternalServerError ", 500)
}

func (o *SearchOrganizationsListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
SearchOrganizationsListBadRequestBodyItems0 search organizations list bad request body items0
swagger:model SearchOrganizationsListBadRequestBodyItems0
*/
type SearchOrganizationsListBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this search organizations list bad request body items0
func (o *SearchOrganizationsListBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search organizations list bad request body items0 based on context it is used
func (o *SearchOrganizationsListBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchOrganizationsListBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchOrganizationsListBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res SearchOrganizationsListBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchOrganizationsListBody search organizations list body
swagger:model SearchOrganizationsListBody
*/
type SearchOrganizationsListBody struct {

	// limit
	Limit int32 `json:"limit,omitempty"`

	// offset
	Offset int32 `json:"offset,omitempty"`

	// search term
	SearchTerm string `json:"searchTerm,omitempty"`
}

// Validate validates this search organizations list body
func (o *SearchOrganizationsListBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search organizations list body based on context it is used
func (o *SearchOrganizationsListBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchOrganizationsListBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchOrganizationsListBody) UnmarshalBinary(b []byte) error {
	var res SearchOrganizationsListBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchOrganizationsListForbiddenBody search organizations list forbidden body
swagger:model SearchOrganizationsListForbiddenBody
*/
type SearchOrganizationsListForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search organizations list forbidden body
func (o *SearchOrganizationsListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search organizations list forbidden body based on context it is used
func (o *SearchOrganizationsListForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchOrganizationsListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchOrganizationsListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res SearchOrganizationsListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchOrganizationsListNotFoundBody search organizations list not found body
swagger:model SearchOrganizationsListNotFoundBody
*/
type SearchOrganizationsListNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search organizations list not found body
func (o *SearchOrganizationsListNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search organizations list not found body based on context it is used
func (o *SearchOrganizationsListNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchOrganizationsListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchOrganizationsListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res SearchOrganizationsListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchOrganizationsListOKBody search organizations list o k body
swagger:model SearchOrganizationsListOKBody
*/
type SearchOrganizationsListOKBody struct {

	// data
	Data []*SearchOrganizationsListOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this search organizations list o k body
func (o *SearchOrganizationsListOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SearchOrganizationsListOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("searchOrganizationsListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("searchOrganizationsListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this search organizations list o k body based on the context it is used
func (o *SearchOrganizationsListOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SearchOrganizationsListOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("searchOrganizationsListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("searchOrganizationsListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *SearchOrganizationsListOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchOrganizationsListOKBody) UnmarshalBinary(b []byte) error {
	var res SearchOrganizationsListOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchOrganizationsListOKBodyDataItems0 search organizations list o k body data items0
swagger:model SearchOrganizationsListOKBodyDataItems0
*/
type SearchOrganizationsListOKBodyDataItems0 struct {

	// id
	ID int32 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// organization name
	OrganizationName string `json:"organizationName,omitempty"`
}

// Validate validates this search organizations list o k body data items0
func (o *SearchOrganizationsListOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search organizations list o k body data items0 based on context it is used
func (o *SearchOrganizationsListOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchOrganizationsListOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchOrganizationsListOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res SearchOrganizationsListOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchOrganizationsListUnauthorizedBody search organizations list unauthorized body
swagger:model SearchOrganizationsListUnauthorizedBody
*/
type SearchOrganizationsListUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search organizations list unauthorized body
func (o *SearchOrganizationsListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search organizations list unauthorized body based on context it is used
func (o *SearchOrganizationsListUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchOrganizationsListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchOrganizationsListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res SearchOrganizationsListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
