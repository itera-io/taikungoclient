// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SearchAccessProfilesListReader is a Reader for the SearchAccessProfilesList structure.
type SearchAccessProfilesListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchAccessProfilesListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchAccessProfilesListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchAccessProfilesListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchAccessProfilesListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchAccessProfilesListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchAccessProfilesListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchAccessProfilesListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchAccessProfilesListOK creates a SearchAccessProfilesListOK with default headers values
func NewSearchAccessProfilesListOK() *SearchAccessProfilesListOK {
	return &SearchAccessProfilesListOK{}
}

/*
SearchAccessProfilesListOK describes a response with status code 200, with default header values.

Success
*/
type SearchAccessProfilesListOK struct {
	Payload *SearchAccessProfilesListOKBody
}

// IsSuccess returns true when this search access profiles list o k response has a 2xx status code
func (o *SearchAccessProfilesListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search access profiles list o k response has a 3xx status code
func (o *SearchAccessProfilesListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search access profiles list o k response has a 4xx status code
func (o *SearchAccessProfilesListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search access profiles list o k response has a 5xx status code
func (o *SearchAccessProfilesListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search access profiles list o k response a status code equal to that given
func (o *SearchAccessProfilesListOK) IsCode(code int) bool {
	return code == 200
}

func (o *SearchAccessProfilesListOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/access-profiles][%d] searchAccessProfilesListOK  %+v", 200, o.Payload)
}

func (o *SearchAccessProfilesListOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/access-profiles][%d] searchAccessProfilesListOK  %+v", 200, o.Payload)
}

func (o *SearchAccessProfilesListOK) GetPayload() *SearchAccessProfilesListOKBody {
	return o.Payload
}

func (o *SearchAccessProfilesListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchAccessProfilesListOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchAccessProfilesListBadRequest creates a SearchAccessProfilesListBadRequest with default headers values
func NewSearchAccessProfilesListBadRequest() *SearchAccessProfilesListBadRequest {
	return &SearchAccessProfilesListBadRequest{}
}

/*
SearchAccessProfilesListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SearchAccessProfilesListBadRequest struct {
	Payload []*SearchAccessProfilesListBadRequestBodyItems0
}

// IsSuccess returns true when this search access profiles list bad request response has a 2xx status code
func (o *SearchAccessProfilesListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search access profiles list bad request response has a 3xx status code
func (o *SearchAccessProfilesListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search access profiles list bad request response has a 4xx status code
func (o *SearchAccessProfilesListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search access profiles list bad request response has a 5xx status code
func (o *SearchAccessProfilesListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search access profiles list bad request response a status code equal to that given
func (o *SearchAccessProfilesListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SearchAccessProfilesListBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/access-profiles][%d] searchAccessProfilesListBadRequest  %+v", 400, o.Payload)
}

func (o *SearchAccessProfilesListBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/access-profiles][%d] searchAccessProfilesListBadRequest  %+v", 400, o.Payload)
}

func (o *SearchAccessProfilesListBadRequest) GetPayload() []*SearchAccessProfilesListBadRequestBodyItems0 {
	return o.Payload
}

func (o *SearchAccessProfilesListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchAccessProfilesListUnauthorized creates a SearchAccessProfilesListUnauthorized with default headers values
func NewSearchAccessProfilesListUnauthorized() *SearchAccessProfilesListUnauthorized {
	return &SearchAccessProfilesListUnauthorized{}
}

/*
SearchAccessProfilesListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SearchAccessProfilesListUnauthorized struct {
	Payload *SearchAccessProfilesListUnauthorizedBody
}

// IsSuccess returns true when this search access profiles list unauthorized response has a 2xx status code
func (o *SearchAccessProfilesListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search access profiles list unauthorized response has a 3xx status code
func (o *SearchAccessProfilesListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search access profiles list unauthorized response has a 4xx status code
func (o *SearchAccessProfilesListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this search access profiles list unauthorized response has a 5xx status code
func (o *SearchAccessProfilesListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this search access profiles list unauthorized response a status code equal to that given
func (o *SearchAccessProfilesListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SearchAccessProfilesListUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/access-profiles][%d] searchAccessProfilesListUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchAccessProfilesListUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/access-profiles][%d] searchAccessProfilesListUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchAccessProfilesListUnauthorized) GetPayload() *SearchAccessProfilesListUnauthorizedBody {
	return o.Payload
}

func (o *SearchAccessProfilesListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchAccessProfilesListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchAccessProfilesListForbidden creates a SearchAccessProfilesListForbidden with default headers values
func NewSearchAccessProfilesListForbidden() *SearchAccessProfilesListForbidden {
	return &SearchAccessProfilesListForbidden{}
}

/*
SearchAccessProfilesListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SearchAccessProfilesListForbidden struct {
	Payload *SearchAccessProfilesListForbiddenBody
}

// IsSuccess returns true when this search access profiles list forbidden response has a 2xx status code
func (o *SearchAccessProfilesListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search access profiles list forbidden response has a 3xx status code
func (o *SearchAccessProfilesListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search access profiles list forbidden response has a 4xx status code
func (o *SearchAccessProfilesListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this search access profiles list forbidden response has a 5xx status code
func (o *SearchAccessProfilesListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this search access profiles list forbidden response a status code equal to that given
func (o *SearchAccessProfilesListForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SearchAccessProfilesListForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/access-profiles][%d] searchAccessProfilesListForbidden  %+v", 403, o.Payload)
}

func (o *SearchAccessProfilesListForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/access-profiles][%d] searchAccessProfilesListForbidden  %+v", 403, o.Payload)
}

func (o *SearchAccessProfilesListForbidden) GetPayload() *SearchAccessProfilesListForbiddenBody {
	return o.Payload
}

func (o *SearchAccessProfilesListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchAccessProfilesListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchAccessProfilesListNotFound creates a SearchAccessProfilesListNotFound with default headers values
func NewSearchAccessProfilesListNotFound() *SearchAccessProfilesListNotFound {
	return &SearchAccessProfilesListNotFound{}
}

/*
SearchAccessProfilesListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SearchAccessProfilesListNotFound struct {
	Payload *SearchAccessProfilesListNotFoundBody
}

// IsSuccess returns true when this search access profiles list not found response has a 2xx status code
func (o *SearchAccessProfilesListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search access profiles list not found response has a 3xx status code
func (o *SearchAccessProfilesListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search access profiles list not found response has a 4xx status code
func (o *SearchAccessProfilesListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this search access profiles list not found response has a 5xx status code
func (o *SearchAccessProfilesListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this search access profiles list not found response a status code equal to that given
func (o *SearchAccessProfilesListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SearchAccessProfilesListNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/access-profiles][%d] searchAccessProfilesListNotFound  %+v", 404, o.Payload)
}

func (o *SearchAccessProfilesListNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/access-profiles][%d] searchAccessProfilesListNotFound  %+v", 404, o.Payload)
}

func (o *SearchAccessProfilesListNotFound) GetPayload() *SearchAccessProfilesListNotFoundBody {
	return o.Payload
}

func (o *SearchAccessProfilesListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchAccessProfilesListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchAccessProfilesListInternalServerError creates a SearchAccessProfilesListInternalServerError with default headers values
func NewSearchAccessProfilesListInternalServerError() *SearchAccessProfilesListInternalServerError {
	return &SearchAccessProfilesListInternalServerError{}
}

/*
SearchAccessProfilesListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type SearchAccessProfilesListInternalServerError struct {
}

// IsSuccess returns true when this search access profiles list internal server error response has a 2xx status code
func (o *SearchAccessProfilesListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search access profiles list internal server error response has a 3xx status code
func (o *SearchAccessProfilesListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search access profiles list internal server error response has a 4xx status code
func (o *SearchAccessProfilesListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search access profiles list internal server error response has a 5xx status code
func (o *SearchAccessProfilesListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search access profiles list internal server error response a status code equal to that given
func (o *SearchAccessProfilesListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SearchAccessProfilesListInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/access-profiles][%d] searchAccessProfilesListInternalServerError ", 500)
}

func (o *SearchAccessProfilesListInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/access-profiles][%d] searchAccessProfilesListInternalServerError ", 500)
}

func (o *SearchAccessProfilesListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
SearchAccessProfilesListBadRequestBodyItems0 search access profiles list bad request body items0
swagger:model SearchAccessProfilesListBadRequestBodyItems0
*/
type SearchAccessProfilesListBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this search access profiles list bad request body items0
func (o *SearchAccessProfilesListBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search access profiles list bad request body items0 based on context it is used
func (o *SearchAccessProfilesListBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchAccessProfilesListBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchAccessProfilesListBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res SearchAccessProfilesListBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchAccessProfilesListBody search access profiles list body
swagger:model SearchAccessProfilesListBody
*/
type SearchAccessProfilesListBody struct {

	// limit
	Limit int32 `json:"limit,omitempty"`

	// offset
	Offset int32 `json:"offset,omitempty"`

	// search term
	SearchTerm string `json:"searchTerm,omitempty"`
}

// Validate validates this search access profiles list body
func (o *SearchAccessProfilesListBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search access profiles list body based on context it is used
func (o *SearchAccessProfilesListBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchAccessProfilesListBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchAccessProfilesListBody) UnmarshalBinary(b []byte) error {
	var res SearchAccessProfilesListBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchAccessProfilesListForbiddenBody search access profiles list forbidden body
swagger:model SearchAccessProfilesListForbiddenBody
*/
type SearchAccessProfilesListForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search access profiles list forbidden body
func (o *SearchAccessProfilesListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search access profiles list forbidden body based on context it is used
func (o *SearchAccessProfilesListForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchAccessProfilesListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchAccessProfilesListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res SearchAccessProfilesListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchAccessProfilesListNotFoundBody search access profiles list not found body
swagger:model SearchAccessProfilesListNotFoundBody
*/
type SearchAccessProfilesListNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search access profiles list not found body
func (o *SearchAccessProfilesListNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search access profiles list not found body based on context it is used
func (o *SearchAccessProfilesListNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchAccessProfilesListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchAccessProfilesListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res SearchAccessProfilesListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchAccessProfilesListOKBody search access profiles list o k body
swagger:model SearchAccessProfilesListOKBody
*/
type SearchAccessProfilesListOKBody struct {

	// data
	Data []*SearchAccessProfilesListOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this search access profiles list o k body
func (o *SearchAccessProfilesListOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SearchAccessProfilesListOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("searchAccessProfilesListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("searchAccessProfilesListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this search access profiles list o k body based on the context it is used
func (o *SearchAccessProfilesListOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SearchAccessProfilesListOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("searchAccessProfilesListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("searchAccessProfilesListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *SearchAccessProfilesListOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchAccessProfilesListOKBody) UnmarshalBinary(b []byte) error {
	var res SearchAccessProfilesListOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchAccessProfilesListOKBodyDataItems0 search access profiles list o k body data items0
swagger:model SearchAccessProfilesListOKBodyDataItems0
*/
type SearchAccessProfilesListOKBodyDataItems0 struct {

	// id
	ID int32 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// organization name
	OrganizationName string `json:"organizationName,omitempty"`
}

// Validate validates this search access profiles list o k body data items0
func (o *SearchAccessProfilesListOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search access profiles list o k body data items0 based on context it is used
func (o *SearchAccessProfilesListOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchAccessProfilesListOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchAccessProfilesListOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res SearchAccessProfilesListOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchAccessProfilesListUnauthorizedBody search access profiles list unauthorized body
swagger:model SearchAccessProfilesListUnauthorizedBody
*/
type SearchAccessProfilesListUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search access profiles list unauthorized body
func (o *SearchAccessProfilesListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search access profiles list unauthorized body based on context it is used
func (o *SearchAccessProfilesListUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchAccessProfilesListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchAccessProfilesListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res SearchAccessProfilesListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
