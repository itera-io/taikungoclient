// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// SearchDaemonSetListReader is a Reader for the SearchDaemonSetList structure.
type SearchDaemonSetListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchDaemonSetListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchDaemonSetListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchDaemonSetListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchDaemonSetListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchDaemonSetListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchDaemonSetListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchDaemonSetListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchDaemonSetListOK creates a SearchDaemonSetListOK with default headers values
func NewSearchDaemonSetListOK() *SearchDaemonSetListOK {
	return &SearchDaemonSetListOK{}
}

/* SearchDaemonSetListOK describes a response with status code 200, with default header values.

Success
*/
type SearchDaemonSetListOK struct {
	Payload *models.DaemonSetSearchList
}

func (o *SearchDaemonSetListOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/daemon-sets][%d] searchDaemonSetListOK  %+v", 200, o.Payload)
}
func (o *SearchDaemonSetListOK) GetPayload() *models.DaemonSetSearchList {
	return o.Payload
}

func (o *SearchDaemonSetListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DaemonSetSearchList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchDaemonSetListBadRequest creates a SearchDaemonSetListBadRequest with default headers values
func NewSearchDaemonSetListBadRequest() *SearchDaemonSetListBadRequest {
	return &SearchDaemonSetListBadRequest{}
}

/* SearchDaemonSetListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SearchDaemonSetListBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *SearchDaemonSetListBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/daemon-sets][%d] searchDaemonSetListBadRequest  %+v", 400, o.Payload)
}
func (o *SearchDaemonSetListBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *SearchDaemonSetListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchDaemonSetListUnauthorized creates a SearchDaemonSetListUnauthorized with default headers values
func NewSearchDaemonSetListUnauthorized() *SearchDaemonSetListUnauthorized {
	return &SearchDaemonSetListUnauthorized{}
}

/* SearchDaemonSetListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SearchDaemonSetListUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *SearchDaemonSetListUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/daemon-sets][%d] searchDaemonSetListUnauthorized  %+v", 401, o.Payload)
}
func (o *SearchDaemonSetListUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SearchDaemonSetListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchDaemonSetListForbidden creates a SearchDaemonSetListForbidden with default headers values
func NewSearchDaemonSetListForbidden() *SearchDaemonSetListForbidden {
	return &SearchDaemonSetListForbidden{}
}

/* SearchDaemonSetListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SearchDaemonSetListForbidden struct {
	Payload *models.ProblemDetails
}

func (o *SearchDaemonSetListForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/daemon-sets][%d] searchDaemonSetListForbidden  %+v", 403, o.Payload)
}
func (o *SearchDaemonSetListForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SearchDaemonSetListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchDaemonSetListNotFound creates a SearchDaemonSetListNotFound with default headers values
func NewSearchDaemonSetListNotFound() *SearchDaemonSetListNotFound {
	return &SearchDaemonSetListNotFound{}
}

/* SearchDaemonSetListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SearchDaemonSetListNotFound struct {
	Payload *models.ProblemDetails
}

func (o *SearchDaemonSetListNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/daemon-sets][%d] searchDaemonSetListNotFound  %+v", 404, o.Payload)
}
func (o *SearchDaemonSetListNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SearchDaemonSetListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchDaemonSetListInternalServerError creates a SearchDaemonSetListInternalServerError with default headers values
func NewSearchDaemonSetListInternalServerError() *SearchDaemonSetListInternalServerError {
	return &SearchDaemonSetListInternalServerError{}
}

/* SearchDaemonSetListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type SearchDaemonSetListInternalServerError struct {
}

func (o *SearchDaemonSetListInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/daemon-sets][%d] searchDaemonSetListInternalServerError ", 500)
}

func (o *SearchDaemonSetListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
