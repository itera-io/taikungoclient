// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SearchDeploymentListReader is a Reader for the SearchDeploymentList structure.
type SearchDeploymentListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchDeploymentListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchDeploymentListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchDeploymentListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchDeploymentListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchDeploymentListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchDeploymentListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchDeploymentListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchDeploymentListOK creates a SearchDeploymentListOK with default headers values
func NewSearchDeploymentListOK() *SearchDeploymentListOK {
	return &SearchDeploymentListOK{}
}

/*
SearchDeploymentListOK describes a response with status code 200, with default header values.

Success
*/
type SearchDeploymentListOK struct {
	Payload *SearchDeploymentListOKBody
}

// IsSuccess returns true when this search deployment list o k response has a 2xx status code
func (o *SearchDeploymentListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search deployment list o k response has a 3xx status code
func (o *SearchDeploymentListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search deployment list o k response has a 4xx status code
func (o *SearchDeploymentListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search deployment list o k response has a 5xx status code
func (o *SearchDeploymentListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search deployment list o k response a status code equal to that given
func (o *SearchDeploymentListOK) IsCode(code int) bool {
	return code == 200
}

func (o *SearchDeploymentListOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/deployments][%d] searchDeploymentListOK  %+v", 200, o.Payload)
}

func (o *SearchDeploymentListOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/deployments][%d] searchDeploymentListOK  %+v", 200, o.Payload)
}

func (o *SearchDeploymentListOK) GetPayload() *SearchDeploymentListOKBody {
	return o.Payload
}

func (o *SearchDeploymentListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchDeploymentListOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchDeploymentListBadRequest creates a SearchDeploymentListBadRequest with default headers values
func NewSearchDeploymentListBadRequest() *SearchDeploymentListBadRequest {
	return &SearchDeploymentListBadRequest{}
}

/*
SearchDeploymentListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SearchDeploymentListBadRequest struct {
	Payload []*SearchDeploymentListBadRequestBodyItems0
}

// IsSuccess returns true when this search deployment list bad request response has a 2xx status code
func (o *SearchDeploymentListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search deployment list bad request response has a 3xx status code
func (o *SearchDeploymentListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search deployment list bad request response has a 4xx status code
func (o *SearchDeploymentListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search deployment list bad request response has a 5xx status code
func (o *SearchDeploymentListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search deployment list bad request response a status code equal to that given
func (o *SearchDeploymentListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SearchDeploymentListBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/deployments][%d] searchDeploymentListBadRequest  %+v", 400, o.Payload)
}

func (o *SearchDeploymentListBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/deployments][%d] searchDeploymentListBadRequest  %+v", 400, o.Payload)
}

func (o *SearchDeploymentListBadRequest) GetPayload() []*SearchDeploymentListBadRequestBodyItems0 {
	return o.Payload
}

func (o *SearchDeploymentListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchDeploymentListUnauthorized creates a SearchDeploymentListUnauthorized with default headers values
func NewSearchDeploymentListUnauthorized() *SearchDeploymentListUnauthorized {
	return &SearchDeploymentListUnauthorized{}
}

/*
SearchDeploymentListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SearchDeploymentListUnauthorized struct {
	Payload *SearchDeploymentListUnauthorizedBody
}

// IsSuccess returns true when this search deployment list unauthorized response has a 2xx status code
func (o *SearchDeploymentListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search deployment list unauthorized response has a 3xx status code
func (o *SearchDeploymentListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search deployment list unauthorized response has a 4xx status code
func (o *SearchDeploymentListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this search deployment list unauthorized response has a 5xx status code
func (o *SearchDeploymentListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this search deployment list unauthorized response a status code equal to that given
func (o *SearchDeploymentListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SearchDeploymentListUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/deployments][%d] searchDeploymentListUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchDeploymentListUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/deployments][%d] searchDeploymentListUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchDeploymentListUnauthorized) GetPayload() *SearchDeploymentListUnauthorizedBody {
	return o.Payload
}

func (o *SearchDeploymentListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchDeploymentListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchDeploymentListForbidden creates a SearchDeploymentListForbidden with default headers values
func NewSearchDeploymentListForbidden() *SearchDeploymentListForbidden {
	return &SearchDeploymentListForbidden{}
}

/*
SearchDeploymentListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SearchDeploymentListForbidden struct {
	Payload *SearchDeploymentListForbiddenBody
}

// IsSuccess returns true when this search deployment list forbidden response has a 2xx status code
func (o *SearchDeploymentListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search deployment list forbidden response has a 3xx status code
func (o *SearchDeploymentListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search deployment list forbidden response has a 4xx status code
func (o *SearchDeploymentListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this search deployment list forbidden response has a 5xx status code
func (o *SearchDeploymentListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this search deployment list forbidden response a status code equal to that given
func (o *SearchDeploymentListForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SearchDeploymentListForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/deployments][%d] searchDeploymentListForbidden  %+v", 403, o.Payload)
}

func (o *SearchDeploymentListForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/deployments][%d] searchDeploymentListForbidden  %+v", 403, o.Payload)
}

func (o *SearchDeploymentListForbidden) GetPayload() *SearchDeploymentListForbiddenBody {
	return o.Payload
}

func (o *SearchDeploymentListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchDeploymentListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchDeploymentListNotFound creates a SearchDeploymentListNotFound with default headers values
func NewSearchDeploymentListNotFound() *SearchDeploymentListNotFound {
	return &SearchDeploymentListNotFound{}
}

/*
SearchDeploymentListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SearchDeploymentListNotFound struct {
	Payload *SearchDeploymentListNotFoundBody
}

// IsSuccess returns true when this search deployment list not found response has a 2xx status code
func (o *SearchDeploymentListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search deployment list not found response has a 3xx status code
func (o *SearchDeploymentListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search deployment list not found response has a 4xx status code
func (o *SearchDeploymentListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this search deployment list not found response has a 5xx status code
func (o *SearchDeploymentListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this search deployment list not found response a status code equal to that given
func (o *SearchDeploymentListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SearchDeploymentListNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/deployments][%d] searchDeploymentListNotFound  %+v", 404, o.Payload)
}

func (o *SearchDeploymentListNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/deployments][%d] searchDeploymentListNotFound  %+v", 404, o.Payload)
}

func (o *SearchDeploymentListNotFound) GetPayload() *SearchDeploymentListNotFoundBody {
	return o.Payload
}

func (o *SearchDeploymentListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchDeploymentListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchDeploymentListInternalServerError creates a SearchDeploymentListInternalServerError with default headers values
func NewSearchDeploymentListInternalServerError() *SearchDeploymentListInternalServerError {
	return &SearchDeploymentListInternalServerError{}
}

/*
SearchDeploymentListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type SearchDeploymentListInternalServerError struct {
}

// IsSuccess returns true when this search deployment list internal server error response has a 2xx status code
func (o *SearchDeploymentListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search deployment list internal server error response has a 3xx status code
func (o *SearchDeploymentListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search deployment list internal server error response has a 4xx status code
func (o *SearchDeploymentListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search deployment list internal server error response has a 5xx status code
func (o *SearchDeploymentListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search deployment list internal server error response a status code equal to that given
func (o *SearchDeploymentListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SearchDeploymentListInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/deployments][%d] searchDeploymentListInternalServerError ", 500)
}

func (o *SearchDeploymentListInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/deployments][%d] searchDeploymentListInternalServerError ", 500)
}

func (o *SearchDeploymentListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
SearchDeploymentListBadRequestBodyItems0 search deployment list bad request body items0
swagger:model SearchDeploymentListBadRequestBodyItems0
*/
type SearchDeploymentListBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this search deployment list bad request body items0
func (o *SearchDeploymentListBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search deployment list bad request body items0 based on context it is used
func (o *SearchDeploymentListBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchDeploymentListBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchDeploymentListBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res SearchDeploymentListBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchDeploymentListBody search deployment list body
swagger:model SearchDeploymentListBody
*/
type SearchDeploymentListBody struct {

	// limit
	Limit int32 `json:"limit,omitempty"`

	// offset
	Offset int32 `json:"offset,omitempty"`

	// search term
	SearchTerm string `json:"searchTerm,omitempty"`
}

// Validate validates this search deployment list body
func (o *SearchDeploymentListBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search deployment list body based on context it is used
func (o *SearchDeploymentListBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchDeploymentListBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchDeploymentListBody) UnmarshalBinary(b []byte) error {
	var res SearchDeploymentListBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchDeploymentListForbiddenBody search deployment list forbidden body
swagger:model SearchDeploymentListForbiddenBody
*/
type SearchDeploymentListForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search deployment list forbidden body
func (o *SearchDeploymentListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search deployment list forbidden body based on context it is used
func (o *SearchDeploymentListForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchDeploymentListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchDeploymentListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res SearchDeploymentListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchDeploymentListNotFoundBody search deployment list not found body
swagger:model SearchDeploymentListNotFoundBody
*/
type SearchDeploymentListNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search deployment list not found body
func (o *SearchDeploymentListNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search deployment list not found body based on context it is used
func (o *SearchDeploymentListNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchDeploymentListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchDeploymentListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res SearchDeploymentListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchDeploymentListOKBody search deployment list o k body
swagger:model SearchDeploymentListOKBody
*/
type SearchDeploymentListOKBody struct {

	// data
	Data []*SearchDeploymentListOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this search deployment list o k body
func (o *SearchDeploymentListOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SearchDeploymentListOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("searchDeploymentListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("searchDeploymentListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this search deployment list o k body based on the context it is used
func (o *SearchDeploymentListOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SearchDeploymentListOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("searchDeploymentListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("searchDeploymentListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *SearchDeploymentListOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchDeploymentListOKBody) UnmarshalBinary(b []byte) error {
	var res SearchDeploymentListOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchDeploymentListOKBodyDataItems0 search deployment list o k body data items0
swagger:model SearchDeploymentListOKBodyDataItems0
*/
type SearchDeploymentListOKBodyDataItems0 struct {

	// metadata name
	MetadataName string `json:"metadataName,omitempty"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// organization name
	OrganizationName string `json:"organizationName,omitempty"`

	// project Id
	ProjectID int32 `json:"projectId,omitempty"`

	// project name
	ProjectName string `json:"projectName,omitempty"`
}

// Validate validates this search deployment list o k body data items0
func (o *SearchDeploymentListOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search deployment list o k body data items0 based on context it is used
func (o *SearchDeploymentListOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchDeploymentListOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchDeploymentListOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res SearchDeploymentListOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchDeploymentListUnauthorizedBody search deployment list unauthorized body
swagger:model SearchDeploymentListUnauthorizedBody
*/
type SearchDeploymentListUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search deployment list unauthorized body
func (o *SearchDeploymentListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search deployment list unauthorized body based on context it is used
func (o *SearchDeploymentListUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchDeploymentListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchDeploymentListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res SearchDeploymentListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
