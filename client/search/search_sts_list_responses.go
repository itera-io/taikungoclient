// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// SearchStsListReader is a Reader for the SearchStsList structure.
type SearchStsListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchStsListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchStsListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchStsListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchStsListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchStsListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchStsListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSearchStsListTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchStsListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchStsListOK creates a SearchStsListOK with default headers values
func NewSearchStsListOK() *SearchStsListOK {
	return &SearchStsListOK{}
}

/* SearchStsListOK describes a response with status code 200, with default header values.

Success
*/
type SearchStsListOK struct {
	Payload *models.StsSearchList
}

func (o *SearchStsListOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/sts][%d] searchStsListOK  %+v", 200, o.Payload)
}
func (o *SearchStsListOK) GetPayload() *models.StsSearchList {
	return o.Payload
}

func (o *SearchStsListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StsSearchList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchStsListBadRequest creates a SearchStsListBadRequest with default headers values
func NewSearchStsListBadRequest() *SearchStsListBadRequest {
	return &SearchStsListBadRequest{}
}

/* SearchStsListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SearchStsListBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *SearchStsListBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/sts][%d] searchStsListBadRequest  %+v", 400, o.Payload)
}
func (o *SearchStsListBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *SearchStsListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchStsListUnauthorized creates a SearchStsListUnauthorized with default headers values
func NewSearchStsListUnauthorized() *SearchStsListUnauthorized {
	return &SearchStsListUnauthorized{}
}

/* SearchStsListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SearchStsListUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *SearchStsListUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/sts][%d] searchStsListUnauthorized  %+v", 401, o.Payload)
}
func (o *SearchStsListUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SearchStsListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchStsListForbidden creates a SearchStsListForbidden with default headers values
func NewSearchStsListForbidden() *SearchStsListForbidden {
	return &SearchStsListForbidden{}
}

/* SearchStsListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SearchStsListForbidden struct {
	Payload *models.ProblemDetails
}

func (o *SearchStsListForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/sts][%d] searchStsListForbidden  %+v", 403, o.Payload)
}
func (o *SearchStsListForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SearchStsListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchStsListNotFound creates a SearchStsListNotFound with default headers values
func NewSearchStsListNotFound() *SearchStsListNotFound {
	return &SearchStsListNotFound{}
}

/* SearchStsListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SearchStsListNotFound struct {
	Payload *models.ProblemDetails
}

func (o *SearchStsListNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/sts][%d] searchStsListNotFound  %+v", 404, o.Payload)
}
func (o *SearchStsListNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SearchStsListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchStsListTooManyRequests creates a SearchStsListTooManyRequests with default headers values
func NewSearchStsListTooManyRequests() *SearchStsListTooManyRequests {
	return &SearchStsListTooManyRequests{}
}

/* SearchStsListTooManyRequests describes a response with status code 429, with default header values.

Client Error
*/
type SearchStsListTooManyRequests struct {
	Payload *models.ProblemDetails
}

func (o *SearchStsListTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/sts][%d] searchStsListTooManyRequests  %+v", 429, o.Payload)
}
func (o *SearchStsListTooManyRequests) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SearchStsListTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchStsListInternalServerError creates a SearchStsListInternalServerError with default headers values
func NewSearchStsListInternalServerError() *SearchStsListInternalServerError {
	return &SearchStsListInternalServerError{}
}

/* SearchStsListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type SearchStsListInternalServerError struct {
}

func (o *SearchStsListInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/sts][%d] searchStsListInternalServerError ", 500)
}

func (o *SearchStsListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
