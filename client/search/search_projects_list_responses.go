// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SearchProjectsListReader is a Reader for the SearchProjectsList structure.
type SearchProjectsListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchProjectsListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchProjectsListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchProjectsListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchProjectsListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchProjectsListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchProjectsListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchProjectsListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchProjectsListOK creates a SearchProjectsListOK with default headers values
func NewSearchProjectsListOK() *SearchProjectsListOK {
	return &SearchProjectsListOK{}
}

/*
SearchProjectsListOK describes a response with status code 200, with default header values.

Success
*/
type SearchProjectsListOK struct {
	Payload *SearchProjectsListOKBody
}

// IsSuccess returns true when this search projects list o k response has a 2xx status code
func (o *SearchProjectsListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search projects list o k response has a 3xx status code
func (o *SearchProjectsListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search projects list o k response has a 4xx status code
func (o *SearchProjectsListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search projects list o k response has a 5xx status code
func (o *SearchProjectsListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search projects list o k response a status code equal to that given
func (o *SearchProjectsListOK) IsCode(code int) bool {
	return code == 200
}

func (o *SearchProjectsListOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/projects][%d] searchProjectsListOK  %+v", 200, o.Payload)
}

func (o *SearchProjectsListOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/projects][%d] searchProjectsListOK  %+v", 200, o.Payload)
}

func (o *SearchProjectsListOK) GetPayload() *SearchProjectsListOKBody {
	return o.Payload
}

func (o *SearchProjectsListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchProjectsListOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchProjectsListBadRequest creates a SearchProjectsListBadRequest with default headers values
func NewSearchProjectsListBadRequest() *SearchProjectsListBadRequest {
	return &SearchProjectsListBadRequest{}
}

/*
SearchProjectsListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SearchProjectsListBadRequest struct {
	Payload []*SearchProjectsListBadRequestBodyItems0
}

// IsSuccess returns true when this search projects list bad request response has a 2xx status code
func (o *SearchProjectsListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search projects list bad request response has a 3xx status code
func (o *SearchProjectsListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search projects list bad request response has a 4xx status code
func (o *SearchProjectsListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search projects list bad request response has a 5xx status code
func (o *SearchProjectsListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search projects list bad request response a status code equal to that given
func (o *SearchProjectsListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SearchProjectsListBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/projects][%d] searchProjectsListBadRequest  %+v", 400, o.Payload)
}

func (o *SearchProjectsListBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/projects][%d] searchProjectsListBadRequest  %+v", 400, o.Payload)
}

func (o *SearchProjectsListBadRequest) GetPayload() []*SearchProjectsListBadRequestBodyItems0 {
	return o.Payload
}

func (o *SearchProjectsListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchProjectsListUnauthorized creates a SearchProjectsListUnauthorized with default headers values
func NewSearchProjectsListUnauthorized() *SearchProjectsListUnauthorized {
	return &SearchProjectsListUnauthorized{}
}

/*
SearchProjectsListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SearchProjectsListUnauthorized struct {
	Payload *SearchProjectsListUnauthorizedBody
}

// IsSuccess returns true when this search projects list unauthorized response has a 2xx status code
func (o *SearchProjectsListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search projects list unauthorized response has a 3xx status code
func (o *SearchProjectsListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search projects list unauthorized response has a 4xx status code
func (o *SearchProjectsListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this search projects list unauthorized response has a 5xx status code
func (o *SearchProjectsListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this search projects list unauthorized response a status code equal to that given
func (o *SearchProjectsListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SearchProjectsListUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/projects][%d] searchProjectsListUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchProjectsListUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/projects][%d] searchProjectsListUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchProjectsListUnauthorized) GetPayload() *SearchProjectsListUnauthorizedBody {
	return o.Payload
}

func (o *SearchProjectsListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchProjectsListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchProjectsListForbidden creates a SearchProjectsListForbidden with default headers values
func NewSearchProjectsListForbidden() *SearchProjectsListForbidden {
	return &SearchProjectsListForbidden{}
}

/*
SearchProjectsListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SearchProjectsListForbidden struct {
	Payload *SearchProjectsListForbiddenBody
}

// IsSuccess returns true when this search projects list forbidden response has a 2xx status code
func (o *SearchProjectsListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search projects list forbidden response has a 3xx status code
func (o *SearchProjectsListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search projects list forbidden response has a 4xx status code
func (o *SearchProjectsListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this search projects list forbidden response has a 5xx status code
func (o *SearchProjectsListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this search projects list forbidden response a status code equal to that given
func (o *SearchProjectsListForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SearchProjectsListForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/projects][%d] searchProjectsListForbidden  %+v", 403, o.Payload)
}

func (o *SearchProjectsListForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/projects][%d] searchProjectsListForbidden  %+v", 403, o.Payload)
}

func (o *SearchProjectsListForbidden) GetPayload() *SearchProjectsListForbiddenBody {
	return o.Payload
}

func (o *SearchProjectsListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchProjectsListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchProjectsListNotFound creates a SearchProjectsListNotFound with default headers values
func NewSearchProjectsListNotFound() *SearchProjectsListNotFound {
	return &SearchProjectsListNotFound{}
}

/*
SearchProjectsListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SearchProjectsListNotFound struct {
	Payload *SearchProjectsListNotFoundBody
}

// IsSuccess returns true when this search projects list not found response has a 2xx status code
func (o *SearchProjectsListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search projects list not found response has a 3xx status code
func (o *SearchProjectsListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search projects list not found response has a 4xx status code
func (o *SearchProjectsListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this search projects list not found response has a 5xx status code
func (o *SearchProjectsListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this search projects list not found response a status code equal to that given
func (o *SearchProjectsListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SearchProjectsListNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/projects][%d] searchProjectsListNotFound  %+v", 404, o.Payload)
}

func (o *SearchProjectsListNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/projects][%d] searchProjectsListNotFound  %+v", 404, o.Payload)
}

func (o *SearchProjectsListNotFound) GetPayload() *SearchProjectsListNotFoundBody {
	return o.Payload
}

func (o *SearchProjectsListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchProjectsListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchProjectsListInternalServerError creates a SearchProjectsListInternalServerError with default headers values
func NewSearchProjectsListInternalServerError() *SearchProjectsListInternalServerError {
	return &SearchProjectsListInternalServerError{}
}

/*
SearchProjectsListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type SearchProjectsListInternalServerError struct {
}

// IsSuccess returns true when this search projects list internal server error response has a 2xx status code
func (o *SearchProjectsListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search projects list internal server error response has a 3xx status code
func (o *SearchProjectsListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search projects list internal server error response has a 4xx status code
func (o *SearchProjectsListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search projects list internal server error response has a 5xx status code
func (o *SearchProjectsListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search projects list internal server error response a status code equal to that given
func (o *SearchProjectsListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SearchProjectsListInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/projects][%d] searchProjectsListInternalServerError ", 500)
}

func (o *SearchProjectsListInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/projects][%d] searchProjectsListInternalServerError ", 500)
}

func (o *SearchProjectsListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
SearchProjectsListBadRequestBodyItems0 search projects list bad request body items0
swagger:model SearchProjectsListBadRequestBodyItems0
*/
type SearchProjectsListBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this search projects list bad request body items0
func (o *SearchProjectsListBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search projects list bad request body items0 based on context it is used
func (o *SearchProjectsListBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchProjectsListBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchProjectsListBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res SearchProjectsListBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchProjectsListBody search projects list body
swagger:model SearchProjectsListBody
*/
type SearchProjectsListBody struct {

	// limit
	Limit int32 `json:"limit,omitempty"`

	// offset
	Offset int32 `json:"offset,omitempty"`

	// search term
	SearchTerm string `json:"searchTerm,omitempty"`
}

// Validate validates this search projects list body
func (o *SearchProjectsListBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search projects list body based on context it is used
func (o *SearchProjectsListBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchProjectsListBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchProjectsListBody) UnmarshalBinary(b []byte) error {
	var res SearchProjectsListBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchProjectsListForbiddenBody search projects list forbidden body
swagger:model SearchProjectsListForbiddenBody
*/
type SearchProjectsListForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search projects list forbidden body
func (o *SearchProjectsListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search projects list forbidden body based on context it is used
func (o *SearchProjectsListForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchProjectsListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchProjectsListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res SearchProjectsListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchProjectsListNotFoundBody search projects list not found body
swagger:model SearchProjectsListNotFoundBody
*/
type SearchProjectsListNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search projects list not found body
func (o *SearchProjectsListNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search projects list not found body based on context it is used
func (o *SearchProjectsListNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchProjectsListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchProjectsListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res SearchProjectsListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchProjectsListOKBody search projects list o k body
swagger:model SearchProjectsListOKBody
*/
type SearchProjectsListOKBody struct {

	// data
	Data []*SearchProjectsListOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this search projects list o k body
func (o *SearchProjectsListOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SearchProjectsListOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("searchProjectsListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("searchProjectsListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this search projects list o k body based on the context it is used
func (o *SearchProjectsListOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SearchProjectsListOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("searchProjectsListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("searchProjectsListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *SearchProjectsListOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchProjectsListOKBody) UnmarshalBinary(b []byte) error {
	var res SearchProjectsListOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchProjectsListOKBodyDataItems0 search projects list o k body data items0
swagger:model SearchProjectsListOKBodyDataItems0
*/
type SearchProjectsListOKBodyDataItems0 struct {

	// id
	ID int32 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// organization name
	OrganizationName string `json:"organizationName,omitempty"`
}

// Validate validates this search projects list o k body data items0
func (o *SearchProjectsListOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search projects list o k body data items0 based on context it is used
func (o *SearchProjectsListOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchProjectsListOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchProjectsListOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res SearchProjectsListOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchProjectsListUnauthorizedBody search projects list unauthorized body
swagger:model SearchProjectsListUnauthorizedBody
*/
type SearchProjectsListUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search projects list unauthorized body
func (o *SearchProjectsListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search projects list unauthorized body based on context it is used
func (o *SearchProjectsListUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchProjectsListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchProjectsListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res SearchProjectsListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
