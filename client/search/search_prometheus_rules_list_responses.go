// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// SearchPrometheusRulesListReader is a Reader for the SearchPrometheusRulesList structure.
type SearchPrometheusRulesListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchPrometheusRulesListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchPrometheusRulesListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchPrometheusRulesListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchPrometheusRulesListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchPrometheusRulesListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchPrometheusRulesListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchPrometheusRulesListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchPrometheusRulesListOK creates a SearchPrometheusRulesListOK with default headers values
func NewSearchPrometheusRulesListOK() *SearchPrometheusRulesListOK {
	return &SearchPrometheusRulesListOK{}
}

/* SearchPrometheusRulesListOK describes a response with status code 200, with default header values.

Success
*/
type SearchPrometheusRulesListOK struct {
	Payload *models.PrometheusRulesSearchList
}

func (o *SearchPrometheusRulesListOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/prometheus-rules][%d] searchPrometheusRulesListOK  %+v", 200, o.Payload)
}
func (o *SearchPrometheusRulesListOK) GetPayload() *models.PrometheusRulesSearchList {
	return o.Payload
}

func (o *SearchPrometheusRulesListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PrometheusRulesSearchList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchPrometheusRulesListBadRequest creates a SearchPrometheusRulesListBadRequest with default headers values
func NewSearchPrometheusRulesListBadRequest() *SearchPrometheusRulesListBadRequest {
	return &SearchPrometheusRulesListBadRequest{}
}

/* SearchPrometheusRulesListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SearchPrometheusRulesListBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *SearchPrometheusRulesListBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/prometheus-rules][%d] searchPrometheusRulesListBadRequest  %+v", 400, o.Payload)
}
func (o *SearchPrometheusRulesListBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *SearchPrometheusRulesListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchPrometheusRulesListUnauthorized creates a SearchPrometheusRulesListUnauthorized with default headers values
func NewSearchPrometheusRulesListUnauthorized() *SearchPrometheusRulesListUnauthorized {
	return &SearchPrometheusRulesListUnauthorized{}
}

/* SearchPrometheusRulesListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SearchPrometheusRulesListUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *SearchPrometheusRulesListUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/prometheus-rules][%d] searchPrometheusRulesListUnauthorized  %+v", 401, o.Payload)
}
func (o *SearchPrometheusRulesListUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SearchPrometheusRulesListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchPrometheusRulesListForbidden creates a SearchPrometheusRulesListForbidden with default headers values
func NewSearchPrometheusRulesListForbidden() *SearchPrometheusRulesListForbidden {
	return &SearchPrometheusRulesListForbidden{}
}

/* SearchPrometheusRulesListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SearchPrometheusRulesListForbidden struct {
	Payload *models.ProblemDetails
}

func (o *SearchPrometheusRulesListForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/prometheus-rules][%d] searchPrometheusRulesListForbidden  %+v", 403, o.Payload)
}
func (o *SearchPrometheusRulesListForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SearchPrometheusRulesListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchPrometheusRulesListNotFound creates a SearchPrometheusRulesListNotFound with default headers values
func NewSearchPrometheusRulesListNotFound() *SearchPrometheusRulesListNotFound {
	return &SearchPrometheusRulesListNotFound{}
}

/* SearchPrometheusRulesListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SearchPrometheusRulesListNotFound struct {
	Payload *models.ProblemDetails
}

func (o *SearchPrometheusRulesListNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/prometheus-rules][%d] searchPrometheusRulesListNotFound  %+v", 404, o.Payload)
}
func (o *SearchPrometheusRulesListNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *SearchPrometheusRulesListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchPrometheusRulesListInternalServerError creates a SearchPrometheusRulesListInternalServerError with default headers values
func NewSearchPrometheusRulesListInternalServerError() *SearchPrometheusRulesListInternalServerError {
	return &SearchPrometheusRulesListInternalServerError{}
}

/* SearchPrometheusRulesListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type SearchPrometheusRulesListInternalServerError struct {
}

func (o *SearchPrometheusRulesListInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/prometheus-rules][%d] searchPrometheusRulesListInternalServerError ", 500)
}

func (o *SearchPrometheusRulesListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
