// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SearchUsersListReader is a Reader for the SearchUsersList structure.
type SearchUsersListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchUsersListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchUsersListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchUsersListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchUsersListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchUsersListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchUsersListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchUsersListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchUsersListOK creates a SearchUsersListOK with default headers values
func NewSearchUsersListOK() *SearchUsersListOK {
	return &SearchUsersListOK{}
}

/*
SearchUsersListOK describes a response with status code 200, with default header values.

Success
*/
type SearchUsersListOK struct {
	Payload *SearchUsersListOKBody
}

// IsSuccess returns true when this search users list o k response has a 2xx status code
func (o *SearchUsersListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search users list o k response has a 3xx status code
func (o *SearchUsersListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search users list o k response has a 4xx status code
func (o *SearchUsersListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search users list o k response has a 5xx status code
func (o *SearchUsersListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search users list o k response a status code equal to that given
func (o *SearchUsersListOK) IsCode(code int) bool {
	return code == 200
}

func (o *SearchUsersListOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/users][%d] searchUsersListOK  %+v", 200, o.Payload)
}

func (o *SearchUsersListOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/users][%d] searchUsersListOK  %+v", 200, o.Payload)
}

func (o *SearchUsersListOK) GetPayload() *SearchUsersListOKBody {
	return o.Payload
}

func (o *SearchUsersListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchUsersListOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchUsersListBadRequest creates a SearchUsersListBadRequest with default headers values
func NewSearchUsersListBadRequest() *SearchUsersListBadRequest {
	return &SearchUsersListBadRequest{}
}

/*
SearchUsersListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SearchUsersListBadRequest struct {
	Payload []*SearchUsersListBadRequestBodyItems0
}

// IsSuccess returns true when this search users list bad request response has a 2xx status code
func (o *SearchUsersListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search users list bad request response has a 3xx status code
func (o *SearchUsersListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search users list bad request response has a 4xx status code
func (o *SearchUsersListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search users list bad request response has a 5xx status code
func (o *SearchUsersListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search users list bad request response a status code equal to that given
func (o *SearchUsersListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SearchUsersListBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/users][%d] searchUsersListBadRequest  %+v", 400, o.Payload)
}

func (o *SearchUsersListBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/users][%d] searchUsersListBadRequest  %+v", 400, o.Payload)
}

func (o *SearchUsersListBadRequest) GetPayload() []*SearchUsersListBadRequestBodyItems0 {
	return o.Payload
}

func (o *SearchUsersListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchUsersListUnauthorized creates a SearchUsersListUnauthorized with default headers values
func NewSearchUsersListUnauthorized() *SearchUsersListUnauthorized {
	return &SearchUsersListUnauthorized{}
}

/*
SearchUsersListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SearchUsersListUnauthorized struct {
	Payload *SearchUsersListUnauthorizedBody
}

// IsSuccess returns true when this search users list unauthorized response has a 2xx status code
func (o *SearchUsersListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search users list unauthorized response has a 3xx status code
func (o *SearchUsersListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search users list unauthorized response has a 4xx status code
func (o *SearchUsersListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this search users list unauthorized response has a 5xx status code
func (o *SearchUsersListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this search users list unauthorized response a status code equal to that given
func (o *SearchUsersListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SearchUsersListUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/users][%d] searchUsersListUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchUsersListUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/users][%d] searchUsersListUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchUsersListUnauthorized) GetPayload() *SearchUsersListUnauthorizedBody {
	return o.Payload
}

func (o *SearchUsersListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchUsersListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchUsersListForbidden creates a SearchUsersListForbidden with default headers values
func NewSearchUsersListForbidden() *SearchUsersListForbidden {
	return &SearchUsersListForbidden{}
}

/*
SearchUsersListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SearchUsersListForbidden struct {
	Payload *SearchUsersListForbiddenBody
}

// IsSuccess returns true when this search users list forbidden response has a 2xx status code
func (o *SearchUsersListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search users list forbidden response has a 3xx status code
func (o *SearchUsersListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search users list forbidden response has a 4xx status code
func (o *SearchUsersListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this search users list forbidden response has a 5xx status code
func (o *SearchUsersListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this search users list forbidden response a status code equal to that given
func (o *SearchUsersListForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SearchUsersListForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/users][%d] searchUsersListForbidden  %+v", 403, o.Payload)
}

func (o *SearchUsersListForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/users][%d] searchUsersListForbidden  %+v", 403, o.Payload)
}

func (o *SearchUsersListForbidden) GetPayload() *SearchUsersListForbiddenBody {
	return o.Payload
}

func (o *SearchUsersListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchUsersListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchUsersListNotFound creates a SearchUsersListNotFound with default headers values
func NewSearchUsersListNotFound() *SearchUsersListNotFound {
	return &SearchUsersListNotFound{}
}

/*
SearchUsersListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SearchUsersListNotFound struct {
	Payload *SearchUsersListNotFoundBody
}

// IsSuccess returns true when this search users list not found response has a 2xx status code
func (o *SearchUsersListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search users list not found response has a 3xx status code
func (o *SearchUsersListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search users list not found response has a 4xx status code
func (o *SearchUsersListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this search users list not found response has a 5xx status code
func (o *SearchUsersListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this search users list not found response a status code equal to that given
func (o *SearchUsersListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SearchUsersListNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/users][%d] searchUsersListNotFound  %+v", 404, o.Payload)
}

func (o *SearchUsersListNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/users][%d] searchUsersListNotFound  %+v", 404, o.Payload)
}

func (o *SearchUsersListNotFound) GetPayload() *SearchUsersListNotFoundBody {
	return o.Payload
}

func (o *SearchUsersListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchUsersListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchUsersListInternalServerError creates a SearchUsersListInternalServerError with default headers values
func NewSearchUsersListInternalServerError() *SearchUsersListInternalServerError {
	return &SearchUsersListInternalServerError{}
}

/*
SearchUsersListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type SearchUsersListInternalServerError struct {
}

// IsSuccess returns true when this search users list internal server error response has a 2xx status code
func (o *SearchUsersListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search users list internal server error response has a 3xx status code
func (o *SearchUsersListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search users list internal server error response has a 4xx status code
func (o *SearchUsersListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search users list internal server error response has a 5xx status code
func (o *SearchUsersListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search users list internal server error response a status code equal to that given
func (o *SearchUsersListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SearchUsersListInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/users][%d] searchUsersListInternalServerError ", 500)
}

func (o *SearchUsersListInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/users][%d] searchUsersListInternalServerError ", 500)
}

func (o *SearchUsersListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
SearchUsersListBadRequestBodyItems0 search users list bad request body items0
swagger:model SearchUsersListBadRequestBodyItems0
*/
type SearchUsersListBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this search users list bad request body items0
func (o *SearchUsersListBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search users list bad request body items0 based on context it is used
func (o *SearchUsersListBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchUsersListBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchUsersListBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res SearchUsersListBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchUsersListBody search users list body
swagger:model SearchUsersListBody
*/
type SearchUsersListBody struct {

	// limit
	Limit int32 `json:"limit,omitempty"`

	// offset
	Offset int32 `json:"offset,omitempty"`

	// search term
	SearchTerm string `json:"searchTerm,omitempty"`
}

// Validate validates this search users list body
func (o *SearchUsersListBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search users list body based on context it is used
func (o *SearchUsersListBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchUsersListBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchUsersListBody) UnmarshalBinary(b []byte) error {
	var res SearchUsersListBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchUsersListForbiddenBody search users list forbidden body
swagger:model SearchUsersListForbiddenBody
*/
type SearchUsersListForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search users list forbidden body
func (o *SearchUsersListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search users list forbidden body based on context it is used
func (o *SearchUsersListForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchUsersListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchUsersListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res SearchUsersListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchUsersListNotFoundBody search users list not found body
swagger:model SearchUsersListNotFoundBody
*/
type SearchUsersListNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search users list not found body
func (o *SearchUsersListNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search users list not found body based on context it is used
func (o *SearchUsersListNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchUsersListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchUsersListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res SearchUsersListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchUsersListOKBody search users list o k body
swagger:model SearchUsersListOKBody
*/
type SearchUsersListOKBody struct {

	// data
	Data []*SearchUsersListOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this search users list o k body
func (o *SearchUsersListOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SearchUsersListOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("searchUsersListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("searchUsersListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this search users list o k body based on the context it is used
func (o *SearchUsersListOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SearchUsersListOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("searchUsersListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("searchUsersListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *SearchUsersListOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchUsersListOKBody) UnmarshalBinary(b []byte) error {
	var res SearchUsersListOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchUsersListOKBodyDataItems0 search users list o k body data items0
swagger:model SearchUsersListOKBodyDataItems0
*/
type SearchUsersListOKBodyDataItems0 struct {

	// email
	Email string `json:"email,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// organization name
	OrganizationName string `json:"organizationName,omitempty"`
}

// Validate validates this search users list o k body data items0
func (o *SearchUsersListOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search users list o k body data items0 based on context it is used
func (o *SearchUsersListOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchUsersListOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchUsersListOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res SearchUsersListOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchUsersListUnauthorizedBody search users list unauthorized body
swagger:model SearchUsersListUnauthorizedBody
*/
type SearchUsersListUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search users list unauthorized body
func (o *SearchUsersListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search users list unauthorized body based on context it is used
func (o *SearchUsersListUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchUsersListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchUsersListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res SearchUsersListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
