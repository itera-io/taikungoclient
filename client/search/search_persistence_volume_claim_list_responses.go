// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SearchPersistenceVolumeClaimListReader is a Reader for the SearchPersistenceVolumeClaimList structure.
type SearchPersistenceVolumeClaimListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchPersistenceVolumeClaimListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchPersistenceVolumeClaimListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchPersistenceVolumeClaimListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchPersistenceVolumeClaimListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchPersistenceVolumeClaimListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchPersistenceVolumeClaimListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchPersistenceVolumeClaimListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchPersistenceVolumeClaimListOK creates a SearchPersistenceVolumeClaimListOK with default headers values
func NewSearchPersistenceVolumeClaimListOK() *SearchPersistenceVolumeClaimListOK {
	return &SearchPersistenceVolumeClaimListOK{}
}

/*
SearchPersistenceVolumeClaimListOK describes a response with status code 200, with default header values.

Success
*/
type SearchPersistenceVolumeClaimListOK struct {
	Payload *SearchPersistenceVolumeClaimListOKBody
}

// IsSuccess returns true when this search persistence volume claim list o k response has a 2xx status code
func (o *SearchPersistenceVolumeClaimListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search persistence volume claim list o k response has a 3xx status code
func (o *SearchPersistenceVolumeClaimListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search persistence volume claim list o k response has a 4xx status code
func (o *SearchPersistenceVolumeClaimListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search persistence volume claim list o k response has a 5xx status code
func (o *SearchPersistenceVolumeClaimListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search persistence volume claim list o k response a status code equal to that given
func (o *SearchPersistenceVolumeClaimListOK) IsCode(code int) bool {
	return code == 200
}

func (o *SearchPersistenceVolumeClaimListOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/pvcs][%d] searchPersistenceVolumeClaimListOK  %+v", 200, o.Payload)
}

func (o *SearchPersistenceVolumeClaimListOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/pvcs][%d] searchPersistenceVolumeClaimListOK  %+v", 200, o.Payload)
}

func (o *SearchPersistenceVolumeClaimListOK) GetPayload() *SearchPersistenceVolumeClaimListOKBody {
	return o.Payload
}

func (o *SearchPersistenceVolumeClaimListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchPersistenceVolumeClaimListOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchPersistenceVolumeClaimListBadRequest creates a SearchPersistenceVolumeClaimListBadRequest with default headers values
func NewSearchPersistenceVolumeClaimListBadRequest() *SearchPersistenceVolumeClaimListBadRequest {
	return &SearchPersistenceVolumeClaimListBadRequest{}
}

/*
SearchPersistenceVolumeClaimListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SearchPersistenceVolumeClaimListBadRequest struct {
	Payload []*SearchPersistenceVolumeClaimListBadRequestBodyItems0
}

// IsSuccess returns true when this search persistence volume claim list bad request response has a 2xx status code
func (o *SearchPersistenceVolumeClaimListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search persistence volume claim list bad request response has a 3xx status code
func (o *SearchPersistenceVolumeClaimListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search persistence volume claim list bad request response has a 4xx status code
func (o *SearchPersistenceVolumeClaimListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search persistence volume claim list bad request response has a 5xx status code
func (o *SearchPersistenceVolumeClaimListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search persistence volume claim list bad request response a status code equal to that given
func (o *SearchPersistenceVolumeClaimListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SearchPersistenceVolumeClaimListBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/pvcs][%d] searchPersistenceVolumeClaimListBadRequest  %+v", 400, o.Payload)
}

func (o *SearchPersistenceVolumeClaimListBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/pvcs][%d] searchPersistenceVolumeClaimListBadRequest  %+v", 400, o.Payload)
}

func (o *SearchPersistenceVolumeClaimListBadRequest) GetPayload() []*SearchPersistenceVolumeClaimListBadRequestBodyItems0 {
	return o.Payload
}

func (o *SearchPersistenceVolumeClaimListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchPersistenceVolumeClaimListUnauthorized creates a SearchPersistenceVolumeClaimListUnauthorized with default headers values
func NewSearchPersistenceVolumeClaimListUnauthorized() *SearchPersistenceVolumeClaimListUnauthorized {
	return &SearchPersistenceVolumeClaimListUnauthorized{}
}

/*
SearchPersistenceVolumeClaimListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SearchPersistenceVolumeClaimListUnauthorized struct {
	Payload *SearchPersistenceVolumeClaimListUnauthorizedBody
}

// IsSuccess returns true when this search persistence volume claim list unauthorized response has a 2xx status code
func (o *SearchPersistenceVolumeClaimListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search persistence volume claim list unauthorized response has a 3xx status code
func (o *SearchPersistenceVolumeClaimListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search persistence volume claim list unauthorized response has a 4xx status code
func (o *SearchPersistenceVolumeClaimListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this search persistence volume claim list unauthorized response has a 5xx status code
func (o *SearchPersistenceVolumeClaimListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this search persistence volume claim list unauthorized response a status code equal to that given
func (o *SearchPersistenceVolumeClaimListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SearchPersistenceVolumeClaimListUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/pvcs][%d] searchPersistenceVolumeClaimListUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchPersistenceVolumeClaimListUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/pvcs][%d] searchPersistenceVolumeClaimListUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchPersistenceVolumeClaimListUnauthorized) GetPayload() *SearchPersistenceVolumeClaimListUnauthorizedBody {
	return o.Payload
}

func (o *SearchPersistenceVolumeClaimListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchPersistenceVolumeClaimListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchPersistenceVolumeClaimListForbidden creates a SearchPersistenceVolumeClaimListForbidden with default headers values
func NewSearchPersistenceVolumeClaimListForbidden() *SearchPersistenceVolumeClaimListForbidden {
	return &SearchPersistenceVolumeClaimListForbidden{}
}

/*
SearchPersistenceVolumeClaimListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SearchPersistenceVolumeClaimListForbidden struct {
	Payload *SearchPersistenceVolumeClaimListForbiddenBody
}

// IsSuccess returns true when this search persistence volume claim list forbidden response has a 2xx status code
func (o *SearchPersistenceVolumeClaimListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search persistence volume claim list forbidden response has a 3xx status code
func (o *SearchPersistenceVolumeClaimListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search persistence volume claim list forbidden response has a 4xx status code
func (o *SearchPersistenceVolumeClaimListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this search persistence volume claim list forbidden response has a 5xx status code
func (o *SearchPersistenceVolumeClaimListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this search persistence volume claim list forbidden response a status code equal to that given
func (o *SearchPersistenceVolumeClaimListForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SearchPersistenceVolumeClaimListForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/pvcs][%d] searchPersistenceVolumeClaimListForbidden  %+v", 403, o.Payload)
}

func (o *SearchPersistenceVolumeClaimListForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/pvcs][%d] searchPersistenceVolumeClaimListForbidden  %+v", 403, o.Payload)
}

func (o *SearchPersistenceVolumeClaimListForbidden) GetPayload() *SearchPersistenceVolumeClaimListForbiddenBody {
	return o.Payload
}

func (o *SearchPersistenceVolumeClaimListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchPersistenceVolumeClaimListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchPersistenceVolumeClaimListNotFound creates a SearchPersistenceVolumeClaimListNotFound with default headers values
func NewSearchPersistenceVolumeClaimListNotFound() *SearchPersistenceVolumeClaimListNotFound {
	return &SearchPersistenceVolumeClaimListNotFound{}
}

/*
SearchPersistenceVolumeClaimListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SearchPersistenceVolumeClaimListNotFound struct {
	Payload *SearchPersistenceVolumeClaimListNotFoundBody
}

// IsSuccess returns true when this search persistence volume claim list not found response has a 2xx status code
func (o *SearchPersistenceVolumeClaimListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search persistence volume claim list not found response has a 3xx status code
func (o *SearchPersistenceVolumeClaimListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search persistence volume claim list not found response has a 4xx status code
func (o *SearchPersistenceVolumeClaimListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this search persistence volume claim list not found response has a 5xx status code
func (o *SearchPersistenceVolumeClaimListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this search persistence volume claim list not found response a status code equal to that given
func (o *SearchPersistenceVolumeClaimListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SearchPersistenceVolumeClaimListNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/pvcs][%d] searchPersistenceVolumeClaimListNotFound  %+v", 404, o.Payload)
}

func (o *SearchPersistenceVolumeClaimListNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/pvcs][%d] searchPersistenceVolumeClaimListNotFound  %+v", 404, o.Payload)
}

func (o *SearchPersistenceVolumeClaimListNotFound) GetPayload() *SearchPersistenceVolumeClaimListNotFoundBody {
	return o.Payload
}

func (o *SearchPersistenceVolumeClaimListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchPersistenceVolumeClaimListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchPersistenceVolumeClaimListInternalServerError creates a SearchPersistenceVolumeClaimListInternalServerError with default headers values
func NewSearchPersistenceVolumeClaimListInternalServerError() *SearchPersistenceVolumeClaimListInternalServerError {
	return &SearchPersistenceVolumeClaimListInternalServerError{}
}

/*
SearchPersistenceVolumeClaimListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type SearchPersistenceVolumeClaimListInternalServerError struct {
}

// IsSuccess returns true when this search persistence volume claim list internal server error response has a 2xx status code
func (o *SearchPersistenceVolumeClaimListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search persistence volume claim list internal server error response has a 3xx status code
func (o *SearchPersistenceVolumeClaimListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search persistence volume claim list internal server error response has a 4xx status code
func (o *SearchPersistenceVolumeClaimListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search persistence volume claim list internal server error response has a 5xx status code
func (o *SearchPersistenceVolumeClaimListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search persistence volume claim list internal server error response a status code equal to that given
func (o *SearchPersistenceVolumeClaimListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SearchPersistenceVolumeClaimListInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/pvcs][%d] searchPersistenceVolumeClaimListInternalServerError ", 500)
}

func (o *SearchPersistenceVolumeClaimListInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/pvcs][%d] searchPersistenceVolumeClaimListInternalServerError ", 500)
}

func (o *SearchPersistenceVolumeClaimListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
SearchPersistenceVolumeClaimListBadRequestBodyItems0 search persistence volume claim list bad request body items0
swagger:model SearchPersistenceVolumeClaimListBadRequestBodyItems0
*/
type SearchPersistenceVolumeClaimListBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this search persistence volume claim list bad request body items0
func (o *SearchPersistenceVolumeClaimListBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search persistence volume claim list bad request body items0 based on context it is used
func (o *SearchPersistenceVolumeClaimListBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchPersistenceVolumeClaimListBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchPersistenceVolumeClaimListBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res SearchPersistenceVolumeClaimListBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchPersistenceVolumeClaimListBody search persistence volume claim list body
swagger:model SearchPersistenceVolumeClaimListBody
*/
type SearchPersistenceVolumeClaimListBody struct {

	// limit
	Limit int32 `json:"limit,omitempty"`

	// offset
	Offset int32 `json:"offset,omitempty"`

	// search term
	SearchTerm string `json:"searchTerm,omitempty"`
}

// Validate validates this search persistence volume claim list body
func (o *SearchPersistenceVolumeClaimListBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search persistence volume claim list body based on context it is used
func (o *SearchPersistenceVolumeClaimListBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchPersistenceVolumeClaimListBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchPersistenceVolumeClaimListBody) UnmarshalBinary(b []byte) error {
	var res SearchPersistenceVolumeClaimListBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchPersistenceVolumeClaimListForbiddenBody search persistence volume claim list forbidden body
swagger:model SearchPersistenceVolumeClaimListForbiddenBody
*/
type SearchPersistenceVolumeClaimListForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search persistence volume claim list forbidden body
func (o *SearchPersistenceVolumeClaimListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search persistence volume claim list forbidden body based on context it is used
func (o *SearchPersistenceVolumeClaimListForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchPersistenceVolumeClaimListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchPersistenceVolumeClaimListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res SearchPersistenceVolumeClaimListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchPersistenceVolumeClaimListNotFoundBody search persistence volume claim list not found body
swagger:model SearchPersistenceVolumeClaimListNotFoundBody
*/
type SearchPersistenceVolumeClaimListNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search persistence volume claim list not found body
func (o *SearchPersistenceVolumeClaimListNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search persistence volume claim list not found body based on context it is used
func (o *SearchPersistenceVolumeClaimListNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchPersistenceVolumeClaimListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchPersistenceVolumeClaimListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res SearchPersistenceVolumeClaimListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchPersistenceVolumeClaimListOKBody search persistence volume claim list o k body
swagger:model SearchPersistenceVolumeClaimListOKBody
*/
type SearchPersistenceVolumeClaimListOKBody struct {

	// data
	Data []*SearchPersistenceVolumeClaimListOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this search persistence volume claim list o k body
func (o *SearchPersistenceVolumeClaimListOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SearchPersistenceVolumeClaimListOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("searchPersistenceVolumeClaimListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("searchPersistenceVolumeClaimListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this search persistence volume claim list o k body based on the context it is used
func (o *SearchPersistenceVolumeClaimListOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SearchPersistenceVolumeClaimListOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("searchPersistenceVolumeClaimListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("searchPersistenceVolumeClaimListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *SearchPersistenceVolumeClaimListOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchPersistenceVolumeClaimListOKBody) UnmarshalBinary(b []byte) error {
	var res SearchPersistenceVolumeClaimListOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchPersistenceVolumeClaimListOKBodyDataItems0 search persistence volume claim list o k body data items0
swagger:model SearchPersistenceVolumeClaimListOKBodyDataItems0
*/
type SearchPersistenceVolumeClaimListOKBodyDataItems0 struct {

	// metadata name
	MetadataName string `json:"metadataName,omitempty"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// organization name
	OrganizationName string `json:"organizationName,omitempty"`

	// project Id
	ProjectID int32 `json:"projectId,omitempty"`

	// project name
	ProjectName string `json:"projectName,omitempty"`
}

// Validate validates this search persistence volume claim list o k body data items0
func (o *SearchPersistenceVolumeClaimListOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search persistence volume claim list o k body data items0 based on context it is used
func (o *SearchPersistenceVolumeClaimListOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchPersistenceVolumeClaimListOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchPersistenceVolumeClaimListOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res SearchPersistenceVolumeClaimListOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchPersistenceVolumeClaimListUnauthorizedBody search persistence volume claim list unauthorized body
swagger:model SearchPersistenceVolumeClaimListUnauthorizedBody
*/
type SearchPersistenceVolumeClaimListUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search persistence volume claim list unauthorized body
func (o *SearchPersistenceVolumeClaimListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search persistence volume claim list unauthorized body based on context it is used
func (o *SearchPersistenceVolumeClaimListUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchPersistenceVolumeClaimListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchPersistenceVolumeClaimListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res SearchPersistenceVolumeClaimListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
