// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SearchNodesListReader is a Reader for the SearchNodesList structure.
type SearchNodesListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchNodesListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchNodesListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchNodesListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchNodesListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchNodesListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchNodesListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchNodesListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchNodesListOK creates a SearchNodesListOK with default headers values
func NewSearchNodesListOK() *SearchNodesListOK {
	return &SearchNodesListOK{}
}

/*
SearchNodesListOK describes a response with status code 200, with default header values.

Success
*/
type SearchNodesListOK struct {
	Payload *SearchNodesListOKBody
}

// IsSuccess returns true when this search nodes list o k response has a 2xx status code
func (o *SearchNodesListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search nodes list o k response has a 3xx status code
func (o *SearchNodesListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search nodes list o k response has a 4xx status code
func (o *SearchNodesListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search nodes list o k response has a 5xx status code
func (o *SearchNodesListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search nodes list o k response a status code equal to that given
func (o *SearchNodesListOK) IsCode(code int) bool {
	return code == 200
}

func (o *SearchNodesListOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/nodes][%d] searchNodesListOK  %+v", 200, o.Payload)
}

func (o *SearchNodesListOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/nodes][%d] searchNodesListOK  %+v", 200, o.Payload)
}

func (o *SearchNodesListOK) GetPayload() *SearchNodesListOKBody {
	return o.Payload
}

func (o *SearchNodesListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchNodesListOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchNodesListBadRequest creates a SearchNodesListBadRequest with default headers values
func NewSearchNodesListBadRequest() *SearchNodesListBadRequest {
	return &SearchNodesListBadRequest{}
}

/*
SearchNodesListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SearchNodesListBadRequest struct {
	Payload []*SearchNodesListBadRequestBodyItems0
}

// IsSuccess returns true when this search nodes list bad request response has a 2xx status code
func (o *SearchNodesListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search nodes list bad request response has a 3xx status code
func (o *SearchNodesListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search nodes list bad request response has a 4xx status code
func (o *SearchNodesListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search nodes list bad request response has a 5xx status code
func (o *SearchNodesListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search nodes list bad request response a status code equal to that given
func (o *SearchNodesListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SearchNodesListBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/nodes][%d] searchNodesListBadRequest  %+v", 400, o.Payload)
}

func (o *SearchNodesListBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/nodes][%d] searchNodesListBadRequest  %+v", 400, o.Payload)
}

func (o *SearchNodesListBadRequest) GetPayload() []*SearchNodesListBadRequestBodyItems0 {
	return o.Payload
}

func (o *SearchNodesListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchNodesListUnauthorized creates a SearchNodesListUnauthorized with default headers values
func NewSearchNodesListUnauthorized() *SearchNodesListUnauthorized {
	return &SearchNodesListUnauthorized{}
}

/*
SearchNodesListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SearchNodesListUnauthorized struct {
	Payload *SearchNodesListUnauthorizedBody
}

// IsSuccess returns true when this search nodes list unauthorized response has a 2xx status code
func (o *SearchNodesListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search nodes list unauthorized response has a 3xx status code
func (o *SearchNodesListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search nodes list unauthorized response has a 4xx status code
func (o *SearchNodesListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this search nodes list unauthorized response has a 5xx status code
func (o *SearchNodesListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this search nodes list unauthorized response a status code equal to that given
func (o *SearchNodesListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SearchNodesListUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/nodes][%d] searchNodesListUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchNodesListUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/nodes][%d] searchNodesListUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchNodesListUnauthorized) GetPayload() *SearchNodesListUnauthorizedBody {
	return o.Payload
}

func (o *SearchNodesListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchNodesListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchNodesListForbidden creates a SearchNodesListForbidden with default headers values
func NewSearchNodesListForbidden() *SearchNodesListForbidden {
	return &SearchNodesListForbidden{}
}

/*
SearchNodesListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SearchNodesListForbidden struct {
	Payload *SearchNodesListForbiddenBody
}

// IsSuccess returns true when this search nodes list forbidden response has a 2xx status code
func (o *SearchNodesListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search nodes list forbidden response has a 3xx status code
func (o *SearchNodesListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search nodes list forbidden response has a 4xx status code
func (o *SearchNodesListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this search nodes list forbidden response has a 5xx status code
func (o *SearchNodesListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this search nodes list forbidden response a status code equal to that given
func (o *SearchNodesListForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SearchNodesListForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/nodes][%d] searchNodesListForbidden  %+v", 403, o.Payload)
}

func (o *SearchNodesListForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/nodes][%d] searchNodesListForbidden  %+v", 403, o.Payload)
}

func (o *SearchNodesListForbidden) GetPayload() *SearchNodesListForbiddenBody {
	return o.Payload
}

func (o *SearchNodesListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchNodesListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchNodesListNotFound creates a SearchNodesListNotFound with default headers values
func NewSearchNodesListNotFound() *SearchNodesListNotFound {
	return &SearchNodesListNotFound{}
}

/*
SearchNodesListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SearchNodesListNotFound struct {
	Payload *SearchNodesListNotFoundBody
}

// IsSuccess returns true when this search nodes list not found response has a 2xx status code
func (o *SearchNodesListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search nodes list not found response has a 3xx status code
func (o *SearchNodesListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search nodes list not found response has a 4xx status code
func (o *SearchNodesListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this search nodes list not found response has a 5xx status code
func (o *SearchNodesListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this search nodes list not found response a status code equal to that given
func (o *SearchNodesListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SearchNodesListNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/nodes][%d] searchNodesListNotFound  %+v", 404, o.Payload)
}

func (o *SearchNodesListNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/nodes][%d] searchNodesListNotFound  %+v", 404, o.Payload)
}

func (o *SearchNodesListNotFound) GetPayload() *SearchNodesListNotFoundBody {
	return o.Payload
}

func (o *SearchNodesListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchNodesListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchNodesListInternalServerError creates a SearchNodesListInternalServerError with default headers values
func NewSearchNodesListInternalServerError() *SearchNodesListInternalServerError {
	return &SearchNodesListInternalServerError{}
}

/*
SearchNodesListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type SearchNodesListInternalServerError struct {
}

// IsSuccess returns true when this search nodes list internal server error response has a 2xx status code
func (o *SearchNodesListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search nodes list internal server error response has a 3xx status code
func (o *SearchNodesListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search nodes list internal server error response has a 4xx status code
func (o *SearchNodesListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search nodes list internal server error response has a 5xx status code
func (o *SearchNodesListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search nodes list internal server error response a status code equal to that given
func (o *SearchNodesListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SearchNodesListInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/nodes][%d] searchNodesListInternalServerError ", 500)
}

func (o *SearchNodesListInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Search/nodes][%d] searchNodesListInternalServerError ", 500)
}

func (o *SearchNodesListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
SearchNodesListBadRequestBodyItems0 search nodes list bad request body items0
swagger:model SearchNodesListBadRequestBodyItems0
*/
type SearchNodesListBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this search nodes list bad request body items0
func (o *SearchNodesListBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search nodes list bad request body items0 based on context it is used
func (o *SearchNodesListBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchNodesListBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchNodesListBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res SearchNodesListBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchNodesListBody search nodes list body
swagger:model SearchNodesListBody
*/
type SearchNodesListBody struct {

	// limit
	Limit int32 `json:"limit,omitempty"`

	// offset
	Offset int32 `json:"offset,omitempty"`

	// search term
	SearchTerm string `json:"searchTerm,omitempty"`
}

// Validate validates this search nodes list body
func (o *SearchNodesListBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search nodes list body based on context it is used
func (o *SearchNodesListBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchNodesListBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchNodesListBody) UnmarshalBinary(b []byte) error {
	var res SearchNodesListBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchNodesListForbiddenBody search nodes list forbidden body
swagger:model SearchNodesListForbiddenBody
*/
type SearchNodesListForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search nodes list forbidden body
func (o *SearchNodesListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search nodes list forbidden body based on context it is used
func (o *SearchNodesListForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchNodesListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchNodesListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res SearchNodesListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchNodesListNotFoundBody search nodes list not found body
swagger:model SearchNodesListNotFoundBody
*/
type SearchNodesListNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search nodes list not found body
func (o *SearchNodesListNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search nodes list not found body based on context it is used
func (o *SearchNodesListNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchNodesListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchNodesListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res SearchNodesListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchNodesListOKBody search nodes list o k body
swagger:model SearchNodesListOKBody
*/
type SearchNodesListOKBody struct {

	// data
	Data []*SearchNodesListOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this search nodes list o k body
func (o *SearchNodesListOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SearchNodesListOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("searchNodesListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("searchNodesListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this search nodes list o k body based on the context it is used
func (o *SearchNodesListOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SearchNodesListOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("searchNodesListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("searchNodesListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *SearchNodesListOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchNodesListOKBody) UnmarshalBinary(b []byte) error {
	var res SearchNodesListOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchNodesListOKBodyDataItems0 search nodes list o k body data items0
swagger:model SearchNodesListOKBodyDataItems0
*/
type SearchNodesListOKBodyDataItems0 struct {

	// metadata name
	MetadataName string `json:"metadataName,omitempty"`

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// organization name
	OrganizationName string `json:"organizationName,omitempty"`

	// project Id
	ProjectID int32 `json:"projectId,omitempty"`

	// project name
	ProjectName string `json:"projectName,omitempty"`
}

// Validate validates this search nodes list o k body data items0
func (o *SearchNodesListOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search nodes list o k body data items0 based on context it is used
func (o *SearchNodesListOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchNodesListOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchNodesListOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res SearchNodesListOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
SearchNodesListUnauthorizedBody search nodes list unauthorized body
swagger:model SearchNodesListUnauthorizedBody
*/
type SearchNodesListUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this search nodes list unauthorized body
func (o *SearchNodesListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search nodes list unauthorized body based on context it is used
func (o *SearchNodesListUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchNodesListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchNodesListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res SearchNodesListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
