// Code generated by go-swagger; DO NOT EDIT.

package user_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// UserGroupsUpdateReader is a Reader for the UserGroupsUpdate structure.
type UserGroupsUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserGroupsUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUserGroupsUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUserGroupsUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUserGroupsUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUserGroupsUpdateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUserGroupsUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUserGroupsUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUserGroupsUpdateOK creates a UserGroupsUpdateOK with default headers values
func NewUserGroupsUpdateOK() *UserGroupsUpdateOK {
	return &UserGroupsUpdateOK{}
}

/* UserGroupsUpdateOK describes a response with status code 200, with default header values.

Success
*/
type UserGroupsUpdateOK struct {
	Payload models.Unit
}

func (o *UserGroupsUpdateOK) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/UserGroups/update][%d] userGroupsUpdateOK  %+v", 200, o.Payload)
}
func (o *UserGroupsUpdateOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *UserGroupsUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserGroupsUpdateBadRequest creates a UserGroupsUpdateBadRequest with default headers values
func NewUserGroupsUpdateBadRequest() *UserGroupsUpdateBadRequest {
	return &UserGroupsUpdateBadRequest{}
}

/* UserGroupsUpdateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UserGroupsUpdateBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *UserGroupsUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/UserGroups/update][%d] userGroupsUpdateBadRequest  %+v", 400, o.Payload)
}
func (o *UserGroupsUpdateBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *UserGroupsUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserGroupsUpdateUnauthorized creates a UserGroupsUpdateUnauthorized with default headers values
func NewUserGroupsUpdateUnauthorized() *UserGroupsUpdateUnauthorized {
	return &UserGroupsUpdateUnauthorized{}
}

/* UserGroupsUpdateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UserGroupsUpdateUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *UserGroupsUpdateUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/UserGroups/update][%d] userGroupsUpdateUnauthorized  %+v", 401, o.Payload)
}
func (o *UserGroupsUpdateUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *UserGroupsUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserGroupsUpdateForbidden creates a UserGroupsUpdateForbidden with default headers values
func NewUserGroupsUpdateForbidden() *UserGroupsUpdateForbidden {
	return &UserGroupsUpdateForbidden{}
}

/* UserGroupsUpdateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UserGroupsUpdateForbidden struct {
	Payload *models.ProblemDetails
}

func (o *UserGroupsUpdateForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/UserGroups/update][%d] userGroupsUpdateForbidden  %+v", 403, o.Payload)
}
func (o *UserGroupsUpdateForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *UserGroupsUpdateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserGroupsUpdateNotFound creates a UserGroupsUpdateNotFound with default headers values
func NewUserGroupsUpdateNotFound() *UserGroupsUpdateNotFound {
	return &UserGroupsUpdateNotFound{}
}

/* UserGroupsUpdateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UserGroupsUpdateNotFound struct {
	Payload *models.ProblemDetails
}

func (o *UserGroupsUpdateNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/UserGroups/update][%d] userGroupsUpdateNotFound  %+v", 404, o.Payload)
}
func (o *UserGroupsUpdateNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *UserGroupsUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserGroupsUpdateInternalServerError creates a UserGroupsUpdateInternalServerError with default headers values
func NewUserGroupsUpdateInternalServerError() *UserGroupsUpdateInternalServerError {
	return &UserGroupsUpdateInternalServerError{}
}

/* UserGroupsUpdateInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UserGroupsUpdateInternalServerError struct {
}

func (o *UserGroupsUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/UserGroups/update][%d] userGroupsUpdateInternalServerError ", 500)
}

func (o *UserGroupsUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
