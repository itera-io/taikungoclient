// Code generated by go-swagger; DO NOT EDIT.

package user_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// UserGroupsDeleteReader is a Reader for the UserGroupsDelete structure.
type UserGroupsDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserGroupsDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUserGroupsDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUserGroupsDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUserGroupsDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUserGroupsDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUserGroupsDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUserGroupsDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUserGroupsDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUserGroupsDeleteOK creates a UserGroupsDeleteOK with default headers values
func NewUserGroupsDeleteOK() *UserGroupsDeleteOK {
	return &UserGroupsDeleteOK{}
}

/* UserGroupsDeleteOK describes a response with status code 200, with default header values.

Success
*/
type UserGroupsDeleteOK struct {
	Payload models.Unit
}

func (o *UserGroupsDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/UserGroups/{userGroupId}][%d] userGroupsDeleteOK  %+v", 200, o.Payload)
}
func (o *UserGroupsDeleteOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *UserGroupsDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserGroupsDeleteNoContent creates a UserGroupsDeleteNoContent with default headers values
func NewUserGroupsDeleteNoContent() *UserGroupsDeleteNoContent {
	return &UserGroupsDeleteNoContent{}
}

/* UserGroupsDeleteNoContent describes a response with status code 204, with default header values.

Success
*/
type UserGroupsDeleteNoContent struct {
}

func (o *UserGroupsDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/UserGroups/{userGroupId}][%d] userGroupsDeleteNoContent ", 204)
}

func (o *UserGroupsDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserGroupsDeleteBadRequest creates a UserGroupsDeleteBadRequest with default headers values
func NewUserGroupsDeleteBadRequest() *UserGroupsDeleteBadRequest {
	return &UserGroupsDeleteBadRequest{}
}

/* UserGroupsDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UserGroupsDeleteBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *UserGroupsDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/UserGroups/{userGroupId}][%d] userGroupsDeleteBadRequest  %+v", 400, o.Payload)
}
func (o *UserGroupsDeleteBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *UserGroupsDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserGroupsDeleteUnauthorized creates a UserGroupsDeleteUnauthorized with default headers values
func NewUserGroupsDeleteUnauthorized() *UserGroupsDeleteUnauthorized {
	return &UserGroupsDeleteUnauthorized{}
}

/* UserGroupsDeleteUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UserGroupsDeleteUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *UserGroupsDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/UserGroups/{userGroupId}][%d] userGroupsDeleteUnauthorized  %+v", 401, o.Payload)
}
func (o *UserGroupsDeleteUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *UserGroupsDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserGroupsDeleteForbidden creates a UserGroupsDeleteForbidden with default headers values
func NewUserGroupsDeleteForbidden() *UserGroupsDeleteForbidden {
	return &UserGroupsDeleteForbidden{}
}

/* UserGroupsDeleteForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UserGroupsDeleteForbidden struct {
	Payload *models.ProblemDetails
}

func (o *UserGroupsDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/UserGroups/{userGroupId}][%d] userGroupsDeleteForbidden  %+v", 403, o.Payload)
}
func (o *UserGroupsDeleteForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *UserGroupsDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserGroupsDeleteNotFound creates a UserGroupsDeleteNotFound with default headers values
func NewUserGroupsDeleteNotFound() *UserGroupsDeleteNotFound {
	return &UserGroupsDeleteNotFound{}
}

/* UserGroupsDeleteNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UserGroupsDeleteNotFound struct {
	Payload *models.ProblemDetails
}

func (o *UserGroupsDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/UserGroups/{userGroupId}][%d] userGroupsDeleteNotFound  %+v", 404, o.Payload)
}
func (o *UserGroupsDeleteNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *UserGroupsDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserGroupsDeleteInternalServerError creates a UserGroupsDeleteInternalServerError with default headers values
func NewUserGroupsDeleteInternalServerError() *UserGroupsDeleteInternalServerError {
	return &UserGroupsDeleteInternalServerError{}
}

/* UserGroupsDeleteInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UserGroupsDeleteInternalServerError struct {
}

func (o *UserGroupsDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v{v}/UserGroups/{userGroupId}][%d] userGroupsDeleteInternalServerError ", 500)
}

func (o *UserGroupsDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
