// Code generated by go-swagger; DO NOT EDIT.

package user_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// UserGroupsUserListByProjectGroupIDReader is a Reader for the UserGroupsUserListByProjectGroupID structure.
type UserGroupsUserListByProjectGroupIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserGroupsUserListByProjectGroupIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUserGroupsUserListByProjectGroupIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUserGroupsUserListByProjectGroupIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUserGroupsUserListByProjectGroupIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUserGroupsUserListByProjectGroupIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUserGroupsUserListByProjectGroupIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUserGroupsUserListByProjectGroupIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUserGroupsUserListByProjectGroupIDOK creates a UserGroupsUserListByProjectGroupIDOK with default headers values
func NewUserGroupsUserListByProjectGroupIDOK() *UserGroupsUserListByProjectGroupIDOK {
	return &UserGroupsUserListByProjectGroupIDOK{}
}

/*
UserGroupsUserListByProjectGroupIDOK describes a response with status code 200, with default header values.

Success
*/
type UserGroupsUserListByProjectGroupIDOK struct {
	Payload []*models.ProjectListForProjectGroupDto
}

// IsSuccess returns true when this user groups user list by project group Id o k response has a 2xx status code
func (o *UserGroupsUserListByProjectGroupIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this user groups user list by project group Id o k response has a 3xx status code
func (o *UserGroupsUserListByProjectGroupIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user groups user list by project group Id o k response has a 4xx status code
func (o *UserGroupsUserListByProjectGroupIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this user groups user list by project group Id o k response has a 5xx status code
func (o *UserGroupsUserListByProjectGroupIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this user groups user list by project group Id o k response a status code equal to that given
func (o *UserGroupsUserListByProjectGroupIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the user groups user list by project group Id o k response
func (o *UserGroupsUserListByProjectGroupIDOK) Code() int {
	return 200
}

func (o *UserGroupsUserListByProjectGroupIDOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/UserGroups/{userGroupId}/users][%d] userGroupsUserListByProjectGroupIdOK  %+v", 200, o.Payload)
}

func (o *UserGroupsUserListByProjectGroupIDOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/UserGroups/{userGroupId}/users][%d] userGroupsUserListByProjectGroupIdOK  %+v", 200, o.Payload)
}

func (o *UserGroupsUserListByProjectGroupIDOK) GetPayload() []*models.ProjectListForProjectGroupDto {
	return o.Payload
}

func (o *UserGroupsUserListByProjectGroupIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserGroupsUserListByProjectGroupIDBadRequest creates a UserGroupsUserListByProjectGroupIDBadRequest with default headers values
func NewUserGroupsUserListByProjectGroupIDBadRequest() *UserGroupsUserListByProjectGroupIDBadRequest {
	return &UserGroupsUserListByProjectGroupIDBadRequest{}
}

/*
UserGroupsUserListByProjectGroupIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UserGroupsUserListByProjectGroupIDBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this user groups user list by project group Id bad request response has a 2xx status code
func (o *UserGroupsUserListByProjectGroupIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user groups user list by project group Id bad request response has a 3xx status code
func (o *UserGroupsUserListByProjectGroupIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user groups user list by project group Id bad request response has a 4xx status code
func (o *UserGroupsUserListByProjectGroupIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this user groups user list by project group Id bad request response has a 5xx status code
func (o *UserGroupsUserListByProjectGroupIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this user groups user list by project group Id bad request response a status code equal to that given
func (o *UserGroupsUserListByProjectGroupIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the user groups user list by project group Id bad request response
func (o *UserGroupsUserListByProjectGroupIDBadRequest) Code() int {
	return 400
}

func (o *UserGroupsUserListByProjectGroupIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/UserGroups/{userGroupId}/users][%d] userGroupsUserListByProjectGroupIdBadRequest  %+v", 400, o.Payload)
}

func (o *UserGroupsUserListByProjectGroupIDBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/UserGroups/{userGroupId}/users][%d] userGroupsUserListByProjectGroupIdBadRequest  %+v", 400, o.Payload)
}

func (o *UserGroupsUserListByProjectGroupIDBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *UserGroupsUserListByProjectGroupIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserGroupsUserListByProjectGroupIDUnauthorized creates a UserGroupsUserListByProjectGroupIDUnauthorized with default headers values
func NewUserGroupsUserListByProjectGroupIDUnauthorized() *UserGroupsUserListByProjectGroupIDUnauthorized {
	return &UserGroupsUserListByProjectGroupIDUnauthorized{}
}

/*
UserGroupsUserListByProjectGroupIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UserGroupsUserListByProjectGroupIDUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this user groups user list by project group Id unauthorized response has a 2xx status code
func (o *UserGroupsUserListByProjectGroupIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user groups user list by project group Id unauthorized response has a 3xx status code
func (o *UserGroupsUserListByProjectGroupIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user groups user list by project group Id unauthorized response has a 4xx status code
func (o *UserGroupsUserListByProjectGroupIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this user groups user list by project group Id unauthorized response has a 5xx status code
func (o *UserGroupsUserListByProjectGroupIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this user groups user list by project group Id unauthorized response a status code equal to that given
func (o *UserGroupsUserListByProjectGroupIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the user groups user list by project group Id unauthorized response
func (o *UserGroupsUserListByProjectGroupIDUnauthorized) Code() int {
	return 401
}

func (o *UserGroupsUserListByProjectGroupIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/UserGroups/{userGroupId}/users][%d] userGroupsUserListByProjectGroupIdUnauthorized  %+v", 401, o.Payload)
}

func (o *UserGroupsUserListByProjectGroupIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/UserGroups/{userGroupId}/users][%d] userGroupsUserListByProjectGroupIdUnauthorized  %+v", 401, o.Payload)
}

func (o *UserGroupsUserListByProjectGroupIDUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *UserGroupsUserListByProjectGroupIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserGroupsUserListByProjectGroupIDForbidden creates a UserGroupsUserListByProjectGroupIDForbidden with default headers values
func NewUserGroupsUserListByProjectGroupIDForbidden() *UserGroupsUserListByProjectGroupIDForbidden {
	return &UserGroupsUserListByProjectGroupIDForbidden{}
}

/*
UserGroupsUserListByProjectGroupIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UserGroupsUserListByProjectGroupIDForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this user groups user list by project group Id forbidden response has a 2xx status code
func (o *UserGroupsUserListByProjectGroupIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user groups user list by project group Id forbidden response has a 3xx status code
func (o *UserGroupsUserListByProjectGroupIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user groups user list by project group Id forbidden response has a 4xx status code
func (o *UserGroupsUserListByProjectGroupIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this user groups user list by project group Id forbidden response has a 5xx status code
func (o *UserGroupsUserListByProjectGroupIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this user groups user list by project group Id forbidden response a status code equal to that given
func (o *UserGroupsUserListByProjectGroupIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the user groups user list by project group Id forbidden response
func (o *UserGroupsUserListByProjectGroupIDForbidden) Code() int {
	return 403
}

func (o *UserGroupsUserListByProjectGroupIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/UserGroups/{userGroupId}/users][%d] userGroupsUserListByProjectGroupIdForbidden  %+v", 403, o.Payload)
}

func (o *UserGroupsUserListByProjectGroupIDForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/UserGroups/{userGroupId}/users][%d] userGroupsUserListByProjectGroupIdForbidden  %+v", 403, o.Payload)
}

func (o *UserGroupsUserListByProjectGroupIDForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *UserGroupsUserListByProjectGroupIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserGroupsUserListByProjectGroupIDNotFound creates a UserGroupsUserListByProjectGroupIDNotFound with default headers values
func NewUserGroupsUserListByProjectGroupIDNotFound() *UserGroupsUserListByProjectGroupIDNotFound {
	return &UserGroupsUserListByProjectGroupIDNotFound{}
}

/*
UserGroupsUserListByProjectGroupIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UserGroupsUserListByProjectGroupIDNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this user groups user list by project group Id not found response has a 2xx status code
func (o *UserGroupsUserListByProjectGroupIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user groups user list by project group Id not found response has a 3xx status code
func (o *UserGroupsUserListByProjectGroupIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user groups user list by project group Id not found response has a 4xx status code
func (o *UserGroupsUserListByProjectGroupIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this user groups user list by project group Id not found response has a 5xx status code
func (o *UserGroupsUserListByProjectGroupIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this user groups user list by project group Id not found response a status code equal to that given
func (o *UserGroupsUserListByProjectGroupIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the user groups user list by project group Id not found response
func (o *UserGroupsUserListByProjectGroupIDNotFound) Code() int {
	return 404
}

func (o *UserGroupsUserListByProjectGroupIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/UserGroups/{userGroupId}/users][%d] userGroupsUserListByProjectGroupIdNotFound  %+v", 404, o.Payload)
}

func (o *UserGroupsUserListByProjectGroupIDNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/UserGroups/{userGroupId}/users][%d] userGroupsUserListByProjectGroupIdNotFound  %+v", 404, o.Payload)
}

func (o *UserGroupsUserListByProjectGroupIDNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *UserGroupsUserListByProjectGroupIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserGroupsUserListByProjectGroupIDInternalServerError creates a UserGroupsUserListByProjectGroupIDInternalServerError with default headers values
func NewUserGroupsUserListByProjectGroupIDInternalServerError() *UserGroupsUserListByProjectGroupIDInternalServerError {
	return &UserGroupsUserListByProjectGroupIDInternalServerError{}
}

/*
UserGroupsUserListByProjectGroupIDInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UserGroupsUserListByProjectGroupIDInternalServerError struct {
}

// IsSuccess returns true when this user groups user list by project group Id internal server error response has a 2xx status code
func (o *UserGroupsUserListByProjectGroupIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user groups user list by project group Id internal server error response has a 3xx status code
func (o *UserGroupsUserListByProjectGroupIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user groups user list by project group Id internal server error response has a 4xx status code
func (o *UserGroupsUserListByProjectGroupIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this user groups user list by project group Id internal server error response has a 5xx status code
func (o *UserGroupsUserListByProjectGroupIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this user groups user list by project group Id internal server error response a status code equal to that given
func (o *UserGroupsUserListByProjectGroupIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the user groups user list by project group Id internal server error response
func (o *UserGroupsUserListByProjectGroupIDInternalServerError) Code() int {
	return 500
}

func (o *UserGroupsUserListByProjectGroupIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/UserGroups/{userGroupId}/users][%d] userGroupsUserListByProjectGroupIdInternalServerError ", 500)
}

func (o *UserGroupsUserListByProjectGroupIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/UserGroups/{userGroupId}/users][%d] userGroupsUserListByProjectGroupIdInternalServerError ", 500)
}

func (o *UserGroupsUserListByProjectGroupIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
