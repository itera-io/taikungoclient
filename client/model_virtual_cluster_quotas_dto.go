/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VirtualClusterQuotasDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VirtualClusterQuotasDto{}

// VirtualClusterQuotasDto struct for VirtualClusterQuotasDto
type VirtualClusterQuotasDto struct {
	Presets []VirtualClusterQuotaPresetDto `json:"presets"`
	LimitRanges []VirtualClusterQuotaLimitRangeDto `json:"limitRanges"`
}

type _VirtualClusterQuotasDto VirtualClusterQuotasDto

// NewVirtualClusterQuotasDto instantiates a new VirtualClusterQuotasDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualClusterQuotasDto(presets []VirtualClusterQuotaPresetDto, limitRanges []VirtualClusterQuotaLimitRangeDto) *VirtualClusterQuotasDto {
	this := VirtualClusterQuotasDto{}
	this.Presets = presets
	this.LimitRanges = limitRanges
	return &this
}

// NewVirtualClusterQuotasDtoWithDefaults instantiates a new VirtualClusterQuotasDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualClusterQuotasDtoWithDefaults() *VirtualClusterQuotasDto {
	this := VirtualClusterQuotasDto{}
	return &this
}

// GetPresets returns the Presets field value
// If the value is explicit nil, the zero value for []VirtualClusterQuotaPresetDto will be returned
func (o *VirtualClusterQuotasDto) GetPresets() []VirtualClusterQuotaPresetDto {
	if o == nil {
		var ret []VirtualClusterQuotaPresetDto
		return ret
	}

	return o.Presets
}

// GetPresetsOk returns a tuple with the Presets field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VirtualClusterQuotasDto) GetPresetsOk() ([]VirtualClusterQuotaPresetDto, bool) {
	if o == nil || IsNil(o.Presets) {
		return nil, false
	}
	return o.Presets, true
}

// SetPresets sets field value
func (o *VirtualClusterQuotasDto) SetPresets(v []VirtualClusterQuotaPresetDto) {
	o.Presets = v
}

// GetLimitRanges returns the LimitRanges field value
// If the value is explicit nil, the zero value for []VirtualClusterQuotaLimitRangeDto will be returned
func (o *VirtualClusterQuotasDto) GetLimitRanges() []VirtualClusterQuotaLimitRangeDto {
	if o == nil {
		var ret []VirtualClusterQuotaLimitRangeDto
		return ret
	}

	return o.LimitRanges
}

// GetLimitRangesOk returns a tuple with the LimitRanges field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VirtualClusterQuotasDto) GetLimitRangesOk() ([]VirtualClusterQuotaLimitRangeDto, bool) {
	if o == nil || IsNil(o.LimitRanges) {
		return nil, false
	}
	return o.LimitRanges, true
}

// SetLimitRanges sets field value
func (o *VirtualClusterQuotasDto) SetLimitRanges(v []VirtualClusterQuotaLimitRangeDto) {
	o.LimitRanges = v
}

func (o VirtualClusterQuotasDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VirtualClusterQuotasDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Presets != nil {
		toSerialize["presets"] = o.Presets
	}
	if o.LimitRanges != nil {
		toSerialize["limitRanges"] = o.LimitRanges
	}
	return toSerialize, nil
}

func (o *VirtualClusterQuotasDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"presets",
		"limitRanges",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVirtualClusterQuotasDto := _VirtualClusterQuotasDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVirtualClusterQuotasDto)

	if err != nil {
		return err
	}

	*o = VirtualClusterQuotasDto(varVirtualClusterQuotasDto)

	return err
}

type NullableVirtualClusterQuotasDto struct {
	value *VirtualClusterQuotasDto
	isSet bool
}

func (v NullableVirtualClusterQuotasDto) Get() *VirtualClusterQuotasDto {
	return v.value
}

func (v *NullableVirtualClusterQuotasDto) Set(val *VirtualClusterQuotasDto) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualClusterQuotasDto) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualClusterQuotasDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualClusterQuotasDto(val *VirtualClusterQuotasDto) *NullableVirtualClusterQuotasDto {
	return &NullableVirtualClusterQuotasDto{value: val, isSet: true}
}

func (v NullableVirtualClusterQuotasDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualClusterQuotasDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


