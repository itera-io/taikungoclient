// Code generated by go-swagger; DO NOT EDIT.

package opa_profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// OpaProfilesUpdateReader is a Reader for the OpaProfilesUpdate structure.
type OpaProfilesUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OpaProfilesUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOpaProfilesUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOpaProfilesUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewOpaProfilesUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewOpaProfilesUpdateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOpaProfilesUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewOpaProfilesUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOpaProfilesUpdateOK creates a OpaProfilesUpdateOK with default headers values
func NewOpaProfilesUpdateOK() *OpaProfilesUpdateOK {
	return &OpaProfilesUpdateOK{}
}

/*
OpaProfilesUpdateOK describes a response with status code 200, with default header values.

Success
*/
type OpaProfilesUpdateOK struct {
	Payload interface{}
}

// IsSuccess returns true when this opa profiles update o k response has a 2xx status code
func (o *OpaProfilesUpdateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this opa profiles update o k response has a 3xx status code
func (o *OpaProfilesUpdateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this opa profiles update o k response has a 4xx status code
func (o *OpaProfilesUpdateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this opa profiles update o k response has a 5xx status code
func (o *OpaProfilesUpdateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this opa profiles update o k response a status code equal to that given
func (o *OpaProfilesUpdateOK) IsCode(code int) bool {
	return code == 200
}

func (o *OpaProfilesUpdateOK) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/OpaProfiles][%d] opaProfilesUpdateOK  %+v", 200, o.Payload)
}

func (o *OpaProfilesUpdateOK) String() string {
	return fmt.Sprintf("[PUT /api/v{v}/OpaProfiles][%d] opaProfilesUpdateOK  %+v", 200, o.Payload)
}

func (o *OpaProfilesUpdateOK) GetPayload() interface{} {
	return o.Payload
}

func (o *OpaProfilesUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpaProfilesUpdateBadRequest creates a OpaProfilesUpdateBadRequest with default headers values
func NewOpaProfilesUpdateBadRequest() *OpaProfilesUpdateBadRequest {
	return &OpaProfilesUpdateBadRequest{}
}

/*
OpaProfilesUpdateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type OpaProfilesUpdateBadRequest struct {
	Payload []*OpaProfilesUpdateBadRequestBodyItems0
}

// IsSuccess returns true when this opa profiles update bad request response has a 2xx status code
func (o *OpaProfilesUpdateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this opa profiles update bad request response has a 3xx status code
func (o *OpaProfilesUpdateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this opa profiles update bad request response has a 4xx status code
func (o *OpaProfilesUpdateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this opa profiles update bad request response has a 5xx status code
func (o *OpaProfilesUpdateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this opa profiles update bad request response a status code equal to that given
func (o *OpaProfilesUpdateBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *OpaProfilesUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/OpaProfiles][%d] opaProfilesUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *OpaProfilesUpdateBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v{v}/OpaProfiles][%d] opaProfilesUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *OpaProfilesUpdateBadRequest) GetPayload() []*OpaProfilesUpdateBadRequestBodyItems0 {
	return o.Payload
}

func (o *OpaProfilesUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpaProfilesUpdateUnauthorized creates a OpaProfilesUpdateUnauthorized with default headers values
func NewOpaProfilesUpdateUnauthorized() *OpaProfilesUpdateUnauthorized {
	return &OpaProfilesUpdateUnauthorized{}
}

/*
OpaProfilesUpdateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type OpaProfilesUpdateUnauthorized struct {
	Payload *OpaProfilesUpdateUnauthorizedBody
}

// IsSuccess returns true when this opa profiles update unauthorized response has a 2xx status code
func (o *OpaProfilesUpdateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this opa profiles update unauthorized response has a 3xx status code
func (o *OpaProfilesUpdateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this opa profiles update unauthorized response has a 4xx status code
func (o *OpaProfilesUpdateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this opa profiles update unauthorized response has a 5xx status code
func (o *OpaProfilesUpdateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this opa profiles update unauthorized response a status code equal to that given
func (o *OpaProfilesUpdateUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *OpaProfilesUpdateUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/OpaProfiles][%d] opaProfilesUpdateUnauthorized  %+v", 401, o.Payload)
}

func (o *OpaProfilesUpdateUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/v{v}/OpaProfiles][%d] opaProfilesUpdateUnauthorized  %+v", 401, o.Payload)
}

func (o *OpaProfilesUpdateUnauthorized) GetPayload() *OpaProfilesUpdateUnauthorizedBody {
	return o.Payload
}

func (o *OpaProfilesUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OpaProfilesUpdateUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpaProfilesUpdateForbidden creates a OpaProfilesUpdateForbidden with default headers values
func NewOpaProfilesUpdateForbidden() *OpaProfilesUpdateForbidden {
	return &OpaProfilesUpdateForbidden{}
}

/*
OpaProfilesUpdateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type OpaProfilesUpdateForbidden struct {
	Payload *OpaProfilesUpdateForbiddenBody
}

// IsSuccess returns true when this opa profiles update forbidden response has a 2xx status code
func (o *OpaProfilesUpdateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this opa profiles update forbidden response has a 3xx status code
func (o *OpaProfilesUpdateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this opa profiles update forbidden response has a 4xx status code
func (o *OpaProfilesUpdateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this opa profiles update forbidden response has a 5xx status code
func (o *OpaProfilesUpdateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this opa profiles update forbidden response a status code equal to that given
func (o *OpaProfilesUpdateForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *OpaProfilesUpdateForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/OpaProfiles][%d] opaProfilesUpdateForbidden  %+v", 403, o.Payload)
}

func (o *OpaProfilesUpdateForbidden) String() string {
	return fmt.Sprintf("[PUT /api/v{v}/OpaProfiles][%d] opaProfilesUpdateForbidden  %+v", 403, o.Payload)
}

func (o *OpaProfilesUpdateForbidden) GetPayload() *OpaProfilesUpdateForbiddenBody {
	return o.Payload
}

func (o *OpaProfilesUpdateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OpaProfilesUpdateForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpaProfilesUpdateNotFound creates a OpaProfilesUpdateNotFound with default headers values
func NewOpaProfilesUpdateNotFound() *OpaProfilesUpdateNotFound {
	return &OpaProfilesUpdateNotFound{}
}

/*
OpaProfilesUpdateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type OpaProfilesUpdateNotFound struct {
	Payload *OpaProfilesUpdateNotFoundBody
}

// IsSuccess returns true when this opa profiles update not found response has a 2xx status code
func (o *OpaProfilesUpdateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this opa profiles update not found response has a 3xx status code
func (o *OpaProfilesUpdateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this opa profiles update not found response has a 4xx status code
func (o *OpaProfilesUpdateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this opa profiles update not found response has a 5xx status code
func (o *OpaProfilesUpdateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this opa profiles update not found response a status code equal to that given
func (o *OpaProfilesUpdateNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *OpaProfilesUpdateNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/OpaProfiles][%d] opaProfilesUpdateNotFound  %+v", 404, o.Payload)
}

func (o *OpaProfilesUpdateNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v{v}/OpaProfiles][%d] opaProfilesUpdateNotFound  %+v", 404, o.Payload)
}

func (o *OpaProfilesUpdateNotFound) GetPayload() *OpaProfilesUpdateNotFoundBody {
	return o.Payload
}

func (o *OpaProfilesUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OpaProfilesUpdateNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpaProfilesUpdateInternalServerError creates a OpaProfilesUpdateInternalServerError with default headers values
func NewOpaProfilesUpdateInternalServerError() *OpaProfilesUpdateInternalServerError {
	return &OpaProfilesUpdateInternalServerError{}
}

/*
OpaProfilesUpdateInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type OpaProfilesUpdateInternalServerError struct {
}

// IsSuccess returns true when this opa profiles update internal server error response has a 2xx status code
func (o *OpaProfilesUpdateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this opa profiles update internal server error response has a 3xx status code
func (o *OpaProfilesUpdateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this opa profiles update internal server error response has a 4xx status code
func (o *OpaProfilesUpdateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this opa profiles update internal server error response has a 5xx status code
func (o *OpaProfilesUpdateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this opa profiles update internal server error response a status code equal to that given
func (o *OpaProfilesUpdateInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *OpaProfilesUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v{v}/OpaProfiles][%d] opaProfilesUpdateInternalServerError ", 500)
}

func (o *OpaProfilesUpdateInternalServerError) String() string {
	return fmt.Sprintf("[PUT /api/v{v}/OpaProfiles][%d] opaProfilesUpdateInternalServerError ", 500)
}

func (o *OpaProfilesUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
OpaProfilesUpdateBadRequestBodyItems0 opa profiles update bad request body items0
swagger:model OpaProfilesUpdateBadRequestBodyItems0
*/
type OpaProfilesUpdateBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this opa profiles update bad request body items0
func (o *OpaProfilesUpdateBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this opa profiles update bad request body items0 based on context it is used
func (o *OpaProfilesUpdateBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OpaProfilesUpdateBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OpaProfilesUpdateBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res OpaProfilesUpdateBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OpaProfilesUpdateBody opa profiles update body
swagger:model OpaProfilesUpdateBody
*/
type OpaProfilesUpdateBody struct {

	// allowed repo
	AllowedRepo []string `json:"allowedRepo"`

	// forbid Http ingress
	ForbidHTTPIngress bool `json:"forbidHttpIngress"`

	// forbid node port
	ForbidNodePort bool `json:"forbidNodePort"`

	// forbid specific tags
	ForbidSpecificTags []string `json:"forbidSpecificTags"`

	// id
	ID int32 `json:"id,omitempty"`

	// ingress whitelist
	IngressWhitelist []string `json:"ingressWhitelist"`

	// name
	Name string `json:"name,omitempty"`

	// require probe
	RequireProbe bool `json:"requireProbe"`

	// unique ingresses
	UniqueIngresses bool `json:"uniqueIngresses"`

	// unique service selector
	UniqueServiceSelector bool `json:"uniqueServiceSelector"`
}

// Validate validates this opa profiles update body
func (o *OpaProfilesUpdateBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this opa profiles update body based on context it is used
func (o *OpaProfilesUpdateBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OpaProfilesUpdateBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OpaProfilesUpdateBody) UnmarshalBinary(b []byte) error {
	var res OpaProfilesUpdateBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OpaProfilesUpdateForbiddenBody opa profiles update forbidden body
swagger:model OpaProfilesUpdateForbiddenBody
*/
type OpaProfilesUpdateForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this opa profiles update forbidden body
func (o *OpaProfilesUpdateForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this opa profiles update forbidden body based on context it is used
func (o *OpaProfilesUpdateForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OpaProfilesUpdateForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OpaProfilesUpdateForbiddenBody) UnmarshalBinary(b []byte) error {
	var res OpaProfilesUpdateForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OpaProfilesUpdateNotFoundBody opa profiles update not found body
swagger:model OpaProfilesUpdateNotFoundBody
*/
type OpaProfilesUpdateNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this opa profiles update not found body
func (o *OpaProfilesUpdateNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this opa profiles update not found body based on context it is used
func (o *OpaProfilesUpdateNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OpaProfilesUpdateNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OpaProfilesUpdateNotFoundBody) UnmarshalBinary(b []byte) error {
	var res OpaProfilesUpdateNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
OpaProfilesUpdateUnauthorizedBody opa profiles update unauthorized body
swagger:model OpaProfilesUpdateUnauthorizedBody
*/
type OpaProfilesUpdateUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this opa profiles update unauthorized body
func (o *OpaProfilesUpdateUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this opa profiles update unauthorized body based on context it is used
func (o *OpaProfilesUpdateUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OpaProfilesUpdateUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OpaProfilesUpdateUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res OpaProfilesUpdateUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
