// Code generated by go-swagger; DO NOT EDIT.

package opa_profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new opa profiles API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for opa profiles API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	OpaProfilesCreate(params *OpaProfilesCreateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesCreateOK, error)

	OpaProfilesDelete(params *OpaProfilesDeleteParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesDeleteOK, error)

	OpaProfilesDisableGatekeeper(params *OpaProfilesDisableGatekeeperParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesDisableGatekeeperOK, error)

	OpaProfilesEnableGatekeeper(params *OpaProfilesEnableGatekeeperParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesEnableGatekeeperOK, error)

	OpaProfilesList(params *OpaProfilesListParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesListOK, error)

	OpaProfilesLockManager(params *OpaProfilesLockManagerParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesLockManagerOK, error)

	OpaProfilesMakeDefault(params *OpaProfilesMakeDefaultParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesMakeDefaultOK, error)

	OpaProfilesOpaProfilesForOrganizationList(params *OpaProfilesOpaProfilesForOrganizationListParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesOpaProfilesForOrganizationListOK, error)

	OpaProfilesSync(params *OpaProfilesSyncParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesSyncOK, error)

	OpaProfilesUpdate(params *OpaProfilesUpdateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesUpdateOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
OpaProfilesCreate creates policy profile
*/
func (a *Client) OpaProfilesCreate(params *OpaProfilesCreateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesCreateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOpaProfilesCreateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "OpaProfiles_Create",
		Method:             "POST",
		PathPattern:        "/api/v{v}/OpaProfiles",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &OpaProfilesCreateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OpaProfilesCreateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for OpaProfiles_Create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
OpaProfilesDelete deletes policy profile
*/
func (a *Client) OpaProfilesDelete(params *OpaProfilesDeleteParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesDeleteOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOpaProfilesDeleteParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "OpaProfiles_Delete",
		Method:             "POST",
		PathPattern:        "/api/v{v}/OpaProfiles/delete",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &OpaProfilesDeleteReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OpaProfilesDeleteOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for OpaProfiles_Delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
OpaProfilesDisableGatekeeper disables gatekeeper by the project Id
*/
func (a *Client) OpaProfilesDisableGatekeeper(params *OpaProfilesDisableGatekeeperParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesDisableGatekeeperOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOpaProfilesDisableGatekeeperParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "OpaProfiles_DisableGatekeeper",
		Method:             "POST",
		PathPattern:        "/api/v{v}/OpaProfiles/disablegatekeeper",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &OpaProfilesDisableGatekeeperReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OpaProfilesDisableGatekeeperOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for OpaProfiles_DisableGatekeeper: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
OpaProfilesEnableGatekeeper enables gatekeeper by the project Id
*/
func (a *Client) OpaProfilesEnableGatekeeper(params *OpaProfilesEnableGatekeeperParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesEnableGatekeeperOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOpaProfilesEnableGatekeeperParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "OpaProfiles_EnableGatekeeper",
		Method:             "POST",
		PathPattern:        "/api/v{v}/OpaProfiles/enablegatekeeper",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &OpaProfilesEnableGatekeeperReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OpaProfilesEnableGatekeeperOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for OpaProfiles_EnableGatekeeper: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
OpaProfilesList retrieves a list of policy profile for project
*/
func (a *Client) OpaProfilesList(params *OpaProfilesListParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOpaProfilesListParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "OpaProfiles_List",
		Method:             "GET",
		PathPattern:        "/api/v{v}/OpaProfiles",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &OpaProfilesListReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OpaProfilesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for OpaProfiles_List: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
OpaProfilesLockManager locks unlock policy profile
*/
func (a *Client) OpaProfilesLockManager(params *OpaProfilesLockManagerParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesLockManagerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOpaProfilesLockManagerParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "OpaProfiles_LockManager",
		Method:             "POST",
		PathPattern:        "/api/v{v}/OpaProfiles/lockmanager",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &OpaProfilesLockManagerReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OpaProfilesLockManagerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for OpaProfiles_LockManager: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
OpaProfilesMakeDefault chooses default policy profile
*/
func (a *Client) OpaProfilesMakeDefault(params *OpaProfilesMakeDefaultParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesMakeDefaultOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOpaProfilesMakeDefaultParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "OpaProfiles_MakeDefault",
		Method:             "POST",
		PathPattern:        "/api/v{v}/OpaProfiles/make-default",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &OpaProfilesMakeDefaultReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OpaProfilesMakeDefaultOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for OpaProfiles_MakeDefault: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
OpaProfilesOpaProfilesForOrganizationList retrieves policy profiles by organization Id
*/
func (a *Client) OpaProfilesOpaProfilesForOrganizationList(params *OpaProfilesOpaProfilesForOrganizationListParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesOpaProfilesForOrganizationListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOpaProfilesOpaProfilesForOrganizationListParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "OpaProfiles_OpaProfilesForOrganizationList",
		Method:             "GET",
		PathPattern:        "/api/v{v}/OpaProfiles/list",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &OpaProfilesOpaProfilesForOrganizationListReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OpaProfilesOpaProfilesForOrganizationListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for OpaProfiles_OpaProfilesForOrganizationList: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
OpaProfilesSync syncs policy profile
*/
func (a *Client) OpaProfilesSync(params *OpaProfilesSyncParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesSyncOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOpaProfilesSyncParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "OpaProfiles_Sync",
		Method:             "POST",
		PathPattern:        "/api/v{v}/OpaProfiles/sync",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &OpaProfilesSyncReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OpaProfilesSyncOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for OpaProfiles_Sync: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
OpaProfilesUpdate updates policy profile
*/
func (a *Client) OpaProfilesUpdate(params *OpaProfilesUpdateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOpaProfilesUpdateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "OpaProfiles_Update",
		Method:             "PUT",
		PathPattern:        "/api/v{v}/OpaProfiles",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &OpaProfilesUpdateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OpaProfilesUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for OpaProfiles_Update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
