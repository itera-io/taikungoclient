// Code generated by go-swagger; DO NOT EDIT.

package opa_profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new opa profiles API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for opa profiles API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	OpaProfilesCreate(params *OpaProfilesCreateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesCreateOK, error)

	OpaProfilesDelete(params *OpaProfilesDeleteParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesDeleteOK, error)

	OpaProfilesList(params *OpaProfilesListParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesListOK, error)

	OpaProfilesLockManager(params *OpaProfilesLockManagerParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesLockManagerOK, error)

	OpaProfilesUpdate(params *OpaProfilesUpdateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesUpdateOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  OpaProfilesCreate creates opa profile
*/
func (a *Client) OpaProfilesCreate(params *OpaProfilesCreateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesCreateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOpaProfilesCreateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "OpaProfiles_Create",
		Method:             "POST",
		PathPattern:        "/api/v{v}/OpaProfiles",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OpaProfilesCreateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OpaProfilesCreateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for OpaProfiles_Create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OpaProfilesDelete deletes opa profile
*/
func (a *Client) OpaProfilesDelete(params *OpaProfilesDeleteParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesDeleteOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOpaProfilesDeleteParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "OpaProfiles_Delete",
		Method:             "POST",
		PathPattern:        "/api/v{v}/OpaProfiles/delete",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OpaProfilesDeleteReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OpaProfilesDeleteOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for OpaProfiles_Delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OpaProfilesList retrieves a list of opa profiles for project
*/
func (a *Client) OpaProfilesList(params *OpaProfilesListParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOpaProfilesListParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "OpaProfiles_List",
		Method:             "GET",
		PathPattern:        "/api/v{v}/OpaProfiles",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OpaProfilesListReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OpaProfilesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for OpaProfiles_List: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OpaProfilesLockManager locks unlock opa profile
*/
func (a *Client) OpaProfilesLockManager(params *OpaProfilesLockManagerParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesLockManagerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOpaProfilesLockManagerParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "OpaProfiles_LockManager",
		Method:             "POST",
		PathPattern:        "/api/v{v}/OpaProfiles/lockmanager",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OpaProfilesLockManagerReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OpaProfilesLockManagerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for OpaProfiles_LockManager: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OpaProfilesUpdate updates opa profile
*/
func (a *Client) OpaProfilesUpdate(params *OpaProfilesUpdateParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*OpaProfilesUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOpaProfilesUpdateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "OpaProfiles_Update",
		Method:             "PUT",
		PathPattern:        "/api/v{v}/OpaProfiles",
		ProducesMediaTypes: []string{"application/json", "text/json", "text/plain"},
		ConsumesMediaTypes: []string{"application/*+json", "application/json", "application/json-patch+json", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OpaProfilesUpdateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OpaProfilesUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for OpaProfiles_Update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
