// Code generated by go-swagger; DO NOT EDIT.

package opa_profiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// OpaProfilesListReader is a Reader for the OpaProfilesList structure.
type OpaProfilesListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OpaProfilesListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOpaProfilesListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOpaProfilesListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewOpaProfilesListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewOpaProfilesListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOpaProfilesListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewOpaProfilesListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOpaProfilesListOK creates a OpaProfilesListOK with default headers values
func NewOpaProfilesListOK() *OpaProfilesListOK {
	return &OpaProfilesListOK{}
}

/*
OpaProfilesListOK describes a response with status code 200, with default header values.

Success
*/
type OpaProfilesListOK struct {
	Payload *models.OpaProfileList
}

// IsSuccess returns true when this opa profiles list o k response has a 2xx status code
func (o *OpaProfilesListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this opa profiles list o k response has a 3xx status code
func (o *OpaProfilesListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this opa profiles list o k response has a 4xx status code
func (o *OpaProfilesListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this opa profiles list o k response has a 5xx status code
func (o *OpaProfilesListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this opa profiles list o k response a status code equal to that given
func (o *OpaProfilesListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the opa profiles list o k response
func (o *OpaProfilesListOK) Code() int {
	return 200
}

func (o *OpaProfilesListOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/OpaProfiles][%d] opaProfilesListOK  %+v", 200, o.Payload)
}

func (o *OpaProfilesListOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/OpaProfiles][%d] opaProfilesListOK  %+v", 200, o.Payload)
}

func (o *OpaProfilesListOK) GetPayload() *models.OpaProfileList {
	return o.Payload
}

func (o *OpaProfilesListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OpaProfileList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpaProfilesListBadRequest creates a OpaProfilesListBadRequest with default headers values
func NewOpaProfilesListBadRequest() *OpaProfilesListBadRequest {
	return &OpaProfilesListBadRequest{}
}

/*
OpaProfilesListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type OpaProfilesListBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this opa profiles list bad request response has a 2xx status code
func (o *OpaProfilesListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this opa profiles list bad request response has a 3xx status code
func (o *OpaProfilesListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this opa profiles list bad request response has a 4xx status code
func (o *OpaProfilesListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this opa profiles list bad request response has a 5xx status code
func (o *OpaProfilesListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this opa profiles list bad request response a status code equal to that given
func (o *OpaProfilesListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the opa profiles list bad request response
func (o *OpaProfilesListBadRequest) Code() int {
	return 400
}

func (o *OpaProfilesListBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/OpaProfiles][%d] opaProfilesListBadRequest  %+v", 400, o.Payload)
}

func (o *OpaProfilesListBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/OpaProfiles][%d] opaProfilesListBadRequest  %+v", 400, o.Payload)
}

func (o *OpaProfilesListBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *OpaProfilesListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpaProfilesListUnauthorized creates a OpaProfilesListUnauthorized with default headers values
func NewOpaProfilesListUnauthorized() *OpaProfilesListUnauthorized {
	return &OpaProfilesListUnauthorized{}
}

/*
OpaProfilesListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type OpaProfilesListUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this opa profiles list unauthorized response has a 2xx status code
func (o *OpaProfilesListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this opa profiles list unauthorized response has a 3xx status code
func (o *OpaProfilesListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this opa profiles list unauthorized response has a 4xx status code
func (o *OpaProfilesListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this opa profiles list unauthorized response has a 5xx status code
func (o *OpaProfilesListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this opa profiles list unauthorized response a status code equal to that given
func (o *OpaProfilesListUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the opa profiles list unauthorized response
func (o *OpaProfilesListUnauthorized) Code() int {
	return 401
}

func (o *OpaProfilesListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/OpaProfiles][%d] opaProfilesListUnauthorized  %+v", 401, o.Payload)
}

func (o *OpaProfilesListUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/OpaProfiles][%d] opaProfilesListUnauthorized  %+v", 401, o.Payload)
}

func (o *OpaProfilesListUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *OpaProfilesListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpaProfilesListForbidden creates a OpaProfilesListForbidden with default headers values
func NewOpaProfilesListForbidden() *OpaProfilesListForbidden {
	return &OpaProfilesListForbidden{}
}

/*
OpaProfilesListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type OpaProfilesListForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this opa profiles list forbidden response has a 2xx status code
func (o *OpaProfilesListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this opa profiles list forbidden response has a 3xx status code
func (o *OpaProfilesListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this opa profiles list forbidden response has a 4xx status code
func (o *OpaProfilesListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this opa profiles list forbidden response has a 5xx status code
func (o *OpaProfilesListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this opa profiles list forbidden response a status code equal to that given
func (o *OpaProfilesListForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the opa profiles list forbidden response
func (o *OpaProfilesListForbidden) Code() int {
	return 403
}

func (o *OpaProfilesListForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/OpaProfiles][%d] opaProfilesListForbidden  %+v", 403, o.Payload)
}

func (o *OpaProfilesListForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/OpaProfiles][%d] opaProfilesListForbidden  %+v", 403, o.Payload)
}

func (o *OpaProfilesListForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *OpaProfilesListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpaProfilesListNotFound creates a OpaProfilesListNotFound with default headers values
func NewOpaProfilesListNotFound() *OpaProfilesListNotFound {
	return &OpaProfilesListNotFound{}
}

/*
OpaProfilesListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type OpaProfilesListNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this opa profiles list not found response has a 2xx status code
func (o *OpaProfilesListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this opa profiles list not found response has a 3xx status code
func (o *OpaProfilesListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this opa profiles list not found response has a 4xx status code
func (o *OpaProfilesListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this opa profiles list not found response has a 5xx status code
func (o *OpaProfilesListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this opa profiles list not found response a status code equal to that given
func (o *OpaProfilesListNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the opa profiles list not found response
func (o *OpaProfilesListNotFound) Code() int {
	return 404
}

func (o *OpaProfilesListNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/OpaProfiles][%d] opaProfilesListNotFound  %+v", 404, o.Payload)
}

func (o *OpaProfilesListNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/OpaProfiles][%d] opaProfilesListNotFound  %+v", 404, o.Payload)
}

func (o *OpaProfilesListNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *OpaProfilesListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpaProfilesListInternalServerError creates a OpaProfilesListInternalServerError with default headers values
func NewOpaProfilesListInternalServerError() *OpaProfilesListInternalServerError {
	return &OpaProfilesListInternalServerError{}
}

/*
OpaProfilesListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type OpaProfilesListInternalServerError struct {
}

// IsSuccess returns true when this opa profiles list internal server error response has a 2xx status code
func (o *OpaProfilesListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this opa profiles list internal server error response has a 3xx status code
func (o *OpaProfilesListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this opa profiles list internal server error response has a 4xx status code
func (o *OpaProfilesListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this opa profiles list internal server error response has a 5xx status code
func (o *OpaProfilesListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this opa profiles list internal server error response a status code equal to that given
func (o *OpaProfilesListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the opa profiles list internal server error response
func (o *OpaProfilesListInternalServerError) Code() int {
	return 500
}

func (o *OpaProfilesListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/OpaProfiles][%d] opaProfilesListInternalServerError ", 500)
}

func (o *OpaProfilesListInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/OpaProfiles][%d] opaProfilesListInternalServerError ", 500)
}

func (o *OpaProfilesListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
