/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the InvoiceListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceListDto{}

// InvoiceListDto struct for InvoiceListDto
type InvoiceListDto struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	StartDate *string `json:"startDate,omitempty"`
	EndDate *string `json:"endDate,omitempty"`
	RequiredPaymentAction *bool `json:"requiredPaymentAction,omitempty"`
	IsPaid *bool `json:"isPaid,omitempty"`
	InvoiceId *string `json:"invoiceId,omitempty"`
	SubscriptionType *string `json:"subscriptionType,omitempty"`
	SubscriptionName *string `json:"subscriptionName,omitempty"`
	Price *float64 `json:"price,omitempty"`
	OrganizationId *int32 `json:"organizationId,omitempty"`
	OrganizationName *string `json:"organizationName,omitempty"`
	InvoiceNumber *string `json:"invoiceNumber,omitempty"`
	OrganizationSubscriptionId *int32 `json:"organizationSubscriptionId,omitempty"`
}

// NewInvoiceListDto instantiates a new InvoiceListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceListDto() *InvoiceListDto {
	this := InvoiceListDto{}
	return &this
}

// NewInvoiceListDtoWithDefaults instantiates a new InvoiceListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceListDtoWithDefaults() *InvoiceListDto {
	this := InvoiceListDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InvoiceListDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InvoiceListDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *InvoiceListDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InvoiceListDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InvoiceListDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InvoiceListDto) SetName(v string) {
	o.Name = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *InvoiceListDto) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListDto) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *InvoiceListDto) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *InvoiceListDto) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *InvoiceListDto) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListDto) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *InvoiceListDto) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *InvoiceListDto) SetEndDate(v string) {
	o.EndDate = &v
}

// GetRequiredPaymentAction returns the RequiredPaymentAction field value if set, zero value otherwise.
func (o *InvoiceListDto) GetRequiredPaymentAction() bool {
	if o == nil || IsNil(o.RequiredPaymentAction) {
		var ret bool
		return ret
	}
	return *o.RequiredPaymentAction
}

// GetRequiredPaymentActionOk returns a tuple with the RequiredPaymentAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListDto) GetRequiredPaymentActionOk() (*bool, bool) {
	if o == nil || IsNil(o.RequiredPaymentAction) {
		return nil, false
	}
	return o.RequiredPaymentAction, true
}

// HasRequiredPaymentAction returns a boolean if a field has been set.
func (o *InvoiceListDto) HasRequiredPaymentAction() bool {
	if o != nil && !IsNil(o.RequiredPaymentAction) {
		return true
	}

	return false
}

// SetRequiredPaymentAction gets a reference to the given bool and assigns it to the RequiredPaymentAction field.
func (o *InvoiceListDto) SetRequiredPaymentAction(v bool) {
	o.RequiredPaymentAction = &v
}

// GetIsPaid returns the IsPaid field value if set, zero value otherwise.
func (o *InvoiceListDto) GetIsPaid() bool {
	if o == nil || IsNil(o.IsPaid) {
		var ret bool
		return ret
	}
	return *o.IsPaid
}

// GetIsPaidOk returns a tuple with the IsPaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListDto) GetIsPaidOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPaid) {
		return nil, false
	}
	return o.IsPaid, true
}

// HasIsPaid returns a boolean if a field has been set.
func (o *InvoiceListDto) HasIsPaid() bool {
	if o != nil && !IsNil(o.IsPaid) {
		return true
	}

	return false
}

// SetIsPaid gets a reference to the given bool and assigns it to the IsPaid field.
func (o *InvoiceListDto) SetIsPaid(v bool) {
	o.IsPaid = &v
}

// GetInvoiceId returns the InvoiceId field value if set, zero value otherwise.
func (o *InvoiceListDto) GetInvoiceId() string {
	if o == nil || IsNil(o.InvoiceId) {
		var ret string
		return ret
	}
	return *o.InvoiceId
}

// GetInvoiceIdOk returns a tuple with the InvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListDto) GetInvoiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceId) {
		return nil, false
	}
	return o.InvoiceId, true
}

// HasInvoiceId returns a boolean if a field has been set.
func (o *InvoiceListDto) HasInvoiceId() bool {
	if o != nil && !IsNil(o.InvoiceId) {
		return true
	}

	return false
}

// SetInvoiceId gets a reference to the given string and assigns it to the InvoiceId field.
func (o *InvoiceListDto) SetInvoiceId(v string) {
	o.InvoiceId = &v
}

// GetSubscriptionType returns the SubscriptionType field value if set, zero value otherwise.
func (o *InvoiceListDto) GetSubscriptionType() string {
	if o == nil || IsNil(o.SubscriptionType) {
		var ret string
		return ret
	}
	return *o.SubscriptionType
}

// GetSubscriptionTypeOk returns a tuple with the SubscriptionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListDto) GetSubscriptionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionType) {
		return nil, false
	}
	return o.SubscriptionType, true
}

// HasSubscriptionType returns a boolean if a field has been set.
func (o *InvoiceListDto) HasSubscriptionType() bool {
	if o != nil && !IsNil(o.SubscriptionType) {
		return true
	}

	return false
}

// SetSubscriptionType gets a reference to the given string and assigns it to the SubscriptionType field.
func (o *InvoiceListDto) SetSubscriptionType(v string) {
	o.SubscriptionType = &v
}

// GetSubscriptionName returns the SubscriptionName field value if set, zero value otherwise.
func (o *InvoiceListDto) GetSubscriptionName() string {
	if o == nil || IsNil(o.SubscriptionName) {
		var ret string
		return ret
	}
	return *o.SubscriptionName
}

// GetSubscriptionNameOk returns a tuple with the SubscriptionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListDto) GetSubscriptionNameOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionName) {
		return nil, false
	}
	return o.SubscriptionName, true
}

// HasSubscriptionName returns a boolean if a field has been set.
func (o *InvoiceListDto) HasSubscriptionName() bool {
	if o != nil && !IsNil(o.SubscriptionName) {
		return true
	}

	return false
}

// SetSubscriptionName gets a reference to the given string and assigns it to the SubscriptionName field.
func (o *InvoiceListDto) SetSubscriptionName(v string) {
	o.SubscriptionName = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *InvoiceListDto) GetPrice() float64 {
	if o == nil || IsNil(o.Price) {
		var ret float64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListDto) GetPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *InvoiceListDto) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float64 and assigns it to the Price field.
func (o *InvoiceListDto) SetPrice(v float64) {
	o.Price = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *InvoiceListDto) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *InvoiceListDto) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *InvoiceListDto) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *InvoiceListDto) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *InvoiceListDto) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *InvoiceListDto) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetInvoiceNumber returns the InvoiceNumber field value if set, zero value otherwise.
func (o *InvoiceListDto) GetInvoiceNumber() string {
	if o == nil || IsNil(o.InvoiceNumber) {
		var ret string
		return ret
	}
	return *o.InvoiceNumber
}

// GetInvoiceNumberOk returns a tuple with the InvoiceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListDto) GetInvoiceNumberOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceNumber) {
		return nil, false
	}
	return o.InvoiceNumber, true
}

// HasInvoiceNumber returns a boolean if a field has been set.
func (o *InvoiceListDto) HasInvoiceNumber() bool {
	if o != nil && !IsNil(o.InvoiceNumber) {
		return true
	}

	return false
}

// SetInvoiceNumber gets a reference to the given string and assigns it to the InvoiceNumber field.
func (o *InvoiceListDto) SetInvoiceNumber(v string) {
	o.InvoiceNumber = &v
}

// GetOrganizationSubscriptionId returns the OrganizationSubscriptionId field value if set, zero value otherwise.
func (o *InvoiceListDto) GetOrganizationSubscriptionId() int32 {
	if o == nil || IsNil(o.OrganizationSubscriptionId) {
		var ret int32
		return ret
	}
	return *o.OrganizationSubscriptionId
}

// GetOrganizationSubscriptionIdOk returns a tuple with the OrganizationSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceListDto) GetOrganizationSubscriptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationSubscriptionId) {
		return nil, false
	}
	return o.OrganizationSubscriptionId, true
}

// HasOrganizationSubscriptionId returns a boolean if a field has been set.
func (o *InvoiceListDto) HasOrganizationSubscriptionId() bool {
	if o != nil && !IsNil(o.OrganizationSubscriptionId) {
		return true
	}

	return false
}

// SetOrganizationSubscriptionId gets a reference to the given int32 and assigns it to the OrganizationSubscriptionId field.
func (o *InvoiceListDto) SetOrganizationSubscriptionId(v int32) {
	o.OrganizationSubscriptionId = &v
}

func (o InvoiceListDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.RequiredPaymentAction) {
		toSerialize["requiredPaymentAction"] = o.RequiredPaymentAction
	}
	if !IsNil(o.IsPaid) {
		toSerialize["isPaid"] = o.IsPaid
	}
	if !IsNil(o.InvoiceId) {
		toSerialize["invoiceId"] = o.InvoiceId
	}
	if !IsNil(o.SubscriptionType) {
		toSerialize["subscriptionType"] = o.SubscriptionType
	}
	if !IsNil(o.SubscriptionName) {
		toSerialize["subscriptionName"] = o.SubscriptionName
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.OrganizationName) {
		toSerialize["organizationName"] = o.OrganizationName
	}
	if !IsNil(o.InvoiceNumber) {
		toSerialize["invoiceNumber"] = o.InvoiceNumber
	}
	if !IsNil(o.OrganizationSubscriptionId) {
		toSerialize["organizationSubscriptionId"] = o.OrganizationSubscriptionId
	}
	return toSerialize, nil
}

type NullableInvoiceListDto struct {
	value *InvoiceListDto
	isSet bool
}

func (v NullableInvoiceListDto) Get() *InvoiceListDto {
	return v.value
}

func (v *NullableInvoiceListDto) Set(val *InvoiceListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceListDto(val *InvoiceListDto) *NullableInvoiceListDto {
	return &NullableInvoiceListDto{value: val, isSet: true}
}

func (v NullableInvoiceListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


