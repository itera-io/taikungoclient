// Code generated by go-swagger; DO NOT EDIT.

package tanzu

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// TanzuStorageListReader is a Reader for the TanzuStorageList structure.
type TanzuStorageListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TanzuStorageListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTanzuStorageListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTanzuStorageListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewTanzuStorageListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewTanzuStorageListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewTanzuStorageListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTanzuStorageListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewTanzuStorageListOK creates a TanzuStorageListOK with default headers values
func NewTanzuStorageListOK() *TanzuStorageListOK {
	return &TanzuStorageListOK{}
}

/*
TanzuStorageListOK describes a response with status code 200, with default header values.

Success
*/
type TanzuStorageListOK struct {
	Payload []string
}

// IsSuccess returns true when this tanzu storage list o k response has a 2xx status code
func (o *TanzuStorageListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this tanzu storage list o k response has a 3xx status code
func (o *TanzuStorageListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tanzu storage list o k response has a 4xx status code
func (o *TanzuStorageListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this tanzu storage list o k response has a 5xx status code
func (o *TanzuStorageListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this tanzu storage list o k response a status code equal to that given
func (o *TanzuStorageListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the tanzu storage list o k response
func (o *TanzuStorageListOK) Code() int {
	return 200
}

func (o *TanzuStorageListOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/storage-list][%d] tanzuStorageListOK  %+v", 200, o.Payload)
}

func (o *TanzuStorageListOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/storage-list][%d] tanzuStorageListOK  %+v", 200, o.Payload)
}

func (o *TanzuStorageListOK) GetPayload() []string {
	return o.Payload
}

func (o *TanzuStorageListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTanzuStorageListBadRequest creates a TanzuStorageListBadRequest with default headers values
func NewTanzuStorageListBadRequest() *TanzuStorageListBadRequest {
	return &TanzuStorageListBadRequest{}
}

/*
TanzuStorageListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type TanzuStorageListBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this tanzu storage list bad request response has a 2xx status code
func (o *TanzuStorageListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this tanzu storage list bad request response has a 3xx status code
func (o *TanzuStorageListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tanzu storage list bad request response has a 4xx status code
func (o *TanzuStorageListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this tanzu storage list bad request response has a 5xx status code
func (o *TanzuStorageListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this tanzu storage list bad request response a status code equal to that given
func (o *TanzuStorageListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the tanzu storage list bad request response
func (o *TanzuStorageListBadRequest) Code() int {
	return 400
}

func (o *TanzuStorageListBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/storage-list][%d] tanzuStorageListBadRequest  %+v", 400, o.Payload)
}

func (o *TanzuStorageListBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/storage-list][%d] tanzuStorageListBadRequest  %+v", 400, o.Payload)
}

func (o *TanzuStorageListBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *TanzuStorageListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTanzuStorageListUnauthorized creates a TanzuStorageListUnauthorized with default headers values
func NewTanzuStorageListUnauthorized() *TanzuStorageListUnauthorized {
	return &TanzuStorageListUnauthorized{}
}

/*
TanzuStorageListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type TanzuStorageListUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this tanzu storage list unauthorized response has a 2xx status code
func (o *TanzuStorageListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this tanzu storage list unauthorized response has a 3xx status code
func (o *TanzuStorageListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tanzu storage list unauthorized response has a 4xx status code
func (o *TanzuStorageListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this tanzu storage list unauthorized response has a 5xx status code
func (o *TanzuStorageListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this tanzu storage list unauthorized response a status code equal to that given
func (o *TanzuStorageListUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the tanzu storage list unauthorized response
func (o *TanzuStorageListUnauthorized) Code() int {
	return 401
}

func (o *TanzuStorageListUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/storage-list][%d] tanzuStorageListUnauthorized  %+v", 401, o.Payload)
}

func (o *TanzuStorageListUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/storage-list][%d] tanzuStorageListUnauthorized  %+v", 401, o.Payload)
}

func (o *TanzuStorageListUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *TanzuStorageListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTanzuStorageListForbidden creates a TanzuStorageListForbidden with default headers values
func NewTanzuStorageListForbidden() *TanzuStorageListForbidden {
	return &TanzuStorageListForbidden{}
}

/*
TanzuStorageListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type TanzuStorageListForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this tanzu storage list forbidden response has a 2xx status code
func (o *TanzuStorageListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this tanzu storage list forbidden response has a 3xx status code
func (o *TanzuStorageListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tanzu storage list forbidden response has a 4xx status code
func (o *TanzuStorageListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this tanzu storage list forbidden response has a 5xx status code
func (o *TanzuStorageListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this tanzu storage list forbidden response a status code equal to that given
func (o *TanzuStorageListForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the tanzu storage list forbidden response
func (o *TanzuStorageListForbidden) Code() int {
	return 403
}

func (o *TanzuStorageListForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/storage-list][%d] tanzuStorageListForbidden  %+v", 403, o.Payload)
}

func (o *TanzuStorageListForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/storage-list][%d] tanzuStorageListForbidden  %+v", 403, o.Payload)
}

func (o *TanzuStorageListForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *TanzuStorageListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTanzuStorageListNotFound creates a TanzuStorageListNotFound with default headers values
func NewTanzuStorageListNotFound() *TanzuStorageListNotFound {
	return &TanzuStorageListNotFound{}
}

/*
TanzuStorageListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type TanzuStorageListNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this tanzu storage list not found response has a 2xx status code
func (o *TanzuStorageListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this tanzu storage list not found response has a 3xx status code
func (o *TanzuStorageListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tanzu storage list not found response has a 4xx status code
func (o *TanzuStorageListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this tanzu storage list not found response has a 5xx status code
func (o *TanzuStorageListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this tanzu storage list not found response a status code equal to that given
func (o *TanzuStorageListNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the tanzu storage list not found response
func (o *TanzuStorageListNotFound) Code() int {
	return 404
}

func (o *TanzuStorageListNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/storage-list][%d] tanzuStorageListNotFound  %+v", 404, o.Payload)
}

func (o *TanzuStorageListNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/storage-list][%d] tanzuStorageListNotFound  %+v", 404, o.Payload)
}

func (o *TanzuStorageListNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *TanzuStorageListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTanzuStorageListInternalServerError creates a TanzuStorageListInternalServerError with default headers values
func NewTanzuStorageListInternalServerError() *TanzuStorageListInternalServerError {
	return &TanzuStorageListInternalServerError{}
}

/*
TanzuStorageListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type TanzuStorageListInternalServerError struct {
}

// IsSuccess returns true when this tanzu storage list internal server error response has a 2xx status code
func (o *TanzuStorageListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this tanzu storage list internal server error response has a 3xx status code
func (o *TanzuStorageListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tanzu storage list internal server error response has a 4xx status code
func (o *TanzuStorageListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this tanzu storage list internal server error response has a 5xx status code
func (o *TanzuStorageListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this tanzu storage list internal server error response a status code equal to that given
func (o *TanzuStorageListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the tanzu storage list internal server error response
func (o *TanzuStorageListInternalServerError) Code() int {
	return 500
}

func (o *TanzuStorageListInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/storage-list][%d] tanzuStorageListInternalServerError ", 500)
}

func (o *TanzuStorageListInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/storage-list][%d] tanzuStorageListInternalServerError ", 500)
}

func (o *TanzuStorageListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
