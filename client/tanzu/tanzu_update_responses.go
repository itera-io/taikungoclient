// Code generated by go-swagger; DO NOT EDIT.

package tanzu

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// TanzuUpdateReader is a Reader for the TanzuUpdate structure.
type TanzuUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TanzuUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTanzuUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTanzuUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewTanzuUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewTanzuUpdateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewTanzuUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTanzuUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewTanzuUpdateOK creates a TanzuUpdateOK with default headers values
func NewTanzuUpdateOK() *TanzuUpdateOK {
	return &TanzuUpdateOK{}
}

/*
TanzuUpdateOK describes a response with status code 200, with default header values.

Success
*/
type TanzuUpdateOK struct {
	Payload models.Unit
}

// IsSuccess returns true when this tanzu update o k response has a 2xx status code
func (o *TanzuUpdateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this tanzu update o k response has a 3xx status code
func (o *TanzuUpdateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tanzu update o k response has a 4xx status code
func (o *TanzuUpdateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this tanzu update o k response has a 5xx status code
func (o *TanzuUpdateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this tanzu update o k response a status code equal to that given
func (o *TanzuUpdateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the tanzu update o k response
func (o *TanzuUpdateOK) Code() int {
	return 200
}

func (o *TanzuUpdateOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/update][%d] tanzuUpdateOK  %+v", 200, o.Payload)
}

func (o *TanzuUpdateOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/update][%d] tanzuUpdateOK  %+v", 200, o.Payload)
}

func (o *TanzuUpdateOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *TanzuUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTanzuUpdateBadRequest creates a TanzuUpdateBadRequest with default headers values
func NewTanzuUpdateBadRequest() *TanzuUpdateBadRequest {
	return &TanzuUpdateBadRequest{}
}

/*
TanzuUpdateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type TanzuUpdateBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this tanzu update bad request response has a 2xx status code
func (o *TanzuUpdateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this tanzu update bad request response has a 3xx status code
func (o *TanzuUpdateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tanzu update bad request response has a 4xx status code
func (o *TanzuUpdateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this tanzu update bad request response has a 5xx status code
func (o *TanzuUpdateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this tanzu update bad request response a status code equal to that given
func (o *TanzuUpdateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the tanzu update bad request response
func (o *TanzuUpdateBadRequest) Code() int {
	return 400
}

func (o *TanzuUpdateBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/update][%d] tanzuUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *TanzuUpdateBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/update][%d] tanzuUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *TanzuUpdateBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *TanzuUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTanzuUpdateUnauthorized creates a TanzuUpdateUnauthorized with default headers values
func NewTanzuUpdateUnauthorized() *TanzuUpdateUnauthorized {
	return &TanzuUpdateUnauthorized{}
}

/*
TanzuUpdateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type TanzuUpdateUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this tanzu update unauthorized response has a 2xx status code
func (o *TanzuUpdateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this tanzu update unauthorized response has a 3xx status code
func (o *TanzuUpdateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tanzu update unauthorized response has a 4xx status code
func (o *TanzuUpdateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this tanzu update unauthorized response has a 5xx status code
func (o *TanzuUpdateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this tanzu update unauthorized response a status code equal to that given
func (o *TanzuUpdateUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the tanzu update unauthorized response
func (o *TanzuUpdateUnauthorized) Code() int {
	return 401
}

func (o *TanzuUpdateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/update][%d] tanzuUpdateUnauthorized  %+v", 401, o.Payload)
}

func (o *TanzuUpdateUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/update][%d] tanzuUpdateUnauthorized  %+v", 401, o.Payload)
}

func (o *TanzuUpdateUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *TanzuUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTanzuUpdateForbidden creates a TanzuUpdateForbidden with default headers values
func NewTanzuUpdateForbidden() *TanzuUpdateForbidden {
	return &TanzuUpdateForbidden{}
}

/*
TanzuUpdateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type TanzuUpdateForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this tanzu update forbidden response has a 2xx status code
func (o *TanzuUpdateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this tanzu update forbidden response has a 3xx status code
func (o *TanzuUpdateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tanzu update forbidden response has a 4xx status code
func (o *TanzuUpdateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this tanzu update forbidden response has a 5xx status code
func (o *TanzuUpdateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this tanzu update forbidden response a status code equal to that given
func (o *TanzuUpdateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the tanzu update forbidden response
func (o *TanzuUpdateForbidden) Code() int {
	return 403
}

func (o *TanzuUpdateForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/update][%d] tanzuUpdateForbidden  %+v", 403, o.Payload)
}

func (o *TanzuUpdateForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/update][%d] tanzuUpdateForbidden  %+v", 403, o.Payload)
}

func (o *TanzuUpdateForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *TanzuUpdateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTanzuUpdateNotFound creates a TanzuUpdateNotFound with default headers values
func NewTanzuUpdateNotFound() *TanzuUpdateNotFound {
	return &TanzuUpdateNotFound{}
}

/*
TanzuUpdateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type TanzuUpdateNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this tanzu update not found response has a 2xx status code
func (o *TanzuUpdateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this tanzu update not found response has a 3xx status code
func (o *TanzuUpdateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tanzu update not found response has a 4xx status code
func (o *TanzuUpdateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this tanzu update not found response has a 5xx status code
func (o *TanzuUpdateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this tanzu update not found response a status code equal to that given
func (o *TanzuUpdateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the tanzu update not found response
func (o *TanzuUpdateNotFound) Code() int {
	return 404
}

func (o *TanzuUpdateNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/update][%d] tanzuUpdateNotFound  %+v", 404, o.Payload)
}

func (o *TanzuUpdateNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/update][%d] tanzuUpdateNotFound  %+v", 404, o.Payload)
}

func (o *TanzuUpdateNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *TanzuUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTanzuUpdateInternalServerError creates a TanzuUpdateInternalServerError with default headers values
func NewTanzuUpdateInternalServerError() *TanzuUpdateInternalServerError {
	return &TanzuUpdateInternalServerError{}
}

/*
TanzuUpdateInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type TanzuUpdateInternalServerError struct {
}

// IsSuccess returns true when this tanzu update internal server error response has a 2xx status code
func (o *TanzuUpdateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this tanzu update internal server error response has a 3xx status code
func (o *TanzuUpdateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tanzu update internal server error response has a 4xx status code
func (o *TanzuUpdateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this tanzu update internal server error response has a 5xx status code
func (o *TanzuUpdateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this tanzu update internal server error response a status code equal to that given
func (o *TanzuUpdateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the tanzu update internal server error response
func (o *TanzuUpdateInternalServerError) Code() int {
	return 500
}

func (o *TanzuUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/update][%d] tanzuUpdateInternalServerError ", 500)
}

func (o *TanzuUpdateInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Tanzu/update][%d] tanzuUpdateInternalServerError ", 500)
}

func (o *TanzuUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
