/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProjectAppDetailsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectAppDetailsDto{}

// ProjectAppDetailsDto struct for ProjectAppDetailsDto
type ProjectAppDetailsDto struct {
	Id int32 `json:"id"`
	Name string `json:"name"`
	Namespace string `json:"namespace"`
	Status EInstanceStatus `json:"status"`
	Version string `json:"version"`
	CatalogId int32 `json:"catalogId"`
	CatalogName string `json:"catalogName"`
	CatalogAppName string `json:"catalogAppName"`
	AppRepoName string `json:"appRepoName"`
	Logo NullableString `json:"logo"`
	Values string `json:"values"`
	AutoSync bool `json:"autoSync"`
	ReleaseNotes NullableString `json:"releaseNotes"`
	ProjectName string `json:"projectName"`
	HelmResult string `json:"helmResult"`
	ProjectId int32 `json:"projectId"`
	HasJsonSchema bool `json:"hasJsonSchema"`
	CatalogAppId int32 `json:"catalogAppId"`
	PackageId string `json:"packageId"`
	Logs NullableString `json:"logs"`
	ProjectAppParams []ProjectAppParamDto `json:"projectAppParams"`
}

type _ProjectAppDetailsDto ProjectAppDetailsDto

// NewProjectAppDetailsDto instantiates a new ProjectAppDetailsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectAppDetailsDto(id int32, name string, namespace string, status EInstanceStatus, version string, catalogId int32, catalogName string, catalogAppName string, appRepoName string, logo NullableString, values string, autoSync bool, releaseNotes NullableString, projectName string, helmResult string, projectId int32, hasJsonSchema bool, catalogAppId int32, packageId string, logs NullableString, projectAppParams []ProjectAppParamDto) *ProjectAppDetailsDto {
	this := ProjectAppDetailsDto{}
	this.Id = id
	this.Name = name
	this.Namespace = namespace
	this.Status = status
	this.Version = version
	this.CatalogId = catalogId
	this.CatalogName = catalogName
	this.CatalogAppName = catalogAppName
	this.AppRepoName = appRepoName
	this.Logo = logo
	this.Values = values
	this.AutoSync = autoSync
	this.ReleaseNotes = releaseNotes
	this.ProjectName = projectName
	this.HelmResult = helmResult
	this.ProjectId = projectId
	this.HasJsonSchema = hasJsonSchema
	this.CatalogAppId = catalogAppId
	this.PackageId = packageId
	this.Logs = logs
	this.ProjectAppParams = projectAppParams
	return &this
}

// NewProjectAppDetailsDtoWithDefaults instantiates a new ProjectAppDetailsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectAppDetailsDtoWithDefaults() *ProjectAppDetailsDto {
	this := ProjectAppDetailsDto{}
	return &this
}

// GetId returns the Id field value
func (o *ProjectAppDetailsDto) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ProjectAppDetailsDto) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ProjectAppDetailsDto) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ProjectAppDetailsDto) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ProjectAppDetailsDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ProjectAppDetailsDto) SetName(v string) {
	o.Name = v
}

// GetNamespace returns the Namespace field value
func (o *ProjectAppDetailsDto) GetNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
func (o *ProjectAppDetailsDto) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Namespace, true
}

// SetNamespace sets field value
func (o *ProjectAppDetailsDto) SetNamespace(v string) {
	o.Namespace = v
}

// GetStatus returns the Status field value
func (o *ProjectAppDetailsDto) GetStatus() EInstanceStatus {
	if o == nil {
		var ret EInstanceStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ProjectAppDetailsDto) GetStatusOk() (*EInstanceStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ProjectAppDetailsDto) SetStatus(v EInstanceStatus) {
	o.Status = v
}

// GetVersion returns the Version field value
func (o *ProjectAppDetailsDto) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ProjectAppDetailsDto) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ProjectAppDetailsDto) SetVersion(v string) {
	o.Version = v
}

// GetCatalogId returns the CatalogId field value
func (o *ProjectAppDetailsDto) GetCatalogId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CatalogId
}

// GetCatalogIdOk returns a tuple with the CatalogId field value
// and a boolean to check if the value has been set.
func (o *ProjectAppDetailsDto) GetCatalogIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CatalogId, true
}

// SetCatalogId sets field value
func (o *ProjectAppDetailsDto) SetCatalogId(v int32) {
	o.CatalogId = v
}

// GetCatalogName returns the CatalogName field value
func (o *ProjectAppDetailsDto) GetCatalogName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CatalogName
}

// GetCatalogNameOk returns a tuple with the CatalogName field value
// and a boolean to check if the value has been set.
func (o *ProjectAppDetailsDto) GetCatalogNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CatalogName, true
}

// SetCatalogName sets field value
func (o *ProjectAppDetailsDto) SetCatalogName(v string) {
	o.CatalogName = v
}

// GetCatalogAppName returns the CatalogAppName field value
func (o *ProjectAppDetailsDto) GetCatalogAppName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CatalogAppName
}

// GetCatalogAppNameOk returns a tuple with the CatalogAppName field value
// and a boolean to check if the value has been set.
func (o *ProjectAppDetailsDto) GetCatalogAppNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CatalogAppName, true
}

// SetCatalogAppName sets field value
func (o *ProjectAppDetailsDto) SetCatalogAppName(v string) {
	o.CatalogAppName = v
}

// GetAppRepoName returns the AppRepoName field value
func (o *ProjectAppDetailsDto) GetAppRepoName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppRepoName
}

// GetAppRepoNameOk returns a tuple with the AppRepoName field value
// and a boolean to check if the value has been set.
func (o *ProjectAppDetailsDto) GetAppRepoNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppRepoName, true
}

// SetAppRepoName sets field value
func (o *ProjectAppDetailsDto) SetAppRepoName(v string) {
	o.AppRepoName = v
}

// GetLogo returns the Logo field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProjectAppDetailsDto) GetLogo() string {
	if o == nil || o.Logo.Get() == nil {
		var ret string
		return ret
	}

	return *o.Logo.Get()
}

// GetLogoOk returns a tuple with the Logo field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectAppDetailsDto) GetLogoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Logo.Get(), o.Logo.IsSet()
}

// SetLogo sets field value
func (o *ProjectAppDetailsDto) SetLogo(v string) {
	o.Logo.Set(&v)
}

// GetValues returns the Values field value
func (o *ProjectAppDetailsDto) GetValues() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *ProjectAppDetailsDto) GetValuesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Values, true
}

// SetValues sets field value
func (o *ProjectAppDetailsDto) SetValues(v string) {
	o.Values = v
}

// GetAutoSync returns the AutoSync field value
func (o *ProjectAppDetailsDto) GetAutoSync() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoSync
}

// GetAutoSyncOk returns a tuple with the AutoSync field value
// and a boolean to check if the value has been set.
func (o *ProjectAppDetailsDto) GetAutoSyncOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoSync, true
}

// SetAutoSync sets field value
func (o *ProjectAppDetailsDto) SetAutoSync(v bool) {
	o.AutoSync = v
}

// GetReleaseNotes returns the ReleaseNotes field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProjectAppDetailsDto) GetReleaseNotes() string {
	if o == nil || o.ReleaseNotes.Get() == nil {
		var ret string
		return ret
	}

	return *o.ReleaseNotes.Get()
}

// GetReleaseNotesOk returns a tuple with the ReleaseNotes field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectAppDetailsDto) GetReleaseNotesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReleaseNotes.Get(), o.ReleaseNotes.IsSet()
}

// SetReleaseNotes sets field value
func (o *ProjectAppDetailsDto) SetReleaseNotes(v string) {
	o.ReleaseNotes.Set(&v)
}

// GetProjectName returns the ProjectName field value
func (o *ProjectAppDetailsDto) GetProjectName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value
// and a boolean to check if the value has been set.
func (o *ProjectAppDetailsDto) GetProjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectName, true
}

// SetProjectName sets field value
func (o *ProjectAppDetailsDto) SetProjectName(v string) {
	o.ProjectName = v
}

// GetHelmResult returns the HelmResult field value
func (o *ProjectAppDetailsDto) GetHelmResult() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HelmResult
}

// GetHelmResultOk returns a tuple with the HelmResult field value
// and a boolean to check if the value has been set.
func (o *ProjectAppDetailsDto) GetHelmResultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HelmResult, true
}

// SetHelmResult sets field value
func (o *ProjectAppDetailsDto) SetHelmResult(v string) {
	o.HelmResult = v
}

// GetProjectId returns the ProjectId field value
func (o *ProjectAppDetailsDto) GetProjectId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *ProjectAppDetailsDto) GetProjectIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *ProjectAppDetailsDto) SetProjectId(v int32) {
	o.ProjectId = v
}

// GetHasJsonSchema returns the HasJsonSchema field value
func (o *ProjectAppDetailsDto) GetHasJsonSchema() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasJsonSchema
}

// GetHasJsonSchemaOk returns a tuple with the HasJsonSchema field value
// and a boolean to check if the value has been set.
func (o *ProjectAppDetailsDto) GetHasJsonSchemaOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasJsonSchema, true
}

// SetHasJsonSchema sets field value
func (o *ProjectAppDetailsDto) SetHasJsonSchema(v bool) {
	o.HasJsonSchema = v
}

// GetCatalogAppId returns the CatalogAppId field value
func (o *ProjectAppDetailsDto) GetCatalogAppId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CatalogAppId
}

// GetCatalogAppIdOk returns a tuple with the CatalogAppId field value
// and a boolean to check if the value has been set.
func (o *ProjectAppDetailsDto) GetCatalogAppIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CatalogAppId, true
}

// SetCatalogAppId sets field value
func (o *ProjectAppDetailsDto) SetCatalogAppId(v int32) {
	o.CatalogAppId = v
}

// GetPackageId returns the PackageId field value
func (o *ProjectAppDetailsDto) GetPackageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PackageId
}

// GetPackageIdOk returns a tuple with the PackageId field value
// and a boolean to check if the value has been set.
func (o *ProjectAppDetailsDto) GetPackageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PackageId, true
}

// SetPackageId sets field value
func (o *ProjectAppDetailsDto) SetPackageId(v string) {
	o.PackageId = v
}

// GetLogs returns the Logs field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProjectAppDetailsDto) GetLogs() string {
	if o == nil || o.Logs.Get() == nil {
		var ret string
		return ret
	}

	return *o.Logs.Get()
}

// GetLogsOk returns a tuple with the Logs field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectAppDetailsDto) GetLogsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Logs.Get(), o.Logs.IsSet()
}

// SetLogs sets field value
func (o *ProjectAppDetailsDto) SetLogs(v string) {
	o.Logs.Set(&v)
}

// GetProjectAppParams returns the ProjectAppParams field value
// If the value is explicit nil, the zero value for []ProjectAppParamDto will be returned
func (o *ProjectAppDetailsDto) GetProjectAppParams() []ProjectAppParamDto {
	if o == nil {
		var ret []ProjectAppParamDto
		return ret
	}

	return o.ProjectAppParams
}

// GetProjectAppParamsOk returns a tuple with the ProjectAppParams field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectAppDetailsDto) GetProjectAppParamsOk() ([]ProjectAppParamDto, bool) {
	if o == nil || IsNil(o.ProjectAppParams) {
		return nil, false
	}
	return o.ProjectAppParams, true
}

// SetProjectAppParams sets field value
func (o *ProjectAppDetailsDto) SetProjectAppParams(v []ProjectAppParamDto) {
	o.ProjectAppParams = v
}

func (o ProjectAppDetailsDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectAppDetailsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["namespace"] = o.Namespace
	toSerialize["status"] = o.Status
	toSerialize["version"] = o.Version
	toSerialize["catalogId"] = o.CatalogId
	toSerialize["catalogName"] = o.CatalogName
	toSerialize["catalogAppName"] = o.CatalogAppName
	toSerialize["appRepoName"] = o.AppRepoName
	toSerialize["logo"] = o.Logo.Get()
	toSerialize["values"] = o.Values
	toSerialize["autoSync"] = o.AutoSync
	toSerialize["releaseNotes"] = o.ReleaseNotes.Get()
	toSerialize["projectName"] = o.ProjectName
	toSerialize["helmResult"] = o.HelmResult
	toSerialize["projectId"] = o.ProjectId
	toSerialize["hasJsonSchema"] = o.HasJsonSchema
	toSerialize["catalogAppId"] = o.CatalogAppId
	toSerialize["packageId"] = o.PackageId
	toSerialize["logs"] = o.Logs.Get()
	if o.ProjectAppParams != nil {
		toSerialize["projectAppParams"] = o.ProjectAppParams
	}
	return toSerialize, nil
}

func (o *ProjectAppDetailsDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"namespace",
		"status",
		"version",
		"catalogId",
		"catalogName",
		"catalogAppName",
		"appRepoName",
		"logo",
		"values",
		"autoSync",
		"releaseNotes",
		"projectName",
		"helmResult",
		"projectId",
		"hasJsonSchema",
		"catalogAppId",
		"packageId",
		"logs",
		"projectAppParams",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProjectAppDetailsDto := _ProjectAppDetailsDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProjectAppDetailsDto)

	if err != nil {
		return err
	}

	*o = ProjectAppDetailsDto(varProjectAppDetailsDto)

	return err
}

type NullableProjectAppDetailsDto struct {
	value *ProjectAppDetailsDto
	isSet bool
}

func (v NullableProjectAppDetailsDto) Get() *ProjectAppDetailsDto {
	return v.value
}

func (v *NullableProjectAppDetailsDto) Set(val *ProjectAppDetailsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectAppDetailsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectAppDetailsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectAppDetailsDto(val *ProjectAppDetailsDto) *NullableProjectAppDetailsDto {
	return &NullableProjectAppDetailsDto{value: val, isSet: true}
}

func (v NullableProjectAppDetailsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectAppDetailsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


