/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AzureCredentialList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureCredentialList{}

// AzureCredentialList struct for AzureCredentialList
type AzureCredentialList struct {
	Data []AzureCredentialsListDto `json:"data"`
	TotalCount int32 `json:"totalCount"`
}

type _AzureCredentialList AzureCredentialList

// NewAzureCredentialList instantiates a new AzureCredentialList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureCredentialList(data []AzureCredentialsListDto, totalCount int32) *AzureCredentialList {
	this := AzureCredentialList{}
	this.Data = data
	this.TotalCount = totalCount
	return &this
}

// NewAzureCredentialListWithDefaults instantiates a new AzureCredentialList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureCredentialListWithDefaults() *AzureCredentialList {
	this := AzureCredentialList{}
	return &this
}

// GetData returns the Data field value
// If the value is explicit nil, the zero value for []AzureCredentialsListDto will be returned
func (o *AzureCredentialList) GetData() []AzureCredentialsListDto {
	if o == nil {
		var ret []AzureCredentialsListDto
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AzureCredentialList) GetDataOk() ([]AzureCredentialsListDto, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *AzureCredentialList) SetData(v []AzureCredentialsListDto) {
	o.Data = v
}

// GetTotalCount returns the TotalCount field value
func (o *AzureCredentialList) GetTotalCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value
// and a boolean to check if the value has been set.
func (o *AzureCredentialList) GetTotalCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalCount, true
}

// SetTotalCount sets field value
func (o *AzureCredentialList) SetTotalCount(v int32) {
	o.TotalCount = v
}

func (o AzureCredentialList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureCredentialList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	toSerialize["totalCount"] = o.TotalCount
	return toSerialize, nil
}

func (o *AzureCredentialList) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
		"totalCount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAzureCredentialList := _AzureCredentialList{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAzureCredentialList)

	if err != nil {
		return err
	}

	*o = AzureCredentialList(varAzureCredentialList)

	return err
}

type NullableAzureCredentialList struct {
	value *AzureCredentialList
	isSet bool
}

func (v NullableAzureCredentialList) Get() *AzureCredentialList {
	return v.value
}

func (v *NullableAzureCredentialList) Set(val *AzureCredentialList) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureCredentialList) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureCredentialList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureCredentialList(val *AzureCredentialList) *NullableAzureCredentialList {
	return &NullableAzureCredentialList{value: val, isSet: true}
}

func (v NullableAzureCredentialList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureCredentialList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


