// Code generated by go-swagger; DO NOT EDIT.

package proxmox

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ProxmoxHypervisorListReader is a Reader for the ProxmoxHypervisorList structure.
type ProxmoxHypervisorListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProxmoxHypervisorListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProxmoxHypervisorListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProxmoxHypervisorListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProxmoxHypervisorListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProxmoxHypervisorListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProxmoxHypervisorListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProxmoxHypervisorListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProxmoxHypervisorListOK creates a ProxmoxHypervisorListOK with default headers values
func NewProxmoxHypervisorListOK() *ProxmoxHypervisorListOK {
	return &ProxmoxHypervisorListOK{}
}

/*
ProxmoxHypervisorListOK describes a response with status code 200, with default header values.

Success
*/
type ProxmoxHypervisorListOK struct {
	Payload []string
}

// IsSuccess returns true when this proxmox hypervisor list o k response has a 2xx status code
func (o *ProxmoxHypervisorListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this proxmox hypervisor list o k response has a 3xx status code
func (o *ProxmoxHypervisorListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox hypervisor list o k response has a 4xx status code
func (o *ProxmoxHypervisorListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this proxmox hypervisor list o k response has a 5xx status code
func (o *ProxmoxHypervisorListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this proxmox hypervisor list o k response a status code equal to that given
func (o *ProxmoxHypervisorListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the proxmox hypervisor list o k response
func (o *ProxmoxHypervisorListOK) Code() int {
	return 200
}

func (o *ProxmoxHypervisorListOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/hypervisor-list][%d] proxmoxHypervisorListOK  %+v", 200, o.Payload)
}

func (o *ProxmoxHypervisorListOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/hypervisor-list][%d] proxmoxHypervisorListOK  %+v", 200, o.Payload)
}

func (o *ProxmoxHypervisorListOK) GetPayload() []string {
	return o.Payload
}

func (o *ProxmoxHypervisorListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProxmoxHypervisorListBadRequest creates a ProxmoxHypervisorListBadRequest with default headers values
func NewProxmoxHypervisorListBadRequest() *ProxmoxHypervisorListBadRequest {
	return &ProxmoxHypervisorListBadRequest{}
}

/*
ProxmoxHypervisorListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProxmoxHypervisorListBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this proxmox hypervisor list bad request response has a 2xx status code
func (o *ProxmoxHypervisorListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this proxmox hypervisor list bad request response has a 3xx status code
func (o *ProxmoxHypervisorListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox hypervisor list bad request response has a 4xx status code
func (o *ProxmoxHypervisorListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this proxmox hypervisor list bad request response has a 5xx status code
func (o *ProxmoxHypervisorListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this proxmox hypervisor list bad request response a status code equal to that given
func (o *ProxmoxHypervisorListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the proxmox hypervisor list bad request response
func (o *ProxmoxHypervisorListBadRequest) Code() int {
	return 400
}

func (o *ProxmoxHypervisorListBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/hypervisor-list][%d] proxmoxHypervisorListBadRequest  %+v", 400, o.Payload)
}

func (o *ProxmoxHypervisorListBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/hypervisor-list][%d] proxmoxHypervisorListBadRequest  %+v", 400, o.Payload)
}

func (o *ProxmoxHypervisorListBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProxmoxHypervisorListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProxmoxHypervisorListUnauthorized creates a ProxmoxHypervisorListUnauthorized with default headers values
func NewProxmoxHypervisorListUnauthorized() *ProxmoxHypervisorListUnauthorized {
	return &ProxmoxHypervisorListUnauthorized{}
}

/*
ProxmoxHypervisorListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProxmoxHypervisorListUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this proxmox hypervisor list unauthorized response has a 2xx status code
func (o *ProxmoxHypervisorListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this proxmox hypervisor list unauthorized response has a 3xx status code
func (o *ProxmoxHypervisorListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox hypervisor list unauthorized response has a 4xx status code
func (o *ProxmoxHypervisorListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this proxmox hypervisor list unauthorized response has a 5xx status code
func (o *ProxmoxHypervisorListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this proxmox hypervisor list unauthorized response a status code equal to that given
func (o *ProxmoxHypervisorListUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the proxmox hypervisor list unauthorized response
func (o *ProxmoxHypervisorListUnauthorized) Code() int {
	return 401
}

func (o *ProxmoxHypervisorListUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/hypervisor-list][%d] proxmoxHypervisorListUnauthorized  %+v", 401, o.Payload)
}

func (o *ProxmoxHypervisorListUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/hypervisor-list][%d] proxmoxHypervisorListUnauthorized  %+v", 401, o.Payload)
}

func (o *ProxmoxHypervisorListUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProxmoxHypervisorListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProxmoxHypervisorListForbidden creates a ProxmoxHypervisorListForbidden with default headers values
func NewProxmoxHypervisorListForbidden() *ProxmoxHypervisorListForbidden {
	return &ProxmoxHypervisorListForbidden{}
}

/*
ProxmoxHypervisorListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ProxmoxHypervisorListForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this proxmox hypervisor list forbidden response has a 2xx status code
func (o *ProxmoxHypervisorListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this proxmox hypervisor list forbidden response has a 3xx status code
func (o *ProxmoxHypervisorListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox hypervisor list forbidden response has a 4xx status code
func (o *ProxmoxHypervisorListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this proxmox hypervisor list forbidden response has a 5xx status code
func (o *ProxmoxHypervisorListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this proxmox hypervisor list forbidden response a status code equal to that given
func (o *ProxmoxHypervisorListForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the proxmox hypervisor list forbidden response
func (o *ProxmoxHypervisorListForbidden) Code() int {
	return 403
}

func (o *ProxmoxHypervisorListForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/hypervisor-list][%d] proxmoxHypervisorListForbidden  %+v", 403, o.Payload)
}

func (o *ProxmoxHypervisorListForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/hypervisor-list][%d] proxmoxHypervisorListForbidden  %+v", 403, o.Payload)
}

func (o *ProxmoxHypervisorListForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProxmoxHypervisorListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProxmoxHypervisorListNotFound creates a ProxmoxHypervisorListNotFound with default headers values
func NewProxmoxHypervisorListNotFound() *ProxmoxHypervisorListNotFound {
	return &ProxmoxHypervisorListNotFound{}
}

/*
ProxmoxHypervisorListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProxmoxHypervisorListNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this proxmox hypervisor list not found response has a 2xx status code
func (o *ProxmoxHypervisorListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this proxmox hypervisor list not found response has a 3xx status code
func (o *ProxmoxHypervisorListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox hypervisor list not found response has a 4xx status code
func (o *ProxmoxHypervisorListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this proxmox hypervisor list not found response has a 5xx status code
func (o *ProxmoxHypervisorListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this proxmox hypervisor list not found response a status code equal to that given
func (o *ProxmoxHypervisorListNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the proxmox hypervisor list not found response
func (o *ProxmoxHypervisorListNotFound) Code() int {
	return 404
}

func (o *ProxmoxHypervisorListNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/hypervisor-list][%d] proxmoxHypervisorListNotFound  %+v", 404, o.Payload)
}

func (o *ProxmoxHypervisorListNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/hypervisor-list][%d] proxmoxHypervisorListNotFound  %+v", 404, o.Payload)
}

func (o *ProxmoxHypervisorListNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProxmoxHypervisorListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProxmoxHypervisorListInternalServerError creates a ProxmoxHypervisorListInternalServerError with default headers values
func NewProxmoxHypervisorListInternalServerError() *ProxmoxHypervisorListInternalServerError {
	return &ProxmoxHypervisorListInternalServerError{}
}

/*
ProxmoxHypervisorListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ProxmoxHypervisorListInternalServerError struct {
}

// IsSuccess returns true when this proxmox hypervisor list internal server error response has a 2xx status code
func (o *ProxmoxHypervisorListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this proxmox hypervisor list internal server error response has a 3xx status code
func (o *ProxmoxHypervisorListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox hypervisor list internal server error response has a 4xx status code
func (o *ProxmoxHypervisorListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this proxmox hypervisor list internal server error response has a 5xx status code
func (o *ProxmoxHypervisorListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this proxmox hypervisor list internal server error response a status code equal to that given
func (o *ProxmoxHypervisorListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the proxmox hypervisor list internal server error response
func (o *ProxmoxHypervisorListInternalServerError) Code() int {
	return 500
}

func (o *ProxmoxHypervisorListInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/hypervisor-list][%d] proxmoxHypervisorListInternalServerError ", 500)
}

func (o *ProxmoxHypervisorListInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/hypervisor-list][%d] proxmoxHypervisorListInternalServerError ", 500)
}

func (o *ProxmoxHypervisorListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
