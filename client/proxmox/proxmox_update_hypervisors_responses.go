// Code generated by go-swagger; DO NOT EDIT.

package proxmox

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ProxmoxUpdateHypervisorsReader is a Reader for the ProxmoxUpdateHypervisors structure.
type ProxmoxUpdateHypervisorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProxmoxUpdateHypervisorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProxmoxUpdateHypervisorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProxmoxUpdateHypervisorsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProxmoxUpdateHypervisorsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProxmoxUpdateHypervisorsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProxmoxUpdateHypervisorsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProxmoxUpdateHypervisorsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProxmoxUpdateHypervisorsOK creates a ProxmoxUpdateHypervisorsOK with default headers values
func NewProxmoxUpdateHypervisorsOK() *ProxmoxUpdateHypervisorsOK {
	return &ProxmoxUpdateHypervisorsOK{}
}

/*
ProxmoxUpdateHypervisorsOK describes a response with status code 200, with default header values.

Success
*/
type ProxmoxUpdateHypervisorsOK struct {
}

// IsSuccess returns true when this proxmox update hypervisors o k response has a 2xx status code
func (o *ProxmoxUpdateHypervisorsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this proxmox update hypervisors o k response has a 3xx status code
func (o *ProxmoxUpdateHypervisorsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox update hypervisors o k response has a 4xx status code
func (o *ProxmoxUpdateHypervisorsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this proxmox update hypervisors o k response has a 5xx status code
func (o *ProxmoxUpdateHypervisorsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this proxmox update hypervisors o k response a status code equal to that given
func (o *ProxmoxUpdateHypervisorsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the proxmox update hypervisors o k response
func (o *ProxmoxUpdateHypervisorsOK) Code() int {
	return 200
}

func (o *ProxmoxUpdateHypervisorsOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/update/hypervisors][%d] proxmoxUpdateHypervisorsOK ", 200)
}

func (o *ProxmoxUpdateHypervisorsOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/update/hypervisors][%d] proxmoxUpdateHypervisorsOK ", 200)
}

func (o *ProxmoxUpdateHypervisorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewProxmoxUpdateHypervisorsBadRequest creates a ProxmoxUpdateHypervisorsBadRequest with default headers values
func NewProxmoxUpdateHypervisorsBadRequest() *ProxmoxUpdateHypervisorsBadRequest {
	return &ProxmoxUpdateHypervisorsBadRequest{}
}

/*
ProxmoxUpdateHypervisorsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProxmoxUpdateHypervisorsBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this proxmox update hypervisors bad request response has a 2xx status code
func (o *ProxmoxUpdateHypervisorsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this proxmox update hypervisors bad request response has a 3xx status code
func (o *ProxmoxUpdateHypervisorsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox update hypervisors bad request response has a 4xx status code
func (o *ProxmoxUpdateHypervisorsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this proxmox update hypervisors bad request response has a 5xx status code
func (o *ProxmoxUpdateHypervisorsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this proxmox update hypervisors bad request response a status code equal to that given
func (o *ProxmoxUpdateHypervisorsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the proxmox update hypervisors bad request response
func (o *ProxmoxUpdateHypervisorsBadRequest) Code() int {
	return 400
}

func (o *ProxmoxUpdateHypervisorsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/update/hypervisors][%d] proxmoxUpdateHypervisorsBadRequest  %+v", 400, o.Payload)
}

func (o *ProxmoxUpdateHypervisorsBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/update/hypervisors][%d] proxmoxUpdateHypervisorsBadRequest  %+v", 400, o.Payload)
}

func (o *ProxmoxUpdateHypervisorsBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *ProxmoxUpdateHypervisorsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProxmoxUpdateHypervisorsUnauthorized creates a ProxmoxUpdateHypervisorsUnauthorized with default headers values
func NewProxmoxUpdateHypervisorsUnauthorized() *ProxmoxUpdateHypervisorsUnauthorized {
	return &ProxmoxUpdateHypervisorsUnauthorized{}
}

/*
ProxmoxUpdateHypervisorsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProxmoxUpdateHypervisorsUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this proxmox update hypervisors unauthorized response has a 2xx status code
func (o *ProxmoxUpdateHypervisorsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this proxmox update hypervisors unauthorized response has a 3xx status code
func (o *ProxmoxUpdateHypervisorsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox update hypervisors unauthorized response has a 4xx status code
func (o *ProxmoxUpdateHypervisorsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this proxmox update hypervisors unauthorized response has a 5xx status code
func (o *ProxmoxUpdateHypervisorsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this proxmox update hypervisors unauthorized response a status code equal to that given
func (o *ProxmoxUpdateHypervisorsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the proxmox update hypervisors unauthorized response
func (o *ProxmoxUpdateHypervisorsUnauthorized) Code() int {
	return 401
}

func (o *ProxmoxUpdateHypervisorsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/update/hypervisors][%d] proxmoxUpdateHypervisorsUnauthorized  %+v", 401, o.Payload)
}

func (o *ProxmoxUpdateHypervisorsUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/update/hypervisors][%d] proxmoxUpdateHypervisorsUnauthorized  %+v", 401, o.Payload)
}

func (o *ProxmoxUpdateHypervisorsUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *ProxmoxUpdateHypervisorsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProxmoxUpdateHypervisorsForbidden creates a ProxmoxUpdateHypervisorsForbidden with default headers values
func NewProxmoxUpdateHypervisorsForbidden() *ProxmoxUpdateHypervisorsForbidden {
	return &ProxmoxUpdateHypervisorsForbidden{}
}

/*
ProxmoxUpdateHypervisorsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ProxmoxUpdateHypervisorsForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this proxmox update hypervisors forbidden response has a 2xx status code
func (o *ProxmoxUpdateHypervisorsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this proxmox update hypervisors forbidden response has a 3xx status code
func (o *ProxmoxUpdateHypervisorsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox update hypervisors forbidden response has a 4xx status code
func (o *ProxmoxUpdateHypervisorsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this proxmox update hypervisors forbidden response has a 5xx status code
func (o *ProxmoxUpdateHypervisorsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this proxmox update hypervisors forbidden response a status code equal to that given
func (o *ProxmoxUpdateHypervisorsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the proxmox update hypervisors forbidden response
func (o *ProxmoxUpdateHypervisorsForbidden) Code() int {
	return 403
}

func (o *ProxmoxUpdateHypervisorsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/update/hypervisors][%d] proxmoxUpdateHypervisorsForbidden  %+v", 403, o.Payload)
}

func (o *ProxmoxUpdateHypervisorsForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/update/hypervisors][%d] proxmoxUpdateHypervisorsForbidden  %+v", 403, o.Payload)
}

func (o *ProxmoxUpdateHypervisorsForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ProxmoxUpdateHypervisorsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProxmoxUpdateHypervisorsNotFound creates a ProxmoxUpdateHypervisorsNotFound with default headers values
func NewProxmoxUpdateHypervisorsNotFound() *ProxmoxUpdateHypervisorsNotFound {
	return &ProxmoxUpdateHypervisorsNotFound{}
}

/*
ProxmoxUpdateHypervisorsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProxmoxUpdateHypervisorsNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this proxmox update hypervisors not found response has a 2xx status code
func (o *ProxmoxUpdateHypervisorsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this proxmox update hypervisors not found response has a 3xx status code
func (o *ProxmoxUpdateHypervisorsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox update hypervisors not found response has a 4xx status code
func (o *ProxmoxUpdateHypervisorsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this proxmox update hypervisors not found response has a 5xx status code
func (o *ProxmoxUpdateHypervisorsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this proxmox update hypervisors not found response a status code equal to that given
func (o *ProxmoxUpdateHypervisorsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the proxmox update hypervisors not found response
func (o *ProxmoxUpdateHypervisorsNotFound) Code() int {
	return 404
}

func (o *ProxmoxUpdateHypervisorsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/update/hypervisors][%d] proxmoxUpdateHypervisorsNotFound  %+v", 404, o.Payload)
}

func (o *ProxmoxUpdateHypervisorsNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/update/hypervisors][%d] proxmoxUpdateHypervisorsNotFound  %+v", 404, o.Payload)
}

func (o *ProxmoxUpdateHypervisorsNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ProxmoxUpdateHypervisorsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProxmoxUpdateHypervisorsInternalServerError creates a ProxmoxUpdateHypervisorsInternalServerError with default headers values
func NewProxmoxUpdateHypervisorsInternalServerError() *ProxmoxUpdateHypervisorsInternalServerError {
	return &ProxmoxUpdateHypervisorsInternalServerError{}
}

/*
ProxmoxUpdateHypervisorsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ProxmoxUpdateHypervisorsInternalServerError struct {
}

// IsSuccess returns true when this proxmox update hypervisors internal server error response has a 2xx status code
func (o *ProxmoxUpdateHypervisorsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this proxmox update hypervisors internal server error response has a 3xx status code
func (o *ProxmoxUpdateHypervisorsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox update hypervisors internal server error response has a 4xx status code
func (o *ProxmoxUpdateHypervisorsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this proxmox update hypervisors internal server error response has a 5xx status code
func (o *ProxmoxUpdateHypervisorsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this proxmox update hypervisors internal server error response a status code equal to that given
func (o *ProxmoxUpdateHypervisorsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the proxmox update hypervisors internal server error response
func (o *ProxmoxUpdateHypervisorsInternalServerError) Code() int {
	return 500
}

func (o *ProxmoxUpdateHypervisorsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/update/hypervisors][%d] proxmoxUpdateHypervisorsInternalServerError ", 500)
}

func (o *ProxmoxUpdateHypervisorsInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/update/hypervisors][%d] proxmoxUpdateHypervisorsInternalServerError ", 500)
}

func (o *ProxmoxUpdateHypervisorsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
