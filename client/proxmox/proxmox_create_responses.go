// Code generated by go-swagger; DO NOT EDIT.

package proxmox

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ProxmoxCreateReader is a Reader for the ProxmoxCreate structure.
type ProxmoxCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProxmoxCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProxmoxCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProxmoxCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProxmoxCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProxmoxCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProxmoxCreateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProxmoxCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProxmoxCreateOK creates a ProxmoxCreateOK with default headers values
func NewProxmoxCreateOK() *ProxmoxCreateOK {
	return &ProxmoxCreateOK{}
}

/*
ProxmoxCreateOK describes a response with status code 200, with default header values.

Success
*/
type ProxmoxCreateOK struct {
	Payload *models.APIResponse
}

// IsSuccess returns true when this proxmox create o k response has a 2xx status code
func (o *ProxmoxCreateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this proxmox create o k response has a 3xx status code
func (o *ProxmoxCreateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox create o k response has a 4xx status code
func (o *ProxmoxCreateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this proxmox create o k response has a 5xx status code
func (o *ProxmoxCreateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this proxmox create o k response a status code equal to that given
func (o *ProxmoxCreateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the proxmox create o k response
func (o *ProxmoxCreateOK) Code() int {
	return 200
}

func (o *ProxmoxCreateOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/create][%d] proxmoxCreateOK  %+v", 200, o.Payload)
}

func (o *ProxmoxCreateOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/create][%d] proxmoxCreateOK  %+v", 200, o.Payload)
}

func (o *ProxmoxCreateOK) GetPayload() *models.APIResponse {
	return o.Payload
}

func (o *ProxmoxCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProxmoxCreateBadRequest creates a ProxmoxCreateBadRequest with default headers values
func NewProxmoxCreateBadRequest() *ProxmoxCreateBadRequest {
	return &ProxmoxCreateBadRequest{}
}

/*
ProxmoxCreateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProxmoxCreateBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this proxmox create bad request response has a 2xx status code
func (o *ProxmoxCreateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this proxmox create bad request response has a 3xx status code
func (o *ProxmoxCreateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox create bad request response has a 4xx status code
func (o *ProxmoxCreateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this proxmox create bad request response has a 5xx status code
func (o *ProxmoxCreateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this proxmox create bad request response a status code equal to that given
func (o *ProxmoxCreateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the proxmox create bad request response
func (o *ProxmoxCreateBadRequest) Code() int {
	return 400
}

func (o *ProxmoxCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/create][%d] proxmoxCreateBadRequest  %+v", 400, o.Payload)
}

func (o *ProxmoxCreateBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/create][%d] proxmoxCreateBadRequest  %+v", 400, o.Payload)
}

func (o *ProxmoxCreateBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *ProxmoxCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProxmoxCreateUnauthorized creates a ProxmoxCreateUnauthorized with default headers values
func NewProxmoxCreateUnauthorized() *ProxmoxCreateUnauthorized {
	return &ProxmoxCreateUnauthorized{}
}

/*
ProxmoxCreateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProxmoxCreateUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this proxmox create unauthorized response has a 2xx status code
func (o *ProxmoxCreateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this proxmox create unauthorized response has a 3xx status code
func (o *ProxmoxCreateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox create unauthorized response has a 4xx status code
func (o *ProxmoxCreateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this proxmox create unauthorized response has a 5xx status code
func (o *ProxmoxCreateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this proxmox create unauthorized response a status code equal to that given
func (o *ProxmoxCreateUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the proxmox create unauthorized response
func (o *ProxmoxCreateUnauthorized) Code() int {
	return 401
}

func (o *ProxmoxCreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/create][%d] proxmoxCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *ProxmoxCreateUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/create][%d] proxmoxCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *ProxmoxCreateUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *ProxmoxCreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProxmoxCreateForbidden creates a ProxmoxCreateForbidden with default headers values
func NewProxmoxCreateForbidden() *ProxmoxCreateForbidden {
	return &ProxmoxCreateForbidden{}
}

/*
ProxmoxCreateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ProxmoxCreateForbidden struct {
	Payload interface{}
}

// IsSuccess returns true when this proxmox create forbidden response has a 2xx status code
func (o *ProxmoxCreateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this proxmox create forbidden response has a 3xx status code
func (o *ProxmoxCreateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox create forbidden response has a 4xx status code
func (o *ProxmoxCreateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this proxmox create forbidden response has a 5xx status code
func (o *ProxmoxCreateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this proxmox create forbidden response a status code equal to that given
func (o *ProxmoxCreateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the proxmox create forbidden response
func (o *ProxmoxCreateForbidden) Code() int {
	return 403
}

func (o *ProxmoxCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/create][%d] proxmoxCreateForbidden  %+v", 403, o.Payload)
}

func (o *ProxmoxCreateForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/create][%d] proxmoxCreateForbidden  %+v", 403, o.Payload)
}

func (o *ProxmoxCreateForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ProxmoxCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProxmoxCreateNotFound creates a ProxmoxCreateNotFound with default headers values
func NewProxmoxCreateNotFound() *ProxmoxCreateNotFound {
	return &ProxmoxCreateNotFound{}
}

/*
ProxmoxCreateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProxmoxCreateNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this proxmox create not found response has a 2xx status code
func (o *ProxmoxCreateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this proxmox create not found response has a 3xx status code
func (o *ProxmoxCreateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox create not found response has a 4xx status code
func (o *ProxmoxCreateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this proxmox create not found response has a 5xx status code
func (o *ProxmoxCreateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this proxmox create not found response a status code equal to that given
func (o *ProxmoxCreateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the proxmox create not found response
func (o *ProxmoxCreateNotFound) Code() int {
	return 404
}

func (o *ProxmoxCreateNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/create][%d] proxmoxCreateNotFound  %+v", 404, o.Payload)
}

func (o *ProxmoxCreateNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/create][%d] proxmoxCreateNotFound  %+v", 404, o.Payload)
}

func (o *ProxmoxCreateNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ProxmoxCreateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProxmoxCreateInternalServerError creates a ProxmoxCreateInternalServerError with default headers values
func NewProxmoxCreateInternalServerError() *ProxmoxCreateInternalServerError {
	return &ProxmoxCreateInternalServerError{}
}

/*
ProxmoxCreateInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ProxmoxCreateInternalServerError struct {
}

// IsSuccess returns true when this proxmox create internal server error response has a 2xx status code
func (o *ProxmoxCreateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this proxmox create internal server error response has a 3xx status code
func (o *ProxmoxCreateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox create internal server error response has a 4xx status code
func (o *ProxmoxCreateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this proxmox create internal server error response has a 5xx status code
func (o *ProxmoxCreateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this proxmox create internal server error response a status code equal to that given
func (o *ProxmoxCreateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the proxmox create internal server error response
func (o *ProxmoxCreateInternalServerError) Code() int {
	return 500
}

func (o *ProxmoxCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/create][%d] proxmoxCreateInternalServerError ", 500)
}

func (o *ProxmoxCreateInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/create][%d] proxmoxCreateInternalServerError ", 500)
}

func (o *ProxmoxCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
