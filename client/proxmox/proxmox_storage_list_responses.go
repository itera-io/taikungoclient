// Code generated by go-swagger; DO NOT EDIT.

package proxmox

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ProxmoxStorageListReader is a Reader for the ProxmoxStorageList structure.
type ProxmoxStorageListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProxmoxStorageListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProxmoxStorageListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProxmoxStorageListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProxmoxStorageListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProxmoxStorageListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProxmoxStorageListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProxmoxStorageListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProxmoxStorageListOK creates a ProxmoxStorageListOK with default headers values
func NewProxmoxStorageListOK() *ProxmoxStorageListOK {
	return &ProxmoxStorageListOK{}
}

/*
ProxmoxStorageListOK describes a response with status code 200, with default header values.

Success
*/
type ProxmoxStorageListOK struct {
	Payload []string
}

// IsSuccess returns true when this proxmox storage list o k response has a 2xx status code
func (o *ProxmoxStorageListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this proxmox storage list o k response has a 3xx status code
func (o *ProxmoxStorageListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox storage list o k response has a 4xx status code
func (o *ProxmoxStorageListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this proxmox storage list o k response has a 5xx status code
func (o *ProxmoxStorageListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this proxmox storage list o k response a status code equal to that given
func (o *ProxmoxStorageListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the proxmox storage list o k response
func (o *ProxmoxStorageListOK) Code() int {
	return 200
}

func (o *ProxmoxStorageListOK) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/storage-list][%d] proxmoxStorageListOK  %+v", 200, o.Payload)
}

func (o *ProxmoxStorageListOK) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/storage-list][%d] proxmoxStorageListOK  %+v", 200, o.Payload)
}

func (o *ProxmoxStorageListOK) GetPayload() []string {
	return o.Payload
}

func (o *ProxmoxStorageListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProxmoxStorageListBadRequest creates a ProxmoxStorageListBadRequest with default headers values
func NewProxmoxStorageListBadRequest() *ProxmoxStorageListBadRequest {
	return &ProxmoxStorageListBadRequest{}
}

/*
ProxmoxStorageListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProxmoxStorageListBadRequest struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this proxmox storage list bad request response has a 2xx status code
func (o *ProxmoxStorageListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this proxmox storage list bad request response has a 3xx status code
func (o *ProxmoxStorageListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox storage list bad request response has a 4xx status code
func (o *ProxmoxStorageListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this proxmox storage list bad request response has a 5xx status code
func (o *ProxmoxStorageListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this proxmox storage list bad request response a status code equal to that given
func (o *ProxmoxStorageListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the proxmox storage list bad request response
func (o *ProxmoxStorageListBadRequest) Code() int {
	return 400
}

func (o *ProxmoxStorageListBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/storage-list][%d] proxmoxStorageListBadRequest  %+v", 400, o.Payload)
}

func (o *ProxmoxStorageListBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/storage-list][%d] proxmoxStorageListBadRequest  %+v", 400, o.Payload)
}

func (o *ProxmoxStorageListBadRequest) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProxmoxStorageListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProxmoxStorageListUnauthorized creates a ProxmoxStorageListUnauthorized with default headers values
func NewProxmoxStorageListUnauthorized() *ProxmoxStorageListUnauthorized {
	return &ProxmoxStorageListUnauthorized{}
}

/*
ProxmoxStorageListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProxmoxStorageListUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this proxmox storage list unauthorized response has a 2xx status code
func (o *ProxmoxStorageListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this proxmox storage list unauthorized response has a 3xx status code
func (o *ProxmoxStorageListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox storage list unauthorized response has a 4xx status code
func (o *ProxmoxStorageListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this proxmox storage list unauthorized response has a 5xx status code
func (o *ProxmoxStorageListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this proxmox storage list unauthorized response a status code equal to that given
func (o *ProxmoxStorageListUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the proxmox storage list unauthorized response
func (o *ProxmoxStorageListUnauthorized) Code() int {
	return 401
}

func (o *ProxmoxStorageListUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/storage-list][%d] proxmoxStorageListUnauthorized  %+v", 401, o.Payload)
}

func (o *ProxmoxStorageListUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/storage-list][%d] proxmoxStorageListUnauthorized  %+v", 401, o.Payload)
}

func (o *ProxmoxStorageListUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProxmoxStorageListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProxmoxStorageListForbidden creates a ProxmoxStorageListForbidden with default headers values
func NewProxmoxStorageListForbidden() *ProxmoxStorageListForbidden {
	return &ProxmoxStorageListForbidden{}
}

/*
ProxmoxStorageListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ProxmoxStorageListForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this proxmox storage list forbidden response has a 2xx status code
func (o *ProxmoxStorageListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this proxmox storage list forbidden response has a 3xx status code
func (o *ProxmoxStorageListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox storage list forbidden response has a 4xx status code
func (o *ProxmoxStorageListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this proxmox storage list forbidden response has a 5xx status code
func (o *ProxmoxStorageListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this proxmox storage list forbidden response a status code equal to that given
func (o *ProxmoxStorageListForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the proxmox storage list forbidden response
func (o *ProxmoxStorageListForbidden) Code() int {
	return 403
}

func (o *ProxmoxStorageListForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/storage-list][%d] proxmoxStorageListForbidden  %+v", 403, o.Payload)
}

func (o *ProxmoxStorageListForbidden) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/storage-list][%d] proxmoxStorageListForbidden  %+v", 403, o.Payload)
}

func (o *ProxmoxStorageListForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProxmoxStorageListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProxmoxStorageListNotFound creates a ProxmoxStorageListNotFound with default headers values
func NewProxmoxStorageListNotFound() *ProxmoxStorageListNotFound {
	return &ProxmoxStorageListNotFound{}
}

/*
ProxmoxStorageListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProxmoxStorageListNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this proxmox storage list not found response has a 2xx status code
func (o *ProxmoxStorageListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this proxmox storage list not found response has a 3xx status code
func (o *ProxmoxStorageListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox storage list not found response has a 4xx status code
func (o *ProxmoxStorageListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this proxmox storage list not found response has a 5xx status code
func (o *ProxmoxStorageListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this proxmox storage list not found response a status code equal to that given
func (o *ProxmoxStorageListNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the proxmox storage list not found response
func (o *ProxmoxStorageListNotFound) Code() int {
	return 404
}

func (o *ProxmoxStorageListNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/storage-list][%d] proxmoxStorageListNotFound  %+v", 404, o.Payload)
}

func (o *ProxmoxStorageListNotFound) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/storage-list][%d] proxmoxStorageListNotFound  %+v", 404, o.Payload)
}

func (o *ProxmoxStorageListNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ProxmoxStorageListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProxmoxStorageListInternalServerError creates a ProxmoxStorageListInternalServerError with default headers values
func NewProxmoxStorageListInternalServerError() *ProxmoxStorageListInternalServerError {
	return &ProxmoxStorageListInternalServerError{}
}

/*
ProxmoxStorageListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ProxmoxStorageListInternalServerError struct {
}

// IsSuccess returns true when this proxmox storage list internal server error response has a 2xx status code
func (o *ProxmoxStorageListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this proxmox storage list internal server error response has a 3xx status code
func (o *ProxmoxStorageListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this proxmox storage list internal server error response has a 4xx status code
func (o *ProxmoxStorageListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this proxmox storage list internal server error response has a 5xx status code
func (o *ProxmoxStorageListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this proxmox storage list internal server error response a status code equal to that given
func (o *ProxmoxStorageListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the proxmox storage list internal server error response
func (o *ProxmoxStorageListInternalServerError) Code() int {
	return 500
}

func (o *ProxmoxStorageListInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/storage-list][%d] proxmoxStorageListInternalServerError ", 500)
}

func (o *ProxmoxStorageListInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v{v}/Proxmox/storage-list][%d] proxmoxStorageListInternalServerError ", 500)
}

func (o *ProxmoxStorageListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
