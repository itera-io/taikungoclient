/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AllTicketsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AllTicketsDto{}

// AllTicketsDto struct for AllTicketsDto
type AllTicketsDto struct {
	Id string `json:"id"`
	Name string `json:"name"`
	Status string `json:"status"`
	CreatedAt string `json:"createdAt"`
	OrganizationId int32 `json:"organizationId"`
	OrganizationName string `json:"organizationName"`
	CreatedBy string `json:"createdBy"`
	CurrentStatusDate NullableString `json:"currentStatusDate"`
	LastModifier NullableString `json:"lastModifier"`
	Number int32 `json:"number"`
	PartnerLogo NullableString `json:"partnerLogo"`
	Description string `json:"description"`
	PartnerName NullableString `json:"partnerName"`
	UserId string `json:"userId"`
}

type _AllTicketsDto AllTicketsDto

// NewAllTicketsDto instantiates a new AllTicketsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllTicketsDto(id string, name string, status string, createdAt string, organizationId int32, organizationName string, createdBy string, currentStatusDate NullableString, lastModifier NullableString, number int32, partnerLogo NullableString, description string, partnerName NullableString, userId string) *AllTicketsDto {
	this := AllTicketsDto{}
	this.Id = id
	this.Name = name
	this.Status = status
	this.CreatedAt = createdAt
	this.OrganizationId = organizationId
	this.OrganizationName = organizationName
	this.CreatedBy = createdBy
	this.CurrentStatusDate = currentStatusDate
	this.LastModifier = lastModifier
	this.Number = number
	this.PartnerLogo = partnerLogo
	this.Description = description
	this.PartnerName = partnerName
	this.UserId = userId
	return &this
}

// NewAllTicketsDtoWithDefaults instantiates a new AllTicketsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllTicketsDtoWithDefaults() *AllTicketsDto {
	this := AllTicketsDto{}
	return &this
}

// GetId returns the Id field value
func (o *AllTicketsDto) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AllTicketsDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AllTicketsDto) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *AllTicketsDto) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AllTicketsDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AllTicketsDto) SetName(v string) {
	o.Name = v
}

// GetStatus returns the Status field value
func (o *AllTicketsDto) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AllTicketsDto) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AllTicketsDto) SetStatus(v string) {
	o.Status = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *AllTicketsDto) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AllTicketsDto) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AllTicketsDto) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *AllTicketsDto) GetOrganizationId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *AllTicketsDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *AllTicketsDto) SetOrganizationId(v int32) {
	o.OrganizationId = v
}

// GetOrganizationName returns the OrganizationName field value
func (o *AllTicketsDto) GetOrganizationName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value
// and a boolean to check if the value has been set.
func (o *AllTicketsDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationName, true
}

// SetOrganizationName sets field value
func (o *AllTicketsDto) SetOrganizationName(v string) {
	o.OrganizationName = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *AllTicketsDto) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *AllTicketsDto) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *AllTicketsDto) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetCurrentStatusDate returns the CurrentStatusDate field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AllTicketsDto) GetCurrentStatusDate() string {
	if o == nil || o.CurrentStatusDate.Get() == nil {
		var ret string
		return ret
	}

	return *o.CurrentStatusDate.Get()
}

// GetCurrentStatusDateOk returns a tuple with the CurrentStatusDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AllTicketsDto) GetCurrentStatusDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrentStatusDate.Get(), o.CurrentStatusDate.IsSet()
}

// SetCurrentStatusDate sets field value
func (o *AllTicketsDto) SetCurrentStatusDate(v string) {
	o.CurrentStatusDate.Set(&v)
}

// GetLastModifier returns the LastModifier field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AllTicketsDto) GetLastModifier() string {
	if o == nil || o.LastModifier.Get() == nil {
		var ret string
		return ret
	}

	return *o.LastModifier.Get()
}

// GetLastModifierOk returns a tuple with the LastModifier field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AllTicketsDto) GetLastModifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModifier.Get(), o.LastModifier.IsSet()
}

// SetLastModifier sets field value
func (o *AllTicketsDto) SetLastModifier(v string) {
	o.LastModifier.Set(&v)
}

// GetNumber returns the Number field value
func (o *AllTicketsDto) GetNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *AllTicketsDto) GetNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *AllTicketsDto) SetNumber(v int32) {
	o.Number = v
}

// GetPartnerLogo returns the PartnerLogo field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AllTicketsDto) GetPartnerLogo() string {
	if o == nil || o.PartnerLogo.Get() == nil {
		var ret string
		return ret
	}

	return *o.PartnerLogo.Get()
}

// GetPartnerLogoOk returns a tuple with the PartnerLogo field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AllTicketsDto) GetPartnerLogoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PartnerLogo.Get(), o.PartnerLogo.IsSet()
}

// SetPartnerLogo sets field value
func (o *AllTicketsDto) SetPartnerLogo(v string) {
	o.PartnerLogo.Set(&v)
}

// GetDescription returns the Description field value
func (o *AllTicketsDto) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *AllTicketsDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *AllTicketsDto) SetDescription(v string) {
	o.Description = v
}

// GetPartnerName returns the PartnerName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AllTicketsDto) GetPartnerName() string {
	if o == nil || o.PartnerName.Get() == nil {
		var ret string
		return ret
	}

	return *o.PartnerName.Get()
}

// GetPartnerNameOk returns a tuple with the PartnerName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AllTicketsDto) GetPartnerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PartnerName.Get(), o.PartnerName.IsSet()
}

// SetPartnerName sets field value
func (o *AllTicketsDto) SetPartnerName(v string) {
	o.PartnerName.Set(&v)
}

// GetUserId returns the UserId field value
func (o *AllTicketsDto) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *AllTicketsDto) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *AllTicketsDto) SetUserId(v string) {
	o.UserId = v
}

func (o AllTicketsDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AllTicketsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["status"] = o.Status
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["organizationId"] = o.OrganizationId
	toSerialize["organizationName"] = o.OrganizationName
	toSerialize["createdBy"] = o.CreatedBy
	toSerialize["currentStatusDate"] = o.CurrentStatusDate.Get()
	toSerialize["lastModifier"] = o.LastModifier.Get()
	toSerialize["number"] = o.Number
	toSerialize["partnerLogo"] = o.PartnerLogo.Get()
	toSerialize["description"] = o.Description
	toSerialize["partnerName"] = o.PartnerName.Get()
	toSerialize["userId"] = o.UserId
	return toSerialize, nil
}

func (o *AllTicketsDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"status",
		"createdAt",
		"organizationId",
		"organizationName",
		"createdBy",
		"currentStatusDate",
		"lastModifier",
		"number",
		"partnerLogo",
		"description",
		"partnerName",
		"userId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAllTicketsDto := _AllTicketsDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAllTicketsDto)

	if err != nil {
		return err
	}

	*o = AllTicketsDto(varAllTicketsDto)

	return err
}

type NullableAllTicketsDto struct {
	value *AllTicketsDto
	isSet bool
}

func (v NullableAllTicketsDto) Get() *AllTicketsDto {
	return v.value
}

func (v *NullableAllTicketsDto) Set(val *AllTicketsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAllTicketsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAllTicketsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllTicketsDto(val *AllTicketsDto) *NullableAllTicketsDto {
	return &NullableAllTicketsDto{value: val, isSet: true}
}

func (v NullableAllTicketsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllTicketsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


