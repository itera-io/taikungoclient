/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the BackupCredentialsUpdateCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupCredentialsUpdateCommand{}

// BackupCredentialsUpdateCommand struct for BackupCredentialsUpdateCommand
type BackupCredentialsUpdateCommand struct {
	Id *int32 `json:"id,omitempty"`
	S3Name *string `json:"s3Name,omitempty"`
	S3AccessKeyId *string `json:"s3AccessKeyId,omitempty"`
	S3SecretKey *string `json:"s3SecretKey,omitempty"`
}

// NewBackupCredentialsUpdateCommand instantiates a new BackupCredentialsUpdateCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupCredentialsUpdateCommand() *BackupCredentialsUpdateCommand {
	this := BackupCredentialsUpdateCommand{}
	return &this
}

// NewBackupCredentialsUpdateCommandWithDefaults instantiates a new BackupCredentialsUpdateCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupCredentialsUpdateCommandWithDefaults() *BackupCredentialsUpdateCommand {
	this := BackupCredentialsUpdateCommand{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BackupCredentialsUpdateCommand) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupCredentialsUpdateCommand) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BackupCredentialsUpdateCommand) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *BackupCredentialsUpdateCommand) SetId(v int32) {
	o.Id = &v
}

// GetS3Name returns the S3Name field value if set, zero value otherwise.
func (o *BackupCredentialsUpdateCommand) GetS3Name() string {
	if o == nil || IsNil(o.S3Name) {
		var ret string
		return ret
	}
	return *o.S3Name
}

// GetS3NameOk returns a tuple with the S3Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupCredentialsUpdateCommand) GetS3NameOk() (*string, bool) {
	if o == nil || IsNil(o.S3Name) {
		return nil, false
	}
	return o.S3Name, true
}

// HasS3Name returns a boolean if a field has been set.
func (o *BackupCredentialsUpdateCommand) HasS3Name() bool {
	if o != nil && !IsNil(o.S3Name) {
		return true
	}

	return false
}

// SetS3Name gets a reference to the given string and assigns it to the S3Name field.
func (o *BackupCredentialsUpdateCommand) SetS3Name(v string) {
	o.S3Name = &v
}

// GetS3AccessKeyId returns the S3AccessKeyId field value if set, zero value otherwise.
func (o *BackupCredentialsUpdateCommand) GetS3AccessKeyId() string {
	if o == nil || IsNil(o.S3AccessKeyId) {
		var ret string
		return ret
	}
	return *o.S3AccessKeyId
}

// GetS3AccessKeyIdOk returns a tuple with the S3AccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupCredentialsUpdateCommand) GetS3AccessKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.S3AccessKeyId) {
		return nil, false
	}
	return o.S3AccessKeyId, true
}

// HasS3AccessKeyId returns a boolean if a field has been set.
func (o *BackupCredentialsUpdateCommand) HasS3AccessKeyId() bool {
	if o != nil && !IsNil(o.S3AccessKeyId) {
		return true
	}

	return false
}

// SetS3AccessKeyId gets a reference to the given string and assigns it to the S3AccessKeyId field.
func (o *BackupCredentialsUpdateCommand) SetS3AccessKeyId(v string) {
	o.S3AccessKeyId = &v
}

// GetS3SecretKey returns the S3SecretKey field value if set, zero value otherwise.
func (o *BackupCredentialsUpdateCommand) GetS3SecretKey() string {
	if o == nil || IsNil(o.S3SecretKey) {
		var ret string
		return ret
	}
	return *o.S3SecretKey
}

// GetS3SecretKeyOk returns a tuple with the S3SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupCredentialsUpdateCommand) GetS3SecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.S3SecretKey) {
		return nil, false
	}
	return o.S3SecretKey, true
}

// HasS3SecretKey returns a boolean if a field has been set.
func (o *BackupCredentialsUpdateCommand) HasS3SecretKey() bool {
	if o != nil && !IsNil(o.S3SecretKey) {
		return true
	}

	return false
}

// SetS3SecretKey gets a reference to the given string and assigns it to the S3SecretKey field.
func (o *BackupCredentialsUpdateCommand) SetS3SecretKey(v string) {
	o.S3SecretKey = &v
}

func (o BackupCredentialsUpdateCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupCredentialsUpdateCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.S3Name) {
		toSerialize["s3Name"] = o.S3Name
	}
	if !IsNil(o.S3AccessKeyId) {
		toSerialize["s3AccessKeyId"] = o.S3AccessKeyId
	}
	if !IsNil(o.S3SecretKey) {
		toSerialize["s3SecretKey"] = o.S3SecretKey
	}
	return toSerialize, nil
}

type NullableBackupCredentialsUpdateCommand struct {
	value *BackupCredentialsUpdateCommand
	isSet bool
}

func (v NullableBackupCredentialsUpdateCommand) Get() *BackupCredentialsUpdateCommand {
	return v.value
}

func (v *NullableBackupCredentialsUpdateCommand) Set(val *BackupCredentialsUpdateCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupCredentialsUpdateCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupCredentialsUpdateCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupCredentialsUpdateCommand(val *BackupCredentialsUpdateCommand) *NullableBackupCredentialsUpdateCommand {
	return &NullableBackupCredentialsUpdateCommand{value: val, isSet: true}
}

func (v NullableBackupCredentialsUpdateCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupCredentialsUpdateCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


