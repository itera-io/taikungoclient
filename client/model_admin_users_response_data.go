/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the AdminUsersResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdminUsersResponseData{}

// AdminUsersResponseData struct for AdminUsersResponseData
type AdminUsersResponseData struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Email *string `json:"email,omitempty"`
	Role *string `json:"role,omitempty"`
	OrganizationName *string `json:"organizationName,omitempty"`
	Owner *bool `json:"owner,omitempty"`
	Csm *bool `json:"csm,omitempty"`
}

// NewAdminUsersResponseData instantiates a new AdminUsersResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminUsersResponseData() *AdminUsersResponseData {
	this := AdminUsersResponseData{}
	return &this
}

// NewAdminUsersResponseDataWithDefaults instantiates a new AdminUsersResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminUsersResponseDataWithDefaults() *AdminUsersResponseData {
	this := AdminUsersResponseData{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AdminUsersResponseData) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminUsersResponseData) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AdminUsersResponseData) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AdminUsersResponseData) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdminUsersResponseData) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminUsersResponseData) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdminUsersResponseData) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdminUsersResponseData) SetName(v string) {
	o.Name = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *AdminUsersResponseData) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminUsersResponseData) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *AdminUsersResponseData) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *AdminUsersResponseData) SetEmail(v string) {
	o.Email = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *AdminUsersResponseData) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminUsersResponseData) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *AdminUsersResponseData) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *AdminUsersResponseData) SetRole(v string) {
	o.Role = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *AdminUsersResponseData) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminUsersResponseData) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *AdminUsersResponseData) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *AdminUsersResponseData) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *AdminUsersResponseData) GetOwner() bool {
	if o == nil || IsNil(o.Owner) {
		var ret bool
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminUsersResponseData) GetOwnerOk() (*bool, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *AdminUsersResponseData) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given bool and assigns it to the Owner field.
func (o *AdminUsersResponseData) SetOwner(v bool) {
	o.Owner = &v
}

// GetCsm returns the Csm field value if set, zero value otherwise.
func (o *AdminUsersResponseData) GetCsm() bool {
	if o == nil || IsNil(o.Csm) {
		var ret bool
		return ret
	}
	return *o.Csm
}

// GetCsmOk returns a tuple with the Csm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminUsersResponseData) GetCsmOk() (*bool, bool) {
	if o == nil || IsNil(o.Csm) {
		return nil, false
	}
	return o.Csm, true
}

// HasCsm returns a boolean if a field has been set.
func (o *AdminUsersResponseData) HasCsm() bool {
	if o != nil && !IsNil(o.Csm) {
		return true
	}

	return false
}

// SetCsm gets a reference to the given bool and assigns it to the Csm field.
func (o *AdminUsersResponseData) SetCsm(v bool) {
	o.Csm = &v
}

func (o AdminUsersResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdminUsersResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.OrganizationName) {
		toSerialize["organizationName"] = o.OrganizationName
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.Csm) {
		toSerialize["csm"] = o.Csm
	}
	return toSerialize, nil
}

type NullableAdminUsersResponseData struct {
	value *AdminUsersResponseData
	isSet bool
}

func (v NullableAdminUsersResponseData) Get() *AdminUsersResponseData {
	return v.value
}

func (v *NullableAdminUsersResponseData) Set(val *AdminUsersResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminUsersResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminUsersResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminUsersResponseData(val *AdminUsersResponseData) *NullableAdminUsersResponseData {
	return &NullableAdminUsersResponseData{value: val, isSet: true}
}

func (v NullableAdminUsersResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminUsersResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


