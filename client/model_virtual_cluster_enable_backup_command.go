/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the VirtualClusterEnableBackupCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VirtualClusterEnableBackupCommand{}

// VirtualClusterEnableBackupCommand struct for VirtualClusterEnableBackupCommand
type VirtualClusterEnableBackupCommand struct {
	ProjectId *int32 `json:"projectId,omitempty"`
	BackupCredentialId *int32 `json:"backupCredentialId,omitempty"`
}

// NewVirtualClusterEnableBackupCommand instantiates a new VirtualClusterEnableBackupCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualClusterEnableBackupCommand() *VirtualClusterEnableBackupCommand {
	this := VirtualClusterEnableBackupCommand{}
	return &this
}

// NewVirtualClusterEnableBackupCommandWithDefaults instantiates a new VirtualClusterEnableBackupCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualClusterEnableBackupCommandWithDefaults() *VirtualClusterEnableBackupCommand {
	this := VirtualClusterEnableBackupCommand{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *VirtualClusterEnableBackupCommand) GetProjectId() int32 {
	if o == nil || IsNil(o.ProjectId) {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualClusterEnableBackupCommand) GetProjectIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *VirtualClusterEnableBackupCommand) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *VirtualClusterEnableBackupCommand) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetBackupCredentialId returns the BackupCredentialId field value if set, zero value otherwise.
func (o *VirtualClusterEnableBackupCommand) GetBackupCredentialId() int32 {
	if o == nil || IsNil(o.BackupCredentialId) {
		var ret int32
		return ret
	}
	return *o.BackupCredentialId
}

// GetBackupCredentialIdOk returns a tuple with the BackupCredentialId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualClusterEnableBackupCommand) GetBackupCredentialIdOk() (*int32, bool) {
	if o == nil || IsNil(o.BackupCredentialId) {
		return nil, false
	}
	return o.BackupCredentialId, true
}

// HasBackupCredentialId returns a boolean if a field has been set.
func (o *VirtualClusterEnableBackupCommand) HasBackupCredentialId() bool {
	if o != nil && !IsNil(o.BackupCredentialId) {
		return true
	}

	return false
}

// SetBackupCredentialId gets a reference to the given int32 and assigns it to the BackupCredentialId field.
func (o *VirtualClusterEnableBackupCommand) SetBackupCredentialId(v int32) {
	o.BackupCredentialId = &v
}

func (o VirtualClusterEnableBackupCommand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VirtualClusterEnableBackupCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.BackupCredentialId) {
		toSerialize["backupCredentialId"] = o.BackupCredentialId
	}
	return toSerialize, nil
}

type NullableVirtualClusterEnableBackupCommand struct {
	value *VirtualClusterEnableBackupCommand
	isSet bool
}

func (v NullableVirtualClusterEnableBackupCommand) Get() *VirtualClusterEnableBackupCommand {
	return v.value
}

func (v *NullableVirtualClusterEnableBackupCommand) Set(val *VirtualClusterEnableBackupCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualClusterEnableBackupCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualClusterEnableBackupCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualClusterEnableBackupCommand(val *VirtualClusterEnableBackupCommand) *NullableVirtualClusterEnableBackupCommand {
	return &NullableVirtualClusterEnableBackupCommand{value: val, isSet: true}
}

func (v NullableVirtualClusterEnableBackupCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualClusterEnableBackupCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


