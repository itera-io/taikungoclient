// Code generated by go-swagger; DO NOT EDIT.

package payment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PaymentGetStripeInvoicesReader is a Reader for the PaymentGetStripeInvoices structure.
type PaymentGetStripeInvoicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PaymentGetStripeInvoicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPaymentGetStripeInvoicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPaymentGetStripeInvoicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPaymentGetStripeInvoicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPaymentGetStripeInvoicesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPaymentGetStripeInvoicesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPaymentGetStripeInvoicesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPaymentGetStripeInvoicesOK creates a PaymentGetStripeInvoicesOK with default headers values
func NewPaymentGetStripeInvoicesOK() *PaymentGetStripeInvoicesOK {
	return &PaymentGetStripeInvoicesOK{}
}

/*
PaymentGetStripeInvoicesOK describes a response with status code 200, with default header values.

Success
*/
type PaymentGetStripeInvoicesOK struct {
	Payload *PaymentGetStripeInvoicesOKBody
}

// IsSuccess returns true when this payment get stripe invoices o k response has a 2xx status code
func (o *PaymentGetStripeInvoicesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this payment get stripe invoices o k response has a 3xx status code
func (o *PaymentGetStripeInvoicesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this payment get stripe invoices o k response has a 4xx status code
func (o *PaymentGetStripeInvoicesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this payment get stripe invoices o k response has a 5xx status code
func (o *PaymentGetStripeInvoicesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this payment get stripe invoices o k response a status code equal to that given
func (o *PaymentGetStripeInvoicesOK) IsCode(code int) bool {
	return code == 200
}

func (o *PaymentGetStripeInvoicesOK) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Payment/stripeinvoices/{subscriptionId}][%d] paymentGetStripeInvoicesOK  %+v", 200, o.Payload)
}

func (o *PaymentGetStripeInvoicesOK) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Payment/stripeinvoices/{subscriptionId}][%d] paymentGetStripeInvoicesOK  %+v", 200, o.Payload)
}

func (o *PaymentGetStripeInvoicesOK) GetPayload() *PaymentGetStripeInvoicesOKBody {
	return o.Payload
}

func (o *PaymentGetStripeInvoicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PaymentGetStripeInvoicesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentGetStripeInvoicesBadRequest creates a PaymentGetStripeInvoicesBadRequest with default headers values
func NewPaymentGetStripeInvoicesBadRequest() *PaymentGetStripeInvoicesBadRequest {
	return &PaymentGetStripeInvoicesBadRequest{}
}

/*
PaymentGetStripeInvoicesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PaymentGetStripeInvoicesBadRequest struct {
	Payload []*PaymentGetStripeInvoicesBadRequestBodyItems0
}

// IsSuccess returns true when this payment get stripe invoices bad request response has a 2xx status code
func (o *PaymentGetStripeInvoicesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this payment get stripe invoices bad request response has a 3xx status code
func (o *PaymentGetStripeInvoicesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this payment get stripe invoices bad request response has a 4xx status code
func (o *PaymentGetStripeInvoicesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this payment get stripe invoices bad request response has a 5xx status code
func (o *PaymentGetStripeInvoicesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this payment get stripe invoices bad request response a status code equal to that given
func (o *PaymentGetStripeInvoicesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PaymentGetStripeInvoicesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Payment/stripeinvoices/{subscriptionId}][%d] paymentGetStripeInvoicesBadRequest  %+v", 400, o.Payload)
}

func (o *PaymentGetStripeInvoicesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Payment/stripeinvoices/{subscriptionId}][%d] paymentGetStripeInvoicesBadRequest  %+v", 400, o.Payload)
}

func (o *PaymentGetStripeInvoicesBadRequest) GetPayload() []*PaymentGetStripeInvoicesBadRequestBodyItems0 {
	return o.Payload
}

func (o *PaymentGetStripeInvoicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentGetStripeInvoicesUnauthorized creates a PaymentGetStripeInvoicesUnauthorized with default headers values
func NewPaymentGetStripeInvoicesUnauthorized() *PaymentGetStripeInvoicesUnauthorized {
	return &PaymentGetStripeInvoicesUnauthorized{}
}

/*
PaymentGetStripeInvoicesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PaymentGetStripeInvoicesUnauthorized struct {
	Payload *PaymentGetStripeInvoicesUnauthorizedBody
}

// IsSuccess returns true when this payment get stripe invoices unauthorized response has a 2xx status code
func (o *PaymentGetStripeInvoicesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this payment get stripe invoices unauthorized response has a 3xx status code
func (o *PaymentGetStripeInvoicesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this payment get stripe invoices unauthorized response has a 4xx status code
func (o *PaymentGetStripeInvoicesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this payment get stripe invoices unauthorized response has a 5xx status code
func (o *PaymentGetStripeInvoicesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this payment get stripe invoices unauthorized response a status code equal to that given
func (o *PaymentGetStripeInvoicesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PaymentGetStripeInvoicesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Payment/stripeinvoices/{subscriptionId}][%d] paymentGetStripeInvoicesUnauthorized  %+v", 401, o.Payload)
}

func (o *PaymentGetStripeInvoicesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Payment/stripeinvoices/{subscriptionId}][%d] paymentGetStripeInvoicesUnauthorized  %+v", 401, o.Payload)
}

func (o *PaymentGetStripeInvoicesUnauthorized) GetPayload() *PaymentGetStripeInvoicesUnauthorizedBody {
	return o.Payload
}

func (o *PaymentGetStripeInvoicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PaymentGetStripeInvoicesUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentGetStripeInvoicesForbidden creates a PaymentGetStripeInvoicesForbidden with default headers values
func NewPaymentGetStripeInvoicesForbidden() *PaymentGetStripeInvoicesForbidden {
	return &PaymentGetStripeInvoicesForbidden{}
}

/*
PaymentGetStripeInvoicesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PaymentGetStripeInvoicesForbidden struct {
	Payload *PaymentGetStripeInvoicesForbiddenBody
}

// IsSuccess returns true when this payment get stripe invoices forbidden response has a 2xx status code
func (o *PaymentGetStripeInvoicesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this payment get stripe invoices forbidden response has a 3xx status code
func (o *PaymentGetStripeInvoicesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this payment get stripe invoices forbidden response has a 4xx status code
func (o *PaymentGetStripeInvoicesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this payment get stripe invoices forbidden response has a 5xx status code
func (o *PaymentGetStripeInvoicesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this payment get stripe invoices forbidden response a status code equal to that given
func (o *PaymentGetStripeInvoicesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PaymentGetStripeInvoicesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Payment/stripeinvoices/{subscriptionId}][%d] paymentGetStripeInvoicesForbidden  %+v", 403, o.Payload)
}

func (o *PaymentGetStripeInvoicesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Payment/stripeinvoices/{subscriptionId}][%d] paymentGetStripeInvoicesForbidden  %+v", 403, o.Payload)
}

func (o *PaymentGetStripeInvoicesForbidden) GetPayload() *PaymentGetStripeInvoicesForbiddenBody {
	return o.Payload
}

func (o *PaymentGetStripeInvoicesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PaymentGetStripeInvoicesForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentGetStripeInvoicesNotFound creates a PaymentGetStripeInvoicesNotFound with default headers values
func NewPaymentGetStripeInvoicesNotFound() *PaymentGetStripeInvoicesNotFound {
	return &PaymentGetStripeInvoicesNotFound{}
}

/*
PaymentGetStripeInvoicesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PaymentGetStripeInvoicesNotFound struct {
	Payload *PaymentGetStripeInvoicesNotFoundBody
}

// IsSuccess returns true when this payment get stripe invoices not found response has a 2xx status code
func (o *PaymentGetStripeInvoicesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this payment get stripe invoices not found response has a 3xx status code
func (o *PaymentGetStripeInvoicesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this payment get stripe invoices not found response has a 4xx status code
func (o *PaymentGetStripeInvoicesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this payment get stripe invoices not found response has a 5xx status code
func (o *PaymentGetStripeInvoicesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this payment get stripe invoices not found response a status code equal to that given
func (o *PaymentGetStripeInvoicesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PaymentGetStripeInvoicesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Payment/stripeinvoices/{subscriptionId}][%d] paymentGetStripeInvoicesNotFound  %+v", 404, o.Payload)
}

func (o *PaymentGetStripeInvoicesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Payment/stripeinvoices/{subscriptionId}][%d] paymentGetStripeInvoicesNotFound  %+v", 404, o.Payload)
}

func (o *PaymentGetStripeInvoicesNotFound) GetPayload() *PaymentGetStripeInvoicesNotFoundBody {
	return o.Payload
}

func (o *PaymentGetStripeInvoicesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PaymentGetStripeInvoicesNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentGetStripeInvoicesInternalServerError creates a PaymentGetStripeInvoicesInternalServerError with default headers values
func NewPaymentGetStripeInvoicesInternalServerError() *PaymentGetStripeInvoicesInternalServerError {
	return &PaymentGetStripeInvoicesInternalServerError{}
}

/*
PaymentGetStripeInvoicesInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type PaymentGetStripeInvoicesInternalServerError struct {
}

// IsSuccess returns true when this payment get stripe invoices internal server error response has a 2xx status code
func (o *PaymentGetStripeInvoicesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this payment get stripe invoices internal server error response has a 3xx status code
func (o *PaymentGetStripeInvoicesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this payment get stripe invoices internal server error response has a 4xx status code
func (o *PaymentGetStripeInvoicesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this payment get stripe invoices internal server error response has a 5xx status code
func (o *PaymentGetStripeInvoicesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this payment get stripe invoices internal server error response a status code equal to that given
func (o *PaymentGetStripeInvoicesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PaymentGetStripeInvoicesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v{v}/Payment/stripeinvoices/{subscriptionId}][%d] paymentGetStripeInvoicesInternalServerError ", 500)
}

func (o *PaymentGetStripeInvoicesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v{v}/Payment/stripeinvoices/{subscriptionId}][%d] paymentGetStripeInvoicesInternalServerError ", 500)
}

func (o *PaymentGetStripeInvoicesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
PaymentGetStripeInvoicesBadRequestBodyItems0 payment get stripe invoices bad request body items0
swagger:model PaymentGetStripeInvoicesBadRequestBodyItems0
*/
type PaymentGetStripeInvoicesBadRequestBodyItems0 struct {

	// code
	Code string `json:"code,omitempty"`

	// description
	Description string `json:"description,omitempty"`
}

// Validate validates this payment get stripe invoices bad request body items0
func (o *PaymentGetStripeInvoicesBadRequestBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this payment get stripe invoices bad request body items0 based on context it is used
func (o *PaymentGetStripeInvoicesBadRequestBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PaymentGetStripeInvoicesBadRequestBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PaymentGetStripeInvoicesBadRequestBodyItems0) UnmarshalBinary(b []byte) error {
	var res PaymentGetStripeInvoicesBadRequestBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PaymentGetStripeInvoicesForbiddenBody payment get stripe invoices forbidden body
swagger:model PaymentGetStripeInvoicesForbiddenBody
*/
type PaymentGetStripeInvoicesForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this payment get stripe invoices forbidden body
func (o *PaymentGetStripeInvoicesForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this payment get stripe invoices forbidden body based on context it is used
func (o *PaymentGetStripeInvoicesForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PaymentGetStripeInvoicesForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PaymentGetStripeInvoicesForbiddenBody) UnmarshalBinary(b []byte) error {
	var res PaymentGetStripeInvoicesForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PaymentGetStripeInvoicesNotFoundBody payment get stripe invoices not found body
swagger:model PaymentGetStripeInvoicesNotFoundBody
*/
type PaymentGetStripeInvoicesNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this payment get stripe invoices not found body
func (o *PaymentGetStripeInvoicesNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this payment get stripe invoices not found body based on context it is used
func (o *PaymentGetStripeInvoicesNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PaymentGetStripeInvoicesNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PaymentGetStripeInvoicesNotFoundBody) UnmarshalBinary(b []byte) error {
	var res PaymentGetStripeInvoicesNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PaymentGetStripeInvoicesOKBody payment get stripe invoices o k body
swagger:model PaymentGetStripeInvoicesOKBody
*/
type PaymentGetStripeInvoicesOKBody struct {

	// data
	Data []*PaymentGetStripeInvoicesOKBodyDataItems0 `json:"data"`
}

// Validate validates this payment get stripe invoices o k body
func (o *PaymentGetStripeInvoicesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PaymentGetStripeInvoicesOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("paymentGetStripeInvoicesOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("paymentGetStripeInvoicesOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this payment get stripe invoices o k body based on the context it is used
func (o *PaymentGetStripeInvoicesOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PaymentGetStripeInvoicesOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("paymentGetStripeInvoicesOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("paymentGetStripeInvoicesOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PaymentGetStripeInvoicesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PaymentGetStripeInvoicesOKBody) UnmarshalBinary(b []byte) error {
	var res PaymentGetStripeInvoicesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PaymentGetStripeInvoicesOKBodyDataItems0 payment get stripe invoices o k body data items0
swagger:model PaymentGetStripeInvoicesOKBodyDataItems0
*/
type PaymentGetStripeInvoicesOKBodyDataItems0 struct {

	// charge reason
	ChargeReason string `json:"chargeReason,omitempty"`

	// charge status
	ChargeStatus string `json:"chargeStatus,omitempty"`

	// end date
	// Format: date-time
	EndDate *strfmt.DateTime `json:"endDate,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// invoice status
	InvoiceStatus string `json:"invoiceStatus,omitempty"`

	// price
	Price float64 `json:"price,omitempty"`

	// start date
	// Format: date-time
	StartDate *strfmt.DateTime `json:"startDate,omitempty"`
}

// Validate validates this payment get stripe invoices o k body data items0
func (o *PaymentGetStripeInvoicesOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEndDate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStartDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PaymentGetStripeInvoicesOKBodyDataItems0) validateEndDate(formats strfmt.Registry) error {
	if swag.IsZero(o.EndDate) { // not required
		return nil
	}

	if err := validate.FormatOf("endDate", "body", "date-time", o.EndDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *PaymentGetStripeInvoicesOKBodyDataItems0) validateStartDate(formats strfmt.Registry) error {
	if swag.IsZero(o.StartDate) { // not required
		return nil
	}

	if err := validate.FormatOf("startDate", "body", "date-time", o.StartDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this payment get stripe invoices o k body data items0 based on context it is used
func (o *PaymentGetStripeInvoicesOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PaymentGetStripeInvoicesOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PaymentGetStripeInvoicesOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res PaymentGetStripeInvoicesOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PaymentGetStripeInvoicesUnauthorizedBody payment get stripe invoices unauthorized body
swagger:model PaymentGetStripeInvoicesUnauthorizedBody
*/
type PaymentGetStripeInvoicesUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this payment get stripe invoices unauthorized body
func (o *PaymentGetStripeInvoicesUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this payment get stripe invoices unauthorized body based on context it is used
func (o *PaymentGetStripeInvoicesUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PaymentGetStripeInvoicesUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PaymentGetStripeInvoicesUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PaymentGetStripeInvoicesUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
