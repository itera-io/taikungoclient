/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikuncore

import (
	"encoding/json"
)

// checks if the CreateProxmoxCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProxmoxCommand{}

// CreateProxmoxCommand struct for CreateProxmoxCommand
type CreateProxmoxCommand struct {
	Name           NullableString           `json:"name,omitempty"`
	TokenId        NullableString           `json:"tokenId,omitempty"`
	Url            NullableString           `json:"url,omitempty"`
	TokenSecret    NullableString           `json:"tokenSecret,omitempty"`
	Storage        NullableString           `json:"storage,omitempty"`
	VmTemplateName NullableString           `json:"vmTemplateName,omitempty"`
	Continent      NullableString           `json:"continent,omitempty"`
	OrganizationId NullableInt32            `json:"organizationId,omitempty"`
	Hypervisors    []string                 `json:"hypervisors,omitempty"`
	PublicNetwork  *CreateProxmoxNetworkDto `json:"publicNetwork,omitempty"`
	PrivateNetwork *CreateProxmoxNetworkDto `json:"privateNetwork,omitempty"`
}

// NewCreateProxmoxCommand instantiates a new CreateProxmoxCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProxmoxCommand() *CreateProxmoxCommand {
	this := CreateProxmoxCommand{}
	return &this
}

// NewCreateProxmoxCommandWithDefaults instantiates a new CreateProxmoxCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProxmoxCommandWithDefaults() *CreateProxmoxCommand {
	this := CreateProxmoxCommand{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProxmoxCommand) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProxmoxCommand) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CreateProxmoxCommand) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CreateProxmoxCommand) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *CreateProxmoxCommand) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CreateProxmoxCommand) UnsetName() {
	o.Name.Unset()
}

// GetTokenId returns the TokenId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProxmoxCommand) GetTokenId() string {
	if o == nil || IsNil(o.TokenId.Get()) {
		var ret string
		return ret
	}
	return *o.TokenId.Get()
}

// GetTokenIdOk returns a tuple with the TokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProxmoxCommand) GetTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TokenId.Get(), o.TokenId.IsSet()
}

// HasTokenId returns a boolean if a field has been set.
func (o *CreateProxmoxCommand) HasTokenId() bool {
	if o != nil && o.TokenId.IsSet() {
		return true
	}

	return false
}

// SetTokenId gets a reference to the given NullableString and assigns it to the TokenId field.
func (o *CreateProxmoxCommand) SetTokenId(v string) {
	o.TokenId.Set(&v)
}

// SetTokenIdNil sets the value for TokenId to be an explicit nil
func (o *CreateProxmoxCommand) SetTokenIdNil() {
	o.TokenId.Set(nil)
}

// UnsetTokenId ensures that no value is present for TokenId, not even an explicit nil
func (o *CreateProxmoxCommand) UnsetTokenId() {
	o.TokenId.Unset()
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProxmoxCommand) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProxmoxCommand) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *CreateProxmoxCommand) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *CreateProxmoxCommand) SetUrl(v string) {
	o.Url.Set(&v)
}

// SetUrlNil sets the value for Url to be an explicit nil
func (o *CreateProxmoxCommand) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *CreateProxmoxCommand) UnsetUrl() {
	o.Url.Unset()
}

// GetTokenSecret returns the TokenSecret field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProxmoxCommand) GetTokenSecret() string {
	if o == nil || IsNil(o.TokenSecret.Get()) {
		var ret string
		return ret
	}
	return *o.TokenSecret.Get()
}

// GetTokenSecretOk returns a tuple with the TokenSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProxmoxCommand) GetTokenSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TokenSecret.Get(), o.TokenSecret.IsSet()
}

// HasTokenSecret returns a boolean if a field has been set.
func (o *CreateProxmoxCommand) HasTokenSecret() bool {
	if o != nil && o.TokenSecret.IsSet() {
		return true
	}

	return false
}

// SetTokenSecret gets a reference to the given NullableString and assigns it to the TokenSecret field.
func (o *CreateProxmoxCommand) SetTokenSecret(v string) {
	o.TokenSecret.Set(&v)
}

// SetTokenSecretNil sets the value for TokenSecret to be an explicit nil
func (o *CreateProxmoxCommand) SetTokenSecretNil() {
	o.TokenSecret.Set(nil)
}

// UnsetTokenSecret ensures that no value is present for TokenSecret, not even an explicit nil
func (o *CreateProxmoxCommand) UnsetTokenSecret() {
	o.TokenSecret.Unset()
}

// GetStorage returns the Storage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProxmoxCommand) GetStorage() string {
	if o == nil || IsNil(o.Storage.Get()) {
		var ret string
		return ret
	}
	return *o.Storage.Get()
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProxmoxCommand) GetStorageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Storage.Get(), o.Storage.IsSet()
}

// HasStorage returns a boolean if a field has been set.
func (o *CreateProxmoxCommand) HasStorage() bool {
	if o != nil && o.Storage.IsSet() {
		return true
	}

	return false
}

// SetStorage gets a reference to the given NullableString and assigns it to the Storage field.
func (o *CreateProxmoxCommand) SetStorage(v string) {
	o.Storage.Set(&v)
}

// SetStorageNil sets the value for Storage to be an explicit nil
func (o *CreateProxmoxCommand) SetStorageNil() {
	o.Storage.Set(nil)
}

// UnsetStorage ensures that no value is present for Storage, not even an explicit nil
func (o *CreateProxmoxCommand) UnsetStorage() {
	o.Storage.Unset()
}

// GetVmTemplateName returns the VmTemplateName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProxmoxCommand) GetVmTemplateName() string {
	if o == nil || IsNil(o.VmTemplateName.Get()) {
		var ret string
		return ret
	}
	return *o.VmTemplateName.Get()
}

// GetVmTemplateNameOk returns a tuple with the VmTemplateName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProxmoxCommand) GetVmTemplateNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VmTemplateName.Get(), o.VmTemplateName.IsSet()
}

// HasVmTemplateName returns a boolean if a field has been set.
func (o *CreateProxmoxCommand) HasVmTemplateName() bool {
	if o != nil && o.VmTemplateName.IsSet() {
		return true
	}

	return false
}

// SetVmTemplateName gets a reference to the given NullableString and assigns it to the VmTemplateName field.
func (o *CreateProxmoxCommand) SetVmTemplateName(v string) {
	o.VmTemplateName.Set(&v)
}

// SetVmTemplateNameNil sets the value for VmTemplateName to be an explicit nil
func (o *CreateProxmoxCommand) SetVmTemplateNameNil() {
	o.VmTemplateName.Set(nil)
}

// UnsetVmTemplateName ensures that no value is present for VmTemplateName, not even an explicit nil
func (o *CreateProxmoxCommand) UnsetVmTemplateName() {
	o.VmTemplateName.Unset()
}

// GetContinent returns the Continent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProxmoxCommand) GetContinent() string {
	if o == nil || IsNil(o.Continent.Get()) {
		var ret string
		return ret
	}
	return *o.Continent.Get()
}

// GetContinentOk returns a tuple with the Continent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProxmoxCommand) GetContinentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Continent.Get(), o.Continent.IsSet()
}

// HasContinent returns a boolean if a field has been set.
func (o *CreateProxmoxCommand) HasContinent() bool {
	if o != nil && o.Continent.IsSet() {
		return true
	}

	return false
}

// SetContinent gets a reference to the given NullableString and assigns it to the Continent field.
func (o *CreateProxmoxCommand) SetContinent(v string) {
	o.Continent.Set(&v)
}

// SetContinentNil sets the value for Continent to be an explicit nil
func (o *CreateProxmoxCommand) SetContinentNil() {
	o.Continent.Set(nil)
}

// UnsetContinent ensures that no value is present for Continent, not even an explicit nil
func (o *CreateProxmoxCommand) UnsetContinent() {
	o.Continent.Unset()
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProxmoxCommand) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId.Get()) {
		var ret int32
		return ret
	}
	return *o.OrganizationId.Get()
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProxmoxCommand) GetOrganizationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationId.Get(), o.OrganizationId.IsSet()
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *CreateProxmoxCommand) HasOrganizationId() bool {
	if o != nil && o.OrganizationId.IsSet() {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given NullableInt32 and assigns it to the OrganizationId field.
func (o *CreateProxmoxCommand) SetOrganizationId(v int32) {
	o.OrganizationId.Set(&v)
}

// SetOrganizationIdNil sets the value for OrganizationId to be an explicit nil
func (o *CreateProxmoxCommand) SetOrganizationIdNil() {
	o.OrganizationId.Set(nil)
}

// UnsetOrganizationId ensures that no value is present for OrganizationId, not even an explicit nil
func (o *CreateProxmoxCommand) UnsetOrganizationId() {
	o.OrganizationId.Unset()
}

// GetHypervisors returns the Hypervisors field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProxmoxCommand) GetHypervisors() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Hypervisors
}

// GetHypervisorsOk returns a tuple with the Hypervisors field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProxmoxCommand) GetHypervisorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Hypervisors) {
		return nil, false
	}
	return o.Hypervisors, true
}

// HasHypervisors returns a boolean if a field has been set.
func (o *CreateProxmoxCommand) HasHypervisors() bool {
	if o != nil && IsNil(o.Hypervisors) {
		return true
	}

	return false
}

// SetHypervisors gets a reference to the given []string and assigns it to the Hypervisors field.
func (o *CreateProxmoxCommand) SetHypervisors(v []string) {
	o.Hypervisors = v
}

// GetPublicNetwork returns the PublicNetwork field value if set, zero value otherwise.
func (o *CreateProxmoxCommand) GetPublicNetwork() CreateProxmoxNetworkDto {
	if o == nil || IsNil(o.PublicNetwork) {
		var ret CreateProxmoxNetworkDto
		return ret
	}
	return *o.PublicNetwork
}

// GetPublicNetworkOk returns a tuple with the PublicNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProxmoxCommand) GetPublicNetworkOk() (*CreateProxmoxNetworkDto, bool) {
	if o == nil || IsNil(o.PublicNetwork) {
		return nil, false
	}
	return o.PublicNetwork, true
}

// HasPublicNetwork returns a boolean if a field has been set.
func (o *CreateProxmoxCommand) HasPublicNetwork() bool {
	if o != nil && !IsNil(o.PublicNetwork) {
		return true
	}

	return false
}

// SetPublicNetwork gets a reference to the given CreateProxmoxNetworkDto and assigns it to the PublicNetwork field.
func (o *CreateProxmoxCommand) SetPublicNetwork(v CreateProxmoxNetworkDto) {
	o.PublicNetwork = &v
}

// GetPrivateNetwork returns the PrivateNetwork field value if set, zero value otherwise.
func (o *CreateProxmoxCommand) GetPrivateNetwork() CreateProxmoxNetworkDto {
	if o == nil || IsNil(o.PrivateNetwork) {
		var ret CreateProxmoxNetworkDto
		return ret
	}
	return *o.PrivateNetwork
}

// GetPrivateNetworkOk returns a tuple with the PrivateNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProxmoxCommand) GetPrivateNetworkOk() (*CreateProxmoxNetworkDto, bool) {
	if o == nil || IsNil(o.PrivateNetwork) {
		return nil, false
	}
	return o.PrivateNetwork, true
}

// HasPrivateNetwork returns a boolean if a field has been set.
func (o *CreateProxmoxCommand) HasPrivateNetwork() bool {
	if o != nil && !IsNil(o.PrivateNetwork) {
		return true
	}

	return false
}

// SetPrivateNetwork gets a reference to the given CreateProxmoxNetworkDto and assigns it to the PrivateNetwork field.
func (o *CreateProxmoxCommand) SetPrivateNetwork(v CreateProxmoxNetworkDto) {
	o.PrivateNetwork = &v
}

func (o CreateProxmoxCommand) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProxmoxCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.TokenId.IsSet() {
		toSerialize["tokenId"] = o.TokenId.Get()
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if o.TokenSecret.IsSet() {
		toSerialize["tokenSecret"] = o.TokenSecret.Get()
	}
	if o.Storage.IsSet() {
		toSerialize["storage"] = o.Storage.Get()
	}
	if o.VmTemplateName.IsSet() {
		toSerialize["vmTemplateName"] = o.VmTemplateName.Get()
	}
	if o.Continent.IsSet() {
		toSerialize["continent"] = o.Continent.Get()
	}
	if o.OrganizationId.IsSet() {
		toSerialize["organizationId"] = o.OrganizationId.Get()
	}
	if o.Hypervisors != nil {
		toSerialize["hypervisors"] = o.Hypervisors
	}
	if !IsNil(o.PublicNetwork) {
		toSerialize["publicNetwork"] = o.PublicNetwork
	}
	if !IsNil(o.PrivateNetwork) {
		toSerialize["privateNetwork"] = o.PrivateNetwork
	}
	return toSerialize, nil
}

type NullableCreateProxmoxCommand struct {
	value *CreateProxmoxCommand
	isSet bool
}

func (v NullableCreateProxmoxCommand) Get() *CreateProxmoxCommand {
	return v.value
}

func (v *NullableCreateProxmoxCommand) Set(val *CreateProxmoxCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProxmoxCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProxmoxCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProxmoxCommand(val *CreateProxmoxCommand) *NullableCreateProxmoxCommand {
	return &NullableCreateProxmoxCommand{value: val, isSet: true}
}

func (v NullableCreateProxmoxCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProxmoxCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
