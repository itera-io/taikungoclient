/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikunshowback

import (
	"encoding/json"
)

// checks if the ListForLandingPageDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListForLandingPageDto{}

// ListForLandingPageDto struct for ListForLandingPageDto
type ListForLandingPageDto struct {
	Id                   *int32         `json:"id,omitempty"`
	Name                 NullableString `json:"name,omitempty"`
	ProjectLimit         *int32         `json:"projectLimit,omitempty"`
	ServerLimit          *int32         `json:"serverLimit,omitempty"`
	UserLimit            *int32         `json:"userLimit,omitempty"`
	CloudCredentialLimit *int32         `json:"cloudCredentialLimit,omitempty"`
	MonthlyPrice         *float64       `json:"monthlyPrice,omitempty"`
	YearlyPrice          *float64       `json:"yearlyPrice,omitempty"`
	TcuPrice             *float64       `json:"tcuPrice,omitempty"`
	IsDeprecated         *bool          `json:"isDeprecated,omitempty"`
	Currency             NullableString `json:"currency,omitempty"`
	PartnerId            NullableInt32  `json:"partnerId,omitempty"`
	TrialDays            *int32         `json:"trialDays,omitempty"`
	Description          NullableString `json:"description,omitempty"`
	IsFree               *bool          `json:"isFree,omitempty"`
	IsEnterprise         *bool          `json:"isEnterprise,omitempty"`
}

// NewListForLandingPageDto instantiates a new ListForLandingPageDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListForLandingPageDto() *ListForLandingPageDto {
	this := ListForLandingPageDto{}
	return &this
}

// NewListForLandingPageDtoWithDefaults instantiates a new ListForLandingPageDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListForLandingPageDtoWithDefaults() *ListForLandingPageDto {
	this := ListForLandingPageDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListForLandingPageDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListForLandingPageDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ListForLandingPageDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ListForLandingPageDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListForLandingPageDto) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListForLandingPageDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ListForLandingPageDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ListForLandingPageDto) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *ListForLandingPageDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ListForLandingPageDto) UnsetName() {
	o.Name.Unset()
}

// GetProjectLimit returns the ProjectLimit field value if set, zero value otherwise.
func (o *ListForLandingPageDto) GetProjectLimit() int32 {
	if o == nil || IsNil(o.ProjectLimit) {
		var ret int32
		return ret
	}
	return *o.ProjectLimit
}

// GetProjectLimitOk returns a tuple with the ProjectLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListForLandingPageDto) GetProjectLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectLimit) {
		return nil, false
	}
	return o.ProjectLimit, true
}

// HasProjectLimit returns a boolean if a field has been set.
func (o *ListForLandingPageDto) HasProjectLimit() bool {
	if o != nil && !IsNil(o.ProjectLimit) {
		return true
	}

	return false
}

// SetProjectLimit gets a reference to the given int32 and assigns it to the ProjectLimit field.
func (o *ListForLandingPageDto) SetProjectLimit(v int32) {
	o.ProjectLimit = &v
}

// GetServerLimit returns the ServerLimit field value if set, zero value otherwise.
func (o *ListForLandingPageDto) GetServerLimit() int32 {
	if o == nil || IsNil(o.ServerLimit) {
		var ret int32
		return ret
	}
	return *o.ServerLimit
}

// GetServerLimitOk returns a tuple with the ServerLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListForLandingPageDto) GetServerLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.ServerLimit) {
		return nil, false
	}
	return o.ServerLimit, true
}

// HasServerLimit returns a boolean if a field has been set.
func (o *ListForLandingPageDto) HasServerLimit() bool {
	if o != nil && !IsNil(o.ServerLimit) {
		return true
	}

	return false
}

// SetServerLimit gets a reference to the given int32 and assigns it to the ServerLimit field.
func (o *ListForLandingPageDto) SetServerLimit(v int32) {
	o.ServerLimit = &v
}

// GetUserLimit returns the UserLimit field value if set, zero value otherwise.
func (o *ListForLandingPageDto) GetUserLimit() int32 {
	if o == nil || IsNil(o.UserLimit) {
		var ret int32
		return ret
	}
	return *o.UserLimit
}

// GetUserLimitOk returns a tuple with the UserLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListForLandingPageDto) GetUserLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.UserLimit) {
		return nil, false
	}
	return o.UserLimit, true
}

// HasUserLimit returns a boolean if a field has been set.
func (o *ListForLandingPageDto) HasUserLimit() bool {
	if o != nil && !IsNil(o.UserLimit) {
		return true
	}

	return false
}

// SetUserLimit gets a reference to the given int32 and assigns it to the UserLimit field.
func (o *ListForLandingPageDto) SetUserLimit(v int32) {
	o.UserLimit = &v
}

// GetCloudCredentialLimit returns the CloudCredentialLimit field value if set, zero value otherwise.
func (o *ListForLandingPageDto) GetCloudCredentialLimit() int32 {
	if o == nil || IsNil(o.CloudCredentialLimit) {
		var ret int32
		return ret
	}
	return *o.CloudCredentialLimit
}

// GetCloudCredentialLimitOk returns a tuple with the CloudCredentialLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListForLandingPageDto) GetCloudCredentialLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.CloudCredentialLimit) {
		return nil, false
	}
	return o.CloudCredentialLimit, true
}

// HasCloudCredentialLimit returns a boolean if a field has been set.
func (o *ListForLandingPageDto) HasCloudCredentialLimit() bool {
	if o != nil && !IsNil(o.CloudCredentialLimit) {
		return true
	}

	return false
}

// SetCloudCredentialLimit gets a reference to the given int32 and assigns it to the CloudCredentialLimit field.
func (o *ListForLandingPageDto) SetCloudCredentialLimit(v int32) {
	o.CloudCredentialLimit = &v
}

// GetMonthlyPrice returns the MonthlyPrice field value if set, zero value otherwise.
func (o *ListForLandingPageDto) GetMonthlyPrice() float64 {
	if o == nil || IsNil(o.MonthlyPrice) {
		var ret float64
		return ret
	}
	return *o.MonthlyPrice
}

// GetMonthlyPriceOk returns a tuple with the MonthlyPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListForLandingPageDto) GetMonthlyPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.MonthlyPrice) {
		return nil, false
	}
	return o.MonthlyPrice, true
}

// HasMonthlyPrice returns a boolean if a field has been set.
func (o *ListForLandingPageDto) HasMonthlyPrice() bool {
	if o != nil && !IsNil(o.MonthlyPrice) {
		return true
	}

	return false
}

// SetMonthlyPrice gets a reference to the given float64 and assigns it to the MonthlyPrice field.
func (o *ListForLandingPageDto) SetMonthlyPrice(v float64) {
	o.MonthlyPrice = &v
}

// GetYearlyPrice returns the YearlyPrice field value if set, zero value otherwise.
func (o *ListForLandingPageDto) GetYearlyPrice() float64 {
	if o == nil || IsNil(o.YearlyPrice) {
		var ret float64
		return ret
	}
	return *o.YearlyPrice
}

// GetYearlyPriceOk returns a tuple with the YearlyPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListForLandingPageDto) GetYearlyPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.YearlyPrice) {
		return nil, false
	}
	return o.YearlyPrice, true
}

// HasYearlyPrice returns a boolean if a field has been set.
func (o *ListForLandingPageDto) HasYearlyPrice() bool {
	if o != nil && !IsNil(o.YearlyPrice) {
		return true
	}

	return false
}

// SetYearlyPrice gets a reference to the given float64 and assigns it to the YearlyPrice field.
func (o *ListForLandingPageDto) SetYearlyPrice(v float64) {
	o.YearlyPrice = &v
}

// GetTcuPrice returns the TcuPrice field value if set, zero value otherwise.
func (o *ListForLandingPageDto) GetTcuPrice() float64 {
	if o == nil || IsNil(o.TcuPrice) {
		var ret float64
		return ret
	}
	return *o.TcuPrice
}

// GetTcuPriceOk returns a tuple with the TcuPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListForLandingPageDto) GetTcuPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.TcuPrice) {
		return nil, false
	}
	return o.TcuPrice, true
}

// HasTcuPrice returns a boolean if a field has been set.
func (o *ListForLandingPageDto) HasTcuPrice() bool {
	if o != nil && !IsNil(o.TcuPrice) {
		return true
	}

	return false
}

// SetTcuPrice gets a reference to the given float64 and assigns it to the TcuPrice field.
func (o *ListForLandingPageDto) SetTcuPrice(v float64) {
	o.TcuPrice = &v
}

// GetIsDeprecated returns the IsDeprecated field value if set, zero value otherwise.
func (o *ListForLandingPageDto) GetIsDeprecated() bool {
	if o == nil || IsNil(o.IsDeprecated) {
		var ret bool
		return ret
	}
	return *o.IsDeprecated
}

// GetIsDeprecatedOk returns a tuple with the IsDeprecated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListForLandingPageDto) GetIsDeprecatedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeprecated) {
		return nil, false
	}
	return o.IsDeprecated, true
}

// HasIsDeprecated returns a boolean if a field has been set.
func (o *ListForLandingPageDto) HasIsDeprecated() bool {
	if o != nil && !IsNil(o.IsDeprecated) {
		return true
	}

	return false
}

// SetIsDeprecated gets a reference to the given bool and assigns it to the IsDeprecated field.
func (o *ListForLandingPageDto) SetIsDeprecated(v bool) {
	o.IsDeprecated = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListForLandingPageDto) GetCurrency() string {
	if o == nil || IsNil(o.Currency.Get()) {
		var ret string
		return ret
	}
	return *o.Currency.Get()
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListForLandingPageDto) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Currency.Get(), o.Currency.IsSet()
}

// HasCurrency returns a boolean if a field has been set.
func (o *ListForLandingPageDto) HasCurrency() bool {
	if o != nil && o.Currency.IsSet() {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given NullableString and assigns it to the Currency field.
func (o *ListForLandingPageDto) SetCurrency(v string) {
	o.Currency.Set(&v)
}

// SetCurrencyNil sets the value for Currency to be an explicit nil
func (o *ListForLandingPageDto) SetCurrencyNil() {
	o.Currency.Set(nil)
}

// UnsetCurrency ensures that no value is present for Currency, not even an explicit nil
func (o *ListForLandingPageDto) UnsetCurrency() {
	o.Currency.Unset()
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListForLandingPageDto) GetPartnerId() int32 {
	if o == nil || IsNil(o.PartnerId.Get()) {
		var ret int32
		return ret
	}
	return *o.PartnerId.Get()
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListForLandingPageDto) GetPartnerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PartnerId.Get(), o.PartnerId.IsSet()
}

// HasPartnerId returns a boolean if a field has been set.
func (o *ListForLandingPageDto) HasPartnerId() bool {
	if o != nil && o.PartnerId.IsSet() {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given NullableInt32 and assigns it to the PartnerId field.
func (o *ListForLandingPageDto) SetPartnerId(v int32) {
	o.PartnerId.Set(&v)
}

// SetPartnerIdNil sets the value for PartnerId to be an explicit nil
func (o *ListForLandingPageDto) SetPartnerIdNil() {
	o.PartnerId.Set(nil)
}

// UnsetPartnerId ensures that no value is present for PartnerId, not even an explicit nil
func (o *ListForLandingPageDto) UnsetPartnerId() {
	o.PartnerId.Unset()
}

// GetTrialDays returns the TrialDays field value if set, zero value otherwise.
func (o *ListForLandingPageDto) GetTrialDays() int32 {
	if o == nil || IsNil(o.TrialDays) {
		var ret int32
		return ret
	}
	return *o.TrialDays
}

// GetTrialDaysOk returns a tuple with the TrialDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListForLandingPageDto) GetTrialDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.TrialDays) {
		return nil, false
	}
	return o.TrialDays, true
}

// HasTrialDays returns a boolean if a field has been set.
func (o *ListForLandingPageDto) HasTrialDays() bool {
	if o != nil && !IsNil(o.TrialDays) {
		return true
	}

	return false
}

// SetTrialDays gets a reference to the given int32 and assigns it to the TrialDays field.
func (o *ListForLandingPageDto) SetTrialDays(v int32) {
	o.TrialDays = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListForLandingPageDto) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListForLandingPageDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ListForLandingPageDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ListForLandingPageDto) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ListForLandingPageDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ListForLandingPageDto) UnsetDescription() {
	o.Description.Unset()
}

// GetIsFree returns the IsFree field value if set, zero value otherwise.
func (o *ListForLandingPageDto) GetIsFree() bool {
	if o == nil || IsNil(o.IsFree) {
		var ret bool
		return ret
	}
	return *o.IsFree
}

// GetIsFreeOk returns a tuple with the IsFree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListForLandingPageDto) GetIsFreeOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFree) {
		return nil, false
	}
	return o.IsFree, true
}

// HasIsFree returns a boolean if a field has been set.
func (o *ListForLandingPageDto) HasIsFree() bool {
	if o != nil && !IsNil(o.IsFree) {
		return true
	}

	return false
}

// SetIsFree gets a reference to the given bool and assigns it to the IsFree field.
func (o *ListForLandingPageDto) SetIsFree(v bool) {
	o.IsFree = &v
}

// GetIsEnterprise returns the IsEnterprise field value if set, zero value otherwise.
func (o *ListForLandingPageDto) GetIsEnterprise() bool {
	if o == nil || IsNil(o.IsEnterprise) {
		var ret bool
		return ret
	}
	return *o.IsEnterprise
}

// GetIsEnterpriseOk returns a tuple with the IsEnterprise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListForLandingPageDto) GetIsEnterpriseOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEnterprise) {
		return nil, false
	}
	return o.IsEnterprise, true
}

// HasIsEnterprise returns a boolean if a field has been set.
func (o *ListForLandingPageDto) HasIsEnterprise() bool {
	if o != nil && !IsNil(o.IsEnterprise) {
		return true
	}

	return false
}

// SetIsEnterprise gets a reference to the given bool and assigns it to the IsEnterprise field.
func (o *ListForLandingPageDto) SetIsEnterprise(v bool) {
	o.IsEnterprise = &v
}

func (o ListForLandingPageDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListForLandingPageDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if !IsNil(o.ProjectLimit) {
		toSerialize["projectLimit"] = o.ProjectLimit
	}
	if !IsNil(o.ServerLimit) {
		toSerialize["serverLimit"] = o.ServerLimit
	}
	if !IsNil(o.UserLimit) {
		toSerialize["userLimit"] = o.UserLimit
	}
	if !IsNil(o.CloudCredentialLimit) {
		toSerialize["cloudCredentialLimit"] = o.CloudCredentialLimit
	}
	if !IsNil(o.MonthlyPrice) {
		toSerialize["monthlyPrice"] = o.MonthlyPrice
	}
	if !IsNil(o.YearlyPrice) {
		toSerialize["yearlyPrice"] = o.YearlyPrice
	}
	if !IsNil(o.TcuPrice) {
		toSerialize["tcuPrice"] = o.TcuPrice
	}
	if !IsNil(o.IsDeprecated) {
		toSerialize["isDeprecated"] = o.IsDeprecated
	}
	if o.Currency.IsSet() {
		toSerialize["currency"] = o.Currency.Get()
	}
	if o.PartnerId.IsSet() {
		toSerialize["partnerId"] = o.PartnerId.Get()
	}
	if !IsNil(o.TrialDays) {
		toSerialize["trialDays"] = o.TrialDays
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.IsFree) {
		toSerialize["isFree"] = o.IsFree
	}
	if !IsNil(o.IsEnterprise) {
		toSerialize["isEnterprise"] = o.IsEnterprise
	}
	return toSerialize, nil
}

type NullableListForLandingPageDto struct {
	value *ListForLandingPageDto
	isSet bool
}

func (v NullableListForLandingPageDto) Get() *ListForLandingPageDto {
	return v.value
}

func (v *NullableListForLandingPageDto) Set(val *ListForLandingPageDto) {
	v.value = val
	v.isSet = true
}

func (v NullableListForLandingPageDto) IsSet() bool {
	return v.isSet
}

func (v *NullableListForLandingPageDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListForLandingPageDto(val *ListForLandingPageDto) *NullableListForLandingPageDto {
	return &NullableListForLandingPageDto{value: val, isSet: true}
}

func (v NullableListForLandingPageDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListForLandingPageDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
