/*
Taikun - Showback API

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikunshowback

import (
	"encoding/json"
)

// checks if the GroupedShowbackSummaryInfos type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupedShowbackSummaryInfos{}

// GroupedShowbackSummaryInfos struct for GroupedShowbackSummaryInfos
type GroupedShowbackSummaryInfos struct {
	Data       []GroupedShowbackSummaries `json:"data,omitempty"`
	Id         NullableInt32              `json:"id,omitempty"`
	Name       NullableString             `json:"name,omitempty"`
	TotalPrice NullableFloat64            `json:"totalPrice,omitempty"`
}

// NewGroupedShowbackSummaryInfos instantiates a new GroupedShowbackSummaryInfos object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupedShowbackSummaryInfos() *GroupedShowbackSummaryInfos {
	this := GroupedShowbackSummaryInfos{}
	return &this
}

// NewGroupedShowbackSummaryInfosWithDefaults instantiates a new GroupedShowbackSummaryInfos object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupedShowbackSummaryInfosWithDefaults() *GroupedShowbackSummaryInfos {
	this := GroupedShowbackSummaryInfos{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GroupedShowbackSummaryInfos) GetData() []GroupedShowbackSummaries {
	if o == nil {
		var ret []GroupedShowbackSummaries
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupedShowbackSummaryInfos) GetDataOk() ([]GroupedShowbackSummaries, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GroupedShowbackSummaryInfos) HasData() bool {
	if o != nil && IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []GroupedShowbackSummaries and assigns it to the Data field.
func (o *GroupedShowbackSummaryInfos) SetData(v []GroupedShowbackSummaries) {
	o.Data = v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GroupedShowbackSummaryInfos) GetId() int32 {
	if o == nil || IsNil(o.Id.Get()) {
		var ret int32
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupedShowbackSummaryInfos) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *GroupedShowbackSummaryInfos) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt32 and assigns it to the Id field.
func (o *GroupedShowbackSummaryInfos) SetId(v int32) {
	o.Id.Set(&v)
}

// SetIdNil sets the value for Id to be an explicit nil
func (o *GroupedShowbackSummaryInfos) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *GroupedShowbackSummaryInfos) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GroupedShowbackSummaryInfos) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupedShowbackSummaryInfos) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *GroupedShowbackSummaryInfos) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *GroupedShowbackSummaryInfos) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *GroupedShowbackSummaryInfos) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *GroupedShowbackSummaryInfos) UnsetName() {
	o.Name.Unset()
}

// GetTotalPrice returns the TotalPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GroupedShowbackSummaryInfos) GetTotalPrice() float64 {
	if o == nil || IsNil(o.TotalPrice.Get()) {
		var ret float64
		return ret
	}
	return *o.TotalPrice.Get()
}

// GetTotalPriceOk returns a tuple with the TotalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupedShowbackSummaryInfos) GetTotalPriceOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalPrice.Get(), o.TotalPrice.IsSet()
}

// HasTotalPrice returns a boolean if a field has been set.
func (o *GroupedShowbackSummaryInfos) HasTotalPrice() bool {
	if o != nil && o.TotalPrice.IsSet() {
		return true
	}

	return false
}

// SetTotalPrice gets a reference to the given NullableFloat64 and assigns it to the TotalPrice field.
func (o *GroupedShowbackSummaryInfos) SetTotalPrice(v float64) {
	o.TotalPrice.Set(&v)
}

// SetTotalPriceNil sets the value for TotalPrice to be an explicit nil
func (o *GroupedShowbackSummaryInfos) SetTotalPriceNil() {
	o.TotalPrice.Set(nil)
}

// UnsetTotalPrice ensures that no value is present for TotalPrice, not even an explicit nil
func (o *GroupedShowbackSummaryInfos) UnsetTotalPrice() {
	o.TotalPrice.Unset()
}

func (o GroupedShowbackSummaryInfos) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupedShowbackSummaryInfos) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.TotalPrice.IsSet() {
		toSerialize["totalPrice"] = o.TotalPrice.Get()
	}
	return toSerialize, nil
}

type NullableGroupedShowbackSummaryInfos struct {
	value *GroupedShowbackSummaryInfos
	isSet bool
}

func (v NullableGroupedShowbackSummaryInfos) Get() *GroupedShowbackSummaryInfos {
	return v.value
}

func (v *NullableGroupedShowbackSummaryInfos) Set(val *GroupedShowbackSummaryInfos) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupedShowbackSummaryInfos) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupedShowbackSummaryInfos) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupedShowbackSummaryInfos(val *GroupedShowbackSummaryInfos) *NullableGroupedShowbackSummaryInfos {
	return &NullableGroupedShowbackSummaryInfos{value: val, isSet: true}
}

func (v NullableGroupedShowbackSummaryInfos) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupedShowbackSummaryInfos) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
