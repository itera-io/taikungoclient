/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikunshowback

import (
	"encoding/json"
)

// checks if the ProjectDetailsForVmsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectDetailsForVmsDto{}

// ProjectDetailsForVmsDto struct for ProjectDetailsForVmsDto
type ProjectDetailsForVmsDto struct {
	ProjectStatus            *ProjectStatus  `json:"projectStatus,omitempty"`
	ProjectName              NullableString  `json:"projectName,omitempty"`
	ProjectId                *int32          `json:"projectId,omitempty"`
	CloudType                *CloudType      `json:"cloudType,omitempty"`
	CloudName                NullableString  `json:"cloudName,omitempty"`
	CloudId                  NullableInt32   `json:"cloudId,omitempty"`
	OrganizationName         NullableString  `json:"organizationName,omitempty"`
	OrganizationId           *int32          `json:"organizationId,omitempty"`
	IsLocked                 *bool           `json:"isLocked,omitempty"`
	HasSelectedFlavors       NullableBool    `json:"hasSelectedFlavors,omitempty"`
	IsMaintenanceModeEnabled *bool           `json:"isMaintenanceModeEnabled,omitempty"`
	ProjectCloudRevision     NullableInt32   `json:"projectCloudRevision,omitempty"`
	CloudCredentialRevision  NullableInt32   `json:"cloudCredentialRevision,omitempty"`
	AllowFullSpotKubernetes  *bool           `json:"allowFullSpotKubernetes,omitempty"`
	AllowSpotWorkers         *bool           `json:"allowSpotWorkers,omitempty"`
	AllowSpotVMs             *bool           `json:"allowSpotVMs,omitempty"`
	MaxSpotPrice             NullableFloat64 `json:"maxSpotPrice,omitempty"`
	TotalHourlyCost          *float64        `json:"totalHourlyCost,omitempty"`
	AvailabilityZones        []string        `json:"availabilityZones,omitempty"`
	Hypervisors              []string        `json:"hypervisors,omitempty"`
}

// NewProjectDetailsForVmsDto instantiates a new ProjectDetailsForVmsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectDetailsForVmsDto() *ProjectDetailsForVmsDto {
	this := ProjectDetailsForVmsDto{}
	return &this
}

// NewProjectDetailsForVmsDtoWithDefaults instantiates a new ProjectDetailsForVmsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectDetailsForVmsDtoWithDefaults() *ProjectDetailsForVmsDto {
	this := ProjectDetailsForVmsDto{}
	return &this
}

// GetProjectStatus returns the ProjectStatus field value if set, zero value otherwise.
func (o *ProjectDetailsForVmsDto) GetProjectStatus() ProjectStatus {
	if o == nil || IsNil(o.ProjectStatus) {
		var ret ProjectStatus
		return ret
	}
	return *o.ProjectStatus
}

// GetProjectStatusOk returns a tuple with the ProjectStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForVmsDto) GetProjectStatusOk() (*ProjectStatus, bool) {
	if o == nil || IsNil(o.ProjectStatus) {
		return nil, false
	}
	return o.ProjectStatus, true
}

// HasProjectStatus returns a boolean if a field has been set.
func (o *ProjectDetailsForVmsDto) HasProjectStatus() bool {
	if o != nil && !IsNil(o.ProjectStatus) {
		return true
	}

	return false
}

// SetProjectStatus gets a reference to the given ProjectStatus and assigns it to the ProjectStatus field.
func (o *ProjectDetailsForVmsDto) SetProjectStatus(v ProjectStatus) {
	o.ProjectStatus = &v
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForVmsDto) GetProjectName() string {
	if o == nil || IsNil(o.ProjectName.Get()) {
		var ret string
		return ret
	}
	return *o.ProjectName.Get()
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForVmsDto) GetProjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectName.Get(), o.ProjectName.IsSet()
}

// HasProjectName returns a boolean if a field has been set.
func (o *ProjectDetailsForVmsDto) HasProjectName() bool {
	if o != nil && o.ProjectName.IsSet() {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given NullableString and assigns it to the ProjectName field.
func (o *ProjectDetailsForVmsDto) SetProjectName(v string) {
	o.ProjectName.Set(&v)
}

// SetProjectNameNil sets the value for ProjectName to be an explicit nil
func (o *ProjectDetailsForVmsDto) SetProjectNameNil() {
	o.ProjectName.Set(nil)
}

// UnsetProjectName ensures that no value is present for ProjectName, not even an explicit nil
func (o *ProjectDetailsForVmsDto) UnsetProjectName() {
	o.ProjectName.Unset()
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ProjectDetailsForVmsDto) GetProjectId() int32 {
	if o == nil || IsNil(o.ProjectId) {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForVmsDto) GetProjectIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ProjectDetailsForVmsDto) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *ProjectDetailsForVmsDto) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetCloudType returns the CloudType field value if set, zero value otherwise.
func (o *ProjectDetailsForVmsDto) GetCloudType() CloudType {
	if o == nil || IsNil(o.CloudType) {
		var ret CloudType
		return ret
	}
	return *o.CloudType
}

// GetCloudTypeOk returns a tuple with the CloudType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForVmsDto) GetCloudTypeOk() (*CloudType, bool) {
	if o == nil || IsNil(o.CloudType) {
		return nil, false
	}
	return o.CloudType, true
}

// HasCloudType returns a boolean if a field has been set.
func (o *ProjectDetailsForVmsDto) HasCloudType() bool {
	if o != nil && !IsNil(o.CloudType) {
		return true
	}

	return false
}

// SetCloudType gets a reference to the given CloudType and assigns it to the CloudType field.
func (o *ProjectDetailsForVmsDto) SetCloudType(v CloudType) {
	o.CloudType = &v
}

// GetCloudName returns the CloudName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForVmsDto) GetCloudName() string {
	if o == nil || IsNil(o.CloudName.Get()) {
		var ret string
		return ret
	}
	return *o.CloudName.Get()
}

// GetCloudNameOk returns a tuple with the CloudName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForVmsDto) GetCloudNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloudName.Get(), o.CloudName.IsSet()
}

// HasCloudName returns a boolean if a field has been set.
func (o *ProjectDetailsForVmsDto) HasCloudName() bool {
	if o != nil && o.CloudName.IsSet() {
		return true
	}

	return false
}

// SetCloudName gets a reference to the given NullableString and assigns it to the CloudName field.
func (o *ProjectDetailsForVmsDto) SetCloudName(v string) {
	o.CloudName.Set(&v)
}

// SetCloudNameNil sets the value for CloudName to be an explicit nil
func (o *ProjectDetailsForVmsDto) SetCloudNameNil() {
	o.CloudName.Set(nil)
}

// UnsetCloudName ensures that no value is present for CloudName, not even an explicit nil
func (o *ProjectDetailsForVmsDto) UnsetCloudName() {
	o.CloudName.Unset()
}

// GetCloudId returns the CloudId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForVmsDto) GetCloudId() int32 {
	if o == nil || IsNil(o.CloudId.Get()) {
		var ret int32
		return ret
	}
	return *o.CloudId.Get()
}

// GetCloudIdOk returns a tuple with the CloudId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForVmsDto) GetCloudIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloudId.Get(), o.CloudId.IsSet()
}

// HasCloudId returns a boolean if a field has been set.
func (o *ProjectDetailsForVmsDto) HasCloudId() bool {
	if o != nil && o.CloudId.IsSet() {
		return true
	}

	return false
}

// SetCloudId gets a reference to the given NullableInt32 and assigns it to the CloudId field.
func (o *ProjectDetailsForVmsDto) SetCloudId(v int32) {
	o.CloudId.Set(&v)
}

// SetCloudIdNil sets the value for CloudId to be an explicit nil
func (o *ProjectDetailsForVmsDto) SetCloudIdNil() {
	o.CloudId.Set(nil)
}

// UnsetCloudId ensures that no value is present for CloudId, not even an explicit nil
func (o *ProjectDetailsForVmsDto) UnsetCloudId() {
	o.CloudId.Unset()
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForVmsDto) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizationName.Get()
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForVmsDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationName.Get(), o.OrganizationName.IsSet()
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *ProjectDetailsForVmsDto) HasOrganizationName() bool {
	if o != nil && o.OrganizationName.IsSet() {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given NullableString and assigns it to the OrganizationName field.
func (o *ProjectDetailsForVmsDto) SetOrganizationName(v string) {
	o.OrganizationName.Set(&v)
}

// SetOrganizationNameNil sets the value for OrganizationName to be an explicit nil
func (o *ProjectDetailsForVmsDto) SetOrganizationNameNil() {
	o.OrganizationName.Set(nil)
}

// UnsetOrganizationName ensures that no value is present for OrganizationName, not even an explicit nil
func (o *ProjectDetailsForVmsDto) UnsetOrganizationName() {
	o.OrganizationName.Unset()
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ProjectDetailsForVmsDto) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForVmsDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ProjectDetailsForVmsDto) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *ProjectDetailsForVmsDto) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise.
func (o *ProjectDetailsForVmsDto) GetIsLocked() bool {
	if o == nil || IsNil(o.IsLocked) {
		var ret bool
		return ret
	}
	return *o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForVmsDto) GetIsLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocked) {
		return nil, false
	}
	return o.IsLocked, true
}

// HasIsLocked returns a boolean if a field has been set.
func (o *ProjectDetailsForVmsDto) HasIsLocked() bool {
	if o != nil && !IsNil(o.IsLocked) {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given bool and assigns it to the IsLocked field.
func (o *ProjectDetailsForVmsDto) SetIsLocked(v bool) {
	o.IsLocked = &v
}

// GetHasSelectedFlavors returns the HasSelectedFlavors field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForVmsDto) GetHasSelectedFlavors() bool {
	if o == nil || IsNil(o.HasSelectedFlavors.Get()) {
		var ret bool
		return ret
	}
	return *o.HasSelectedFlavors.Get()
}

// GetHasSelectedFlavorsOk returns a tuple with the HasSelectedFlavors field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForVmsDto) GetHasSelectedFlavorsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasSelectedFlavors.Get(), o.HasSelectedFlavors.IsSet()
}

// HasHasSelectedFlavors returns a boolean if a field has been set.
func (o *ProjectDetailsForVmsDto) HasHasSelectedFlavors() bool {
	if o != nil && o.HasSelectedFlavors.IsSet() {
		return true
	}

	return false
}

// SetHasSelectedFlavors gets a reference to the given NullableBool and assigns it to the HasSelectedFlavors field.
func (o *ProjectDetailsForVmsDto) SetHasSelectedFlavors(v bool) {
	o.HasSelectedFlavors.Set(&v)
}

// SetHasSelectedFlavorsNil sets the value for HasSelectedFlavors to be an explicit nil
func (o *ProjectDetailsForVmsDto) SetHasSelectedFlavorsNil() {
	o.HasSelectedFlavors.Set(nil)
}

// UnsetHasSelectedFlavors ensures that no value is present for HasSelectedFlavors, not even an explicit nil
func (o *ProjectDetailsForVmsDto) UnsetHasSelectedFlavors() {
	o.HasSelectedFlavors.Unset()
}

// GetIsMaintenanceModeEnabled returns the IsMaintenanceModeEnabled field value if set, zero value otherwise.
func (o *ProjectDetailsForVmsDto) GetIsMaintenanceModeEnabled() bool {
	if o == nil || IsNil(o.IsMaintenanceModeEnabled) {
		var ret bool
		return ret
	}
	return *o.IsMaintenanceModeEnabled
}

// GetIsMaintenanceModeEnabledOk returns a tuple with the IsMaintenanceModeEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForVmsDto) GetIsMaintenanceModeEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMaintenanceModeEnabled) {
		return nil, false
	}
	return o.IsMaintenanceModeEnabled, true
}

// HasIsMaintenanceModeEnabled returns a boolean if a field has been set.
func (o *ProjectDetailsForVmsDto) HasIsMaintenanceModeEnabled() bool {
	if o != nil && !IsNil(o.IsMaintenanceModeEnabled) {
		return true
	}

	return false
}

// SetIsMaintenanceModeEnabled gets a reference to the given bool and assigns it to the IsMaintenanceModeEnabled field.
func (o *ProjectDetailsForVmsDto) SetIsMaintenanceModeEnabled(v bool) {
	o.IsMaintenanceModeEnabled = &v
}

// GetProjectCloudRevision returns the ProjectCloudRevision field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForVmsDto) GetProjectCloudRevision() int32 {
	if o == nil || IsNil(o.ProjectCloudRevision.Get()) {
		var ret int32
		return ret
	}
	return *o.ProjectCloudRevision.Get()
}

// GetProjectCloudRevisionOk returns a tuple with the ProjectCloudRevision field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForVmsDto) GetProjectCloudRevisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectCloudRevision.Get(), o.ProjectCloudRevision.IsSet()
}

// HasProjectCloudRevision returns a boolean if a field has been set.
func (o *ProjectDetailsForVmsDto) HasProjectCloudRevision() bool {
	if o != nil && o.ProjectCloudRevision.IsSet() {
		return true
	}

	return false
}

// SetProjectCloudRevision gets a reference to the given NullableInt32 and assigns it to the ProjectCloudRevision field.
func (o *ProjectDetailsForVmsDto) SetProjectCloudRevision(v int32) {
	o.ProjectCloudRevision.Set(&v)
}

// SetProjectCloudRevisionNil sets the value for ProjectCloudRevision to be an explicit nil
func (o *ProjectDetailsForVmsDto) SetProjectCloudRevisionNil() {
	o.ProjectCloudRevision.Set(nil)
}

// UnsetProjectCloudRevision ensures that no value is present for ProjectCloudRevision, not even an explicit nil
func (o *ProjectDetailsForVmsDto) UnsetProjectCloudRevision() {
	o.ProjectCloudRevision.Unset()
}

// GetCloudCredentialRevision returns the CloudCredentialRevision field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForVmsDto) GetCloudCredentialRevision() int32 {
	if o == nil || IsNil(o.CloudCredentialRevision.Get()) {
		var ret int32
		return ret
	}
	return *o.CloudCredentialRevision.Get()
}

// GetCloudCredentialRevisionOk returns a tuple with the CloudCredentialRevision field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForVmsDto) GetCloudCredentialRevisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloudCredentialRevision.Get(), o.CloudCredentialRevision.IsSet()
}

// HasCloudCredentialRevision returns a boolean if a field has been set.
func (o *ProjectDetailsForVmsDto) HasCloudCredentialRevision() bool {
	if o != nil && o.CloudCredentialRevision.IsSet() {
		return true
	}

	return false
}

// SetCloudCredentialRevision gets a reference to the given NullableInt32 and assigns it to the CloudCredentialRevision field.
func (o *ProjectDetailsForVmsDto) SetCloudCredentialRevision(v int32) {
	o.CloudCredentialRevision.Set(&v)
}

// SetCloudCredentialRevisionNil sets the value for CloudCredentialRevision to be an explicit nil
func (o *ProjectDetailsForVmsDto) SetCloudCredentialRevisionNil() {
	o.CloudCredentialRevision.Set(nil)
}

// UnsetCloudCredentialRevision ensures that no value is present for CloudCredentialRevision, not even an explicit nil
func (o *ProjectDetailsForVmsDto) UnsetCloudCredentialRevision() {
	o.CloudCredentialRevision.Unset()
}

// GetAllowFullSpotKubernetes returns the AllowFullSpotKubernetes field value if set, zero value otherwise.
func (o *ProjectDetailsForVmsDto) GetAllowFullSpotKubernetes() bool {
	if o == nil || IsNil(o.AllowFullSpotKubernetes) {
		var ret bool
		return ret
	}
	return *o.AllowFullSpotKubernetes
}

// GetAllowFullSpotKubernetesOk returns a tuple with the AllowFullSpotKubernetes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForVmsDto) GetAllowFullSpotKubernetesOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowFullSpotKubernetes) {
		return nil, false
	}
	return o.AllowFullSpotKubernetes, true
}

// HasAllowFullSpotKubernetes returns a boolean if a field has been set.
func (o *ProjectDetailsForVmsDto) HasAllowFullSpotKubernetes() bool {
	if o != nil && !IsNil(o.AllowFullSpotKubernetes) {
		return true
	}

	return false
}

// SetAllowFullSpotKubernetes gets a reference to the given bool and assigns it to the AllowFullSpotKubernetes field.
func (o *ProjectDetailsForVmsDto) SetAllowFullSpotKubernetes(v bool) {
	o.AllowFullSpotKubernetes = &v
}

// GetAllowSpotWorkers returns the AllowSpotWorkers field value if set, zero value otherwise.
func (o *ProjectDetailsForVmsDto) GetAllowSpotWorkers() bool {
	if o == nil || IsNil(o.AllowSpotWorkers) {
		var ret bool
		return ret
	}
	return *o.AllowSpotWorkers
}

// GetAllowSpotWorkersOk returns a tuple with the AllowSpotWorkers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForVmsDto) GetAllowSpotWorkersOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSpotWorkers) {
		return nil, false
	}
	return o.AllowSpotWorkers, true
}

// HasAllowSpotWorkers returns a boolean if a field has been set.
func (o *ProjectDetailsForVmsDto) HasAllowSpotWorkers() bool {
	if o != nil && !IsNil(o.AllowSpotWorkers) {
		return true
	}

	return false
}

// SetAllowSpotWorkers gets a reference to the given bool and assigns it to the AllowSpotWorkers field.
func (o *ProjectDetailsForVmsDto) SetAllowSpotWorkers(v bool) {
	o.AllowSpotWorkers = &v
}

// GetAllowSpotVMs returns the AllowSpotVMs field value if set, zero value otherwise.
func (o *ProjectDetailsForVmsDto) GetAllowSpotVMs() bool {
	if o == nil || IsNil(o.AllowSpotVMs) {
		var ret bool
		return ret
	}
	return *o.AllowSpotVMs
}

// GetAllowSpotVMsOk returns a tuple with the AllowSpotVMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForVmsDto) GetAllowSpotVMsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSpotVMs) {
		return nil, false
	}
	return o.AllowSpotVMs, true
}

// HasAllowSpotVMs returns a boolean if a field has been set.
func (o *ProjectDetailsForVmsDto) HasAllowSpotVMs() bool {
	if o != nil && !IsNil(o.AllowSpotVMs) {
		return true
	}

	return false
}

// SetAllowSpotVMs gets a reference to the given bool and assigns it to the AllowSpotVMs field.
func (o *ProjectDetailsForVmsDto) SetAllowSpotVMs(v bool) {
	o.AllowSpotVMs = &v
}

// GetMaxSpotPrice returns the MaxSpotPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForVmsDto) GetMaxSpotPrice() float64 {
	if o == nil || IsNil(o.MaxSpotPrice.Get()) {
		var ret float64
		return ret
	}
	return *o.MaxSpotPrice.Get()
}

// GetMaxSpotPriceOk returns a tuple with the MaxSpotPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForVmsDto) GetMaxSpotPriceOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxSpotPrice.Get(), o.MaxSpotPrice.IsSet()
}

// HasMaxSpotPrice returns a boolean if a field has been set.
func (o *ProjectDetailsForVmsDto) HasMaxSpotPrice() bool {
	if o != nil && o.MaxSpotPrice.IsSet() {
		return true
	}

	return false
}

// SetMaxSpotPrice gets a reference to the given NullableFloat64 and assigns it to the MaxSpotPrice field.
func (o *ProjectDetailsForVmsDto) SetMaxSpotPrice(v float64) {
	o.MaxSpotPrice.Set(&v)
}

// SetMaxSpotPriceNil sets the value for MaxSpotPrice to be an explicit nil
func (o *ProjectDetailsForVmsDto) SetMaxSpotPriceNil() {
	o.MaxSpotPrice.Set(nil)
}

// UnsetMaxSpotPrice ensures that no value is present for MaxSpotPrice, not even an explicit nil
func (o *ProjectDetailsForVmsDto) UnsetMaxSpotPrice() {
	o.MaxSpotPrice.Unset()
}

// GetTotalHourlyCost returns the TotalHourlyCost field value if set, zero value otherwise.
func (o *ProjectDetailsForVmsDto) GetTotalHourlyCost() float64 {
	if o == nil || IsNil(o.TotalHourlyCost) {
		var ret float64
		return ret
	}
	return *o.TotalHourlyCost
}

// GetTotalHourlyCostOk returns a tuple with the TotalHourlyCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectDetailsForVmsDto) GetTotalHourlyCostOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalHourlyCost) {
		return nil, false
	}
	return o.TotalHourlyCost, true
}

// HasTotalHourlyCost returns a boolean if a field has been set.
func (o *ProjectDetailsForVmsDto) HasTotalHourlyCost() bool {
	if o != nil && !IsNil(o.TotalHourlyCost) {
		return true
	}

	return false
}

// SetTotalHourlyCost gets a reference to the given float64 and assigns it to the TotalHourlyCost field.
func (o *ProjectDetailsForVmsDto) SetTotalHourlyCost(v float64) {
	o.TotalHourlyCost = &v
}

// GetAvailabilityZones returns the AvailabilityZones field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForVmsDto) GetAvailabilityZones() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.AvailabilityZones
}

// GetAvailabilityZonesOk returns a tuple with the AvailabilityZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForVmsDto) GetAvailabilityZonesOk() ([]string, bool) {
	if o == nil || IsNil(o.AvailabilityZones) {
		return nil, false
	}
	return o.AvailabilityZones, true
}

// HasAvailabilityZones returns a boolean if a field has been set.
func (o *ProjectDetailsForVmsDto) HasAvailabilityZones() bool {
	if o != nil && IsNil(o.AvailabilityZones) {
		return true
	}

	return false
}

// SetAvailabilityZones gets a reference to the given []string and assigns it to the AvailabilityZones field.
func (o *ProjectDetailsForVmsDto) SetAvailabilityZones(v []string) {
	o.AvailabilityZones = v
}

// GetHypervisors returns the Hypervisors field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectDetailsForVmsDto) GetHypervisors() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Hypervisors
}

// GetHypervisorsOk returns a tuple with the Hypervisors field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectDetailsForVmsDto) GetHypervisorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Hypervisors) {
		return nil, false
	}
	return o.Hypervisors, true
}

// HasHypervisors returns a boolean if a field has been set.
func (o *ProjectDetailsForVmsDto) HasHypervisors() bool {
	if o != nil && IsNil(o.Hypervisors) {
		return true
	}

	return false
}

// SetHypervisors gets a reference to the given []string and assigns it to the Hypervisors field.
func (o *ProjectDetailsForVmsDto) SetHypervisors(v []string) {
	o.Hypervisors = v
}

func (o ProjectDetailsForVmsDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectDetailsForVmsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectStatus) {
		toSerialize["projectStatus"] = o.ProjectStatus
	}
	if o.ProjectName.IsSet() {
		toSerialize["projectName"] = o.ProjectName.Get()
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.CloudType) {
		toSerialize["cloudType"] = o.CloudType
	}
	if o.CloudName.IsSet() {
		toSerialize["cloudName"] = o.CloudName.Get()
	}
	if o.CloudId.IsSet() {
		toSerialize["cloudId"] = o.CloudId.Get()
	}
	if o.OrganizationName.IsSet() {
		toSerialize["organizationName"] = o.OrganizationName.Get()
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.IsLocked) {
		toSerialize["isLocked"] = o.IsLocked
	}
	if o.HasSelectedFlavors.IsSet() {
		toSerialize["hasSelectedFlavors"] = o.HasSelectedFlavors.Get()
	}
	if !IsNil(o.IsMaintenanceModeEnabled) {
		toSerialize["isMaintenanceModeEnabled"] = o.IsMaintenanceModeEnabled
	}
	if o.ProjectCloudRevision.IsSet() {
		toSerialize["projectCloudRevision"] = o.ProjectCloudRevision.Get()
	}
	if o.CloudCredentialRevision.IsSet() {
		toSerialize["cloudCredentialRevision"] = o.CloudCredentialRevision.Get()
	}
	if !IsNil(o.AllowFullSpotKubernetes) {
		toSerialize["allowFullSpotKubernetes"] = o.AllowFullSpotKubernetes
	}
	if !IsNil(o.AllowSpotWorkers) {
		toSerialize["allowSpotWorkers"] = o.AllowSpotWorkers
	}
	if !IsNil(o.AllowSpotVMs) {
		toSerialize["allowSpotVMs"] = o.AllowSpotVMs
	}
	if o.MaxSpotPrice.IsSet() {
		toSerialize["maxSpotPrice"] = o.MaxSpotPrice.Get()
	}
	if !IsNil(o.TotalHourlyCost) {
		toSerialize["totalHourlyCost"] = o.TotalHourlyCost
	}
	if o.AvailabilityZones != nil {
		toSerialize["availabilityZones"] = o.AvailabilityZones
	}
	if o.Hypervisors != nil {
		toSerialize["hypervisors"] = o.Hypervisors
	}
	return toSerialize, nil
}

type NullableProjectDetailsForVmsDto struct {
	value *ProjectDetailsForVmsDto
	isSet bool
}

func (v NullableProjectDetailsForVmsDto) Get() *ProjectDetailsForVmsDto {
	return v.value
}

func (v *NullableProjectDetailsForVmsDto) Set(val *ProjectDetailsForVmsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectDetailsForVmsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectDetailsForVmsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectDetailsForVmsDto(val *ProjectDetailsForVmsDto) *NullableProjectDetailsForVmsDto {
	return &NullableProjectDetailsForVmsDto{value: val, isSet: true}
}

func (v NullableProjectDetailsForVmsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectDetailsForVmsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
