/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikunshowback

import (
	"encoding/json"
)

// checks if the AlertingEmailDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertingEmailDto{}

// AlertingEmailDto struct for AlertingEmailDto
type AlertingEmailDto struct {
	Email NullableString `json:"email,omitempty"`
}

// NewAlertingEmailDto instantiates a new AlertingEmailDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertingEmailDto() *AlertingEmailDto {
	this := AlertingEmailDto{}
	return &this
}

// NewAlertingEmailDtoWithDefaults instantiates a new AlertingEmailDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertingEmailDtoWithDefaults() *AlertingEmailDto {
	this := AlertingEmailDto{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AlertingEmailDto) GetEmail() string {
	if o == nil || IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AlertingEmailDto) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *AlertingEmailDto) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *AlertingEmailDto) SetEmail(v string) {
	o.Email.Set(&v)
}

// SetEmailNil sets the value for Email to be an explicit nil
func (o *AlertingEmailDto) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *AlertingEmailDto) UnsetEmail() {
	o.Email.Unset()
}

func (o AlertingEmailDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertingEmailDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	return toSerialize, nil
}

type NullableAlertingEmailDto struct {
	value *AlertingEmailDto
	isSet bool
}

func (v NullableAlertingEmailDto) Get() *AlertingEmailDto {
	return v.value
}

func (v *NullableAlertingEmailDto) Set(val *AlertingEmailDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertingEmailDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertingEmailDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertingEmailDto(val *AlertingEmailDto) *NullableAlertingEmailDto {
	return &NullableAlertingEmailDto{value: val, isSet: true}
}

func (v NullableAlertingEmailDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertingEmailDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
