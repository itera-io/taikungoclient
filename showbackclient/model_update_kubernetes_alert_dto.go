/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikunshowback

import (
	"encoding/json"
	"time"
)

// checks if the UpdateKubernetesAlertDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateKubernetesAlertDto{}

// UpdateKubernetesAlertDto struct for UpdateKubernetesAlertDto
type UpdateKubernetesAlertDto struct {
	Status        NullableString `json:"status,omitempty"`
	Labels        interface{}    `json:"labels,omitempty"`
	StartsAt      *time.Time     `json:"startsAt,omitempty"`
	EndsAt        *time.Time     `json:"endsAt,omitempty"`
	Fingerprint   NullableString `json:"fingerprint,omitempty"`
	IsSilenced    NullableBool   `json:"isSilenced,omitempty"`
	SilenceReason NullableString `json:"silenceReason,omitempty"`
}

// NewUpdateKubernetesAlertDto instantiates a new UpdateKubernetesAlertDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateKubernetesAlertDto() *UpdateKubernetesAlertDto {
	this := UpdateKubernetesAlertDto{}
	return &this
}

// NewUpdateKubernetesAlertDtoWithDefaults instantiates a new UpdateKubernetesAlertDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateKubernetesAlertDtoWithDefaults() *UpdateKubernetesAlertDto {
	this := UpdateKubernetesAlertDto{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateKubernetesAlertDto) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateKubernetesAlertDto) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *UpdateKubernetesAlertDto) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *UpdateKubernetesAlertDto) SetStatus(v string) {
	o.Status.Set(&v)
}

// SetStatusNil sets the value for Status to be an explicit nil
func (o *UpdateKubernetesAlertDto) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *UpdateKubernetesAlertDto) UnsetStatus() {
	o.Status.Unset()
}

// GetLabels returns the Labels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateKubernetesAlertDto) GetLabels() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateKubernetesAlertDto) GetLabelsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return &o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *UpdateKubernetesAlertDto) HasLabels() bool {
	if o != nil && IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given interface{} and assigns it to the Labels field.
func (o *UpdateKubernetesAlertDto) SetLabels(v interface{}) {
	o.Labels = v
}

// GetStartsAt returns the StartsAt field value if set, zero value otherwise.
func (o *UpdateKubernetesAlertDto) GetStartsAt() time.Time {
	if o == nil || IsNil(o.StartsAt) {
		var ret time.Time
		return ret
	}
	return *o.StartsAt
}

// GetStartsAtOk returns a tuple with the StartsAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateKubernetesAlertDto) GetStartsAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartsAt) {
		return nil, false
	}
	return o.StartsAt, true
}

// HasStartsAt returns a boolean if a field has been set.
func (o *UpdateKubernetesAlertDto) HasStartsAt() bool {
	if o != nil && !IsNil(o.StartsAt) {
		return true
	}

	return false
}

// SetStartsAt gets a reference to the given time.Time and assigns it to the StartsAt field.
func (o *UpdateKubernetesAlertDto) SetStartsAt(v time.Time) {
	o.StartsAt = &v
}

// GetEndsAt returns the EndsAt field value if set, zero value otherwise.
func (o *UpdateKubernetesAlertDto) GetEndsAt() time.Time {
	if o == nil || IsNil(o.EndsAt) {
		var ret time.Time
		return ret
	}
	return *o.EndsAt
}

// GetEndsAtOk returns a tuple with the EndsAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateKubernetesAlertDto) GetEndsAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndsAt) {
		return nil, false
	}
	return o.EndsAt, true
}

// HasEndsAt returns a boolean if a field has been set.
func (o *UpdateKubernetesAlertDto) HasEndsAt() bool {
	if o != nil && !IsNil(o.EndsAt) {
		return true
	}

	return false
}

// SetEndsAt gets a reference to the given time.Time and assigns it to the EndsAt field.
func (o *UpdateKubernetesAlertDto) SetEndsAt(v time.Time) {
	o.EndsAt = &v
}

// GetFingerprint returns the Fingerprint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateKubernetesAlertDto) GetFingerprint() string {
	if o == nil || IsNil(o.Fingerprint.Get()) {
		var ret string
		return ret
	}
	return *o.Fingerprint.Get()
}

// GetFingerprintOk returns a tuple with the Fingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateKubernetesAlertDto) GetFingerprintOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fingerprint.Get(), o.Fingerprint.IsSet()
}

// HasFingerprint returns a boolean if a field has been set.
func (o *UpdateKubernetesAlertDto) HasFingerprint() bool {
	if o != nil && o.Fingerprint.IsSet() {
		return true
	}

	return false
}

// SetFingerprint gets a reference to the given NullableString and assigns it to the Fingerprint field.
func (o *UpdateKubernetesAlertDto) SetFingerprint(v string) {
	o.Fingerprint.Set(&v)
}

// SetFingerprintNil sets the value for Fingerprint to be an explicit nil
func (o *UpdateKubernetesAlertDto) SetFingerprintNil() {
	o.Fingerprint.Set(nil)
}

// UnsetFingerprint ensures that no value is present for Fingerprint, not even an explicit nil
func (o *UpdateKubernetesAlertDto) UnsetFingerprint() {
	o.Fingerprint.Unset()
}

// GetIsSilenced returns the IsSilenced field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateKubernetesAlertDto) GetIsSilenced() bool {
	if o == nil || IsNil(o.IsSilenced.Get()) {
		var ret bool
		return ret
	}
	return *o.IsSilenced.Get()
}

// GetIsSilencedOk returns a tuple with the IsSilenced field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateKubernetesAlertDto) GetIsSilencedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsSilenced.Get(), o.IsSilenced.IsSet()
}

// HasIsSilenced returns a boolean if a field has been set.
func (o *UpdateKubernetesAlertDto) HasIsSilenced() bool {
	if o != nil && o.IsSilenced.IsSet() {
		return true
	}

	return false
}

// SetIsSilenced gets a reference to the given NullableBool and assigns it to the IsSilenced field.
func (o *UpdateKubernetesAlertDto) SetIsSilenced(v bool) {
	o.IsSilenced.Set(&v)
}

// SetIsSilencedNil sets the value for IsSilenced to be an explicit nil
func (o *UpdateKubernetesAlertDto) SetIsSilencedNil() {
	o.IsSilenced.Set(nil)
}

// UnsetIsSilenced ensures that no value is present for IsSilenced, not even an explicit nil
func (o *UpdateKubernetesAlertDto) UnsetIsSilenced() {
	o.IsSilenced.Unset()
}

// GetSilenceReason returns the SilenceReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateKubernetesAlertDto) GetSilenceReason() string {
	if o == nil || IsNil(o.SilenceReason.Get()) {
		var ret string
		return ret
	}
	return *o.SilenceReason.Get()
}

// GetSilenceReasonOk returns a tuple with the SilenceReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateKubernetesAlertDto) GetSilenceReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SilenceReason.Get(), o.SilenceReason.IsSet()
}

// HasSilenceReason returns a boolean if a field has been set.
func (o *UpdateKubernetesAlertDto) HasSilenceReason() bool {
	if o != nil && o.SilenceReason.IsSet() {
		return true
	}

	return false
}

// SetSilenceReason gets a reference to the given NullableString and assigns it to the SilenceReason field.
func (o *UpdateKubernetesAlertDto) SetSilenceReason(v string) {
	o.SilenceReason.Set(&v)
}

// SetSilenceReasonNil sets the value for SilenceReason to be an explicit nil
func (o *UpdateKubernetesAlertDto) SetSilenceReasonNil() {
	o.SilenceReason.Set(nil)
}

// UnsetSilenceReason ensures that no value is present for SilenceReason, not even an explicit nil
func (o *UpdateKubernetesAlertDto) UnsetSilenceReason() {
	o.SilenceReason.Unset()
}

func (o UpdateKubernetesAlertDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateKubernetesAlertDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.StartsAt) {
		toSerialize["startsAt"] = o.StartsAt
	}
	if !IsNil(o.EndsAt) {
		toSerialize["endsAt"] = o.EndsAt
	}
	if o.Fingerprint.IsSet() {
		toSerialize["fingerprint"] = o.Fingerprint.Get()
	}
	if o.IsSilenced.IsSet() {
		toSerialize["isSilenced"] = o.IsSilenced.Get()
	}
	if o.SilenceReason.IsSet() {
		toSerialize["silenceReason"] = o.SilenceReason.Get()
	}
	return toSerialize, nil
}

type NullableUpdateKubernetesAlertDto struct {
	value *UpdateKubernetesAlertDto
	isSet bool
}

func (v NullableUpdateKubernetesAlertDto) Get() *UpdateKubernetesAlertDto {
	return v.value
}

func (v *NullableUpdateKubernetesAlertDto) Set(val *UpdateKubernetesAlertDto) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateKubernetesAlertDto) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateKubernetesAlertDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateKubernetesAlertDto(val *UpdateKubernetesAlertDto) *NullableUpdateKubernetesAlertDto {
	return &NullableUpdateKubernetesAlertDto{value: val, isSet: true}
}

func (v NullableUpdateKubernetesAlertDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateKubernetesAlertDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
