/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikunshowback

import (
	"encoding/json"
)

// checks if the InfraBillingSummaryDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InfraBillingSummaryDto{}

// InfraBillingSummaryDto struct for InfraBillingSummaryDto
type InfraBillingSummaryDto struct {
	InfraProductId   *int32         `json:"infraProductId,omitempty"`
	InfraProductName NullableString `json:"infraProductName,omitempty"`
	Intervals        []DateInterval `json:"intervals,omitempty"`
	TotalPrice       *float64       `json:"totalPrice,omitempty"`
}

// NewInfraBillingSummaryDto instantiates a new InfraBillingSummaryDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInfraBillingSummaryDto() *InfraBillingSummaryDto {
	this := InfraBillingSummaryDto{}
	return &this
}

// NewInfraBillingSummaryDtoWithDefaults instantiates a new InfraBillingSummaryDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInfraBillingSummaryDtoWithDefaults() *InfraBillingSummaryDto {
	this := InfraBillingSummaryDto{}
	return &this
}

// GetInfraProductId returns the InfraProductId field value if set, zero value otherwise.
func (o *InfraBillingSummaryDto) GetInfraProductId() int32 {
	if o == nil || IsNil(o.InfraProductId) {
		var ret int32
		return ret
	}
	return *o.InfraProductId
}

// GetInfraProductIdOk returns a tuple with the InfraProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfraBillingSummaryDto) GetInfraProductIdOk() (*int32, bool) {
	if o == nil || IsNil(o.InfraProductId) {
		return nil, false
	}
	return o.InfraProductId, true
}

// HasInfraProductId returns a boolean if a field has been set.
func (o *InfraBillingSummaryDto) HasInfraProductId() bool {
	if o != nil && !IsNil(o.InfraProductId) {
		return true
	}

	return false
}

// SetInfraProductId gets a reference to the given int32 and assigns it to the InfraProductId field.
func (o *InfraBillingSummaryDto) SetInfraProductId(v int32) {
	o.InfraProductId = &v
}

// GetInfraProductName returns the InfraProductName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InfraBillingSummaryDto) GetInfraProductName() string {
	if o == nil || IsNil(o.InfraProductName.Get()) {
		var ret string
		return ret
	}
	return *o.InfraProductName.Get()
}

// GetInfraProductNameOk returns a tuple with the InfraProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InfraBillingSummaryDto) GetInfraProductNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InfraProductName.Get(), o.InfraProductName.IsSet()
}

// HasInfraProductName returns a boolean if a field has been set.
func (o *InfraBillingSummaryDto) HasInfraProductName() bool {
	if o != nil && o.InfraProductName.IsSet() {
		return true
	}

	return false
}

// SetInfraProductName gets a reference to the given NullableString and assigns it to the InfraProductName field.
func (o *InfraBillingSummaryDto) SetInfraProductName(v string) {
	o.InfraProductName.Set(&v)
}

// SetInfraProductNameNil sets the value for InfraProductName to be an explicit nil
func (o *InfraBillingSummaryDto) SetInfraProductNameNil() {
	o.InfraProductName.Set(nil)
}

// UnsetInfraProductName ensures that no value is present for InfraProductName, not even an explicit nil
func (o *InfraBillingSummaryDto) UnsetInfraProductName() {
	o.InfraProductName.Unset()
}

// GetIntervals returns the Intervals field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InfraBillingSummaryDto) GetIntervals() []DateInterval {
	if o == nil {
		var ret []DateInterval
		return ret
	}
	return o.Intervals
}

// GetIntervalsOk returns a tuple with the Intervals field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InfraBillingSummaryDto) GetIntervalsOk() ([]DateInterval, bool) {
	if o == nil || IsNil(o.Intervals) {
		return nil, false
	}
	return o.Intervals, true
}

// HasIntervals returns a boolean if a field has been set.
func (o *InfraBillingSummaryDto) HasIntervals() bool {
	if o != nil && IsNil(o.Intervals) {
		return true
	}

	return false
}

// SetIntervals gets a reference to the given []DateInterval and assigns it to the Intervals field.
func (o *InfraBillingSummaryDto) SetIntervals(v []DateInterval) {
	o.Intervals = v
}

// GetTotalPrice returns the TotalPrice field value if set, zero value otherwise.
func (o *InfraBillingSummaryDto) GetTotalPrice() float64 {
	if o == nil || IsNil(o.TotalPrice) {
		var ret float64
		return ret
	}
	return *o.TotalPrice
}

// GetTotalPriceOk returns a tuple with the TotalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfraBillingSummaryDto) GetTotalPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalPrice) {
		return nil, false
	}
	return o.TotalPrice, true
}

// HasTotalPrice returns a boolean if a field has been set.
func (o *InfraBillingSummaryDto) HasTotalPrice() bool {
	if o != nil && !IsNil(o.TotalPrice) {
		return true
	}

	return false
}

// SetTotalPrice gets a reference to the given float64 and assigns it to the TotalPrice field.
func (o *InfraBillingSummaryDto) SetTotalPrice(v float64) {
	o.TotalPrice = &v
}

func (o InfraBillingSummaryDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InfraBillingSummaryDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InfraProductId) {
		toSerialize["infraProductId"] = o.InfraProductId
	}
	if o.InfraProductName.IsSet() {
		toSerialize["infraProductName"] = o.InfraProductName.Get()
	}
	if o.Intervals != nil {
		toSerialize["intervals"] = o.Intervals
	}
	if !IsNil(o.TotalPrice) {
		toSerialize["totalPrice"] = o.TotalPrice
	}
	return toSerialize, nil
}

type NullableInfraBillingSummaryDto struct {
	value *InfraBillingSummaryDto
	isSet bool
}

func (v NullableInfraBillingSummaryDto) Get() *InfraBillingSummaryDto {
	return v.value
}

func (v *NullableInfraBillingSummaryDto) Set(val *InfraBillingSummaryDto) {
	v.value = val
	v.isSet = true
}

func (v NullableInfraBillingSummaryDto) IsSet() bool {
	return v.isSet
}

func (v *NullableInfraBillingSummaryDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInfraBillingSummaryDto(val *InfraBillingSummaryDto) *NullableInfraBillingSummaryDto {
	return &NullableInfraBillingSummaryDto{value: val, isSet: true}
}

func (v NullableInfraBillingSummaryDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInfraBillingSummaryDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
