// Code generated by go-swagger; DO NOT EDIT.

package showback_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ShowbackRulesUpdateReader is a Reader for the ShowbackRulesUpdate structure.
type ShowbackRulesUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ShowbackRulesUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewShowbackRulesUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewShowbackRulesUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewShowbackRulesUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewShowbackRulesUpdateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewShowbackRulesUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewShowbackRulesUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewShowbackRulesUpdateOK creates a ShowbackRulesUpdateOK with default headers values
func NewShowbackRulesUpdateOK() *ShowbackRulesUpdateOK {
	return &ShowbackRulesUpdateOK{}
}

/* ShowbackRulesUpdateOK describes a response with status code 200, with default header values.

Success
*/
type ShowbackRulesUpdateOK struct {
	Payload models.Unit
}

func (o *ShowbackRulesUpdateOK) Error() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/update][%d] showbackRulesUpdateOK  %+v", 200, o.Payload)
}
func (o *ShowbackRulesUpdateOK) GetPayload() models.Unit {
	return o.Payload
}

func (o *ShowbackRulesUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackRulesUpdateBadRequest creates a ShowbackRulesUpdateBadRequest with default headers values
func NewShowbackRulesUpdateBadRequest() *ShowbackRulesUpdateBadRequest {
	return &ShowbackRulesUpdateBadRequest{}
}

/* ShowbackRulesUpdateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ShowbackRulesUpdateBadRequest struct {
	Payload *models.ValidationProblemDetails
}

func (o *ShowbackRulesUpdateBadRequest) Error() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/update][%d] showbackRulesUpdateBadRequest  %+v", 400, o.Payload)
}
func (o *ShowbackRulesUpdateBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *ShowbackRulesUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackRulesUpdateUnauthorized creates a ShowbackRulesUpdateUnauthorized with default headers values
func NewShowbackRulesUpdateUnauthorized() *ShowbackRulesUpdateUnauthorized {
	return &ShowbackRulesUpdateUnauthorized{}
}

/* ShowbackRulesUpdateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ShowbackRulesUpdateUnauthorized struct {
	Payload *models.ProblemDetails
}

func (o *ShowbackRulesUpdateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/update][%d] showbackRulesUpdateUnauthorized  %+v", 401, o.Payload)
}
func (o *ShowbackRulesUpdateUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ShowbackRulesUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackRulesUpdateForbidden creates a ShowbackRulesUpdateForbidden with default headers values
func NewShowbackRulesUpdateForbidden() *ShowbackRulesUpdateForbidden {
	return &ShowbackRulesUpdateForbidden{}
}

/* ShowbackRulesUpdateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ShowbackRulesUpdateForbidden struct {
	Payload *models.ProblemDetails
}

func (o *ShowbackRulesUpdateForbidden) Error() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/update][%d] showbackRulesUpdateForbidden  %+v", 403, o.Payload)
}
func (o *ShowbackRulesUpdateForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ShowbackRulesUpdateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackRulesUpdateNotFound creates a ShowbackRulesUpdateNotFound with default headers values
func NewShowbackRulesUpdateNotFound() *ShowbackRulesUpdateNotFound {
	return &ShowbackRulesUpdateNotFound{}
}

/* ShowbackRulesUpdateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ShowbackRulesUpdateNotFound struct {
	Payload *models.ProblemDetails
}

func (o *ShowbackRulesUpdateNotFound) Error() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/update][%d] showbackRulesUpdateNotFound  %+v", 404, o.Payload)
}
func (o *ShowbackRulesUpdateNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ShowbackRulesUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackRulesUpdateInternalServerError creates a ShowbackRulesUpdateInternalServerError with default headers values
func NewShowbackRulesUpdateInternalServerError() *ShowbackRulesUpdateInternalServerError {
	return &ShowbackRulesUpdateInternalServerError{}
}

/* ShowbackRulesUpdateInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ShowbackRulesUpdateInternalServerError struct {
}

func (o *ShowbackRulesUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/update][%d] showbackRulesUpdateInternalServerError ", 500)
}

func (o *ShowbackRulesUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
