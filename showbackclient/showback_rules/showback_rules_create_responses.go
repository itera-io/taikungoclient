// Code generated by go-swagger; DO NOT EDIT.

package showback_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/itera-io/taikungoclient/models"
)

// ShowbackRulesCreateReader is a Reader for the ShowbackRulesCreate structure.
type ShowbackRulesCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ShowbackRulesCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewShowbackRulesCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewShowbackRulesCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewShowbackRulesCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewShowbackRulesCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewShowbackRulesCreateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewShowbackRulesCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewShowbackRulesCreateOK creates a ShowbackRulesCreateOK with default headers values
func NewShowbackRulesCreateOK() *ShowbackRulesCreateOK {
	return &ShowbackRulesCreateOK{}
}

/*
ShowbackRulesCreateOK describes a response with status code 200, with default header values.

Success
*/
type ShowbackRulesCreateOK struct {
	Payload *models.APIResponse
}

// IsSuccess returns true when this showback rules create o k response has a 2xx status code
func (o *ShowbackRulesCreateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this showback rules create o k response has a 3xx status code
func (o *ShowbackRulesCreateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback rules create o k response has a 4xx status code
func (o *ShowbackRulesCreateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this showback rules create o k response has a 5xx status code
func (o *ShowbackRulesCreateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this showback rules create o k response a status code equal to that given
func (o *ShowbackRulesCreateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the showback rules create o k response
func (o *ShowbackRulesCreateOK) Code() int {
	return 200
}

func (o *ShowbackRulesCreateOK) Error() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/create][%d] showbackRulesCreateOK  %+v", 200, o.Payload)
}

func (o *ShowbackRulesCreateOK) String() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/create][%d] showbackRulesCreateOK  %+v", 200, o.Payload)
}

func (o *ShowbackRulesCreateOK) GetPayload() *models.APIResponse {
	return o.Payload
}

func (o *ShowbackRulesCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackRulesCreateBadRequest creates a ShowbackRulesCreateBadRequest with default headers values
func NewShowbackRulesCreateBadRequest() *ShowbackRulesCreateBadRequest {
	return &ShowbackRulesCreateBadRequest{}
}

/*
ShowbackRulesCreateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ShowbackRulesCreateBadRequest struct {
	Payload *models.ValidationProblemDetails
}

// IsSuccess returns true when this showback rules create bad request response has a 2xx status code
func (o *ShowbackRulesCreateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this showback rules create bad request response has a 3xx status code
func (o *ShowbackRulesCreateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback rules create bad request response has a 4xx status code
func (o *ShowbackRulesCreateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this showback rules create bad request response has a 5xx status code
func (o *ShowbackRulesCreateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this showback rules create bad request response a status code equal to that given
func (o *ShowbackRulesCreateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the showback rules create bad request response
func (o *ShowbackRulesCreateBadRequest) Code() int {
	return 400
}

func (o *ShowbackRulesCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/create][%d] showbackRulesCreateBadRequest  %+v", 400, o.Payload)
}

func (o *ShowbackRulesCreateBadRequest) String() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/create][%d] showbackRulesCreateBadRequest  %+v", 400, o.Payload)
}

func (o *ShowbackRulesCreateBadRequest) GetPayload() *models.ValidationProblemDetails {
	return o.Payload
}

func (o *ShowbackRulesCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackRulesCreateUnauthorized creates a ShowbackRulesCreateUnauthorized with default headers values
func NewShowbackRulesCreateUnauthorized() *ShowbackRulesCreateUnauthorized {
	return &ShowbackRulesCreateUnauthorized{}
}

/*
ShowbackRulesCreateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ShowbackRulesCreateUnauthorized struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this showback rules create unauthorized response has a 2xx status code
func (o *ShowbackRulesCreateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this showback rules create unauthorized response has a 3xx status code
func (o *ShowbackRulesCreateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback rules create unauthorized response has a 4xx status code
func (o *ShowbackRulesCreateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this showback rules create unauthorized response has a 5xx status code
func (o *ShowbackRulesCreateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this showback rules create unauthorized response a status code equal to that given
func (o *ShowbackRulesCreateUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the showback rules create unauthorized response
func (o *ShowbackRulesCreateUnauthorized) Code() int {
	return 401
}

func (o *ShowbackRulesCreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/create][%d] showbackRulesCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *ShowbackRulesCreateUnauthorized) String() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/create][%d] showbackRulesCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *ShowbackRulesCreateUnauthorized) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ShowbackRulesCreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackRulesCreateForbidden creates a ShowbackRulesCreateForbidden with default headers values
func NewShowbackRulesCreateForbidden() *ShowbackRulesCreateForbidden {
	return &ShowbackRulesCreateForbidden{}
}

/*
ShowbackRulesCreateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ShowbackRulesCreateForbidden struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this showback rules create forbidden response has a 2xx status code
func (o *ShowbackRulesCreateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this showback rules create forbidden response has a 3xx status code
func (o *ShowbackRulesCreateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback rules create forbidden response has a 4xx status code
func (o *ShowbackRulesCreateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this showback rules create forbidden response has a 5xx status code
func (o *ShowbackRulesCreateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this showback rules create forbidden response a status code equal to that given
func (o *ShowbackRulesCreateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the showback rules create forbidden response
func (o *ShowbackRulesCreateForbidden) Code() int {
	return 403
}

func (o *ShowbackRulesCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/create][%d] showbackRulesCreateForbidden  %+v", 403, o.Payload)
}

func (o *ShowbackRulesCreateForbidden) String() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/create][%d] showbackRulesCreateForbidden  %+v", 403, o.Payload)
}

func (o *ShowbackRulesCreateForbidden) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ShowbackRulesCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackRulesCreateNotFound creates a ShowbackRulesCreateNotFound with default headers values
func NewShowbackRulesCreateNotFound() *ShowbackRulesCreateNotFound {
	return &ShowbackRulesCreateNotFound{}
}

/*
ShowbackRulesCreateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ShowbackRulesCreateNotFound struct {
	Payload *models.ProblemDetails
}

// IsSuccess returns true when this showback rules create not found response has a 2xx status code
func (o *ShowbackRulesCreateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this showback rules create not found response has a 3xx status code
func (o *ShowbackRulesCreateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback rules create not found response has a 4xx status code
func (o *ShowbackRulesCreateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this showback rules create not found response has a 5xx status code
func (o *ShowbackRulesCreateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this showback rules create not found response a status code equal to that given
func (o *ShowbackRulesCreateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the showback rules create not found response
func (o *ShowbackRulesCreateNotFound) Code() int {
	return 404
}

func (o *ShowbackRulesCreateNotFound) Error() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/create][%d] showbackRulesCreateNotFound  %+v", 404, o.Payload)
}

func (o *ShowbackRulesCreateNotFound) String() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/create][%d] showbackRulesCreateNotFound  %+v", 404, o.Payload)
}

func (o *ShowbackRulesCreateNotFound) GetPayload() *models.ProblemDetails {
	return o.Payload
}

func (o *ShowbackRulesCreateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProblemDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackRulesCreateInternalServerError creates a ShowbackRulesCreateInternalServerError with default headers values
func NewShowbackRulesCreateInternalServerError() *ShowbackRulesCreateInternalServerError {
	return &ShowbackRulesCreateInternalServerError{}
}

/*
ShowbackRulesCreateInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ShowbackRulesCreateInternalServerError struct {
}

// IsSuccess returns true when this showback rules create internal server error response has a 2xx status code
func (o *ShowbackRulesCreateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this showback rules create internal server error response has a 3xx status code
func (o *ShowbackRulesCreateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback rules create internal server error response has a 4xx status code
func (o *ShowbackRulesCreateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this showback rules create internal server error response has a 5xx status code
func (o *ShowbackRulesCreateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this showback rules create internal server error response a status code equal to that given
func (o *ShowbackRulesCreateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the showback rules create internal server error response
func (o *ShowbackRulesCreateInternalServerError) Code() int {
	return 500
}

func (o *ShowbackRulesCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/create][%d] showbackRulesCreateInternalServerError ", 500)
}

func (o *ShowbackRulesCreateInternalServerError) String() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/create][%d] showbackRulesCreateInternalServerError ", 500)
}

func (o *ShowbackRulesCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
