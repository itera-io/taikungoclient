// Code generated by go-swagger; DO NOT EDIT.

package showback_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ShowbackRulesListReader is a Reader for the ShowbackRulesList structure.
type ShowbackRulesListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ShowbackRulesListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewShowbackRulesListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewShowbackRulesListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewShowbackRulesListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewShowbackRulesListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewShowbackRulesListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewShowbackRulesListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewShowbackRulesListOK creates a ShowbackRulesListOK with default headers values
func NewShowbackRulesListOK() *ShowbackRulesListOK {
	return &ShowbackRulesListOK{}
}

/*
ShowbackRulesListOK describes a response with status code 200, with default header values.

Success
*/
type ShowbackRulesListOK struct {
	Payload *ShowbackRulesListOKBody
}

// IsSuccess returns true when this showback rules list o k response has a 2xx status code
func (o *ShowbackRulesListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this showback rules list o k response has a 3xx status code
func (o *ShowbackRulesListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback rules list o k response has a 4xx status code
func (o *ShowbackRulesListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this showback rules list o k response has a 5xx status code
func (o *ShowbackRulesListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this showback rules list o k response a status code equal to that given
func (o *ShowbackRulesListOK) IsCode(code int) bool {
	return code == 200
}

func (o *ShowbackRulesListOK) Error() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackRules][%d] showbackRulesListOK  %+v", 200, o.Payload)
}

func (o *ShowbackRulesListOK) String() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackRules][%d] showbackRulesListOK  %+v", 200, o.Payload)
}

func (o *ShowbackRulesListOK) GetPayload() *ShowbackRulesListOKBody {
	return o.Payload
}

func (o *ShowbackRulesListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ShowbackRulesListOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackRulesListBadRequest creates a ShowbackRulesListBadRequest with default headers values
func NewShowbackRulesListBadRequest() *ShowbackRulesListBadRequest {
	return &ShowbackRulesListBadRequest{}
}

/*
ShowbackRulesListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ShowbackRulesListBadRequest struct {
	Payload *ShowbackRulesListBadRequestBody
}

// IsSuccess returns true when this showback rules list bad request response has a 2xx status code
func (o *ShowbackRulesListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this showback rules list bad request response has a 3xx status code
func (o *ShowbackRulesListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback rules list bad request response has a 4xx status code
func (o *ShowbackRulesListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this showback rules list bad request response has a 5xx status code
func (o *ShowbackRulesListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this showback rules list bad request response a status code equal to that given
func (o *ShowbackRulesListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ShowbackRulesListBadRequest) Error() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackRules][%d] showbackRulesListBadRequest  %+v", 400, o.Payload)
}

func (o *ShowbackRulesListBadRequest) String() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackRules][%d] showbackRulesListBadRequest  %+v", 400, o.Payload)
}

func (o *ShowbackRulesListBadRequest) GetPayload() *ShowbackRulesListBadRequestBody {
	return o.Payload
}

func (o *ShowbackRulesListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ShowbackRulesListBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackRulesListUnauthorized creates a ShowbackRulesListUnauthorized with default headers values
func NewShowbackRulesListUnauthorized() *ShowbackRulesListUnauthorized {
	return &ShowbackRulesListUnauthorized{}
}

/*
ShowbackRulesListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ShowbackRulesListUnauthorized struct {
	Payload *ShowbackRulesListUnauthorizedBody
}

// IsSuccess returns true when this showback rules list unauthorized response has a 2xx status code
func (o *ShowbackRulesListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this showback rules list unauthorized response has a 3xx status code
func (o *ShowbackRulesListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback rules list unauthorized response has a 4xx status code
func (o *ShowbackRulesListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this showback rules list unauthorized response has a 5xx status code
func (o *ShowbackRulesListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this showback rules list unauthorized response a status code equal to that given
func (o *ShowbackRulesListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ShowbackRulesListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackRules][%d] showbackRulesListUnauthorized  %+v", 401, o.Payload)
}

func (o *ShowbackRulesListUnauthorized) String() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackRules][%d] showbackRulesListUnauthorized  %+v", 401, o.Payload)
}

func (o *ShowbackRulesListUnauthorized) GetPayload() *ShowbackRulesListUnauthorizedBody {
	return o.Payload
}

func (o *ShowbackRulesListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ShowbackRulesListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackRulesListForbidden creates a ShowbackRulesListForbidden with default headers values
func NewShowbackRulesListForbidden() *ShowbackRulesListForbidden {
	return &ShowbackRulesListForbidden{}
}

/*
ShowbackRulesListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ShowbackRulesListForbidden struct {
	Payload *ShowbackRulesListForbiddenBody
}

// IsSuccess returns true when this showback rules list forbidden response has a 2xx status code
func (o *ShowbackRulesListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this showback rules list forbidden response has a 3xx status code
func (o *ShowbackRulesListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback rules list forbidden response has a 4xx status code
func (o *ShowbackRulesListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this showback rules list forbidden response has a 5xx status code
func (o *ShowbackRulesListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this showback rules list forbidden response a status code equal to that given
func (o *ShowbackRulesListForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ShowbackRulesListForbidden) Error() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackRules][%d] showbackRulesListForbidden  %+v", 403, o.Payload)
}

func (o *ShowbackRulesListForbidden) String() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackRules][%d] showbackRulesListForbidden  %+v", 403, o.Payload)
}

func (o *ShowbackRulesListForbidden) GetPayload() *ShowbackRulesListForbiddenBody {
	return o.Payload
}

func (o *ShowbackRulesListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ShowbackRulesListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackRulesListNotFound creates a ShowbackRulesListNotFound with default headers values
func NewShowbackRulesListNotFound() *ShowbackRulesListNotFound {
	return &ShowbackRulesListNotFound{}
}

/*
ShowbackRulesListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ShowbackRulesListNotFound struct {
	Payload *ShowbackRulesListNotFoundBody
}

// IsSuccess returns true when this showback rules list not found response has a 2xx status code
func (o *ShowbackRulesListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this showback rules list not found response has a 3xx status code
func (o *ShowbackRulesListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback rules list not found response has a 4xx status code
func (o *ShowbackRulesListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this showback rules list not found response has a 5xx status code
func (o *ShowbackRulesListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this showback rules list not found response a status code equal to that given
func (o *ShowbackRulesListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ShowbackRulesListNotFound) Error() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackRules][%d] showbackRulesListNotFound  %+v", 404, o.Payload)
}

func (o *ShowbackRulesListNotFound) String() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackRules][%d] showbackRulesListNotFound  %+v", 404, o.Payload)
}

func (o *ShowbackRulesListNotFound) GetPayload() *ShowbackRulesListNotFoundBody {
	return o.Payload
}

func (o *ShowbackRulesListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ShowbackRulesListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackRulesListInternalServerError creates a ShowbackRulesListInternalServerError with default headers values
func NewShowbackRulesListInternalServerError() *ShowbackRulesListInternalServerError {
	return &ShowbackRulesListInternalServerError{}
}

/*
ShowbackRulesListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ShowbackRulesListInternalServerError struct {
}

// IsSuccess returns true when this showback rules list internal server error response has a 2xx status code
func (o *ShowbackRulesListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this showback rules list internal server error response has a 3xx status code
func (o *ShowbackRulesListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback rules list internal server error response has a 4xx status code
func (o *ShowbackRulesListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this showback rules list internal server error response has a 5xx status code
func (o *ShowbackRulesListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this showback rules list internal server error response a status code equal to that given
func (o *ShowbackRulesListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ShowbackRulesListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackRules][%d] showbackRulesListInternalServerError ", 500)
}

func (o *ShowbackRulesListInternalServerError) String() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackRules][%d] showbackRulesListInternalServerError ", 500)
}

func (o *ShowbackRulesListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
ShowbackRulesListBadRequestBody showback rules list bad request body
swagger:model ShowbackRulesListBadRequestBody
*/
type ShowbackRulesListBadRequestBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this showback rules list bad request body
func (o *ShowbackRulesListBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this showback rules list bad request body based on context it is used
func (o *ShowbackRulesListBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ShowbackRulesListBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShowbackRulesListBadRequestBody) UnmarshalBinary(b []byte) error {
	var res ShowbackRulesListBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ShowbackRulesListForbiddenBody showback rules list forbidden body
swagger:model ShowbackRulesListForbiddenBody
*/
type ShowbackRulesListForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this showback rules list forbidden body
func (o *ShowbackRulesListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this showback rules list forbidden body based on context it is used
func (o *ShowbackRulesListForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ShowbackRulesListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShowbackRulesListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res ShowbackRulesListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ShowbackRulesListNotFoundBody showback rules list not found body
swagger:model ShowbackRulesListNotFoundBody
*/
type ShowbackRulesListNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this showback rules list not found body
func (o *ShowbackRulesListNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this showback rules list not found body based on context it is used
func (o *ShowbackRulesListNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ShowbackRulesListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShowbackRulesListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ShowbackRulesListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ShowbackRulesListOKBody showback rules list o k body
swagger:model ShowbackRulesListOKBody
*/
type ShowbackRulesListOKBody struct {

	// data
	Data []*ShowbackRulesListOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this showback rules list o k body
func (o *ShowbackRulesListOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ShowbackRulesListOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("showbackRulesListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("showbackRulesListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this showback rules list o k body based on the context it is used
func (o *ShowbackRulesListOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ShowbackRulesListOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("showbackRulesListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("showbackRulesListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ShowbackRulesListOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShowbackRulesListOKBody) UnmarshalBinary(b []byte) error {
	var res ShowbackRulesListOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ShowbackRulesListOKBodyDataItems0 showback rules list o k body data items0
swagger:model ShowbackRulesListOKBodyDataItems0
*/
type ShowbackRulesListOKBodyDataItems0 struct {

	// billing start date
	BillingStartDate string `json:"billingStartDate,omitempty"`

	// by label
	ByLabel string `json:"byLabel,omitempty"`

	// created at
	CreatedAt string `json:"createdAt,omitempty"`

	// created by
	CreatedBy string `json:"createdBy,omitempty"`

	// global alert limit
	GlobalAlertLimit int32 `json:"globalAlertLimit,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// kind
	Kind string `json:"kind,omitempty"`

	// labels
	Labels []*ShowbackRulesListOKBodyDataItems0LabelsItems0 `json:"labels"`

	// last modified
	LastModified string `json:"lastModified,omitempty"`

	// last modified by
	LastModifiedBy string `json:"lastModifiedBy,omitempty"`

	// metric name
	MetricName string `json:"metricName,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// organization name
	OrganizationName string `json:"organizationName,omitempty"`

	// price
	Price float64 `json:"price,omitempty"`

	// project alert limit
	ProjectAlertLimit int32 `json:"projectAlertLimit,omitempty"`

	// showback credential Id
	ShowbackCredentialID *int32 `json:"showbackCredentialId,omitempty"`

	// showback credential name
	ShowbackCredentialName string `json:"showbackCredentialName,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this showback rules list o k body data items0
func (o *ShowbackRulesListOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ShowbackRulesListOKBodyDataItems0) validateLabels(formats strfmt.Registry) error {
	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	for i := 0; i < len(o.Labels); i++ {
		if swag.IsZero(o.Labels[i]) { // not required
			continue
		}

		if o.Labels[i] != nil {
			if err := o.Labels[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("labels" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("labels" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this showback rules list o k body data items0 based on the context it is used
func (o *ShowbackRulesListOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateLabels(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ShowbackRulesListOKBodyDataItems0) contextValidateLabels(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Labels); i++ {

		if o.Labels[i] != nil {
			if err := o.Labels[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("labels" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("labels" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ShowbackRulesListOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShowbackRulesListOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res ShowbackRulesListOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ShowbackRulesListOKBodyDataItems0LabelsItems0 showback rules list o k body data items0 labels items0
swagger:model ShowbackRulesListOKBodyDataItems0LabelsItems0
*/
type ShowbackRulesListOKBodyDataItems0LabelsItems0 struct {

	// label
	Label string `json:"label,omitempty"`

	// value
	Value string `json:"value,omitempty"`
}

// Validate validates this showback rules list o k body data items0 labels items0
func (o *ShowbackRulesListOKBodyDataItems0LabelsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this showback rules list o k body data items0 labels items0 based on context it is used
func (o *ShowbackRulesListOKBodyDataItems0LabelsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ShowbackRulesListOKBodyDataItems0LabelsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShowbackRulesListOKBodyDataItems0LabelsItems0) UnmarshalBinary(b []byte) error {
	var res ShowbackRulesListOKBodyDataItems0LabelsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ShowbackRulesListUnauthorizedBody showback rules list unauthorized body
swagger:model ShowbackRulesListUnauthorizedBody
*/
type ShowbackRulesListUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this showback rules list unauthorized body
func (o *ShowbackRulesListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this showback rules list unauthorized body based on context it is used
func (o *ShowbackRulesListUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ShowbackRulesListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShowbackRulesListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res ShowbackRulesListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
