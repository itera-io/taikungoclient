// Code generated by go-swagger; DO NOT EDIT.

package showback_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ShowbackRulesDeleteAllReader is a Reader for the ShowbackRulesDeleteAll structure.
type ShowbackRulesDeleteAllReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ShowbackRulesDeleteAllReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewShowbackRulesDeleteAllOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewShowbackRulesDeleteAllBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewShowbackRulesDeleteAllUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewShowbackRulesDeleteAllForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewShowbackRulesDeleteAllNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewShowbackRulesDeleteAllInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewShowbackRulesDeleteAllOK creates a ShowbackRulesDeleteAllOK with default headers values
func NewShowbackRulesDeleteAllOK() *ShowbackRulesDeleteAllOK {
	return &ShowbackRulesDeleteAllOK{}
}

/*
ShowbackRulesDeleteAllOK describes a response with status code 200, with default header values.

Success
*/
type ShowbackRulesDeleteAllOK struct {
	Payload interface{}
}

// IsSuccess returns true when this showback rules delete all o k response has a 2xx status code
func (o *ShowbackRulesDeleteAllOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this showback rules delete all o k response has a 3xx status code
func (o *ShowbackRulesDeleteAllOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback rules delete all o k response has a 4xx status code
func (o *ShowbackRulesDeleteAllOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this showback rules delete all o k response has a 5xx status code
func (o *ShowbackRulesDeleteAllOK) IsServerError() bool {
	return false
}

// IsCode returns true when this showback rules delete all o k response a status code equal to that given
func (o *ShowbackRulesDeleteAllOK) IsCode(code int) bool {
	return code == 200
}

func (o *ShowbackRulesDeleteAllOK) Error() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/delete][%d] showbackRulesDeleteAllOK  %+v", 200, o.Payload)
}

func (o *ShowbackRulesDeleteAllOK) String() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/delete][%d] showbackRulesDeleteAllOK  %+v", 200, o.Payload)
}

func (o *ShowbackRulesDeleteAllOK) GetPayload() interface{} {
	return o.Payload
}

func (o *ShowbackRulesDeleteAllOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackRulesDeleteAllBadRequest creates a ShowbackRulesDeleteAllBadRequest with default headers values
func NewShowbackRulesDeleteAllBadRequest() *ShowbackRulesDeleteAllBadRequest {
	return &ShowbackRulesDeleteAllBadRequest{}
}

/*
ShowbackRulesDeleteAllBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ShowbackRulesDeleteAllBadRequest struct {
	Payload *ShowbackRulesDeleteAllBadRequestBody
}

// IsSuccess returns true when this showback rules delete all bad request response has a 2xx status code
func (o *ShowbackRulesDeleteAllBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this showback rules delete all bad request response has a 3xx status code
func (o *ShowbackRulesDeleteAllBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback rules delete all bad request response has a 4xx status code
func (o *ShowbackRulesDeleteAllBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this showback rules delete all bad request response has a 5xx status code
func (o *ShowbackRulesDeleteAllBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this showback rules delete all bad request response a status code equal to that given
func (o *ShowbackRulesDeleteAllBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ShowbackRulesDeleteAllBadRequest) Error() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/delete][%d] showbackRulesDeleteAllBadRequest  %+v", 400, o.Payload)
}

func (o *ShowbackRulesDeleteAllBadRequest) String() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/delete][%d] showbackRulesDeleteAllBadRequest  %+v", 400, o.Payload)
}

func (o *ShowbackRulesDeleteAllBadRequest) GetPayload() *ShowbackRulesDeleteAllBadRequestBody {
	return o.Payload
}

func (o *ShowbackRulesDeleteAllBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ShowbackRulesDeleteAllBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackRulesDeleteAllUnauthorized creates a ShowbackRulesDeleteAllUnauthorized with default headers values
func NewShowbackRulesDeleteAllUnauthorized() *ShowbackRulesDeleteAllUnauthorized {
	return &ShowbackRulesDeleteAllUnauthorized{}
}

/*
ShowbackRulesDeleteAllUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ShowbackRulesDeleteAllUnauthorized struct {
	Payload *ShowbackRulesDeleteAllUnauthorizedBody
}

// IsSuccess returns true when this showback rules delete all unauthorized response has a 2xx status code
func (o *ShowbackRulesDeleteAllUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this showback rules delete all unauthorized response has a 3xx status code
func (o *ShowbackRulesDeleteAllUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback rules delete all unauthorized response has a 4xx status code
func (o *ShowbackRulesDeleteAllUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this showback rules delete all unauthorized response has a 5xx status code
func (o *ShowbackRulesDeleteAllUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this showback rules delete all unauthorized response a status code equal to that given
func (o *ShowbackRulesDeleteAllUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ShowbackRulesDeleteAllUnauthorized) Error() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/delete][%d] showbackRulesDeleteAllUnauthorized  %+v", 401, o.Payload)
}

func (o *ShowbackRulesDeleteAllUnauthorized) String() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/delete][%d] showbackRulesDeleteAllUnauthorized  %+v", 401, o.Payload)
}

func (o *ShowbackRulesDeleteAllUnauthorized) GetPayload() *ShowbackRulesDeleteAllUnauthorizedBody {
	return o.Payload
}

func (o *ShowbackRulesDeleteAllUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ShowbackRulesDeleteAllUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackRulesDeleteAllForbidden creates a ShowbackRulesDeleteAllForbidden with default headers values
func NewShowbackRulesDeleteAllForbidden() *ShowbackRulesDeleteAllForbidden {
	return &ShowbackRulesDeleteAllForbidden{}
}

/*
ShowbackRulesDeleteAllForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ShowbackRulesDeleteAllForbidden struct {
	Payload *ShowbackRulesDeleteAllForbiddenBody
}

// IsSuccess returns true when this showback rules delete all forbidden response has a 2xx status code
func (o *ShowbackRulesDeleteAllForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this showback rules delete all forbidden response has a 3xx status code
func (o *ShowbackRulesDeleteAllForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback rules delete all forbidden response has a 4xx status code
func (o *ShowbackRulesDeleteAllForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this showback rules delete all forbidden response has a 5xx status code
func (o *ShowbackRulesDeleteAllForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this showback rules delete all forbidden response a status code equal to that given
func (o *ShowbackRulesDeleteAllForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ShowbackRulesDeleteAllForbidden) Error() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/delete][%d] showbackRulesDeleteAllForbidden  %+v", 403, o.Payload)
}

func (o *ShowbackRulesDeleteAllForbidden) String() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/delete][%d] showbackRulesDeleteAllForbidden  %+v", 403, o.Payload)
}

func (o *ShowbackRulesDeleteAllForbidden) GetPayload() *ShowbackRulesDeleteAllForbiddenBody {
	return o.Payload
}

func (o *ShowbackRulesDeleteAllForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ShowbackRulesDeleteAllForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackRulesDeleteAllNotFound creates a ShowbackRulesDeleteAllNotFound with default headers values
func NewShowbackRulesDeleteAllNotFound() *ShowbackRulesDeleteAllNotFound {
	return &ShowbackRulesDeleteAllNotFound{}
}

/*
ShowbackRulesDeleteAllNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ShowbackRulesDeleteAllNotFound struct {
	Payload *ShowbackRulesDeleteAllNotFoundBody
}

// IsSuccess returns true when this showback rules delete all not found response has a 2xx status code
func (o *ShowbackRulesDeleteAllNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this showback rules delete all not found response has a 3xx status code
func (o *ShowbackRulesDeleteAllNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback rules delete all not found response has a 4xx status code
func (o *ShowbackRulesDeleteAllNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this showback rules delete all not found response has a 5xx status code
func (o *ShowbackRulesDeleteAllNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this showback rules delete all not found response a status code equal to that given
func (o *ShowbackRulesDeleteAllNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ShowbackRulesDeleteAllNotFound) Error() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/delete][%d] showbackRulesDeleteAllNotFound  %+v", 404, o.Payload)
}

func (o *ShowbackRulesDeleteAllNotFound) String() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/delete][%d] showbackRulesDeleteAllNotFound  %+v", 404, o.Payload)
}

func (o *ShowbackRulesDeleteAllNotFound) GetPayload() *ShowbackRulesDeleteAllNotFoundBody {
	return o.Payload
}

func (o *ShowbackRulesDeleteAllNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ShowbackRulesDeleteAllNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackRulesDeleteAllInternalServerError creates a ShowbackRulesDeleteAllInternalServerError with default headers values
func NewShowbackRulesDeleteAllInternalServerError() *ShowbackRulesDeleteAllInternalServerError {
	return &ShowbackRulesDeleteAllInternalServerError{}
}

/*
ShowbackRulesDeleteAllInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ShowbackRulesDeleteAllInternalServerError struct {
}

// IsSuccess returns true when this showback rules delete all internal server error response has a 2xx status code
func (o *ShowbackRulesDeleteAllInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this showback rules delete all internal server error response has a 3xx status code
func (o *ShowbackRulesDeleteAllInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback rules delete all internal server error response has a 4xx status code
func (o *ShowbackRulesDeleteAllInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this showback rules delete all internal server error response has a 5xx status code
func (o *ShowbackRulesDeleteAllInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this showback rules delete all internal server error response a status code equal to that given
func (o *ShowbackRulesDeleteAllInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ShowbackRulesDeleteAllInternalServerError) Error() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/delete][%d] showbackRulesDeleteAllInternalServerError ", 500)
}

func (o *ShowbackRulesDeleteAllInternalServerError) String() string {
	return fmt.Sprintf("[POST /showback/v{v}/ShowbackRules/delete][%d] showbackRulesDeleteAllInternalServerError ", 500)
}

func (o *ShowbackRulesDeleteAllInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
ShowbackRulesDeleteAllBadRequestBody showback rules delete all bad request body
swagger:model ShowbackRulesDeleteAllBadRequestBody
*/
type ShowbackRulesDeleteAllBadRequestBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// errors
	// Read Only: true
	Errors map[string][]string `json:"errors,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this showback rules delete all bad request body
func (o *ShowbackRulesDeleteAllBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this showback rules delete all bad request body based on the context it is used
func (o *ShowbackRulesDeleteAllBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateErrors(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ShowbackRulesDeleteAllBadRequestBody) contextValidateErrors(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (o *ShowbackRulesDeleteAllBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShowbackRulesDeleteAllBadRequestBody) UnmarshalBinary(b []byte) error {
	var res ShowbackRulesDeleteAllBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ShowbackRulesDeleteAllBody showback rules delete all body
swagger:model ShowbackRulesDeleteAllBody
*/
type ShowbackRulesDeleteAllBody struct {

	// ids
	Ids []int32 `json:"ids"`
}

// Validate validates this showback rules delete all body
func (o *ShowbackRulesDeleteAllBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this showback rules delete all body based on context it is used
func (o *ShowbackRulesDeleteAllBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ShowbackRulesDeleteAllBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShowbackRulesDeleteAllBody) UnmarshalBinary(b []byte) error {
	var res ShowbackRulesDeleteAllBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ShowbackRulesDeleteAllForbiddenBody showback rules delete all forbidden body
swagger:model ShowbackRulesDeleteAllForbiddenBody
*/
type ShowbackRulesDeleteAllForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this showback rules delete all forbidden body
func (o *ShowbackRulesDeleteAllForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this showback rules delete all forbidden body based on context it is used
func (o *ShowbackRulesDeleteAllForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ShowbackRulesDeleteAllForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShowbackRulesDeleteAllForbiddenBody) UnmarshalBinary(b []byte) error {
	var res ShowbackRulesDeleteAllForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ShowbackRulesDeleteAllNotFoundBody showback rules delete all not found body
swagger:model ShowbackRulesDeleteAllNotFoundBody
*/
type ShowbackRulesDeleteAllNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this showback rules delete all not found body
func (o *ShowbackRulesDeleteAllNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this showback rules delete all not found body based on context it is used
func (o *ShowbackRulesDeleteAllNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ShowbackRulesDeleteAllNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShowbackRulesDeleteAllNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ShowbackRulesDeleteAllNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ShowbackRulesDeleteAllUnauthorizedBody showback rules delete all unauthorized body
swagger:model ShowbackRulesDeleteAllUnauthorizedBody
*/
type ShowbackRulesDeleteAllUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this showback rules delete all unauthorized body
func (o *ShowbackRulesDeleteAllUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this showback rules delete all unauthorized body based on context it is used
func (o *ShowbackRulesDeleteAllUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ShowbackRulesDeleteAllUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShowbackRulesDeleteAllUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res ShowbackRulesDeleteAllUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
