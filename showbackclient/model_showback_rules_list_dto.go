/*
Taikun - Showback API

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikunshowback

import (
	"encoding/json"
)

// checks if the ShowbackRulesListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShowbackRulesListDto{}

// ShowbackRulesListDto struct for ShowbackRulesListDto
type ShowbackRulesListDto struct {
	Id                     *int32                   `json:"id,omitempty"`
	Name                   NullableString           `json:"name,omitempty"`
	ByLabel                NullableString           `json:"byLabel,omitempty"`
	MetricName             NullableString           `json:"metricName,omitempty"`
	CreatedAt              NullableString           `json:"createdAt,omitempty"`
	Kind                   NullableString           `json:"kind,omitempty"`
	Type                   NullableString           `json:"type,omitempty"`
	Price                  *float64                 `json:"price,omitempty"`
	ProjectAlertLimit      *int32                   `json:"projectAlertLimit,omitempty"`
	GlobalAlertLimit       *int32                   `json:"globalAlertLimit,omitempty"`
	OrganizationName       NullableString           `json:"organizationName,omitempty"`
	OrganizationId         *int32                   `json:"organizationId,omitempty"`
	BillingStartDate       NullableString           `json:"billingStartDate,omitempty"`
	Labels                 []ShowbackLabelCreateDto `json:"labels,omitempty"`
	ShowbackCredentialName NullableString           `json:"showbackCredentialName,omitempty"`
	ShowbackCredentialId   NullableInt32            `json:"showbackCredentialId,omitempty"`
	CreatedBy              NullableString           `json:"createdBy,omitempty"`
	LastModified           NullableString           `json:"lastModified,omitempty"`
	LastModifiedBy         NullableString           `json:"lastModifiedBy,omitempty"`
}

// NewShowbackRulesListDto instantiates a new ShowbackRulesListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShowbackRulesListDto() *ShowbackRulesListDto {
	this := ShowbackRulesListDto{}
	return &this
}

// NewShowbackRulesListDtoWithDefaults instantiates a new ShowbackRulesListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShowbackRulesListDtoWithDefaults() *ShowbackRulesListDto {
	this := ShowbackRulesListDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ShowbackRulesListDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShowbackRulesListDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ShowbackRulesListDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ShowbackRulesListDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShowbackRulesListDto) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShowbackRulesListDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ShowbackRulesListDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ShowbackRulesListDto) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *ShowbackRulesListDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ShowbackRulesListDto) UnsetName() {
	o.Name.Unset()
}

// GetByLabel returns the ByLabel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShowbackRulesListDto) GetByLabel() string {
	if o == nil || IsNil(o.ByLabel.Get()) {
		var ret string
		return ret
	}
	return *o.ByLabel.Get()
}

// GetByLabelOk returns a tuple with the ByLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShowbackRulesListDto) GetByLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ByLabel.Get(), o.ByLabel.IsSet()
}

// HasByLabel returns a boolean if a field has been set.
func (o *ShowbackRulesListDto) HasByLabel() bool {
	if o != nil && o.ByLabel.IsSet() {
		return true
	}

	return false
}

// SetByLabel gets a reference to the given NullableString and assigns it to the ByLabel field.
func (o *ShowbackRulesListDto) SetByLabel(v string) {
	o.ByLabel.Set(&v)
}

// SetByLabelNil sets the value for ByLabel to be an explicit nil
func (o *ShowbackRulesListDto) SetByLabelNil() {
	o.ByLabel.Set(nil)
}

// UnsetByLabel ensures that no value is present for ByLabel, not even an explicit nil
func (o *ShowbackRulesListDto) UnsetByLabel() {
	o.ByLabel.Unset()
}

// GetMetricName returns the MetricName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShowbackRulesListDto) GetMetricName() string {
	if o == nil || IsNil(o.MetricName.Get()) {
		var ret string
		return ret
	}
	return *o.MetricName.Get()
}

// GetMetricNameOk returns a tuple with the MetricName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShowbackRulesListDto) GetMetricNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetricName.Get(), o.MetricName.IsSet()
}

// HasMetricName returns a boolean if a field has been set.
func (o *ShowbackRulesListDto) HasMetricName() bool {
	if o != nil && o.MetricName.IsSet() {
		return true
	}

	return false
}

// SetMetricName gets a reference to the given NullableString and assigns it to the MetricName field.
func (o *ShowbackRulesListDto) SetMetricName(v string) {
	o.MetricName.Set(&v)
}

// SetMetricNameNil sets the value for MetricName to be an explicit nil
func (o *ShowbackRulesListDto) SetMetricNameNil() {
	o.MetricName.Set(nil)
}

// UnsetMetricName ensures that no value is present for MetricName, not even an explicit nil
func (o *ShowbackRulesListDto) UnsetMetricName() {
	o.MetricName.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShowbackRulesListDto) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShowbackRulesListDto) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ShowbackRulesListDto) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableString and assigns it to the CreatedAt field.
func (o *ShowbackRulesListDto) SetCreatedAt(v string) {
	o.CreatedAt.Set(&v)
}

// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *ShowbackRulesListDto) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *ShowbackRulesListDto) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetKind returns the Kind field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShowbackRulesListDto) GetKind() string {
	if o == nil || IsNil(o.Kind.Get()) {
		var ret string
		return ret
	}
	return *o.Kind.Get()
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShowbackRulesListDto) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Kind.Get(), o.Kind.IsSet()
}

// HasKind returns a boolean if a field has been set.
func (o *ShowbackRulesListDto) HasKind() bool {
	if o != nil && o.Kind.IsSet() {
		return true
	}

	return false
}

// SetKind gets a reference to the given NullableString and assigns it to the Kind field.
func (o *ShowbackRulesListDto) SetKind(v string) {
	o.Kind.Set(&v)
}

// SetKindNil sets the value for Kind to be an explicit nil
func (o *ShowbackRulesListDto) SetKindNil() {
	o.Kind.Set(nil)
}

// UnsetKind ensures that no value is present for Kind, not even an explicit nil
func (o *ShowbackRulesListDto) UnsetKind() {
	o.Kind.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShowbackRulesListDto) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShowbackRulesListDto) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *ShowbackRulesListDto) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *ShowbackRulesListDto) SetType(v string) {
	o.Type.Set(&v)
}

// SetTypeNil sets the value for Type to be an explicit nil
func (o *ShowbackRulesListDto) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *ShowbackRulesListDto) UnsetType() {
	o.Type.Unset()
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ShowbackRulesListDto) GetPrice() float64 {
	if o == nil || IsNil(o.Price) {
		var ret float64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShowbackRulesListDto) GetPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ShowbackRulesListDto) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float64 and assigns it to the Price field.
func (o *ShowbackRulesListDto) SetPrice(v float64) {
	o.Price = &v
}

// GetProjectAlertLimit returns the ProjectAlertLimit field value if set, zero value otherwise.
func (o *ShowbackRulesListDto) GetProjectAlertLimit() int32 {
	if o == nil || IsNil(o.ProjectAlertLimit) {
		var ret int32
		return ret
	}
	return *o.ProjectAlertLimit
}

// GetProjectAlertLimitOk returns a tuple with the ProjectAlertLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShowbackRulesListDto) GetProjectAlertLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectAlertLimit) {
		return nil, false
	}
	return o.ProjectAlertLimit, true
}

// HasProjectAlertLimit returns a boolean if a field has been set.
func (o *ShowbackRulesListDto) HasProjectAlertLimit() bool {
	if o != nil && !IsNil(o.ProjectAlertLimit) {
		return true
	}

	return false
}

// SetProjectAlertLimit gets a reference to the given int32 and assigns it to the ProjectAlertLimit field.
func (o *ShowbackRulesListDto) SetProjectAlertLimit(v int32) {
	o.ProjectAlertLimit = &v
}

// GetGlobalAlertLimit returns the GlobalAlertLimit field value if set, zero value otherwise.
func (o *ShowbackRulesListDto) GetGlobalAlertLimit() int32 {
	if o == nil || IsNil(o.GlobalAlertLimit) {
		var ret int32
		return ret
	}
	return *o.GlobalAlertLimit
}

// GetGlobalAlertLimitOk returns a tuple with the GlobalAlertLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShowbackRulesListDto) GetGlobalAlertLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.GlobalAlertLimit) {
		return nil, false
	}
	return o.GlobalAlertLimit, true
}

// HasGlobalAlertLimit returns a boolean if a field has been set.
func (o *ShowbackRulesListDto) HasGlobalAlertLimit() bool {
	if o != nil && !IsNil(o.GlobalAlertLimit) {
		return true
	}

	return false
}

// SetGlobalAlertLimit gets a reference to the given int32 and assigns it to the GlobalAlertLimit field.
func (o *ShowbackRulesListDto) SetGlobalAlertLimit(v int32) {
	o.GlobalAlertLimit = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShowbackRulesListDto) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizationName.Get()
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShowbackRulesListDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationName.Get(), o.OrganizationName.IsSet()
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *ShowbackRulesListDto) HasOrganizationName() bool {
	if o != nil && o.OrganizationName.IsSet() {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given NullableString and assigns it to the OrganizationName field.
func (o *ShowbackRulesListDto) SetOrganizationName(v string) {
	o.OrganizationName.Set(&v)
}

// SetOrganizationNameNil sets the value for OrganizationName to be an explicit nil
func (o *ShowbackRulesListDto) SetOrganizationNameNil() {
	o.OrganizationName.Set(nil)
}

// UnsetOrganizationName ensures that no value is present for OrganizationName, not even an explicit nil
func (o *ShowbackRulesListDto) UnsetOrganizationName() {
	o.OrganizationName.Unset()
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ShowbackRulesListDto) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShowbackRulesListDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ShowbackRulesListDto) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *ShowbackRulesListDto) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetBillingStartDate returns the BillingStartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShowbackRulesListDto) GetBillingStartDate() string {
	if o == nil || IsNil(o.BillingStartDate.Get()) {
		var ret string
		return ret
	}
	return *o.BillingStartDate.Get()
}

// GetBillingStartDateOk returns a tuple with the BillingStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShowbackRulesListDto) GetBillingStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingStartDate.Get(), o.BillingStartDate.IsSet()
}

// HasBillingStartDate returns a boolean if a field has been set.
func (o *ShowbackRulesListDto) HasBillingStartDate() bool {
	if o != nil && o.BillingStartDate.IsSet() {
		return true
	}

	return false
}

// SetBillingStartDate gets a reference to the given NullableString and assigns it to the BillingStartDate field.
func (o *ShowbackRulesListDto) SetBillingStartDate(v string) {
	o.BillingStartDate.Set(&v)
}

// SetBillingStartDateNil sets the value for BillingStartDate to be an explicit nil
func (o *ShowbackRulesListDto) SetBillingStartDateNil() {
	o.BillingStartDate.Set(nil)
}

// UnsetBillingStartDate ensures that no value is present for BillingStartDate, not even an explicit nil
func (o *ShowbackRulesListDto) UnsetBillingStartDate() {
	o.BillingStartDate.Unset()
}

// GetLabels returns the Labels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShowbackRulesListDto) GetLabels() []ShowbackLabelCreateDto {
	if o == nil {
		var ret []ShowbackLabelCreateDto
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShowbackRulesListDto) GetLabelsOk() ([]ShowbackLabelCreateDto, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *ShowbackRulesListDto) HasLabels() bool {
	if o != nil && IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []ShowbackLabelCreateDto and assigns it to the Labels field.
func (o *ShowbackRulesListDto) SetLabels(v []ShowbackLabelCreateDto) {
	o.Labels = v
}

// GetShowbackCredentialName returns the ShowbackCredentialName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShowbackRulesListDto) GetShowbackCredentialName() string {
	if o == nil || IsNil(o.ShowbackCredentialName.Get()) {
		var ret string
		return ret
	}
	return *o.ShowbackCredentialName.Get()
}

// GetShowbackCredentialNameOk returns a tuple with the ShowbackCredentialName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShowbackRulesListDto) GetShowbackCredentialNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShowbackCredentialName.Get(), o.ShowbackCredentialName.IsSet()
}

// HasShowbackCredentialName returns a boolean if a field has been set.
func (o *ShowbackRulesListDto) HasShowbackCredentialName() bool {
	if o != nil && o.ShowbackCredentialName.IsSet() {
		return true
	}

	return false
}

// SetShowbackCredentialName gets a reference to the given NullableString and assigns it to the ShowbackCredentialName field.
func (o *ShowbackRulesListDto) SetShowbackCredentialName(v string) {
	o.ShowbackCredentialName.Set(&v)
}

// SetShowbackCredentialNameNil sets the value for ShowbackCredentialName to be an explicit nil
func (o *ShowbackRulesListDto) SetShowbackCredentialNameNil() {
	o.ShowbackCredentialName.Set(nil)
}

// UnsetShowbackCredentialName ensures that no value is present for ShowbackCredentialName, not even an explicit nil
func (o *ShowbackRulesListDto) UnsetShowbackCredentialName() {
	o.ShowbackCredentialName.Unset()
}

// GetShowbackCredentialId returns the ShowbackCredentialId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShowbackRulesListDto) GetShowbackCredentialId() int32 {
	if o == nil || IsNil(o.ShowbackCredentialId.Get()) {
		var ret int32
		return ret
	}
	return *o.ShowbackCredentialId.Get()
}

// GetShowbackCredentialIdOk returns a tuple with the ShowbackCredentialId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShowbackRulesListDto) GetShowbackCredentialIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShowbackCredentialId.Get(), o.ShowbackCredentialId.IsSet()
}

// HasShowbackCredentialId returns a boolean if a field has been set.
func (o *ShowbackRulesListDto) HasShowbackCredentialId() bool {
	if o != nil && o.ShowbackCredentialId.IsSet() {
		return true
	}

	return false
}

// SetShowbackCredentialId gets a reference to the given NullableInt32 and assigns it to the ShowbackCredentialId field.
func (o *ShowbackRulesListDto) SetShowbackCredentialId(v int32) {
	o.ShowbackCredentialId.Set(&v)
}

// SetShowbackCredentialIdNil sets the value for ShowbackCredentialId to be an explicit nil
func (o *ShowbackRulesListDto) SetShowbackCredentialIdNil() {
	o.ShowbackCredentialId.Set(nil)
}

// UnsetShowbackCredentialId ensures that no value is present for ShowbackCredentialId, not even an explicit nil
func (o *ShowbackRulesListDto) UnsetShowbackCredentialId() {
	o.ShowbackCredentialId.Unset()
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShowbackRulesListDto) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShowbackRulesListDto) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ShowbackRulesListDto) HasCreatedBy() bool {
	if o != nil && o.CreatedBy.IsSet() {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given NullableString and assigns it to the CreatedBy field.
func (o *ShowbackRulesListDto) SetCreatedBy(v string) {
	o.CreatedBy.Set(&v)
}

// SetCreatedByNil sets the value for CreatedBy to be an explicit nil
func (o *ShowbackRulesListDto) SetCreatedByNil() {
	o.CreatedBy.Set(nil)
}

// UnsetCreatedBy ensures that no value is present for CreatedBy, not even an explicit nil
func (o *ShowbackRulesListDto) UnsetCreatedBy() {
	o.CreatedBy.Unset()
}

// GetLastModified returns the LastModified field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShowbackRulesListDto) GetLastModified() string {
	if o == nil || IsNil(o.LastModified.Get()) {
		var ret string
		return ret
	}
	return *o.LastModified.Get()
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShowbackRulesListDto) GetLastModifiedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModified.Get(), o.LastModified.IsSet()
}

// HasLastModified returns a boolean if a field has been set.
func (o *ShowbackRulesListDto) HasLastModified() bool {
	if o != nil && o.LastModified.IsSet() {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given NullableString and assigns it to the LastModified field.
func (o *ShowbackRulesListDto) SetLastModified(v string) {
	o.LastModified.Set(&v)
}

// SetLastModifiedNil sets the value for LastModified to be an explicit nil
func (o *ShowbackRulesListDto) SetLastModifiedNil() {
	o.LastModified.Set(nil)
}

// UnsetLastModified ensures that no value is present for LastModified, not even an explicit nil
func (o *ShowbackRulesListDto) UnsetLastModified() {
	o.LastModified.Unset()
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ShowbackRulesListDto) GetLastModifiedBy() string {
	if o == nil || IsNil(o.LastModifiedBy.Get()) {
		var ret string
		return ret
	}
	return *o.LastModifiedBy.Get()
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ShowbackRulesListDto) GetLastModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModifiedBy.Get(), o.LastModifiedBy.IsSet()
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *ShowbackRulesListDto) HasLastModifiedBy() bool {
	if o != nil && o.LastModifiedBy.IsSet() {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given NullableString and assigns it to the LastModifiedBy field.
func (o *ShowbackRulesListDto) SetLastModifiedBy(v string) {
	o.LastModifiedBy.Set(&v)
}

// SetLastModifiedByNil sets the value for LastModifiedBy to be an explicit nil
func (o *ShowbackRulesListDto) SetLastModifiedByNil() {
	o.LastModifiedBy.Set(nil)
}

// UnsetLastModifiedBy ensures that no value is present for LastModifiedBy, not even an explicit nil
func (o *ShowbackRulesListDto) UnsetLastModifiedBy() {
	o.LastModifiedBy.Unset()
}

func (o ShowbackRulesListDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShowbackRulesListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ByLabel.IsSet() {
		toSerialize["byLabel"] = o.ByLabel.Get()
	}
	if o.MetricName.IsSet() {
		toSerialize["metricName"] = o.MetricName.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["createdAt"] = o.CreatedAt.Get()
	}
	if o.Kind.IsSet() {
		toSerialize["kind"] = o.Kind.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.ProjectAlertLimit) {
		toSerialize["projectAlertLimit"] = o.ProjectAlertLimit
	}
	if !IsNil(o.GlobalAlertLimit) {
		toSerialize["globalAlertLimit"] = o.GlobalAlertLimit
	}
	if o.OrganizationName.IsSet() {
		toSerialize["organizationName"] = o.OrganizationName.Get()
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if o.BillingStartDate.IsSet() {
		toSerialize["billingStartDate"] = o.BillingStartDate.Get()
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.ShowbackCredentialName.IsSet() {
		toSerialize["showbackCredentialName"] = o.ShowbackCredentialName.Get()
	}
	if o.ShowbackCredentialId.IsSet() {
		toSerialize["showbackCredentialId"] = o.ShowbackCredentialId.Get()
	}
	if o.CreatedBy.IsSet() {
		toSerialize["createdBy"] = o.CreatedBy.Get()
	}
	if o.LastModified.IsSet() {
		toSerialize["lastModified"] = o.LastModified.Get()
	}
	if o.LastModifiedBy.IsSet() {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy.Get()
	}
	return toSerialize, nil
}

type NullableShowbackRulesListDto struct {
	value *ShowbackRulesListDto
	isSet bool
}

func (v NullableShowbackRulesListDto) Get() *ShowbackRulesListDto {
	return v.value
}

func (v *NullableShowbackRulesListDto) Set(val *ShowbackRulesListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableShowbackRulesListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableShowbackRulesListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShowbackRulesListDto(val *ShowbackRulesListDto) *NullableShowbackRulesListDto {
	return &NullableShowbackRulesListDto{value: val, isSet: true}
}

func (v NullableShowbackRulesListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShowbackRulesListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
