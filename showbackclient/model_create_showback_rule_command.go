/*
Taikun - Showback API

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikunshowback

import (
	"encoding/json"
)

// checks if the CreateShowbackRuleCommand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateShowbackRuleCommand{}

// CreateShowbackRuleCommand struct for CreateShowbackRuleCommand
type CreateShowbackRuleCommand struct {
	Name                 NullableString           `json:"name,omitempty"`
	MetricName           NullableString           `json:"metricName,omitempty"`
	ByLabel              NullableString           `json:"byLabel,omitempty"`
	Kind                 *EShowbackType           `json:"kind,omitempty"`
	Type                 *EPrometheusType         `json:"type,omitempty"`
	Price                NullableFloat64          `json:"price,omitempty"`
	ProjectAlertLimit    NullableInt32            `json:"projectAlertLimit,omitempty"`
	GlobalAlertLimit     NullableInt32            `json:"globalAlertLimit,omitempty"`
	OrganizationId       NullableInt32            `json:"organizationId,omitempty"`
	Labels               []ShowbackLabelCreateDto `json:"labels,omitempty"`
	ShowbackCredentialId NullableInt32            `json:"showbackCredentialId,omitempty"`
}

// NewCreateShowbackRuleCommand instantiates a new CreateShowbackRuleCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateShowbackRuleCommand() *CreateShowbackRuleCommand {
	this := CreateShowbackRuleCommand{}
	return &this
}

// NewCreateShowbackRuleCommandWithDefaults instantiates a new CreateShowbackRuleCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateShowbackRuleCommandWithDefaults() *CreateShowbackRuleCommand {
	this := CreateShowbackRuleCommand{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateShowbackRuleCommand) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateShowbackRuleCommand) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CreateShowbackRuleCommand) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CreateShowbackRuleCommand) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *CreateShowbackRuleCommand) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CreateShowbackRuleCommand) UnsetName() {
	o.Name.Unset()
}

// GetMetricName returns the MetricName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateShowbackRuleCommand) GetMetricName() string {
	if o == nil || IsNil(o.MetricName.Get()) {
		var ret string
		return ret
	}
	return *o.MetricName.Get()
}

// GetMetricNameOk returns a tuple with the MetricName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateShowbackRuleCommand) GetMetricNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetricName.Get(), o.MetricName.IsSet()
}

// HasMetricName returns a boolean if a field has been set.
func (o *CreateShowbackRuleCommand) HasMetricName() bool {
	if o != nil && o.MetricName.IsSet() {
		return true
	}

	return false
}

// SetMetricName gets a reference to the given NullableString and assigns it to the MetricName field.
func (o *CreateShowbackRuleCommand) SetMetricName(v string) {
	o.MetricName.Set(&v)
}

// SetMetricNameNil sets the value for MetricName to be an explicit nil
func (o *CreateShowbackRuleCommand) SetMetricNameNil() {
	o.MetricName.Set(nil)
}

// UnsetMetricName ensures that no value is present for MetricName, not even an explicit nil
func (o *CreateShowbackRuleCommand) UnsetMetricName() {
	o.MetricName.Unset()
}

// GetByLabel returns the ByLabel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateShowbackRuleCommand) GetByLabel() string {
	if o == nil || IsNil(o.ByLabel.Get()) {
		var ret string
		return ret
	}
	return *o.ByLabel.Get()
}

// GetByLabelOk returns a tuple with the ByLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateShowbackRuleCommand) GetByLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ByLabel.Get(), o.ByLabel.IsSet()
}

// HasByLabel returns a boolean if a field has been set.
func (o *CreateShowbackRuleCommand) HasByLabel() bool {
	if o != nil && o.ByLabel.IsSet() {
		return true
	}

	return false
}

// SetByLabel gets a reference to the given NullableString and assigns it to the ByLabel field.
func (o *CreateShowbackRuleCommand) SetByLabel(v string) {
	o.ByLabel.Set(&v)
}

// SetByLabelNil sets the value for ByLabel to be an explicit nil
func (o *CreateShowbackRuleCommand) SetByLabelNil() {
	o.ByLabel.Set(nil)
}

// UnsetByLabel ensures that no value is present for ByLabel, not even an explicit nil
func (o *CreateShowbackRuleCommand) UnsetByLabel() {
	o.ByLabel.Unset()
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *CreateShowbackRuleCommand) GetKind() EShowbackType {
	if o == nil || IsNil(o.Kind) {
		var ret EShowbackType
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateShowbackRuleCommand) GetKindOk() (*EShowbackType, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *CreateShowbackRuleCommand) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given EShowbackType and assigns it to the Kind field.
func (o *CreateShowbackRuleCommand) SetKind(v EShowbackType) {
	o.Kind = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CreateShowbackRuleCommand) GetType() EPrometheusType {
	if o == nil || IsNil(o.Type) {
		var ret EPrometheusType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateShowbackRuleCommand) GetTypeOk() (*EPrometheusType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CreateShowbackRuleCommand) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given EPrometheusType and assigns it to the Type field.
func (o *CreateShowbackRuleCommand) SetType(v EPrometheusType) {
	o.Type = &v
}

// GetPrice returns the Price field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateShowbackRuleCommand) GetPrice() float64 {
	if o == nil || IsNil(o.Price.Get()) {
		var ret float64
		return ret
	}
	return *o.Price.Get()
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateShowbackRuleCommand) GetPriceOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Price.Get(), o.Price.IsSet()
}

// HasPrice returns a boolean if a field has been set.
func (o *CreateShowbackRuleCommand) HasPrice() bool {
	if o != nil && o.Price.IsSet() {
		return true
	}

	return false
}

// SetPrice gets a reference to the given NullableFloat64 and assigns it to the Price field.
func (o *CreateShowbackRuleCommand) SetPrice(v float64) {
	o.Price.Set(&v)
}

// SetPriceNil sets the value for Price to be an explicit nil
func (o *CreateShowbackRuleCommand) SetPriceNil() {
	o.Price.Set(nil)
}

// UnsetPrice ensures that no value is present for Price, not even an explicit nil
func (o *CreateShowbackRuleCommand) UnsetPrice() {
	o.Price.Unset()
}

// GetProjectAlertLimit returns the ProjectAlertLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateShowbackRuleCommand) GetProjectAlertLimit() int32 {
	if o == nil || IsNil(o.ProjectAlertLimit.Get()) {
		var ret int32
		return ret
	}
	return *o.ProjectAlertLimit.Get()
}

// GetProjectAlertLimitOk returns a tuple with the ProjectAlertLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateShowbackRuleCommand) GetProjectAlertLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectAlertLimit.Get(), o.ProjectAlertLimit.IsSet()
}

// HasProjectAlertLimit returns a boolean if a field has been set.
func (o *CreateShowbackRuleCommand) HasProjectAlertLimit() bool {
	if o != nil && o.ProjectAlertLimit.IsSet() {
		return true
	}

	return false
}

// SetProjectAlertLimit gets a reference to the given NullableInt32 and assigns it to the ProjectAlertLimit field.
func (o *CreateShowbackRuleCommand) SetProjectAlertLimit(v int32) {
	o.ProjectAlertLimit.Set(&v)
}

// SetProjectAlertLimitNil sets the value for ProjectAlertLimit to be an explicit nil
func (o *CreateShowbackRuleCommand) SetProjectAlertLimitNil() {
	o.ProjectAlertLimit.Set(nil)
}

// UnsetProjectAlertLimit ensures that no value is present for ProjectAlertLimit, not even an explicit nil
func (o *CreateShowbackRuleCommand) UnsetProjectAlertLimit() {
	o.ProjectAlertLimit.Unset()
}

// GetGlobalAlertLimit returns the GlobalAlertLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateShowbackRuleCommand) GetGlobalAlertLimit() int32 {
	if o == nil || IsNil(o.GlobalAlertLimit.Get()) {
		var ret int32
		return ret
	}
	return *o.GlobalAlertLimit.Get()
}

// GetGlobalAlertLimitOk returns a tuple with the GlobalAlertLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateShowbackRuleCommand) GetGlobalAlertLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.GlobalAlertLimit.Get(), o.GlobalAlertLimit.IsSet()
}

// HasGlobalAlertLimit returns a boolean if a field has been set.
func (o *CreateShowbackRuleCommand) HasGlobalAlertLimit() bool {
	if o != nil && o.GlobalAlertLimit.IsSet() {
		return true
	}

	return false
}

// SetGlobalAlertLimit gets a reference to the given NullableInt32 and assigns it to the GlobalAlertLimit field.
func (o *CreateShowbackRuleCommand) SetGlobalAlertLimit(v int32) {
	o.GlobalAlertLimit.Set(&v)
}

// SetGlobalAlertLimitNil sets the value for GlobalAlertLimit to be an explicit nil
func (o *CreateShowbackRuleCommand) SetGlobalAlertLimitNil() {
	o.GlobalAlertLimit.Set(nil)
}

// UnsetGlobalAlertLimit ensures that no value is present for GlobalAlertLimit, not even an explicit nil
func (o *CreateShowbackRuleCommand) UnsetGlobalAlertLimit() {
	o.GlobalAlertLimit.Unset()
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateShowbackRuleCommand) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId.Get()) {
		var ret int32
		return ret
	}
	return *o.OrganizationId.Get()
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateShowbackRuleCommand) GetOrganizationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationId.Get(), o.OrganizationId.IsSet()
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *CreateShowbackRuleCommand) HasOrganizationId() bool {
	if o != nil && o.OrganizationId.IsSet() {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given NullableInt32 and assigns it to the OrganizationId field.
func (o *CreateShowbackRuleCommand) SetOrganizationId(v int32) {
	o.OrganizationId.Set(&v)
}

// SetOrganizationIdNil sets the value for OrganizationId to be an explicit nil
func (o *CreateShowbackRuleCommand) SetOrganizationIdNil() {
	o.OrganizationId.Set(nil)
}

// UnsetOrganizationId ensures that no value is present for OrganizationId, not even an explicit nil
func (o *CreateShowbackRuleCommand) UnsetOrganizationId() {
	o.OrganizationId.Unset()
}

// GetLabels returns the Labels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateShowbackRuleCommand) GetLabels() []ShowbackLabelCreateDto {
	if o == nil {
		var ret []ShowbackLabelCreateDto
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateShowbackRuleCommand) GetLabelsOk() ([]ShowbackLabelCreateDto, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *CreateShowbackRuleCommand) HasLabels() bool {
	if o != nil && IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []ShowbackLabelCreateDto and assigns it to the Labels field.
func (o *CreateShowbackRuleCommand) SetLabels(v []ShowbackLabelCreateDto) {
	o.Labels = v
}

// GetShowbackCredentialId returns the ShowbackCredentialId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateShowbackRuleCommand) GetShowbackCredentialId() int32 {
	if o == nil || IsNil(o.ShowbackCredentialId.Get()) {
		var ret int32
		return ret
	}
	return *o.ShowbackCredentialId.Get()
}

// GetShowbackCredentialIdOk returns a tuple with the ShowbackCredentialId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateShowbackRuleCommand) GetShowbackCredentialIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShowbackCredentialId.Get(), o.ShowbackCredentialId.IsSet()
}

// HasShowbackCredentialId returns a boolean if a field has been set.
func (o *CreateShowbackRuleCommand) HasShowbackCredentialId() bool {
	if o != nil && o.ShowbackCredentialId.IsSet() {
		return true
	}

	return false
}

// SetShowbackCredentialId gets a reference to the given NullableInt32 and assigns it to the ShowbackCredentialId field.
func (o *CreateShowbackRuleCommand) SetShowbackCredentialId(v int32) {
	o.ShowbackCredentialId.Set(&v)
}

// SetShowbackCredentialIdNil sets the value for ShowbackCredentialId to be an explicit nil
func (o *CreateShowbackRuleCommand) SetShowbackCredentialIdNil() {
	o.ShowbackCredentialId.Set(nil)
}

// UnsetShowbackCredentialId ensures that no value is present for ShowbackCredentialId, not even an explicit nil
func (o *CreateShowbackRuleCommand) UnsetShowbackCredentialId() {
	o.ShowbackCredentialId.Unset()
}

func (o CreateShowbackRuleCommand) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateShowbackRuleCommand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.MetricName.IsSet() {
		toSerialize["metricName"] = o.MetricName.Get()
	}
	if o.ByLabel.IsSet() {
		toSerialize["byLabel"] = o.ByLabel.Get()
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if o.Price.IsSet() {
		toSerialize["price"] = o.Price.Get()
	}
	if o.ProjectAlertLimit.IsSet() {
		toSerialize["projectAlertLimit"] = o.ProjectAlertLimit.Get()
	}
	if o.GlobalAlertLimit.IsSet() {
		toSerialize["globalAlertLimit"] = o.GlobalAlertLimit.Get()
	}
	if o.OrganizationId.IsSet() {
		toSerialize["organizationId"] = o.OrganizationId.Get()
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.ShowbackCredentialId.IsSet() {
		toSerialize["showbackCredentialId"] = o.ShowbackCredentialId.Get()
	}
	return toSerialize, nil
}

type NullableCreateShowbackRuleCommand struct {
	value *CreateShowbackRuleCommand
	isSet bool
}

func (v NullableCreateShowbackRuleCommand) Get() *CreateShowbackRuleCommand {
	return v.value
}

func (v *NullableCreateShowbackRuleCommand) Set(val *CreateShowbackRuleCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateShowbackRuleCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateShowbackRuleCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateShowbackRuleCommand(val *CreateShowbackRuleCommand) *NullableCreateShowbackRuleCommand {
	return &NullableCreateShowbackRuleCommand{value: val, isSet: true}
}

func (v NullableCreateShowbackRuleCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateShowbackRuleCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
