/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikunshowback

import (
	"encoding/json"
)

// checks if the StandAloneProfileSecurityGroupFullDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StandAloneProfileSecurityGroupFullDto{}

// StandAloneProfileSecurityGroupFullDto struct for StandAloneProfileSecurityGroupFullDto
type StandAloneProfileSecurityGroupFullDto struct {
	Id             *int32         `json:"id,omitempty"`
	Name           NullableString `json:"name,omitempty"`
	Protocol       NullableString `json:"protocol,omitempty"`
	PortMinRange   *int32         `json:"portMinRange,omitempty"`
	PortMaxRange   *int32         `json:"portMaxRange,omitempty"`
	RemoteIpPrefix NullableString `json:"remoteIpPrefix,omitempty"`
	Priority       NullableInt32  `json:"priority,omitempty"`
}

// NewStandAloneProfileSecurityGroupFullDto instantiates a new StandAloneProfileSecurityGroupFullDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStandAloneProfileSecurityGroupFullDto() *StandAloneProfileSecurityGroupFullDto {
	this := StandAloneProfileSecurityGroupFullDto{}
	return &this
}

// NewStandAloneProfileSecurityGroupFullDtoWithDefaults instantiates a new StandAloneProfileSecurityGroupFullDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStandAloneProfileSecurityGroupFullDtoWithDefaults() *StandAloneProfileSecurityGroupFullDto {
	this := StandAloneProfileSecurityGroupFullDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StandAloneProfileSecurityGroupFullDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneProfileSecurityGroupFullDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *StandAloneProfileSecurityGroupFullDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *StandAloneProfileSecurityGroupFullDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StandAloneProfileSecurityGroupFullDto) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StandAloneProfileSecurityGroupFullDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *StandAloneProfileSecurityGroupFullDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *StandAloneProfileSecurityGroupFullDto) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *StandAloneProfileSecurityGroupFullDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *StandAloneProfileSecurityGroupFullDto) UnsetName() {
	o.Name.Unset()
}

// GetProtocol returns the Protocol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StandAloneProfileSecurityGroupFullDto) GetProtocol() string {
	if o == nil || IsNil(o.Protocol.Get()) {
		var ret string
		return ret
	}
	return *o.Protocol.Get()
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StandAloneProfileSecurityGroupFullDto) GetProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Protocol.Get(), o.Protocol.IsSet()
}

// HasProtocol returns a boolean if a field has been set.
func (o *StandAloneProfileSecurityGroupFullDto) HasProtocol() bool {
	if o != nil && o.Protocol.IsSet() {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given NullableString and assigns it to the Protocol field.
func (o *StandAloneProfileSecurityGroupFullDto) SetProtocol(v string) {
	o.Protocol.Set(&v)
}

// SetProtocolNil sets the value for Protocol to be an explicit nil
func (o *StandAloneProfileSecurityGroupFullDto) SetProtocolNil() {
	o.Protocol.Set(nil)
}

// UnsetProtocol ensures that no value is present for Protocol, not even an explicit nil
func (o *StandAloneProfileSecurityGroupFullDto) UnsetProtocol() {
	o.Protocol.Unset()
}

// GetPortMinRange returns the PortMinRange field value if set, zero value otherwise.
func (o *StandAloneProfileSecurityGroupFullDto) GetPortMinRange() int32 {
	if o == nil || IsNil(o.PortMinRange) {
		var ret int32
		return ret
	}
	return *o.PortMinRange
}

// GetPortMinRangeOk returns a tuple with the PortMinRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneProfileSecurityGroupFullDto) GetPortMinRangeOk() (*int32, bool) {
	if o == nil || IsNil(o.PortMinRange) {
		return nil, false
	}
	return o.PortMinRange, true
}

// HasPortMinRange returns a boolean if a field has been set.
func (o *StandAloneProfileSecurityGroupFullDto) HasPortMinRange() bool {
	if o != nil && !IsNil(o.PortMinRange) {
		return true
	}

	return false
}

// SetPortMinRange gets a reference to the given int32 and assigns it to the PortMinRange field.
func (o *StandAloneProfileSecurityGroupFullDto) SetPortMinRange(v int32) {
	o.PortMinRange = &v
}

// GetPortMaxRange returns the PortMaxRange field value if set, zero value otherwise.
func (o *StandAloneProfileSecurityGroupFullDto) GetPortMaxRange() int32 {
	if o == nil || IsNil(o.PortMaxRange) {
		var ret int32
		return ret
	}
	return *o.PortMaxRange
}

// GetPortMaxRangeOk returns a tuple with the PortMaxRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandAloneProfileSecurityGroupFullDto) GetPortMaxRangeOk() (*int32, bool) {
	if o == nil || IsNil(o.PortMaxRange) {
		return nil, false
	}
	return o.PortMaxRange, true
}

// HasPortMaxRange returns a boolean if a field has been set.
func (o *StandAloneProfileSecurityGroupFullDto) HasPortMaxRange() bool {
	if o != nil && !IsNil(o.PortMaxRange) {
		return true
	}

	return false
}

// SetPortMaxRange gets a reference to the given int32 and assigns it to the PortMaxRange field.
func (o *StandAloneProfileSecurityGroupFullDto) SetPortMaxRange(v int32) {
	o.PortMaxRange = &v
}

// GetRemoteIpPrefix returns the RemoteIpPrefix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StandAloneProfileSecurityGroupFullDto) GetRemoteIpPrefix() string {
	if o == nil || IsNil(o.RemoteIpPrefix.Get()) {
		var ret string
		return ret
	}
	return *o.RemoteIpPrefix.Get()
}

// GetRemoteIpPrefixOk returns a tuple with the RemoteIpPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StandAloneProfileSecurityGroupFullDto) GetRemoteIpPrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoteIpPrefix.Get(), o.RemoteIpPrefix.IsSet()
}

// HasRemoteIpPrefix returns a boolean if a field has been set.
func (o *StandAloneProfileSecurityGroupFullDto) HasRemoteIpPrefix() bool {
	if o != nil && o.RemoteIpPrefix.IsSet() {
		return true
	}

	return false
}

// SetRemoteIpPrefix gets a reference to the given NullableString and assigns it to the RemoteIpPrefix field.
func (o *StandAloneProfileSecurityGroupFullDto) SetRemoteIpPrefix(v string) {
	o.RemoteIpPrefix.Set(&v)
}

// SetRemoteIpPrefixNil sets the value for RemoteIpPrefix to be an explicit nil
func (o *StandAloneProfileSecurityGroupFullDto) SetRemoteIpPrefixNil() {
	o.RemoteIpPrefix.Set(nil)
}

// UnsetRemoteIpPrefix ensures that no value is present for RemoteIpPrefix, not even an explicit nil
func (o *StandAloneProfileSecurityGroupFullDto) UnsetRemoteIpPrefix() {
	o.RemoteIpPrefix.Unset()
}

// GetPriority returns the Priority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StandAloneProfileSecurityGroupFullDto) GetPriority() int32 {
	if o == nil || IsNil(o.Priority.Get()) {
		var ret int32
		return ret
	}
	return *o.Priority.Get()
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StandAloneProfileSecurityGroupFullDto) GetPriorityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Priority.Get(), o.Priority.IsSet()
}

// HasPriority returns a boolean if a field has been set.
func (o *StandAloneProfileSecurityGroupFullDto) HasPriority() bool {
	if o != nil && o.Priority.IsSet() {
		return true
	}

	return false
}

// SetPriority gets a reference to the given NullableInt32 and assigns it to the Priority field.
func (o *StandAloneProfileSecurityGroupFullDto) SetPriority(v int32) {
	o.Priority.Set(&v)
}

// SetPriorityNil sets the value for Priority to be an explicit nil
func (o *StandAloneProfileSecurityGroupFullDto) SetPriorityNil() {
	o.Priority.Set(nil)
}

// UnsetPriority ensures that no value is present for Priority, not even an explicit nil
func (o *StandAloneProfileSecurityGroupFullDto) UnsetPriority() {
	o.Priority.Unset()
}

func (o StandAloneProfileSecurityGroupFullDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StandAloneProfileSecurityGroupFullDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Protocol.IsSet() {
		toSerialize["protocol"] = o.Protocol.Get()
	}
	if !IsNil(o.PortMinRange) {
		toSerialize["portMinRange"] = o.PortMinRange
	}
	if !IsNil(o.PortMaxRange) {
		toSerialize["portMaxRange"] = o.PortMaxRange
	}
	if o.RemoteIpPrefix.IsSet() {
		toSerialize["remoteIpPrefix"] = o.RemoteIpPrefix.Get()
	}
	if o.Priority.IsSet() {
		toSerialize["priority"] = o.Priority.Get()
	}
	return toSerialize, nil
}

type NullableStandAloneProfileSecurityGroupFullDto struct {
	value *StandAloneProfileSecurityGroupFullDto
	isSet bool
}

func (v NullableStandAloneProfileSecurityGroupFullDto) Get() *StandAloneProfileSecurityGroupFullDto {
	return v.value
}

func (v *NullableStandAloneProfileSecurityGroupFullDto) Set(val *StandAloneProfileSecurityGroupFullDto) {
	v.value = val
	v.isSet = true
}

func (v NullableStandAloneProfileSecurityGroupFullDto) IsSet() bool {
	return v.isSet
}

func (v *NullableStandAloneProfileSecurityGroupFullDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStandAloneProfileSecurityGroupFullDto(val *StandAloneProfileSecurityGroupFullDto) *NullableStandAloneProfileSecurityGroupFullDto {
	return &NullableStandAloneProfileSecurityGroupFullDto{value: val, isSet: true}
}

func (v NullableStandAloneProfileSecurityGroupFullDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStandAloneProfileSecurityGroupFullDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
