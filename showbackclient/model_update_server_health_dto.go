/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikunshowback

import (
	"encoding/json"
)

// checks if the UpdateServerHealthDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateServerHealthDto{}

// UpdateServerHealthDto struct for UpdateServerHealthDto
type UpdateServerHealthDto struct {
	IpAddress    NullableString `json:"ipAddress,omitempty"`
	ServerHealth NullableString `json:"serverHealth,omitempty"`
}

// NewUpdateServerHealthDto instantiates a new UpdateServerHealthDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateServerHealthDto() *UpdateServerHealthDto {
	this := UpdateServerHealthDto{}
	return &this
}

// NewUpdateServerHealthDtoWithDefaults instantiates a new UpdateServerHealthDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateServerHealthDtoWithDefaults() *UpdateServerHealthDto {
	this := UpdateServerHealthDto{}
	return &this
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateServerHealthDto) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress.Get()) {
		var ret string
		return ret
	}
	return *o.IpAddress.Get()
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateServerHealthDto) GetIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IpAddress.Get(), o.IpAddress.IsSet()
}

// HasIpAddress returns a boolean if a field has been set.
func (o *UpdateServerHealthDto) HasIpAddress() bool {
	if o != nil && o.IpAddress.IsSet() {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given NullableString and assigns it to the IpAddress field.
func (o *UpdateServerHealthDto) SetIpAddress(v string) {
	o.IpAddress.Set(&v)
}

// SetIpAddressNil sets the value for IpAddress to be an explicit nil
func (o *UpdateServerHealthDto) SetIpAddressNil() {
	o.IpAddress.Set(nil)
}

// UnsetIpAddress ensures that no value is present for IpAddress, not even an explicit nil
func (o *UpdateServerHealthDto) UnsetIpAddress() {
	o.IpAddress.Unset()
}

// GetServerHealth returns the ServerHealth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateServerHealthDto) GetServerHealth() string {
	if o == nil || IsNil(o.ServerHealth.Get()) {
		var ret string
		return ret
	}
	return *o.ServerHealth.Get()
}

// GetServerHealthOk returns a tuple with the ServerHealth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateServerHealthDto) GetServerHealthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerHealth.Get(), o.ServerHealth.IsSet()
}

// HasServerHealth returns a boolean if a field has been set.
func (o *UpdateServerHealthDto) HasServerHealth() bool {
	if o != nil && o.ServerHealth.IsSet() {
		return true
	}

	return false
}

// SetServerHealth gets a reference to the given NullableString and assigns it to the ServerHealth field.
func (o *UpdateServerHealthDto) SetServerHealth(v string) {
	o.ServerHealth.Set(&v)
}

// SetServerHealthNil sets the value for ServerHealth to be an explicit nil
func (o *UpdateServerHealthDto) SetServerHealthNil() {
	o.ServerHealth.Set(nil)
}

// UnsetServerHealth ensures that no value is present for ServerHealth, not even an explicit nil
func (o *UpdateServerHealthDto) UnsetServerHealth() {
	o.ServerHealth.Unset()
}

func (o UpdateServerHealthDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateServerHealthDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.IpAddress.IsSet() {
		toSerialize["ipAddress"] = o.IpAddress.Get()
	}
	if o.ServerHealth.IsSet() {
		toSerialize["serverHealth"] = o.ServerHealth.Get()
	}
	return toSerialize, nil
}

type NullableUpdateServerHealthDto struct {
	value *UpdateServerHealthDto
	isSet bool
}

func (v NullableUpdateServerHealthDto) Get() *UpdateServerHealthDto {
	return v.value
}

func (v *NullableUpdateServerHealthDto) Set(val *UpdateServerHealthDto) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateServerHealthDto) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateServerHealthDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateServerHealthDto(val *UpdateServerHealthDto) *NullableUpdateServerHealthDto {
	return &NullableUpdateServerHealthDto{value: val, isSet: true}
}

func (v NullableUpdateServerHealthDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateServerHealthDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
