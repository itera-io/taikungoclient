/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikunshowback

import (
	"encoding/json"
	"time"
)

// checks if the ProjectForListDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectForListDto{}

// ProjectForListDto struct for ProjectForListDto
type ProjectForListDto struct {
	Id                                *int32                             `json:"id,omitempty"`
	Name                              NullableString                     `json:"name,omitempty"`
	ImageName                         NullableString                     `json:"imageName,omitempty"`
	Token                             NullableString                     `json:"token,omitempty"`
	IsKubernetes                      *bool                              `json:"isKubernetes,omitempty"`
	IsLocked                          *bool                              `json:"isLocked,omitempty"`
	IsBackupEnabled                   *bool                              `json:"isBackupEnabled,omitempty"`
	IsMonitoringEnabled               *bool                              `json:"isMonitoringEnabled,omitempty"`
	IsOpaEnabled                      *bool                              `json:"isOpaEnabled,omitempty"`
	IsAutoUpgrade                     *bool                              `json:"isAutoUpgrade,omitempty"`
	AiEnabled                         *bool                              `json:"aiEnabled,omitempty"`
	S3BucketName                      NullableString                     `json:"s3BucketName,omitempty"`
	HasKubeConfigFile                 *bool                              `json:"hasKubeConfigFile,omitempty"`
	HasSelectedFlavors                *bool                              `json:"hasSelectedFlavors,omitempty"`
	QuotaId                           *int32                             `json:"quotaId,omitempty"`
	CloudCredentialName               NullableString                     `json:"cloudCredentialName,omitempty"`
	CloudCredentialId                 NullableInt32                      `json:"cloudCredentialId,omitempty"`
	OrganizationName                  NullableString                     `json:"organizationName,omitempty"`
	OrganizationId                    *int32                             `json:"organizationId,omitempty"`
	PartnerId                         NullableInt32                      `json:"partnerId,omitempty"`
	Status                            NullableString                     `json:"status,omitempty"`
	Health                            NullableString                     `json:"health,omitempty"`
	AccessIp                          NullableString                     `json:"accessIp,omitempty"`
	CloudType                         NullableString                     `json:"cloudType,omitempty"`
	KubesprayCurrentVersion           NullableString                     `json:"kubesprayCurrentVersion,omitempty"`
	KubesprayTargetVersion            NullableString                     `json:"kubesprayTargetVersion,omitempty"`
	KubernetesCurrentVersion          NullableString                     `json:"kubernetesCurrentVersion,omitempty"`
	KubernetesTargetVersion           NullableString                     `json:"kubernetesTargetVersion,omitempty"`
	UpdatedAt                         NullableTime                       `json:"updatedAt,omitempty"`
	MonitoringCredential              *MonitoringCredentialsListDto      `json:"monitoringCredential,omitempty"`
	IsAutoscalingEnabled              *bool                              `json:"isAutoscalingEnabled,omitempty"`
	Flavors                           []string                           `json:"flavors,omitempty"`
	AccessProfile                     *AccessProfilesForProjectListDto   `json:"accessProfile,omitempty"`
	KubernetesProfiles                *KubernetesProfilesLisForPollerDto `json:"kubernetesProfiles,omitempty"`
	OpaProfile                        *OpaProfileListDto                 `json:"opaProfile,omitempty"`
	KubernetesAlerts                  []KubernetesAlertDto               `json:"kubernetesAlerts,omitempty"`
	IsDeleteCluster                   *bool                              `json:"isDeleteCluster,omitempty"`
	TaikunPrivateSSHKey               NullableString                     `json:"taikunPrivateSSHKey,omitempty"`
	TaikunPublicSSHKey                NullableString                     `json:"taikunPublicSSHKey,omitempty"`
	GoogleProjectId                   NullableString                     `json:"googleProjectId,omitempty"`
	Cidr                              NullableString                     `json:"cidr,omitempty"`
	NetMask                           NullableInt32                      `json:"netMask,omitempty"`
	PrivateIp                         NullableString                     `json:"privateIp,omitempty"`
	PublicIp                          NullableString                     `json:"publicIp,omitempty"`
	IsKubevapEnabled                  *bool                              `json:"isKubevapEnabled,omitempty"`
	TanzuReleaseVersion               NullableString                     `json:"tanzuReleaseVersion,omitempty"`
	NfsDiskSize                       *int32                             `json:"nfsDiskSize,omitempty"`
	KubevapEnabeledKubernetesVersions []string                           `json:"kubevapEnabeledKubernetesVersions,omitempty"`
	AwsProjectAZSubnets               []AwsProjectAZSubnetDto            `json:"awsProjectAZSubnets,omitempty"`
	AvailabilityZones                 []string                           `json:"availabilityZones,omitempty"`
	WorkersCount                      *int32                             `json:"workersCount,omitempty"`
	TaikunLB                          *TaikunLbDto                       `json:"taikunLB,omitempty"`
	S3Credential                      *S3CredentialForProjectDto         `json:"s3Credential,omitempty"`
	ProjectRevision                   *ProjectRevisionDto                `json:"projectRevision,omitempty"`
	ProjectActionDto                  *ProjectActionDto                  `json:"projectActionDto,omitempty"`
	AiCredential                      *AiCredentialDto                   `json:"aiCredential,omitempty"`
}

// NewProjectForListDto instantiates a new ProjectForListDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectForListDto() *ProjectForListDto {
	this := ProjectForListDto{}
	return &this
}

// NewProjectForListDtoWithDefaults instantiates a new ProjectForListDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectForListDtoWithDefaults() *ProjectForListDto {
	this := ProjectForListDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProjectForListDto) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProjectForListDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ProjectForListDto) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ProjectForListDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ProjectForListDto) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *ProjectForListDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ProjectForListDto) UnsetName() {
	o.Name.Unset()
}

// GetImageName returns the ImageName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetImageName() string {
	if o == nil || IsNil(o.ImageName.Get()) {
		var ret string
		return ret
	}
	return *o.ImageName.Get()
}

// GetImageNameOk returns a tuple with the ImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetImageNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageName.Get(), o.ImageName.IsSet()
}

// HasImageName returns a boolean if a field has been set.
func (o *ProjectForListDto) HasImageName() bool {
	if o != nil && o.ImageName.IsSet() {
		return true
	}

	return false
}

// SetImageName gets a reference to the given NullableString and assigns it to the ImageName field.
func (o *ProjectForListDto) SetImageName(v string) {
	o.ImageName.Set(&v)
}

// SetImageNameNil sets the value for ImageName to be an explicit nil
func (o *ProjectForListDto) SetImageNameNil() {
	o.ImageName.Set(nil)
}

// UnsetImageName ensures that no value is present for ImageName, not even an explicit nil
func (o *ProjectForListDto) UnsetImageName() {
	o.ImageName.Unset()
}

// GetToken returns the Token field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetToken() string {
	if o == nil || IsNil(o.Token.Get()) {
		var ret string
		return ret
	}
	return *o.Token.Get()
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Token.Get(), o.Token.IsSet()
}

// HasToken returns a boolean if a field has been set.
func (o *ProjectForListDto) HasToken() bool {
	if o != nil && o.Token.IsSet() {
		return true
	}

	return false
}

// SetToken gets a reference to the given NullableString and assigns it to the Token field.
func (o *ProjectForListDto) SetToken(v string) {
	o.Token.Set(&v)
}

// SetTokenNil sets the value for Token to be an explicit nil
func (o *ProjectForListDto) SetTokenNil() {
	o.Token.Set(nil)
}

// UnsetToken ensures that no value is present for Token, not even an explicit nil
func (o *ProjectForListDto) UnsetToken() {
	o.Token.Unset()
}

// GetIsKubernetes returns the IsKubernetes field value if set, zero value otherwise.
func (o *ProjectForListDto) GetIsKubernetes() bool {
	if o == nil || IsNil(o.IsKubernetes) {
		var ret bool
		return ret
	}
	return *o.IsKubernetes
}

// GetIsKubernetesOk returns a tuple with the IsKubernetes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetIsKubernetesOk() (*bool, bool) {
	if o == nil || IsNil(o.IsKubernetes) {
		return nil, false
	}
	return o.IsKubernetes, true
}

// HasIsKubernetes returns a boolean if a field has been set.
func (o *ProjectForListDto) HasIsKubernetes() bool {
	if o != nil && !IsNil(o.IsKubernetes) {
		return true
	}

	return false
}

// SetIsKubernetes gets a reference to the given bool and assigns it to the IsKubernetes field.
func (o *ProjectForListDto) SetIsKubernetes(v bool) {
	o.IsKubernetes = &v
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise.
func (o *ProjectForListDto) GetIsLocked() bool {
	if o == nil || IsNil(o.IsLocked) {
		var ret bool
		return ret
	}
	return *o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetIsLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocked) {
		return nil, false
	}
	return o.IsLocked, true
}

// HasIsLocked returns a boolean if a field has been set.
func (o *ProjectForListDto) HasIsLocked() bool {
	if o != nil && !IsNil(o.IsLocked) {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given bool and assigns it to the IsLocked field.
func (o *ProjectForListDto) SetIsLocked(v bool) {
	o.IsLocked = &v
}

// GetIsBackupEnabled returns the IsBackupEnabled field value if set, zero value otherwise.
func (o *ProjectForListDto) GetIsBackupEnabled() bool {
	if o == nil || IsNil(o.IsBackupEnabled) {
		var ret bool
		return ret
	}
	return *o.IsBackupEnabled
}

// GetIsBackupEnabledOk returns a tuple with the IsBackupEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetIsBackupEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBackupEnabled) {
		return nil, false
	}
	return o.IsBackupEnabled, true
}

// HasIsBackupEnabled returns a boolean if a field has been set.
func (o *ProjectForListDto) HasIsBackupEnabled() bool {
	if o != nil && !IsNil(o.IsBackupEnabled) {
		return true
	}

	return false
}

// SetIsBackupEnabled gets a reference to the given bool and assigns it to the IsBackupEnabled field.
func (o *ProjectForListDto) SetIsBackupEnabled(v bool) {
	o.IsBackupEnabled = &v
}

// GetIsMonitoringEnabled returns the IsMonitoringEnabled field value if set, zero value otherwise.
func (o *ProjectForListDto) GetIsMonitoringEnabled() bool {
	if o == nil || IsNil(o.IsMonitoringEnabled) {
		var ret bool
		return ret
	}
	return *o.IsMonitoringEnabled
}

// GetIsMonitoringEnabledOk returns a tuple with the IsMonitoringEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetIsMonitoringEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMonitoringEnabled) {
		return nil, false
	}
	return o.IsMonitoringEnabled, true
}

// HasIsMonitoringEnabled returns a boolean if a field has been set.
func (o *ProjectForListDto) HasIsMonitoringEnabled() bool {
	if o != nil && !IsNil(o.IsMonitoringEnabled) {
		return true
	}

	return false
}

// SetIsMonitoringEnabled gets a reference to the given bool and assigns it to the IsMonitoringEnabled field.
func (o *ProjectForListDto) SetIsMonitoringEnabled(v bool) {
	o.IsMonitoringEnabled = &v
}

// GetIsOpaEnabled returns the IsOpaEnabled field value if set, zero value otherwise.
func (o *ProjectForListDto) GetIsOpaEnabled() bool {
	if o == nil || IsNil(o.IsOpaEnabled) {
		var ret bool
		return ret
	}
	return *o.IsOpaEnabled
}

// GetIsOpaEnabledOk returns a tuple with the IsOpaEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetIsOpaEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOpaEnabled) {
		return nil, false
	}
	return o.IsOpaEnabled, true
}

// HasIsOpaEnabled returns a boolean if a field has been set.
func (o *ProjectForListDto) HasIsOpaEnabled() bool {
	if o != nil && !IsNil(o.IsOpaEnabled) {
		return true
	}

	return false
}

// SetIsOpaEnabled gets a reference to the given bool and assigns it to the IsOpaEnabled field.
func (o *ProjectForListDto) SetIsOpaEnabled(v bool) {
	o.IsOpaEnabled = &v
}

// GetIsAutoUpgrade returns the IsAutoUpgrade field value if set, zero value otherwise.
func (o *ProjectForListDto) GetIsAutoUpgrade() bool {
	if o == nil || IsNil(o.IsAutoUpgrade) {
		var ret bool
		return ret
	}
	return *o.IsAutoUpgrade
}

// GetIsAutoUpgradeOk returns a tuple with the IsAutoUpgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetIsAutoUpgradeOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutoUpgrade) {
		return nil, false
	}
	return o.IsAutoUpgrade, true
}

// HasIsAutoUpgrade returns a boolean if a field has been set.
func (o *ProjectForListDto) HasIsAutoUpgrade() bool {
	if o != nil && !IsNil(o.IsAutoUpgrade) {
		return true
	}

	return false
}

// SetIsAutoUpgrade gets a reference to the given bool and assigns it to the IsAutoUpgrade field.
func (o *ProjectForListDto) SetIsAutoUpgrade(v bool) {
	o.IsAutoUpgrade = &v
}

// GetAiEnabled returns the AiEnabled field value if set, zero value otherwise.
func (o *ProjectForListDto) GetAiEnabled() bool {
	if o == nil || IsNil(o.AiEnabled) {
		var ret bool
		return ret
	}
	return *o.AiEnabled
}

// GetAiEnabledOk returns a tuple with the AiEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetAiEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AiEnabled) {
		return nil, false
	}
	return o.AiEnabled, true
}

// HasAiEnabled returns a boolean if a field has been set.
func (o *ProjectForListDto) HasAiEnabled() bool {
	if o != nil && !IsNil(o.AiEnabled) {
		return true
	}

	return false
}

// SetAiEnabled gets a reference to the given bool and assigns it to the AiEnabled field.
func (o *ProjectForListDto) SetAiEnabled(v bool) {
	o.AiEnabled = &v
}

// GetS3BucketName returns the S3BucketName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetS3BucketName() string {
	if o == nil || IsNil(o.S3BucketName.Get()) {
		var ret string
		return ret
	}
	return *o.S3BucketName.Get()
}

// GetS3BucketNameOk returns a tuple with the S3BucketName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetS3BucketNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.S3BucketName.Get(), o.S3BucketName.IsSet()
}

// HasS3BucketName returns a boolean if a field has been set.
func (o *ProjectForListDto) HasS3BucketName() bool {
	if o != nil && o.S3BucketName.IsSet() {
		return true
	}

	return false
}

// SetS3BucketName gets a reference to the given NullableString and assigns it to the S3BucketName field.
func (o *ProjectForListDto) SetS3BucketName(v string) {
	o.S3BucketName.Set(&v)
}

// SetS3BucketNameNil sets the value for S3BucketName to be an explicit nil
func (o *ProjectForListDto) SetS3BucketNameNil() {
	o.S3BucketName.Set(nil)
}

// UnsetS3BucketName ensures that no value is present for S3BucketName, not even an explicit nil
func (o *ProjectForListDto) UnsetS3BucketName() {
	o.S3BucketName.Unset()
}

// GetHasKubeConfigFile returns the HasKubeConfigFile field value if set, zero value otherwise.
func (o *ProjectForListDto) GetHasKubeConfigFile() bool {
	if o == nil || IsNil(o.HasKubeConfigFile) {
		var ret bool
		return ret
	}
	return *o.HasKubeConfigFile
}

// GetHasKubeConfigFileOk returns a tuple with the HasKubeConfigFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetHasKubeConfigFileOk() (*bool, bool) {
	if o == nil || IsNil(o.HasKubeConfigFile) {
		return nil, false
	}
	return o.HasKubeConfigFile, true
}

// HasHasKubeConfigFile returns a boolean if a field has been set.
func (o *ProjectForListDto) HasHasKubeConfigFile() bool {
	if o != nil && !IsNil(o.HasKubeConfigFile) {
		return true
	}

	return false
}

// SetHasKubeConfigFile gets a reference to the given bool and assigns it to the HasKubeConfigFile field.
func (o *ProjectForListDto) SetHasKubeConfigFile(v bool) {
	o.HasKubeConfigFile = &v
}

// GetHasSelectedFlavors returns the HasSelectedFlavors field value if set, zero value otherwise.
func (o *ProjectForListDto) GetHasSelectedFlavors() bool {
	if o == nil || IsNil(o.HasSelectedFlavors) {
		var ret bool
		return ret
	}
	return *o.HasSelectedFlavors
}

// GetHasSelectedFlavorsOk returns a tuple with the HasSelectedFlavors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetHasSelectedFlavorsOk() (*bool, bool) {
	if o == nil || IsNil(o.HasSelectedFlavors) {
		return nil, false
	}
	return o.HasSelectedFlavors, true
}

// HasHasSelectedFlavors returns a boolean if a field has been set.
func (o *ProjectForListDto) HasHasSelectedFlavors() bool {
	if o != nil && !IsNil(o.HasSelectedFlavors) {
		return true
	}

	return false
}

// SetHasSelectedFlavors gets a reference to the given bool and assigns it to the HasSelectedFlavors field.
func (o *ProjectForListDto) SetHasSelectedFlavors(v bool) {
	o.HasSelectedFlavors = &v
}

// GetQuotaId returns the QuotaId field value if set, zero value otherwise.
func (o *ProjectForListDto) GetQuotaId() int32 {
	if o == nil || IsNil(o.QuotaId) {
		var ret int32
		return ret
	}
	return *o.QuotaId
}

// GetQuotaIdOk returns a tuple with the QuotaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetQuotaIdOk() (*int32, bool) {
	if o == nil || IsNil(o.QuotaId) {
		return nil, false
	}
	return o.QuotaId, true
}

// HasQuotaId returns a boolean if a field has been set.
func (o *ProjectForListDto) HasQuotaId() bool {
	if o != nil && !IsNil(o.QuotaId) {
		return true
	}

	return false
}

// SetQuotaId gets a reference to the given int32 and assigns it to the QuotaId field.
func (o *ProjectForListDto) SetQuotaId(v int32) {
	o.QuotaId = &v
}

// GetCloudCredentialName returns the CloudCredentialName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetCloudCredentialName() string {
	if o == nil || IsNil(o.CloudCredentialName.Get()) {
		var ret string
		return ret
	}
	return *o.CloudCredentialName.Get()
}

// GetCloudCredentialNameOk returns a tuple with the CloudCredentialName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetCloudCredentialNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloudCredentialName.Get(), o.CloudCredentialName.IsSet()
}

// HasCloudCredentialName returns a boolean if a field has been set.
func (o *ProjectForListDto) HasCloudCredentialName() bool {
	if o != nil && o.CloudCredentialName.IsSet() {
		return true
	}

	return false
}

// SetCloudCredentialName gets a reference to the given NullableString and assigns it to the CloudCredentialName field.
func (o *ProjectForListDto) SetCloudCredentialName(v string) {
	o.CloudCredentialName.Set(&v)
}

// SetCloudCredentialNameNil sets the value for CloudCredentialName to be an explicit nil
func (o *ProjectForListDto) SetCloudCredentialNameNil() {
	o.CloudCredentialName.Set(nil)
}

// UnsetCloudCredentialName ensures that no value is present for CloudCredentialName, not even an explicit nil
func (o *ProjectForListDto) UnsetCloudCredentialName() {
	o.CloudCredentialName.Unset()
}

// GetCloudCredentialId returns the CloudCredentialId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetCloudCredentialId() int32 {
	if o == nil || IsNil(o.CloudCredentialId.Get()) {
		var ret int32
		return ret
	}
	return *o.CloudCredentialId.Get()
}

// GetCloudCredentialIdOk returns a tuple with the CloudCredentialId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetCloudCredentialIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloudCredentialId.Get(), o.CloudCredentialId.IsSet()
}

// HasCloudCredentialId returns a boolean if a field has been set.
func (o *ProjectForListDto) HasCloudCredentialId() bool {
	if o != nil && o.CloudCredentialId.IsSet() {
		return true
	}

	return false
}

// SetCloudCredentialId gets a reference to the given NullableInt32 and assigns it to the CloudCredentialId field.
func (o *ProjectForListDto) SetCloudCredentialId(v int32) {
	o.CloudCredentialId.Set(&v)
}

// SetCloudCredentialIdNil sets the value for CloudCredentialId to be an explicit nil
func (o *ProjectForListDto) SetCloudCredentialIdNil() {
	o.CloudCredentialId.Set(nil)
}

// UnsetCloudCredentialId ensures that no value is present for CloudCredentialId, not even an explicit nil
func (o *ProjectForListDto) UnsetCloudCredentialId() {
	o.CloudCredentialId.Unset()
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName.Get()) {
		var ret string
		return ret
	}
	return *o.OrganizationName.Get()
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetOrganizationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationName.Get(), o.OrganizationName.IsSet()
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *ProjectForListDto) HasOrganizationName() bool {
	if o != nil && o.OrganizationName.IsSet() {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given NullableString and assigns it to the OrganizationName field.
func (o *ProjectForListDto) SetOrganizationName(v string) {
	o.OrganizationName.Set(&v)
}

// SetOrganizationNameNil sets the value for OrganizationName to be an explicit nil
func (o *ProjectForListDto) SetOrganizationNameNil() {
	o.OrganizationName.Set(nil)
}

// UnsetOrganizationName ensures that no value is present for OrganizationName, not even an explicit nil
func (o *ProjectForListDto) UnsetOrganizationName() {
	o.OrganizationName.Unset()
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ProjectForListDto) GetOrganizationId() int32 {
	if o == nil || IsNil(o.OrganizationId) {
		var ret int32
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetOrganizationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ProjectForListDto) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given int32 and assigns it to the OrganizationId field.
func (o *ProjectForListDto) SetOrganizationId(v int32) {
	o.OrganizationId = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetPartnerId() int32 {
	if o == nil || IsNil(o.PartnerId.Get()) {
		var ret int32
		return ret
	}
	return *o.PartnerId.Get()
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetPartnerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PartnerId.Get(), o.PartnerId.IsSet()
}

// HasPartnerId returns a boolean if a field has been set.
func (o *ProjectForListDto) HasPartnerId() bool {
	if o != nil && o.PartnerId.IsSet() {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given NullableInt32 and assigns it to the PartnerId field.
func (o *ProjectForListDto) SetPartnerId(v int32) {
	o.PartnerId.Set(&v)
}

// SetPartnerIdNil sets the value for PartnerId to be an explicit nil
func (o *ProjectForListDto) SetPartnerIdNil() {
	o.PartnerId.Set(nil)
}

// UnsetPartnerId ensures that no value is present for PartnerId, not even an explicit nil
func (o *ProjectForListDto) UnsetPartnerId() {
	o.PartnerId.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *ProjectForListDto) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *ProjectForListDto) SetStatus(v string) {
	o.Status.Set(&v)
}

// SetStatusNil sets the value for Status to be an explicit nil
func (o *ProjectForListDto) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *ProjectForListDto) UnsetStatus() {
	o.Status.Unset()
}

// GetHealth returns the Health field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetHealth() string {
	if o == nil || IsNil(o.Health.Get()) {
		var ret string
		return ret
	}
	return *o.Health.Get()
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetHealthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Health.Get(), o.Health.IsSet()
}

// HasHealth returns a boolean if a field has been set.
func (o *ProjectForListDto) HasHealth() bool {
	if o != nil && o.Health.IsSet() {
		return true
	}

	return false
}

// SetHealth gets a reference to the given NullableString and assigns it to the Health field.
func (o *ProjectForListDto) SetHealth(v string) {
	o.Health.Set(&v)
}

// SetHealthNil sets the value for Health to be an explicit nil
func (o *ProjectForListDto) SetHealthNil() {
	o.Health.Set(nil)
}

// UnsetHealth ensures that no value is present for Health, not even an explicit nil
func (o *ProjectForListDto) UnsetHealth() {
	o.Health.Unset()
}

// GetAccessIp returns the AccessIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetAccessIp() string {
	if o == nil || IsNil(o.AccessIp.Get()) {
		var ret string
		return ret
	}
	return *o.AccessIp.Get()
}

// GetAccessIpOk returns a tuple with the AccessIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetAccessIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessIp.Get(), o.AccessIp.IsSet()
}

// HasAccessIp returns a boolean if a field has been set.
func (o *ProjectForListDto) HasAccessIp() bool {
	if o != nil && o.AccessIp.IsSet() {
		return true
	}

	return false
}

// SetAccessIp gets a reference to the given NullableString and assigns it to the AccessIp field.
func (o *ProjectForListDto) SetAccessIp(v string) {
	o.AccessIp.Set(&v)
}

// SetAccessIpNil sets the value for AccessIp to be an explicit nil
func (o *ProjectForListDto) SetAccessIpNil() {
	o.AccessIp.Set(nil)
}

// UnsetAccessIp ensures that no value is present for AccessIp, not even an explicit nil
func (o *ProjectForListDto) UnsetAccessIp() {
	o.AccessIp.Unset()
}

// GetCloudType returns the CloudType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetCloudType() string {
	if o == nil || IsNil(o.CloudType.Get()) {
		var ret string
		return ret
	}
	return *o.CloudType.Get()
}

// GetCloudTypeOk returns a tuple with the CloudType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetCloudTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloudType.Get(), o.CloudType.IsSet()
}

// HasCloudType returns a boolean if a field has been set.
func (o *ProjectForListDto) HasCloudType() bool {
	if o != nil && o.CloudType.IsSet() {
		return true
	}

	return false
}

// SetCloudType gets a reference to the given NullableString and assigns it to the CloudType field.
func (o *ProjectForListDto) SetCloudType(v string) {
	o.CloudType.Set(&v)
}

// SetCloudTypeNil sets the value for CloudType to be an explicit nil
func (o *ProjectForListDto) SetCloudTypeNil() {
	o.CloudType.Set(nil)
}

// UnsetCloudType ensures that no value is present for CloudType, not even an explicit nil
func (o *ProjectForListDto) UnsetCloudType() {
	o.CloudType.Unset()
}

// GetKubesprayCurrentVersion returns the KubesprayCurrentVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetKubesprayCurrentVersion() string {
	if o == nil || IsNil(o.KubesprayCurrentVersion.Get()) {
		var ret string
		return ret
	}
	return *o.KubesprayCurrentVersion.Get()
}

// GetKubesprayCurrentVersionOk returns a tuple with the KubesprayCurrentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetKubesprayCurrentVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KubesprayCurrentVersion.Get(), o.KubesprayCurrentVersion.IsSet()
}

// HasKubesprayCurrentVersion returns a boolean if a field has been set.
func (o *ProjectForListDto) HasKubesprayCurrentVersion() bool {
	if o != nil && o.KubesprayCurrentVersion.IsSet() {
		return true
	}

	return false
}

// SetKubesprayCurrentVersion gets a reference to the given NullableString and assigns it to the KubesprayCurrentVersion field.
func (o *ProjectForListDto) SetKubesprayCurrentVersion(v string) {
	o.KubesprayCurrentVersion.Set(&v)
}

// SetKubesprayCurrentVersionNil sets the value for KubesprayCurrentVersion to be an explicit nil
func (o *ProjectForListDto) SetKubesprayCurrentVersionNil() {
	o.KubesprayCurrentVersion.Set(nil)
}

// UnsetKubesprayCurrentVersion ensures that no value is present for KubesprayCurrentVersion, not even an explicit nil
func (o *ProjectForListDto) UnsetKubesprayCurrentVersion() {
	o.KubesprayCurrentVersion.Unset()
}

// GetKubesprayTargetVersion returns the KubesprayTargetVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetKubesprayTargetVersion() string {
	if o == nil || IsNil(o.KubesprayTargetVersion.Get()) {
		var ret string
		return ret
	}
	return *o.KubesprayTargetVersion.Get()
}

// GetKubesprayTargetVersionOk returns a tuple with the KubesprayTargetVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetKubesprayTargetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KubesprayTargetVersion.Get(), o.KubesprayTargetVersion.IsSet()
}

// HasKubesprayTargetVersion returns a boolean if a field has been set.
func (o *ProjectForListDto) HasKubesprayTargetVersion() bool {
	if o != nil && o.KubesprayTargetVersion.IsSet() {
		return true
	}

	return false
}

// SetKubesprayTargetVersion gets a reference to the given NullableString and assigns it to the KubesprayTargetVersion field.
func (o *ProjectForListDto) SetKubesprayTargetVersion(v string) {
	o.KubesprayTargetVersion.Set(&v)
}

// SetKubesprayTargetVersionNil sets the value for KubesprayTargetVersion to be an explicit nil
func (o *ProjectForListDto) SetKubesprayTargetVersionNil() {
	o.KubesprayTargetVersion.Set(nil)
}

// UnsetKubesprayTargetVersion ensures that no value is present for KubesprayTargetVersion, not even an explicit nil
func (o *ProjectForListDto) UnsetKubesprayTargetVersion() {
	o.KubesprayTargetVersion.Unset()
}

// GetKubernetesCurrentVersion returns the KubernetesCurrentVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetKubernetesCurrentVersion() string {
	if o == nil || IsNil(o.KubernetesCurrentVersion.Get()) {
		var ret string
		return ret
	}
	return *o.KubernetesCurrentVersion.Get()
}

// GetKubernetesCurrentVersionOk returns a tuple with the KubernetesCurrentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetKubernetesCurrentVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KubernetesCurrentVersion.Get(), o.KubernetesCurrentVersion.IsSet()
}

// HasKubernetesCurrentVersion returns a boolean if a field has been set.
func (o *ProjectForListDto) HasKubernetesCurrentVersion() bool {
	if o != nil && o.KubernetesCurrentVersion.IsSet() {
		return true
	}

	return false
}

// SetKubernetesCurrentVersion gets a reference to the given NullableString and assigns it to the KubernetesCurrentVersion field.
func (o *ProjectForListDto) SetKubernetesCurrentVersion(v string) {
	o.KubernetesCurrentVersion.Set(&v)
}

// SetKubernetesCurrentVersionNil sets the value for KubernetesCurrentVersion to be an explicit nil
func (o *ProjectForListDto) SetKubernetesCurrentVersionNil() {
	o.KubernetesCurrentVersion.Set(nil)
}

// UnsetKubernetesCurrentVersion ensures that no value is present for KubernetesCurrentVersion, not even an explicit nil
func (o *ProjectForListDto) UnsetKubernetesCurrentVersion() {
	o.KubernetesCurrentVersion.Unset()
}

// GetKubernetesTargetVersion returns the KubernetesTargetVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetKubernetesTargetVersion() string {
	if o == nil || IsNil(o.KubernetesTargetVersion.Get()) {
		var ret string
		return ret
	}
	return *o.KubernetesTargetVersion.Get()
}

// GetKubernetesTargetVersionOk returns a tuple with the KubernetesTargetVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetKubernetesTargetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KubernetesTargetVersion.Get(), o.KubernetesTargetVersion.IsSet()
}

// HasKubernetesTargetVersion returns a boolean if a field has been set.
func (o *ProjectForListDto) HasKubernetesTargetVersion() bool {
	if o != nil && o.KubernetesTargetVersion.IsSet() {
		return true
	}

	return false
}

// SetKubernetesTargetVersion gets a reference to the given NullableString and assigns it to the KubernetesTargetVersion field.
func (o *ProjectForListDto) SetKubernetesTargetVersion(v string) {
	o.KubernetesTargetVersion.Set(&v)
}

// SetKubernetesTargetVersionNil sets the value for KubernetesTargetVersion to be an explicit nil
func (o *ProjectForListDto) SetKubernetesTargetVersionNil() {
	o.KubernetesTargetVersion.Set(nil)
}

// UnsetKubernetesTargetVersion ensures that no value is present for KubernetesTargetVersion, not even an explicit nil
func (o *ProjectForListDto) UnsetKubernetesTargetVersion() {
	o.KubernetesTargetVersion.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ProjectForListDto) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableTime and assigns it to the UpdatedAt field.
func (o *ProjectForListDto) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *ProjectForListDto) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *ProjectForListDto) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

// GetMonitoringCredential returns the MonitoringCredential field value if set, zero value otherwise.
func (o *ProjectForListDto) GetMonitoringCredential() MonitoringCredentialsListDto {
	if o == nil || IsNil(o.MonitoringCredential) {
		var ret MonitoringCredentialsListDto
		return ret
	}
	return *o.MonitoringCredential
}

// GetMonitoringCredentialOk returns a tuple with the MonitoringCredential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetMonitoringCredentialOk() (*MonitoringCredentialsListDto, bool) {
	if o == nil || IsNil(o.MonitoringCredential) {
		return nil, false
	}
	return o.MonitoringCredential, true
}

// HasMonitoringCredential returns a boolean if a field has been set.
func (o *ProjectForListDto) HasMonitoringCredential() bool {
	if o != nil && !IsNil(o.MonitoringCredential) {
		return true
	}

	return false
}

// SetMonitoringCredential gets a reference to the given MonitoringCredentialsListDto and assigns it to the MonitoringCredential field.
func (o *ProjectForListDto) SetMonitoringCredential(v MonitoringCredentialsListDto) {
	o.MonitoringCredential = &v
}

// GetIsAutoscalingEnabled returns the IsAutoscalingEnabled field value if set, zero value otherwise.
func (o *ProjectForListDto) GetIsAutoscalingEnabled() bool {
	if o == nil || IsNil(o.IsAutoscalingEnabled) {
		var ret bool
		return ret
	}
	return *o.IsAutoscalingEnabled
}

// GetIsAutoscalingEnabledOk returns a tuple with the IsAutoscalingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetIsAutoscalingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutoscalingEnabled) {
		return nil, false
	}
	return o.IsAutoscalingEnabled, true
}

// HasIsAutoscalingEnabled returns a boolean if a field has been set.
func (o *ProjectForListDto) HasIsAutoscalingEnabled() bool {
	if o != nil && !IsNil(o.IsAutoscalingEnabled) {
		return true
	}

	return false
}

// SetIsAutoscalingEnabled gets a reference to the given bool and assigns it to the IsAutoscalingEnabled field.
func (o *ProjectForListDto) SetIsAutoscalingEnabled(v bool) {
	o.IsAutoscalingEnabled = &v
}

// GetFlavors returns the Flavors field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetFlavors() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Flavors
}

// GetFlavorsOk returns a tuple with the Flavors field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetFlavorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Flavors) {
		return nil, false
	}
	return o.Flavors, true
}

// HasFlavors returns a boolean if a field has been set.
func (o *ProjectForListDto) HasFlavors() bool {
	if o != nil && IsNil(o.Flavors) {
		return true
	}

	return false
}

// SetFlavors gets a reference to the given []string and assigns it to the Flavors field.
func (o *ProjectForListDto) SetFlavors(v []string) {
	o.Flavors = v
}

// GetAccessProfile returns the AccessProfile field value if set, zero value otherwise.
func (o *ProjectForListDto) GetAccessProfile() AccessProfilesForProjectListDto {
	if o == nil || IsNil(o.AccessProfile) {
		var ret AccessProfilesForProjectListDto
		return ret
	}
	return *o.AccessProfile
}

// GetAccessProfileOk returns a tuple with the AccessProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetAccessProfileOk() (*AccessProfilesForProjectListDto, bool) {
	if o == nil || IsNil(o.AccessProfile) {
		return nil, false
	}
	return o.AccessProfile, true
}

// HasAccessProfile returns a boolean if a field has been set.
func (o *ProjectForListDto) HasAccessProfile() bool {
	if o != nil && !IsNil(o.AccessProfile) {
		return true
	}

	return false
}

// SetAccessProfile gets a reference to the given AccessProfilesForProjectListDto and assigns it to the AccessProfile field.
func (o *ProjectForListDto) SetAccessProfile(v AccessProfilesForProjectListDto) {
	o.AccessProfile = &v
}

// GetKubernetesProfiles returns the KubernetesProfiles field value if set, zero value otherwise.
func (o *ProjectForListDto) GetKubernetesProfiles() KubernetesProfilesLisForPollerDto {
	if o == nil || IsNil(o.KubernetesProfiles) {
		var ret KubernetesProfilesLisForPollerDto
		return ret
	}
	return *o.KubernetesProfiles
}

// GetKubernetesProfilesOk returns a tuple with the KubernetesProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetKubernetesProfilesOk() (*KubernetesProfilesLisForPollerDto, bool) {
	if o == nil || IsNil(o.KubernetesProfiles) {
		return nil, false
	}
	return o.KubernetesProfiles, true
}

// HasKubernetesProfiles returns a boolean if a field has been set.
func (o *ProjectForListDto) HasKubernetesProfiles() bool {
	if o != nil && !IsNil(o.KubernetesProfiles) {
		return true
	}

	return false
}

// SetKubernetesProfiles gets a reference to the given KubernetesProfilesLisForPollerDto and assigns it to the KubernetesProfiles field.
func (o *ProjectForListDto) SetKubernetesProfiles(v KubernetesProfilesLisForPollerDto) {
	o.KubernetesProfiles = &v
}

// GetOpaProfile returns the OpaProfile field value if set, zero value otherwise.
func (o *ProjectForListDto) GetOpaProfile() OpaProfileListDto {
	if o == nil || IsNil(o.OpaProfile) {
		var ret OpaProfileListDto
		return ret
	}
	return *o.OpaProfile
}

// GetOpaProfileOk returns a tuple with the OpaProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetOpaProfileOk() (*OpaProfileListDto, bool) {
	if o == nil || IsNil(o.OpaProfile) {
		return nil, false
	}
	return o.OpaProfile, true
}

// HasOpaProfile returns a boolean if a field has been set.
func (o *ProjectForListDto) HasOpaProfile() bool {
	if o != nil && !IsNil(o.OpaProfile) {
		return true
	}

	return false
}

// SetOpaProfile gets a reference to the given OpaProfileListDto and assigns it to the OpaProfile field.
func (o *ProjectForListDto) SetOpaProfile(v OpaProfileListDto) {
	o.OpaProfile = &v
}

// GetKubernetesAlerts returns the KubernetesAlerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetKubernetesAlerts() []KubernetesAlertDto {
	if o == nil {
		var ret []KubernetesAlertDto
		return ret
	}
	return o.KubernetesAlerts
}

// GetKubernetesAlertsOk returns a tuple with the KubernetesAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetKubernetesAlertsOk() ([]KubernetesAlertDto, bool) {
	if o == nil || IsNil(o.KubernetesAlerts) {
		return nil, false
	}
	return o.KubernetesAlerts, true
}

// HasKubernetesAlerts returns a boolean if a field has been set.
func (o *ProjectForListDto) HasKubernetesAlerts() bool {
	if o != nil && IsNil(o.KubernetesAlerts) {
		return true
	}

	return false
}

// SetKubernetesAlerts gets a reference to the given []KubernetesAlertDto and assigns it to the KubernetesAlerts field.
func (o *ProjectForListDto) SetKubernetesAlerts(v []KubernetesAlertDto) {
	o.KubernetesAlerts = v
}

// GetIsDeleteCluster returns the IsDeleteCluster field value if set, zero value otherwise.
func (o *ProjectForListDto) GetIsDeleteCluster() bool {
	if o == nil || IsNil(o.IsDeleteCluster) {
		var ret bool
		return ret
	}
	return *o.IsDeleteCluster
}

// GetIsDeleteClusterOk returns a tuple with the IsDeleteCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetIsDeleteClusterOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleteCluster) {
		return nil, false
	}
	return o.IsDeleteCluster, true
}

// HasIsDeleteCluster returns a boolean if a field has been set.
func (o *ProjectForListDto) HasIsDeleteCluster() bool {
	if o != nil && !IsNil(o.IsDeleteCluster) {
		return true
	}

	return false
}

// SetIsDeleteCluster gets a reference to the given bool and assigns it to the IsDeleteCluster field.
func (o *ProjectForListDto) SetIsDeleteCluster(v bool) {
	o.IsDeleteCluster = &v
}

// GetTaikunPrivateSSHKey returns the TaikunPrivateSSHKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetTaikunPrivateSSHKey() string {
	if o == nil || IsNil(o.TaikunPrivateSSHKey.Get()) {
		var ret string
		return ret
	}
	return *o.TaikunPrivateSSHKey.Get()
}

// GetTaikunPrivateSSHKeyOk returns a tuple with the TaikunPrivateSSHKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetTaikunPrivateSSHKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaikunPrivateSSHKey.Get(), o.TaikunPrivateSSHKey.IsSet()
}

// HasTaikunPrivateSSHKey returns a boolean if a field has been set.
func (o *ProjectForListDto) HasTaikunPrivateSSHKey() bool {
	if o != nil && o.TaikunPrivateSSHKey.IsSet() {
		return true
	}

	return false
}

// SetTaikunPrivateSSHKey gets a reference to the given NullableString and assigns it to the TaikunPrivateSSHKey field.
func (o *ProjectForListDto) SetTaikunPrivateSSHKey(v string) {
	o.TaikunPrivateSSHKey.Set(&v)
}

// SetTaikunPrivateSSHKeyNil sets the value for TaikunPrivateSSHKey to be an explicit nil
func (o *ProjectForListDto) SetTaikunPrivateSSHKeyNil() {
	o.TaikunPrivateSSHKey.Set(nil)
}

// UnsetTaikunPrivateSSHKey ensures that no value is present for TaikunPrivateSSHKey, not even an explicit nil
func (o *ProjectForListDto) UnsetTaikunPrivateSSHKey() {
	o.TaikunPrivateSSHKey.Unset()
}

// GetTaikunPublicSSHKey returns the TaikunPublicSSHKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetTaikunPublicSSHKey() string {
	if o == nil || IsNil(o.TaikunPublicSSHKey.Get()) {
		var ret string
		return ret
	}
	return *o.TaikunPublicSSHKey.Get()
}

// GetTaikunPublicSSHKeyOk returns a tuple with the TaikunPublicSSHKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetTaikunPublicSSHKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaikunPublicSSHKey.Get(), o.TaikunPublicSSHKey.IsSet()
}

// HasTaikunPublicSSHKey returns a boolean if a field has been set.
func (o *ProjectForListDto) HasTaikunPublicSSHKey() bool {
	if o != nil && o.TaikunPublicSSHKey.IsSet() {
		return true
	}

	return false
}

// SetTaikunPublicSSHKey gets a reference to the given NullableString and assigns it to the TaikunPublicSSHKey field.
func (o *ProjectForListDto) SetTaikunPublicSSHKey(v string) {
	o.TaikunPublicSSHKey.Set(&v)
}

// SetTaikunPublicSSHKeyNil sets the value for TaikunPublicSSHKey to be an explicit nil
func (o *ProjectForListDto) SetTaikunPublicSSHKeyNil() {
	o.TaikunPublicSSHKey.Set(nil)
}

// UnsetTaikunPublicSSHKey ensures that no value is present for TaikunPublicSSHKey, not even an explicit nil
func (o *ProjectForListDto) UnsetTaikunPublicSSHKey() {
	o.TaikunPublicSSHKey.Unset()
}

// GetGoogleProjectId returns the GoogleProjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetGoogleProjectId() string {
	if o == nil || IsNil(o.GoogleProjectId.Get()) {
		var ret string
		return ret
	}
	return *o.GoogleProjectId.Get()
}

// GetGoogleProjectIdOk returns a tuple with the GoogleProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetGoogleProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GoogleProjectId.Get(), o.GoogleProjectId.IsSet()
}

// HasGoogleProjectId returns a boolean if a field has been set.
func (o *ProjectForListDto) HasGoogleProjectId() bool {
	if o != nil && o.GoogleProjectId.IsSet() {
		return true
	}

	return false
}

// SetGoogleProjectId gets a reference to the given NullableString and assigns it to the GoogleProjectId field.
func (o *ProjectForListDto) SetGoogleProjectId(v string) {
	o.GoogleProjectId.Set(&v)
}

// SetGoogleProjectIdNil sets the value for GoogleProjectId to be an explicit nil
func (o *ProjectForListDto) SetGoogleProjectIdNil() {
	o.GoogleProjectId.Set(nil)
}

// UnsetGoogleProjectId ensures that no value is present for GoogleProjectId, not even an explicit nil
func (o *ProjectForListDto) UnsetGoogleProjectId() {
	o.GoogleProjectId.Unset()
}

// GetCidr returns the Cidr field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetCidr() string {
	if o == nil || IsNil(o.Cidr.Get()) {
		var ret string
		return ret
	}
	return *o.Cidr.Get()
}

// GetCidrOk returns a tuple with the Cidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetCidrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cidr.Get(), o.Cidr.IsSet()
}

// HasCidr returns a boolean if a field has been set.
func (o *ProjectForListDto) HasCidr() bool {
	if o != nil && o.Cidr.IsSet() {
		return true
	}

	return false
}

// SetCidr gets a reference to the given NullableString and assigns it to the Cidr field.
func (o *ProjectForListDto) SetCidr(v string) {
	o.Cidr.Set(&v)
}

// SetCidrNil sets the value for Cidr to be an explicit nil
func (o *ProjectForListDto) SetCidrNil() {
	o.Cidr.Set(nil)
}

// UnsetCidr ensures that no value is present for Cidr, not even an explicit nil
func (o *ProjectForListDto) UnsetCidr() {
	o.Cidr.Unset()
}

// GetNetMask returns the NetMask field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetNetMask() int32 {
	if o == nil || IsNil(o.NetMask.Get()) {
		var ret int32
		return ret
	}
	return *o.NetMask.Get()
}

// GetNetMaskOk returns a tuple with the NetMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetNetMaskOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetMask.Get(), o.NetMask.IsSet()
}

// HasNetMask returns a boolean if a field has been set.
func (o *ProjectForListDto) HasNetMask() bool {
	if o != nil && o.NetMask.IsSet() {
		return true
	}

	return false
}

// SetNetMask gets a reference to the given NullableInt32 and assigns it to the NetMask field.
func (o *ProjectForListDto) SetNetMask(v int32) {
	o.NetMask.Set(&v)
}

// SetNetMaskNil sets the value for NetMask to be an explicit nil
func (o *ProjectForListDto) SetNetMaskNil() {
	o.NetMask.Set(nil)
}

// UnsetNetMask ensures that no value is present for NetMask, not even an explicit nil
func (o *ProjectForListDto) UnsetNetMask() {
	o.NetMask.Unset()
}

// GetPrivateIp returns the PrivateIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetPrivateIp() string {
	if o == nil || IsNil(o.PrivateIp.Get()) {
		var ret string
		return ret
	}
	return *o.PrivateIp.Get()
}

// GetPrivateIpOk returns a tuple with the PrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetPrivateIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrivateIp.Get(), o.PrivateIp.IsSet()
}

// HasPrivateIp returns a boolean if a field has been set.
func (o *ProjectForListDto) HasPrivateIp() bool {
	if o != nil && o.PrivateIp.IsSet() {
		return true
	}

	return false
}

// SetPrivateIp gets a reference to the given NullableString and assigns it to the PrivateIp field.
func (o *ProjectForListDto) SetPrivateIp(v string) {
	o.PrivateIp.Set(&v)
}

// SetPrivateIpNil sets the value for PrivateIp to be an explicit nil
func (o *ProjectForListDto) SetPrivateIpNil() {
	o.PrivateIp.Set(nil)
}

// UnsetPrivateIp ensures that no value is present for PrivateIp, not even an explicit nil
func (o *ProjectForListDto) UnsetPrivateIp() {
	o.PrivateIp.Unset()
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetPublicIp() string {
	if o == nil || IsNil(o.PublicIp.Get()) {
		var ret string
		return ret
	}
	return *o.PublicIp.Get()
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetPublicIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublicIp.Get(), o.PublicIp.IsSet()
}

// HasPublicIp returns a boolean if a field has been set.
func (o *ProjectForListDto) HasPublicIp() bool {
	if o != nil && o.PublicIp.IsSet() {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given NullableString and assigns it to the PublicIp field.
func (o *ProjectForListDto) SetPublicIp(v string) {
	o.PublicIp.Set(&v)
}

// SetPublicIpNil sets the value for PublicIp to be an explicit nil
func (o *ProjectForListDto) SetPublicIpNil() {
	o.PublicIp.Set(nil)
}

// UnsetPublicIp ensures that no value is present for PublicIp, not even an explicit nil
func (o *ProjectForListDto) UnsetPublicIp() {
	o.PublicIp.Unset()
}

// GetIsKubevapEnabled returns the IsKubevapEnabled field value if set, zero value otherwise.
func (o *ProjectForListDto) GetIsKubevapEnabled() bool {
	if o == nil || IsNil(o.IsKubevapEnabled) {
		var ret bool
		return ret
	}
	return *o.IsKubevapEnabled
}

// GetIsKubevapEnabledOk returns a tuple with the IsKubevapEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetIsKubevapEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsKubevapEnabled) {
		return nil, false
	}
	return o.IsKubevapEnabled, true
}

// HasIsKubevapEnabled returns a boolean if a field has been set.
func (o *ProjectForListDto) HasIsKubevapEnabled() bool {
	if o != nil && !IsNil(o.IsKubevapEnabled) {
		return true
	}

	return false
}

// SetIsKubevapEnabled gets a reference to the given bool and assigns it to the IsKubevapEnabled field.
func (o *ProjectForListDto) SetIsKubevapEnabled(v bool) {
	o.IsKubevapEnabled = &v
}

// GetTanzuReleaseVersion returns the TanzuReleaseVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetTanzuReleaseVersion() string {
	if o == nil || IsNil(o.TanzuReleaseVersion.Get()) {
		var ret string
		return ret
	}
	return *o.TanzuReleaseVersion.Get()
}

// GetTanzuReleaseVersionOk returns a tuple with the TanzuReleaseVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetTanzuReleaseVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TanzuReleaseVersion.Get(), o.TanzuReleaseVersion.IsSet()
}

// HasTanzuReleaseVersion returns a boolean if a field has been set.
func (o *ProjectForListDto) HasTanzuReleaseVersion() bool {
	if o != nil && o.TanzuReleaseVersion.IsSet() {
		return true
	}

	return false
}

// SetTanzuReleaseVersion gets a reference to the given NullableString and assigns it to the TanzuReleaseVersion field.
func (o *ProjectForListDto) SetTanzuReleaseVersion(v string) {
	o.TanzuReleaseVersion.Set(&v)
}

// SetTanzuReleaseVersionNil sets the value for TanzuReleaseVersion to be an explicit nil
func (o *ProjectForListDto) SetTanzuReleaseVersionNil() {
	o.TanzuReleaseVersion.Set(nil)
}

// UnsetTanzuReleaseVersion ensures that no value is present for TanzuReleaseVersion, not even an explicit nil
func (o *ProjectForListDto) UnsetTanzuReleaseVersion() {
	o.TanzuReleaseVersion.Unset()
}

// GetNfsDiskSize returns the NfsDiskSize field value if set, zero value otherwise.
func (o *ProjectForListDto) GetNfsDiskSize() int32 {
	if o == nil || IsNil(o.NfsDiskSize) {
		var ret int32
		return ret
	}
	return *o.NfsDiskSize
}

// GetNfsDiskSizeOk returns a tuple with the NfsDiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetNfsDiskSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.NfsDiskSize) {
		return nil, false
	}
	return o.NfsDiskSize, true
}

// HasNfsDiskSize returns a boolean if a field has been set.
func (o *ProjectForListDto) HasNfsDiskSize() bool {
	if o != nil && !IsNil(o.NfsDiskSize) {
		return true
	}

	return false
}

// SetNfsDiskSize gets a reference to the given int32 and assigns it to the NfsDiskSize field.
func (o *ProjectForListDto) SetNfsDiskSize(v int32) {
	o.NfsDiskSize = &v
}

// GetKubevapEnabeledKubernetesVersions returns the KubevapEnabeledKubernetesVersions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetKubevapEnabeledKubernetesVersions() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.KubevapEnabeledKubernetesVersions
}

// GetKubevapEnabeledKubernetesVersionsOk returns a tuple with the KubevapEnabeledKubernetesVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetKubevapEnabeledKubernetesVersionsOk() ([]string, bool) {
	if o == nil || IsNil(o.KubevapEnabeledKubernetesVersions) {
		return nil, false
	}
	return o.KubevapEnabeledKubernetesVersions, true
}

// HasKubevapEnabeledKubernetesVersions returns a boolean if a field has been set.
func (o *ProjectForListDto) HasKubevapEnabeledKubernetesVersions() bool {
	if o != nil && IsNil(o.KubevapEnabeledKubernetesVersions) {
		return true
	}

	return false
}

// SetKubevapEnabeledKubernetesVersions gets a reference to the given []string and assigns it to the KubevapEnabeledKubernetesVersions field.
func (o *ProjectForListDto) SetKubevapEnabeledKubernetesVersions(v []string) {
	o.KubevapEnabeledKubernetesVersions = v
}

// GetAwsProjectAZSubnets returns the AwsProjectAZSubnets field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetAwsProjectAZSubnets() []AwsProjectAZSubnetDto {
	if o == nil {
		var ret []AwsProjectAZSubnetDto
		return ret
	}
	return o.AwsProjectAZSubnets
}

// GetAwsProjectAZSubnetsOk returns a tuple with the AwsProjectAZSubnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetAwsProjectAZSubnetsOk() ([]AwsProjectAZSubnetDto, bool) {
	if o == nil || IsNil(o.AwsProjectAZSubnets) {
		return nil, false
	}
	return o.AwsProjectAZSubnets, true
}

// HasAwsProjectAZSubnets returns a boolean if a field has been set.
func (o *ProjectForListDto) HasAwsProjectAZSubnets() bool {
	if o != nil && IsNil(o.AwsProjectAZSubnets) {
		return true
	}

	return false
}

// SetAwsProjectAZSubnets gets a reference to the given []AwsProjectAZSubnetDto and assigns it to the AwsProjectAZSubnets field.
func (o *ProjectForListDto) SetAwsProjectAZSubnets(v []AwsProjectAZSubnetDto) {
	o.AwsProjectAZSubnets = v
}

// GetAvailabilityZones returns the AvailabilityZones field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectForListDto) GetAvailabilityZones() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.AvailabilityZones
}

// GetAvailabilityZonesOk returns a tuple with the AvailabilityZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectForListDto) GetAvailabilityZonesOk() ([]string, bool) {
	if o == nil || IsNil(o.AvailabilityZones) {
		return nil, false
	}
	return o.AvailabilityZones, true
}

// HasAvailabilityZones returns a boolean if a field has been set.
func (o *ProjectForListDto) HasAvailabilityZones() bool {
	if o != nil && IsNil(o.AvailabilityZones) {
		return true
	}

	return false
}

// SetAvailabilityZones gets a reference to the given []string and assigns it to the AvailabilityZones field.
func (o *ProjectForListDto) SetAvailabilityZones(v []string) {
	o.AvailabilityZones = v
}

// GetWorkersCount returns the WorkersCount field value if set, zero value otherwise.
func (o *ProjectForListDto) GetWorkersCount() int32 {
	if o == nil || IsNil(o.WorkersCount) {
		var ret int32
		return ret
	}
	return *o.WorkersCount
}

// GetWorkersCountOk returns a tuple with the WorkersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetWorkersCountOk() (*int32, bool) {
	if o == nil || IsNil(o.WorkersCount) {
		return nil, false
	}
	return o.WorkersCount, true
}

// HasWorkersCount returns a boolean if a field has been set.
func (o *ProjectForListDto) HasWorkersCount() bool {
	if o != nil && !IsNil(o.WorkersCount) {
		return true
	}

	return false
}

// SetWorkersCount gets a reference to the given int32 and assigns it to the WorkersCount field.
func (o *ProjectForListDto) SetWorkersCount(v int32) {
	o.WorkersCount = &v
}

// GetTaikunLB returns the TaikunLB field value if set, zero value otherwise.
func (o *ProjectForListDto) GetTaikunLB() TaikunLbDto {
	if o == nil || IsNil(o.TaikunLB) {
		var ret TaikunLbDto
		return ret
	}
	return *o.TaikunLB
}

// GetTaikunLBOk returns a tuple with the TaikunLB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetTaikunLBOk() (*TaikunLbDto, bool) {
	if o == nil || IsNil(o.TaikunLB) {
		return nil, false
	}
	return o.TaikunLB, true
}

// HasTaikunLB returns a boolean if a field has been set.
func (o *ProjectForListDto) HasTaikunLB() bool {
	if o != nil && !IsNil(o.TaikunLB) {
		return true
	}

	return false
}

// SetTaikunLB gets a reference to the given TaikunLbDto and assigns it to the TaikunLB field.
func (o *ProjectForListDto) SetTaikunLB(v TaikunLbDto) {
	o.TaikunLB = &v
}

// GetS3Credential returns the S3Credential field value if set, zero value otherwise.
func (o *ProjectForListDto) GetS3Credential() S3CredentialForProjectDto {
	if o == nil || IsNil(o.S3Credential) {
		var ret S3CredentialForProjectDto
		return ret
	}
	return *o.S3Credential
}

// GetS3CredentialOk returns a tuple with the S3Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetS3CredentialOk() (*S3CredentialForProjectDto, bool) {
	if o == nil || IsNil(o.S3Credential) {
		return nil, false
	}
	return o.S3Credential, true
}

// HasS3Credential returns a boolean if a field has been set.
func (o *ProjectForListDto) HasS3Credential() bool {
	if o != nil && !IsNil(o.S3Credential) {
		return true
	}

	return false
}

// SetS3Credential gets a reference to the given S3CredentialForProjectDto and assigns it to the S3Credential field.
func (o *ProjectForListDto) SetS3Credential(v S3CredentialForProjectDto) {
	o.S3Credential = &v
}

// GetProjectRevision returns the ProjectRevision field value if set, zero value otherwise.
func (o *ProjectForListDto) GetProjectRevision() ProjectRevisionDto {
	if o == nil || IsNil(o.ProjectRevision) {
		var ret ProjectRevisionDto
		return ret
	}
	return *o.ProjectRevision
}

// GetProjectRevisionOk returns a tuple with the ProjectRevision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetProjectRevisionOk() (*ProjectRevisionDto, bool) {
	if o == nil || IsNil(o.ProjectRevision) {
		return nil, false
	}
	return o.ProjectRevision, true
}

// HasProjectRevision returns a boolean if a field has been set.
func (o *ProjectForListDto) HasProjectRevision() bool {
	if o != nil && !IsNil(o.ProjectRevision) {
		return true
	}

	return false
}

// SetProjectRevision gets a reference to the given ProjectRevisionDto and assigns it to the ProjectRevision field.
func (o *ProjectForListDto) SetProjectRevision(v ProjectRevisionDto) {
	o.ProjectRevision = &v
}

// GetProjectActionDto returns the ProjectActionDto field value if set, zero value otherwise.
func (o *ProjectForListDto) GetProjectActionDto() ProjectActionDto {
	if o == nil || IsNil(o.ProjectActionDto) {
		var ret ProjectActionDto
		return ret
	}
	return *o.ProjectActionDto
}

// GetProjectActionDtoOk returns a tuple with the ProjectActionDto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetProjectActionDtoOk() (*ProjectActionDto, bool) {
	if o == nil || IsNil(o.ProjectActionDto) {
		return nil, false
	}
	return o.ProjectActionDto, true
}

// HasProjectActionDto returns a boolean if a field has been set.
func (o *ProjectForListDto) HasProjectActionDto() bool {
	if o != nil && !IsNil(o.ProjectActionDto) {
		return true
	}

	return false
}

// SetProjectActionDto gets a reference to the given ProjectActionDto and assigns it to the ProjectActionDto field.
func (o *ProjectForListDto) SetProjectActionDto(v ProjectActionDto) {
	o.ProjectActionDto = &v
}

// GetAiCredential returns the AiCredential field value if set, zero value otherwise.
func (o *ProjectForListDto) GetAiCredential() AiCredentialDto {
	if o == nil || IsNil(o.AiCredential) {
		var ret AiCredentialDto
		return ret
	}
	return *o.AiCredential
}

// GetAiCredentialOk returns a tuple with the AiCredential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectForListDto) GetAiCredentialOk() (*AiCredentialDto, bool) {
	if o == nil || IsNil(o.AiCredential) {
		return nil, false
	}
	return o.AiCredential, true
}

// HasAiCredential returns a boolean if a field has been set.
func (o *ProjectForListDto) HasAiCredential() bool {
	if o != nil && !IsNil(o.AiCredential) {
		return true
	}

	return false
}

// SetAiCredential gets a reference to the given AiCredentialDto and assigns it to the AiCredential field.
func (o *ProjectForListDto) SetAiCredential(v AiCredentialDto) {
	o.AiCredential = &v
}

func (o ProjectForListDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectForListDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ImageName.IsSet() {
		toSerialize["imageName"] = o.ImageName.Get()
	}
	if o.Token.IsSet() {
		toSerialize["token"] = o.Token.Get()
	}
	if !IsNil(o.IsKubernetes) {
		toSerialize["isKubernetes"] = o.IsKubernetes
	}
	if !IsNil(o.IsLocked) {
		toSerialize["isLocked"] = o.IsLocked
	}
	if !IsNil(o.IsBackupEnabled) {
		toSerialize["isBackupEnabled"] = o.IsBackupEnabled
	}
	if !IsNil(o.IsMonitoringEnabled) {
		toSerialize["isMonitoringEnabled"] = o.IsMonitoringEnabled
	}
	if !IsNil(o.IsOpaEnabled) {
		toSerialize["isOpaEnabled"] = o.IsOpaEnabled
	}
	if !IsNil(o.IsAutoUpgrade) {
		toSerialize["isAutoUpgrade"] = o.IsAutoUpgrade
	}
	if !IsNil(o.AiEnabled) {
		toSerialize["aiEnabled"] = o.AiEnabled
	}
	if o.S3BucketName.IsSet() {
		toSerialize["s3BucketName"] = o.S3BucketName.Get()
	}
	if !IsNil(o.HasKubeConfigFile) {
		toSerialize["hasKubeConfigFile"] = o.HasKubeConfigFile
	}
	if !IsNil(o.HasSelectedFlavors) {
		toSerialize["hasSelectedFlavors"] = o.HasSelectedFlavors
	}
	if !IsNil(o.QuotaId) {
		toSerialize["quotaId"] = o.QuotaId
	}
	if o.CloudCredentialName.IsSet() {
		toSerialize["cloudCredentialName"] = o.CloudCredentialName.Get()
	}
	if o.CloudCredentialId.IsSet() {
		toSerialize["cloudCredentialId"] = o.CloudCredentialId.Get()
	}
	if o.OrganizationName.IsSet() {
		toSerialize["organizationName"] = o.OrganizationName.Get()
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if o.PartnerId.IsSet() {
		toSerialize["partnerId"] = o.PartnerId.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Health.IsSet() {
		toSerialize["health"] = o.Health.Get()
	}
	if o.AccessIp.IsSet() {
		toSerialize["accessIp"] = o.AccessIp.Get()
	}
	if o.CloudType.IsSet() {
		toSerialize["cloudType"] = o.CloudType.Get()
	}
	if o.KubesprayCurrentVersion.IsSet() {
		toSerialize["kubesprayCurrentVersion"] = o.KubesprayCurrentVersion.Get()
	}
	if o.KubesprayTargetVersion.IsSet() {
		toSerialize["kubesprayTargetVersion"] = o.KubesprayTargetVersion.Get()
	}
	if o.KubernetesCurrentVersion.IsSet() {
		toSerialize["kubernetesCurrentVersion"] = o.KubernetesCurrentVersion.Get()
	}
	if o.KubernetesTargetVersion.IsSet() {
		toSerialize["kubernetesTargetVersion"] = o.KubernetesTargetVersion.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updatedAt"] = o.UpdatedAt.Get()
	}
	if !IsNil(o.MonitoringCredential) {
		toSerialize["monitoringCredential"] = o.MonitoringCredential
	}
	if !IsNil(o.IsAutoscalingEnabled) {
		toSerialize["isAutoscalingEnabled"] = o.IsAutoscalingEnabled
	}
	if o.Flavors != nil {
		toSerialize["flavors"] = o.Flavors
	}
	if !IsNil(o.AccessProfile) {
		toSerialize["accessProfile"] = o.AccessProfile
	}
	if !IsNil(o.KubernetesProfiles) {
		toSerialize["kubernetesProfiles"] = o.KubernetesProfiles
	}
	if !IsNil(o.OpaProfile) {
		toSerialize["opaProfile"] = o.OpaProfile
	}
	if o.KubernetesAlerts != nil {
		toSerialize["kubernetesAlerts"] = o.KubernetesAlerts
	}
	if !IsNil(o.IsDeleteCluster) {
		toSerialize["isDeleteCluster"] = o.IsDeleteCluster
	}
	if o.TaikunPrivateSSHKey.IsSet() {
		toSerialize["taikunPrivateSSHKey"] = o.TaikunPrivateSSHKey.Get()
	}
	if o.TaikunPublicSSHKey.IsSet() {
		toSerialize["taikunPublicSSHKey"] = o.TaikunPublicSSHKey.Get()
	}
	if o.GoogleProjectId.IsSet() {
		toSerialize["googleProjectId"] = o.GoogleProjectId.Get()
	}
	if o.Cidr.IsSet() {
		toSerialize["cidr"] = o.Cidr.Get()
	}
	if o.NetMask.IsSet() {
		toSerialize["netMask"] = o.NetMask.Get()
	}
	if o.PrivateIp.IsSet() {
		toSerialize["privateIp"] = o.PrivateIp.Get()
	}
	if o.PublicIp.IsSet() {
		toSerialize["publicIp"] = o.PublicIp.Get()
	}
	if !IsNil(o.IsKubevapEnabled) {
		toSerialize["isKubevapEnabled"] = o.IsKubevapEnabled
	}
	if o.TanzuReleaseVersion.IsSet() {
		toSerialize["tanzuReleaseVersion"] = o.TanzuReleaseVersion.Get()
	}
	if !IsNil(o.NfsDiskSize) {
		toSerialize["nfsDiskSize"] = o.NfsDiskSize
	}
	if o.KubevapEnabeledKubernetesVersions != nil {
		toSerialize["kubevapEnabeledKubernetesVersions"] = o.KubevapEnabeledKubernetesVersions
	}
	if o.AwsProjectAZSubnets != nil {
		toSerialize["awsProjectAZSubnets"] = o.AwsProjectAZSubnets
	}
	if o.AvailabilityZones != nil {
		toSerialize["availabilityZones"] = o.AvailabilityZones
	}
	if !IsNil(o.WorkersCount) {
		toSerialize["workersCount"] = o.WorkersCount
	}
	if !IsNil(o.TaikunLB) {
		toSerialize["taikunLB"] = o.TaikunLB
	}
	if !IsNil(o.S3Credential) {
		toSerialize["s3Credential"] = o.S3Credential
	}
	if !IsNil(o.ProjectRevision) {
		toSerialize["projectRevision"] = o.ProjectRevision
	}
	if !IsNil(o.ProjectActionDto) {
		toSerialize["projectActionDto"] = o.ProjectActionDto
	}
	if !IsNil(o.AiCredential) {
		toSerialize["aiCredential"] = o.AiCredential
	}
	return toSerialize, nil
}

type NullableProjectForListDto struct {
	value *ProjectForListDto
	isSet bool
}

func (v NullableProjectForListDto) Get() *ProjectForListDto {
	return v.value
}

func (v *NullableProjectForListDto) Set(val *ProjectForListDto) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectForListDto) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectForListDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectForListDto(val *ProjectForListDto) *NullableProjectForListDto {
	return &NullableProjectForListDto{value: val, isSet: true}
}

func (v NullableProjectForListDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectForListDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
