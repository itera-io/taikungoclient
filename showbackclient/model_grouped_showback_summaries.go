/*
Taikun - Showback API

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikunshowback

import (
	"encoding/json"
)

// checks if the GroupedShowbackSummaries type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupedShowbackSummaries{}

// GroupedShowbackSummaries struct for GroupedShowbackSummaries
type GroupedShowbackSummaries struct {
	StartDate NullableString `json:"startDate,omitempty"`
	Price     *float64       `json:"price,omitempty"`
}

// NewGroupedShowbackSummaries instantiates a new GroupedShowbackSummaries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupedShowbackSummaries() *GroupedShowbackSummaries {
	this := GroupedShowbackSummaries{}
	return &this
}

// NewGroupedShowbackSummariesWithDefaults instantiates a new GroupedShowbackSummaries object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupedShowbackSummariesWithDefaults() *GroupedShowbackSummaries {
	this := GroupedShowbackSummaries{}
	return &this
}

// GetStartDate returns the StartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GroupedShowbackSummaries) GetStartDate() string {
	if o == nil || IsNil(o.StartDate.Get()) {
		var ret string
		return ret
	}
	return *o.StartDate.Get()
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupedShowbackSummaries) GetStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartDate.Get(), o.StartDate.IsSet()
}

// HasStartDate returns a boolean if a field has been set.
func (o *GroupedShowbackSummaries) HasStartDate() bool {
	if o != nil && o.StartDate.IsSet() {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given NullableString and assigns it to the StartDate field.
func (o *GroupedShowbackSummaries) SetStartDate(v string) {
	o.StartDate.Set(&v)
}

// SetStartDateNil sets the value for StartDate to be an explicit nil
func (o *GroupedShowbackSummaries) SetStartDateNil() {
	o.StartDate.Set(nil)
}

// UnsetStartDate ensures that no value is present for StartDate, not even an explicit nil
func (o *GroupedShowbackSummaries) UnsetStartDate() {
	o.StartDate.Unset()
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *GroupedShowbackSummaries) GetPrice() float64 {
	if o == nil || IsNil(o.Price) {
		var ret float64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupedShowbackSummaries) GetPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *GroupedShowbackSummaries) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float64 and assigns it to the Price field.
func (o *GroupedShowbackSummaries) SetPrice(v float64) {
	o.Price = &v
}

func (o GroupedShowbackSummaries) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupedShowbackSummaries) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.StartDate.IsSet() {
		toSerialize["startDate"] = o.StartDate.Get()
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	return toSerialize, nil
}

type NullableGroupedShowbackSummaries struct {
	value *GroupedShowbackSummaries
	isSet bool
}

func (v NullableGroupedShowbackSummaries) Get() *GroupedShowbackSummaries {
	return v.value
}

func (v *NullableGroupedShowbackSummaries) Set(val *GroupedShowbackSummaries) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupedShowbackSummaries) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupedShowbackSummaries) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupedShowbackSummaries(val *GroupedShowbackSummaries) *NullableGroupedShowbackSummaries {
	return &NullableGroupedShowbackSummaries{value: val, isSet: true}
}

func (v NullableGroupedShowbackSummaries) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupedShowbackSummaries) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
