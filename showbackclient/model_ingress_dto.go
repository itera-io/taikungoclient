/*
Taikun - WebApi

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikunshowback

import (
	"encoding/json"
)

// checks if the IngressDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IngressDto{}

// IngressDto struct for IngressDto
type IngressDto struct {
	MetadataName NullableString `json:"metadataName,omitempty"`
	Hosts        NullableString `json:"hosts,omitempty"`
	Namespace    NullableString `json:"namespace,omitempty"`
	Age          NullableString `json:"age,omitempty"`
}

// NewIngressDto instantiates a new IngressDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIngressDto() *IngressDto {
	this := IngressDto{}
	return &this
}

// NewIngressDtoWithDefaults instantiates a new IngressDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIngressDtoWithDefaults() *IngressDto {
	this := IngressDto{}
	return &this
}

// GetMetadataName returns the MetadataName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IngressDto) GetMetadataName() string {
	if o == nil || IsNil(o.MetadataName.Get()) {
		var ret string
		return ret
	}
	return *o.MetadataName.Get()
}

// GetMetadataNameOk returns a tuple with the MetadataName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IngressDto) GetMetadataNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetadataName.Get(), o.MetadataName.IsSet()
}

// HasMetadataName returns a boolean if a field has been set.
func (o *IngressDto) HasMetadataName() bool {
	if o != nil && o.MetadataName.IsSet() {
		return true
	}

	return false
}

// SetMetadataName gets a reference to the given NullableString and assigns it to the MetadataName field.
func (o *IngressDto) SetMetadataName(v string) {
	o.MetadataName.Set(&v)
}

// SetMetadataNameNil sets the value for MetadataName to be an explicit nil
func (o *IngressDto) SetMetadataNameNil() {
	o.MetadataName.Set(nil)
}

// UnsetMetadataName ensures that no value is present for MetadataName, not even an explicit nil
func (o *IngressDto) UnsetMetadataName() {
	o.MetadataName.Unset()
}

// GetHosts returns the Hosts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IngressDto) GetHosts() string {
	if o == nil || IsNil(o.Hosts.Get()) {
		var ret string
		return ret
	}
	return *o.Hosts.Get()
}

// GetHostsOk returns a tuple with the Hosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IngressDto) GetHostsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Hosts.Get(), o.Hosts.IsSet()
}

// HasHosts returns a boolean if a field has been set.
func (o *IngressDto) HasHosts() bool {
	if o != nil && o.Hosts.IsSet() {
		return true
	}

	return false
}

// SetHosts gets a reference to the given NullableString and assigns it to the Hosts field.
func (o *IngressDto) SetHosts(v string) {
	o.Hosts.Set(&v)
}

// SetHostsNil sets the value for Hosts to be an explicit nil
func (o *IngressDto) SetHostsNil() {
	o.Hosts.Set(nil)
}

// UnsetHosts ensures that no value is present for Hosts, not even an explicit nil
func (o *IngressDto) UnsetHosts() {
	o.Hosts.Unset()
}

// GetNamespace returns the Namespace field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IngressDto) GetNamespace() string {
	if o == nil || IsNil(o.Namespace.Get()) {
		var ret string
		return ret
	}
	return *o.Namespace.Get()
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IngressDto) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Namespace.Get(), o.Namespace.IsSet()
}

// HasNamespace returns a boolean if a field has been set.
func (o *IngressDto) HasNamespace() bool {
	if o != nil && o.Namespace.IsSet() {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given NullableString and assigns it to the Namespace field.
func (o *IngressDto) SetNamespace(v string) {
	o.Namespace.Set(&v)
}

// SetNamespaceNil sets the value for Namespace to be an explicit nil
func (o *IngressDto) SetNamespaceNil() {
	o.Namespace.Set(nil)
}

// UnsetNamespace ensures that no value is present for Namespace, not even an explicit nil
func (o *IngressDto) UnsetNamespace() {
	o.Namespace.Unset()
}

// GetAge returns the Age field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IngressDto) GetAge() string {
	if o == nil || IsNil(o.Age.Get()) {
		var ret string
		return ret
	}
	return *o.Age.Get()
}

// GetAgeOk returns a tuple with the Age field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IngressDto) GetAgeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Age.Get(), o.Age.IsSet()
}

// HasAge returns a boolean if a field has been set.
func (o *IngressDto) HasAge() bool {
	if o != nil && o.Age.IsSet() {
		return true
	}

	return false
}

// SetAge gets a reference to the given NullableString and assigns it to the Age field.
func (o *IngressDto) SetAge(v string) {
	o.Age.Set(&v)
}

// SetAgeNil sets the value for Age to be an explicit nil
func (o *IngressDto) SetAgeNil() {
	o.Age.Set(nil)
}

// UnsetAge ensures that no value is present for Age, not even an explicit nil
func (o *IngressDto) UnsetAge() {
	o.Age.Unset()
}

func (o IngressDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IngressDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MetadataName.IsSet() {
		toSerialize["metadataName"] = o.MetadataName.Get()
	}
	if o.Hosts.IsSet() {
		toSerialize["hosts"] = o.Hosts.Get()
	}
	if o.Namespace.IsSet() {
		toSerialize["namespace"] = o.Namespace.Get()
	}
	if o.Age.IsSet() {
		toSerialize["age"] = o.Age.Get()
	}
	return toSerialize, nil
}

type NullableIngressDto struct {
	value *IngressDto
	isSet bool
}

func (v NullableIngressDto) Get() *IngressDto {
	return v.value
}

func (v *NullableIngressDto) Set(val *IngressDto) {
	v.value = val
	v.isSet = true
}

func (v NullableIngressDto) IsSet() bool {
	return v.isSet
}

func (v *NullableIngressDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIngressDto(val *IngressDto) *NullableIngressDto {
	return &NullableIngressDto{value: val, isSet: true}
}

func (v NullableIngressDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIngressDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
