// Code generated by go-swagger; DO NOT EDIT.

package showback_credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ShowbackCredentialsListReader is a Reader for the ShowbackCredentialsList structure.
type ShowbackCredentialsListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ShowbackCredentialsListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewShowbackCredentialsListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewShowbackCredentialsListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewShowbackCredentialsListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewShowbackCredentialsListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewShowbackCredentialsListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewShowbackCredentialsListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewShowbackCredentialsListOK creates a ShowbackCredentialsListOK with default headers values
func NewShowbackCredentialsListOK() *ShowbackCredentialsListOK {
	return &ShowbackCredentialsListOK{}
}

/*
ShowbackCredentialsListOK describes a response with status code 200, with default header values.

Success
*/
type ShowbackCredentialsListOK struct {
	Payload *ShowbackCredentialsListOKBody
}

// IsSuccess returns true when this showback credentials list o k response has a 2xx status code
func (o *ShowbackCredentialsListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this showback credentials list o k response has a 3xx status code
func (o *ShowbackCredentialsListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback credentials list o k response has a 4xx status code
func (o *ShowbackCredentialsListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this showback credentials list o k response has a 5xx status code
func (o *ShowbackCredentialsListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this showback credentials list o k response a status code equal to that given
func (o *ShowbackCredentialsListOK) IsCode(code int) bool {
	return code == 200
}

func (o *ShowbackCredentialsListOK) Error() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackCredentials][%d] showbackCredentialsListOK  %+v", 200, o.Payload)
}

func (o *ShowbackCredentialsListOK) String() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackCredentials][%d] showbackCredentialsListOK  %+v", 200, o.Payload)
}

func (o *ShowbackCredentialsListOK) GetPayload() *ShowbackCredentialsListOKBody {
	return o.Payload
}

func (o *ShowbackCredentialsListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ShowbackCredentialsListOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackCredentialsListBadRequest creates a ShowbackCredentialsListBadRequest with default headers values
func NewShowbackCredentialsListBadRequest() *ShowbackCredentialsListBadRequest {
	return &ShowbackCredentialsListBadRequest{}
}

/*
ShowbackCredentialsListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ShowbackCredentialsListBadRequest struct {
	Payload *ShowbackCredentialsListBadRequestBody
}

// IsSuccess returns true when this showback credentials list bad request response has a 2xx status code
func (o *ShowbackCredentialsListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this showback credentials list bad request response has a 3xx status code
func (o *ShowbackCredentialsListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback credentials list bad request response has a 4xx status code
func (o *ShowbackCredentialsListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this showback credentials list bad request response has a 5xx status code
func (o *ShowbackCredentialsListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this showback credentials list bad request response a status code equal to that given
func (o *ShowbackCredentialsListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ShowbackCredentialsListBadRequest) Error() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackCredentials][%d] showbackCredentialsListBadRequest  %+v", 400, o.Payload)
}

func (o *ShowbackCredentialsListBadRequest) String() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackCredentials][%d] showbackCredentialsListBadRequest  %+v", 400, o.Payload)
}

func (o *ShowbackCredentialsListBadRequest) GetPayload() *ShowbackCredentialsListBadRequestBody {
	return o.Payload
}

func (o *ShowbackCredentialsListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ShowbackCredentialsListBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackCredentialsListUnauthorized creates a ShowbackCredentialsListUnauthorized with default headers values
func NewShowbackCredentialsListUnauthorized() *ShowbackCredentialsListUnauthorized {
	return &ShowbackCredentialsListUnauthorized{}
}

/*
ShowbackCredentialsListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ShowbackCredentialsListUnauthorized struct {
	Payload *ShowbackCredentialsListUnauthorizedBody
}

// IsSuccess returns true when this showback credentials list unauthorized response has a 2xx status code
func (o *ShowbackCredentialsListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this showback credentials list unauthorized response has a 3xx status code
func (o *ShowbackCredentialsListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback credentials list unauthorized response has a 4xx status code
func (o *ShowbackCredentialsListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this showback credentials list unauthorized response has a 5xx status code
func (o *ShowbackCredentialsListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this showback credentials list unauthorized response a status code equal to that given
func (o *ShowbackCredentialsListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ShowbackCredentialsListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackCredentials][%d] showbackCredentialsListUnauthorized  %+v", 401, o.Payload)
}

func (o *ShowbackCredentialsListUnauthorized) String() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackCredentials][%d] showbackCredentialsListUnauthorized  %+v", 401, o.Payload)
}

func (o *ShowbackCredentialsListUnauthorized) GetPayload() *ShowbackCredentialsListUnauthorizedBody {
	return o.Payload
}

func (o *ShowbackCredentialsListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ShowbackCredentialsListUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackCredentialsListForbidden creates a ShowbackCredentialsListForbidden with default headers values
func NewShowbackCredentialsListForbidden() *ShowbackCredentialsListForbidden {
	return &ShowbackCredentialsListForbidden{}
}

/*
ShowbackCredentialsListForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ShowbackCredentialsListForbidden struct {
	Payload *ShowbackCredentialsListForbiddenBody
}

// IsSuccess returns true when this showback credentials list forbidden response has a 2xx status code
func (o *ShowbackCredentialsListForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this showback credentials list forbidden response has a 3xx status code
func (o *ShowbackCredentialsListForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback credentials list forbidden response has a 4xx status code
func (o *ShowbackCredentialsListForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this showback credentials list forbidden response has a 5xx status code
func (o *ShowbackCredentialsListForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this showback credentials list forbidden response a status code equal to that given
func (o *ShowbackCredentialsListForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ShowbackCredentialsListForbidden) Error() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackCredentials][%d] showbackCredentialsListForbidden  %+v", 403, o.Payload)
}

func (o *ShowbackCredentialsListForbidden) String() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackCredentials][%d] showbackCredentialsListForbidden  %+v", 403, o.Payload)
}

func (o *ShowbackCredentialsListForbidden) GetPayload() *ShowbackCredentialsListForbiddenBody {
	return o.Payload
}

func (o *ShowbackCredentialsListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ShowbackCredentialsListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackCredentialsListNotFound creates a ShowbackCredentialsListNotFound with default headers values
func NewShowbackCredentialsListNotFound() *ShowbackCredentialsListNotFound {
	return &ShowbackCredentialsListNotFound{}
}

/*
ShowbackCredentialsListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ShowbackCredentialsListNotFound struct {
	Payload *ShowbackCredentialsListNotFoundBody
}

// IsSuccess returns true when this showback credentials list not found response has a 2xx status code
func (o *ShowbackCredentialsListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this showback credentials list not found response has a 3xx status code
func (o *ShowbackCredentialsListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback credentials list not found response has a 4xx status code
func (o *ShowbackCredentialsListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this showback credentials list not found response has a 5xx status code
func (o *ShowbackCredentialsListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this showback credentials list not found response a status code equal to that given
func (o *ShowbackCredentialsListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ShowbackCredentialsListNotFound) Error() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackCredentials][%d] showbackCredentialsListNotFound  %+v", 404, o.Payload)
}

func (o *ShowbackCredentialsListNotFound) String() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackCredentials][%d] showbackCredentialsListNotFound  %+v", 404, o.Payload)
}

func (o *ShowbackCredentialsListNotFound) GetPayload() *ShowbackCredentialsListNotFoundBody {
	return o.Payload
}

func (o *ShowbackCredentialsListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ShowbackCredentialsListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowbackCredentialsListInternalServerError creates a ShowbackCredentialsListInternalServerError with default headers values
func NewShowbackCredentialsListInternalServerError() *ShowbackCredentialsListInternalServerError {
	return &ShowbackCredentialsListInternalServerError{}
}

/*
ShowbackCredentialsListInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type ShowbackCredentialsListInternalServerError struct {
}

// IsSuccess returns true when this showback credentials list internal server error response has a 2xx status code
func (o *ShowbackCredentialsListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this showback credentials list internal server error response has a 3xx status code
func (o *ShowbackCredentialsListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this showback credentials list internal server error response has a 4xx status code
func (o *ShowbackCredentialsListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this showback credentials list internal server error response has a 5xx status code
func (o *ShowbackCredentialsListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this showback credentials list internal server error response a status code equal to that given
func (o *ShowbackCredentialsListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ShowbackCredentialsListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackCredentials][%d] showbackCredentialsListInternalServerError ", 500)
}

func (o *ShowbackCredentialsListInternalServerError) String() string {
	return fmt.Sprintf("[GET /showback/v{v}/ShowbackCredentials][%d] showbackCredentialsListInternalServerError ", 500)
}

func (o *ShowbackCredentialsListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
ShowbackCredentialsListBadRequestBody showback credentials list bad request body
swagger:model ShowbackCredentialsListBadRequestBody
*/
type ShowbackCredentialsListBadRequestBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// errors
	// Read Only: true
	Errors map[string][]string `json:"errors,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this showback credentials list bad request body
func (o *ShowbackCredentialsListBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this showback credentials list bad request body based on the context it is used
func (o *ShowbackCredentialsListBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateErrors(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ShowbackCredentialsListBadRequestBody) contextValidateErrors(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (o *ShowbackCredentialsListBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShowbackCredentialsListBadRequestBody) UnmarshalBinary(b []byte) error {
	var res ShowbackCredentialsListBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ShowbackCredentialsListForbiddenBody showback credentials list forbidden body
swagger:model ShowbackCredentialsListForbiddenBody
*/
type ShowbackCredentialsListForbiddenBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this showback credentials list forbidden body
func (o *ShowbackCredentialsListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this showback credentials list forbidden body based on context it is used
func (o *ShowbackCredentialsListForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ShowbackCredentialsListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShowbackCredentialsListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res ShowbackCredentialsListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ShowbackCredentialsListNotFoundBody showback credentials list not found body
swagger:model ShowbackCredentialsListNotFoundBody
*/
type ShowbackCredentialsListNotFoundBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this showback credentials list not found body
func (o *ShowbackCredentialsListNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this showback credentials list not found body based on context it is used
func (o *ShowbackCredentialsListNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ShowbackCredentialsListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShowbackCredentialsListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ShowbackCredentialsListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ShowbackCredentialsListOKBody showback credentials list o k body
swagger:model ShowbackCredentialsListOKBody
*/
type ShowbackCredentialsListOKBody struct {

	// data
	Data []*ShowbackCredentialsListOKBodyDataItems0 `json:"data"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`
}

// Validate validates this showback credentials list o k body
func (o *ShowbackCredentialsListOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ShowbackCredentialsListOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("showbackCredentialsListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("showbackCredentialsListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this showback credentials list o k body based on the context it is used
func (o *ShowbackCredentialsListOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ShowbackCredentialsListOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {
			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("showbackCredentialsListOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("showbackCredentialsListOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ShowbackCredentialsListOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShowbackCredentialsListOKBody) UnmarshalBinary(b []byte) error {
	var res ShowbackCredentialsListOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ShowbackCredentialsListOKBodyDataItems0 showback credentials list o k body data items0
swagger:model ShowbackCredentialsListOKBodyDataItems0
*/
type ShowbackCredentialsListOKBodyDataItems0 struct {

	// created at
	CreatedAt string `json:"createdAt,omitempty"`

	// created by
	CreatedBy string `json:"createdBy,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// is locked
	IsLocked bool `json:"isLocked"`

	// last modified
	LastModified string `json:"lastModified,omitempty"`

	// last modified by
	LastModifiedBy string `json:"lastModifiedBy,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// organization Id
	OrganizationID int32 `json:"organizationId,omitempty"`

	// organization name
	OrganizationName string `json:"organizationName,omitempty"`

	// password
	Password string `json:"password,omitempty"`

	// rules
	Rules []*ShowbackCredentialsListOKBodyDataItems0RulesItems0 `json:"rules"`

	// url
	URL string `json:"url,omitempty"`

	// username
	Username string `json:"username,omitempty"`
}

// Validate validates this showback credentials list o k body data items0
func (o *ShowbackCredentialsListOKBodyDataItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRules(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ShowbackCredentialsListOKBodyDataItems0) validateRules(formats strfmt.Registry) error {
	if swag.IsZero(o.Rules) { // not required
		return nil
	}

	for i := 0; i < len(o.Rules); i++ {
		if swag.IsZero(o.Rules[i]) { // not required
			continue
		}

		if o.Rules[i] != nil {
			if err := o.Rules[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("rules" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("rules" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this showback credentials list o k body data items0 based on the context it is used
func (o *ShowbackCredentialsListOKBodyDataItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateRules(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ShowbackCredentialsListOKBodyDataItems0) contextValidateRules(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Rules); i++ {

		if o.Rules[i] != nil {
			if err := o.Rules[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("rules" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("rules" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ShowbackCredentialsListOKBodyDataItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShowbackCredentialsListOKBodyDataItems0) UnmarshalBinary(b []byte) error {
	var res ShowbackCredentialsListOKBodyDataItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ShowbackCredentialsListOKBodyDataItems0RulesItems0 showback credentials list o k body data items0 rules items0
swagger:model ShowbackCredentialsListOKBodyDataItems0RulesItems0
*/
type ShowbackCredentialsListOKBodyDataItems0RulesItems0 struct {

	// id
	ID int32 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this showback credentials list o k body data items0 rules items0
func (o *ShowbackCredentialsListOKBodyDataItems0RulesItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this showback credentials list o k body data items0 rules items0 based on context it is used
func (o *ShowbackCredentialsListOKBodyDataItems0RulesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ShowbackCredentialsListOKBodyDataItems0RulesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShowbackCredentialsListOKBodyDataItems0RulesItems0) UnmarshalBinary(b []byte) error {
	var res ShowbackCredentialsListOKBodyDataItems0RulesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ShowbackCredentialsListUnauthorizedBody showback credentials list unauthorized body
swagger:model ShowbackCredentialsListUnauthorizedBody
*/
type ShowbackCredentialsListUnauthorizedBody struct {

	// detail
	Detail string `json:"detail,omitempty"`

	// instance
	Instance string `json:"instance,omitempty"`

	// status
	Status int32 `json:"status,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this showback credentials list unauthorized body
func (o *ShowbackCredentialsListUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this showback credentials list unauthorized body based on context it is used
func (o *ShowbackCredentialsListUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ShowbackCredentialsListUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ShowbackCredentialsListUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res ShowbackCredentialsListUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
