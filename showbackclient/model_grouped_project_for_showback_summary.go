/*
Taikun - Showback API

This Api will be responsible for overall data distribution and authorization.

API version: v1
Contact: noreply@taikun.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package taikunshowback

import (
	"encoding/json"
)

// checks if the GroupedProjectForShowbackSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupedProjectForShowbackSummary{}

// GroupedProjectForShowbackSummary struct for GroupedProjectForShowbackSummary
type GroupedProjectForShowbackSummary struct {
	Id         NullableInt32  `json:"id,omitempty"`
	Name       NullableString `json:"name,omitempty"`
	TotalPrice *float64       `json:"totalPrice,omitempty"`
	IsDeleted  NullableBool   `json:"isDeleted,omitempty"`
}

// NewGroupedProjectForShowbackSummary instantiates a new GroupedProjectForShowbackSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupedProjectForShowbackSummary() *GroupedProjectForShowbackSummary {
	this := GroupedProjectForShowbackSummary{}
	return &this
}

// NewGroupedProjectForShowbackSummaryWithDefaults instantiates a new GroupedProjectForShowbackSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupedProjectForShowbackSummaryWithDefaults() *GroupedProjectForShowbackSummary {
	this := GroupedProjectForShowbackSummary{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GroupedProjectForShowbackSummary) GetId() int32 {
	if o == nil || IsNil(o.Id.Get()) {
		var ret int32
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupedProjectForShowbackSummary) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *GroupedProjectForShowbackSummary) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt32 and assigns it to the Id field.
func (o *GroupedProjectForShowbackSummary) SetId(v int32) {
	o.Id.Set(&v)
}

// SetIdNil sets the value for Id to be an explicit nil
func (o *GroupedProjectForShowbackSummary) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *GroupedProjectForShowbackSummary) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GroupedProjectForShowbackSummary) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupedProjectForShowbackSummary) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *GroupedProjectForShowbackSummary) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *GroupedProjectForShowbackSummary) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *GroupedProjectForShowbackSummary) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *GroupedProjectForShowbackSummary) UnsetName() {
	o.Name.Unset()
}

// GetTotalPrice returns the TotalPrice field value if set, zero value otherwise.
func (o *GroupedProjectForShowbackSummary) GetTotalPrice() float64 {
	if o == nil || IsNil(o.TotalPrice) {
		var ret float64
		return ret
	}
	return *o.TotalPrice
}

// GetTotalPriceOk returns a tuple with the TotalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupedProjectForShowbackSummary) GetTotalPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalPrice) {
		return nil, false
	}
	return o.TotalPrice, true
}

// HasTotalPrice returns a boolean if a field has been set.
func (o *GroupedProjectForShowbackSummary) HasTotalPrice() bool {
	if o != nil && !IsNil(o.TotalPrice) {
		return true
	}

	return false
}

// SetTotalPrice gets a reference to the given float64 and assigns it to the TotalPrice field.
func (o *GroupedProjectForShowbackSummary) SetTotalPrice(v float64) {
	o.TotalPrice = &v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GroupedProjectForShowbackSummary) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted.Get()) {
		var ret bool
		return ret
	}
	return *o.IsDeleted.Get()
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupedProjectForShowbackSummary) GetIsDeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsDeleted.Get(), o.IsDeleted.IsSet()
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *GroupedProjectForShowbackSummary) HasIsDeleted() bool {
	if o != nil && o.IsDeleted.IsSet() {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given NullableBool and assigns it to the IsDeleted field.
func (o *GroupedProjectForShowbackSummary) SetIsDeleted(v bool) {
	o.IsDeleted.Set(&v)
}

// SetIsDeletedNil sets the value for IsDeleted to be an explicit nil
func (o *GroupedProjectForShowbackSummary) SetIsDeletedNil() {
	o.IsDeleted.Set(nil)
}

// UnsetIsDeleted ensures that no value is present for IsDeleted, not even an explicit nil
func (o *GroupedProjectForShowbackSummary) UnsetIsDeleted() {
	o.IsDeleted.Unset()
}

func (o GroupedProjectForShowbackSummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupedProjectForShowbackSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if !IsNil(o.TotalPrice) {
		toSerialize["totalPrice"] = o.TotalPrice
	}
	if o.IsDeleted.IsSet() {
		toSerialize["isDeleted"] = o.IsDeleted.Get()
	}
	return toSerialize, nil
}

type NullableGroupedProjectForShowbackSummary struct {
	value *GroupedProjectForShowbackSummary
	isSet bool
}

func (v NullableGroupedProjectForShowbackSummary) Get() *GroupedProjectForShowbackSummary {
	return v.value
}

func (v *NullableGroupedProjectForShowbackSummary) Set(val *GroupedProjectForShowbackSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupedProjectForShowbackSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupedProjectForShowbackSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupedProjectForShowbackSummary(val *GroupedProjectForShowbackSummary) *NullableGroupedProjectForShowbackSummary {
	return &NullableGroupedProjectForShowbackSummary{value: val, isSet: true}
}

func (v NullableGroupedProjectForShowbackSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupedProjectForShowbackSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
