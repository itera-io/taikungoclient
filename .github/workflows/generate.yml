name: Generate Client
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  build:
    name: Generate
    runs-on: self-hosted
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'main'

      - name: Download swagger.json
        run: wget -q --user "$SWAGGER_USERNAME" --password "$SWAGGER_PASSWORD" "$SWAGGER_URL" -O swagger.json
        shell: bash
        env:
          SWAGGER_USERNAME: ${{ secrets.SWAGGER_USERNAME }}
          SWAGGER_PASSWORD: ${{ secrets.SWAGGER_PASSWORD }}
          SWAGGER_URL: ${{ secrets.SWAGGER_URL }}

      - name: Should regenerate client
        id: check
        shell: bash
        run: ./.github/should_regenerate_client.sh
        continue-on-error: true

      - name: Setup Git
        if: steps.check.outcome == 'success'
        shell: bash
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Set up Go
        if: steps.check.outcome == 'success'
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'

      - name: Install Go-Swagger
        if: steps.check.outcome == 'success'
        shell: bash
        run: |
          download_url=$(curl -s https://api.github.com/repos/go-swagger/go-swagger/releases/latest | jq -r '.assets[] | select(.name | contains("'"$(uname | tr '[:upper:]' '[:lower:]')"'_amd64")) | .browser_download_url')
          curl -o swagger -L'#' "$download_url"
          chmod +x swagger

      - name: Generate Client
        if: steps.check.outcome == 'success'
        run: ./.github/generate_client.sh --skip-validation
        shell: bash

      - name: Delete swagger.json
        if: steps.check.outcome == 'success'
        run: rm swagger.json
        shell: bash

      - name: Delete go-swagger
        if: steps.check.outcome == 'success'
        run: rm swagger
        shell: bash

      - name: Commit
        if: steps.check.outcome == 'success'
        shell: bash
        run: |
          git add .
          git commit -m "feat: update generated client"

      - name: Push
        if: steps.check.outcome == 'success'
        shell: bash
        run: git push
